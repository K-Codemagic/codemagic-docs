commit 61a3af35c26ed3740513523157753ba3a7b3d379
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Tue Aug 10 13:22:07 2021 +0300

    Fix visibility (use hugo 0.79)

diff --git a/config.yaml b/config.yaml
index 03819b8..bb231e2 100644
--- a/config.yaml
+++ b/config.yaml
@@ -32,7 +32,7 @@ defaultContentLanguage: en
 disable404: true
 enableGitInfo: true
 
-pluralizeListTitles: false
+sectionPagesMenu: 'main'
 menu:
   main:
     - identifier: getting-started
@@ -82,7 +82,7 @@ menu:
       name: Publishing
       parent: flutter
       weight: 4
-    
+ 
     - identifier: configuration
       name: Advanced configuration
       weight: 4
@@ -103,12 +103,18 @@ menu:
       weight: 9
     - identifier: specs
       name: Build machine specs
+
+    - identifier: running-locally
+      params:
+        visibility: 'none'
+    - identifier: notes
+      params:
+        visibility: 'none'
+
   extra:
     - identifier: running-locally
-      name: Codemagic CLI tools
       weight: 1
     - identifier: notes
-      name: Changelog
       weight: 2
 
 mediaTypes:
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 6654f6a..fda6ddd 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -2,17 +2,19 @@
   {{ $currentPage := .currentPage}}
   <ul>
     {{ range .menuItems }}
-      <li class="{{ if or ( $currentPage.IsMenuCurrent "main" . ) ( $currentPage.HasMenuCurrent "main" . ) }}open{{ end }}" data-js-docs-menu-item>
-        <div class="category-name" data-js-category-name>{{ .Name }}</div>
-        <div class="category-posts" data-js-category-posts>
-          {{ if .HasChildren }}
-            {{ template "main-menu" ( dict "menuItems" .Children "currentPage" $currentPage ) }}
-          {{ end }}
-          {{ range where site.Pages "Section" .Identifier }}
-            <a class="{{ if eq $currentPage . }}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
-          {{ end }}
-        </div>
-      </li>
+      {{ if not ( eq ( echoParam .Params "visibility" ) "none" ) }}
+        <li class="{{ if or ( $currentPage.IsMenuCurrent "main" . ) ( $currentPage.HasMenuCurrent "main" . ) }}open{{ end }}" data-js-docs-menu-item>
+          <div class="category-name" data-js-category-name>{{ .Name }}</div>
+          <div class="category-posts" data-js-category-posts>
+            {{ if .HasChildren }}
+              {{ template "main-menu" ( dict "menuItems" .Children "currentPage" $currentPage ) }}
+            {{ end }}
+            {{ range where site.Pages "Section" .Identifier }}
+              <a class="{{ if eq $currentPage . }}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
+            {{ end }}
+          </div>
+        </li>
+      {{ end }}
     {{ end }}
   </ul>
 {{ end }}

commit f6fc3bcd620d1a61c3c4286beceee8b24e9b9cef
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Mon Aug 9 18:46:59 2021 +0300

    Syntax

diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 4ffc7f1..6654f6a 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -2,15 +2,15 @@
   {{ $currentPage := .currentPage}}
   <ul>
     {{ range .menuItems }}
-      <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}" data-js-docs-menu-item>
+      <li class="{{ if or ( $currentPage.IsMenuCurrent "main" . ) ( $currentPage.HasMenuCurrent "main" . ) }}open{{ end }}" data-js-docs-menu-item>
         <div class="category-name" data-js-category-name>{{ .Name }}</div>
         <div class="category-posts" data-js-category-posts>
-          {{- if .HasChildren }}
-            {{ template "main-menu" (dict "menuItems" .Children "currentPage" $currentPage)}}
-          {{- end }}
-          {{ range where site.Pages "Section" .Identifier -}}
-            <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
-          {{- end }}
+          {{ if .HasChildren }}
+            {{ template "main-menu" ( dict "menuItems" .Children "currentPage" $currentPage ) }}
+          {{ end }}
+          {{ range where site.Pages "Section" .Identifier }}
+            <a class="{{ if eq $currentPage . }}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
+          {{ end }}
         </div>
       </li>
     {{ end }}
@@ -33,8 +33,8 @@
 {{ end }}
 
 <nav id="docs-menu" data-js-docs-menu>
-  {{ template "main-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}}
-  {{ template "extra-menu" (dict "menuItems" .Site.Menus.extra "currentPage" .)}}
+  {{ template "main-menu" ( dict "menuItems" .Site.Menus.main "currentPage" . ) }}
+  {{ template "extra-menu" ( dict "menuItems" .Site.Menus.extra "currentPage" . ) }}
   <div class="external-links">
     <a id="codemagic-landing-link" onclick="sendGtag('Codemagic_clicked', 'DocumentationMenu')" href="https://codemagic.io/start" target="_blank">Codemagic</a>
     <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Blog</a>

commit 444f3ada81d57c8c2c267d77c79c9cf30f0c9fe4
Merge: 8417c31 0929967
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Mon Aug 9 18:26:43 2021 +0300

    Merge branch 'feature/separate-file-and-ui-configuration' of github.com:codemagic-ci-cd/codemagic-docs into feature/separate-file-and-ui-configuration

commit 8417c31f84a32303730e970e372b1173a863c303
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Mon Aug 9 18:26:27 2021 +0300

    Algolia search results filter

diff --git a/assets/js/main.js b/assets/js/main.js
index 5d2ae9b..dd2a81b 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -1,5 +1,8 @@
 const desktopScreenWidth = 1001
 
+const preferredConfigurations = ['yaml', 'flutter']
+const defaultPreferredConfiguration = preferredConfigurations[0]
+
 $('[data-js-docs-menu-item].open').parents('[data-js-docs-menu-item]').addClass('open')
 
 // Open - open only current category
diff --git a/assets/js/search.js b/assets/js/search.js
index 108bff8..18771d5 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -91,6 +91,19 @@ const getResultHtml = (algoliaResultList, query) => {
         })
     }
 
+    const preferredConfiguration = localStorage.getItem('preferred-configuration') || defaultPreferredConfiguration
+    algoliaResultList = algoliaResultList.filter(function (result) {
+        let resultConfiguration = null
+        preferredConfigurations.some(function (configuration) {
+            if (result.uri.startsWith(`/${configuration}`)) {
+                resultConfiguration = configuration
+                return true
+            }
+        })
+
+        return !resultConfiguration || resultConfiguration === preferredConfiguration
+    })
+
     if (!algoliaResultList.length) {
         return $('<div>', {
             class: 'no-results-message',

commit 09299677d8b4fad419fa25d852b50372898afc39
Merge: 3618ba7 c60cd15
Author: Helina Ariva <helina@nevercode.io>
Date:   Mon Aug 9 18:13:20 2021 +0300

    Merge branch 'feature/separate-file-and-ui-configuration' of github.com:codemagic-ci-cd/codemagic-docs into feature/separate-file-and-ui-configuration

commit 3618ba7dc65436d9caf364fe59c58ef3127105a1
Author: Helina Ariva <helina@nevercode.io>
Date:   Mon Aug 9 18:08:29 2021 +0300

    split adding apps to new pages

diff --git a/config.yaml b/config.yaml
index f919065..3275941 100644
--- a/config.yaml
+++ b/config.yaml
@@ -108,7 +108,7 @@ menu:
       name: Codemagic CLI tools
       weight: 10
     - identifier: notes
-      name: Codemagic release log
+      name: Changelog
       weight: 11
  
 mediaTypes:
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
deleted file mode 100644
index 9b9cb9a..0000000
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ /dev/null
@@ -1,132 +0,0 @@
----
-description: How to add an app to Codemagic from any private or public repository
-title: Adding repositories
-weight: 2
-aliases: /yaml-quick-start/adding-apps-from-custom-sources
----
-
-Add applications from any self-hosted or cloud-based Git repository. For the best integration with the Git provider, it's recommended to connect your GitHub, Bitbucket or GitLab repositories using the repository integration. However, you can also add repositories by entering the clone URL of the repository. 
-
-To get started, click **Add application** in the top right corner of the Applications page. 
-
-## Adding apps from GitHub
-
-Adding apps from GitHub requires authorizing Codemagic and installing the Codemagic CI/CD GitHub App to a GitHub account or an organization to be able to load the repositories.
-
-1. Click **Add application** in the top right corner of the Applications page.
-2. Select **GitHub** as the Git provider. If you have already set up the integration, click **Next: Select repository** and skip to step 4. If the GitHub integration has not been set up, you'll see click **Next: Authorize integration** instead. A new window appears for you to authorize Codemagic. Confirm the authorization by clicking **Authorize Codemagic CI/CD**.
-3. In the next step, click **Install GitHub App** to set up the integration. A GitHub page opens in a new window. Select the account or an organization where to install the app and choose whether to give Codemagic access to all the repositories from this account or only selected ones. Finish the installation by clicking **Install & Authorize**.
-4. Finally, set up the application by selecting the repository from the dropdown menu and specifying the project type. Click **Finish: Add application**. You will be then redirected to the app settings.
-
->See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
-
-### Configuring the GitHub App integration
-
-Codemagic uses the [Codemagic CI/CD GitHub App](https://github.com/apps/codemagic-ci-cd) to integrate with GitHub. To share your GitHub repositories with Codemagic, Codemagic GitHub App will have to be installed on the account or organization in GitHub from which you would like to build applications.
-
-{{<notebox>}}
-Note that the GitHub App integration can be connected separately for your personal account and each team. The integrations configured for your personal account apply to the apps that are not part of a team in Codemagic. While teams inherit the integrations from the team owner's personal account, it is highly recommended to set up repository integrations separately in team settings.
-{{</notebox>}}
-
-1. In your user or team settings in Codemagic, navigate to the Integrations section and locate the GitHub App integration. The next steps may vary slightly depending on whether you have already authorized Codemagic or have the Codemagic GitHub App installed.
-2. Click **Connect** next to the GitHub App integration, and when redirected to GitHub, click **Authorize Codemagic**.
-3. Back in the Integrations section, click **Finish installation** and then **Install app**. Note that at this stage you can also revoke your authorization of the app by clicking **Disconnect**.
-4. A popup window opens for you to select the organization or account where to install the app. Pick the installation location. You can later install the app to additional accounts.
-5. Then choose whether to share **All repositories** from the account or select the repositories to share by choosing **Select repositories only**.
-6. Click **Install & Authorize** to finish installation (you may be asked to confirm that action by entering your password). If you do not have permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation.
-
-### Managing connected GitHub accounts and organizations
-
-In the Integrations section in your user or team settings, click **Manage integration > Configure**. You can then select an account to configure or install Codemagic GitHub App to additional accounts. The accounts that already have Codemagic GitHub App installed are marked with "Configure". 
-
-![Integrations > GitHub App > Manage integration > Configure](../uploads/gh-app-conf.png)
-
-You can also access the same settings in GitHub by going directly to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd) and clicking **Configure**.
-
-These settings allow you to revisit your repository access configuration should you want to share access to additional repositories or revoke access to a previously shared repository. In addition, you can disconnect an account by clicking **Uninstall** in the danger zone.
-
-If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter.
-
-### Disconnecting Codemagic GitHub App integration
-
-The Codemagic CI/CD GitHub App integration can be disabled by clicking **Manage integration > Disconnect** in **User settings > Integrations > GitHub App** for your personal account or in **Team settings > Team Integrations > GitHub App** to disconnect it from the team. This will delete the GitHub access token that Codemagic had stored which means we no longer interact with GitHub.
-
-To completely remove the integration, **uninstall** the Codemagic CI/CD app and revoke the authorization in GitHub. Visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or github.com/organizations/your-organization/settings/installations for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
-
-### Repository is unavailable
-
-Here are some tips on what to check if you can't see your repository listed in Codemagic or it's shown as unavailable.
-
-* If you chose to grant access to **select repositories only** as opposed to all repositories when setting up the GitHub App, make sure you have also granted access to the repository in question. Click **Manage integration > Configure** in team or user integrations to configure repository access settings.
-* Your personal Codemagic account and each team have separate integrations. Make sure you have connected the GitHub App integration to the right team or in your user settings.
-* If you build apps from different GitHub accounts or organizations, make sure that you have installed the GitHub App on the account that has the repository available. Click **Manage integration > Configure** to see which accounts have been connected. You can also visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or github(dot)com/organizations/your-organization/settings/installations for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
-* Private GitHub repositories can be shared with Codemagic only when the GitHub App is installed on the account that owns the repository. If you are a collaborator to a private repository, please ask the repository owner to install Codemagic GitHub App in GitHub: [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd)
-
-## Adding apps from Bitbucket
-
-Adding apps from Bitbucket requires granting access to your Bitbucket account to enable the integration and load repositories.
-
-1. Click **Add application** in the top right corner of the Applications page.
-2. Select **Bitbucket** as the Git provider and click **Next: Authorize integration**. A new window appears for you to authorize Codemagic. Confirm the authorization by clicking **Grant access**. If you have already authorized Bitbucket, click **Next: Select repository** instead.
-3. Set up the application by selecting the repository from the dropdown menu and specifying the project type. Click **Finish: Add application**. You will be then redirected to the app settings.
-
->See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
-
-## Adding apps from GitLab
-
-Adding apps from GitLab requires granting access to your GitLab account to enable the integration and load repositories.
-
-1. Click **Add application** in the top right corner of the Applications page.
-2. Select **GitLab** as the Git provider and click **Next: Authorize integration**. A new window appears for you to authorize Codemagic. Confirm the authorization by clicking **Authorize**. If you have already authorized GitLab, click **Next: Select repository** instead.
-3. Set up the application by selecting the repository from the dropdown menu and specifying the project type. Click **Finish: Add application**. You will be then redirected to the app settings.
-
->See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
-
-## Adding apps from other repositories
-
-Apps that cannot be added via a repository integration can be cloned from a URL. Authentication for private repositories can be set up via HTTPS or SSH.
-### Connecting repository via SSH
-
-1. Click **Add application** in the top right corner of the Applications page.
-2. Select **Other** and click **Next: Select repository**.
-3. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository by clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `git@example.com:username/repo.git`.
-4. Upload the **SSH private key** file. If your key is password-protected, enter the **Private key passphrase**.
-
-   **Alternatively**, you can click **Generate key pair** and have Codemagic create an SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
-
-5. Finish setting up the application by selecting the project type and clicking **Finish: Add application**. You will be then redirected to the app settings.
-
->See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
-
-#### Generating a key pair in Codemagic
-
-On clicking **Generate key pair**, Codemagic creates a secure 4096 bit SSH key pair. The private key will be used in Codemagic and the public key must be added to your repository settings. Click **Copy to clipboard** to copy the public key.
-
-- If your repository is hosted on [GitHub](https://developer.github.com/v3/guides/managing-deploy-keys/#setup-2), [GitLab](https://www.deployhq.com/support/projects/updating-your-project-repository/uploading-your-public-key-to-gitlab-manually) or [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), add the public key to your repository's access/deployment keys.
-- For self-hosted repositories, request your git server admins to allow access to the provided public key.
-
-After you have added the public key to your repository settings, finish adding the app by clicking **Finish: Add application**.
-
-{{<notebox>}}Don't close the module before you have finished adding the app, otherwise, you'll need to start over and generate a new SSH key.{{</notebox>}}
-
-### Connecting repository via HTTP/HTTPS
-
-1. Click **Add application** in the top right corner of the Applications page.
-2. Select **Other** and click **Next: Select repository**.
-3. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository by clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
-4. If your repository is private, then enter your **Username** and **Password**. In the case of a public repository, check **Public repository**.
-5. Finish setting up the application by selecting the project type and clicking **Finish: Add application**. You will be then redirected to the app settings.
-
->See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
-
-## Repositories behind a firewall
-
-To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
-
-1. `34.74.234.56` - used by our backend for getting basic information about the repository
-2. `35.185.76.207` - used by our Linux build servers to download the code and build it
-3. `199.7.162.128/29` - used by our macOS build servers to download the code and build it
-
-## Modifying repository access settings
-
-When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. You can also generate a new private key. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.
diff --git a/content/getting-started/bitbucket.md b/content/getting-started/bitbucket.md
new file mode 100644
index 0000000..0a2490e
--- /dev/null
+++ b/content/getting-started/bitbucket.md
@@ -0,0 +1,16 @@
+---
+description: How to add an app to Codemagic from Bitbucket
+title: Adding apps from Bitbucket
+weight: 4
+aliases:
+---
+
+For the best integration with the Git provider, it’s recommended to connect your Bitbucket repositories using the repository integration built in to Codemagic. 
+
+Adding apps from Bitbucket requires granting access to your Bitbucket account to enable the integration and load repositories.
+
+1. Click **Add application** in the top right corner of the Applications page.
+2. Select **Bitbucket** as the Git provider and click **Next: Authorize integration**. A new window appears for you to authorize Codemagic. Confirm the authorization by clicking **Grant access**. If you have already authorized Bitbucket, click **Next: Select repository** instead.
+3. Set up the application by selecting the repository from the dropdown menu and specifying the project type. Click **Finish: Add application**. You will be then redirected to the app settings.
+
+>See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
diff --git a/content/getting-started/firewall.md b/content/getting-started/firewall.md
new file mode 100644
index 0000000..6ad3be2
--- /dev/null
+++ b/content/getting-started/firewall.md
@@ -0,0 +1,12 @@
+---
+description: Accessing private repositories
+title: Repositories behind a firewall
+weight: 7
+aliases:
+---
+
+To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
+
+1. `34.74.234.56` - used by our backend for getting basic information about the repository
+2. `35.185.76.207` - used by our Linux build servers to download the code and build it
+3. `199.7.162.128/29` - used by our macOS build servers to download the code and build it
diff --git a/content/getting-started/github.md b/content/getting-started/github.md
new file mode 100644
index 0000000..088fb9b
--- /dev/null
+++ b/content/getting-started/github.md
@@ -0,0 +1,61 @@
+---
+description: How to add an app to Codemagic via GitHub App
+title: Adding apps from GitHub
+weight: 3
+aliases:
+  - '../getting-started/codemagic-github-app'
+  - '../getting-started/github-organization-accounts'
+---
+
+For the best integration with the Git provider, it’s recommended to connect your GitHub repositories using the repository integration built in to Codemagic. 
+
+Adding apps from GitHub requires authorizing Codemagic and installing the Codemagic CI/CD GitHub App to a GitHub account or an organization to be able to load the repositories.
+
+1. Click **Add application** in the top right corner of the Applications page.
+2. Select **GitHub** as the Git provider. If you have already set up the integration, click **Next: Select repository** and skip to step 4. If the GitHub integration has not been set up, you'll see click **Next: Authorize integration** instead. A new window appears for you to authorize Codemagic. Confirm the authorization by clicking **Authorize Codemagic CI/CD**.
+3. In the next step, click **Install GitHub App** to set up the integration. A GitHub page opens in a new window. Select the account or an organization where to install the app and choose whether to give Codemagic access to all the repositories from this account or only selected ones. Finish the installation by clicking **Install & Authorize**.
+4. Finally, set up the application by selecting the repository from the dropdown menu and specifying the project type. Click **Finish: Add application**. You will be then redirected to the app settings.
+
+>See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
+
+## Configuring the GitHub App integration
+
+Codemagic uses the [Codemagic CI/CD GitHub App](https://github.com/apps/codemagic-ci-cd) to integrate with GitHub. To share your GitHub repositories with Codemagic, Codemagic GitHub App will have to be installed on the account or organization in GitHub from which you would like to build applications.
+
+{{<notebox>}}
+Note that the GitHub App integration can be connected separately for your personal account and each team. The integrations configured for your personal account apply to the apps that are not part of a team in Codemagic. While teams inherit the integrations from the team owner's personal account, it is highly recommended to set up repository integrations separately in team settings.
+{{</notebox>}}
+
+1. In your user or team settings in Codemagic, navigate to the Integrations section and locate the GitHub App integration. The next steps may vary slightly depending on whether you have already authorized Codemagic or have the Codemagic GitHub App installed.
+2. Click **Connect** next to the GitHub App integration, and when redirected to GitHub, click **Authorize Codemagic**.
+3. Back in the Integrations section, click **Finish installation** and then **Install app**. Note that at this stage you can also revoke your authorization of the app by clicking **Disconnect**.
+4. A popup window opens for you to select the organization or account where to install the app. Pick the installation location. You can later install the app to additional accounts.
+5. Then choose whether to share **All repositories** from the account or select the repositories to share by choosing **Select repositories only**.
+6. Click **Install & Authorize** to finish installation (you may be asked to confirm that action by entering your password). If you do not have permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation.
+
+## Managing connected GitHub accounts and organizations
+
+In the Integrations section in your user or team settings, click **Manage integration > Configure**. You can then select an account to configure or install Codemagic GitHub App to additional accounts. The accounts that already have Codemagic GitHub App installed are marked with "Configure". 
+
+![Integrations > GitHub App > Manage integration > Configure](../uploads/gh-app-conf.png)
+
+You can also access the same settings in GitHub by going directly to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd) and clicking **Configure**.
+
+These settings allow you to revisit your repository access configuration should you want to share access to additional repositories or revoke access to a previously shared repository. In addition, you can disconnect an account by clicking **Uninstall** in the danger zone.
+
+If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter.
+
+## Disconnecting Codemagic GitHub App integration
+
+The Codemagic CI/CD GitHub App integration can be disabled by clicking **Manage integration > Disconnect** in **User settings > Integrations > GitHub App** for your personal account or in **Team settings > Team Integrations > GitHub App** to disconnect it from the team. This will delete the GitHub access token that Codemagic had stored which means we no longer interact with GitHub.
+
+To completely remove the integration, **uninstall** the Codemagic CI/CD app and revoke the authorization in GitHub. Visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or github.com/organizations/your-organization/settings/installations for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
+
+## Repository is unavailable
+
+Here are some tips on what to check if you can't see your repository listed in Codemagic or it's shown as unavailable.
+
+* If you chose to grant access to **select repositories only** as opposed to all repositories when setting up the GitHub App, make sure you have also granted access to the repository in question. Click **Manage integration > Configure** in team or user integrations to configure repository access settings.
+* Your personal Codemagic account and each team have separate integrations. Make sure you have connected the GitHub App integration to the right team or in your user settings.
+* If you build apps from different GitHub accounts or organizations, make sure that you have installed the GitHub App on the account that has the repository available. Click **Manage integration > Configure** to see which accounts have been connected. You can also visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or github(dot)com/organizations/your-organization/settings/installations for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
+* Private GitHub repositories can be shared with Codemagic only when the GitHub App is installed on the account that owns the repository. If you are a collaborator to a private repository, please ask the repository owner to install Codemagic GitHub App in GitHub: [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd)
diff --git a/content/getting-started/gitlab.md b/content/getting-started/gitlab.md
new file mode 100644
index 0000000..dce84ac
--- /dev/null
+++ b/content/getting-started/gitlab.md
@@ -0,0 +1,16 @@
+---
+description: How to add an app to Codemagic from GitLab
+title: Adding apps from GitLab
+weight: 5
+aliases:
+---
+
+For the best integration with the Git provider, it’s recommended to connect your GitLab repositories using the repository integration built in to Codemagic. 
+
+Adding apps from GitLab requires granting access to your GitLab account to enable the integration and load repositories.
+
+1. Click **Add application** in the top right corner of the Applications page.
+2. Select **GitLab** as the Git provider and click **Next: Authorize integration**. A new window appears for you to authorize Codemagic. Confirm the authorization by clicking **Authorize**. If you have already authorized GitLab, click **Next: Select repository** instead.
+3. Set up the application by selecting the repository from the dropdown menu and specifying the project type. Click **Finish: Add application**. You will be then redirected to the app settings.
+
+>See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
diff --git a/content/getting-started/modifying-access.md b/content/getting-started/modifying-access.md
new file mode 100644
index 0000000..26931fc
--- /dev/null
+++ b/content/getting-started/modifying-access.md
@@ -0,0 +1,9 @@
+---
+description: 
+title: Modifying repository access settings
+weight: 8
+aliases:
+---
+
+When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. You can also generate a new private key. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.
+
diff --git a/content/getting-started/other.md b/content/getting-started/other.md
new file mode 100644
index 0000000..3c90d30
--- /dev/null
+++ b/content/getting-started/other.md
@@ -0,0 +1,43 @@
+---
+description: How to add an app to Codemagic from any private or public repository
+title: Adding apps from other repositories
+weight: 6
+aliases: /getting-started/adding-apps-from-custom-sources
+
+---
+
+Apps that cannot be added via a repository integration can be cloned from a URL. Authentication for private repositories can be set up via HTTPS or SSH.
+
+## Connecting repository via SSH
+
+1. Click **Add application** in the top right corner of the Applications page.
+2. Select **Other** and click **Next: Select repository**.
+3. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository by clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `git@example.com:username/repo.git`.
+4. Upload the **SSH private key** file. If your key is password-protected, enter the **Private key passphrase**.
+
+   **Alternatively**, you can click **Generate key pair** and have Codemagic create an SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
+
+5. Finish setting up the application by selecting the project type and clicking **Finish: Add application**. You will be then redirected to the app settings.
+
+>See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
+
+### Generating a key pair in Codemagic
+
+On clicking **Generate key pair**, Codemagic creates a secure 4096 bit SSH key pair. The private key will be used in Codemagic and the public key must be added to your repository settings. Click **Copy to clipboard** to copy the public key.
+
+- If your repository is hosted on [GitHub](https://developer.github.com/v3/guides/managing-deploy-keys/#setup-2), [GitLab](https://www.deployhq.com/support/projects/updating-your-project-repository/uploading-your-public-key-to-gitlab-manually) or [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), add the public key to your repository's access/deployment keys.
+- For self-hosted repositories, request your git server admins to allow access to the provided public key.
+
+After you have added the public key to your repository settings, finish adding the app by clicking **Finish: Add application**.
+
+{{<notebox>}}Don't close the module before you have finished adding the app, otherwise, you'll need to start over and generate a new SSH key.{{</notebox>}}
+
+## Connecting repository via HTTP/HTTPS
+
+1. Click **Add application** in the top right corner of the Applications page.
+2. Select **Other** and click **Next: Select repository**.
+3. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository by clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
+4. If your repository is private, then enter your **Username** and **Password**. In the case of a public repository, check **Public repository**.
+5. Finish setting up the application by selecting the project type and clicking **Finish: Add application**. You will be then redirected to the app settings.
+
+>See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
diff --git a/content/getting-started/projects.md b/content/getting-started/projects.md
index ee3a80b..a613ec5 100644
--- a/content/getting-started/projects.md
+++ b/content/getting-started/projects.md
@@ -1,6 +1,6 @@
 ---
 title: Project types
-weight: 3
+weight: 2
 aliases:
 ---
 
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 0e2068f..9fbd6af 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -2,8 +2,6 @@
 title: Signup
 weight: 1
 aliases:
-  - '../getting-started/codemagic-github-app'
-  - '../getting-started/github-organization-accounts'
 ---
 
 You can sign up to Codemagic using a [GitHub](https://github.com/), [Bitbucket](https://bitbucket.org/) or [GitLab](https://about.gitlab.com/) account, or via email. SSO integrations for enterprises are available on request.

commit c60cd15f34f983d7c3cc40d7ec107fc72a4ea268
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Mon Aug 9 17:29:21 2021 +0300

    Syntax

diff --git a/config.yaml b/config.yaml
index f919065..01e2b37 100644
--- a/config.yaml
+++ b/config.yaml
@@ -106,11 +106,11 @@ menu:
   extra:
     - identifier: running-locally
       name: Codemagic CLI tools
-      weight: 10
+      weight: 1
     - identifier: notes
       name: Codemagic release log
-      weight: 11
- 
+      weight: 2
+
 mediaTypes:
   video/mp4:
     suffixes:
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 4ffc7f1..6654f6a 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -2,15 +2,15 @@
   {{ $currentPage := .currentPage}}
   <ul>
     {{ range .menuItems }}
-      <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}" data-js-docs-menu-item>
+      <li class="{{ if or ( $currentPage.IsMenuCurrent "main" . ) ( $currentPage.HasMenuCurrent "main" . ) }}open{{ end }}" data-js-docs-menu-item>
         <div class="category-name" data-js-category-name>{{ .Name }}</div>
         <div class="category-posts" data-js-category-posts>
-          {{- if .HasChildren }}
-            {{ template "main-menu" (dict "menuItems" .Children "currentPage" $currentPage)}}
-          {{- end }}
-          {{ range where site.Pages "Section" .Identifier -}}
-            <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
-          {{- end }}
+          {{ if .HasChildren }}
+            {{ template "main-menu" ( dict "menuItems" .Children "currentPage" $currentPage ) }}
+          {{ end }}
+          {{ range where site.Pages "Section" .Identifier }}
+            <a class="{{ if eq $currentPage . }}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
+          {{ end }}
         </div>
       </li>
     {{ end }}
@@ -33,8 +33,8 @@
 {{ end }}
 
 <nav id="docs-menu" data-js-docs-menu>
-  {{ template "main-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}}
-  {{ template "extra-menu" (dict "menuItems" .Site.Menus.extra "currentPage" .)}}
+  {{ template "main-menu" ( dict "menuItems" .Site.Menus.main "currentPage" . ) }}
+  {{ template "extra-menu" ( dict "menuItems" .Site.Menus.extra "currentPage" . ) }}
   <div class="external-links">
     <a id="codemagic-landing-link" onclick="sendGtag('Codemagic_clicked', 'DocumentationMenu')" href="https://codemagic.io/start" target="_blank">Codemagic</a>
     <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Blog</a>

commit dc695337ae51f8f6ab2483ccaff376de720955d3
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Mon Aug 9 15:56:11 2021 +0300

    Line height

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 42801ef..8776028 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -187,6 +187,7 @@ body {
                         }
                         a {
                             font-family: $font-family-bold;
+                            line-height: 1.2em;
                             padding-left: 0;
                             border-left: 0;
                             font-size: 18px;

commit 88bcbc7f5317eb3d034f148e3fa7378679cfc75d
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Mon Aug 9 15:54:01 2021 +0300

    Improvements

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index cf89c5d..42801ef 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -180,6 +180,19 @@ body {
                         }
                     }
                 }
+                &.extra-menu {
+                    & > .category-posts {
+                        &::before {
+                            border-right: none;
+                        }
+                        a {
+                            font-family: $font-family-bold;
+                            padding-left: 0;
+                            border-left: 0;
+                            font-size: 18px;
+                        }
+                    }
+                }
             }
             .external-links {
                 margin-top: 15px;
diff --git a/config.yaml b/config.yaml
index d4fd052..f919065 100644
--- a/config.yaml
+++ b/config.yaml
@@ -31,9 +31,8 @@ buildDrafts: true
 defaultContentLanguage: en
 disable404: true
 enableGitInfo: true
-sectionPagesMenu: main
-pluralizeListTitles: false
 
+pluralizeListTitles: false
 menu:
   main:
     - identifier: getting-started
@@ -93,26 +92,25 @@ menu:
     - identifier: teams
       name: Teams
       weight: 6
-
     - identifier: rest-api
       name: Codemagic API
       weight: 7
     - identifier: billing
       name: Billing & Pricing
       weight: 8
+    - identifier: troubleshooting
+      name: Troubleshooting
+      weight: 9
     - identifier: specs
       name: Build machine specs
-
+  extra:
     - identifier: running-locally
       name: Codemagic CLI tools
-      weight: 9
+      weight: 10
     - identifier: notes
       name: Codemagic release log
-      weight: 10
-    - identifier: troubleshooting
-      name: Troubleshooting
       weight: 11
-
+ 
 mediaTypes:
   video/mp4:
     suffixes:
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 44ad723..4ffc7f1 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -1,4 +1,4 @@
-{{ define "content-menu" }}
+{{ define "main-menu" }}
   {{ $currentPage := .currentPage}}
   <ul>
     {{ range .menuItems }}
@@ -6,7 +6,7 @@
         <div class="category-name" data-js-category-name>{{ .Name }}</div>
         <div class="category-posts" data-js-category-posts>
           {{- if .HasChildren }}
-            {{ template "content-menu" (dict "menuItems" .Children "currentPage" $currentPage)}}
+            {{ template "main-menu" (dict "menuItems" .Children "currentPage" $currentPage)}}
           {{- end }}
           {{ range where site.Pages "Section" .Identifier -}}
             <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
@@ -17,10 +17,27 @@
   </ul>
 {{ end }}
 
+{{ define "extra-menu" }}
+  {{ $currentPage := .currentPage }}
+  <ul>
+    {{ range .menuItems }}
+      <li class="open extra-menu">
+        <div class="category-posts">
+          {{ range where site.Pages "Section" .Identifier }}
+            <a class="{{ if eq $currentPage . }}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
+          {{ end }}
+        </div>
+      </li>
+    {{ end }}
+  </ul>
+{{ end }}
+
 <nav id="docs-menu" data-js-docs-menu>
-  {{ template "content-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}}
+  {{ template "main-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}}
+  {{ template "extra-menu" (dict "menuItems" .Site.Menus.extra "currentPage" .)}}
   <div class="external-links">
     <a id="codemagic-landing-link" onclick="sendGtag('Codemagic_clicked', 'DocumentationMenu')" href="https://codemagic.io/start" target="_blank">Codemagic</a>
-    <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Codemagic Blog</a>
+    <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Blog</a>
+    <a id="codemagic-youtube-link" onclick="sendGtag('YouTube_clicked', 'DocumentationMenu')" href="https://www.youtube.com/channel/UC6iPpISHwCnNreb53c0eYvg" target="_blank">YouTube Channel</a>
   </div>
 </nav>

commit 0bf1e2ab35be5a86ba7e763db44cc70359b82d23
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Mon Aug 9 14:26:56 2021 +0300

    Fix active site page

diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 8dd3932..44ad723 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -8,7 +8,7 @@
           {{- if .HasChildren }}
             {{ template "content-menu" (dict "menuItems" .Children "currentPage" $currentPage)}}
           {{- end }}
-          {{ range where site.RegularPages "Section" .Identifier -}}
+          {{ range where site.Pages "Section" .Identifier -}}
             <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
           {{- end }}
         </div>

commit 6b26568dc750d543f7a232a7ce9ee4319864614f
Merge: 5b0e74a 386f8a7
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Mon Aug 9 14:22:53 2021 +0300

    Merge branch 'master' of github.com:codemagic-ci-cd/codemagic-docs into feature/separate-file-and-ui-configuration

commit 386f8a7c3d988945a9be5a4bd9883982ea9f177f
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Mon Aug 9 13:26:56 2021 +0300

    Add example of adding multiple provisioning profiles in yaml (#439)
    
    * Add example of adding multiple provisioning profiles in yaml
    
    * Amend
    
    * Update content/code-signing-yaml/signing-ios.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index f6671a2..8881d61 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -142,3 +142,26 @@ scripts:
     script: xcode-project use-profiles
   ... your build commands
 ```
+
+### Using multiple provisioning profiles
+
+To set up multiple provisioning profiles, for example, to use app extensions such as [NotificationService](https://developer.apple.com/documentation/usernotifications/unnotificationserviceextension), the easiest option is to add the provisioning profiles to your environment variables with a similar naming convention:
+```yaml
+environment:
+  vars:
+    FCI_PROVISIONING_PROFILE_BASE: Encrypted(...)
+    FCI_PROVISIONING_PROFILE_NOTIFICATIONSERVICE: Encrypted(...)
+```
+
+Then, set the profiles up in the build by using the following script in your YAML file:
+```yaml
+scripts:
+  - name: Set up Provisioning profiles from environment variables
+    script: |
+      PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+      mkdir -p "$PROFILES_HOME"
+      for profile in "${!FCI_PROVISIONING_PROFILE_@}"; do
+        PROFILE_PATH="$(mktemp "$HOME/Library/MobileDevice/Provisioning Profiles"/ios_$(uuidgen).mobileprovision)"
+        echo ${!profile} | base64 --decode > "$PROFILE_PATH"
+        echo "Saved provisioning profile $PROFILE_PATH"
+      done

commit 54f5172ff5243491a97fa41e3a6d65795bc972bb
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Mon Aug 9 12:12:08 2021 +0300

    Update encrypting.md

diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index 9ba96ac..6ff5c87 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -37,7 +37,7 @@ On Windows, in order to base64 encode a file and copy the contents to your clipb
 For Linux, in order to encode to base64 run the command below and you can install xclip as it lets you to put the output of a command directly into the clipboard so that you don't have to copy&paste from the terminal manually:
    ```bash
   sudo apt-get install xclip
-  cat dummy_data.p8 | base64 | xclip -selection clipboard 
+  cat your_file_name.extension | base64 | xclip -selection clipboard 
   ```
 
 After the command has been run, you can paste the string from your clipboard to our encryption tool in the Codemagic UI and then save the encrypted string to an environment variable.

commit a5df8e1b45ff36d926ce9e98413435b06cba68f3
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Mon Aug 9 12:11:34 2021 +0300

    Update encrypting.md

diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index eb2023b..9ba96ac 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -32,9 +32,9 @@ On macOS, in order to base64 encode a file and copy the contents to your clipboa
   
 On Windows, in order to base64 encode a file and copy the contents to your clipboard, you can run the following command in the Powershell:
   ```bash
-  [Convert]::ToBase64String([IO.File]::ReadAllBytes("dummy_data.p8")) | Set-Clipboard
+  [Convert]::ToBase64String([IO.File]::ReadAllBytes("your_file_name.extension")) | Set-Clipboard
   ```
-For Linux, you can install xclip:
+For Linux, in order to encode to base64 run the command below and you can install xclip as it lets you to put the output of a command directly into the clipboard so that you don't have to copy&paste from the terminal manually:
    ```bash
   sudo apt-get install xclip
   cat dummy_data.p8 | base64 | xclip -selection clipboard 

commit ea55aa3a09e2746dbf44781320eb3a7e633ad8d7
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Mon Aug 9 11:59:46 2021 +0300

    Update encrypting.md

diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index 3408d00..eb2023b 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -29,6 +29,17 @@ On macOS, in order to base64 encode a file and copy the contents to your clipboa
   ```bash
   cat your_file_name.extension | base64 | pbcopy 
   ```
+  
+On Windows, in order to base64 encode a file and copy the contents to your clipboard, you can run the following command in the Powershell:
+  ```bash
+  [Convert]::ToBase64String([IO.File]::ReadAllBytes("dummy_data.p8")) | Set-Clipboard
+  ```
+For Linux, you can install xclip:
+   ```bash
+  sudo apt-get install xclip
+  cat dummy_data.p8 | base64 | xclip -selection clipboard 
+  ```
+
 After the command has been run, you can paste the string from your clipboard to our encryption tool in the Codemagic UI and then save the encrypted string to an environment variable.
 
 Finally, base64 decode it during build time in your scripts section using the following command:

commit 5b0e74a1dfbea9a6f89e9585d252d973dceb9397
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Fri Aug 6 17:00:15 2021 +0300

    Fix all broken URLs

diff --git a/assets/js/main.js b/assets/js/main.js
index a898068..5d2ae9b 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -341,46 +341,3 @@ $(window).ready(function () {
         observer.observe(header)
     })
 })
-
-function showConfigurationToc (type) {
-    if (!type) {
-        window.localStorage.removeItem('preferred-configuration')
-        const buttons = $('.configuration-switch')
-        buttons.show()
-        const locs = $('.configuration-loc')
-        locs.show()
-        return
-    }
-
-    const otherType = type === 'file' ? 'ui' : 'file'
-
-    const button = $(`.configuration-switch[value='${type}']`)
-    button.hide()
-
-    const toc = $(`#${type}-configuration-loc`)
-    toc.show()
-
-    const otherButton = $(`.configuration-switch[value='${otherType}']`)
-    otherButton.show()
-
-    const otherToc = $(`#${otherType}-configuration-loc`)
-    otherToc.hide()
-
-    window.localStorage.setItem('preferred-configuration', type)
-}
-
-// Configuration toggle
-$(window).ready(function () {
-    const configuration = window.localStorage.getItem('preferred-configuration')
-    showConfigurationToc(configuration)
-    $('.configuration-switch').on('click', function (event) {
-        const type = event.target.value
-
-        showConfigurationToc(type)
-        if (type === 'file') {
-            window.location.href = '/getting-started/yaml/'
-        } else if (type === 'ui') {
-            window.location.href = '/flutter-yaml/flutter-projects/'
-        }
-    })
-})
\ No newline at end of file
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index ae5c42b..cf89c5d 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -91,9 +91,6 @@ body {
             width: 100%;
             box-sizing: border-box;
 
-            p {
-                color: gray;
-            }
             &::after {
                 content: '';
                 display: block;
diff --git a/content/flutter-configuration/automatic-build-triggering.md b/content/flutter-configuration/automatic-build-triggering.md
index 8fa5dac..bbaa9da 100644
--- a/content/flutter-configuration/automatic-build-triggering.md
+++ b/content/flutter-configuration/automatic-build-triggering.md
@@ -4,6 +4,7 @@ description: How to enable automatic builds in the Flutter workflow editor
 weight: 3
 aliases:
     - '../building/automatic-build-triggering'
+    - /flutter/automatic-build-triggering
 ---
 
 In order to fully automate your CI/CD pipeline, you can set up automatic build triggering by configuring which branches to track and when to trigger builds.
diff --git a/content/flutter-configuration/custom-scripts.md b/content/flutter-configuration/custom-scripts.md
index 865a267..47a97dd 100644
--- a/content/flutter-configuration/custom-scripts.md
+++ b/content/flutter-configuration/custom-scripts.md
@@ -4,6 +4,7 @@ description: How to execute custom scripts in builds configured with the Flutter
 weight: 5
 aliases: 
   - '../building/custom-scripts'
+  - /flutter/custom-scripts
 ---
 
 You can customize the Codemagic workflow by running custom scripts before and after the default build steps.
diff --git a/content/flutter-configuration/dependency-caching.md b/content/flutter-configuration/dependency-caching.md
index ea8b1d6..de757ab 100644
--- a/content/flutter-configuration/dependency-caching.md
+++ b/content/flutter-configuration/dependency-caching.md
@@ -4,6 +4,7 @@ title: Dependency caching
 weight: 6
 aliases: 
     - '../building/dependency-caching'
+    - /flutter/dependency-caching
 ---
 
 You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
diff --git a/content/flutter-publishing/beta-deployment-with-fastlane.md b/content/flutter-publishing/beta-deployment-with-fastlane.md
index 23210f7..8a45e72 100644
--- a/content/flutter-publishing/beta-deployment-with-fastlane.md
+++ b/content/flutter-publishing/beta-deployment-with-fastlane.md
@@ -2,6 +2,7 @@
 description: How to deploy to fastlane beta in the Flutter workflow editor pre-publish script
 title: Run fastlane for beta deployment
 weight: 8
+aliases: /publishing/beta-deployment-with-fastlane
 ---
 
 If your Flutter app has an existing *fastlane* setup for beta deployment, you can easily run *fastlane* scripts as part of the Codemagic build process and publish to Crashlytics, for example. Note that our build machines have *fastlane* pre-installed. You can use the pre-publish script example below to execute `fastlane beta` for successful Android builds.
diff --git a/content/flutter-publishing/firebase-app-distribution.md b/content/flutter-publishing/firebase-app-distribution.md
index 89441a5..ffca78e 100644
--- a/content/flutter-publishing/firebase-app-distribution.md
+++ b/content/flutter-publishing/firebase-app-distribution.md
@@ -2,6 +2,7 @@
 description: Deploy a Flutter app to Firebase App Distribution using the Flutter workflow editor
 title: Firebase App Distribution
 weight: 3
+aliases: /publishing/firebase-app-distribution
 ---
 
 Set up publishing to [Firebase App Distribution](https://firebase.google.com/docs/app-distribution) to distribute your Android and iOS apps to testers.
diff --git a/content/flutter-publishing/publish-app-artifacts-to-app-center.md b/content/flutter-publishing/publish-app-artifacts-to-app-center.md
index b89a6ab..3a824de 100644
--- a/content/flutter-publishing/publish-app-artifacts-to-app-center.md
+++ b/content/flutter-publishing/publish-app-artifacts-to-app-center.md
@@ -2,6 +2,7 @@
 description: How to upload an apk or ipa file to App Center in a Flutter workflow editor post-build script
 title: Publish app artifacts to App Center
 weight: 7
+aliases: /publishing/publish-app-artifacts-to-app-center
 ---
 
 As a custom build step, Codemagic can publish your app artifact to App Center using the [App Center Command Line Interface](https://github.com/microsoft/appcenter-cli). An **App Center API token** is required for publishing. It is advisable to create a new token for use on Codemagic, see the commands related to API tokens [here](https://github.com/microsoft/appcenter-cli#commands) or manage your tokens in [App Center settings](https://appcenter.ms/settings/apitokens).
diff --git a/content/flutter-publishing/publish-build-artifacts-to-amazon-s3.md b/content/flutter-publishing/publish-build-artifacts-to-amazon-s3.md
index baa2722..827b2ef 100644
--- a/content/flutter-publishing/publish-build-artifacts-to-amazon-s3.md
+++ b/content/flutter-publishing/publish-build-artifacts-to-amazon-s3.md
@@ -2,6 +2,7 @@
 description: How to use Flutter workflow editor custom scripts to publish app artifacts to external services
 title: Publish build artifacts to Amazon S3
 weight: 6
+aliases: /publishing/publish-build-artifacts-to-amazon-s3
 ---
 
 You can use custom scripts to publish your app artifacts to external sources. Here's an example for publishing to [Amazon S3](https://aws.amazon.com/s3/).
diff --git a/content/flutter-publishing/publish-release-notes.md b/content/flutter-publishing/publish-release-notes.md
index 12ec4f5..fe15426 100644
--- a/content/flutter-publishing/publish-release-notes.md
+++ b/content/flutter-publishing/publish-release-notes.md
@@ -2,6 +2,7 @@
 description: How to publish build release notes using the Flutter workflow editor
 title: Passing release notes
 weight: 10
+aliases: /publishing/publish-release-notes
 ---
 
 Create custom release notes to notify users of the changes as you publish a new version of your app.
diff --git a/content/flutter-testing/beta-testing-with-testmagic.md b/content/flutter-testing/beta-testing-with-testmagic.md
index 54b3455..bafb523 100644
--- a/content/flutter-testing/beta-testing-with-testmagic.md
+++ b/content/flutter-testing/beta-testing-with-testmagic.md
@@ -3,6 +3,7 @@ description: How to configure Testmagic distribution in the Flutter workflow edi
 title: Beta testing with Testmagic
 weight: 6
 draft: true
+aliases: /testing/beta-testing-with-testmagic
 ---
 
 Codemagic is seamlessly integrated with [Testmagic](https://testmagic.io/), a simple mobile app for viewing, testing and distributing your Codemagic builds. You can download it from [Google Play](https://play.google.com/store/apps/details?id=io.nevercode.testmagic&hl=en) for Android or join the TestFlight group for iOS - [link](https://testflight.apple.com/join/lEQLSjoe).
diff --git a/content/flutter-testing/static-code-analysis.md b/content/flutter-testing/static-code-analysis.md
index 5647c8a..fe3225d 100644
--- a/content/flutter-testing/static-code-analysis.md
+++ b/content/flutter-testing/static-code-analysis.md
@@ -2,6 +2,7 @@
 description: How to run Flutter analyze in Flutter workflow editor configured builds
 title: Static code analysis
 weight: 2
+aliases: /testing/static-code-analysis
 ---
 
 Test your code with `flutter analyze` to find possible mistakes. You can read more about this feature in [Dart documentation](https://dart.dev/guides/language/analysis-options). By default, static code analysis is disabled and has to be enabled in **App settings > Test** by checking the **Enable Flutter analyzer** option.
diff --git a/content/yaml-publishing/publish-release-notes.md b/content/yaml-publishing/publish-release-notes.md
index 72d211b..f2fc3b9 100644
--- a/content/yaml-publishing/publish-release-notes.md
+++ b/content/yaml-publishing/publish-release-notes.md
@@ -2,6 +2,7 @@
 description: How to pass release notes with successful builds
 title: Passing release notes
 weight: 2
+aliases: /publishing-yaml/publish-release-notes
 ---
 
 Create custom release notes file(s) to notify users of the changes as you publish a new version of your app.
diff --git a/content/yaml-publishing/status-badges.md b/content/yaml-publishing/status-badges.md
index 00297f5..899295e 100644
--- a/content/yaml-publishing/status-badges.md
+++ b/content/yaml-publishing/status-badges.md
@@ -2,7 +2,7 @@
 title: Build status badges
 description: How to add build status badges using codemagic.yaml
 weight: 3
-aliases:
+aliases: /publishing-yaml/status-badges
 ---
 
 Adding Codemagic status badges to repositories helps to keep the latest build status visible. The build status badge is workflow-specific and displays whether the build passed or failed. 
diff --git a/content/yaml-quick-start/building-a-cordova-app.md b/content/yaml-quick-start/building-a-cordova-app.md
index e094ff5..f1090ce 100644
--- a/content/yaml-quick-start/building-a-cordova-app.md
+++ b/content/yaml-quick-start/building-a-cordova-app.md
@@ -2,6 +2,7 @@
 title: Building a Cordova app 
 description: How to build a Cordova app with codemagic.yaml
 weight: 9
+aliases: /getting-started/building-a-cordova-app
 ---
 
 ## Setting up a Cordova project
diff --git a/content/yaml-quick-start/building-a-flutter-app.md b/content/yaml-quick-start/building-a-flutter-app.md
index f0af098..cab6c33 100644
--- a/content/yaml-quick-start/building-a-flutter-app.md
+++ b/content/yaml-quick-start/building-a-flutter-app.md
@@ -4,6 +4,7 @@ description: How to build a Flutter app with codemagic.yaml
 weight: 4
 aliases:	
   - '../yaml/building-a-flutter-app'
+  - '/getting-started/building-a-flutter-app'
 startLineBreak: true
 ---
 
diff --git a/content/yaml-quick-start/building-a-native-android-app.md b/content/yaml-quick-start/building-a-native-android-app.md
index eaafc27..f377401 100644
--- a/content/yaml-quick-start/building-a-native-android-app.md
+++ b/content/yaml-quick-start/building-a-native-android-app.md
@@ -4,6 +4,7 @@ description: How to build an Android app with codemagic.yaml
 weight: 7
 aliases:
   - '../yaml/building-a-native-android-app'
+  - /getting-started/building-a-native-android-app
 ---
 
 ## Setting up an Android project
diff --git a/content/yaml-quick-start/building-a-native-ios-app.md b/content/yaml-quick-start/building-a-native-ios-app.md
index c14360a..c64f740 100644
--- a/content/yaml-quick-start/building-a-native-ios-app.md
+++ b/content/yaml-quick-start/building-a-native-ios-app.md
@@ -4,6 +4,7 @@ description: How to build an iOS app with codemagic.yaml
 weight: 6
 aliases:
   - '../yaml/building-a-native-ios-app'
+  - /getting-started/building-a-native-ios-app
 ---
 
 ## Setting up an iOS project
diff --git a/content/yaml-quick-start/building-a-react-native-app.md b/content/yaml-quick-start/building-a-react-native-app.md
index 1c8b431..3b60ee5 100644
--- a/content/yaml-quick-start/building-a-react-native-app.md
+++ b/content/yaml-quick-start/building-a-react-native-app.md
@@ -4,6 +4,7 @@ description: How to build a React Native app with codemagic.yaml
 weight: 5
 aliases: 
   - '../yaml/building-a-react-native-app'
+  - /getting-started/building-a-react-native-app
 ---
 
 React Native is a cross-platform solution that allows you to build apps for both iOS and Android faster using a single language. When working with YAML, the basics are still the same, the build scripts are added to the `scripts` section in the [overall architecture](../getting-started/yaml#template).
diff --git a/content/yaml-quick-start/building-a-snap-package.md b/content/yaml-quick-start/building-a-snap-package.md
index c8829e1..5ea4792 100644
--- a/content/yaml-quick-start/building-a-snap-package.md
+++ b/content/yaml-quick-start/building-a-snap-package.md
@@ -4,6 +4,7 @@ description: How to build and release a snap package with codemagic.yaml
 weight: 11
 aliases:
   - '../yaml/building-a-snap-package'
+  - /getting-started/building-a-snap-package
 ---
 
 ## Setting up snap packaging
diff --git a/content/yaml-quick-start/building-an-ionic-app.md b/content/yaml-quick-start/building-an-ionic-app.md
index 2178bdb..41e2c37 100644
--- a/content/yaml-quick-start/building-an-ionic-app.md
+++ b/content/yaml-quick-start/building-an-ionic-app.md
@@ -4,6 +4,7 @@ description: How to build an Ionic Capacitor or Ionic Cordova app with codemagic
 weight: 8
 aliases:
   - '../yaml/building-an-ionic-app'
+  - /getting-started/building-an-ionic-app
 ---
 
 ## Setting up an Ionic project
diff --git a/content/yaml-testing/firebase-test-lab.md b/content/yaml-testing/firebase-test-lab.md
index 341b162..85552d7 100644
--- a/content/yaml-testing/firebase-test-lab.md
+++ b/content/yaml-testing/firebase-test-lab.md
@@ -2,6 +2,7 @@
 title: Testing on Firebase Test Lab
 description: How to run tests on Firebase Test Lab
 weight: 2
+aliases: /testing-yaml/firebase-test-lab
 ---
 
 Firebase Test Lab provides a cloud-based infrastructure for testing Android and iOS apps on various devices and configurations. You can test your apps on Firebase Test Lab as part of the Codemagic build workflow provided you have set up a Firebase project.

commit c42595559b62b11de6b253bfb12ad471a2003652
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Fri Aug 6 14:49:45 2021 +0300

    Fix broken links

diff --git a/content/flutter-configuration/flutter-projects.md b/content/flutter-configuration/flutter-projects.md
index 87b55a9..22a2bee 100644
--- a/content/flutter-configuration/flutter-projects.md
+++ b/content/flutter-configuration/flutter-projects.md
@@ -6,7 +6,7 @@ aliases:
     - '../building/building-android-app-bundles'
     - '../building/building-for-the-web'
     - '../building/building-for-desktop'
-    - '/flutter/flutter-projects'
+    - '/flutter/configuration/flutter-projects'
 ---
 
 With Codemagic, you can build and test Flutter apps for Android, iOS, web, macOS and Linux as well as [test widgets](../testing/testing-widgets). It is also possible to set up a [workflow](../flutter/creating-workflows) that runs tests only.
diff --git a/content/getting-started/projects.md b/content/getting-started/projects.md
index efbf3e3..ee3a80b 100644
--- a/content/getting-started/projects.md
+++ b/content/getting-started/projects.md
@@ -6,25 +6,25 @@ aliases:
 
 With Codemagic, you can set up CI/CD for native Android or iOS, Flutter, React Native, Cordova and Ionic apps. 
 
-The projects are configured using a highly customizable [codemagic.yaml](../yaml/yaml) configuration file which is stored in the repository. Alternativey, you can set up your Flutter projects in our intuitive [Flutter workflow editor](../flutter/configuration/flutter-projects).
+The projects are configured using a highly customizable [codemagic.yaml](/yaml/yaml) configuration file which is stored in the repository. Alternativey, you can set up your Flutter projects in our intuitive [Flutter workflow editor](/flutter/configuration/flutter-projects).
 
 Here are some quick links to help you get started.
 
 ## Codemagic.yaml quick start guides
 
-* [Building Flutter apps](../yaml-quick-start/building-a-flutter-app.md)
-* [Building React Native apps](../yaml-quick-start/building-a-react-native-app.md)
-* [Building native Android apps](../yaml-quick-start/building-a-native-android-app.md)
-* [Building native iOS apps](../yaml-quick-start/building-a-native-ios-app.md)
-* [Building Ionic apps](../yaml-quick-start/building-an-ionic-app.md)
-* [Building Cordova apps](../yaml-quick-start/building-a-cordova-app.md)
-* [Building native apps with a Flutter module](../yaml-quick-start/building_a_native_app_with_flutter_module.md)
-* [Building Snap packages](../yaml-quick-start/building-a-snap-package.md)
+* [Building Flutter apps](/yaml-quick-start/building-a-flutter-app)
+* [Building React Native apps](/yaml-quick-start/building-a-react-native-app)
+* [Building native Android apps](/yaml-quick-start/building-a-native-android-app)
+* [Building native iOS apps](/yaml-quick-start/building-a-native-ios-app)
+* [Building Ionic apps](/yaml-quick-start/building-an-ionic-app)
+* [Building Cordova apps](/yaml-quick-start/building-a-cordova-app)
+* [Building native apps with a Flutter module](/yaml-quick-start/building_a_native_app_with_flutter_module)
+* [Building Snap packages](/yaml-quick-start/building-a-snap-package)
 
 ## Flutter workflow editor guides
 
-* [Building for Android](../flutter-configuration/flutter-projects/#building-android-apps)
-* [Building for iOS](../flutter-configuration/flutter-projects/#building-ios-apps)
-* [Building for the web](../flutter-configuration/flutter-projects/#building-web-apps)
-* [Building for macOS](../flutter-configuration/flutter-projects/#building-macos-apps)
-* [Building for Linux](../flutter-configuration/flutter-projects/#building-linux-apps)
+* [Building for Android](/flutter-configuration/flutter-projects/#building-android-apps)
+* [Building for iOS](/flutter-configuration/flutter-projects/#building-ios-apps)
+* [Building for the web](/flutter-configuration/flutter-projects/#building-web-apps)
+* [Building for macOS](/flutter-configuration/flutter-projects/#building-macos-apps)
+* [Building for Linux](/flutter-configuration/flutter-projects/#building-linux-apps)
diff --git a/content/yaml-quick-start/building_a_native_app_with_flutter_module.md b/content/yaml-quick-start/building-a-native-app-with-flutter-module.md
similarity index 97%
rename from content/yaml-quick-start/building_a_native_app_with_flutter_module.md
rename to content/yaml-quick-start/building-a-native-app-with-flutter-module.md
index 1098f85..8f48e17 100644
--- a/content/yaml-quick-start/building_a_native_app_with_flutter_module.md
+++ b/content/yaml-quick-start/building-a-native-app-with-flutter-module.md
@@ -4,6 +4,7 @@ description: How to build a native iOS or Android app with a Flutter module usin
 weight: 10
 aliases:
   - '../yaml/building_a_native_app_with_flutter_module'
+  - '../yaml-quick-start/building_a_native_app_with_flutter_module'
 ---
 
 ## Add-to-app

commit 71c8609d0b30a0a38cf582197b3e9a604f2b8e23
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Aug 6 14:26:23 2021 +0300

    edit categories

diff --git a/config.yaml b/config.yaml
index fb9935b..d4fd052 100644
--- a/config.yaml
+++ b/config.yaml
@@ -87,34 +87,31 @@ menu:
     - identifier: configuration
       name: Advanced configuration
       weight: 4
-    - identifier: integrations
-      name: Integrations
-      weight: 5
     - identifier: knowledge-base
       name: Knowledge base
-      weight: 6
+      weight: 5
     - identifier: teams
       name: Teams
-      weight: 7
+      weight: 6
 
     - identifier: rest-api
       name: Codemagic API
-      weight: 8
+      weight: 7
     - identifier: billing
       name: Billing & Pricing
-      weight: 9
+      weight: 8
     - identifier: specs
       name: Build machine specs
 
     - identifier: running-locally
       name: Codemagic CLI tools
-      weight: 10
+      weight: 9
     - identifier: notes
       name: Codemagic release log
-      weight: 11
+      weight: 10
     - identifier: troubleshooting
       name: Troubleshooting
-      weight: 12
+      weight: 11
 
 mediaTypes:
   video/mp4:

commit a5ec465db4b4bbe706b38202b70481e814d0816d
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Aug 6 14:17:44 2021 +0300

    reorganize sections

diff --git a/config.yaml b/config.yaml
index 7413490..fb9935b 100644
--- a/config.yaml
+++ b/config.yaml
@@ -59,12 +59,16 @@ menu:
       name: Publishing
       parent: yaml
       weight: 4
+    - identifier: integrations
+      name: Integrations
+      parent: yaml
+      weight: 5
 
     - identifier: flutter
       name: Flutter workflow editor
       weight: 3
     - identifier: flutter-configuration
-      name: Configuration
+      name: Build configuration
       parent: flutter
       weight: 1
     - identifier: flutter-testing
@@ -81,7 +85,7 @@ menu:
       weight: 4
     
     - identifier: configuration
-      name: Configuration
+      name: Advanced configuration
       weight: 4
     - identifier: integrations
       name: Integrations
@@ -104,6 +108,13 @@ menu:
 
     - identifier: running-locally
       name: Codemagic CLI tools
+      weight: 10
+    - identifier: notes
+      name: Codemagic release log
+      weight: 11
+    - identifier: troubleshooting
+      name: Troubleshooting
+      weight: 12
 
 mediaTypes:
   video/mp4:

commit aaca6cb502abb470c43891dc11f30708cb3300a6
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Aug 6 13:35:04 2021 +0300

    rename sections

diff --git a/config.yaml b/config.yaml
index f2c51c9..7413490 100644
--- a/config.yaml
+++ b/config.yaml
@@ -41,10 +41,10 @@ menu:
       weight: 1
 
     - identifier: yaml
-      name: YAML
+      name: Codemagic.yaml
       weight: 2
     - identifier: yaml-quick-start
-      name: Quick start
+      name: Quick start guides
       parent: yaml
       weight: 1
     - identifier: yaml-testing
@@ -61,7 +61,7 @@ menu:
       weight: 4
 
     - identifier: flutter
-      name: Flutter
+      name: Flutter workflow editor
       weight: 3
     - identifier: flutter-configuration
       name: Configuration
diff --git a/content/getting-started/projects.md b/content/getting-started/projects.md
new file mode 100644
index 0000000..efbf3e3
--- /dev/null
+++ b/content/getting-started/projects.md
@@ -0,0 +1,30 @@
+---
+title: Project types
+weight: 3
+aliases:
+---
+
+With Codemagic, you can set up CI/CD for native Android or iOS, Flutter, React Native, Cordova and Ionic apps. 
+
+The projects are configured using a highly customizable [codemagic.yaml](../yaml/yaml) configuration file which is stored in the repository. Alternativey, you can set up your Flutter projects in our intuitive [Flutter workflow editor](../flutter/configuration/flutter-projects).
+
+Here are some quick links to help you get started.
+
+## Codemagic.yaml quick start guides
+
+* [Building Flutter apps](../yaml-quick-start/building-a-flutter-app.md)
+* [Building React Native apps](../yaml-quick-start/building-a-react-native-app.md)
+* [Building native Android apps](../yaml-quick-start/building-a-native-android-app.md)
+* [Building native iOS apps](../yaml-quick-start/building-a-native-ios-app.md)
+* [Building Ionic apps](../yaml-quick-start/building-an-ionic-app.md)
+* [Building Cordova apps](../yaml-quick-start/building-a-cordova-app.md)
+* [Building native apps with a Flutter module](../yaml-quick-start/building_a_native_app_with_flutter_module.md)
+* [Building Snap packages](../yaml-quick-start/building-a-snap-package.md)
+
+## Flutter workflow editor guides
+
+* [Building for Android](../flutter-configuration/flutter-projects/#building-android-apps)
+* [Building for iOS](../flutter-configuration/flutter-projects/#building-ios-apps)
+* [Building for the web](../flutter-configuration/flutter-projects/#building-web-apps)
+* [Building for macOS](../flutter-configuration/flutter-projects/#building-macos-apps)
+* [Building for Linux](../flutter-configuration/flutter-projects/#building-linux-apps)

commit 9864a3fa8fedfbb48f3048e1fa9ae7955c3f3cba
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Fri Aug 6 13:08:13 2021 +0300

    Fix broken links

diff --git a/content/configuration/access-private-git-submodules.md b/content/configuration/access-private-git-submodules.md
index 80f9374..80076e7 100644
--- a/content/configuration/access-private-git-submodules.md
+++ b/content/configuration/access-private-git-submodules.md
@@ -1,6 +1,7 @@
 ---
 title: Accessing private dependencies and Git submodules
 weight: 1
+aliases: /building/access-private-git-submodules
 ---
 
 If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully.
diff --git a/content/configuration/build-versioning.md b/content/configuration/build-versioning.md
index 71e3bbe..5907c8a 100644
--- a/content/configuration/build-versioning.md
+++ b/content/configuration/build-versioning.md
@@ -2,6 +2,7 @@
 title: Build versioning
 description: How to set a new build number to push to app stores
 weight: 6
+aliases: /building/build-versioning
 ---
 
 If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment the application version with every build is by using the environment variables that Codemagic exports during the build. There are two environment variables that count the number of builds:
diff --git a/content/configuration/environment-variable-groups.md b/content/configuration/environment-variable-groups.md
index 5e7fcb3..18ef90a 100644
--- a/content/configuration/environment-variable-groups.md
+++ b/content/configuration/environment-variable-groups.md
@@ -2,6 +2,7 @@
 description: How to define and use environment variable groups
 title: Environment variable groups
 weight: 3
+aliases: /building/environment-variable-groups
 ---
 
 Environment variable groups allow you to define and store related sets of variables that are reusable in your [codemagic.yaml](../getting-started/yaml/) workflows. A variable *group* tags a set of variables that can be imported together in a codemagic.yaml file. For example, you could define a `staging` group for variables related to your staging deployment and a `production` group for variables related to your production deployment. The variable names in staging and production groups can be identical, but the values will be set depending on which group is imported in the workflow. This allows you to reference variables in reusable scripts, but assign the actual values per workflow based on the imported group.
diff --git a/content/configuration/environment-variables.md b/content/configuration/environment-variables.md
index c284ba9..bf138a4 100644
--- a/content/configuration/environment-variables.md
+++ b/content/configuration/environment-variables.md
@@ -2,6 +2,7 @@
 description: How to work with environment variables in Codemagic builds
 title: Environment variables
 weight: 2
+aliases: /building/environment-variables
 ---
 
 Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
diff --git a/content/configuration/github-checks.md b/content/configuration/github-checks.md
index f8ca773..7bf0412 100644
--- a/content/configuration/github-checks.md
+++ b/content/configuration/github-checks.md
@@ -3,6 +3,7 @@ title: GitHub Checks
 description: How to report PR build statuses to GitHub as checks
 weight: 10
 startLineBreak: true
+aliases: /building/github-checks
 ---
 
 {{<notebox>}}
diff --git a/content/configuration/scheduling.md b/content/configuration/scheduling.md
index 81bfa3f..cdaf84a 100644
--- a/content/configuration/scheduling.md
+++ b/content/configuration/scheduling.md
@@ -3,6 +3,7 @@ title: Scheduling builds
 description: Create schedules to run builds at regular intervals
 weight: 9
 startLineBreak: true
+aliases: /building/scheduling
 ---
 
 {{<notebox>}}
diff --git a/content/configuration/timeout.md b/content/configuration/timeout.md
index 4fee23f..461fb66 100644
--- a/content/configuration/timeout.md
+++ b/content/configuration/timeout.md
@@ -2,6 +2,7 @@
 description: Limit the maximum duration of builds
 title: Build timeout settings
 weight: 8
+aliases: /building/timeout
 ---
 
 By default, Codemagic builds are set to time out after 60 minutes. You can decrease or increase the maximum build duration **per workflow**.
diff --git a/content/flutter-code-signing/android-code-signing.md b/content/flutter-code-signing/android-code-signing.md
index 11dfa80..2c5b495 100644
--- a/content/flutter-code-signing/android-code-signing.md
+++ b/content/flutter-code-signing/android-code-signing.md
@@ -2,6 +2,7 @@
 description: How to set up Android code signing in the Flutter workflow editor
 title: Android code signing
 weight: 3
+aliases: /code-signing/android-code-signing
 ---
 
 Code signing is required for distributing your Android app to the Google Play store. It enables to identify who developed the app and ensure that all updates to the app come from you.
diff --git a/content/flutter-code-signing/ios-code-signing.md b/content/flutter-code-signing/ios-code-signing.md
index d5bd706..cd718ea 100644
--- a/content/flutter-code-signing/ios-code-signing.md
+++ b/content/flutter-code-signing/ios-code-signing.md
@@ -2,6 +2,7 @@
 description: How to set up iOS code signing in the Flutter workflow editor
 title: iOS code signing
 weight: 1
+aliases: /code-signing/ios-code-signing
 ---
 
 Code signing is required by Apple for integrating app services, installing your iOS app on real devices, and for uploading it to App Store Connect so that it can be distributed through TestFlight or App Store. It enables to identify who developed the app and ensure that all the changes to the app come from you or your team.
diff --git a/content/flutter-code-signing/macos-code-signing.md b/content/flutter-code-signing/macos-code-signing.md
index 093e9be..6c2d15f 100644
--- a/content/flutter-code-signing/macos-code-signing.md
+++ b/content/flutter-code-signing/macos-code-signing.md
@@ -2,6 +2,7 @@
 description: How to set up macOS code signing in the Flutter workflow editor
 title: macOS code signing
 weight: 2
+aliases: /code-signing/macos-code-signing
 ---
 
 Code signing is required by Apple for integrating app services, installing your macOS app on another machine or uploading it to distribute it through the Mac App Store or outside of Mac App Store. It enables to identify who developed the app and ensure that all the changes to the app come from you or your team.
diff --git a/content/flutter-configuration/creating-workflows.md b/content/flutter-configuration/creating-workflows.md
index 19dc3c5..b5bee7a 100644
--- a/content/flutter-configuration/creating-workflows.md
+++ b/content/flutter-configuration/creating-workflows.md
@@ -4,6 +4,7 @@ title: Workflows
 weight: 2
 aliases:
     - '../getting-started/creating-workflows'
+    - /flutter/creating-workflows
 ---
 
 Have full control over your CI/CD pipeline with workflows. A workflow is a set of settings that determines how your app is to be built, tested and published. 
diff --git a/content/flutter-configuration/encrypting.md b/content/flutter-configuration/encrypting.md
index 3408d00..37d22b6 100644
--- a/content/flutter-configuration/encrypting.md
+++ b/content/flutter-configuration/encrypting.md
@@ -2,6 +2,7 @@
 title: Encrypting sensitive data
 description: Encrypt your credentials and key files
 weight: 4
+aliases: [/building/encrypting, /configuration/encrypting]
 ---
 
 If you wish to store sensitive information, such as login details or API keys, in environment variables or your configuration file, it is important to encrypt the data to not expose it. You can easily encrypt values and files using the encryption interface in Codemagic.
diff --git a/content/flutter-configuration/env-variables.md b/content/flutter-configuration/env-variables.md
index 83e43f8..d60b2ce 100644
--- a/content/flutter-configuration/env-variables.md
+++ b/content/flutter-configuration/env-variables.md
@@ -2,7 +2,7 @@
 title: Adding environment variables
 description: How to add environment variables in the Flutter workflow editor
 weight: 4
-aliases:
+aliases: /flutter/env-variables
 ---
 
 Environment variables are useful for making available for Codemagic the credentials, configuration files or API keys that are required for successful building or integration with external services. For more information about the use of environment variables and a list of Codemagic read-only environment variables, refer [here](../building/environment-variables).
diff --git a/content/flutter-configuration/flutter-projects.md b/content/flutter-configuration/flutter-projects.md
index 1a02fc3..87b55a9 100644
--- a/content/flutter-configuration/flutter-projects.md
+++ b/content/flutter-configuration/flutter-projects.md
@@ -6,6 +6,7 @@ aliases:
     - '../building/building-android-app-bundles'
     - '../building/building-for-the-web'
     - '../building/building-for-desktop'
+    - '/flutter/flutter-projects'
 ---
 
 With Codemagic, you can build and test Flutter apps for Android, iOS, web, macOS and Linux as well as [test widgets](../testing/testing-widgets). It is also possible to set up a [workflow](../flutter/creating-workflows) that runs tests only.
diff --git a/content/flutter-configuration/webhooks.md b/content/flutter-configuration/webhooks.md
index 962470c..3015bc2 100644
--- a/content/flutter-configuration/webhooks.md
+++ b/content/flutter-configuration/webhooks.md
@@ -2,6 +2,7 @@
 title: Webhooks
 description: Set up webhooks for automatic builds
 weight: 5
+aliases: /building/webhooks
 ---
 
 Webhooks are necessary in order to be able to trigger builds automatically in response to events in the repository.
diff --git a/content/flutter-publishing/email-and-slack-notifications.md b/content/flutter-publishing/email-and-slack-notifications.md
index 92c50dd..82117d2 100644
--- a/content/flutter-publishing/email-and-slack-notifications.md
+++ b/content/flutter-publishing/email-and-slack-notifications.md
@@ -2,6 +2,7 @@
 description: How to configure build status updates with links to artifacts in the Flutter workflow editor
 title: Email and Slack notifications
 weight: 9
+aliases: /publishing/email-and-slack-notifications
 ---
 
 ## Email
diff --git a/content/flutter-publishing/github-release.md b/content/flutter-publishing/github-releases.md
similarity index 98%
rename from content/flutter-publishing/github-release.md
rename to content/flutter-publishing/github-releases.md
index cb3e7f1..b8fe553 100644
--- a/content/flutter-publishing/github-release.md
+++ b/content/flutter-publishing/github-releases.md
@@ -2,6 +2,7 @@
 description: How to create a GitHub release with artifacts using the Flutter workflow editor
 title: GitHub releases
 weight: 11
+aliases: /publishing/github-release/
 ---
 
 Codemagic enables you to create a GitHub release automatically, and upload generated artifacts when your build is triggered on tag creation. Read more about GitHub releases in [GitHub's documentation](https://docs.github.com/en/github/administering-a-repository/about-releases).
diff --git a/content/flutter-publishing/publishing-to-app-store.md b/content/flutter-publishing/publishing-to-app-store.md
index 45a4c7b..600975c 100644
--- a/content/flutter-publishing/publishing-to-app-store.md
+++ b/content/flutter-publishing/publishing-to-app-store.md
@@ -2,6 +2,7 @@
 description: How to deploy a Flutter app to App Store and TestFlight using the Flutter workflow editor
 title: App Store Connect
 weight: 1
+aliases: /publishing/publishing-to-app-store
 ---
 
 Codemagic enables you to automatically publish your app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store. To do so, you must first set up [iOS code signing](../code-signing/ios-code-signing/) using a distribution code signing [certificate](https://developer.apple.com/support/certificates/) and then configure publishing to App Store Connect.
diff --git a/content/flutter-publishing/publishing-to-codemagic-static-pages.md b/content/flutter-publishing/publishing-to-codemagic-static-pages.md
index 4f9be06..b9bd1ca 100644
--- a/content/flutter-publishing/publishing-to-codemagic-static-pages.md
+++ b/content/flutter-publishing/publishing-to-codemagic-static-pages.md
@@ -2,6 +2,7 @@
 description: How to publish a web app to a custom subdomain using the Flutter workflow editor
 title: Codemagic Static Pages
 weight: 5
+aliases: /publishing/publishing-to-codemagic-static-pages
 ---
 
 You can publish your web app to a custom subdomain of `codemagic.app` for easy access.
diff --git a/content/flutter-publishing/publishing-to-google-play.md b/content/flutter-publishing/publishing-to-google-play.md
index 88bb359..21ee50e 100644
--- a/content/flutter-publishing/publishing-to-google-play.md
+++ b/content/flutter-publishing/publishing-to-google-play.md
@@ -2,6 +2,7 @@
 description: Deploy a Flutter app to Google Play using the Flutter workflow editor
 title: Google Play
 weight: 2
+aliases: /publishing/publishing-to-google-play
 ---
 
 Codemagic enables you to automatically publish your app to the **internal**, **alpha**, **beta** and **production** tracks on Google Play. To do so, you must first [set up Android code signing](../code-signing/android-code-signing/ 'Android code signing') and then configure publishing to Google Play.
diff --git a/content/flutter-publishing/snap-store.md b/content/flutter-publishing/snap-store.md
index a6089dd..cd68fba 100644
--- a/content/flutter-publishing/snap-store.md
+++ b/content/flutter-publishing/snap-store.md
@@ -2,6 +2,7 @@
 description: How to publish a snap to the Snap Store using the Flutter workflow editor
 title: Snapcraft Snap Store
 weight: 4
+aliases: /publishing/snap-store
 ---
 
 The [snap packages](../flutter/flutter-projects/#building-snap-packages) you build in Codemagic can be published straight to the [Snapcraft Snap Store](https://snapcraft.io/) as part of the build workflow.
diff --git a/content/flutter-testing/running-automated-tests.md b/content/flutter-testing/running-automated-tests.md
index 5ce9838..31795ce 100644
--- a/content/flutter-testing/running-automated-tests.md
+++ b/content/flutter-testing/running-automated-tests.md
@@ -2,6 +2,7 @@
 description: How to run automated tests in builds configured with the Flutter workflow editor
 title: Running automated tests
 weight: 1
+aliases: /testing/running-automated-tests
 ---
 
 Codemagic supports running **unit**, **integration** and **widget** tests as well as static code analysis with [**flutter analyze**](./static-code-analysis). When testing is enabled, tests are run automatically every time your project is built. You can configure the test settings in **App settings > Test**.
diff --git a/content/flutter-testing/testing-widgets.md b/content/flutter-testing/testing-widgets.md
index 3bb7919..4eae66e 100644
--- a/content/flutter-testing/testing-widgets.md
+++ b/content/flutter-testing/testing-widgets.md
@@ -2,6 +2,7 @@
 description: How to configure running only widget tests
 title: Testing widgets
 weight: 3
+aliases: /testing/testing-widgets
 ---
 
 Instead of building the entire app, you can separately run tests on your widgets.
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 9b3ff20..9b9cb9a 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -2,6 +2,7 @@
 description: How to add an app to Codemagic from any private or public repository
 title: Adding repositories
 weight: 2
+aliases: /yaml-quick-start/adding-apps-from-custom-sources
 ---
 
 Add applications from any self-hosted or cloud-based Git repository. For the best integration with the Git provider, it's recommended to connect your GitHub, Bitbucket or GitLab repositories using the repository integration. However, you can also add repositories by entering the clone URL of the repository. 
diff --git a/content/running-locally/running-locally.md b/content/running-locally/running-locally.md
index 3f7983f..64e96c0 100644
--- a/content/running-locally/running-locally.md
+++ b/content/running-locally/running-locally.md
@@ -4,6 +4,7 @@ description: How to use Codemagic CLI tools locally or in other environments
 weight: 11
 aliases: 
     - '../yaml/runninglocally'
+    - /building/running-locally
 ---
 
 [codemagic-cli-tools](https://pypi.org/project/codemagic-cli-tools/) is a set of tools to simplify builds at Codemagic. They can be installed with pip (`pip3 install codemagic-cli-tools`) and run locally. For more information, review the full documentation on [CLI tools](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs#cli-tools).
diff --git a/content/yaml-code-signing/signing-android.md b/content/yaml-code-signing/signing-android.md
index 36a8cac..374c62c 100644
--- a/content/yaml-code-signing/signing-android.md
+++ b/content/yaml-code-signing/signing-android.md
@@ -2,6 +2,7 @@
 title: Signing Android apps
 description: How to set up Android code signing in codemagic.yaml
 weight: 3
+aliases: /code-signing-yaml/signing-android
 ---
 
 All Android applications have to be digitally signed before they are made available to the public to confirm their author and guarantee that the code has not been altered or corrupted since it was signed. There are several ways to set up code signing for Android apps.
diff --git a/content/yaml-code-signing/signing-ios.md b/content/yaml-code-signing/signing-ios.md
index f6671a2..ee9e975 100644
--- a/content/yaml-code-signing/signing-ios.md
+++ b/content/yaml-code-signing/signing-ios.md
@@ -2,7 +2,7 @@
 title: Signing iOS apps
 description: How to set up iOS code signing in codemagic.yaml
 weight: 1
-aliases: '../code-signing-yaml/signing'
+aliases: [../code-signing-yaml/signing, /code-signing-yaml/signing-ios]
 ---
 
 All iOS applications have to be digitally signed before they can be installed on real devices or made available to the public.
diff --git a/content/yaml-code-signing/signing-macos.md b/content/yaml-code-signing/signing-macos.md
index 185c4c2..e59c23a 100644
--- a/content/yaml-code-signing/signing-macos.md
+++ b/content/yaml-code-signing/signing-macos.md
@@ -2,6 +2,7 @@
 title: Signing macOS apps
 description: How to set up macOS code signing in codemagic.yaml
 weight: 2
+aliases: /code-signing-yaml/signing-macos
 ---
 
 All macOS applications have to be digitally signed before they can be installed on devices or made available to the public via the Mac App Store or outside of the Mac App Store.
diff --git a/content/yaml-publishing/distribution.md b/content/yaml-publishing/distribution.md
index 1c0b97e..3f82330 100644
--- a/content/yaml-publishing/distribution.md
+++ b/content/yaml-publishing/distribution.md
@@ -4,6 +4,7 @@ description: How to set up publishing and build status notifications in codemagi
 weight: 1
 aliases:
     - '../yaml/distribution'
+    - /publishing-yaml/distribution
 ---
 
 All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play, and App Store Connect. It is also possible to publish elsewhere with custom scripts; see the examples below.
diff --git a/content/yaml-publishing/public-dashboards.md b/content/yaml-publishing/public-dashboards.md
index 7657383..d223c87 100644
--- a/content/yaml-publishing/public-dashboards.md
+++ b/content/yaml-publishing/public-dashboards.md
@@ -2,7 +2,7 @@
 title: Public dashboards
 description: Use public links to distribute builds and artifacts in codemagic.yaml
 weight: 2
-aliases:
+aliases: /publishing-yaml/public-dashboards
 ---
 
 Public dashboards make it possible for teams to share the list of team's builds, release notes (if passed) and build artifacts with people outside Codemagic using a public link (build logs will not be exposed). This is a convenient option for distributing builds to testers or sharing build artifacts with stakeholders. 
diff --git a/content/yaml-quick-start/codemagic-sample-projects.md b/content/yaml-quick-start/codemagic-sample-projects.md
index 02b52b5..0dfab36 100644
--- a/content/yaml-quick-start/codemagic-sample-projects.md
+++ b/content/yaml-quick-start/codemagic-sample-projects.md
@@ -2,6 +2,7 @@
 title: Codemagic sample projects
 description: Sample projects using codemagic.yaml
 weight: 1
+aliases: /sample-projects/codemagic-sample-projects
 ---
 
 The [codemagic-sample-projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects) repository on the Codemagic GitHub page contains a collection of sample projects which show how to configure your workflows using the **codemagic.yaml** configuration file. 
diff --git a/content/yaml-testing/testing.md b/content/yaml-testing/testing.md
index 0213861..141d700 100644
--- a/content/yaml-testing/testing.md
+++ b/content/yaml-testing/testing.md
@@ -4,6 +4,7 @@ description: How to run tests with codemagic.yaml
 weight: 1
 aliases:
   - '../yaml/testing'
+  - /testing-yaml/testing/
 ---
 
 Test scripts are added under `scripts` in the [overall architecture](../getting-started/yaml#template), before the build commands.
diff --git a/content/yaml/yaml-getting-started.md b/content/yaml/yaml-getting-started.md
index 0fa874b..616ba87 100644
--- a/content/yaml/yaml-getting-started.md
+++ b/content/yaml/yaml-getting-started.md
@@ -5,6 +5,8 @@ weight: 3
 aliases:
   - '../building/yaml'
   - '../yaml/yaml'
+  - /getting-started/yaml
+  - /yaml-quick-start/yaml
 ---
 
 `codemagic.yaml` is a highly customizable configuration file for setting up your CI/CD pipeline with Codemagic. Configure all your workflows in a single file and commit the file to version control.
diff --git a/content/yaml/yaml-validate.md b/content/yaml/yaml-validate.md
index 6acf1d0..d6c1928 100644
--- a/content/yaml/yaml-validate.md
+++ b/content/yaml/yaml-validate.md
@@ -2,6 +2,7 @@
 title: Validating codemagic.yaml locally
 description:
 weight: 7
+aliases: /knowledge-base/validate-yaml
 ---
 
 Using the Codemagic JSON schema, you can validate your `codemagic.yaml` for structure and syntax errors right in your IDE. The same level of validation is carried out on the frontend in the YAML editor in your project settings. 

commit 80dc23e90592def28c69d8f7c34a55ea88182990
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Fri Aug 6 11:52:35 2021 +0300

    First iteration

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 9ac66ec..ae5c42b 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -691,17 +691,3 @@ body {
         display: inline-block;
     }
 }
-
-pre {
-    background: #f4f4f4;
-    border: 1px solid #ddd;
-    border-left: 3px solid #f36d33;
-    color: #666;
-    page-break-inside: avoid;
-    font-family: monospace;
-    font-size: 15px;
-    max-width: 100%;
-    overflow: auto;
-    display: block;
-    word-wrap: break-word;
-}
diff --git a/config.yml b/config.yaml
similarity index 60%
rename from config.yml
rename to config.yaml
index d6944a6..f2c51c9 100644
--- a/config.yml
+++ b/config.yaml
@@ -31,63 +31,79 @@ buildDrafts: true
 defaultContentLanguage: en
 disable404: true
 enableGitInfo: true
-
-# sectionPagesMenu: main
+sectionPagesMenu: main
 pluralizeListTitles: false
+
 menu:
   main:
     - identifier: getting-started
       name: Getting started
+      weight: 1
+
     - identifier: yaml
       name: YAML
-    # - identifier: code-signing
-    #   name: code signing
-    #   parent: yaml
+      weight: 2
+    - identifier: yaml-quick-start
+      name: Quick start
+      parent: yaml
+      weight: 1
+    - identifier: yaml-testing
+      name: Testing
+      parent: yaml
+      weight: 2
+    - identifier: yaml-code-signing
+      name: Code signing
+      parent: yaml
+      weight: 3
+    - identifier: yaml-publishing
+      name: Publishing
+      parent: yaml
+      weight: 4
+
+    - identifier: flutter
+      name: Flutter
+      weight: 3
+    - identifier: flutter-configuration
+      name: Configuration
+      parent: flutter
+      weight: 1
+    - identifier: flutter-testing
+      name: Testing
+      parent: flutter
+      weight: 2
+    - identifier: flutter-code-signing
+      name: Code signing
+      parent: flutter
+      weight: 3
+    - identifier: flutter-publishing
+      name: Publishing
+      parent: flutter
+      weight: 4
+    
+    - identifier: configuration
+      name: Configuration
+      weight: 4
+    - identifier: integrations
+      name: Integrations
+      weight: 5
+    - identifier: knowledge-base
+      name: Knowledge base
+      weight: 6
+    - identifier: teams
+      name: Teams
+      weight: 7
+
+    - identifier: rest-api
+      name: Codemagic API
+      weight: 8
+    - identifier: billing
+      name: Billing & Pricing
+      weight: 9
+    - identifier: specs
+      name: Build machine specs
 
-  # general:
-  #   - identifier: getting-started
-  #     name: Getting started
-  # file:
-  #   - identifier: sample-projects-yaml
-  #     name: Sample Projects
-  #   - identifier: building-yaml
-  #     name: Configuration
-  #   - identifier: testing-yaml
-  #     name: Testing
-  #   - identifier: code-signing-yaml
-  #     name: Code signing
-  #   - identifier: publishing-yaml
-  #     name: Publishing
-  #   - identifier: flutter-yaml
-  #     name: Flutter
-  # ui:
-  #   - identifier: setup-flutter
-  #     name: Flutter workflow editor
-  #   - identifier: flutter
-  #     name: Flutter build configuration
-  #   - identifier: testing
-  #     name: Testing
-  #   - identifier: code-signing
-  #     name: Code signing
-  #   - identifier: publishing
-  #     name: Distribution and notifications
-  # other:
-  #   - identifier: building
-  #     name: Build
-  #   - identifier: teams
-  #     name: Teams
-  #   - identifier: billing
-  #     name: Billing & Pricing
-  #   - identifier: knowledge-base
-  #     name: Knowledge base
-  #   - identifier: rest-api
-  #     name: Codemagic API
-  #   - identifier: troubleshooting
-  #     name: Troubleshooting
-  #   - identifier: specs
-  #     name: Build machine specs
-  #   - identifier: integrations
-  #     name: Integrations
+    - identifier: running-locally
+      name: Codemagic CLI tools
 
 mediaTypes:
   video/mp4:
diff --git a/content/flutter/code-signing/android-code-signing.md b/content/flutter-code-signing/android-code-signing.md
similarity index 100%
rename from content/flutter/code-signing/android-code-signing.md
rename to content/flutter-code-signing/android-code-signing.md
diff --git a/content/flutter/code-signing/ios-code-signing.md b/content/flutter-code-signing/ios-code-signing.md
similarity index 100%
rename from content/flutter/code-signing/ios-code-signing.md
rename to content/flutter-code-signing/ios-code-signing.md
diff --git a/content/flutter/code-signing/macos-code-signing.md b/content/flutter-code-signing/macos-code-signing.md
similarity index 100%
rename from content/flutter/code-signing/macos-code-signing.md
rename to content/flutter-code-signing/macos-code-signing.md
diff --git a/content/flutter/configuration/automatic-build-triggering.md b/content/flutter-configuration/automatic-build-triggering.md
similarity index 100%
rename from content/flutter/configuration/automatic-build-triggering.md
rename to content/flutter-configuration/automatic-build-triggering.md
diff --git a/content/flutter/configuration/creating-workflows.md b/content/flutter-configuration/creating-workflows.md
similarity index 100%
rename from content/flutter/configuration/creating-workflows.md
rename to content/flutter-configuration/creating-workflows.md
diff --git a/content/flutter/configuration/custom-scripts.md b/content/flutter-configuration/custom-scripts.md
similarity index 100%
rename from content/flutter/configuration/custom-scripts.md
rename to content/flutter-configuration/custom-scripts.md
diff --git a/content/flutter/configuration/dependency-caching.md b/content/flutter-configuration/dependency-caching.md
similarity index 100%
rename from content/flutter/configuration/dependency-caching.md
rename to content/flutter-configuration/dependency-caching.md
diff --git a/content/flutter/configuration/encrypting.md b/content/flutter-configuration/encrypting.md
similarity index 100%
rename from content/flutter/configuration/encrypting.md
rename to content/flutter-configuration/encrypting.md
diff --git a/content/flutter/configuration/env-variables.md b/content/flutter-configuration/env-variables.md
similarity index 100%
rename from content/flutter/configuration/env-variables.md
rename to content/flutter-configuration/env-variables.md
diff --git a/content/flutter/configuration/flutter-projects.md b/content/flutter-configuration/flutter-projects.md
similarity index 100%
rename from content/flutter/configuration/flutter-projects.md
rename to content/flutter-configuration/flutter-projects.md
diff --git a/content/flutter/configuration/webhooks.md b/content/flutter-configuration/webhooks.md
similarity index 100%
rename from content/flutter/configuration/webhooks.md
rename to content/flutter-configuration/webhooks.md
diff --git a/content/flutter/publishing/beta-deployment-with-fastlane.md b/content/flutter-publishing/beta-deployment-with-fastlane.md
similarity index 100%
rename from content/flutter/publishing/beta-deployment-with-fastlane.md
rename to content/flutter-publishing/beta-deployment-with-fastlane.md
diff --git a/content/flutter/publishing/email-and-slack-notifications.md b/content/flutter-publishing/email-and-slack-notifications.md
similarity index 100%
rename from content/flutter/publishing/email-and-slack-notifications.md
rename to content/flutter-publishing/email-and-slack-notifications.md
diff --git a/content/flutter/publishing/firebase-app-distribution.md b/content/flutter-publishing/firebase-app-distribution.md
similarity index 100%
rename from content/flutter/publishing/firebase-app-distribution.md
rename to content/flutter-publishing/firebase-app-distribution.md
diff --git a/content/flutter/publishing/github-release.md b/content/flutter-publishing/github-release.md
similarity index 100%
rename from content/flutter/publishing/github-release.md
rename to content/flutter-publishing/github-release.md
diff --git a/content/flutter/publishing/publish-app-artifacts-to-app-center.md b/content/flutter-publishing/publish-app-artifacts-to-app-center.md
similarity index 100%
rename from content/flutter/publishing/publish-app-artifacts-to-app-center.md
rename to content/flutter-publishing/publish-app-artifacts-to-app-center.md
diff --git a/content/flutter/publishing/publish-build-artifacts-to-amazon-s3.md b/content/flutter-publishing/publish-build-artifacts-to-amazon-s3.md
similarity index 100%
rename from content/flutter/publishing/publish-build-artifacts-to-amazon-s3.md
rename to content/flutter-publishing/publish-build-artifacts-to-amazon-s3.md
diff --git a/content/flutter/publishing/publish-release-notes.md b/content/flutter-publishing/publish-release-notes.md
similarity index 100%
rename from content/flutter/publishing/publish-release-notes.md
rename to content/flutter-publishing/publish-release-notes.md
diff --git a/content/flutter/publishing/publishing-to-app-store.md b/content/flutter-publishing/publishing-to-app-store.md
similarity index 100%
rename from content/flutter/publishing/publishing-to-app-store.md
rename to content/flutter-publishing/publishing-to-app-store.md
diff --git a/content/flutter/publishing/publishing-to-codemagic-static-pages.md b/content/flutter-publishing/publishing-to-codemagic-static-pages.md
similarity index 100%
rename from content/flutter/publishing/publishing-to-codemagic-static-pages.md
rename to content/flutter-publishing/publishing-to-codemagic-static-pages.md
diff --git a/content/flutter/publishing/publishing-to-google-play.md b/content/flutter-publishing/publishing-to-google-play.md
similarity index 100%
rename from content/flutter/publishing/publishing-to-google-play.md
rename to content/flutter-publishing/publishing-to-google-play.md
diff --git a/content/flutter/publishing/snap-store.md b/content/flutter-publishing/snap-store.md
similarity index 100%
rename from content/flutter/publishing/snap-store.md
rename to content/flutter-publishing/snap-store.md
diff --git a/content/flutter/testing/beta-testing-with-testmagic.md b/content/flutter-testing/beta-testing-with-testmagic.md
similarity index 100%
rename from content/flutter/testing/beta-testing-with-testmagic.md
rename to content/flutter-testing/beta-testing-with-testmagic.md
diff --git a/content/flutter/testing/running-automated-tests.md b/content/flutter-testing/running-automated-tests.md
similarity index 100%
rename from content/flutter/testing/running-automated-tests.md
rename to content/flutter-testing/running-automated-tests.md
diff --git a/content/flutter/testing/static-code-analysis.md b/content/flutter-testing/static-code-analysis.md
similarity index 100%
rename from content/flutter/testing/static-code-analysis.md
rename to content/flutter-testing/static-code-analysis.md
diff --git a/content/flutter/testing/testing-widgets.md b/content/flutter-testing/testing-widgets.md
similarity index 100%
rename from content/flutter/testing/testing-widgets.md
rename to content/flutter-testing/testing-widgets.md
diff --git a/content/yaml/code-signing/signing-android.md b/content/yaml-code-signing/signing-android.md
similarity index 100%
rename from content/yaml/code-signing/signing-android.md
rename to content/yaml-code-signing/signing-android.md
diff --git a/content/yaml/code-signing/signing-ios.md b/content/yaml-code-signing/signing-ios.md
similarity index 100%
rename from content/yaml/code-signing/signing-ios.md
rename to content/yaml-code-signing/signing-ios.md
diff --git a/content/yaml/code-signing/signing-macos.md b/content/yaml-code-signing/signing-macos.md
similarity index 100%
rename from content/yaml/code-signing/signing-macos.md
rename to content/yaml-code-signing/signing-macos.md
diff --git a/content/yaml/publishing/distribution.md b/content/yaml-publishing/distribution.md
similarity index 100%
rename from content/yaml/publishing/distribution.md
rename to content/yaml-publishing/distribution.md
diff --git a/content/yaml/publishing/public-dashboards.md b/content/yaml-publishing/public-dashboards.md
similarity index 100%
rename from content/yaml/publishing/public-dashboards.md
rename to content/yaml-publishing/public-dashboards.md
diff --git a/content/yaml/publishing/publish-release-notes.md b/content/yaml-publishing/publish-release-notes.md
similarity index 100%
rename from content/yaml/publishing/publish-release-notes.md
rename to content/yaml-publishing/publish-release-notes.md
diff --git a/content/yaml/publishing/status-badges.md b/content/yaml-publishing/status-badges.md
similarity index 100%
rename from content/yaml/publishing/status-badges.md
rename to content/yaml-publishing/status-badges.md
diff --git a/content/yaml/quick-start/building-a-cordova-app.md b/content/yaml-quick-start/building-a-cordova-app.md
similarity index 100%
rename from content/yaml/quick-start/building-a-cordova-app.md
rename to content/yaml-quick-start/building-a-cordova-app.md
diff --git a/content/yaml/quick-start/building-a-flutter-app.md b/content/yaml-quick-start/building-a-flutter-app.md
similarity index 100%
rename from content/yaml/quick-start/building-a-flutter-app.md
rename to content/yaml-quick-start/building-a-flutter-app.md
diff --git a/content/yaml/quick-start/building-a-native-android-app.md b/content/yaml-quick-start/building-a-native-android-app.md
similarity index 100%
rename from content/yaml/quick-start/building-a-native-android-app.md
rename to content/yaml-quick-start/building-a-native-android-app.md
diff --git a/content/yaml/quick-start/building-a-native-ios-app.md b/content/yaml-quick-start/building-a-native-ios-app.md
similarity index 100%
rename from content/yaml/quick-start/building-a-native-ios-app.md
rename to content/yaml-quick-start/building-a-native-ios-app.md
diff --git a/content/yaml/quick-start/building-a-react-native-app.md b/content/yaml-quick-start/building-a-react-native-app.md
similarity index 100%
rename from content/yaml/quick-start/building-a-react-native-app.md
rename to content/yaml-quick-start/building-a-react-native-app.md
diff --git a/content/yaml/quick-start/building-a-snap-package.md b/content/yaml-quick-start/building-a-snap-package.md
similarity index 100%
rename from content/yaml/quick-start/building-a-snap-package.md
rename to content/yaml-quick-start/building-a-snap-package.md
diff --git a/content/yaml/quick-start/building-an-ionic-app.md b/content/yaml-quick-start/building-an-ionic-app.md
similarity index 100%
rename from content/yaml/quick-start/building-an-ionic-app.md
rename to content/yaml-quick-start/building-an-ionic-app.md
diff --git a/content/yaml/quick-start/building_a_native_app_with_flutter_module.md b/content/yaml-quick-start/building_a_native_app_with_flutter_module.md
similarity index 100%
rename from content/yaml/quick-start/building_a_native_app_with_flutter_module.md
rename to content/yaml-quick-start/building_a_native_app_with_flutter_module.md
diff --git a/content/yaml/quick-start/codemagic-sample-projects.md b/content/yaml-quick-start/codemagic-sample-projects.md
similarity index 100%
rename from content/yaml/quick-start/codemagic-sample-projects.md
rename to content/yaml-quick-start/codemagic-sample-projects.md
diff --git a/content/yaml/testing/firebase-test-lab.md b/content/yaml-testing/firebase-test-lab.md
similarity index 100%
rename from content/yaml/testing/firebase-test-lab.md
rename to content/yaml-testing/firebase-test-lab.md
diff --git a/content/yaml/testing/testing.md b/content/yaml-testing/testing.md
similarity index 100%
rename from content/yaml/testing/testing.md
rename to content/yaml-testing/testing.md
diff --git a/content/yaml/_index.md b/content/yaml/_index.md
deleted file mode 100644
index 3fb9d07..0000000
--- a/content/yaml/_index.md
+++ /dev/null
@@ -1,3 +0,0 @@
----
-menu: "main"
----
\ No newline at end of file
diff --git a/content/yaml/yaml.md b/content/yaml/yaml-getting-started.md
similarity index 100%
rename from content/yaml/yaml.md
rename to content/yaml/yaml-getting-started.md
diff --git a/content/yaml/validate.md b/content/yaml/yaml-validate.md
similarity index 100%
rename from content/yaml/validate.md
rename to content/yaml/yaml-validate.md
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 058cf9f..8dd3932 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -5,16 +5,10 @@
       <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}" data-js-docs-menu-item>
         <div class="category-name" data-js-category-name>{{ .Name }}</div>
         <div class="category-posts" data-js-category-posts>
-          {{/*  <pre>
-            {{ printf "%#v" .HasChildren }}
-          </pre>  */}}
           {{- if .HasChildren }}
-            {{/*  <pre>
-              {{ printf "%#v" .Children }}
-            </pre>  */}}
             {{ template "content-menu" (dict "menuItems" .Children "currentPage" $currentPage)}}
           {{- end }}
-          {{ range where site.Pages "Section" .Identifier -}}
+          {{ range where site.RegularPages "Section" .Identifier -}}
             <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
           {{- end }}
         </div>
@@ -29,5 +23,4 @@
     <a id="codemagic-landing-link" onclick="sendGtag('Codemagic_clicked', 'DocumentationMenu')" href="https://codemagic.io/start" target="_blank">Codemagic</a>
     <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Codemagic Blog</a>
   </div>
-  <button class='configuration-switch'>Reset configuration switch</button>
 </nav>

commit 25d0eed06175b9b09c1ee9457b40e2f307df242f
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Thu Aug 5 18:28:48 2021 +0300

    intermediate'

diff --git a/assets/js/main.js b/assets/js/main.js
index fd13ffd..a898068 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -380,7 +380,7 @@ $(window).ready(function () {
         if (type === 'file') {
             window.location.href = '/getting-started/yaml/'
         } else if (type === 'ui') {
-            window.location.href = '/getting-started/building-a-flutter-app/'
+            window.location.href = '/flutter-yaml/flutter-projects/'
         }
     })
 })
\ No newline at end of file
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index ae5c42b..9ac66ec 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -691,3 +691,17 @@ body {
         display: inline-block;
     }
 }
+
+pre {
+    background: #f4f4f4;
+    border: 1px solid #ddd;
+    border-left: 3px solid #f36d33;
+    color: #666;
+    page-break-inside: avoid;
+    font-family: monospace;
+    font-size: 15px;
+    max-width: 100%;
+    overflow: auto;
+    display: block;
+    word-wrap: break-word;
+}
diff --git a/config.yml b/config.yml
index 8da80c0..d6944a6 100644
--- a/config.yml
+++ b/config.yml
@@ -32,52 +32,62 @@ defaultContentLanguage: en
 disable404: true
 enableGitInfo: true
 
-sectionPagesMenu: main
+# sectionPagesMenu: main
+pluralizeListTitles: false
 menu:
-  general:
+  main:
     - identifier: getting-started
       name: Getting started
-  file:
-    - identifier: sample-projects-yaml
-      name: Sample Projects
-    - identifier: building-yaml
-      name: Configuration
-    - identifier: testing-yaml
-      name: Testing
-    - identifier: code-signing-yaml
-      name: Code signing
-    - identifier: publishing-yaml
-      name: Publishing
-    - identifier: flutter-yaml
-      name: Flutter
-  ui:
-    - identifier: setup-flutter
-      name: Flutter workflow editor
-    - identifier: flutter
-      name: Flutter build configuration
-    - identifier: testing
-      name: Testing
-    - identifier: code-signing
-      name: Code signing
-    - identifier: publishing
-      name: Distribution and notifications
-  other:
-    - identifier: building
-      name: Build
-    - identifier: teams
-      name: Teams
-    - identifier: billing
-      name: Billing & Pricing
-    - identifier: knowledge-base
-      name: Knowledge base
-    - identifier: rest-api
-      name: Codemagic API
-    - identifier: troubleshooting
-      name: Troubleshooting
-    - identifier: specs
-      name: Build machine specs
-    - identifier: integrations
-      name: Integrations
+    - identifier: yaml
+      name: YAML
+    # - identifier: code-signing
+    #   name: code signing
+    #   parent: yaml
+
+  # general:
+  #   - identifier: getting-started
+  #     name: Getting started
+  # file:
+  #   - identifier: sample-projects-yaml
+  #     name: Sample Projects
+  #   - identifier: building-yaml
+  #     name: Configuration
+  #   - identifier: testing-yaml
+  #     name: Testing
+  #   - identifier: code-signing-yaml
+  #     name: Code signing
+  #   - identifier: publishing-yaml
+  #     name: Publishing
+  #   - identifier: flutter-yaml
+  #     name: Flutter
+  # ui:
+  #   - identifier: setup-flutter
+  #     name: Flutter workflow editor
+  #   - identifier: flutter
+  #     name: Flutter build configuration
+  #   - identifier: testing
+  #     name: Testing
+  #   - identifier: code-signing
+  #     name: Code signing
+  #   - identifier: publishing
+  #     name: Distribution and notifications
+  # other:
+  #   - identifier: building
+  #     name: Build
+  #   - identifier: teams
+  #     name: Teams
+  #   - identifier: billing
+  #     name: Billing & Pricing
+  #   - identifier: knowledge-base
+  #     name: Knowledge base
+  #   - identifier: rest-api
+  #     name: Codemagic API
+  #   - identifier: troubleshooting
+  #     name: Troubleshooting
+  #   - identifier: specs
+  #     name: Build machine specs
+  #   - identifier: integrations
+  #     name: Integrations
 
 mediaTypes:
   video/mp4:
diff --git a/content/building/access-private-git-submodules.md b/content/configuration/access-private-git-submodules.md
similarity index 100%
rename from content/building/access-private-git-submodules.md
rename to content/configuration/access-private-git-submodules.md
diff --git a/content/building/build-versioning.md b/content/configuration/build-versioning.md
similarity index 100%
rename from content/building/build-versioning.md
rename to content/configuration/build-versioning.md
diff --git a/content/building-yaml/environment-variable-groups.md b/content/configuration/environment-variable-groups.md
similarity index 100%
rename from content/building-yaml/environment-variable-groups.md
rename to content/configuration/environment-variable-groups.md
diff --git a/content/building/environment-variables.md b/content/configuration/environment-variables.md
similarity index 100%
rename from content/building/environment-variables.md
rename to content/configuration/environment-variables.md
diff --git a/content/building/github-checks.md b/content/configuration/github-checks.md
similarity index 100%
rename from content/building/github-checks.md
rename to content/configuration/github-checks.md
diff --git a/content/building/scheduling.md b/content/configuration/scheduling.md
similarity index 100%
rename from content/building/scheduling.md
rename to content/configuration/scheduling.md
diff --git a/content/building/timeout.md b/content/configuration/timeout.md
similarity index 100%
rename from content/building/timeout.md
rename to content/configuration/timeout.md
diff --git a/content/code-signing/android-code-signing.md b/content/flutter/code-signing/android-code-signing.md
similarity index 100%
rename from content/code-signing/android-code-signing.md
rename to content/flutter/code-signing/android-code-signing.md
diff --git a/content/code-signing/ios-code-signing.md b/content/flutter/code-signing/ios-code-signing.md
similarity index 100%
rename from content/code-signing/ios-code-signing.md
rename to content/flutter/code-signing/ios-code-signing.md
diff --git a/content/code-signing/macos-code-signing.md b/content/flutter/code-signing/macos-code-signing.md
similarity index 100%
rename from content/code-signing/macos-code-signing.md
rename to content/flutter/code-signing/macos-code-signing.md
diff --git a/content/flutter/automatic-build-triggering.md b/content/flutter/configuration/automatic-build-triggering.md
similarity index 100%
rename from content/flutter/automatic-build-triggering.md
rename to content/flutter/configuration/automatic-build-triggering.md
diff --git a/content/flutter/creating-workflows.md b/content/flutter/configuration/creating-workflows.md
similarity index 100%
rename from content/flutter/creating-workflows.md
rename to content/flutter/configuration/creating-workflows.md
diff --git a/content/flutter/custom-scripts.md b/content/flutter/configuration/custom-scripts.md
similarity index 100%
rename from content/flutter/custom-scripts.md
rename to content/flutter/configuration/custom-scripts.md
diff --git a/content/flutter/dependency-caching.md b/content/flutter/configuration/dependency-caching.md
similarity index 100%
rename from content/flutter/dependency-caching.md
rename to content/flutter/configuration/dependency-caching.md
diff --git a/content/flutter/encrypting.md b/content/flutter/configuration/encrypting.md
similarity index 100%
rename from content/flutter/encrypting.md
rename to content/flutter/configuration/encrypting.md
diff --git a/content/flutter/env-variables.md b/content/flutter/configuration/env-variables.md
similarity index 100%
rename from content/flutter/env-variables.md
rename to content/flutter/configuration/env-variables.md
diff --git a/content/flutter-yaml/flutter-projects.md b/content/flutter/configuration/flutter-projects.md
similarity index 100%
rename from content/flutter-yaml/flutter-projects.md
rename to content/flutter/configuration/flutter-projects.md
diff --git a/content/flutter/webhooks.md b/content/flutter/configuration/webhooks.md
similarity index 100%
rename from content/flutter/webhooks.md
rename to content/flutter/configuration/webhooks.md
diff --git a/content/publishing/beta-deployment-with-fastlane.md b/content/flutter/publishing/beta-deployment-with-fastlane.md
similarity index 100%
rename from content/publishing/beta-deployment-with-fastlane.md
rename to content/flutter/publishing/beta-deployment-with-fastlane.md
diff --git a/content/publishing/email-and-slack-notifications.md b/content/flutter/publishing/email-and-slack-notifications.md
similarity index 100%
rename from content/publishing/email-and-slack-notifications.md
rename to content/flutter/publishing/email-and-slack-notifications.md
diff --git a/content/publishing/firebase-app-distribution.md b/content/flutter/publishing/firebase-app-distribution.md
similarity index 100%
rename from content/publishing/firebase-app-distribution.md
rename to content/flutter/publishing/firebase-app-distribution.md
diff --git a/content/publishing/github-release.md b/content/flutter/publishing/github-release.md
similarity index 100%
rename from content/publishing/github-release.md
rename to content/flutter/publishing/github-release.md
diff --git a/content/publishing/publish-app-artifacts-to-app-center.md b/content/flutter/publishing/publish-app-artifacts-to-app-center.md
similarity index 100%
rename from content/publishing/publish-app-artifacts-to-app-center.md
rename to content/flutter/publishing/publish-app-artifacts-to-app-center.md
diff --git a/content/publishing/publish-build-artifacts-to-amazon-s3.md b/content/flutter/publishing/publish-build-artifacts-to-amazon-s3.md
similarity index 100%
rename from content/publishing/publish-build-artifacts-to-amazon-s3.md
rename to content/flutter/publishing/publish-build-artifacts-to-amazon-s3.md
diff --git a/content/publishing/publish-release-notes.md b/content/flutter/publishing/publish-release-notes.md
similarity index 100%
rename from content/publishing/publish-release-notes.md
rename to content/flutter/publishing/publish-release-notes.md
diff --git a/content/publishing/publishing-to-app-store.md b/content/flutter/publishing/publishing-to-app-store.md
similarity index 100%
rename from content/publishing/publishing-to-app-store.md
rename to content/flutter/publishing/publishing-to-app-store.md
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/flutter/publishing/publishing-to-codemagic-static-pages.md
similarity index 100%
rename from content/publishing/publishing-to-codemagic-static-pages.md
rename to content/flutter/publishing/publishing-to-codemagic-static-pages.md
diff --git a/content/publishing/publishing-to-google-play.md b/content/flutter/publishing/publishing-to-google-play.md
similarity index 100%
rename from content/publishing/publishing-to-google-play.md
rename to content/flutter/publishing/publishing-to-google-play.md
diff --git a/content/publishing/snap-store.md b/content/flutter/publishing/snap-store.md
similarity index 100%
rename from content/publishing/snap-store.md
rename to content/flutter/publishing/snap-store.md
diff --git a/content/testing/beta-testing-with-testmagic.md b/content/flutter/testing/beta-testing-with-testmagic.md
similarity index 100%
rename from content/testing/beta-testing-with-testmagic.md
rename to content/flutter/testing/beta-testing-with-testmagic.md
diff --git a/content/testing/running-automated-tests.md b/content/flutter/testing/running-automated-tests.md
similarity index 100%
rename from content/testing/running-automated-tests.md
rename to content/flutter/testing/running-automated-tests.md
diff --git a/content/testing/static-code-analysis.md b/content/flutter/testing/static-code-analysis.md
similarity index 100%
rename from content/testing/static-code-analysis.md
rename to content/flutter/testing/static-code-analysis.md
diff --git a/content/testing/testing-widgets.md b/content/flutter/testing/testing-widgets.md
similarity index 100%
rename from content/testing/testing-widgets.md
rename to content/flutter/testing/testing-widgets.md
diff --git a/content/knowledge-base/Firebase Crashlytics dsym uploading b/content/knowledge-base/firebase-crashlytics-dsym-uploading.md
similarity index 100%
rename from content/knowledge-base/Firebase Crashlytics dsym uploading
rename to content/knowledge-base/firebase-crashlytics-dsym-uploading.md
diff --git a/content/building/running-locally.md b/content/running-locally/running-locally.md
similarity index 100%
rename from content/building/running-locally.md
rename to content/running-locally/running-locally.md
diff --git a/content/yaml/_index.md b/content/yaml/_index.md
new file mode 100644
index 0000000..3fb9d07
--- /dev/null
+++ b/content/yaml/_index.md
@@ -0,0 +1,3 @@
+---
+menu: "main"
+---
\ No newline at end of file
diff --git a/content/code-signing-yaml/signing-android.md b/content/yaml/code-signing/signing-android.md
similarity index 100%
rename from content/code-signing-yaml/signing-android.md
rename to content/yaml/code-signing/signing-android.md
diff --git a/content/code-signing-yaml/signing-ios.md b/content/yaml/code-signing/signing-ios.md
similarity index 100%
rename from content/code-signing-yaml/signing-ios.md
rename to content/yaml/code-signing/signing-ios.md
diff --git a/content/code-signing-yaml/signing-macos.md b/content/yaml/code-signing/signing-macos.md
similarity index 100%
rename from content/code-signing-yaml/signing-macos.md
rename to content/yaml/code-signing/signing-macos.md
diff --git a/content/publishing-yaml/distribution.md b/content/yaml/publishing/distribution.md
similarity index 100%
rename from content/publishing-yaml/distribution.md
rename to content/yaml/publishing/distribution.md
diff --git a/content/publishing-yaml/public-dashboards.md b/content/yaml/publishing/public-dashboards.md
similarity index 100%
rename from content/publishing-yaml/public-dashboards.md
rename to content/yaml/publishing/public-dashboards.md
diff --git a/content/publishing-yaml/publish-release-notes.md b/content/yaml/publishing/publish-release-notes.md
similarity index 100%
rename from content/publishing-yaml/publish-release-notes.md
rename to content/yaml/publishing/publish-release-notes.md
diff --git a/content/publishing-yaml/status-badges.md b/content/yaml/publishing/status-badges.md
similarity index 100%
rename from content/publishing-yaml/status-badges.md
rename to content/yaml/publishing/status-badges.md
diff --git a/content/getting-started/building-a-cordova-app.md b/content/yaml/quick-start/building-a-cordova-app.md
similarity index 100%
rename from content/getting-started/building-a-cordova-app.md
rename to content/yaml/quick-start/building-a-cordova-app.md
diff --git a/content/getting-started/building-a-flutter-app.md b/content/yaml/quick-start/building-a-flutter-app.md
similarity index 100%
rename from content/getting-started/building-a-flutter-app.md
rename to content/yaml/quick-start/building-a-flutter-app.md
diff --git a/content/getting-started/building-a-native-android-app.md b/content/yaml/quick-start/building-a-native-android-app.md
similarity index 100%
rename from content/getting-started/building-a-native-android-app.md
rename to content/yaml/quick-start/building-a-native-android-app.md
diff --git a/content/getting-started/building-a-native-ios-app.md b/content/yaml/quick-start/building-a-native-ios-app.md
similarity index 100%
rename from content/getting-started/building-a-native-ios-app.md
rename to content/yaml/quick-start/building-a-native-ios-app.md
diff --git a/content/getting-started/building-a-react-native-app.md b/content/yaml/quick-start/building-a-react-native-app.md
similarity index 100%
rename from content/getting-started/building-a-react-native-app.md
rename to content/yaml/quick-start/building-a-react-native-app.md
diff --git a/content/getting-started/building-a-snap-package.md b/content/yaml/quick-start/building-a-snap-package.md
similarity index 100%
rename from content/getting-started/building-a-snap-package.md
rename to content/yaml/quick-start/building-a-snap-package.md
diff --git a/content/getting-started/building-an-ionic-app.md b/content/yaml/quick-start/building-an-ionic-app.md
similarity index 100%
rename from content/getting-started/building-an-ionic-app.md
rename to content/yaml/quick-start/building-an-ionic-app.md
diff --git a/content/getting-started/building_a_native_app_with_flutter_module.md b/content/yaml/quick-start/building_a_native_app_with_flutter_module.md
similarity index 100%
rename from content/getting-started/building_a_native_app_with_flutter_module.md
rename to content/yaml/quick-start/building_a_native_app_with_flutter_module.md
diff --git a/content/sample-projects-yaml/codemagic-sample-projects.md b/content/yaml/quick-start/codemagic-sample-projects.md
similarity index 100%
rename from content/sample-projects-yaml/codemagic-sample-projects.md
rename to content/yaml/quick-start/codemagic-sample-projects.md
diff --git a/content/testing-yaml/firebase-test-lab.md b/content/yaml/testing/firebase-test-lab.md
similarity index 100%
rename from content/testing-yaml/firebase-test-lab.md
rename to content/yaml/testing/firebase-test-lab.md
diff --git a/content/testing-yaml/testing.md b/content/yaml/testing/testing.md
similarity index 100%
rename from content/testing-yaml/testing.md
rename to content/yaml/testing/testing.md
diff --git a/content/knowledge-base/validate-yaml.md b/content/yaml/validate.md
similarity index 100%
rename from content/knowledge-base/validate-yaml.md
rename to content/yaml/validate.md
diff --git a/content/getting-started/yaml.md b/content/yaml/yaml.md
similarity index 100%
rename from content/getting-started/yaml.md
rename to content/yaml/yaml.md
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 51d6f06..058cf9f 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -5,7 +5,13 @@
       <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}" data-js-docs-menu-item>
         <div class="category-name" data-js-category-name>{{ .Name }}</div>
         <div class="category-posts" data-js-category-posts>
+          {{/*  <pre>
+            {{ printf "%#v" .HasChildren }}
+          </pre>  */}}
           {{- if .HasChildren }}
+            {{/*  <pre>
+              {{ printf "%#v" .Children }}
+            </pre>  */}}
             {{ template "content-menu" (dict "menuItems" .Children "currentPage" $currentPage)}}
           {{- end }}
           {{ range where site.Pages "Section" .Identifier -}}
@@ -18,18 +24,7 @@
 {{ end }}
 
 <nav id="docs-menu" data-js-docs-menu>
-  <button class='configuration-switch' value='file'>Switch to YAML configuration</button>
-  <button class='configuration-switch' value='ui'>Switch to Flutter UI configuration</button>
-  {{ template "content-menu" (dict "menuItems" .Site.Menus.general "currentPage" .)}}
-  <div id='file-configuration-loc' class='configuration-loc'>
-    <p>File configuration</p>
-    {{ template "content-menu" (dict "menuItems" .Site.Menus.file "currentPage" .)}}
-  </div>
-  <div id='ui-configuration-loc' class='configuration-loc'>
-    <p>UI configuration</p>
-    {{ template "content-menu" (dict "menuItems" .Site.Menus.ui "currentPage" .)}}
-  </div>
-  {{ template "content-menu" (dict "menuItems" .Site.Menus.other "currentPage" .)}}
+  {{ template "content-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}}
   <div class="external-links">
     <a id="codemagic-landing-link" onclick="sendGtag('Codemagic_clicked', 'DocumentationMenu')" href="https://codemagic.io/start" target="_blank">Codemagic</a>
     <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Codemagic Blog</a>

commit 052a4b829e582fb0ab30377497dc123c895c5842
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Aug 5 12:32:07 2021 +0300

    Add info about application limiting to global vars (#437)
    
    * Add info about application limiting to global vars
    
    * Update environment-variable-groups.md

diff --git a/content/building/environment-variable-groups.md b/content/building/environment-variable-groups.md
index 5e7fcb3..f0cc324 100644
--- a/content/building/environment-variable-groups.md
+++ b/content/building/environment-variable-groups.md
@@ -4,9 +4,10 @@ title: Environment variable groups
 weight: 3
 ---
 
-Environment variable groups allow you to define and store related sets of variables that are reusable in your [codemagic.yaml](../getting-started/yaml/) workflows. A variable *group* tags a set of variables that can be imported together in a codemagic.yaml file. For example, you could define a `staging` group for variables related to your staging deployment and a `production` group for variables related to your production deployment. The variable names in staging and production groups can be identical, but the values will be set depending on which group is imported in the workflow. This allows you to reference variables in reusable scripts, but assign the actual values per workflow based on the imported group.
+Environment variable groups allow you to define and store related sets of variables that are reusable in your [codemagic.yaml](../getting-started/yaml/) workflows. A variable _group_ tags a set of variables that can be imported together in a codemagic.yaml file. For example, you could define a `staging` group for variables related to your staging deployment and a `production` group for variables related to your production deployment. The variable names in staging and production groups can be identical, but the values will be set depending on which group is imported in the workflow. This allows you to reference variables in reusable scripts, but assign the actual values per workflow based on the imported group.
 
 One or more variable groups can be imported into codemagic.yaml [environment section](../getting-started/yaml/#environment). For example, variable groups named `magic_values` and `other_values` can be imported with the following syntax:
+
 ```yaml
 workflows:
   workflow-name:
@@ -16,11 +17,13 @@ workflows:
         - other_values
 ```
 
-Variables defined in environment variable groups work exactly as [Environment Variables](../building/environment-variables/#using-environment-variables). The value of a variable named `API_TOKEN` can be referenced in a workflow as `$API_TOKEN`. Variables defined with the ***secure*** option will have values obfuscated in the Codemagic UI.
+Variables defined in environment variable groups work exactly as [Environment Variables](../building/environment-variables/#using-environment-variables). The value of a variable named `API_TOKEN` can be referenced in a workflow as `$API_TOKEN`. Variables defined with the **_secure_** option will have values obfuscated in the Codemagic UI.
 
 ## Global variables and secrets
 
-Global variable groups can be defined on the team settings page (which you can navigate to for your team on the [Teams page](https://codemagic.io/teams)). Variable groups defined here can be used in any codemagic.yaml workflow in any application of the team.
+Global variable groups can be defined on the team settings page (which you can navigate to for your team on the [Teams page](https://codemagic.io/teams)).
+
+By default, variable groups defined here can be used in any codemagic.yaml workflow in any application of the team. It is possible to limit variable groups to specific applications by clicking the edit icon next to the group you wish to manage under **Application access**.
 
 {{<notebox>}}
 Global variable groups are only available for Teams. You can read more about teams [here](https://docs.codemagic.io/teams/teams/).
@@ -43,15 +46,15 @@ Environment variables with the same name and group from different sources will h
 1. Application variables
 1. Global variables
 
-This means variables defined in a scope of higher precedence can override those in a lower precedence with the same name. For example, if you have a global variable `API_KEY` with a value `global` that is also defined in an application variable with the value `app`, then the value `app` will be used.  
+This means variables defined in a scope of higher precedence can override those in a lower precedence with the same name. For example, if you have a global variable `API_KEY` with a value `global` that is also defined in an application variable with the value `app`, then the value `app` will be used.
 
 If variables with the same name are defined and imported from different groups of the same level of precedence, the values from the last imported variable group will be used. For example, if two application variable groups `magic` and `wand` are defined each with a variable named `magic_number` and imported in a codemagic.yaml like so:
 
 ```yaml
 environment:
-    groups:
-      - magic
-      - wand
+  groups:
+    - magic
+    - wand
 ```
 
-Then the variable value in the group `wand` will be used. 
\ No newline at end of file
+Then the variable value in the group `wand` will be used.

commit f26abe694a863cb8844c49cac625f40070450126
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Thu Aug 5 12:14:38 2021 +0300

    Add redirect and reset

diff --git a/assets/js/main.js b/assets/js/main.js
index a4e44b2..fd13ffd 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -343,23 +343,44 @@ $(window).ready(function () {
 })
 
 function showConfigurationToc (type) {
-    const prevType = type === 'file' ? 'ui' : 'file'
+    if (!type) {
+        window.localStorage.removeItem('preferred-configuration')
+        const buttons = $('.configuration-switch')
+        buttons.show()
+        const locs = $('.configuration-loc')
+        locs.show()
+        return
+    }
 
-    const button = $('#configuration-toggle')
-    button.val(prevType)
-    button.html(`I am using ${prevType.toUpperCase()} workflow editor`)
+    const otherType = type === 'file' ? 'ui' : 'file'
 
-    const prevToc = $(`#${prevType}-configuration-loc`)
-    prevToc.hide()
+    const button = $(`.configuration-switch[value='${type}']`)
+    button.hide()
 
     const toc = $(`#${type}-configuration-loc`)
     toc.show()
+
+    const otherButton = $(`.configuration-switch[value='${otherType}']`)
+    otherButton.show()
+
+    const otherToc = $(`#${otherType}-configuration-loc`)
+    otherToc.hide()
+
+    window.localStorage.setItem('preferred-configuration', type)
 }
 
 // Configuration toggle
 $(window).ready(function () {
-    showConfigurationToc('yaml')
-    $('#configuration-toggle').on('click', function (event) {
-        showConfigurationToc(event.target.value)
+    const configuration = window.localStorage.getItem('preferred-configuration')
+    showConfigurationToc(configuration)
+    $('.configuration-switch').on('click', function (event) {
+        const type = event.target.value
+
+        showConfigurationToc(type)
+        if (type === 'file') {
+            window.location.href = '/getting-started/yaml/'
+        } else if (type === 'ui') {
+            window.location.href = '/getting-started/building-a-flutter-app/'
+        }
     })
 })
\ No newline at end of file
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index cf89c5d..ae5c42b 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -91,6 +91,9 @@ body {
             width: 100%;
             box-sizing: border-box;
 
+            p {
+                color: gray;
+            }
             &::after {
                 content: '';
                 display: block;
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index ad7658f..51d6f06 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -18,17 +18,21 @@
 {{ end }}
 
 <nav id="docs-menu" data-js-docs-menu>
-  <button id='configuration-toggle'>I am using UI workflow editor</button>
+  <button class='configuration-switch' value='file'>Switch to YAML configuration</button>
+  <button class='configuration-switch' value='ui'>Switch to Flutter UI configuration</button>
   {{ template "content-menu" (dict "menuItems" .Site.Menus.general "currentPage" .)}}
-  <div id='file-configuration-loc'>
-  {{ template "content-menu" (dict "menuItems" .Site.Menus.file "currentPage" .)}}
+  <div id='file-configuration-loc' class='configuration-loc'>
+    <p>File configuration</p>
+    {{ template "content-menu" (dict "menuItems" .Site.Menus.file "currentPage" .)}}
   </div>
-  <div id='ui-configuration-loc'>
-  {{ template "content-menu" (dict "menuItems" .Site.Menus.ui "currentPage" .)}}
+  <div id='ui-configuration-loc' class='configuration-loc'>
+    <p>UI configuration</p>
+    {{ template "content-menu" (dict "menuItems" .Site.Menus.ui "currentPage" .)}}
   </div>
   {{ template "content-menu" (dict "menuItems" .Site.Menus.other "currentPage" .)}}
   <div class="external-links">
     <a id="codemagic-landing-link" onclick="sendGtag('Codemagic_clicked', 'DocumentationMenu')" href="https://codemagic.io/start" target="_blank">Codemagic</a>
     <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Codemagic Blog</a>
   </div>
+  <button class='configuration-switch'>Reset configuration switch</button>
 </nav>

commit 0d0c9129554429601c138b48ffc6d7ada542144a
Author: Chris Raastad <craastad@gmail.com>
Date:   Thu Aug 5 10:07:27 2021 +0200

    Update build versioning docs (#436)
    
    Update build versioning docs to include a TLDR about App Store and Google Play versioning requirements, Flutter versioning, and sensible suggestions of what to do.

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 71e3bbe..5b57812 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -4,25 +4,59 @@ description: How to set a new build number to push to app stores
 weight: 6
 ---
 
-If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment the application version with every build is by using the environment variables that Codemagic exports during the build. There are two environment variables that count the number of builds:
+If you are going to publish your app to App Store Connect or Google Play, each uploaded artifact must have a new version satisfying each app store's requirements. You'll need to devise a build versioning strategy that satisfies the App Store and/or Google Play Store versioning requirements and works for your team's development processes. On this page, we will explain the App Store and Google Play build versioning requirements, how the Flutter framework generalizes build versioning, and various strategies to set your build versions using Codemagic. See the [build versioning codemagic blog article](https://blog.codemagic.io/build-versioning-with-codemagic/) for a detailed overview.
+
+## Overview of Build Versioning Requirements
+
+### App Store Connect Requirements
+
+The main values for iOS & macOS versioning are `CFBundleShortVersionString` (Release Version Number) and `CFBundleVersion` (Build Version Number). The best explanation of these two values, despite being outdated, is Apple's technical note on [Version Numbers and Build Numbers](https://developer.apple.com/library/archive/technotes/tn2420/_index.html).
+
+[CFBundleShortVersionString](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring), Release Version Number, is the external user facing release version of your app displayed in the App Store. It must follow the `{major}.{minor}.{patch}` version format of three period separated integers. This must be incremented every time you release a version to the App Store. It's advisable to commit this value to version control and update it for every new release of your app to the App Store.
+
+[CFBundleVersion](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleversion), Build Version Number, is the internal build version number of your application used for testing and development. It appears in `{major}.{minor}.{patch}` format of one to three period separated integers. If {minor}.{patch} are not provided, then they will default to zero. Build version number must be incremented with every release candidate submitted to TestFlight for a particular release version number. For iOS, build version number can be reused across different release version numbers while for macOS, build version number must be unique across all release version numbers. This value is best incremented and set by your CI/CD pipeline for every build you're submitting to TestFlight.
+
+### Google Play Requirements
+
+You can find the Google Play build versioning requirements in the [Android documentation](https://developer.android.com/studio/publish/versioning#appversioning). The important values defined in the build.gradle file are `versionName` and `versionCode`.
+
+`versionName` is a text based, external, version of your app that is displayed to users and visible in Google Play. There are no restrictions for `versionName`, so you should choose something that makes sense for you and your users, such as `{major}.{minor}.{patch}` versioning. It's advisable to commit this value to version control and update it for every new release of your app to the Play Store.
+
+`versionCode` is an internal version of your app that must be an integer value between `1` and `2100000000`. This must be incremented for every build you upload to Google Play. This value is best incremented and set by your CI/CD pipeline for every build.
+
+### Flutter Build Versioning
+
+Flutter generalizes iOS and Android build versioning with the [pubspec.yaml **version** property](https://github.com/flutter/flutter/blob/master/packages/flutter_tools/templates/app/pubspec.yaml.tmpl#L9-L19). This is a value in the form `{major}.{minor}.{patch}+{build_number}` (e.g. `1.2.3+45`). In Flutter builds, the value for build name, `{major}.{minor}.{patch}`, sets  `CFBundleShortVersionString` for iOS and `versionName` for Android. While the optional build number, `{build_number}`, sets `CFBundleVersion` for iOS and `versionCode` for Android. With `flutter build` commands these values can be overridden with the command line arguments `--build-name` and `--build-number` or by setting the environment variables `FLUTTER_BUILD_NAME` and `FLUTTER_BUILD_NUMBER`.
+
+It's advisable to set your build version (e.g. `1.2.3`) in the `pubspec.yaml` `version` property and commit this to version control, as this will only change on every app release. On the other hand, you should consider having your CI/CD pipeline increment and set build number automatically, as this should be updated for every build.
+
+## Build versioning from Codemagic environment variables 
+
+There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment the application version with every build is by using the [environment variables](../building/environment-variables/#codemagic-read-only-environment-variables) that Codemagic exports during the build. There are two environment variables that count the number of builds:
 
 * `BUILD_NUMBER`. Holds the total count of builds (including the ongoing build) for a specific **workflow** in Codemagic. In other words, if you have triggered 10 builds for some workflow in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`.
 
-* `PROJECT_BUILD_NUMBER`. Holds the total count of builds (including the ongoing build) for a **project** in Codemagic. In contrast with `BUILD_NUMBER`, `PROJECT_BUILD_NUMBER` will increase every time you build any of the workflows of the app.
+* `PROJECT_BUILD_NUMBER`. Holds the total count of builds (including the ongoing build) for a **project** (application) in Codemagic. In contrast with `BUILD_NUMBER`, `PROJECT_BUILD_NUMBER` will increase every time you build any of the workflows of the app.
 
-## Incrementing app version using environment variables
+### Increment app version using environment variables
 
-Here are some examples how you can increment the app version using Codemagic's read-only environment variables in build arguments:
+For Flutter, you can easily increment your build number and build name using the `PROJECT_BUILD_NUMBER` by passing the following to the build arguments:
 
 ```bash
---build-name=2.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER + 100))
+--build-name=1.0.$PROJECT_BUILD_NUMBER --build-number=$PROJECT_BUILD_NUMBER
+```
+
+Note I've added `--build-name` as an example, if you've committed this to version control in `pubspec.yaml` version field, then don't pass in this argument to builds.
 
---build-name=1.0.0 --build-number=$BUILD_NUMBER
+If you've added an existing project to Codemagic and need to offset the build number by the current build number, i.e. 200, then you can pass the following argument to correctly increment your build number.
+
+```
+--build-number=$(($PROJECT_BUILD_NUMBER + 200))
 ```
 
-## Set Xcode project build number via command line
+### Set Xcode project build number via command line
 
-Calling agvtool is another way of forcing Xcode to set the build version for your next build.
+You can use the [Xcode command line agvtool](https://developer.apple.com/library/archive/qa/qa1827/_index.html) to set the next build version name for your build.
 
 ```bash
 #!/bin/sh
@@ -33,7 +67,7 @@ cd $FCI_BUILD_DIR/ios
 agvtool new-version -all $(($BUILD_NUMBER + 1))
 ```
 
-## App Store or TestFlight latest build number using Codemagic CLI Tools
+## Get App Store or TestFlight latest build number using Codemagic CLI Tools
 
 Use [get-latest-app-store-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md#get-latest-app-store-build-number) or [get-latest-testflight-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md#get-latest-testflight-build-number) actions from [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/app-store-connect#app-store-connect) Codemagic CLI Tool to get the latest build numbers.
 
@@ -125,7 +159,7 @@ Check the details for [get-latest-app-store-build-number](https://github.com/cod
 
 Alternatively, if you use `YAML` configuration, you may just export the value to an environment variable and use it under your `CFBundleVersion` in `Info.plist`.
 
-## Google Play latest build number using Codemagic CLI Tools 
+## Get Google Play latest build number using Codemagic CLI Tools 
 
 Use [get-latest-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/get-latest-build-number.md#get-latest-build-number) action from [google-play](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/google-play#google-play) Codemagic CLI Tool to get the latest build number from Google Play.
 

commit c9f46d8e575ddd76167f73c45c48e268455df600
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Wed Aug 4 18:55:45 2021 +0300

    Clean up structure

diff --git a/content/building-yaml/environment-variables.md b/content/building-yaml/environment-variables.md
deleted file mode 100644
index c284ba9..0000000
--- a/content/building-yaml/environment-variables.md
+++ /dev/null
@@ -1,131 +0,0 @@
----
-description: How to work with environment variables in Codemagic builds
-title: Environment variables
-weight: 2
----
-
-Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
-
-{{<notebox>}}
-You can add environment variables in the following places:
-
-* [Environment](../getting-started/yaml/#environment) section of a `codemagic.yaml` configuration file
-* [Environment variables](../flutter/env-variables/) section in a Flutter workflow editor
-* [Global variables and secrets](../building/environment-variable-groups/#global-variables-and-secrets) in Team settings
-* [Application environment variables](../building/environment-variable-groups/#application-environment-variables) in Application settings
-
-See how to [encrypt sensitive information](./encrypting) in Codemagic and explanation of [Environment variable groups](../building/environment-variable-groups/).
-{{</notebox>}}
-
-## Codemagic read-only environment variables
-
-Codemagic exports several read-only environment variables during the build that you can use in scripts to customize the build process. Environment variables added by user will override Codemagic defaults. You can check which environment variables are exported by inserting the following script before or after any of the default build steps:
-
-```bash
-#!/bin/sh
-set -ex
-printenv
-```
-
-Here you'll find some of the read-only environment variables explained.
-
-| **Environment variable** | **Value**                                                                                                                                                       |
-| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |
-| ANDROID_SDK_ROOT         | Absolute path to Android SDK and tools                                                                                                                          |
-| CI                       | true                                                                                                                                                            |
-| CONTINUOUS_INTEGRATION   | true                                                                                                                                                            |
-| BUILD_NUMBER             | Number of the build for this project in Codemagic for the given workflow                                                                                        |
-| PROJECT_BUILD_NUMBER     | Number of the build for this project in Codemagic                                                                                                               |
-| FLUTTER_ROOT             | Absolute path to Flutter SDK                                                                                                                                    |
-| FCI_BRANCH               | The current branch being built, for pull requests it is the source branch                                                                                       |
-| FCI_TAG                  | The tag being built if started from a tag webhook, unset otherwise
-| FCI_REPO_SLUG            | The slug of the repository that is currently being built in the form `owner_name/repository_name`. Unset for repositories added from custom source              |
-| FCI_COMMIT               | Commit hash that is currently being built by Codemagic, for pull request builds it is the hash of the source commit                                             |
-| FCI_PREVIOUS_COMMIT      | Commit hash of the previous successful build, unset if there is no previous successful build                                                                    |
-| FCI_PULL_REQUEST         | `true`, if the current build is building a pull request, `false` otherwise                                                                                      |
-| FCI_PULL_REQUEST_NUMBER  | Set to Integer ID of the pull request for the Git provider (Bitbucket, Github etc) if the current build is building a pull request, unset otherwise             |
-| FCI_PULL_REQUEST_DEST    | The destination branch, if the current build is building a pull request, unset otherwise                                                                         |
-| FCI_CLONE_UNSHALLOW      | If set to `true` performs a full clone of the repository instead of top 50 commits                                                                              |
-| FCI_CLONE_DEPTH          | Specifies the number of commits to be fetched from the repository when cloning, default: 50. Specifying a smaller number can decrease the default fetching time |
-| FCI_PROJECT_ID           | UUID of the project that is being built                                                                                                                         |
-| FCI_BUILD_ID             | UUID of the build                                                                                                                                               |
-| FCI_TEST_STEP_STATUS     | Test step status, success or failure                                                                                                                            |
-| FCI_BUILD_STEP_STATUS    | Build step status, success, failure or skipped. Only available when using Workflow Editor, unavailabel with codemagic.yaml                                                                                                                |
-| FCI_BUILD_DIR            | Absolute path to the cloned repository in Codemagic builders                                                                                                    |
-| FCI_BUILD_OUTPUT_DIR     | Contains the artifact files generated during the build                                                                                                          |
-| FCI_EXPORT_DIR           | The files added to this directory will be added to a zip file and made available as build artifacts                                                             |
-| FCI_FLUTTER_SCHEME       | Name of the iOS scheme to be used                                                                                                                               |
-| FCI_SYMROOT              | Directory path of files generated during Xcode build                                                                                                            |
-| FCI_KEYSTORE_PASSWORD    | Password of Android keystore as configured in the UI                                                                                                            |
-| FCI_KEY_PASSWORD         | Password of Android key as configured in the UI                                                                                                                 |
-| FCI_KEY_ALIAS            | Alias of the key as configured in the UI                                                                                                                        |
-| FCI_KEYSTORE_PATH        | Path of the file in our VM                                                                                                                                      |
-| FCI_ARTIFACT_LINKS       | Information about generated build artifacts that is available in post-publishing step. Read more about it below.                                                |
-
-`$FCI_ARTIFACT_LINKS` environment variable value is a JSON encoded list in the following form:
-
-```json
-[
-  {
-    "name": "Codemagic_Release.ipa",
-    "type": "ipa",
-    "url": "https://api.codemagic.io/artifacts/2e7564b2-9ffa-40c2-b9e0-8980436ac717/81c5a723-b162-488a-854e-3f5f7fdfb22f/Codemagic_Release.ipa",
-    "md5": "d2884be6985dad3ffc4d6f85b3a3642a",
-    "versionName": "1.0.2",
-    "bundleId": "io.codemagic.app"
-  }
-]
-```
-
-## Using environment variables
-
-To access a variable, add the `$` symbol in front of its name. For example, access `API_TOKEN` by using `$API_TOKEN`. Note that it is required to use quotation marks with multi-line variables when you are referencing them in custom scripts.
-
-## Accessing environment variables from your application
-
-The following examples show how to place your Google Maps API key into an Android or iOS application from an environment variable. With this approach you will not have to store your secret key in the repository.
-
-1. Add your key as an environment variable with the name `MAPS_API_KEY`
-
-### Android
-
-2. Read the key from an environment variable to `build.gradle`
-
-```gradle
-defaultConfig {
-    // Other values set here
-    resValue "string", "maps_api_key", "$System.env.MAPS_API_KEY"
-}
-```
-
-3. Read the key from the `build.gradle` value to `AndroidManifest.xml`
-
-```xml
-<meta-data
-    android:name="com.google.android.geo.API_KEY"
-    android:value="@string/maps_api_key"
-/>
-```
-
-### iOS (Swift)
-
-2. Read the key from the environment variable to `Info.plist`
-
-```xml
-<key>MAPS_API_KEY</key>
-<string>$(MAPS_API_KEY)</string>
-```
-
-3. Read the key from the `Info.plist` value to `AppDelegate.swift`
-
-```swift
-GMSServices.provideAPIKey(Bundle.main.object(forInfoDictionaryKey: "MAPS_API_KEY") as? String ?? "")
-```
-
-### iOS (Objective-C)
-
-2.  Read your key from the environemnt variable to `AppDelegate.m` as in the [example](https://github.com/flutter/plugins/blob/master/packages/google_maps_flutter/google_maps_flutter/example/ios/Runner/AppDelegate.m).
-
-```objective-c
-[GMSServices provideAPIKey:[[NSProcessInfo processInfo] environment][@"MAPS_API_KEY"]];
-```
diff --git a/content/flutter/scheduling.md b/content/flutter/scheduling.md
deleted file mode 100644
index 81bfa3f..0000000
--- a/content/flutter/scheduling.md
+++ /dev/null
@@ -1,27 +0,0 @@
----
-title: Scheduling builds
-description: Create schedules to run builds at regular intervals
-weight: 9
-startLineBreak: true
----
-
-{{<notebox>}}
-This feature is available for [teams](../teams/teams) only.
-{{</notebox>}}
-
-You can schedule Codemagic to automatically build your app on certain days and times. This way, your QA can start the day with the latest version of the app, or you can configure a workflow to run the long test suits at a convenient time and only run fast tests with builds triggered by commits to the repo.
-
-## Setting up scheduled builds
-
-1. Open your project in Codemagic.
-2. On the right sidebar under **Scheduled builds**, click **Add new schedule**.
-3. Select the **Branch** and the **Workflow** to run.
-4. In the **Schedule for** field, select the days you want to run the build. 
-5. Specify the start time (UTC) of the build by selecting a value from the **At** field. Note that the build may be delayed up to 15 minutes during peak hours.
-6. Click **Add schedule** to save the schedule.
-
-Saved schedules for each app are displayed in the **Scheduled builds** section on the right sidebar in app settings. If you no longer need the schedule, you can delete it by hovering on the schedule and clicking the trash bin icon.
-
-Builds that are triggered from a schedule are marked with "scheduled" on the **Builds** page and have "Schedule" as the trigger in the build overview.
-
-Note that the user who is the author of the commit that is built is counted as an active user. Read more about [how we count active users](../teams/users).

commit 02b066e4d2db3791c1e90bc12b32b5e460001512
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Wed Aug 4 18:42:26 2021 +0300

    POC

diff --git a/assets/js/main.js b/assets/js/main.js
index 5d2ae9b..a4e44b2 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -341,3 +341,25 @@ $(window).ready(function () {
         observer.observe(header)
     })
 })
+
+function showConfigurationToc (type) {
+    const prevType = type === 'file' ? 'ui' : 'file'
+
+    const button = $('#configuration-toggle')
+    button.val(prevType)
+    button.html(`I am using ${prevType.toUpperCase()} workflow editor`)
+
+    const prevToc = $(`#${prevType}-configuration-loc`)
+    prevToc.hide()
+
+    const toc = $(`#${type}-configuration-loc`)
+    toc.show()
+}
+
+// Configuration toggle
+$(window).ready(function () {
+    showConfigurationToc('yaml')
+    $('#configuration-toggle').on('click', function (event) {
+        showConfigurationToc(event.target.value)
+    })
+})
\ No newline at end of file
diff --git a/config.yml b/config.yml
index 0043e59..8da80c0 100644
--- a/config.yml
+++ b/config.yml
@@ -31,79 +31,53 @@ buildDrafts: true
 defaultContentLanguage: en
 disable404: true
 enableGitInfo: true
-taxonomies:
-  configuration: configurations
 
 sectionPagesMenu: main
 menu:
-  main:  
+  general:
     - identifier: getting-started
       name: Getting started
-      weight: 1
-    - identifier: sample-projects
+  file:
+    - identifier: sample-projects-yaml
       name: Sample Projects
-      weight: 2
-    - identifier: building
+    - identifier: building-yaml
       name: Configuration
-      weight: 3
     - identifier: testing-yaml
       name: Testing
-      weight: 4
     - identifier: code-signing-yaml
       name: Code signing
-      weight: 5
     - identifier: publishing-yaml
       name: Publishing
-      weight: 6
-    - identifier: integrations
-      name: Integrations
-      weight: 7
+    - identifier: flutter-yaml
+      name: Flutter
+  ui:
     - identifier: setup-flutter
       name: Flutter workflow editor
-      weight: 8
     - identifier: flutter
-      name: Build configuration
-      weight: 1
-      parent: setup-flutter
+      name: Flutter build configuration
     - identifier: testing
       name: Testing
-      weight: 2
-      parent: setup-flutter
     - identifier: code-signing
       name: Code signing
-      weight: 3
-      parent: setup-flutter
     - identifier: publishing
       name: Distribution and notifications
-      weight: 4
-      parent: setup-flutter
+  other:
+    - identifier: building
+      name: Build
     - identifier: teams
       name: Teams
-      weight: 7
     - identifier: billing
       name: Billing & Pricing
-      weight: 8  
     - identifier: knowledge-base
       name: Knowledge base
-      weight: 9
     - identifier: rest-api
       name: Codemagic API
-      weight: 10 
     - identifier: troubleshooting
       name: Troubleshooting
-      weight: 11
     - identifier: specs
       name: Build machine specs
-      weight: 12
-  general:
-    - identifier: general/general-stuff
-      name: Universal config
-  file:
-    - identifier: file
-      name: Yaml config
-  ui:
-    - identifier: ui
-      name: Flutter config with UI
+    - identifier: integrations
+      name: Integrations
 
 mediaTypes:
   video/mp4:
diff --git a/content/building/environment-variable-groups.md b/content/building-yaml/environment-variable-groups.md
similarity index 100%
rename from content/building/environment-variable-groups.md
rename to content/building-yaml/environment-variable-groups.md
diff --git a/content/building-yaml/environment-variables.md b/content/building-yaml/environment-variables.md
new file mode 100644
index 0000000..c284ba9
--- /dev/null
+++ b/content/building-yaml/environment-variables.md
@@ -0,0 +1,131 @@
+---
+description: How to work with environment variables in Codemagic builds
+title: Environment variables
+weight: 2
+---
+
+Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
+
+{{<notebox>}}
+You can add environment variables in the following places:
+
+* [Environment](../getting-started/yaml/#environment) section of a `codemagic.yaml` configuration file
+* [Environment variables](../flutter/env-variables/) section in a Flutter workflow editor
+* [Global variables and secrets](../building/environment-variable-groups/#global-variables-and-secrets) in Team settings
+* [Application environment variables](../building/environment-variable-groups/#application-environment-variables) in Application settings
+
+See how to [encrypt sensitive information](./encrypting) in Codemagic and explanation of [Environment variable groups](../building/environment-variable-groups/).
+{{</notebox>}}
+
+## Codemagic read-only environment variables
+
+Codemagic exports several read-only environment variables during the build that you can use in scripts to customize the build process. Environment variables added by user will override Codemagic defaults. You can check which environment variables are exported by inserting the following script before or after any of the default build steps:
+
+```bash
+#!/bin/sh
+set -ex
+printenv
+```
+
+Here you'll find some of the read-only environment variables explained.
+
+| **Environment variable** | **Value**                                                                                                                                                       |
+| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |
+| ANDROID_SDK_ROOT         | Absolute path to Android SDK and tools                                                                                                                          |
+| CI                       | true                                                                                                                                                            |
+| CONTINUOUS_INTEGRATION   | true                                                                                                                                                            |
+| BUILD_NUMBER             | Number of the build for this project in Codemagic for the given workflow                                                                                        |
+| PROJECT_BUILD_NUMBER     | Number of the build for this project in Codemagic                                                                                                               |
+| FLUTTER_ROOT             | Absolute path to Flutter SDK                                                                                                                                    |
+| FCI_BRANCH               | The current branch being built, for pull requests it is the source branch                                                                                       |
+| FCI_TAG                  | The tag being built if started from a tag webhook, unset otherwise
+| FCI_REPO_SLUG            | The slug of the repository that is currently being built in the form `owner_name/repository_name`. Unset for repositories added from custom source              |
+| FCI_COMMIT               | Commit hash that is currently being built by Codemagic, for pull request builds it is the hash of the source commit                                             |
+| FCI_PREVIOUS_COMMIT      | Commit hash of the previous successful build, unset if there is no previous successful build                                                                    |
+| FCI_PULL_REQUEST         | `true`, if the current build is building a pull request, `false` otherwise                                                                                      |
+| FCI_PULL_REQUEST_NUMBER  | Set to Integer ID of the pull request for the Git provider (Bitbucket, Github etc) if the current build is building a pull request, unset otherwise             |
+| FCI_PULL_REQUEST_DEST    | The destination branch, if the current build is building a pull request, unset otherwise                                                                         |
+| FCI_CLONE_UNSHALLOW      | If set to `true` performs a full clone of the repository instead of top 50 commits                                                                              |
+| FCI_CLONE_DEPTH          | Specifies the number of commits to be fetched from the repository when cloning, default: 50. Specifying a smaller number can decrease the default fetching time |
+| FCI_PROJECT_ID           | UUID of the project that is being built                                                                                                                         |
+| FCI_BUILD_ID             | UUID of the build                                                                                                                                               |
+| FCI_TEST_STEP_STATUS     | Test step status, success or failure                                                                                                                            |
+| FCI_BUILD_STEP_STATUS    | Build step status, success, failure or skipped. Only available when using Workflow Editor, unavailabel with codemagic.yaml                                                                                                                |
+| FCI_BUILD_DIR            | Absolute path to the cloned repository in Codemagic builders                                                                                                    |
+| FCI_BUILD_OUTPUT_DIR     | Contains the artifact files generated during the build                                                                                                          |
+| FCI_EXPORT_DIR           | The files added to this directory will be added to a zip file and made available as build artifacts                                                             |
+| FCI_FLUTTER_SCHEME       | Name of the iOS scheme to be used                                                                                                                               |
+| FCI_SYMROOT              | Directory path of files generated during Xcode build                                                                                                            |
+| FCI_KEYSTORE_PASSWORD    | Password of Android keystore as configured in the UI                                                                                                            |
+| FCI_KEY_PASSWORD         | Password of Android key as configured in the UI                                                                                                                 |
+| FCI_KEY_ALIAS            | Alias of the key as configured in the UI                                                                                                                        |
+| FCI_KEYSTORE_PATH        | Path of the file in our VM                                                                                                                                      |
+| FCI_ARTIFACT_LINKS       | Information about generated build artifacts that is available in post-publishing step. Read more about it below.                                                |
+
+`$FCI_ARTIFACT_LINKS` environment variable value is a JSON encoded list in the following form:
+
+```json
+[
+  {
+    "name": "Codemagic_Release.ipa",
+    "type": "ipa",
+    "url": "https://api.codemagic.io/artifacts/2e7564b2-9ffa-40c2-b9e0-8980436ac717/81c5a723-b162-488a-854e-3f5f7fdfb22f/Codemagic_Release.ipa",
+    "md5": "d2884be6985dad3ffc4d6f85b3a3642a",
+    "versionName": "1.0.2",
+    "bundleId": "io.codemagic.app"
+  }
+]
+```
+
+## Using environment variables
+
+To access a variable, add the `$` symbol in front of its name. For example, access `API_TOKEN` by using `$API_TOKEN`. Note that it is required to use quotation marks with multi-line variables when you are referencing them in custom scripts.
+
+## Accessing environment variables from your application
+
+The following examples show how to place your Google Maps API key into an Android or iOS application from an environment variable. With this approach you will not have to store your secret key in the repository.
+
+1. Add your key as an environment variable with the name `MAPS_API_KEY`
+
+### Android
+
+2. Read the key from an environment variable to `build.gradle`
+
+```gradle
+defaultConfig {
+    // Other values set here
+    resValue "string", "maps_api_key", "$System.env.MAPS_API_KEY"
+}
+```
+
+3. Read the key from the `build.gradle` value to `AndroidManifest.xml`
+
+```xml
+<meta-data
+    android:name="com.google.android.geo.API_KEY"
+    android:value="@string/maps_api_key"
+/>
+```
+
+### iOS (Swift)
+
+2. Read the key from the environment variable to `Info.plist`
+
+```xml
+<key>MAPS_API_KEY</key>
+<string>$(MAPS_API_KEY)</string>
+```
+
+3. Read the key from the `Info.plist` value to `AppDelegate.swift`
+
+```swift
+GMSServices.provideAPIKey(Bundle.main.object(forInfoDictionaryKey: "MAPS_API_KEY") as? String ?? "")
+```
+
+### iOS (Objective-C)
+
+2.  Read your key from the environemnt variable to `AppDelegate.m` as in the [example](https://github.com/flutter/plugins/blob/master/packages/google_maps_flutter/google_maps_flutter/example/ios/Runner/AppDelegate.m).
+
+```objective-c
+[GMSServices provideAPIKey:[[NSProcessInfo processInfo] environment][@"MAPS_API_KEY"]];
+```
diff --git a/content/file/yaml-config.md b/content/file/yaml-config.md
deleted file mode 100644
index f4b1ea1..0000000
--- a/content/file/yaml-config.md
+++ /dev/null
@@ -1,6 +0,0 @@
----
-title: Yaml stuff
----
-
-Some yaml stuff
-
diff --git a/content/flutter/flutter-projects.md b/content/flutter-yaml/flutter-projects.md
similarity index 100%
rename from content/flutter/flutter-projects.md
rename to content/flutter-yaml/flutter-projects.md
diff --git a/content/building/encrypting.md b/content/flutter/encrypting.md
similarity index 100%
rename from content/building/encrypting.md
rename to content/flutter/encrypting.md
diff --git a/content/flutter/scheduling.md b/content/flutter/scheduling.md
new file mode 100644
index 0000000..81bfa3f
--- /dev/null
+++ b/content/flutter/scheduling.md
@@ -0,0 +1,27 @@
+---
+title: Scheduling builds
+description: Create schedules to run builds at regular intervals
+weight: 9
+startLineBreak: true
+---
+
+{{<notebox>}}
+This feature is available for [teams](../teams/teams) only.
+{{</notebox>}}
+
+You can schedule Codemagic to automatically build your app on certain days and times. This way, your QA can start the day with the latest version of the app, or you can configure a workflow to run the long test suits at a convenient time and only run fast tests with builds triggered by commits to the repo.
+
+## Setting up scheduled builds
+
+1. Open your project in Codemagic.
+2. On the right sidebar under **Scheduled builds**, click **Add new schedule**.
+3. Select the **Branch** and the **Workflow** to run.
+4. In the **Schedule for** field, select the days you want to run the build. 
+5. Specify the start time (UTC) of the build by selecting a value from the **At** field. Note that the build may be delayed up to 15 minutes during peak hours.
+6. Click **Add schedule** to save the schedule.
+
+Saved schedules for each app are displayed in the **Scheduled builds** section on the right sidebar in app settings. If you no longer need the schedule, you can delete it by hovering on the schedule and clicking the trash bin icon.
+
+Builds that are triggered from a schedule are marked with "scheduled" on the **Builds** page and have "Schedule" as the trigger in the build overview.
+
+Note that the user who is the author of the commit that is built is counted as an active user. Read more about [how we count active users](../teams/users).
diff --git a/content/building/webhooks.md b/content/flutter/webhooks.md
similarity index 100%
rename from content/building/webhooks.md
rename to content/flutter/webhooks.md
diff --git a/content/general/general-stuff/universal-config.md b/content/general/general-stuff/universal-config.md
deleted file mode 100644
index 3db96fd..0000000
--- a/content/general/general-stuff/universal-config.md
+++ /dev/null
@@ -1,6 +0,0 @@
----
-title: "universal config"
----
-
-Some universal stuff
-
diff --git a/content/sample-projects/codemagic-sample-projects.md b/content/sample-projects-yaml/codemagic-sample-projects.md
similarity index 100%
rename from content/sample-projects/codemagic-sample-projects.md
rename to content/sample-projects-yaml/codemagic-sample-projects.md
diff --git a/content/ui/flutter-config.md b/content/ui/flutter-config.md
deleted file mode 100644
index 5abed1c..0000000
--- a/content/ui/flutter-config.md
+++ /dev/null
@@ -1,6 +0,0 @@
----
-title: "Some Flutter stuff"
----
-
-Flutter
-
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 4a1d141..ad7658f 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -18,11 +18,15 @@
 {{ end }}
 
 <nav id="docs-menu" data-js-docs-menu>
+  <button id='configuration-toggle'>I am using UI workflow editor</button>
   {{ template "content-menu" (dict "menuItems" .Site.Menus.general "currentPage" .)}}
-  <p>File config</p>
+  <div id='file-configuration-loc'>
   {{ template "content-menu" (dict "menuItems" .Site.Menus.file "currentPage" .)}}
-  <p>UI config</p>
+  </div>
+  <div id='ui-configuration-loc'>
   {{ template "content-menu" (dict "menuItems" .Site.Menus.ui "currentPage" .)}}
+  </div>
+  {{ template "content-menu" (dict "menuItems" .Site.Menus.other "currentPage" .)}}
   <div class="external-links">
     <a id="codemagic-landing-link" onclick="sendGtag('Codemagic_clicked', 'DocumentationMenu')" href="https://codemagic.io/start" target="_blank">Codemagic</a>
     <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Codemagic Blog</a>

commit c0c8a2cc560edde6ee2097b935a10fd1e82859aa
Merge: 8f90b25 696d7d2
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Wed Aug 4 17:49:31 2021 +0300

    Merge branch 'master' of github.com:codemagic-ci-cd/codemagic-docs into feature/separate-file-and-ui-configuration

commit 8f90b25dcf469fef692b38fd0f068ad74cb393c8
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Wed Aug 4 15:40:16 2021 +0300

    No general

diff --git a/config.yml b/config.yml
index fdef584..0043e59 100644
--- a/config.yml
+++ b/config.yml
@@ -31,6 +31,8 @@ buildDrafts: true
 defaultContentLanguage: en
 disable404: true
 enableGitInfo: true
+taxonomies:
+  configuration: configurations
 
 sectionPagesMenu: main
 menu:
@@ -94,7 +96,7 @@ menu:
       name: Build machine specs
       weight: 12
   general:
-    - identifier: general
+    - identifier: general/general-stuff
       name: Universal config
   file:
     - identifier: file
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 6096b49..4a1d141 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -18,8 +18,6 @@
 {{ end }}
 
 <nav id="docs-menu" data-js-docs-menu>
-	<!-- {{ template "content-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}} -->
-  <p>General info</p>
   {{ template "content-menu" (dict "menuItems" .Site.Menus.general "currentPage" .)}}
   <p>File config</p>
   {{ template "content-menu" (dict "menuItems" .Site.Menus.file "currentPage" .)}}

commit 0ec6822fcc211a62bc07c08f38ff475a170a9fcc
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Wed Aug 4 15:39:39 2021 +0300

    No general

diff --git a/content/general/universal-config.md b/content/general/general-stuff/universal-config.md
similarity index 100%
rename from content/general/universal-config.md
rename to content/general/general-stuff/universal-config.md

commit 8825be3e7b084482e25a43223533fa99cbbba758
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Wed Aug 4 15:20:25 2021 +0300

    More changes

diff --git a/config.yml b/config.yml
index 5cc8b2b..fdef584 100644
--- a/config.yml
+++ b/config.yml
@@ -31,8 +31,6 @@ buildDrafts: true
 defaultContentLanguage: en
 disable404: true
 enableGitInfo: true
-taxonomies:
-  configuration: configurations
 
 sectionPagesMenu: main
 menu:
@@ -95,9 +93,15 @@ menu:
     - identifier: specs
       name: Build machine specs
       weight: 12
-  alt:
-    - identifier: hugo-things 
-      name: Hugo thing
+  general:
+    - identifier: general
+      name: Universal config
+  file:
+    - identifier: file
+      name: Yaml config
+  ui:
+    - identifier: ui
+      name: Flutter config with UI
 
 mediaTypes:
   video/mp4:
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 4a0b37d..6096b49 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -18,8 +18,13 @@
 {{ end }}
 
 <nav id="docs-menu" data-js-docs-menu>
-  {{ template "content-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}}
-  {{ template "content-menu" (dict "menuItems" .Site.Menus.alt "currentPage" .)}}
+	<!-- {{ template "content-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}} -->
+  <p>General info</p>
+  {{ template "content-menu" (dict "menuItems" .Site.Menus.general "currentPage" .)}}
+  <p>File config</p>
+  {{ template "content-menu" (dict "menuItems" .Site.Menus.file "currentPage" .)}}
+  <p>UI config</p>
+  {{ template "content-menu" (dict "menuItems" .Site.Menus.ui "currentPage" .)}}
   <div class="external-links">
     <a id="codemagic-landing-link" onclick="sendGtag('Codemagic_clicked', 'DocumentationMenu')" href="https://codemagic.io/start" target="_blank">Codemagic</a>
     <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Codemagic Blog</a>

commit d5838c617f50dc9f28c49f6993532a5538abab86
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Wed Aug 4 15:08:02 2021 +0300

    Add ui and file configurations

diff --git a/content/file/yaml-config.md b/content/file/yaml-config.md
new file mode 100644
index 0000000..f4b1ea1
--- /dev/null
+++ b/content/file/yaml-config.md
@@ -0,0 +1,6 @@
+---
+title: Yaml stuff
+---
+
+Some yaml stuff
+
diff --git a/content/hugo-things/universal-config.md b/content/general/universal-config.md
similarity index 64%
rename from content/hugo-things/universal-config.md
rename to content/general/universal-config.md
index c7c9726..3db96fd 100644
--- a/content/hugo-things/universal-config.md
+++ b/content/general/universal-config.md
@@ -1,8 +1,6 @@
 ---
 title: "universal config"
-configurations: ["file", "ui"]
 ---
 
 Some universal stuff
 
-
diff --git a/content/hugo-things/yaml-config.md b/content/hugo-things/yaml-config.md
deleted file mode 100644
index bd5309d..0000000
--- a/content/hugo-things/yaml-config.md
+++ /dev/null
@@ -1,9 +0,0 @@
----
-title: Yaml stuff
-configurations: ["file"]
-aliases: [/flutter/yaml-stuff, /billing/extra]
-url: /billing/abc
----
-
-Some yaml stuff
-
diff --git a/content/hugo-things/flutter-config.md b/content/ui/flutter-config.md
similarity index 66%
rename from content/hugo-things/flutter-config.md
rename to content/ui/flutter-config.md
index 3e3b375..5abed1c 100644
--- a/content/hugo-things/flutter-config.md
+++ b/content/ui/flutter-config.md
@@ -1,6 +1,5 @@
 ---
 title: "Some Flutter stuff"
-configurations: ["ui"]
 ---
 
 Flutter

commit 696d7d25bad2facf3f8ea748d719e5ff8b3ba478
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Wed Aug 4 11:49:36 2021 +0200

    add external ip address for linux builders (#434)

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 234f8a0..9b3ff20 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -123,7 +123,8 @@ After you have added the public key to your repository settings, finish adding t
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
 
 1. `34.74.234.56` - used by our backend for getting basic information about the repository
-2. `199.7.162.128/29` - used by our build servers to download the code and build it
+2. `35.185.76.207` - used by our Linux build servers to download the code and build it
+3. `199.7.162.128/29` - used by our macOS build servers to download the code and build it
 
 ## Modifying repository access settings
 

commit cf0231fdd55932f09b67cd982775aa49c3bdd337
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Wed Aug 4 11:58:10 2021 +0300

    Update building-a-flutter-app.md

diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index acc4933..f0af098 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -268,6 +268,9 @@ workflows:
       app_store_connect:   # https://docs.codemagic.io/publishing-yaml/distribution              
         api_key: $APP_STORE_CONNECT_PRIVATE_KEY   
         key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
+        issuer_id: 21d78e2f-b8ad-...  # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
+       
+     
 ```
 
 ## Web builds

commit fb85670bc690888fc2ba5a56562d05a9a21b408b
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Wed Aug 4 11:50:06 2021 +0300

    Update building-a-flutter-app.md

diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index 2bea34d..acc4933 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -208,8 +208,6 @@ workflows:
         APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...) # <-- Put your encrypted App Store Connect Key Identifier here 
         APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your encrypted App Store Connect Private Key here 
         CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your encrypted Certificate Private Key here 
-        APPLE_ID: Encrypted(...) # <-- Put your encrypted Apple Id email address here
-        APPLE_APP_SPECIFIC_PASSWORD: Encrypted(...) # <-- Put your encrypted App Specific password here
         BUNDLE_ID: "io.codemagic.flutteryaml" # <-- Put your bundle id here
         APP_STORE_ID: 1111111111 # <-- Use the TestFlight Apple id number (An automatically generated ID assigned to your app) found under General > App Information > Apple ID. 
       flutter: stable

commit b2447afc4d251bb52211942427d9cd0c1abf89a1
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Wed Aug 4 11:36:40 2021 +0300

    MVP

diff --git a/config.yml b/config.yml
index 8878e5a..5cc8b2b 100644
--- a/config.yml
+++ b/config.yml
@@ -31,6 +31,8 @@ buildDrafts: true
 defaultContentLanguage: en
 disable404: true
 enableGitInfo: true
+taxonomies:
+  configuration: configurations
 
 sectionPagesMenu: main
 menu:
@@ -93,6 +95,9 @@ menu:
     - identifier: specs
       name: Build machine specs
       weight: 12
+  alt:
+    - identifier: hugo-things 
+      name: Hugo thing
 
 mediaTypes:
   video/mp4:
diff --git a/content/hugo-things/flutter-config.md b/content/hugo-things/flutter-config.md
new file mode 100644
index 0000000..3e3b375
--- /dev/null
+++ b/content/hugo-things/flutter-config.md
@@ -0,0 +1,7 @@
+---
+title: "Some Flutter stuff"
+configurations: ["ui"]
+---
+
+Flutter
+
diff --git a/content/hugo-things/universal-config.md b/content/hugo-things/universal-config.md
new file mode 100644
index 0000000..c7c9726
--- /dev/null
+++ b/content/hugo-things/universal-config.md
@@ -0,0 +1,8 @@
+---
+title: "universal config"
+configurations: ["file", "ui"]
+---
+
+Some universal stuff
+
+
diff --git a/content/hugo-things/yaml-config.md b/content/hugo-things/yaml-config.md
new file mode 100644
index 0000000..bd5309d
--- /dev/null
+++ b/content/hugo-things/yaml-config.md
@@ -0,0 +1,9 @@
+---
+title: Yaml stuff
+configurations: ["file"]
+aliases: [/flutter/yaml-stuff, /billing/extra]
+url: /billing/abc
+---
+
+Some yaml stuff
+
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 44ad723..4a0b37d 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -19,6 +19,7 @@
 
 <nav id="docs-menu" data-js-docs-menu>
   {{ template "content-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}}
+  {{ template "content-menu" (dict "menuItems" .Site.Menus.alt "currentPage" .)}}
   <div class="external-links">
     <a id="codemagic-landing-link" onclick="sendGtag('Codemagic_clicked', 'DocumentationMenu')" href="https://codemagic.io/start" target="_blank">Codemagic</a>
     <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Codemagic Blog</a>

commit a4a99c4a2090aea5b87b8ba9bd773e7965f236d2
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Wed Aug 4 11:11:06 2021 +0300

    Update building-a-flutter-app.md

diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index c6de67f..2bea34d 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -268,8 +268,8 @@ workflows:
           success: true               # To receive a notification when a build succeeds
           failure: false              # To not receive a notification when a build fails
       app_store_connect:   # https://docs.codemagic.io/publishing-yaml/distribution              
-        apple_id: $APPLE_ID    
-        password: $APPLE_APP_SPECIFIC_PASSWORD
+        api_key: $APP_STORE_CONNECT_PRIVATE_KEY   
+        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
 ```
 
 ## Web builds

commit c4c3b24d9bc82ea5b39d7139ff8906075ff48d41
Author: Artemii Yanushevskyi <artemii@nevercode.io>
Date:   Tue Aug 3 15:55:53 2021 +0300

    Remove .swp file

diff --git a/content/billing/.pricing.md.swp b/content/billing/.pricing.md.swp
deleted file mode 100644
index 2209580..0000000
Binary files a/content/billing/.pricing.md.swp and /dev/null differ

commit c0ea615350c7b711d35e12c2ede106f6238e678a
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Tue Aug 3 14:05:47 2021 +0300

    Feature: paid concurrency (#433)
    
    * Feature: paid concurrency
    
    * Update copy
    
    * Address remarks
    
    * Update content/billing/pricing.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/billing/pricing.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/billing/.pricing.md.swp b/content/billing/.pricing.md.swp
new file mode 100644
index 0000000..2209580
Binary files /dev/null and b/content/billing/.pricing.md.swp differ
diff --git a/content/billing/pricing.md b/content/billing/pricing.md
index 97a4fac..24e2b14 100644
--- a/content/billing/pricing.md
+++ b/content/billing/pricing.md
@@ -7,7 +7,7 @@ weight: 2
 
 Pay as you go pricing allows you to pay for only what you use. 
 
-Currently it is only possible to run one build at a time with pay as you go.
+Extra build concurrencies allow Teams to run up to three parallel builds.
 
 ### Instance Types
 
@@ -54,6 +54,8 @@ For teams, all build minutes using macOS standard VM, macOS premium VM, Linux st
 
 Team users that were active in the current billing period are charged $10/month. To see how users are counted please see [here](https://docs.codemagic.io/teams/users/)
 
+Each extra build concurrency allows running an additional build in parallel. For example, two extra build concurrencies allow running three builds in parallel. Consider Business plan or Enterprise plan if more than three concurrent builds are required.
+
 | **Item**  | **Price**                                                                                                                                                       |
 | ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |
 | macOS premium VM         | $0.095 / minute                                                                                                                                                 |
@@ -61,6 +63,7 @@ Team users that were active in the current billing period are charged $10/month.
 | Linux premium VM         | $0.045 / minute                                                                                                                                                 |
 | Linux standard VM        | $0.015 / minute                                                                                                                                                 |
 | Team user                | $10 / month                                                                                                                                                     |                                                                                                                                                 |
+| Extra build concurrency  | $49 / month                                                                                                                                                     | 
 
 ## Business Plan
 

commit a65fd03a253e8ef38a28242e00e944c0bfc20aa6
Author: Chris Raastad <craastad@gmail.com>
Date:   Mon Aug 2 15:31:17 2021 +0200

    Environment variable groups updates (#431)
    
    * Added Environment variable groups page
    * Updated codemagic.yaml environment section page with env var groups and better organization
    * Update links to environment variables page

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 2e710f0..71e3bbe 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,7 +1,7 @@
 ---
 title: Build versioning
 description: How to set a new build number to push to app stores
-weight: 5
+weight: 6
 ---
 
 If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment the application version with every build is by using the environment variables that Codemagic exports during the build. There are two environment variables that count the number of builds:
diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index be4f591..3408d00 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -1,7 +1,7 @@
 ---
 title: Encrypting sensitive data
 description: Encrypt your credentials and key files
-weight: 3
+weight: 4
 ---
 
 If you wish to store sensitive information, such as login details or API keys, in environment variables or your configuration file, it is important to encrypt the data to not expose it. You can easily encrypt values and files using the encryption interface in Codemagic.
diff --git a/content/building/environment-variable-groups.md b/content/building/environment-variable-groups.md
new file mode 100644
index 0000000..5e7fcb3
--- /dev/null
+++ b/content/building/environment-variable-groups.md
@@ -0,0 +1,57 @@
+---
+description: How to define and use environment variable groups
+title: Environment variable groups
+weight: 3
+---
+
+Environment variable groups allow you to define and store related sets of variables that are reusable in your [codemagic.yaml](../getting-started/yaml/) workflows. A variable *group* tags a set of variables that can be imported together in a codemagic.yaml file. For example, you could define a `staging` group for variables related to your staging deployment and a `production` group for variables related to your production deployment. The variable names in staging and production groups can be identical, but the values will be set depending on which group is imported in the workflow. This allows you to reference variables in reusable scripts, but assign the actual values per workflow based on the imported group.
+
+One or more variable groups can be imported into codemagic.yaml [environment section](../getting-started/yaml/#environment). For example, variable groups named `magic_values` and `other_values` can be imported with the following syntax:
+```yaml
+workflows:
+  workflow-name:
+    environment:
+      groups:
+        - magic_values
+        - other_values
+```
+
+Variables defined in environment variable groups work exactly as [Environment Variables](../building/environment-variables/#using-environment-variables). The value of a variable named `API_TOKEN` can be referenced in a workflow as `$API_TOKEN`. Variables defined with the ***secure*** option will have values obfuscated in the Codemagic UI.
+
+## Global variables and secrets
+
+Global variable groups can be defined on the team settings page (which you can navigate to for your team on the [Teams page](https://codemagic.io/teams)). Variable groups defined here can be used in any codemagic.yaml workflow in any application of the team.
+
+{{<notebox>}}
+Global variable groups are only available for Teams. You can read more about teams [here](https://docs.codemagic.io/teams/teams/).
+{{</notebox>}}
+
+## Application environment variables
+
+Application variable groups can be defined in the application settings **Environment Variables** tab and can be used in any codemagic.yaml workflow in the application.
+
+{{<notebox>}}
+Application variable groups are only available in applications with non-Flutter project type.
+{{</notebox>}}
+
+## Environment variable precedence
+
+Environment variables with the same name and group from different sources will have the following precedence:
+
+1. API variables
+1. Workflow variables
+1. Application variables
+1. Global variables
+
+This means variables defined in a scope of higher precedence can override those in a lower precedence with the same name. For example, if you have a global variable `API_KEY` with a value `global` that is also defined in an application variable with the value `app`, then the value `app` will be used.  
+
+If variables with the same name are defined and imported from different groups of the same level of precedence, the values from the last imported variable group will be used. For example, if two application variable groups `magic` and `wand` are defined each with a variable named `magic_number` and imported in a codemagic.yaml like so:
+
+```yaml
+environment:
+    groups:
+      - magic
+      - wand
+```
+
+Then the variable value in the group `wand` will be used. 
\ No newline at end of file
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index e88edb1..c284ba9 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -7,9 +7,14 @@ weight: 2
 Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
 
 {{<notebox>}}
-You can add environment variables in the [environment](../getting-started/yaml/#environment) section of the `codemagic.yaml` configuration file or in the [Environment variables](../flutter/env-variables/) section in the Flutter workflow editor.
+You can add environment variables in the following places:
 
-See how to [encrypt sensitive information](./encrypting) in Codemagic.
+* [Environment](../getting-started/yaml/#environment) section of a `codemagic.yaml` configuration file
+* [Environment variables](../flutter/env-variables/) section in a Flutter workflow editor
+* [Global variables and secrets](../building/environment-variable-groups/#global-variables-and-secrets) in Team settings
+* [Application environment variables](../building/environment-variable-groups/#application-environment-variables) in Application settings
+
+See how to [encrypt sensitive information](./encrypting) in Codemagic and explanation of [Environment variable groups](../building/environment-variable-groups/).
 {{</notebox>}}
 
 ## Codemagic read-only environment variables
diff --git a/content/building/github-checks.md b/content/building/github-checks.md
index 73baa15..f8ca773 100644
--- a/content/building/github-checks.md
+++ b/content/building/github-checks.md
@@ -1,7 +1,7 @@
 ---
 title: GitHub Checks
 description: How to report PR build statuses to GitHub as checks
-weight: 9
+weight: 10
 startLineBreak: true
 ---
 
diff --git a/content/building/running-locally.md b/content/building/running-locally.md
index 289d8ab..3f7983f 100644
--- a/content/building/running-locally.md
+++ b/content/building/running-locally.md
@@ -1,7 +1,7 @@
 ---
 title: Codemagic CLI tools
 description: How to use Codemagic CLI tools locally or in other environments
-weight: 10
+weight: 11
 aliases: 
     - '../yaml/runninglocally'
 ---
diff --git a/content/building/scheduling.md b/content/building/scheduling.md
index 6951c45..81bfa3f 100644
--- a/content/building/scheduling.md
+++ b/content/building/scheduling.md
@@ -1,7 +1,7 @@
 ---
 title: Scheduling builds
 description: Create schedules to run builds at regular intervals
-weight: 8
+weight: 9
 startLineBreak: true
 ---
 
diff --git a/content/building/timeout.md b/content/building/timeout.md
index d61ff6a..4fee23f 100644
--- a/content/building/timeout.md
+++ b/content/building/timeout.md
@@ -1,7 +1,7 @@
 ---
 description: Limit the maximum duration of builds
 title: Build timeout settings
-weight: 7
+weight: 8
 ---
 
 By default, Codemagic builds are set to time out after 60 minutes. You can decrease or increase the maximum build duration **per workflow**.
diff --git a/content/building/webhooks.md b/content/building/webhooks.md
index 2387b61..962470c 100644
--- a/content/building/webhooks.md
+++ b/content/building/webhooks.md
@@ -1,7 +1,7 @@
 ---
 title: Webhooks
 description: Set up webhooks for automatic builds
-weight: 4
+weight: 5
 ---
 
 Webhooks are necessary in order to be able to trigger builds automatically in response to events in the repository.
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 9174700..0fa874b 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -71,7 +71,7 @@ scripts:
 
 ## Template
 
-This is the skeleton structure of `codemagic.yaml`. Each section, along with the configuration options, is described in more detail below.
+This is the skeleton structure of `codemagic.yaml`. Each section, along with the configuration options, is described in more detail 
 
 ```yaml
 workflows:
@@ -143,11 +143,11 @@ Note that `mac_pro`, `linux`, and `linux_x2` are only available for teams and us
 
 ### Environment
 
-`environment:` contains all the environment variables and enables to specify the version of Flutter, Xcode, CocoaPods, Node, npm and Ruby used for building. This is also where you can add credentials and API keys required for [code signing](../code-signing-yaml/signing). Make sure to [encrypt the values](../building/encrypting) of variables that hold sensitive data. 
+`environment:` specifies the environment variables and build machine software versions.
 
-{{<notebox>}}
-Using a non-default version of Ruby for macOS builds will increase the time of your `Preparing build machine` step significantly. 
-{{</notebox>}}
+#### Workflow environment variables
+
+The snippet below shows how to define workflow specific environment variables, such as credentials and API keys required for [code signing](../code-signing-yaml/signing). See [encrypting sensitive data](../building/encrypting) for more details on environment variable encryption.
 
 ```yaml
 environment:
@@ -179,7 +179,25 @@ environment:
     SSH_KEY_GITHUB: Encrypted(...)     # defining an ssh key used to download private dependencies
     CREDENTIALS: Encrypted(...)        # publishing a package to pub.dev
     APP_CENTER_TOKEN: Encrypted(...)   # publishing an application to App Center
+```
+
+#### Environment variable groups
+
+The snippet below shows how to import [environment variable groups](../building/environment-variable-groups/) defined in the team settings and application settings. 
+
+```yaml
+environment:
+  groups:           # Import UI defined environment variable groups here
+    - env_var_group_1
+    - env_var_group_2
+```
+
+#### Build machine and software versions
 
+The snippet below shows how to specify the versions of Flutter, Xcode, CocoaPods, Node, npm, ndk, Java and Ruby used in the build.
+
+```yaml
+environment:
   flutter: stable   # Define the channel name or version (e.g. v1.13.4)
   xcode: latest     # Define latest, edge or version (e.g. 11.2)
   cocoapods: 1.9.1  # Define default or version
@@ -191,13 +209,31 @@ environment:
 ```
 
 {{<notebox>}}
-See the default software versions on Codemagic build machines:
+The Xcode version defines type of macOS build machine used for the build (even if you're building Android). See the default software versions on Codemagic build machines:
 - [macOS build machine specification (Xcode 11.x)](../releases-and-versions/versions/)
 - [macOS build machine specification (Xcode 12.0-12.4)](../releases-and-versions/versions2/)
 - [macOS build machine specification (Xcode 12.5+)](../releases-and-versions/versions3/)
+- [macOS build machine specification (Xcode 13.0+)](../specs/versions4/)
 - [Linux build machine specification](../releases-and-versions/versions-linux/)
+
+Using a non-default version of Ruby for macOS builds will increase the time of your `Preparing build machine` step significantly.
 {{</notebox>}}
 
+#### Environment section example
+
+You can freely use all of the above features of environment section in conjunction.
+
+```yaml
+environment:
+  vars: # Define your environment variables here
+    PUBLIC_ENV_VAR: 'value here'
+    PRIVATE_ENV_VAR: Encrypted(...)
+  groups: # Import UI defined environment variable groups here
+    - staging
+  xcode: latest # Define latest, edge or version (e.g. 11.2)
+  flutter: stable   # Define the channel name or version (e.g. v1.13.4)
+```
+
 ### Cache
 
 `cache:` defines the paths to be cached and stored on Codemagic. For example, you may consider caching the following paths:

commit 1b2d1fbf0696738eee6abf74e96dea05d4f60085
Author: Mart <mart@Marts-MBP.lan>
Date:   Mon Aug 2 16:22:43 2021 +0300

    Remove logger

diff --git a/assets/js/main.js b/assets/js/main.js
index fa60f58..5d2ae9b 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -70,7 +70,6 @@ $(document).on('click', 'a[href^="#"]', function (event) {
 // Copy section link to clipboard
 const copyLinkFromTitles = () => {
     $('h1, h2, h3, h4, h5, h6').on('click', 'i.ctc', function () {
-        console.warn('clicked fo sho')
         var link = $(this).attr('data-target-link')
         var $temp = $('<input>')
         $('body').append($temp)

commit ac8ab680c33696dc997abef0cd5e89d2ef740391
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Mon Aug 2 11:51:37 2021 +0300

    Improvement: create application with SSH key (#430)
    
    * Improvement: create application with SSH key
    
    * Use flutter app
    
    * Result
    
    * Update applications.md
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>

diff --git a/content/rest-api/applications.md b/content/rest-api/applications.md
index c5b1c21..b486967 100644
--- a/content/rest-api/applications.md
+++ b/content/rest-api/applications.md
@@ -68,6 +68,51 @@ Adds a Git repository to the applications list.
 }
 ```
 
+## Add a new application from private repository
+
+`POST /apps/new`
+
+Creates an application from a private repository with SSH key
+
+### Parameters
+
+| **Name**        | **Type** | **Description** |
+| --------------- | -------- | --------------- |
+| `repositoryUrl` | `string` | **Required.** SSH or HTTPS URL for cloning the repository. |
+| `sshKey` | `JSON` | **Required.** |
+| `projectType` | `string` | `flutter-app` when adding Flutter application. | 
+
+#### `sshKey` parameter
+
+| **Name**        | **Type** | **Description** |
+| --------------- | -------- | --------------- |
+| `data` | `string` | **Required.** `base64`-encoded private key file. |
+| `passphrase` | `string` | **Required.** SSH key passphrase or `null` if it SSH key is without passphrase. | 
+
+To encode private key file and paste result to clipboard
+
+```bash
+base64 id_rsa | pbcopy
+```
+
+### Example
+
+```json
+{
+  "repositoryUrl": "git@github.com:my-organization/my-repo.git",
+  "sshKey": {"data": "St89hgb-BASE64-ENCODED-SSH-KEY-FILE-H4ga7jgf==", "passphrase": null}
+}
+```
+
+### Response
+
+```json
+{"application" : {
+  "_id": "5c9c064185dd2310123b8e96",
+  "appName": "my-repo"
+}}
+```
+
 ## Encrypt an environment variable
 
 `POST /apps/:id/encrypt-environment-variable`

commit 77f1e072f2575db0966b466f25014f5f2b5d2ec7
Author: Priit Lätt <priit@nevercode.io>
Date:   Mon Aug 2 10:52:47 2021 +0300

    Base image update @ 02-08-2021 (#429)
    
    * Base image update @ 02-08-2021
    
    * Update versions4.md
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>

diff --git a/content/specs/versions4.md b/content/specs/versions4.md
index ba66005..47c10f5 100644
--- a/content/specs/versions4.md
+++ b/content/specs/versions4.md
@@ -15,7 +15,7 @@ weight: 2
 
 - System version `macOS 11.4 (20F71)`
 - Kernel version `Darwin 20.5.0`
-- Disk `322GB (Free Space: 186GB)`
+- Disk `322GB (Free Space: 181GB)`
 
 ## Pre-installed tools
 
@@ -26,7 +26,7 @@ weight: 2
 - cordova `10.0.0`
 - curl
 - docker `20.10.2`
-- fastlane `2.187.0`
+- fastlane `2.189.0`
 - firebase `9.3.0`
 - flutter `2.2.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
@@ -70,14 +70,14 @@ weight: 2
 - **11.0.11** (default) JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home`
 - **1.8.0_292** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home`
 
-## Xcode 13.0 (13A5192j)
+## Xcode 13.0 (13A5201i)
 
 This is the Xcode version used by default when you select `13.0` or `edge` in build settings in the workflow 
 editor for Flutter apps or set Xcode version to `13.0` or `edge` in your codemagic.yaml file. 
 
 Xcode path: `/Applications/Xcode-13.0.app`
 
-With Xcode `13.0` build version `13A5192j` the following runtimes and devices are installed:
+With Xcode `13.0` build version `13A5201i` the following runtimes and devices are installed:
 
 ### Runtimes
 

commit 17b922d924b9968efccf3a1caa83414eb2217342
Author: Name <45485121+mart-nc@users.noreply.github.com>
Date:   Fri Jul 30 14:27:12 2021 +0300

    Feature/strapi release notes (#427)
    
    * Initial Strapi release notes integration
    
    * Add timestamp and sort notes
    
    Co-authored-by: Mart <mart@Marts-MBP.lan>

diff --git a/assets/js/main.js b/assets/js/main.js
index 6ce09f9..fa60f58 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -68,18 +68,22 @@ $(document).on('click', 'a[href^="#"]', function (event) {
 })
 
 // Copy section link to clipboard
-$('h1, h2, h3, h4, h5, h6').on('click', 'i.ctc', function () {
-    var link = $(this).attr('data-target-link')
-    var $temp = $('<input>')
-    $('body').append($temp)
-    $temp.val(link).select()
-    document.execCommand('copy')
-    $temp.remove()
-    alert('Copied to clipboard')
-})
+const copyLinkFromTitles = () => {
+    $('h1, h2, h3, h4, h5, h6').on('click', 'i.ctc', function () {
+        console.warn('clicked fo sho')
+        var link = $(this).attr('data-target-link')
+        var $temp = $('<input>')
+        $('body').append($temp)
+        $temp.val(link).select()
+        document.execCommand('copy')
+        $temp.remove()
+        alert('Copied to clipboard')
+    })
+}
 
 $(document).ready(function () {
     createTableOfContents()
+    copyLinkFromTitles()
     // Wrap tables for responsiveness
     var contentTable = $('#main-content main table')
     contentTable.each(function () {
diff --git a/assets/js/markdown-it.js b/assets/js/markdown-it.js
new file mode 100644
index 0000000..d249954
--- /dev/null
+++ b/assets/js/markdown-it.js
@@ -0,0 +1,9038 @@
+/*! markdown-it 12.1.0 https://github.com/markdown-it/markdown-it @license MIT */
+;(function (global, factory) {
+    typeof exports === 'object' && typeof module !== 'undefined'
+        ? (module.exports = factory())
+        : typeof define === 'function' && define.amd
+        ? define(factory)
+        : ((global = typeof globalThis !== 'undefined' ? globalThis : global || self), (global.markdownit = factory()))
+})(this, function () {
+    'use strict'
+    function createCommonjsModule(fn, basedir, module) {
+        return (
+            (module = {
+                path: basedir,
+                exports: {},
+                require: function (path, base) {
+                    return commonjsRequire(path, base === undefined || base === null ? module.path : base)
+                },
+            }),
+            fn(module, module.exports),
+            module.exports
+        )
+    }
+    function getAugmentedNamespace(n) {
+        if (n.__esModule) return n
+        var a = Object.defineProperty({}, '__esModule', {
+            value: true,
+        })
+        Object.keys(n).forEach(function (k) {
+            var d = Object.getOwnPropertyDescriptor(n, k)
+            Object.defineProperty(
+                a,
+                k,
+                d.get
+                    ? d
+                    : {
+                          enumerable: true,
+                          get: function () {
+                              return n[k]
+                          },
+                      },
+            )
+        })
+        return a
+    }
+    function commonjsRequire() {
+        throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs')
+    }
+    var require$$0 = {
+        Aacute: '\xc1',
+        aacute: '\xe1',
+        Abreve: '\u0102',
+        abreve: '\u0103',
+        ac: '\u223e',
+        acd: '\u223f',
+        acE: '\u223e\u0333',
+        Acirc: '\xc2',
+        acirc: '\xe2',
+        acute: '\xb4',
+        Acy: '\u0410',
+        acy: '\u0430',
+        AElig: '\xc6',
+        aelig: '\xe6',
+        af: '\u2061',
+        Afr: '\ud835\udd04',
+        afr: '\ud835\udd1e',
+        Agrave: '\xc0',
+        agrave: '\xe0',
+        alefsym: '\u2135',
+        aleph: '\u2135',
+        Alpha: '\u0391',
+        alpha: '\u03b1',
+        Amacr: '\u0100',
+        amacr: '\u0101',
+        amalg: '\u2a3f',
+        amp: '&',
+        AMP: '&',
+        andand: '\u2a55',
+        And: '\u2a53',
+        and: '\u2227',
+        andd: '\u2a5c',
+        andslope: '\u2a58',
+        andv: '\u2a5a',
+        ang: '\u2220',
+        ange: '\u29a4',
+        angle: '\u2220',
+        angmsdaa: '\u29a8',
+        angmsdab: '\u29a9',
+        angmsdac: '\u29aa',
+        angmsdad: '\u29ab',
+        angmsdae: '\u29ac',
+        angmsdaf: '\u29ad',
+        angmsdag: '\u29ae',
+        angmsdah: '\u29af',
+        angmsd: '\u2221',
+        angrt: '\u221f',
+        angrtvb: '\u22be',
+        angrtvbd: '\u299d',
+        angsph: '\u2222',
+        angst: '\xc5',
+        angzarr: '\u237c',
+        Aogon: '\u0104',
+        aogon: '\u0105',
+        Aopf: '\ud835\udd38',
+        aopf: '\ud835\udd52',
+        apacir: '\u2a6f',
+        ap: '\u2248',
+        apE: '\u2a70',
+        ape: '\u224a',
+        apid: '\u224b',
+        apos: "'",
+        ApplyFunction: '\u2061',
+        approx: '\u2248',
+        approxeq: '\u224a',
+        Aring: '\xc5',
+        aring: '\xe5',
+        Ascr: '\ud835\udc9c',
+        ascr: '\ud835\udcb6',
+        Assign: '\u2254',
+        ast: '*',
+        asymp: '\u2248',
+        asympeq: '\u224d',
+        Atilde: '\xc3',
+        atilde: '\xe3',
+        Auml: '\xc4',
+        auml: '\xe4',
+        awconint: '\u2233',
+        awint: '\u2a11',
+        backcong: '\u224c',
+        backepsilon: '\u03f6',
+        backprime: '\u2035',
+        backsim: '\u223d',
+        backsimeq: '\u22cd',
+        Backslash: '\u2216',
+        Barv: '\u2ae7',
+        barvee: '\u22bd',
+        barwed: '\u2305',
+        Barwed: '\u2306',
+        barwedge: '\u2305',
+        bbrk: '\u23b5',
+        bbrktbrk: '\u23b6',
+        bcong: '\u224c',
+        Bcy: '\u0411',
+        bcy: '\u0431',
+        bdquo: '\u201e',
+        becaus: '\u2235',
+        because: '\u2235',
+        Because: '\u2235',
+        bemptyv: '\u29b0',
+        bepsi: '\u03f6',
+        bernou: '\u212c',
+        Bernoullis: '\u212c',
+        Beta: '\u0392',
+        beta: '\u03b2',
+        beth: '\u2136',
+        between: '\u226c',
+        Bfr: '\ud835\udd05',
+        bfr: '\ud835\udd1f',
+        bigcap: '\u22c2',
+        bigcirc: '\u25ef',
+        bigcup: '\u22c3',
+        bigodot: '\u2a00',
+        bigoplus: '\u2a01',
+        bigotimes: '\u2a02',
+        bigsqcup: '\u2a06',
+        bigstar: '\u2605',
+        bigtriangledown: '\u25bd',
+        bigtriangleup: '\u25b3',
+        biguplus: '\u2a04',
+        bigvee: '\u22c1',
+        bigwedge: '\u22c0',
+        bkarow: '\u290d',
+        blacklozenge: '\u29eb',
+        blacksquare: '\u25aa',
+        blacktriangle: '\u25b4',
+        blacktriangledown: '\u25be',
+        blacktriangleleft: '\u25c2',
+        blacktriangleright: '\u25b8',
+        blank: '\u2423',
+        blk12: '\u2592',
+        blk14: '\u2591',
+        blk34: '\u2593',
+        block: '\u2588',
+        bne: '=\u20e5',
+        bnequiv: '\u2261\u20e5',
+        bNot: '\u2aed',
+        bnot: '\u2310',
+        Bopf: '\ud835\udd39',
+        bopf: '\ud835\udd53',
+        bot: '\u22a5',
+        bottom: '\u22a5',
+        bowtie: '\u22c8',
+        boxbox: '\u29c9',
+        boxdl: '\u2510',
+        boxdL: '\u2555',
+        boxDl: '\u2556',
+        boxDL: '\u2557',
+        boxdr: '\u250c',
+        boxdR: '\u2552',
+        boxDr: '\u2553',
+        boxDR: '\u2554',
+        boxh: '\u2500',
+        boxH: '\u2550',
+        boxhd: '\u252c',
+        boxHd: '\u2564',
+        boxhD: '\u2565',
+        boxHD: '\u2566',
+        boxhu: '\u2534',
+        boxHu: '\u2567',
+        boxhU: '\u2568',
+        boxHU: '\u2569',
+        boxminus: '\u229f',
+        boxplus: '\u229e',
+        boxtimes: '\u22a0',
+        boxul: '\u2518',
+        boxuL: '\u255b',
+        boxUl: '\u255c',
+        boxUL: '\u255d',
+        boxur: '\u2514',
+        boxuR: '\u2558',
+        boxUr: '\u2559',
+        boxUR: '\u255a',
+        boxv: '\u2502',
+        boxV: '\u2551',
+        boxvh: '\u253c',
+        boxvH: '\u256a',
+        boxVh: '\u256b',
+        boxVH: '\u256c',
+        boxvl: '\u2524',
+        boxvL: '\u2561',
+        boxVl: '\u2562',
+        boxVL: '\u2563',
+        boxvr: '\u251c',
+        boxvR: '\u255e',
+        boxVr: '\u255f',
+        boxVR: '\u2560',
+        bprime: '\u2035',
+        breve: '\u02d8',
+        Breve: '\u02d8',
+        brvbar: '\xa6',
+        bscr: '\ud835\udcb7',
+        Bscr: '\u212c',
+        bsemi: '\u204f',
+        bsim: '\u223d',
+        bsime: '\u22cd',
+        bsolb: '\u29c5',
+        bsol: '\\',
+        bsolhsub: '\u27c8',
+        bull: '\u2022',
+        bullet: '\u2022',
+        bump: '\u224e',
+        bumpE: '\u2aae',
+        bumpe: '\u224f',
+        Bumpeq: '\u224e',
+        bumpeq: '\u224f',
+        Cacute: '\u0106',
+        cacute: '\u0107',
+        capand: '\u2a44',
+        capbrcup: '\u2a49',
+        capcap: '\u2a4b',
+        cap: '\u2229',
+        Cap: '\u22d2',
+        capcup: '\u2a47',
+        capdot: '\u2a40',
+        CapitalDifferentialD: '\u2145',
+        caps: '\u2229\ufe00',
+        caret: '\u2041',
+        caron: '\u02c7',
+        Cayleys: '\u212d',
+        ccaps: '\u2a4d',
+        Ccaron: '\u010c',
+        ccaron: '\u010d',
+        Ccedil: '\xc7',
+        ccedil: '\xe7',
+        Ccirc: '\u0108',
+        ccirc: '\u0109',
+        Cconint: '\u2230',
+        ccups: '\u2a4c',
+        ccupssm: '\u2a50',
+        Cdot: '\u010a',
+        cdot: '\u010b',
+        cedil: '\xb8',
+        Cedilla: '\xb8',
+        cemptyv: '\u29b2',
+        cent: '\xa2',
+        centerdot: '\xb7',
+        CenterDot: '\xb7',
+        cfr: '\ud835\udd20',
+        Cfr: '\u212d',
+        CHcy: '\u0427',
+        chcy: '\u0447',
+        check: '\u2713',
+        checkmark: '\u2713',
+        Chi: '\u03a7',
+        chi: '\u03c7',
+        circ: '\u02c6',
+        circeq: '\u2257',
+        circlearrowleft: '\u21ba',
+        circlearrowright: '\u21bb',
+        circledast: '\u229b',
+        circledcirc: '\u229a',
+        circleddash: '\u229d',
+        CircleDot: '\u2299',
+        circledR: '\xae',
+        circledS: '\u24c8',
+        CircleMinus: '\u2296',
+        CirclePlus: '\u2295',
+        CircleTimes: '\u2297',
+        cir: '\u25cb',
+        cirE: '\u29c3',
+        cire: '\u2257',
+        cirfnint: '\u2a10',
+        cirmid: '\u2aef',
+        cirscir: '\u29c2',
+        ClockwiseContourIntegral: '\u2232',
+        CloseCurlyDoubleQuote: '\u201d',
+        CloseCurlyQuote: '\u2019',
+        clubs: '\u2663',
+        clubsuit: '\u2663',
+        colon: ':',
+        Colon: '\u2237',
+        Colone: '\u2a74',
+        colone: '\u2254',
+        coloneq: '\u2254',
+        comma: ',',
+        commat: '@',
+        comp: '\u2201',
+        compfn: '\u2218',
+        complement: '\u2201',
+        complexes: '\u2102',
+        cong: '\u2245',
+        congdot: '\u2a6d',
+        Congruent: '\u2261',
+        conint: '\u222e',
+        Conint: '\u222f',
+        ContourIntegral: '\u222e',
+        copf: '\ud835\udd54',
+        Copf: '\u2102',
+        coprod: '\u2210',
+        Coproduct: '\u2210',
+        copy: '\xa9',
+        COPY: '\xa9',
+        copysr: '\u2117',
+        CounterClockwiseContourIntegral: '\u2233',
+        crarr: '\u21b5',
+        cross: '\u2717',
+        Cross: '\u2a2f',
+        Cscr: '\ud835\udc9e',
+        cscr: '\ud835\udcb8',
+        csub: '\u2acf',
+        csube: '\u2ad1',
+        csup: '\u2ad0',
+        csupe: '\u2ad2',
+        ctdot: '\u22ef',
+        cudarrl: '\u2938',
+        cudarrr: '\u2935',
+        cuepr: '\u22de',
+        cuesc: '\u22df',
+        cularr: '\u21b6',
+        cularrp: '\u293d',
+        cupbrcap: '\u2a48',
+        cupcap: '\u2a46',
+        CupCap: '\u224d',
+        cup: '\u222a',
+        Cup: '\u22d3',
+        cupcup: '\u2a4a',
+        cupdot: '\u228d',
+        cupor: '\u2a45',
+        cups: '\u222a\ufe00',
+        curarr: '\u21b7',
+        curarrm: '\u293c',
+        curlyeqprec: '\u22de',
+        curlyeqsucc: '\u22df',
+        curlyvee: '\u22ce',
+        curlywedge: '\u22cf',
+        curren: '\xa4',
+        curvearrowleft: '\u21b6',
+        curvearrowright: '\u21b7',
+        cuvee: '\u22ce',
+        cuwed: '\u22cf',
+        cwconint: '\u2232',
+        cwint: '\u2231',
+        cylcty: '\u232d',
+        dagger: '\u2020',
+        Dagger: '\u2021',
+        daleth: '\u2138',
+        darr: '\u2193',
+        Darr: '\u21a1',
+        dArr: '\u21d3',
+        dash: '\u2010',
+        Dashv: '\u2ae4',
+        dashv: '\u22a3',
+        dbkarow: '\u290f',
+        dblac: '\u02dd',
+        Dcaron: '\u010e',
+        dcaron: '\u010f',
+        Dcy: '\u0414',
+        dcy: '\u0434',
+        ddagger: '\u2021',
+        ddarr: '\u21ca',
+        DD: '\u2145',
+        dd: '\u2146',
+        DDotrahd: '\u2911',
+        ddotseq: '\u2a77',
+        deg: '\xb0',
+        Del: '\u2207',
+        Delta: '\u0394',
+        delta: '\u03b4',
+        demptyv: '\u29b1',
+        dfisht: '\u297f',
+        Dfr: '\ud835\udd07',
+        dfr: '\ud835\udd21',
+        dHar: '\u2965',
+        dharl: '\u21c3',
+        dharr: '\u21c2',
+        DiacriticalAcute: '\xb4',
+        DiacriticalDot: '\u02d9',
+        DiacriticalDoubleAcute: '\u02dd',
+        DiacriticalGrave: '`',
+        DiacriticalTilde: '\u02dc',
+        diam: '\u22c4',
+        diamond: '\u22c4',
+        Diamond: '\u22c4',
+        diamondsuit: '\u2666',
+        diams: '\u2666',
+        die: '\xa8',
+        DifferentialD: '\u2146',
+        digamma: '\u03dd',
+        disin: '\u22f2',
+        div: '\xf7',
+        divide: '\xf7',
+        divideontimes: '\u22c7',
+        divonx: '\u22c7',
+        DJcy: '\u0402',
+        djcy: '\u0452',
+        dlcorn: '\u231e',
+        dlcrop: '\u230d',
+        dollar: '$',
+        Dopf: '\ud835\udd3b',
+        dopf: '\ud835\udd55',
+        Dot: '\xa8',
+        dot: '\u02d9',
+        DotDot: '\u20dc',
+        doteq: '\u2250',
+        doteqdot: '\u2251',
+        DotEqual: '\u2250',
+        dotminus: '\u2238',
+        dotplus: '\u2214',
+        dotsquare: '\u22a1',
+        doublebarwedge: '\u2306',
+        DoubleContourIntegral: '\u222f',
+        DoubleDot: '\xa8',
+        DoubleDownArrow: '\u21d3',
+        DoubleLeftArrow: '\u21d0',
+        DoubleLeftRightArrow: '\u21d4',
+        DoubleLeftTee: '\u2ae4',
+        DoubleLongLeftArrow: '\u27f8',
+        DoubleLongLeftRightArrow: '\u27fa',
+        DoubleLongRightArrow: '\u27f9',
+        DoubleRightArrow: '\u21d2',
+        DoubleRightTee: '\u22a8',
+        DoubleUpArrow: '\u21d1',
+        DoubleUpDownArrow: '\u21d5',
+        DoubleVerticalBar: '\u2225',
+        DownArrowBar: '\u2913',
+        downarrow: '\u2193',
+        DownArrow: '\u2193',
+        Downarrow: '\u21d3',
+        DownArrowUpArrow: '\u21f5',
+        DownBreve: '\u0311',
+        downdownarrows: '\u21ca',
+        downharpoonleft: '\u21c3',
+        downharpoonright: '\u21c2',
+        DownLeftRightVector: '\u2950',
+        DownLeftTeeVector: '\u295e',
+        DownLeftVectorBar: '\u2956',
+        DownLeftVector: '\u21bd',
+        DownRightTeeVector: '\u295f',
+        DownRightVectorBar: '\u2957',
+        DownRightVector: '\u21c1',
+        DownTeeArrow: '\u21a7',
+        DownTee: '\u22a4',
+        drbkarow: '\u2910',
+        drcorn: '\u231f',
+        drcrop: '\u230c',
+        Dscr: '\ud835\udc9f',
+        dscr: '\ud835\udcb9',
+        DScy: '\u0405',
+        dscy: '\u0455',
+        dsol: '\u29f6',
+        Dstrok: '\u0110',
+        dstrok: '\u0111',
+        dtdot: '\u22f1',
+        dtri: '\u25bf',
+        dtrif: '\u25be',
+        duarr: '\u21f5',
+        duhar: '\u296f',
+        dwangle: '\u29a6',
+        DZcy: '\u040f',
+        dzcy: '\u045f',
+        dzigrarr: '\u27ff',
+        Eacute: '\xc9',
+        eacute: '\xe9',
+        easter: '\u2a6e',
+        Ecaron: '\u011a',
+        ecaron: '\u011b',
+        Ecirc: '\xca',
+        ecirc: '\xea',
+        ecir: '\u2256',
+        ecolon: '\u2255',
+        Ecy: '\u042d',
+        ecy: '\u044d',
+        eDDot: '\u2a77',
+        Edot: '\u0116',
+        edot: '\u0117',
+        eDot: '\u2251',
+        ee: '\u2147',
+        efDot: '\u2252',
+        Efr: '\ud835\udd08',
+        efr: '\ud835\udd22',
+        eg: '\u2a9a',
+        Egrave: '\xc8',
+        egrave: '\xe8',
+        egs: '\u2a96',
+        egsdot: '\u2a98',
+        el: '\u2a99',
+        Element: '\u2208',
+        elinters: '\u23e7',
+        ell: '\u2113',
+        els: '\u2a95',
+        elsdot: '\u2a97',
+        Emacr: '\u0112',
+        emacr: '\u0113',
+        empty: '\u2205',
+        emptyset: '\u2205',
+        EmptySmallSquare: '\u25fb',
+        emptyv: '\u2205',
+        EmptyVerySmallSquare: '\u25ab',
+        emsp13: '\u2004',
+        emsp14: '\u2005',
+        emsp: '\u2003',
+        ENG: '\u014a',
+        eng: '\u014b',
+        ensp: '\u2002',
+        Eogon: '\u0118',
+        eogon: '\u0119',
+        Eopf: '\ud835\udd3c',
+        eopf: '\ud835\udd56',
+        epar: '\u22d5',
+        eparsl: '\u29e3',
+        eplus: '\u2a71',
+        epsi: '\u03b5',
+        Epsilon: '\u0395',
+        epsilon: '\u03b5',
+        epsiv: '\u03f5',
+        eqcirc: '\u2256',
+        eqcolon: '\u2255',
+        eqsim: '\u2242',
+        eqslantgtr: '\u2a96',
+        eqslantless: '\u2a95',
+        Equal: '\u2a75',
+        equals: '=',
+        EqualTilde: '\u2242',
+        equest: '\u225f',
+        Equilibrium: '\u21cc',
+        equiv: '\u2261',
+        equivDD: '\u2a78',
+        eqvparsl: '\u29e5',
+        erarr: '\u2971',
+        erDot: '\u2253',
+        escr: '\u212f',
+        Escr: '\u2130',
+        esdot: '\u2250',
+        Esim: '\u2a73',
+        esim: '\u2242',
+        Eta: '\u0397',
+        eta: '\u03b7',
+        ETH: '\xd0',
+        eth: '\xf0',
+        Euml: '\xcb',
+        euml: '\xeb',
+        euro: '\u20ac',
+        excl: '!',
+        exist: '\u2203',
+        Exists: '\u2203',
+        expectation: '\u2130',
+        exponentiale: '\u2147',
+        ExponentialE: '\u2147',
+        fallingdotseq: '\u2252',
+        Fcy: '\u0424',
+        fcy: '\u0444',
+        female: '\u2640',
+        ffilig: '\ufb03',
+        fflig: '\ufb00',
+        ffllig: '\ufb04',
+        Ffr: '\ud835\udd09',
+        ffr: '\ud835\udd23',
+        filig: '\ufb01',
+        FilledSmallSquare: '\u25fc',
+        FilledVerySmallSquare: '\u25aa',
+        fjlig: 'fj',
+        flat: '\u266d',
+        fllig: '\ufb02',
+        fltns: '\u25b1',
+        fnof: '\u0192',
+        Fopf: '\ud835\udd3d',
+        fopf: '\ud835\udd57',
+        forall: '\u2200',
+        ForAll: '\u2200',
+        fork: '\u22d4',
+        forkv: '\u2ad9',
+        Fouriertrf: '\u2131',
+        fpartint: '\u2a0d',
+        frac12: '\xbd',
+        frac13: '\u2153',
+        frac14: '\xbc',
+        frac15: '\u2155',
+        frac16: '\u2159',
+        frac18: '\u215b',
+        frac23: '\u2154',
+        frac25: '\u2156',
+        frac34: '\xbe',
+        frac35: '\u2157',
+        frac38: '\u215c',
+        frac45: '\u2158',
+        frac56: '\u215a',
+        frac58: '\u215d',
+        frac78: '\u215e',
+        frasl: '\u2044',
+        frown: '\u2322',
+        fscr: '\ud835\udcbb',
+        Fscr: '\u2131',
+        gacute: '\u01f5',
+        Gamma: '\u0393',
+        gamma: '\u03b3',
+        Gammad: '\u03dc',
+        gammad: '\u03dd',
+        gap: '\u2a86',
+        Gbreve: '\u011e',
+        gbreve: '\u011f',
+        Gcedil: '\u0122',
+        Gcirc: '\u011c',
+        gcirc: '\u011d',
+        Gcy: '\u0413',
+        gcy: '\u0433',
+        Gdot: '\u0120',
+        gdot: '\u0121',
+        ge: '\u2265',
+        gE: '\u2267',
+        gEl: '\u2a8c',
+        gel: '\u22db',
+        geq: '\u2265',
+        geqq: '\u2267',
+        geqslant: '\u2a7e',
+        gescc: '\u2aa9',
+        ges: '\u2a7e',
+        gesdot: '\u2a80',
+        gesdoto: '\u2a82',
+        gesdotol: '\u2a84',
+        gesl: '\u22db\ufe00',
+        gesles: '\u2a94',
+        Gfr: '\ud835\udd0a',
+        gfr: '\ud835\udd24',
+        gg: '\u226b',
+        Gg: '\u22d9',
+        ggg: '\u22d9',
+        gimel: '\u2137',
+        GJcy: '\u0403',
+        gjcy: '\u0453',
+        gla: '\u2aa5',
+        gl: '\u2277',
+        glE: '\u2a92',
+        glj: '\u2aa4',
+        gnap: '\u2a8a',
+        gnapprox: '\u2a8a',
+        gne: '\u2a88',
+        gnE: '\u2269',
+        gneq: '\u2a88',
+        gneqq: '\u2269',
+        gnsim: '\u22e7',
+        Gopf: '\ud835\udd3e',
+        gopf: '\ud835\udd58',
+        grave: '`',
+        GreaterEqual: '\u2265',
+        GreaterEqualLess: '\u22db',
+        GreaterFullEqual: '\u2267',
+        GreaterGreater: '\u2aa2',
+        GreaterLess: '\u2277',
+        GreaterSlantEqual: '\u2a7e',
+        GreaterTilde: '\u2273',
+        Gscr: '\ud835\udca2',
+        gscr: '\u210a',
+        gsim: '\u2273',
+        gsime: '\u2a8e',
+        gsiml: '\u2a90',
+        gtcc: '\u2aa7',
+        gtcir: '\u2a7a',
+        gt: '>',
+        GT: '>',
+        Gt: '\u226b',
+        gtdot: '\u22d7',
+        gtlPar: '\u2995',
+        gtquest: '\u2a7c',
+        gtrapprox: '\u2a86',
+        gtrarr: '\u2978',
+        gtrdot: '\u22d7',
+        gtreqless: '\u22db',
+        gtreqqless: '\u2a8c',
+        gtrless: '\u2277',
+        gtrsim: '\u2273',
+        gvertneqq: '\u2269\ufe00',
+        gvnE: '\u2269\ufe00',
+        Hacek: '\u02c7',
+        hairsp: '\u200a',
+        half: '\xbd',
+        hamilt: '\u210b',
+        HARDcy: '\u042a',
+        hardcy: '\u044a',
+        harrcir: '\u2948',
+        harr: '\u2194',
+        hArr: '\u21d4',
+        harrw: '\u21ad',
+        Hat: '^',
+        hbar: '\u210f',
+        Hcirc: '\u0124',
+        hcirc: '\u0125',
+        hearts: '\u2665',
+        heartsuit: '\u2665',
+        hellip: '\u2026',
+        hercon: '\u22b9',
+        hfr: '\ud835\udd25',
+        Hfr: '\u210c',
+        HilbertSpace: '\u210b',
+        hksearow: '\u2925',
+        hkswarow: '\u2926',
+        hoarr: '\u21ff',
+        homtht: '\u223b',
+        hookleftarrow: '\u21a9',
+        hookrightarrow: '\u21aa',
+        hopf: '\ud835\udd59',
+        Hopf: '\u210d',
+        horbar: '\u2015',
+        HorizontalLine: '\u2500',
+        hscr: '\ud835\udcbd',
+        Hscr: '\u210b',
+        hslash: '\u210f',
+        Hstrok: '\u0126',
+        hstrok: '\u0127',
+        HumpDownHump: '\u224e',
+        HumpEqual: '\u224f',
+        hybull: '\u2043',
+        hyphen: '\u2010',
+        Iacute: '\xcd',
+        iacute: '\xed',
+        ic: '\u2063',
+        Icirc: '\xce',
+        icirc: '\xee',
+        Icy: '\u0418',
+        icy: '\u0438',
+        Idot: '\u0130',
+        IEcy: '\u0415',
+        iecy: '\u0435',
+        iexcl: '\xa1',
+        iff: '\u21d4',
+        ifr: '\ud835\udd26',
+        Ifr: '\u2111',
+        Igrave: '\xcc',
+        igrave: '\xec',
+        ii: '\u2148',
+        iiiint: '\u2a0c',
+        iiint: '\u222d',
+        iinfin: '\u29dc',
+        iiota: '\u2129',
+        IJlig: '\u0132',
+        ijlig: '\u0133',
+        Imacr: '\u012a',
+        imacr: '\u012b',
+        image: '\u2111',
+        ImaginaryI: '\u2148',
+        imagline: '\u2110',
+        imagpart: '\u2111',
+        imath: '\u0131',
+        Im: '\u2111',
+        imof: '\u22b7',
+        imped: '\u01b5',
+        Implies: '\u21d2',
+        incare: '\u2105',
+        in: '\u2208',
+        infin: '\u221e',
+        infintie: '\u29dd',
+        inodot: '\u0131',
+        intcal: '\u22ba',
+        int: '\u222b',
+        Int: '\u222c',
+        integers: '\u2124',
+        Integral: '\u222b',
+        intercal: '\u22ba',
+        Intersection: '\u22c2',
+        intlarhk: '\u2a17',
+        intprod: '\u2a3c',
+        InvisibleComma: '\u2063',
+        InvisibleTimes: '\u2062',
+        IOcy: '\u0401',
+        iocy: '\u0451',
+        Iogon: '\u012e',
+        iogon: '\u012f',
+        Iopf: '\ud835\udd40',
+        iopf: '\ud835\udd5a',
+        Iota: '\u0399',
+        iota: '\u03b9',
+        iprod: '\u2a3c',
+        iquest: '\xbf',
+        iscr: '\ud835\udcbe',
+        Iscr: '\u2110',
+        isin: '\u2208',
+        isindot: '\u22f5',
+        isinE: '\u22f9',
+        isins: '\u22f4',
+        isinsv: '\u22f3',
+        isinv: '\u2208',
+        it: '\u2062',
+        Itilde: '\u0128',
+        itilde: '\u0129',
+        Iukcy: '\u0406',
+        iukcy: '\u0456',
+        Iuml: '\xcf',
+        iuml: '\xef',
+        Jcirc: '\u0134',
+        jcirc: '\u0135',
+        Jcy: '\u0419',
+        jcy: '\u0439',
+        Jfr: '\ud835\udd0d',
+        jfr: '\ud835\udd27',
+        jmath: '\u0237',
+        Jopf: '\ud835\udd41',
+        jopf: '\ud835\udd5b',
+        Jscr: '\ud835\udca5',
+        jscr: '\ud835\udcbf',
+        Jsercy: '\u0408',
+        jsercy: '\u0458',
+        Jukcy: '\u0404',
+        jukcy: '\u0454',
+        Kappa: '\u039a',
+        kappa: '\u03ba',
+        kappav: '\u03f0',
+        Kcedil: '\u0136',
+        kcedil: '\u0137',
+        Kcy: '\u041a',
+        kcy: '\u043a',
+        Kfr: '\ud835\udd0e',
+        kfr: '\ud835\udd28',
+        kgreen: '\u0138',
+        KHcy: '\u0425',
+        khcy: '\u0445',
+        KJcy: '\u040c',
+        kjcy: '\u045c',
+        Kopf: '\ud835\udd42',
+        kopf: '\ud835\udd5c',
+        Kscr: '\ud835\udca6',
+        kscr: '\ud835\udcc0',
+        lAarr: '\u21da',
+        Lacute: '\u0139',
+        lacute: '\u013a',
+        laemptyv: '\u29b4',
+        lagran: '\u2112',
+        Lambda: '\u039b',
+        lambda: '\u03bb',
+        lang: '\u27e8',
+        Lang: '\u27ea',
+        langd: '\u2991',
+        langle: '\u27e8',
+        lap: '\u2a85',
+        Laplacetrf: '\u2112',
+        laquo: '\xab',
+        larrb: '\u21e4',
+        larrbfs: '\u291f',
+        larr: '\u2190',
+        Larr: '\u219e',
+        lArr: '\u21d0',
+        larrfs: '\u291d',
+        larrhk: '\u21a9',
+        larrlp: '\u21ab',
+        larrpl: '\u2939',
+        larrsim: '\u2973',
+        larrtl: '\u21a2',
+        latail: '\u2919',
+        lAtail: '\u291b',
+        lat: '\u2aab',
+        late: '\u2aad',
+        lates: '\u2aad\ufe00',
+        lbarr: '\u290c',
+        lBarr: '\u290e',
+        lbbrk: '\u2772',
+        lbrace: '{',
+        lbrack: '[',
+        lbrke: '\u298b',
+        lbrksld: '\u298f',
+        lbrkslu: '\u298d',
+        Lcaron: '\u013d',
+        lcaron: '\u013e',
+        Lcedil: '\u013b',
+        lcedil: '\u013c',
+        lceil: '\u2308',
+        lcub: '{',
+        Lcy: '\u041b',
+        lcy: '\u043b',
+        ldca: '\u2936',
+        ldquo: '\u201c',
+        ldquor: '\u201e',
+        ldrdhar: '\u2967',
+        ldrushar: '\u294b',
+        ldsh: '\u21b2',
+        le: '\u2264',
+        lE: '\u2266',
+        LeftAngleBracket: '\u27e8',
+        LeftArrowBar: '\u21e4',
+        leftarrow: '\u2190',
+        LeftArrow: '\u2190',
+        Leftarrow: '\u21d0',
+        LeftArrowRightArrow: '\u21c6',
+        leftarrowtail: '\u21a2',
+        LeftCeiling: '\u2308',
+        LeftDoubleBracket: '\u27e6',
+        LeftDownTeeVector: '\u2961',
+        LeftDownVectorBar: '\u2959',
+        LeftDownVector: '\u21c3',
+        LeftFloor: '\u230a',
+        leftharpoondown: '\u21bd',
+        leftharpoonup: '\u21bc',
+        leftleftarrows: '\u21c7',
+        leftrightarrow: '\u2194',
+        LeftRightArrow: '\u2194',
+        Leftrightarrow: '\u21d4',
+        leftrightarrows: '\u21c6',
+        leftrightharpoons: '\u21cb',
+        leftrightsquigarrow: '\u21ad',
+        LeftRightVector: '\u294e',
+        LeftTeeArrow: '\u21a4',
+        LeftTee: '\u22a3',
+        LeftTeeVector: '\u295a',
+        leftthreetimes: '\u22cb',
+        LeftTriangleBar: '\u29cf',
+        LeftTriangle: '\u22b2',
+        LeftTriangleEqual: '\u22b4',
+        LeftUpDownVector: '\u2951',
+        LeftUpTeeVector: '\u2960',
+        LeftUpVectorBar: '\u2958',
+        LeftUpVector: '\u21bf',
+        LeftVectorBar: '\u2952',
+        LeftVector: '\u21bc',
+        lEg: '\u2a8b',
+        leg: '\u22da',
+        leq: '\u2264',
+        leqq: '\u2266',
+        leqslant: '\u2a7d',
+        lescc: '\u2aa8',
+        les: '\u2a7d',
+        lesdot: '\u2a7f',
+        lesdoto: '\u2a81',
+        lesdotor: '\u2a83',
+        lesg: '\u22da\ufe00',
+        lesges: '\u2a93',
+        lessapprox: '\u2a85',
+        lessdot: '\u22d6',
+        lesseqgtr: '\u22da',
+        lesseqqgtr: '\u2a8b',
+        LessEqualGreater: '\u22da',
+        LessFullEqual: '\u2266',
+        LessGreater: '\u2276',
+        lessgtr: '\u2276',
+        LessLess: '\u2aa1',
+        lesssim: '\u2272',
+        LessSlantEqual: '\u2a7d',
+        LessTilde: '\u2272',
+        lfisht: '\u297c',
+        lfloor: '\u230a',
+        Lfr: '\ud835\udd0f',
+        lfr: '\ud835\udd29',
+        lg: '\u2276',
+        lgE: '\u2a91',
+        lHar: '\u2962',
+        lhard: '\u21bd',
+        lharu: '\u21bc',
+        lharul: '\u296a',
+        lhblk: '\u2584',
+        LJcy: '\u0409',
+        ljcy: '\u0459',
+        llarr: '\u21c7',
+        ll: '\u226a',
+        Ll: '\u22d8',
+        llcorner: '\u231e',
+        Lleftarrow: '\u21da',
+        llhard: '\u296b',
+        lltri: '\u25fa',
+        Lmidot: '\u013f',
+        lmidot: '\u0140',
+        lmoustache: '\u23b0',
+        lmoust: '\u23b0',
+        lnap: '\u2a89',
+        lnapprox: '\u2a89',
+        lne: '\u2a87',
+        lnE: '\u2268',
+        lneq: '\u2a87',
+        lneqq: '\u2268',
+        lnsim: '\u22e6',
+        loang: '\u27ec',
+        loarr: '\u21fd',
+        lobrk: '\u27e6',
+        longleftarrow: '\u27f5',
+        LongLeftArrow: '\u27f5',
+        Longleftarrow: '\u27f8',
+        longleftrightarrow: '\u27f7',
+        LongLeftRightArrow: '\u27f7',
+        Longleftrightarrow: '\u27fa',
+        longmapsto: '\u27fc',
+        longrightarrow: '\u27f6',
+        LongRightArrow: '\u27f6',
+        Longrightarrow: '\u27f9',
+        looparrowleft: '\u21ab',
+        looparrowright: '\u21ac',
+        lopar: '\u2985',
+        Lopf: '\ud835\udd43',
+        lopf: '\ud835\udd5d',
+        loplus: '\u2a2d',
+        lotimes: '\u2a34',
+        lowast: '\u2217',
+        lowbar: '_',
+        LowerLeftArrow: '\u2199',
+        LowerRightArrow: '\u2198',
+        loz: '\u25ca',
+        lozenge: '\u25ca',
+        lozf: '\u29eb',
+        lpar: '(',
+        lparlt: '\u2993',
+        lrarr: '\u21c6',
+        lrcorner: '\u231f',
+        lrhar: '\u21cb',
+        lrhard: '\u296d',
+        lrm: '\u200e',
+        lrtri: '\u22bf',
+        lsaquo: '\u2039',
+        lscr: '\ud835\udcc1',
+        Lscr: '\u2112',
+        lsh: '\u21b0',
+        Lsh: '\u21b0',
+        lsim: '\u2272',
+        lsime: '\u2a8d',
+        lsimg: '\u2a8f',
+        lsqb: '[',
+        lsquo: '\u2018',
+        lsquor: '\u201a',
+        Lstrok: '\u0141',
+        lstrok: '\u0142',
+        ltcc: '\u2aa6',
+        ltcir: '\u2a79',
+        lt: '<',
+        LT: '<',
+        Lt: '\u226a',
+        ltdot: '\u22d6',
+        lthree: '\u22cb',
+        ltimes: '\u22c9',
+        ltlarr: '\u2976',
+        ltquest: '\u2a7b',
+        ltri: '\u25c3',
+        ltrie: '\u22b4',
+        ltrif: '\u25c2',
+        ltrPar: '\u2996',
+        lurdshar: '\u294a',
+        luruhar: '\u2966',
+        lvertneqq: '\u2268\ufe00',
+        lvnE: '\u2268\ufe00',
+        macr: '\xaf',
+        male: '\u2642',
+        malt: '\u2720',
+        maltese: '\u2720',
+        Map: '\u2905',
+        map: '\u21a6',
+        mapsto: '\u21a6',
+        mapstodown: '\u21a7',
+        mapstoleft: '\u21a4',
+        mapstoup: '\u21a5',
+        marker: '\u25ae',
+        mcomma: '\u2a29',
+        Mcy: '\u041c',
+        mcy: '\u043c',
+        mdash: '\u2014',
+        mDDot: '\u223a',
+        measuredangle: '\u2221',
+        MediumSpace: '\u205f',
+        Mellintrf: '\u2133',
+        Mfr: '\ud835\udd10',
+        mfr: '\ud835\udd2a',
+        mho: '\u2127',
+        micro: '\xb5',
+        midast: '*',
+        midcir: '\u2af0',
+        mid: '\u2223',
+        middot: '\xb7',
+        minusb: '\u229f',
+        minus: '\u2212',
+        minusd: '\u2238',
+        minusdu: '\u2a2a',
+        MinusPlus: '\u2213',
+        mlcp: '\u2adb',
+        mldr: '\u2026',
+        mnplus: '\u2213',
+        models: '\u22a7',
+        Mopf: '\ud835\udd44',
+        mopf: '\ud835\udd5e',
+        mp: '\u2213',
+        mscr: '\ud835\udcc2',
+        Mscr: '\u2133',
+        mstpos: '\u223e',
+        Mu: '\u039c',
+        mu: '\u03bc',
+        multimap: '\u22b8',
+        mumap: '\u22b8',
+        nabla: '\u2207',
+        Nacute: '\u0143',
+        nacute: '\u0144',
+        nang: '\u2220\u20d2',
+        nap: '\u2249',
+        napE: '\u2a70\u0338',
+        napid: '\u224b\u0338',
+        napos: '\u0149',
+        napprox: '\u2249',
+        natural: '\u266e',
+        naturals: '\u2115',
+        natur: '\u266e',
+        nbsp: '\xa0',
+        nbump: '\u224e\u0338',
+        nbumpe: '\u224f\u0338',
+        ncap: '\u2a43',
+        Ncaron: '\u0147',
+        ncaron: '\u0148',
+        Ncedil: '\u0145',
+        ncedil: '\u0146',
+        ncong: '\u2247',
+        ncongdot: '\u2a6d\u0338',
+        ncup: '\u2a42',
+        Ncy: '\u041d',
+        ncy: '\u043d',
+        ndash: '\u2013',
+        nearhk: '\u2924',
+        nearr: '\u2197',
+        neArr: '\u21d7',
+        nearrow: '\u2197',
+        ne: '\u2260',
+        nedot: '\u2250\u0338',
+        NegativeMediumSpace: '\u200b',
+        NegativeThickSpace: '\u200b',
+        NegativeThinSpace: '\u200b',
+        NegativeVeryThinSpace: '\u200b',
+        nequiv: '\u2262',
+        nesear: '\u2928',
+        nesim: '\u2242\u0338',
+        NestedGreaterGreater: '\u226b',
+        NestedLessLess: '\u226a',
+        NewLine: '\n',
+        nexist: '\u2204',
+        nexists: '\u2204',
+        Nfr: '\ud835\udd11',
+        nfr: '\ud835\udd2b',
+        ngE: '\u2267\u0338',
+        nge: '\u2271',
+        ngeq: '\u2271',
+        ngeqq: '\u2267\u0338',
+        ngeqslant: '\u2a7e\u0338',
+        nges: '\u2a7e\u0338',
+        nGg: '\u22d9\u0338',
+        ngsim: '\u2275',
+        nGt: '\u226b\u20d2',
+        ngt: '\u226f',
+        ngtr: '\u226f',
+        nGtv: '\u226b\u0338',
+        nharr: '\u21ae',
+        nhArr: '\u21ce',
+        nhpar: '\u2af2',
+        ni: '\u220b',
+        nis: '\u22fc',
+        nisd: '\u22fa',
+        niv: '\u220b',
+        NJcy: '\u040a',
+        njcy: '\u045a',
+        nlarr: '\u219a',
+        nlArr: '\u21cd',
+        nldr: '\u2025',
+        nlE: '\u2266\u0338',
+        nle: '\u2270',
+        nleftarrow: '\u219a',
+        nLeftarrow: '\u21cd',
+        nleftrightarrow: '\u21ae',
+        nLeftrightarrow: '\u21ce',
+        nleq: '\u2270',
+        nleqq: '\u2266\u0338',
+        nleqslant: '\u2a7d\u0338',
+        nles: '\u2a7d\u0338',
+        nless: '\u226e',
+        nLl: '\u22d8\u0338',
+        nlsim: '\u2274',
+        nLt: '\u226a\u20d2',
+        nlt: '\u226e',
+        nltri: '\u22ea',
+        nltrie: '\u22ec',
+        nLtv: '\u226a\u0338',
+        nmid: '\u2224',
+        NoBreak: '\u2060',
+        NonBreakingSpace: '\xa0',
+        nopf: '\ud835\udd5f',
+        Nopf: '\u2115',
+        Not: '\u2aec',
+        not: '\xac',
+        NotCongruent: '\u2262',
+        NotCupCap: '\u226d',
+        NotDoubleVerticalBar: '\u2226',
+        NotElement: '\u2209',
+        NotEqual: '\u2260',
+        NotEqualTilde: '\u2242\u0338',
+        NotExists: '\u2204',
+        NotGreater: '\u226f',
+        NotGreaterEqual: '\u2271',
+        NotGreaterFullEqual: '\u2267\u0338',
+        NotGreaterGreater: '\u226b\u0338',
+        NotGreaterLess: '\u2279',
+        NotGreaterSlantEqual: '\u2a7e\u0338',
+        NotGreaterTilde: '\u2275',
+        NotHumpDownHump: '\u224e\u0338',
+        NotHumpEqual: '\u224f\u0338',
+        notin: '\u2209',
+        notindot: '\u22f5\u0338',
+        notinE: '\u22f9\u0338',
+        notinva: '\u2209',
+        notinvb: '\u22f7',
+        notinvc: '\u22f6',
+        NotLeftTriangleBar: '\u29cf\u0338',
+        NotLeftTriangle: '\u22ea',
+        NotLeftTriangleEqual: '\u22ec',
+        NotLess: '\u226e',
+        NotLessEqual: '\u2270',
+        NotLessGreater: '\u2278',
+        NotLessLess: '\u226a\u0338',
+        NotLessSlantEqual: '\u2a7d\u0338',
+        NotLessTilde: '\u2274',
+        NotNestedGreaterGreater: '\u2aa2\u0338',
+        NotNestedLessLess: '\u2aa1\u0338',
+        notni: '\u220c',
+        notniva: '\u220c',
+        notnivb: '\u22fe',
+        notnivc: '\u22fd',
+        NotPrecedes: '\u2280',
+        NotPrecedesEqual: '\u2aaf\u0338',
+        NotPrecedesSlantEqual: '\u22e0',
+        NotReverseElement: '\u220c',
+        NotRightTriangleBar: '\u29d0\u0338',
+        NotRightTriangle: '\u22eb',
+        NotRightTriangleEqual: '\u22ed',
+        NotSquareSubset: '\u228f\u0338',
+        NotSquareSubsetEqual: '\u22e2',
+        NotSquareSuperset: '\u2290\u0338',
+        NotSquareSupersetEqual: '\u22e3',
+        NotSubset: '\u2282\u20d2',
+        NotSubsetEqual: '\u2288',
+        NotSucceeds: '\u2281',
+        NotSucceedsEqual: '\u2ab0\u0338',
+        NotSucceedsSlantEqual: '\u22e1',
+        NotSucceedsTilde: '\u227f\u0338',
+        NotSuperset: '\u2283\u20d2',
+        NotSupersetEqual: '\u2289',
+        NotTilde: '\u2241',
+        NotTildeEqual: '\u2244',
+        NotTildeFullEqual: '\u2247',
+        NotTildeTilde: '\u2249',
+        NotVerticalBar: '\u2224',
+        nparallel: '\u2226',
+        npar: '\u2226',
+        nparsl: '\u2afd\u20e5',
+        npart: '\u2202\u0338',
+        npolint: '\u2a14',
+        npr: '\u2280',
+        nprcue: '\u22e0',
+        nprec: '\u2280',
+        npreceq: '\u2aaf\u0338',
+        npre: '\u2aaf\u0338',
+        nrarrc: '\u2933\u0338',
+        nrarr: '\u219b',
+        nrArr: '\u21cf',
+        nrarrw: '\u219d\u0338',
+        nrightarrow: '\u219b',
+        nRightarrow: '\u21cf',
+        nrtri: '\u22eb',
+        nrtrie: '\u22ed',
+        nsc: '\u2281',
+        nsccue: '\u22e1',
+        nsce: '\u2ab0\u0338',
+        Nscr: '\ud835\udca9',
+        nscr: '\ud835\udcc3',
+        nshortmid: '\u2224',
+        nshortparallel: '\u2226',
+        nsim: '\u2241',
+        nsime: '\u2244',
+        nsimeq: '\u2244',
+        nsmid: '\u2224',
+        nspar: '\u2226',
+        nsqsube: '\u22e2',
+        nsqsupe: '\u22e3',
+        nsub: '\u2284',
+        nsubE: '\u2ac5\u0338',
+        nsube: '\u2288',
+        nsubset: '\u2282\u20d2',
+        nsubseteq: '\u2288',
+        nsubseteqq: '\u2ac5\u0338',
+        nsucc: '\u2281',
+        nsucceq: '\u2ab0\u0338',
+        nsup: '\u2285',
+        nsupE: '\u2ac6\u0338',
+        nsupe: '\u2289',
+        nsupset: '\u2283\u20d2',
+        nsupseteq: '\u2289',
+        nsupseteqq: '\u2ac6\u0338',
+        ntgl: '\u2279',
+        Ntilde: '\xd1',
+        ntilde: '\xf1',
+        ntlg: '\u2278',
+        ntriangleleft: '\u22ea',
+        ntrianglelefteq: '\u22ec',
+        ntriangleright: '\u22eb',
+        ntrianglerighteq: '\u22ed',
+        Nu: '\u039d',
+        nu: '\u03bd',
+        num: '#',
+        numero: '\u2116',
+        numsp: '\u2007',
+        nvap: '\u224d\u20d2',
+        nvdash: '\u22ac',
+        nvDash: '\u22ad',
+        nVdash: '\u22ae',
+        nVDash: '\u22af',
+        nvge: '\u2265\u20d2',
+        nvgt: '>\u20d2',
+        nvHarr: '\u2904',
+        nvinfin: '\u29de',
+        nvlArr: '\u2902',
+        nvle: '\u2264\u20d2',
+        nvlt: '<\u20d2',
+        nvltrie: '\u22b4\u20d2',
+        nvrArr: '\u2903',
+        nvrtrie: '\u22b5\u20d2',
+        nvsim: '\u223c\u20d2',
+        nwarhk: '\u2923',
+        nwarr: '\u2196',
+        nwArr: '\u21d6',
+        nwarrow: '\u2196',
+        nwnear: '\u2927',
+        Oacute: '\xd3',
+        oacute: '\xf3',
+        oast: '\u229b',
+        Ocirc: '\xd4',
+        ocirc: '\xf4',
+        ocir: '\u229a',
+        Ocy: '\u041e',
+        ocy: '\u043e',
+        odash: '\u229d',
+        Odblac: '\u0150',
+        odblac: '\u0151',
+        odiv: '\u2a38',
+        odot: '\u2299',
+        odsold: '\u29bc',
+        OElig: '\u0152',
+        oelig: '\u0153',
+        ofcir: '\u29bf',
+        Ofr: '\ud835\udd12',
+        ofr: '\ud835\udd2c',
+        ogon: '\u02db',
+        Ograve: '\xd2',
+        ograve: '\xf2',
+        ogt: '\u29c1',
+        ohbar: '\u29b5',
+        ohm: '\u03a9',
+        oint: '\u222e',
+        olarr: '\u21ba',
+        olcir: '\u29be',
+        olcross: '\u29bb',
+        oline: '\u203e',
+        olt: '\u29c0',
+        Omacr: '\u014c',
+        omacr: '\u014d',
+        Omega: '\u03a9',
+        omega: '\u03c9',
+        Omicron: '\u039f',
+        omicron: '\u03bf',
+        omid: '\u29b6',
+        ominus: '\u2296',
+        Oopf: '\ud835\udd46',
+        oopf: '\ud835\udd60',
+        opar: '\u29b7',
+        OpenCurlyDoubleQuote: '\u201c',
+        OpenCurlyQuote: '\u2018',
+        operp: '\u29b9',
+        oplus: '\u2295',
+        orarr: '\u21bb',
+        Or: '\u2a54',
+        or: '\u2228',
+        ord: '\u2a5d',
+        order: '\u2134',
+        orderof: '\u2134',
+        ordf: '\xaa',
+        ordm: '\xba',
+        origof: '\u22b6',
+        oror: '\u2a56',
+        orslope: '\u2a57',
+        orv: '\u2a5b',
+        oS: '\u24c8',
+        Oscr: '\ud835\udcaa',
+        oscr: '\u2134',
+        Oslash: '\xd8',
+        oslash: '\xf8',
+        osol: '\u2298',
+        Otilde: '\xd5',
+        otilde: '\xf5',
+        otimesas: '\u2a36',
+        Otimes: '\u2a37',
+        otimes: '\u2297',
+        Ouml: '\xd6',
+        ouml: '\xf6',
+        ovbar: '\u233d',
+        OverBar: '\u203e',
+        OverBrace: '\u23de',
+        OverBracket: '\u23b4',
+        OverParenthesis: '\u23dc',
+        para: '\xb6',
+        parallel: '\u2225',
+        par: '\u2225',
+        parsim: '\u2af3',
+        parsl: '\u2afd',
+        part: '\u2202',
+        PartialD: '\u2202',
+        Pcy: '\u041f',
+        pcy: '\u043f',
+        percnt: '%',
+        period: '.',
+        permil: '\u2030',
+        perp: '\u22a5',
+        pertenk: '\u2031',
+        Pfr: '\ud835\udd13',
+        pfr: '\ud835\udd2d',
+        Phi: '\u03a6',
+        phi: '\u03c6',
+        phiv: '\u03d5',
+        phmmat: '\u2133',
+        phone: '\u260e',
+        Pi: '\u03a0',
+        pi: '\u03c0',
+        pitchfork: '\u22d4',
+        piv: '\u03d6',
+        planck: '\u210f',
+        planckh: '\u210e',
+        plankv: '\u210f',
+        plusacir: '\u2a23',
+        plusb: '\u229e',
+        pluscir: '\u2a22',
+        plus: '+',
+        plusdo: '\u2214',
+        plusdu: '\u2a25',
+        pluse: '\u2a72',
+        PlusMinus: '\xb1',
+        plusmn: '\xb1',
+        plussim: '\u2a26',
+        plustwo: '\u2a27',
+        pm: '\xb1',
+        Poincareplane: '\u210c',
+        pointint: '\u2a15',
+        popf: '\ud835\udd61',
+        Popf: '\u2119',
+        pound: '\xa3',
+        prap: '\u2ab7',
+        Pr: '\u2abb',
+        pr: '\u227a',
+        prcue: '\u227c',
+        precapprox: '\u2ab7',
+        prec: '\u227a',
+        preccurlyeq: '\u227c',
+        Precedes: '\u227a',
+        PrecedesEqual: '\u2aaf',
+        PrecedesSlantEqual: '\u227c',
+        PrecedesTilde: '\u227e',
+        preceq: '\u2aaf',
+        precnapprox: '\u2ab9',
+        precneqq: '\u2ab5',
+        precnsim: '\u22e8',
+        pre: '\u2aaf',
+        prE: '\u2ab3',
+        precsim: '\u227e',
+        prime: '\u2032',
+        Prime: '\u2033',
+        primes: '\u2119',
+        prnap: '\u2ab9',
+        prnE: '\u2ab5',
+        prnsim: '\u22e8',
+        prod: '\u220f',
+        Product: '\u220f',
+        profalar: '\u232e',
+        profline: '\u2312',
+        profsurf: '\u2313',
+        prop: '\u221d',
+        Proportional: '\u221d',
+        Proportion: '\u2237',
+        propto: '\u221d',
+        prsim: '\u227e',
+        prurel: '\u22b0',
+        Pscr: '\ud835\udcab',
+        pscr: '\ud835\udcc5',
+        Psi: '\u03a8',
+        psi: '\u03c8',
+        puncsp: '\u2008',
+        Qfr: '\ud835\udd14',
+        qfr: '\ud835\udd2e',
+        qint: '\u2a0c',
+        qopf: '\ud835\udd62',
+        Qopf: '\u211a',
+        qprime: '\u2057',
+        Qscr: '\ud835\udcac',
+        qscr: '\ud835\udcc6',
+        quaternions: '\u210d',
+        quatint: '\u2a16',
+        quest: '?',
+        questeq: '\u225f',
+        quot: '"',
+        QUOT: '"',
+        rAarr: '\u21db',
+        race: '\u223d\u0331',
+        Racute: '\u0154',
+        racute: '\u0155',
+        radic: '\u221a',
+        raemptyv: '\u29b3',
+        rang: '\u27e9',
+        Rang: '\u27eb',
+        rangd: '\u2992',
+        range: '\u29a5',
+        rangle: '\u27e9',
+        raquo: '\xbb',
+        rarrap: '\u2975',
+        rarrb: '\u21e5',
+        rarrbfs: '\u2920',
+        rarrc: '\u2933',
+        rarr: '\u2192',
+        Rarr: '\u21a0',
+        rArr: '\u21d2',
+        rarrfs: '\u291e',
+        rarrhk: '\u21aa',
+        rarrlp: '\u21ac',
+        rarrpl: '\u2945',
+        rarrsim: '\u2974',
+        Rarrtl: '\u2916',
+        rarrtl: '\u21a3',
+        rarrw: '\u219d',
+        ratail: '\u291a',
+        rAtail: '\u291c',
+        ratio: '\u2236',
+        rationals: '\u211a',
+        rbarr: '\u290d',
+        rBarr: '\u290f',
+        RBarr: '\u2910',
+        rbbrk: '\u2773',
+        rbrace: '}',
+        rbrack: ']',
+        rbrke: '\u298c',
+        rbrksld: '\u298e',
+        rbrkslu: '\u2990',
+        Rcaron: '\u0158',
+        rcaron: '\u0159',
+        Rcedil: '\u0156',
+        rcedil: '\u0157',
+        rceil: '\u2309',
+        rcub: '}',
+        Rcy: '\u0420',
+        rcy: '\u0440',
+        rdca: '\u2937',
+        rdldhar: '\u2969',
+        rdquo: '\u201d',
+        rdquor: '\u201d',
+        rdsh: '\u21b3',
+        real: '\u211c',
+        realine: '\u211b',
+        realpart: '\u211c',
+        reals: '\u211d',
+        Re: '\u211c',
+        rect: '\u25ad',
+        reg: '\xae',
+        REG: '\xae',
+        ReverseElement: '\u220b',
+        ReverseEquilibrium: '\u21cb',
+        ReverseUpEquilibrium: '\u296f',
+        rfisht: '\u297d',
+        rfloor: '\u230b',
+        rfr: '\ud835\udd2f',
+        Rfr: '\u211c',
+        rHar: '\u2964',
+        rhard: '\u21c1',
+        rharu: '\u21c0',
+        rharul: '\u296c',
+        Rho: '\u03a1',
+        rho: '\u03c1',
+        rhov: '\u03f1',
+        RightAngleBracket: '\u27e9',
+        RightArrowBar: '\u21e5',
+        rightarrow: '\u2192',
+        RightArrow: '\u2192',
+        Rightarrow: '\u21d2',
+        RightArrowLeftArrow: '\u21c4',
+        rightarrowtail: '\u21a3',
+        RightCeiling: '\u2309',
+        RightDoubleBracket: '\u27e7',
+        RightDownTeeVector: '\u295d',
+        RightDownVectorBar: '\u2955',
+        RightDownVector: '\u21c2',
+        RightFloor: '\u230b',
+        rightharpoondown: '\u21c1',
+        rightharpoonup: '\u21c0',
+        rightleftarrows: '\u21c4',
+        rightleftharpoons: '\u21cc',
+        rightrightarrows: '\u21c9',
+        rightsquigarrow: '\u219d',
+        RightTeeArrow: '\u21a6',
+        RightTee: '\u22a2',
+        RightTeeVector: '\u295b',
+        rightthreetimes: '\u22cc',
+        RightTriangleBar: '\u29d0',
+        RightTriangle: '\u22b3',
+        RightTriangleEqual: '\u22b5',
+        RightUpDownVector: '\u294f',
+        RightUpTeeVector: '\u295c',
+        RightUpVectorBar: '\u2954',
+        RightUpVector: '\u21be',
+        RightVectorBar: '\u2953',
+        RightVector: '\u21c0',
+        ring: '\u02da',
+        risingdotseq: '\u2253',
+        rlarr: '\u21c4',
+        rlhar: '\u21cc',
+        rlm: '\u200f',
+        rmoustache: '\u23b1',
+        rmoust: '\u23b1',
+        rnmid: '\u2aee',
+        roang: '\u27ed',
+        roarr: '\u21fe',
+        robrk: '\u27e7',
+        ropar: '\u2986',
+        ropf: '\ud835\udd63',
+        Ropf: '\u211d',
+        roplus: '\u2a2e',
+        rotimes: '\u2a35',
+        RoundImplies: '\u2970',
+        rpar: ')',
+        rpargt: '\u2994',
+        rppolint: '\u2a12',
+        rrarr: '\u21c9',
+        Rrightarrow: '\u21db',
+        rsaquo: '\u203a',
+        rscr: '\ud835\udcc7',
+        Rscr: '\u211b',
+        rsh: '\u21b1',
+        Rsh: '\u21b1',
+        rsqb: ']',
+        rsquo: '\u2019',
+        rsquor: '\u2019',
+        rthree: '\u22cc',
+        rtimes: '\u22ca',
+        rtri: '\u25b9',
+        rtrie: '\u22b5',
+        rtrif: '\u25b8',
+        rtriltri: '\u29ce',
+        RuleDelayed: '\u29f4',
+        ruluhar: '\u2968',
+        rx: '\u211e',
+        Sacute: '\u015a',
+        sacute: '\u015b',
+        sbquo: '\u201a',
+        scap: '\u2ab8',
+        Scaron: '\u0160',
+        scaron: '\u0161',
+        Sc: '\u2abc',
+        sc: '\u227b',
+        sccue: '\u227d',
+        sce: '\u2ab0',
+        scE: '\u2ab4',
+        Scedil: '\u015e',
+        scedil: '\u015f',
+        Scirc: '\u015c',
+        scirc: '\u015d',
+        scnap: '\u2aba',
+        scnE: '\u2ab6',
+        scnsim: '\u22e9',
+        scpolint: '\u2a13',
+        scsim: '\u227f',
+        Scy: '\u0421',
+        scy: '\u0441',
+        sdotb: '\u22a1',
+        sdot: '\u22c5',
+        sdote: '\u2a66',
+        searhk: '\u2925',
+        searr: '\u2198',
+        seArr: '\u21d8',
+        searrow: '\u2198',
+        sect: '\xa7',
+        semi: ';',
+        seswar: '\u2929',
+        setminus: '\u2216',
+        setmn: '\u2216',
+        sext: '\u2736',
+        Sfr: '\ud835\udd16',
+        sfr: '\ud835\udd30',
+        sfrown: '\u2322',
+        sharp: '\u266f',
+        SHCHcy: '\u0429',
+        shchcy: '\u0449',
+        SHcy: '\u0428',
+        shcy: '\u0448',
+        ShortDownArrow: '\u2193',
+        ShortLeftArrow: '\u2190',
+        shortmid: '\u2223',
+        shortparallel: '\u2225',
+        ShortRightArrow: '\u2192',
+        ShortUpArrow: '\u2191',
+        shy: '\xad',
+        Sigma: '\u03a3',
+        sigma: '\u03c3',
+        sigmaf: '\u03c2',
+        sigmav: '\u03c2',
+        sim: '\u223c',
+        simdot: '\u2a6a',
+        sime: '\u2243',
+        simeq: '\u2243',
+        simg: '\u2a9e',
+        simgE: '\u2aa0',
+        siml: '\u2a9d',
+        simlE: '\u2a9f',
+        simne: '\u2246',
+        simplus: '\u2a24',
+        simrarr: '\u2972',
+        slarr: '\u2190',
+        SmallCircle: '\u2218',
+        smallsetminus: '\u2216',
+        smashp: '\u2a33',
+        smeparsl: '\u29e4',
+        smid: '\u2223',
+        smile: '\u2323',
+        smt: '\u2aaa',
+        smte: '\u2aac',
+        smtes: '\u2aac\ufe00',
+        SOFTcy: '\u042c',
+        softcy: '\u044c',
+        solbar: '\u233f',
+        solb: '\u29c4',
+        sol: '/',
+        Sopf: '\ud835\udd4a',
+        sopf: '\ud835\udd64',
+        spades: '\u2660',
+        spadesuit: '\u2660',
+        spar: '\u2225',
+        sqcap: '\u2293',
+        sqcaps: '\u2293\ufe00',
+        sqcup: '\u2294',
+        sqcups: '\u2294\ufe00',
+        Sqrt: '\u221a',
+        sqsub: '\u228f',
+        sqsube: '\u2291',
+        sqsubset: '\u228f',
+        sqsubseteq: '\u2291',
+        sqsup: '\u2290',
+        sqsupe: '\u2292',
+        sqsupset: '\u2290',
+        sqsupseteq: '\u2292',
+        square: '\u25a1',
+        Square: '\u25a1',
+        SquareIntersection: '\u2293',
+        SquareSubset: '\u228f',
+        SquareSubsetEqual: '\u2291',
+        SquareSuperset: '\u2290',
+        SquareSupersetEqual: '\u2292',
+        SquareUnion: '\u2294',
+        squarf: '\u25aa',
+        squ: '\u25a1',
+        squf: '\u25aa',
+        srarr: '\u2192',
+        Sscr: '\ud835\udcae',
+        sscr: '\ud835\udcc8',
+        ssetmn: '\u2216',
+        ssmile: '\u2323',
+        sstarf: '\u22c6',
+        Star: '\u22c6',
+        star: '\u2606',
+        starf: '\u2605',
+        straightepsilon: '\u03f5',
+        straightphi: '\u03d5',
+        strns: '\xaf',
+        sub: '\u2282',
+        Sub: '\u22d0',
+        subdot: '\u2abd',
+        subE: '\u2ac5',
+        sube: '\u2286',
+        subedot: '\u2ac3',
+        submult: '\u2ac1',
+        subnE: '\u2acb',
+        subne: '\u228a',
+        subplus: '\u2abf',
+        subrarr: '\u2979',
+        subset: '\u2282',
+        Subset: '\u22d0',
+        subseteq: '\u2286',
+        subseteqq: '\u2ac5',
+        SubsetEqual: '\u2286',
+        subsetneq: '\u228a',
+        subsetneqq: '\u2acb',
+        subsim: '\u2ac7',
+        subsub: '\u2ad5',
+        subsup: '\u2ad3',
+        succapprox: '\u2ab8',
+        succ: '\u227b',
+        succcurlyeq: '\u227d',
+        Succeeds: '\u227b',
+        SucceedsEqual: '\u2ab0',
+        SucceedsSlantEqual: '\u227d',
+        SucceedsTilde: '\u227f',
+        succeq: '\u2ab0',
+        succnapprox: '\u2aba',
+        succneqq: '\u2ab6',
+        succnsim: '\u22e9',
+        succsim: '\u227f',
+        SuchThat: '\u220b',
+        sum: '\u2211',
+        Sum: '\u2211',
+        sung: '\u266a',
+        sup1: '\xb9',
+        sup2: '\xb2',
+        sup3: '\xb3',
+        sup: '\u2283',
+        Sup: '\u22d1',
+        supdot: '\u2abe',
+        supdsub: '\u2ad8',
+        supE: '\u2ac6',
+        supe: '\u2287',
+        supedot: '\u2ac4',
+        Superset: '\u2283',
+        SupersetEqual: '\u2287',
+        suphsol: '\u27c9',
+        suphsub: '\u2ad7',
+        suplarr: '\u297b',
+        supmult: '\u2ac2',
+        supnE: '\u2acc',
+        supne: '\u228b',
+        supplus: '\u2ac0',
+        supset: '\u2283',
+        Supset: '\u22d1',
+        supseteq: '\u2287',
+        supseteqq: '\u2ac6',
+        supsetneq: '\u228b',
+        supsetneqq: '\u2acc',
+        supsim: '\u2ac8',
+        supsub: '\u2ad4',
+        supsup: '\u2ad6',
+        swarhk: '\u2926',
+        swarr: '\u2199',
+        swArr: '\u21d9',
+        swarrow: '\u2199',
+        swnwar: '\u292a',
+        szlig: '\xdf',
+        Tab: '\t',
+        target: '\u2316',
+        Tau: '\u03a4',
+        tau: '\u03c4',
+        tbrk: '\u23b4',
+        Tcaron: '\u0164',
+        tcaron: '\u0165',
+        Tcedil: '\u0162',
+        tcedil: '\u0163',
+        Tcy: '\u0422',
+        tcy: '\u0442',
+        tdot: '\u20db',
+        telrec: '\u2315',
+        Tfr: '\ud835\udd17',
+        tfr: '\ud835\udd31',
+        there4: '\u2234',
+        therefore: '\u2234',
+        Therefore: '\u2234',
+        Theta: '\u0398',
+        theta: '\u03b8',
+        thetasym: '\u03d1',
+        thetav: '\u03d1',
+        thickapprox: '\u2248',
+        thicksim: '\u223c',
+        ThickSpace: '\u205f\u200a',
+        ThinSpace: '\u2009',
+        thinsp: '\u2009',
+        thkap: '\u2248',
+        thksim: '\u223c',
+        THORN: '\xde',
+        thorn: '\xfe',
+        tilde: '\u02dc',
+        Tilde: '\u223c',
+        TildeEqual: '\u2243',
+        TildeFullEqual: '\u2245',
+        TildeTilde: '\u2248',
+        timesbar: '\u2a31',
+        timesb: '\u22a0',
+        times: '\xd7',
+        timesd: '\u2a30',
+        tint: '\u222d',
+        toea: '\u2928',
+        topbot: '\u2336',
+        topcir: '\u2af1',
+        top: '\u22a4',
+        Topf: '\ud835\udd4b',
+        topf: '\ud835\udd65',
+        topfork: '\u2ada',
+        tosa: '\u2929',
+        tprime: '\u2034',
+        trade: '\u2122',
+        TRADE: '\u2122',
+        triangle: '\u25b5',
+        triangledown: '\u25bf',
+        triangleleft: '\u25c3',
+        trianglelefteq: '\u22b4',
+        triangleq: '\u225c',
+        triangleright: '\u25b9',
+        trianglerighteq: '\u22b5',
+        tridot: '\u25ec',
+        trie: '\u225c',
+        triminus: '\u2a3a',
+        TripleDot: '\u20db',
+        triplus: '\u2a39',
+        trisb: '\u29cd',
+        tritime: '\u2a3b',
+        trpezium: '\u23e2',
+        Tscr: '\ud835\udcaf',
+        tscr: '\ud835\udcc9',
+        TScy: '\u0426',
+        tscy: '\u0446',
+        TSHcy: '\u040b',
+        tshcy: '\u045b',
+        Tstrok: '\u0166',
+        tstrok: '\u0167',
+        twixt: '\u226c',
+        twoheadleftarrow: '\u219e',
+        twoheadrightarrow: '\u21a0',
+        Uacute: '\xda',
+        uacute: '\xfa',
+        uarr: '\u2191',
+        Uarr: '\u219f',
+        uArr: '\u21d1',
+        Uarrocir: '\u2949',
+        Ubrcy: '\u040e',
+        ubrcy: '\u045e',
+        Ubreve: '\u016c',
+        ubreve: '\u016d',
+        Ucirc: '\xdb',
+        ucirc: '\xfb',
+        Ucy: '\u0423',
+        ucy: '\u0443',
+        udarr: '\u21c5',
+        Udblac: '\u0170',
+        udblac: '\u0171',
+        udhar: '\u296e',
+        ufisht: '\u297e',
+        Ufr: '\ud835\udd18',
+        ufr: '\ud835\udd32',
+        Ugrave: '\xd9',
+        ugrave: '\xf9',
+        uHar: '\u2963',
+        uharl: '\u21bf',
+        uharr: '\u21be',
+        uhblk: '\u2580',
+        ulcorn: '\u231c',
+        ulcorner: '\u231c',
+        ulcrop: '\u230f',
+        ultri: '\u25f8',
+        Umacr: '\u016a',
+        umacr: '\u016b',
+        uml: '\xa8',
+        UnderBar: '_',
+        UnderBrace: '\u23df',
+        UnderBracket: '\u23b5',
+        UnderParenthesis: '\u23dd',
+        Union: '\u22c3',
+        UnionPlus: '\u228e',
+        Uogon: '\u0172',
+        uogon: '\u0173',
+        Uopf: '\ud835\udd4c',
+        uopf: '\ud835\udd66',
+        UpArrowBar: '\u2912',
+        uparrow: '\u2191',
+        UpArrow: '\u2191',
+        Uparrow: '\u21d1',
+        UpArrowDownArrow: '\u21c5',
+        updownarrow: '\u2195',
+        UpDownArrow: '\u2195',
+        Updownarrow: '\u21d5',
+        UpEquilibrium: '\u296e',
+        upharpoonleft: '\u21bf',
+        upharpoonright: '\u21be',
+        uplus: '\u228e',
+        UpperLeftArrow: '\u2196',
+        UpperRightArrow: '\u2197',
+        upsi: '\u03c5',
+        Upsi: '\u03d2',
+        upsih: '\u03d2',
+        Upsilon: '\u03a5',
+        upsilon: '\u03c5',
+        UpTeeArrow: '\u21a5',
+        UpTee: '\u22a5',
+        upuparrows: '\u21c8',
+        urcorn: '\u231d',
+        urcorner: '\u231d',
+        urcrop: '\u230e',
+        Uring: '\u016e',
+        uring: '\u016f',
+        urtri: '\u25f9',
+        Uscr: '\ud835\udcb0',
+        uscr: '\ud835\udcca',
+        utdot: '\u22f0',
+        Utilde: '\u0168',
+        utilde: '\u0169',
+        utri: '\u25b5',
+        utrif: '\u25b4',
+        uuarr: '\u21c8',
+        Uuml: '\xdc',
+        uuml: '\xfc',
+        uwangle: '\u29a7',
+        vangrt: '\u299c',
+        varepsilon: '\u03f5',
+        varkappa: '\u03f0',
+        varnothing: '\u2205',
+        varphi: '\u03d5',
+        varpi: '\u03d6',
+        varpropto: '\u221d',
+        varr: '\u2195',
+        vArr: '\u21d5',
+        varrho: '\u03f1',
+        varsigma: '\u03c2',
+        varsubsetneq: '\u228a\ufe00',
+        varsubsetneqq: '\u2acb\ufe00',
+        varsupsetneq: '\u228b\ufe00',
+        varsupsetneqq: '\u2acc\ufe00',
+        vartheta: '\u03d1',
+        vartriangleleft: '\u22b2',
+        vartriangleright: '\u22b3',
+        vBar: '\u2ae8',
+        Vbar: '\u2aeb',
+        vBarv: '\u2ae9',
+        Vcy: '\u0412',
+        vcy: '\u0432',
+        vdash: '\u22a2',
+        vDash: '\u22a8',
+        Vdash: '\u22a9',
+        VDash: '\u22ab',
+        Vdashl: '\u2ae6',
+        veebar: '\u22bb',
+        vee: '\u2228',
+        Vee: '\u22c1',
+        veeeq: '\u225a',
+        vellip: '\u22ee',
+        verbar: '|',
+        Verbar: '\u2016',
+        vert: '|',
+        Vert: '\u2016',
+        VerticalBar: '\u2223',
+        VerticalLine: '|',
+        VerticalSeparator: '\u2758',
+        VerticalTilde: '\u2240',
+        VeryThinSpace: '\u200a',
+        Vfr: '\ud835\udd19',
+        vfr: '\ud835\udd33',
+        vltri: '\u22b2',
+        vnsub: '\u2282\u20d2',
+        vnsup: '\u2283\u20d2',
+        Vopf: '\ud835\udd4d',
+        vopf: '\ud835\udd67',
+        vprop: '\u221d',
+        vrtri: '\u22b3',
+        Vscr: '\ud835\udcb1',
+        vscr: '\ud835\udccb',
+        vsubnE: '\u2acb\ufe00',
+        vsubne: '\u228a\ufe00',
+        vsupnE: '\u2acc\ufe00',
+        vsupne: '\u228b\ufe00',
+        Vvdash: '\u22aa',
+        vzigzag: '\u299a',
+        Wcirc: '\u0174',
+        wcirc: '\u0175',
+        wedbar: '\u2a5f',
+        wedge: '\u2227',
+        Wedge: '\u22c0',
+        wedgeq: '\u2259',
+        weierp: '\u2118',
+        Wfr: '\ud835\udd1a',
+        wfr: '\ud835\udd34',
+        Wopf: '\ud835\udd4e',
+        wopf: '\ud835\udd68',
+        wp: '\u2118',
+        wr: '\u2240',
+        wreath: '\u2240',
+        Wscr: '\ud835\udcb2',
+        wscr: '\ud835\udccc',
+        xcap: '\u22c2',
+        xcirc: '\u25ef',
+        xcup: '\u22c3',
+        xdtri: '\u25bd',
+        Xfr: '\ud835\udd1b',
+        xfr: '\ud835\udd35',
+        xharr: '\u27f7',
+        xhArr: '\u27fa',
+        Xi: '\u039e',
+        xi: '\u03be',
+        xlarr: '\u27f5',
+        xlArr: '\u27f8',
+        xmap: '\u27fc',
+        xnis: '\u22fb',
+        xodot: '\u2a00',
+        Xopf: '\ud835\udd4f',
+        xopf: '\ud835\udd69',
+        xoplus: '\u2a01',
+        xotime: '\u2a02',
+        xrarr: '\u27f6',
+        xrArr: '\u27f9',
+        Xscr: '\ud835\udcb3',
+        xscr: '\ud835\udccd',
+        xsqcup: '\u2a06',
+        xuplus: '\u2a04',
+        xutri: '\u25b3',
+        xvee: '\u22c1',
+        xwedge: '\u22c0',
+        Yacute: '\xdd',
+        yacute: '\xfd',
+        YAcy: '\u042f',
+        yacy: '\u044f',
+        Ycirc: '\u0176',
+        ycirc: '\u0177',
+        Ycy: '\u042b',
+        ycy: '\u044b',
+        yen: '\xa5',
+        Yfr: '\ud835\udd1c',
+        yfr: '\ud835\udd36',
+        YIcy: '\u0407',
+        yicy: '\u0457',
+        Yopf: '\ud835\udd50',
+        yopf: '\ud835\udd6a',
+        Yscr: '\ud835\udcb4',
+        yscr: '\ud835\udcce',
+        YUcy: '\u042e',
+        yucy: '\u044e',
+        yuml: '\xff',
+        Yuml: '\u0178',
+        Zacute: '\u0179',
+        zacute: '\u017a',
+        Zcaron: '\u017d',
+        zcaron: '\u017e',
+        Zcy: '\u0417',
+        zcy: '\u0437',
+        Zdot: '\u017b',
+        zdot: '\u017c',
+        zeetrf: '\u2128',
+        ZeroWidthSpace: '\u200b',
+        Zeta: '\u0396',
+        zeta: '\u03b6',
+        zfr: '\ud835\udd37',
+        Zfr: '\u2128',
+        ZHcy: '\u0416',
+        zhcy: '\u0436',
+        zigrarr: '\u21dd',
+        zopf: '\ud835\udd6b',
+        Zopf: '\u2124',
+        Zscr: '\ud835\udcb5',
+        zscr: '\ud835\udccf',
+        zwj: '\u200d',
+        zwnj: '\u200c',
+    }
+    /*eslint quotes:0*/ var entities = require$$0
+    var regex$4 =
+        /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/
+    var encodeCache = {}
+    // Create a lookup array where anything but characters in `chars` string
+    // and alphanumeric chars is percent-encoded.
+
+    function getEncodeCache(exclude) {
+        var i,
+            ch,
+            cache = encodeCache[exclude]
+        if (cache) {
+            return cache
+        }
+        cache = encodeCache[exclude] = []
+        for (i = 0; i < 128; i++) {
+            ch = String.fromCharCode(i)
+            if (/^[0-9a-z]$/i.test(ch)) {
+                // always allow unencoded alphanumeric characters
+                cache.push(ch)
+            } else {
+                cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))
+            }
+        }
+        for (i = 0; i < exclude.length; i++) {
+            cache[exclude.charCodeAt(i)] = exclude[i]
+        }
+        return cache
+    }
+    // Encode unsafe characters with percent-encoding, skipping already
+    // encoded sequences.
+
+    //  - string       - string to encode
+    //  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)
+    //  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)
+
+    function encode$2(string, exclude, keepEscaped) {
+        var i,
+            l,
+            code,
+            nextCode,
+            cache,
+            result = ''
+        if (typeof exclude !== 'string') {
+            // encode(string, keepEscaped)
+            keepEscaped = exclude
+            exclude = encode$2.defaultChars
+        }
+        if (typeof keepEscaped === 'undefined') {
+            keepEscaped = true
+        }
+        cache = getEncodeCache(exclude)
+        for (i = 0, l = string.length; i < l; i++) {
+            code = string.charCodeAt(i)
+            if (keepEscaped && code === 37 /* % */ && i + 2 < l) {
+                if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {
+                    result += string.slice(i, i + 3)
+                    i += 2
+                    continue
+                }
+            }
+            if (code < 128) {
+                result += cache[code]
+                continue
+            }
+            if (code >= 55296 && code <= 57343) {
+                if (code >= 55296 && code <= 56319 && i + 1 < l) {
+                    nextCode = string.charCodeAt(i + 1)
+                    if (nextCode >= 56320 && nextCode <= 57343) {
+                        result += encodeURIComponent(string[i] + string[i + 1])
+                        i++
+                        continue
+                    }
+                }
+                result += '%EF%BF%BD'
+                continue
+            }
+            result += encodeURIComponent(string[i])
+        }
+        return result
+    }
+    encode$2.defaultChars = ";/?:@&=+$,-_.!~*'()#"
+    encode$2.componentChars = "-_.!~*'()"
+    var encode_1 = encode$2
+    /* eslint-disable no-bitwise */ var decodeCache = {}
+    function getDecodeCache(exclude) {
+        var i,
+            ch,
+            cache = decodeCache[exclude]
+        if (cache) {
+            return cache
+        }
+        cache = decodeCache[exclude] = []
+        for (i = 0; i < 128; i++) {
+            ch = String.fromCharCode(i)
+            cache.push(ch)
+        }
+        for (i = 0; i < exclude.length; i++) {
+            ch = exclude.charCodeAt(i)
+            cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)
+        }
+        return cache
+    }
+    // Decode percent-encoded string.
+
+    function decode$2(string, exclude) {
+        var cache
+        if (typeof exclude !== 'string') {
+            exclude = decode$2.defaultChars
+        }
+        cache = getDecodeCache(exclude)
+        return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {
+            var i,
+                l,
+                b1,
+                b2,
+                b3,
+                b4,
+                chr,
+                result = ''
+            for (i = 0, l = seq.length; i < l; i += 3) {
+                b1 = parseInt(seq.slice(i + 1, i + 3), 16)
+                if (b1 < 128) {
+                    result += cache[b1]
+                    continue
+                }
+                if ((b1 & 224) === 192 && i + 3 < l) {
+                    // 110xxxxx 10xxxxxx
+                    b2 = parseInt(seq.slice(i + 4, i + 6), 16)
+                    if ((b2 & 192) === 128) {
+                        chr = ((b1 << 6) & 1984) | (b2 & 63)
+                        if (chr < 128) {
+                            result += '\ufffd\ufffd'
+                        } else {
+                            result += String.fromCharCode(chr)
+                        }
+                        i += 3
+                        continue
+                    }
+                }
+                if ((b1 & 240) === 224 && i + 6 < l) {
+                    // 1110xxxx 10xxxxxx 10xxxxxx
+                    b2 = parseInt(seq.slice(i + 4, i + 6), 16)
+                    b3 = parseInt(seq.slice(i + 7, i + 9), 16)
+                    if ((b2 & 192) === 128 && (b3 & 192) === 128) {
+                        chr = ((b1 << 12) & 61440) | ((b2 << 6) & 4032) | (b3 & 63)
+                        if (chr < 2048 || (chr >= 55296 && chr <= 57343)) {
+                            result += '\ufffd\ufffd\ufffd'
+                        } else {
+                            result += String.fromCharCode(chr)
+                        }
+                        i += 6
+                        continue
+                    }
+                }
+                if ((b1 & 248) === 240 && i + 9 < l) {
+                    // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx
+                    b2 = parseInt(seq.slice(i + 4, i + 6), 16)
+                    b3 = parseInt(seq.slice(i + 7, i + 9), 16)
+                    b4 = parseInt(seq.slice(i + 10, i + 12), 16)
+                    if ((b2 & 192) === 128 && (b3 & 192) === 128 && (b4 & 192) === 128) {
+                        chr = ((b1 << 18) & 1835008) | ((b2 << 12) & 258048) | ((b3 << 6) & 4032) | (b4 & 63)
+                        if (chr < 65536 || chr > 1114111) {
+                            result += '\ufffd\ufffd\ufffd\ufffd'
+                        } else {
+                            chr -= 65536
+                            result += String.fromCharCode(55296 + (chr >> 10), 56320 + (chr & 1023))
+                        }
+                        i += 9
+                        continue
+                    }
+                }
+                result += '\ufffd'
+            }
+            return result
+        })
+    }
+    decode$2.defaultChars = ';/?:@&=+$,#'
+    decode$2.componentChars = ''
+    var decode_1 = decode$2
+    var format$1 = function format(url) {
+        var result = ''
+        result += url.protocol || ''
+        result += url.slashes ? '//' : ''
+        result += url.auth ? url.auth + '@' : ''
+        if (url.hostname && url.hostname.indexOf(':') !== -1) {
+            // ipv6 address
+            result += '[' + url.hostname + ']'
+        } else {
+            result += url.hostname || ''
+        }
+        result += url.port ? ':' + url.port : ''
+        result += url.pathname || ''
+        result += url.search || ''
+        result += url.hash || ''
+        return result
+    }
+    // Copyright Joyent, Inc. and other Node contributors.
+
+    // Changes from joyent/node:
+
+    // 1. No leading slash in paths,
+    //    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`
+
+    // 2. Backslashes are not replaced with slashes,
+    //    so `http:\\example.org\` is treated like a relative path
+
+    // 3. Trailing colon is treated like a part of the path,
+    //    i.e. in `http://example.org:foo` pathname is `:foo`
+
+    // 4. Nothing is URL-encoded in the resulting object,
+    //    (in joyent/node some chars in auth and paths are encoded)
+
+    // 5. `url.parse()` does not have `parseQueryString` argument
+
+    // 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,
+    //    which can be constructed using other parts of the url.
+
+    function Url() {
+        this.protocol = null
+        this.slashes = null
+        this.auth = null
+        this.port = null
+        this.hostname = null
+        this.hash = null
+        this.search = null
+        this.pathname = null
+    }
+    // Reference: RFC 3986, RFC 1808, RFC 2396
+    // define these here so at least they only have to be
+    // compiled once on the first module load.
+    var protocolPattern = /^([a-z0-9.+-]+:)/i,
+        portPattern = /:[0-9]*$/,
+        // Special case for a simple path URL
+        simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
+        // RFC 2396: characters reserved for delimiting URLs.
+        // We actually just auto-escape these.
+        delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],
+        // RFC 2396: characters not allowed for various reasons.
+        unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),
+        // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
+        autoEscape = ["'"].concat(unwise),
+        // Characters that are never ever allowed in a hostname.
+        // Note that any invalid chars are also handled, but these
+        // are the ones that are *expected* to be seen, so we fast-path
+        // them.
+        nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
+        hostEndingChars = ['/', '?', '#'],
+        hostnameMaxLen = 255,
+        hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
+        hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
+        // protocols that can allow "unsafe" and "unwise" chars.
+        /* eslint-disable no-script-url */
+        // protocols that never have a hostname.
+        hostlessProtocol = {
+            javascript: true,
+            'javascript:': true,
+        },
+        // protocols that always contain a // bit.
+        slashedProtocol = {
+            http: true,
+            https: true,
+            ftp: true,
+            gopher: true,
+            file: true,
+            'http:': true,
+            'https:': true,
+            'ftp:': true,
+            'gopher:': true,
+            'file:': true,
+        }
+    /* eslint-enable no-script-url */ function urlParse(url, slashesDenoteHost) {
+        if (url && url instanceof Url) {
+            return url
+        }
+        var u = new Url()
+        u.parse(url, slashesDenoteHost)
+        return u
+    }
+    Url.prototype.parse = function (url, slashesDenoteHost) {
+        var i,
+            l,
+            lowerProto,
+            hec,
+            slashes,
+            rest = url
+        // trim before proceeding.
+        // This is to support parse stuff like "  http://foo.com  \n"
+        rest = rest.trim()
+        if (!slashesDenoteHost && url.split('#').length === 1) {
+            // Try fast path regexp
+            var simplePath = simplePathPattern.exec(rest)
+            if (simplePath) {
+                this.pathname = simplePath[1]
+                if (simplePath[2]) {
+                    this.search = simplePath[2]
+                }
+                return this
+            }
+        }
+        var proto = protocolPattern.exec(rest)
+        if (proto) {
+            proto = proto[0]
+            lowerProto = proto.toLowerCase()
+            this.protocol = proto
+            rest = rest.substr(proto.length)
+        }
+        // figure out if it's got a host
+        // user@server is *always* interpreted as a hostname, and url
+        // resolution will treat //foo/bar as host=foo,path=bar because that's
+        // how the browser resolves relative URLs.
+        if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
+            slashes = rest.substr(0, 2) === '//'
+            if (slashes && !(proto && hostlessProtocol[proto])) {
+                rest = rest.substr(2)
+                this.slashes = true
+            }
+        }
+        if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {
+            // there's a hostname.
+            // the first instance of /, ?, ;, or # ends the host.
+            // If there is an @ in the hostname, then non-host chars *are* allowed
+            // to the left of the last @ sign, unless some host-ending character
+            // comes *before* the @-sign.
+            // URLs are obnoxious.
+            // ex:
+            // http://a@b@c/ => user:a@b host:c
+            // http://a@b?@c => user:a host:c path:/?@c
+            // v0.12 TODO(isaacs): This is not quite how Chrome does things.
+            // Review our test case against browsers more comprehensively.
+            // find the first instance of any hostEndingChars
+            var hostEnd = -1
+            for (i = 0; i < hostEndingChars.length; i++) {
+                hec = rest.indexOf(hostEndingChars[i])
+                if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {
+                    hostEnd = hec
+                }
+            }
+            // at this point, either we have an explicit point where the
+            // auth portion cannot go past, or the last @ char is the decider.
+            var auth, atSign
+            if (hostEnd === -1) {
+                // atSign can be anywhere.
+                atSign = rest.lastIndexOf('@')
+            } else {
+                // atSign must be in auth portion.
+                // http://a@b/c@d => host:b auth:a path:/c@d
+                atSign = rest.lastIndexOf('@', hostEnd)
+            }
+            // Now we have a portion which is definitely the auth.
+            // Pull that off.
+            if (atSign !== -1) {
+                auth = rest.slice(0, atSign)
+                rest = rest.slice(atSign + 1)
+                this.auth = auth
+            }
+            // the host is the remaining to the left of the first non-host char
+            hostEnd = -1
+            for (i = 0; i < nonHostChars.length; i++) {
+                hec = rest.indexOf(nonHostChars[i])
+                if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {
+                    hostEnd = hec
+                }
+            }
+            // if we still have not hit it, then the entire thing is a host.
+            if (hostEnd === -1) {
+                hostEnd = rest.length
+            }
+            if (rest[hostEnd - 1] === ':') {
+                hostEnd--
+            }
+            var host = rest.slice(0, hostEnd)
+            rest = rest.slice(hostEnd)
+            // pull out port.
+            this.parseHost(host)
+            // we've indicated that there is a hostname,
+            // so even if it's empty, it has to be present.
+            this.hostname = this.hostname || ''
+            // if hostname begins with [ and ends with ]
+            // assume that it's an IPv6 address.
+            var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'
+            // validate a little.
+            if (!ipv6Hostname) {
+                var hostparts = this.hostname.split(/\./)
+                for (i = 0, l = hostparts.length; i < l; i++) {
+                    var part = hostparts[i]
+                    if (!part) {
+                        continue
+                    }
+                    if (!part.match(hostnamePartPattern)) {
+                        var newpart = ''
+                        for (var j = 0, k = part.length; j < k; j++) {
+                            if (part.charCodeAt(j) > 127) {
+                                // we replace non-ASCII char with a temporary placeholder
+                                // we need this to make sure size of hostname is not
+                                // broken by replacing non-ASCII by nothing
+                                newpart += 'x'
+                            } else {
+                                newpart += part[j]
+                            }
+                        }
+                        // we test again with ASCII char only
+                        if (!newpart.match(hostnamePartPattern)) {
+                            var validParts = hostparts.slice(0, i)
+                            var notHost = hostparts.slice(i + 1)
+                            var bit = part.match(hostnamePartStart)
+                            if (bit) {
+                                validParts.push(bit[1])
+                                notHost.unshift(bit[2])
+                            }
+                            if (notHost.length) {
+                                rest = notHost.join('.') + rest
+                            }
+                            this.hostname = validParts.join('.')
+                            break
+                        }
+                    }
+                }
+            }
+            if (this.hostname.length > hostnameMaxLen) {
+                this.hostname = ''
+            }
+            // strip [ and ] from the hostname
+            // the host field still retains them, though
+            if (ipv6Hostname) {
+                this.hostname = this.hostname.substr(1, this.hostname.length - 2)
+            }
+        }
+        // chop off from the tail first.
+        var hash = rest.indexOf('#')
+        if (hash !== -1) {
+            // got a fragment string.
+            this.hash = rest.substr(hash)
+            rest = rest.slice(0, hash)
+        }
+        var qm = rest.indexOf('?')
+        if (qm !== -1) {
+            this.search = rest.substr(qm)
+            rest = rest.slice(0, qm)
+        }
+        if (rest) {
+            this.pathname = rest
+        }
+        if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
+            this.pathname = ''
+        }
+        return this
+    }
+    Url.prototype.parseHost = function (host) {
+        var port = portPattern.exec(host)
+        if (port) {
+            port = port[0]
+            if (port !== ':') {
+                this.port = port.substr(1)
+            }
+            host = host.substr(0, host.length - port.length)
+        }
+        if (host) {
+            this.hostname = host
+        }
+    }
+    var parse$1 = urlParse
+    var encode$1 = encode_1
+    var decode$1 = decode_1
+    var format = format$1
+    var parse = parse$1
+    var mdurl = {
+        encode: encode$1,
+        decode: decode$1,
+        format: format,
+        parse: parse,
+    }
+    var regex$3 =
+        /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/
+    var regex$2 = /[\0-\x1F\x7F-\x9F]/
+    var regex$1 =
+        /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/
+    var regex = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/
+    var Any = regex$3
+    var Cc = regex$2
+    var Cf = regex$1
+    var P = regex$4
+    var Z = regex
+    var uc_micro = {
+        Any: Any,
+        Cc: Cc,
+        Cf: Cf,
+        P: P,
+        Z: Z,
+    }
+    var utils = createCommonjsModule(function (module, exports) {
+        function _class(obj) {
+            return Object.prototype.toString.call(obj)
+        }
+        function isString(obj) {
+            return _class(obj) === '[object String]'
+        }
+        var _hasOwnProperty = Object.prototype.hasOwnProperty
+        function has(object, key) {
+            return _hasOwnProperty.call(object, key)
+        }
+        // Merge objects
+
+        function assign(obj /*from1, from2, from3, ...*/) {
+            var sources = Array.prototype.slice.call(arguments, 1)
+            sources.forEach(function (source) {
+                if (!source) {
+                    return
+                }
+                if (typeof source !== 'object') {
+                    throw new TypeError(source + 'must be object')
+                }
+                Object.keys(source).forEach(function (key) {
+                    obj[key] = source[key]
+                })
+            })
+            return obj
+        }
+        // Remove element from array and put another array at those position.
+        // Useful for some operations with tokens
+        function arrayReplaceAt(src, pos, newElements) {
+            return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))
+        }
+        ////////////////////////////////////////////////////////////////////////////////
+        function isValidEntityCode(c) {
+            /*eslint no-bitwise:0*/
+            // broken sequence
+            if (c >= 55296 && c <= 57343) {
+                return false
+            }
+            // never used
+            if (c >= 64976 && c <= 65007) {
+                return false
+            }
+            if ((c & 65535) === 65535 || (c & 65535) === 65534) {
+                return false
+            }
+            // control codes
+            if (c >= 0 && c <= 8) {
+                return false
+            }
+            if (c === 11) {
+                return false
+            }
+            if (c >= 14 && c <= 31) {
+                return false
+            }
+            if (c >= 127 && c <= 159) {
+                return false
+            }
+            // out of range
+            if (c > 1114111) {
+                return false
+            }
+            return true
+        }
+        function fromCodePoint(c) {
+            /*eslint no-bitwise:0*/
+            if (c > 65535) {
+                c -= 65536
+                var surrogate1 = 55296 + (c >> 10),
+                    surrogate2 = 56320 + (c & 1023)
+                return String.fromCharCode(surrogate1, surrogate2)
+            }
+            return String.fromCharCode(c)
+        }
+        var UNESCAPE_MD_RE = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g
+        var ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi
+        var UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')
+        var DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i
+        function replaceEntityPattern(match, name) {
+            var code = 0
+            if (has(entities, name)) {
+                return entities[name]
+            }
+            if (name.charCodeAt(0) === 35 /* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {
+                code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10)
+                if (isValidEntityCode(code)) {
+                    return fromCodePoint(code)
+                }
+            }
+            return match
+        }
+        /*function replaceEntities(str) {
+        if (str.indexOf('&') < 0) { return str; }
+  
+        return str.replace(ENTITY_RE, replaceEntityPattern);
+      }*/ function unescapeMd(str) {
+            if (str.indexOf('\\') < 0) {
+                return str
+            }
+            return str.replace(UNESCAPE_MD_RE, '$1')
+        }
+        function unescapeAll(str) {
+            if (str.indexOf('\\') < 0 && str.indexOf('&') < 0) {
+                return str
+            }
+            return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {
+                if (escaped) {
+                    return escaped
+                }
+                return replaceEntityPattern(match, entity)
+            })
+        }
+        ////////////////////////////////////////////////////////////////////////////////
+        var HTML_ESCAPE_TEST_RE = /[&<>"]/
+        var HTML_ESCAPE_REPLACE_RE = /[&<>"]/g
+        var HTML_REPLACEMENTS = {
+            '&': '&amp;',
+            '<': '&lt;',
+            '>': '&gt;',
+            '"': '&quot;',
+        }
+        function replaceUnsafeChar(ch) {
+            return HTML_REPLACEMENTS[ch]
+        }
+        function escapeHtml(str) {
+            if (HTML_ESCAPE_TEST_RE.test(str)) {
+                return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)
+            }
+            return str
+        }
+        ////////////////////////////////////////////////////////////////////////////////
+        var REGEXP_ESCAPE_RE = /[.?*+^$[\]\\(){}|-]/g
+        function escapeRE(str) {
+            return str.replace(REGEXP_ESCAPE_RE, '\\$&')
+        }
+        ////////////////////////////////////////////////////////////////////////////////
+        function isSpace(code) {
+            switch (code) {
+                case 9:
+                case 32:
+                    return true
+            }
+            return false
+        }
+        // Zs (unicode class) || [\t\f\v\r\n]
+        function isWhiteSpace(code) {
+            if (code >= 8192 && code <= 8202) {
+                return true
+            }
+            switch (code) {
+                case 9:
+                // \t
+                case 10:
+                // \n
+                case 11:
+                // \v
+                case 12:
+                // \f
+                case 13:
+                // \r
+                case 32:
+                case 160:
+                case 5760:
+                case 8239:
+                case 8287:
+                case 12288:
+                    return true
+            }
+            return false
+        }
+        ////////////////////////////////////////////////////////////////////////////////
+        /*eslint-disable max-len*/
+        // Currently without astral characters support.
+        function isPunctChar(ch) {
+            return regex$4.test(ch)
+        }
+        // Markdown ASCII punctuation characters.
+
+        // !, ", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \, ], ^, _, `, {, |, }, or ~
+        // http://spec.commonmark.org/0.15/#ascii-punctuation-character
+
+        // Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.
+
+        function isMdAsciiPunct(ch) {
+            switch (ch) {
+                case 33 /* ! */:
+                case 34 /* " */:
+                case 35 /* # */:
+                case 36 /* $ */:
+                case 37 /* % */:
+                case 38 /* & */:
+                case 39 /* ' */:
+                case 40 /* ( */:
+                case 41 /* ) */:
+                case 42 /* * */:
+                case 43 /* + */:
+                case 44 /* , */:
+                case 45 /* - */:
+                case 46 /* . */:
+                case 47 /* / */:
+                case 58 /* : */:
+                case 59 /* ; */:
+                case 60 /* < */:
+                case 61 /* = */:
+                case 62 /* > */:
+                case 63 /* ? */:
+                case 64 /* @ */:
+                case 91 /* [ */:
+                case 92 /* \ */:
+                case 93 /* ] */:
+                case 94 /* ^ */:
+                case 95 /* _ */:
+                case 96 /* ` */:
+                case 123 /* { */:
+                case 124 /* | */:
+                case 125 /* } */:
+                case 126 /* ~ */:
+                    return true
+
+                default:
+                    return false
+            }
+        }
+        // Hepler to unify [reference labels].
+
+        function normalizeReference(str) {
+            // Trim and collapse whitespace
+            str = str.trim().replace(/\s+/g, ' ')
+            // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug
+            // fixed in v12 (couldn't find any details).
+
+            // So treat this one as a special case
+            // (remove this when node v10 is no longer supported).
+
+            if ('\u1e9e'.toLowerCase() === '\u1e7e') {
+                str = str.replace(/\u1e9e/g, '\xdf')
+            }
+            // .toLowerCase().toUpperCase() should get rid of all differences
+            // between letter variants.
+
+            // Simple .toLowerCase() doesn't normalize 125 code points correctly,
+            // and .toUpperCase doesn't normalize 6 of them (list of exceptions:
+            // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently
+            // uppercased versions).
+
+            // Here's an example showing how it happens. Lets take greek letter omega:
+            // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)
+
+            // Unicode entries:
+            // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;
+            // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398
+            // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398
+            // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;
+
+            // Case-insensitive comparison should treat all of them as equivalent.
+
+            // But .toLowerCase() doesn't change ϑ (it's already lowercase),
+            // and .toUpperCase() doesn't change ϴ (already uppercase).
+
+            // Applying first lower then upper case normalizes any character:
+            // '\u0398\u03f4\u03b8\u03d1'.toLowerCase().toUpperCase() === '\u0398\u0398\u0398\u0398'
+
+            // Note: this is equivalent to unicode case folding; unicode normalization
+            // is a different step that is not required here.
+
+            // Final result should be uppercased, because it's later stored in an object
+            // (this avoid a conflict with Object.prototype members,
+            // most notably, `__proto__`)
+
+            return str.toLowerCase().toUpperCase()
+        }
+        ////////////////////////////////////////////////////////////////////////////////
+        // Re-export libraries commonly used in both markdown-it and its plugins,
+        // so plugins won't have to depend on them explicitly, which reduces their
+        // bundled size (e.g. a browser build).
+
+        exports.lib = {}
+        exports.lib.mdurl = mdurl
+        exports.lib.ucmicro = uc_micro
+        exports.assign = assign
+        exports.isString = isString
+        exports.has = has
+        exports.unescapeMd = unescapeMd
+        exports.unescapeAll = unescapeAll
+        exports.isValidEntityCode = isValidEntityCode
+        exports.fromCodePoint = fromCodePoint
+        // exports.replaceEntities     = replaceEntities;
+        exports.escapeHtml = escapeHtml
+        exports.arrayReplaceAt = arrayReplaceAt
+        exports.isSpace = isSpace
+        exports.isWhiteSpace = isWhiteSpace
+        exports.isMdAsciiPunct = isMdAsciiPunct
+        exports.isPunctChar = isPunctChar
+        exports.escapeRE = escapeRE
+        exports.normalizeReference = normalizeReference
+    })
+    // Parse link label
+    var parse_link_label = function parseLinkLabel(state, start, disableNested) {
+        var level,
+            found,
+            marker,
+            prevPos,
+            labelEnd = -1,
+            max = state.posMax,
+            oldPos = state.pos
+        state.pos = start + 1
+        level = 1
+        while (state.pos < max) {
+            marker = state.src.charCodeAt(state.pos)
+            if (marker === 93 /* ] */) {
+                level--
+                if (level === 0) {
+                    found = true
+                    break
+                }
+            }
+            prevPos = state.pos
+            state.md.inline.skipToken(state)
+            if (marker === 91 /* [ */) {
+                if (prevPos === state.pos - 1) {
+                    // increase level if we find text `[`, which is not a part of any token
+                    level++
+                } else if (disableNested) {
+                    state.pos = oldPos
+                    return -1
+                }
+            }
+        }
+        if (found) {
+            labelEnd = state.pos
+        }
+        // restore old state
+        state.pos = oldPos
+        return labelEnd
+    }
+    var unescapeAll$2 = utils.unescapeAll
+    var parse_link_destination = function parseLinkDestination(str, pos, max) {
+        var code,
+            level,
+            lines = 0,
+            start = pos,
+            result = {
+                ok: false,
+                pos: 0,
+                lines: 0,
+                str: '',
+            }
+        if (str.charCodeAt(pos) === 60 /* < */) {
+            pos++
+            while (pos < max) {
+                code = str.charCodeAt(pos)
+                if (code === 10 /* \n */) {
+                    return result
+                }
+                if (code === 60 /* < */) {
+                    return result
+                }
+                if (code === 62 /* > */) {
+                    result.pos = pos + 1
+                    result.str = unescapeAll$2(str.slice(start + 1, pos))
+                    result.ok = true
+                    return result
+                }
+                if (code === 92 /* \ */ && pos + 1 < max) {
+                    pos += 2
+                    continue
+                }
+                pos++
+            }
+            // no closing '>'
+            return result
+        }
+        // this should be ... } else { ... branch
+        level = 0
+        while (pos < max) {
+            code = str.charCodeAt(pos)
+            if (code === 32) {
+                break
+            }
+            // ascii control characters
+            if (code < 32 || code === 127) {
+                break
+            }
+            if (code === 92 /* \ */ && pos + 1 < max) {
+                if (str.charCodeAt(pos + 1) === 32) {
+                    break
+                }
+                pos += 2
+                continue
+            }
+            if (code === 40 /* ( */) {
+                level++
+                if (level > 32) {
+                    return result
+                }
+            }
+            if (code === 41 /* ) */) {
+                if (level === 0) {
+                    break
+                }
+                level--
+            }
+            pos++
+        }
+        if (start === pos) {
+            return result
+        }
+        if (level !== 0) {
+            return result
+        }
+        result.str = unescapeAll$2(str.slice(start, pos))
+        result.lines = lines
+        result.pos = pos
+        result.ok = true
+        return result
+    }
+    var unescapeAll$1 = utils.unescapeAll
+    var parse_link_title = function parseLinkTitle(str, pos, max) {
+        var code,
+            marker,
+            lines = 0,
+            start = pos,
+            result = {
+                ok: false,
+                pos: 0,
+                lines: 0,
+                str: '',
+            }
+        if (pos >= max) {
+            return result
+        }
+        marker = str.charCodeAt(pos)
+        if (marker !== 34 /* " */ && marker !== 39 /* ' */ && marker !== 40 /* ( */) {
+            return result
+        }
+        pos++
+        // if opening marker is "(", switch it to closing marker ")"
+        if (marker === 40) {
+            marker = 41
+        }
+        while (pos < max) {
+            code = str.charCodeAt(pos)
+            if (code === marker) {
+                result.pos = pos + 1
+                result.lines = lines
+                result.str = unescapeAll$1(str.slice(start + 1, pos))
+                result.ok = true
+                return result
+            } else if (code === 40 /* ( */ && marker === 41 /* ) */) {
+                return result
+            } else if (code === 10) {
+                lines++
+            } else if (code === 92 /* \ */ && pos + 1 < max) {
+                pos++
+                if (str.charCodeAt(pos) === 10) {
+                    lines++
+                }
+            }
+            pos++
+        }
+        return result
+    }
+    var parseLinkLabel = parse_link_label
+    var parseLinkDestination = parse_link_destination
+    var parseLinkTitle = parse_link_title
+    var helpers = {
+        parseLinkLabel: parseLinkLabel,
+        parseLinkDestination: parseLinkDestination,
+        parseLinkTitle: parseLinkTitle,
+    }
+    var assign$1 = utils.assign
+    var unescapeAll = utils.unescapeAll
+    var escapeHtml = utils.escapeHtml
+    ////////////////////////////////////////////////////////////////////////////////
+    var default_rules = {}
+    default_rules.code_inline = function (tokens, idx, options, env, slf) {
+        var token = tokens[idx]
+        return '<code' + slf.renderAttrs(token) + '>' + escapeHtml(tokens[idx].content) + '</code>'
+    }
+    default_rules.code_block = function (tokens, idx, options, env, slf) {
+        var token = tokens[idx]
+        return '<pre' + slf.renderAttrs(token) + '><code>' + escapeHtml(tokens[idx].content) + '</code></pre>\n'
+    }
+    default_rules.fence = function (tokens, idx, options, env, slf) {
+        var token = tokens[idx],
+            info = token.info ? unescapeAll(token.info).trim() : '',
+            langName = '',
+            langAttrs = '',
+            highlighted,
+            i,
+            arr,
+            tmpAttrs,
+            tmpToken
+        if (info) {
+            arr = info.split(/(\s+)/g)
+            langName = arr[0]
+            langAttrs = arr.slice(2).join('')
+        }
+        if (options.highlight) {
+            highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)
+        } else {
+            highlighted = escapeHtml(token.content)
+        }
+        if (highlighted.indexOf('<pre') === 0) {
+            return highlighted + '\n'
+        }
+        // If language exists, inject class gently, without modifying original token.
+        // May be, one day we will add .deepClone() for token and simplify this part, but
+        // now we prefer to keep things local.
+        if (info) {
+            i = token.attrIndex('class')
+            tmpAttrs = token.attrs ? token.attrs.slice() : []
+            if (i < 0) {
+                tmpAttrs.push(['class', options.langPrefix + langName])
+            } else {
+                tmpAttrs[i] = tmpAttrs[i].slice()
+                tmpAttrs[i][1] += ' ' + options.langPrefix + langName
+            }
+            // Fake token just to render attributes
+            tmpToken = {
+                attrs: tmpAttrs,
+            }
+            return '<pre><code' + slf.renderAttrs(tmpToken) + '>' + highlighted + '</code></pre>\n'
+        }
+        return '<pre><code' + slf.renderAttrs(token) + '>' + highlighted + '</code></pre>\n'
+    }
+    default_rules.image = function (tokens, idx, options, env, slf) {
+        var token = tokens[idx]
+        // "alt" attr MUST be set, even if empty. Because it's mandatory and
+        // should be placed on proper position for tests.
+
+        // Replace content with actual value
+        token.attrs[token.attrIndex('alt')][1] = slf.renderInlineAsText(token.children, options, env)
+        return slf.renderToken(tokens, idx, options)
+    }
+    default_rules.hardbreak = function (tokens, idx, options /*, env */) {
+        return options.xhtmlOut ? '<br />\n' : '<br>\n'
+    }
+    default_rules.softbreak = function (tokens, idx, options /*, env */) {
+        return options.breaks ? (options.xhtmlOut ? '<br />\n' : '<br>\n') : '\n'
+    }
+    default_rules.text = function (tokens, idx /*, options, env */) {
+        return escapeHtml(tokens[idx].content)
+    }
+    default_rules.html_block = function (tokens, idx /*, options, env */) {
+        return tokens[idx].content
+    }
+    default_rules.html_inline = function (tokens, idx /*, options, env */) {
+        return tokens[idx].content
+    }
+    /**
+     * new Renderer()
+     *
+     * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.
+     **/ function Renderer() {
+        /**
+         * Renderer#rules -> Object
+         *
+         * Contains render rules for tokens. Can be updated and extended.
+         *
+         * ##### Example
+         *
+         * ```javascript
+         * var md = require('markdown-it')();
+         *
+         * md.renderer.rules.strong_open  = function () { return '<b>'; };
+         * md.renderer.rules.strong_close = function () { return '</b>'; };
+         *
+         * var result = md.renderInline(...);
+         * ```
+         *
+         * Each rule is called as independent static function with fixed signature:
+         *
+         * ```javascript
+         * function my_token_render(tokens, idx, options, env, renderer) {
+         *   // ...
+         *   return renderedHTML;
+         * }
+         * ```
+         *
+         * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)
+         * for more details and examples.
+         **/
+        this.rules = assign$1({}, default_rules)
+    }
+    /**
+     * Renderer.renderAttrs(token) -> String
+     *
+     * Render token attributes to string.
+     **/ Renderer.prototype.renderAttrs = function renderAttrs(token) {
+        var i, l, result
+        if (!token.attrs) {
+            return ''
+        }
+        result = ''
+        for (i = 0, l = token.attrs.length; i < l; i++) {
+            result += ' ' + escapeHtml(token.attrs[i][0]) + '="' + escapeHtml(token.attrs[i][1]) + '"'
+        }
+        return result
+    }
+    /**
+     * Renderer.renderToken(tokens, idx, options) -> String
+     * - tokens (Array): list of tokens
+     * - idx (Numbed): token index to render
+     * - options (Object): params of parser instance
+     *
+     * Default token renderer. Can be overriden by custom function
+     * in [[Renderer#rules]].
+     **/ Renderer.prototype.renderToken = function renderToken(tokens, idx, options) {
+        var nextToken,
+            result = '',
+            needLf = false,
+            token = tokens[idx]
+        // Tight list paragraphs
+        if (token.hidden) {
+            return ''
+        }
+        // Insert a newline between hidden paragraph and subsequent opening
+        // block-level tag.
+
+        // For example, here we should insert a newline before blockquote:
+        //  - a
+        //    >
+
+        if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {
+            result += '\n'
+        }
+        // Add token name, e.g. `<img`
+        result += (token.nesting === -1 ? '</' : '<') + token.tag
+        // Encode attributes, e.g. `<img src="foo"`
+        result += this.renderAttrs(token)
+        // Add a slash for self-closing tags, e.g. `<img src="foo" /`
+        if (token.nesting === 0 && options.xhtmlOut) {
+            result += ' /'
+        }
+        // Check if we need to add a newline after this tag
+        if (token.block) {
+            needLf = true
+            if (token.nesting === 1) {
+                if (idx + 1 < tokens.length) {
+                    nextToken = tokens[idx + 1]
+                    if (nextToken.type === 'inline' || nextToken.hidden) {
+                        // Block-level tag containing an inline tag.
+                        needLf = false
+                    } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {
+                        // Opening tag + closing tag of the same type. E.g. `<li></li>`.
+                        needLf = false
+                    }
+                }
+            }
+        }
+        result += needLf ? '>\n' : '>'
+        return result
+    }
+    /**
+     * Renderer.renderInline(tokens, options, env) -> String
+     * - tokens (Array): list on block tokens to renter
+     * - options (Object): params of parser instance
+     * - env (Object): additional data from parsed input (references, for example)
+     *
+     * The same as [[Renderer.render]], but for single token of `inline` type.
+     **/ Renderer.prototype.renderInline = function (tokens, options, env) {
+        var type,
+            result = '',
+            rules = this.rules
+        for (var i = 0, len = tokens.length; i < len; i++) {
+            type = tokens[i].type
+            if (typeof rules[type] !== 'undefined') {
+                result += rules[type](tokens, i, options, env, this)
+            } else {
+                result += this.renderToken(tokens, i, options)
+            }
+        }
+        return result
+    }
+    /** internal
+     * Renderer.renderInlineAsText(tokens, options, env) -> String
+     * - tokens (Array): list on block tokens to renter
+     * - options (Object): params of parser instance
+     * - env (Object): additional data from parsed input (references, for example)
+     *
+     * Special kludge for image `alt` attributes to conform CommonMark spec.
+     * Don't try to use it! Spec requires to show `alt` content with stripped markup,
+     * instead of simple escaping.
+     **/ Renderer.prototype.renderInlineAsText = function (tokens, options, env) {
+        var result = ''
+        for (var i = 0, len = tokens.length; i < len; i++) {
+            if (tokens[i].type === 'text') {
+                result += tokens[i].content
+            } else if (tokens[i].type === 'image') {
+                result += this.renderInlineAsText(tokens[i].children, options, env)
+            } else if (tokens[i].type === 'softbreak') {
+                result += '\n'
+            }
+        }
+        return result
+    }
+    /**
+     * Renderer.render(tokens, options, env) -> String
+     * - tokens (Array): list on block tokens to renter
+     * - options (Object): params of parser instance
+     * - env (Object): additional data from parsed input (references, for example)
+     *
+     * Takes token stream and generates HTML. Probably, you will never need to call
+     * this method directly.
+     **/ Renderer.prototype.render = function (tokens, options, env) {
+        var i,
+            len,
+            type,
+            result = '',
+            rules = this.rules
+        for (i = 0, len = tokens.length; i < len; i++) {
+            type = tokens[i].type
+            if (type === 'inline') {
+                result += this.renderInline(tokens[i].children, options, env)
+            } else if (typeof rules[type] !== 'undefined') {
+                result += rules[tokens[i].type](tokens, i, options, env, this)
+            } else {
+                result += this.renderToken(tokens, i, options, env)
+            }
+        }
+        return result
+    }
+    var renderer = Renderer
+    /**
+     * class Ruler
+     *
+     * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and
+     * [[MarkdownIt#inline]] to manage sequences of functions (rules):
+     *
+     * - keep rules in defined order
+     * - assign the name to each rule
+     * - enable/disable rules
+     * - add/replace rules
+     * - allow assign rules to additional named chains (in the same)
+     * - cacheing lists of active rules
+     *
+     * You will not need use this class directly until write plugins. For simple
+     * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and
+     * [[MarkdownIt.use]].
+     **/
+    /**
+     * new Ruler()
+     **/ function Ruler() {
+        // List of added rules. Each element is:
+        // {
+        //   name: XXX,
+        //   enabled: Boolean,
+        //   fn: Function(),
+        //   alt: [ name2, name3 ]
+        // }
+        this.__rules__ = []
+        // Cached rule chains.
+
+        // First level - chain name, '' for default.
+        // Second level - diginal anchor for fast filtering by charcodes.
+
+        this.__cache__ = null
+    }
+    ////////////////////////////////////////////////////////////////////////////////
+    // Helper methods, should not be used directly
+    // Find rule index by name
+
+    Ruler.prototype.__find__ = function (name) {
+        for (var i = 0; i < this.__rules__.length; i++) {
+            if (this.__rules__[i].name === name) {
+                return i
+            }
+        }
+        return -1
+    }
+    // Build rules lookup cache
+
+    Ruler.prototype.__compile__ = function () {
+        var self = this
+        var chains = ['']
+        // collect unique names
+        self.__rules__.forEach(function (rule) {
+            if (!rule.enabled) {
+                return
+            }
+            rule.alt.forEach(function (altName) {
+                if (chains.indexOf(altName) < 0) {
+                    chains.push(altName)
+                }
+            })
+        })
+        self.__cache__ = {}
+        chains.forEach(function (chain) {
+            self.__cache__[chain] = []
+            self.__rules__.forEach(function (rule) {
+                if (!rule.enabled) {
+                    return
+                }
+                if (chain && rule.alt.indexOf(chain) < 0) {
+                    return
+                }
+                self.__cache__[chain].push(rule.fn)
+            })
+        })
+    }
+    /**
+     * Ruler.at(name, fn [, options])
+     * - name (String): rule name to replace.
+     * - fn (Function): new rule function.
+     * - options (Object): new rule options (not mandatory).
+     *
+     * Replace rule by name with new function & options. Throws error if name not
+     * found.
+     *
+     * ##### Options:
+     *
+     * - __alt__ - array with names of "alternate" chains.
+     *
+     * ##### Example
+     *
+     * Replace existing typographer replacement rule with new one:
+     *
+     * ```javascript
+     * var md = require('markdown-it')();
+     *
+     * md.core.ruler.at('replacements', function replace(state) {
+     *   //...
+     * });
+     * ```
+     **/ Ruler.prototype.at = function (name, fn, options) {
+        var index = this.__find__(name)
+        var opt = options || {}
+        if (index === -1) {
+            throw new Error('Parser rule not found: ' + name)
+        }
+        this.__rules__[index].fn = fn
+        this.__rules__[index].alt = opt.alt || []
+        this.__cache__ = null
+    }
+    /**
+     * Ruler.before(beforeName, ruleName, fn [, options])
+     * - beforeName (String): new rule will be added before this one.
+     * - ruleName (String): name of added rule.
+     * - fn (Function): rule function.
+     * - options (Object): rule options (not mandatory).
+     *
+     * Add new rule to chain before one with given name. See also
+     * [[Ruler.after]], [[Ruler.push]].
+     *
+     * ##### Options:
+     *
+     * - __alt__ - array with names of "alternate" chains.
+     *
+     * ##### Example
+     *
+     * ```javascript
+     * var md = require('markdown-it')();
+     *
+     * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {
+     *   //...
+     * });
+     * ```
+     **/ Ruler.prototype.before = function (beforeName, ruleName, fn, options) {
+        var index = this.__find__(beforeName)
+        var opt = options || {}
+        if (index === -1) {
+            throw new Error('Parser rule not found: ' + beforeName)
+        }
+        this.__rules__.splice(index, 0, {
+            name: ruleName,
+            enabled: true,
+            fn: fn,
+            alt: opt.alt || [],
+        })
+        this.__cache__ = null
+    }
+    /**
+     * Ruler.after(afterName, ruleName, fn [, options])
+     * - afterName (String): new rule will be added after this one.
+     * - ruleName (String): name of added rule.
+     * - fn (Function): rule function.
+     * - options (Object): rule options (not mandatory).
+     *
+     * Add new rule to chain after one with given name. See also
+     * [[Ruler.before]], [[Ruler.push]].
+     *
+     * ##### Options:
+     *
+     * - __alt__ - array with names of "alternate" chains.
+     *
+     * ##### Example
+     *
+     * ```javascript
+     * var md = require('markdown-it')();
+     *
+     * md.inline.ruler.after('text', 'my_rule', function replace(state) {
+     *   //...
+     * });
+     * ```
+     **/ Ruler.prototype.after = function (afterName, ruleName, fn, options) {
+        var index = this.__find__(afterName)
+        var opt = options || {}
+        if (index === -1) {
+            throw new Error('Parser rule not found: ' + afterName)
+        }
+        this.__rules__.splice(index + 1, 0, {
+            name: ruleName,
+            enabled: true,
+            fn: fn,
+            alt: opt.alt || [],
+        })
+        this.__cache__ = null
+    }
+    /**
+     * Ruler.push(ruleName, fn [, options])
+     * - ruleName (String): name of added rule.
+     * - fn (Function): rule function.
+     * - options (Object): rule options (not mandatory).
+     *
+     * Push new rule to the end of chain. See also
+     * [[Ruler.before]], [[Ruler.after]].
+     *
+     * ##### Options:
+     *
+     * - __alt__ - array with names of "alternate" chains.
+     *
+     * ##### Example
+     *
+     * ```javascript
+     * var md = require('markdown-it')();
+     *
+     * md.core.ruler.push('my_rule', function replace(state) {
+     *   //...
+     * });
+     * ```
+     **/ Ruler.prototype.push = function (ruleName, fn, options) {
+        var opt = options || {}
+        this.__rules__.push({
+            name: ruleName,
+            enabled: true,
+            fn: fn,
+            alt: opt.alt || [],
+        })
+        this.__cache__ = null
+    }
+    /**
+     * Ruler.enable(list [, ignoreInvalid]) -> Array
+     * - list (String|Array): list of rule names to enable.
+     * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.
+     *
+     * Enable rules with given names. If any rule name not found - throw Error.
+     * Errors can be disabled by second param.
+     *
+     * Returns list of found rule names (if no exception happened).
+     *
+     * See also [[Ruler.disable]], [[Ruler.enableOnly]].
+     **/ Ruler.prototype.enable = function (list, ignoreInvalid) {
+        if (!Array.isArray(list)) {
+            list = [list]
+        }
+        var result = []
+        // Search by name and enable
+        list.forEach(function (name) {
+            var idx = this.__find__(name)
+            if (idx < 0) {
+                if (ignoreInvalid) {
+                    return
+                }
+                throw new Error('Rules manager: invalid rule name ' + name)
+            }
+            this.__rules__[idx].enabled = true
+            result.push(name)
+        }, this)
+        this.__cache__ = null
+        return result
+    }
+    /**
+     * Ruler.enableOnly(list [, ignoreInvalid])
+     * - list (String|Array): list of rule names to enable (whitelist).
+     * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.
+     *
+     * Enable rules with given names, and disable everything else. If any rule name
+     * not found - throw Error. Errors can be disabled by second param.
+     *
+     * See also [[Ruler.disable]], [[Ruler.enable]].
+     **/ Ruler.prototype.enableOnly = function (list, ignoreInvalid) {
+        if (!Array.isArray(list)) {
+            list = [list]
+        }
+        this.__rules__.forEach(function (rule) {
+            rule.enabled = false
+        })
+        this.enable(list, ignoreInvalid)
+    }
+    /**
+     * Ruler.disable(list [, ignoreInvalid]) -> Array
+     * - list (String|Array): list of rule names to disable.
+     * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.
+     *
+     * Disable rules with given names. If any rule name not found - throw Error.
+     * Errors can be disabled by second param.
+     *
+     * Returns list of found rule names (if no exception happened).
+     *
+     * See also [[Ruler.enable]], [[Ruler.enableOnly]].
+     **/ Ruler.prototype.disable = function (list, ignoreInvalid) {
+        if (!Array.isArray(list)) {
+            list = [list]
+        }
+        var result = []
+        // Search by name and disable
+        list.forEach(function (name) {
+            var idx = this.__find__(name)
+            if (idx < 0) {
+                if (ignoreInvalid) {
+                    return
+                }
+                throw new Error('Rules manager: invalid rule name ' + name)
+            }
+            this.__rules__[idx].enabled = false
+            result.push(name)
+        }, this)
+        this.__cache__ = null
+        return result
+    }
+    /**
+     * Ruler.getRules(chainName) -> Array
+     *
+     * Return array of active functions (rules) for given chain name. It analyzes
+     * rules configuration, compiles caches if not exists and returns result.
+     *
+     * Default chain name is `''` (empty string). It can't be skipped. That's
+     * done intentionally, to keep signature monomorphic for high speed.
+     **/ Ruler.prototype.getRules = function (chainName) {
+        if (this.__cache__ === null) {
+            this.__compile__()
+        }
+        // Chain can be empty, if rules disabled. But we still have to return Array.
+        return this.__cache__[chainName] || []
+    }
+    var ruler = Ruler
+    // Normalize input string
+    // https://spec.commonmark.org/0.29/#line-ending
+    var NEWLINES_RE = /\r\n?|\n/g
+    var NULL_RE = /\0/g
+    var normalize = function normalize(state) {
+        var str
+        // Normalize newlines
+        str = state.src.replace(NEWLINES_RE, '\n')
+        // Replace NULL characters
+        str = str.replace(NULL_RE, '\ufffd')
+        state.src = str
+    }
+    var block = function block(state) {
+        var token
+        if (state.inlineMode) {
+            token = new state.Token('inline', '', 0)
+            token.content = state.src
+            token.map = [0, 1]
+            token.children = []
+            state.tokens.push(token)
+        } else {
+            state.md.block.parse(state.src, state.md, state.env, state.tokens)
+        }
+    }
+    var inline = function inline(state) {
+        var tokens = state.tokens,
+            tok,
+            i,
+            l
+        // Parse inlines
+        for (i = 0, l = tokens.length; i < l; i++) {
+            tok = tokens[i]
+            if (tok.type === 'inline') {
+                state.md.inline.parse(tok.content, state.md, state.env, tok.children)
+            }
+        }
+    }
+    var arrayReplaceAt = utils.arrayReplaceAt
+    function isLinkOpen(str) {
+        return /^<a[>\s]/i.test(str)
+    }
+    function isLinkClose(str) {
+        return /^<\/a\s*>/i.test(str)
+    }
+    var linkify = function linkify(state) {
+        var i,
+            j,
+            l,
+            tokens,
+            token,
+            currentToken,
+            nodes,
+            ln,
+            text,
+            pos,
+            lastPos,
+            level,
+            htmlLinkLevel,
+            url,
+            fullUrl,
+            urlText,
+            blockTokens = state.tokens,
+            links
+        if (!state.md.options.linkify) {
+            return
+        }
+        for (j = 0, l = blockTokens.length; j < l; j++) {
+            if (blockTokens[j].type !== 'inline' || !state.md.linkify.pretest(blockTokens[j].content)) {
+                continue
+            }
+            tokens = blockTokens[j].children
+            htmlLinkLevel = 0
+            // We scan from the end, to keep position when new tags added.
+            // Use reversed logic in links start/end match
+            for (i = tokens.length - 1; i >= 0; i--) {
+                currentToken = tokens[i]
+                // Skip content of markdown links
+                if (currentToken.type === 'link_close') {
+                    i--
+                    while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {
+                        i--
+                    }
+                    continue
+                }
+                // Skip content of html tag links
+                if (currentToken.type === 'html_inline') {
+                    if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {
+                        htmlLinkLevel--
+                    }
+                    if (isLinkClose(currentToken.content)) {
+                        htmlLinkLevel++
+                    }
+                }
+                if (htmlLinkLevel > 0) {
+                    continue
+                }
+                if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {
+                    text = currentToken.content
+                    links = state.md.linkify.match(text)
+                    // Now split string to nodes
+                    nodes = []
+                    level = currentToken.level
+                    lastPos = 0
+                    for (ln = 0; ln < links.length; ln++) {
+                        url = links[ln].url
+                        fullUrl = state.md.normalizeLink(url)
+                        if (!state.md.validateLink(fullUrl)) {
+                            continue
+                        }
+                        urlText = links[ln].text
+                        // Linkifier might send raw hostnames like "example.com", where url
+                        // starts with domain name. So we prepend http:// in those cases,
+                        // and remove it afterwards.
+
+                        if (!links[ln].schema) {
+                            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\/\//, '')
+                        } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {
+                            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')
+                        } else {
+                            urlText = state.md.normalizeLinkText(urlText)
+                        }
+                        pos = links[ln].index
+                        if (pos > lastPos) {
+                            token = new state.Token('text', '', 0)
+                            token.content = text.slice(lastPos, pos)
+                            token.level = level
+                            nodes.push(token)
+                        }
+                        token = new state.Token('link_open', 'a', 1)
+                        token.attrs = [['href', fullUrl]]
+                        token.level = level++
+                        token.markup = 'linkify'
+                        token.info = 'auto'
+                        nodes.push(token)
+                        token = new state.Token('text', '', 0)
+                        token.content = urlText
+                        token.level = level
+                        nodes.push(token)
+                        token = new state.Token('link_close', 'a', -1)
+                        token.level = --level
+                        token.markup = 'linkify'
+                        token.info = 'auto'
+                        nodes.push(token)
+                        lastPos = links[ln].lastIndex
+                    }
+                    if (lastPos < text.length) {
+                        token = new state.Token('text', '', 0)
+                        token.content = text.slice(lastPos)
+                        token.level = level
+                        nodes.push(token)
+                    }
+                    // replace current node
+                    blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)
+                }
+            }
+        }
+    }
+    // Simple typographic replacements
+    // TODO:
+    // - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾
+    // - miltiplication 2 x 4 -> 2 × 4
+    var RARE_RE = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/
+    // Workaround for phantomjs - need regex without /g flag,
+    // or root check will fail every second time
+    var SCOPED_ABBR_TEST_RE = /\((c|tm|r|p)\)/i
+    var SCOPED_ABBR_RE = /\((c|tm|r|p)\)/gi
+    var SCOPED_ABBR = {
+        c: '\xa9',
+        r: '\xae',
+        p: '\xa7',
+        tm: '\u2122',
+    }
+    function replaceFn(match, name) {
+        return SCOPED_ABBR[name.toLowerCase()]
+    }
+    function replace_scoped(inlineTokens) {
+        var i,
+            token,
+            inside_autolink = 0
+        for (i = inlineTokens.length - 1; i >= 0; i--) {
+            token = inlineTokens[i]
+            if (token.type === 'text' && !inside_autolink) {
+                token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)
+            }
+            if (token.type === 'link_open' && token.info === 'auto') {
+                inside_autolink--
+            }
+            if (token.type === 'link_close' && token.info === 'auto') {
+                inside_autolink++
+            }
+        }
+    }
+    function replace_rare(inlineTokens) {
+        var i,
+            token,
+            inside_autolink = 0
+        for (i = inlineTokens.length - 1; i >= 0; i--) {
+            token = inlineTokens[i]
+            if (token.type === 'text' && !inside_autolink) {
+                if (RARE_RE.test(token.content)) {
+                    token.content = token.content
+                        .replace(/\+-/g, '\xb1')
+                        .replace(/\.{2,}/g, '\u2026')
+                        .replace(/([?!])\u2026/g, '$1..')
+                        .replace(/([?!]){4,}/g, '$1$1$1')
+                        .replace(/,{2,}/g, ',')
+                        .replace(/(^|[^-])---(?=[^-]|$)/gm, '$1\u2014')
+                        .replace(/(^|\s)--(?=\s|$)/gm, '$1\u2013')
+                        .replace(/(^|[^-\s])--(?=[^-\s]|$)/gm, '$1\u2013')
+                }
+            }
+            if (token.type === 'link_open' && token.info === 'auto') {
+                inside_autolink--
+            }
+            if (token.type === 'link_close' && token.info === 'auto') {
+                inside_autolink++
+            }
+        }
+    }
+    var replacements = function replace(state) {
+        var blkIdx
+        if (!state.md.options.typographer) {
+            return
+        }
+        for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {
+            if (state.tokens[blkIdx].type !== 'inline') {
+                continue
+            }
+            if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {
+                replace_scoped(state.tokens[blkIdx].children)
+            }
+            if (RARE_RE.test(state.tokens[blkIdx].content)) {
+                replace_rare(state.tokens[blkIdx].children)
+            }
+        }
+    }
+    var isWhiteSpace$1 = utils.isWhiteSpace
+    var isPunctChar$1 = utils.isPunctChar
+    var isMdAsciiPunct$1 = utils.isMdAsciiPunct
+    var QUOTE_TEST_RE = /['"]/
+    var QUOTE_RE = /['"]/g
+    var APOSTROPHE = '\u2019'
+    /* ’ */ function replaceAt(str, index, ch) {
+        return str.substr(0, index) + ch + str.substr(index + 1)
+    }
+    function process_inlines(tokens, state) {
+        var i,
+            token,
+            text,
+            t,
+            pos,
+            max,
+            thisLevel,
+            item,
+            lastChar,
+            nextChar,
+            isLastPunctChar,
+            isNextPunctChar,
+            isLastWhiteSpace,
+            isNextWhiteSpace,
+            canOpen,
+            canClose,
+            j,
+            isSingle,
+            stack,
+            openQuote,
+            closeQuote
+        stack = []
+        for (i = 0; i < tokens.length; i++) {
+            token = tokens[i]
+            thisLevel = tokens[i].level
+            for (j = stack.length - 1; j >= 0; j--) {
+                if (stack[j].level <= thisLevel) {
+                    break
+                }
+            }
+            stack.length = j + 1
+            if (token.type !== 'text') {
+                continue
+            }
+            text = token.content
+            pos = 0
+            max = text.length
+            /*eslint no-labels:0,block-scoped-var:0*/ OUTER: while (pos < max) {
+                QUOTE_RE.lastIndex = pos
+                t = QUOTE_RE.exec(text)
+                if (!t) {
+                    break
+                }
+                canOpen = canClose = true
+                pos = t.index + 1
+                isSingle = t[0] === "'"
+                // Find previous character,
+                // default to space if it's the beginning of the line
+
+                lastChar = 32
+                if (t.index - 1 >= 0) {
+                    lastChar = text.charCodeAt(t.index - 1)
+                } else {
+                    for (j = i - 1; j >= 0; j--) {
+                        if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break
+                        // lastChar defaults to 0x20
+                        if (!tokens[j].content) continue
+                        // should skip all tokens except 'text', 'html_inline' or 'code_inline'
+                        lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)
+                        break
+                    }
+                }
+                // Find next character,
+                // default to space if it's the end of the line
+
+                nextChar = 32
+                if (pos < max) {
+                    nextChar = text.charCodeAt(pos)
+                } else {
+                    for (j = i + 1; j < tokens.length; j++) {
+                        if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break
+                        // nextChar defaults to 0x20
+                        if (!tokens[j].content) continue
+                        // should skip all tokens except 'text', 'html_inline' or 'code_inline'
+                        nextChar = tokens[j].content.charCodeAt(0)
+                        break
+                    }
+                }
+                isLastPunctChar = isMdAsciiPunct$1(lastChar) || isPunctChar$1(String.fromCharCode(lastChar))
+                isNextPunctChar = isMdAsciiPunct$1(nextChar) || isPunctChar$1(String.fromCharCode(nextChar))
+                isLastWhiteSpace = isWhiteSpace$1(lastChar)
+                isNextWhiteSpace = isWhiteSpace$1(nextChar)
+                if (isNextWhiteSpace) {
+                    canOpen = false
+                } else if (isNextPunctChar) {
+                    if (!(isLastWhiteSpace || isLastPunctChar)) {
+                        canOpen = false
+                    }
+                }
+                if (isLastWhiteSpace) {
+                    canClose = false
+                } else if (isLastPunctChar) {
+                    if (!(isNextWhiteSpace || isNextPunctChar)) {
+                        canClose = false
+                    }
+                }
+                if (nextChar === 34 /* " */ && t[0] === '"') {
+                    if (lastChar >= 48 /* 0 */ && lastChar <= 57 /* 9 */) {
+                        // special case: 1"" - count first quote as an inch
+                        canClose = canOpen = false
+                    }
+                }
+                if (canOpen && canClose) {
+                    // Replace quotes in the middle of punctuation sequence, but not
+                    // in the middle of the words, i.e.:
+                    // 1. foo " bar " baz - not replaced
+                    // 2. foo-"-bar-"-baz - replaced
+                    // 3. foo"bar"baz     - not replaced
+                    canOpen = isLastPunctChar
+                    canClose = isNextPunctChar
+                }
+                if (!canOpen && !canClose) {
+                    // middle of word
+                    if (isSingle) {
+                        token.content = replaceAt(token.content, t.index, APOSTROPHE)
+                    }
+                    continue
+                }
+                if (canClose) {
+                    // this could be a closing quote, rewind the stack to get a match
+                    for (j = stack.length - 1; j >= 0; j--) {
+                        item = stack[j]
+                        if (stack[j].level < thisLevel) {
+                            break
+                        }
+                        if (item.single === isSingle && stack[j].level === thisLevel) {
+                            item = stack[j]
+                            if (isSingle) {
+                                openQuote = state.md.options.quotes[2]
+                                closeQuote = state.md.options.quotes[3]
+                            } else {
+                                openQuote = state.md.options.quotes[0]
+                                closeQuote = state.md.options.quotes[1]
+                            }
+                            // replace token.content *before* tokens[item.token].content,
+                            // because, if they are pointing at the same token, replaceAt
+                            // could mess up indices when quote length != 1
+                            token.content = replaceAt(token.content, t.index, closeQuote)
+                            tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote)
+                            pos += closeQuote.length - 1
+                            if (item.token === i) {
+                                pos += openQuote.length - 1
+                            }
+                            text = token.content
+                            max = text.length
+                            stack.length = j
+                            continue OUTER
+                        }
+                    }
+                }
+                if (canOpen) {
+                    stack.push({
+                        token: i,
+                        pos: t.index,
+                        single: isSingle,
+                        level: thisLevel,
+                    })
+                } else if (canClose && isSingle) {
+                    token.content = replaceAt(token.content, t.index, APOSTROPHE)
+                }
+            }
+        }
+    }
+    var smartquotes = function smartquotes(state) {
+        /*eslint max-depth:0*/
+        var blkIdx
+        if (!state.md.options.typographer) {
+            return
+        }
+        for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {
+            if (state.tokens[blkIdx].type !== 'inline' || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {
+                continue
+            }
+            process_inlines(state.tokens[blkIdx].children, state)
+        }
+    }
+    // Token class
+    /**
+     * class Token
+     **/
+    /**
+     * new Token(type, tag, nesting)
+     *
+     * Create new token and fill passed properties.
+     **/ function Token(type, tag, nesting) {
+        /**
+         * Token#type -> String
+         *
+         * Type of the token (string, e.g. "paragraph_open")
+         **/
+        this.type = type
+        /**
+         * Token#tag -> String
+         *
+         * html tag name, e.g. "p"
+         **/ this.tag = tag
+        /**
+         * Token#attrs -> Array
+         *
+         * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`
+         **/ this.attrs = null
+        /**
+         * Token#map -> Array
+         *
+         * Source map info. Format: `[ line_begin, line_end ]`
+         **/ this.map = null
+        /**
+         * Token#nesting -> Number
+         *
+         * Level change (number in {-1, 0, 1} set), where:
+         *
+         * -  `1` means the tag is opening
+         * -  `0` means the tag is self-closing
+         * - `-1` means the tag is closing
+         **/ this.nesting = nesting
+        /**
+         * Token#level -> Number
+         *
+         * nesting level, the same as `state.level`
+         **/ this.level = 0
+        /**
+         * Token#children -> Array
+         *
+         * An array of child nodes (inline and img tokens)
+         **/ this.children = null
+        /**
+         * Token#content -> String
+         *
+         * In a case of self-closing tag (code, html, fence, etc.),
+         * it has contents of this tag.
+         **/ this.content = ''
+        /**
+         * Token#markup -> String
+         *
+         * '*' or '_' for emphasis, fence string for fence, etc.
+         **/ this.markup = ''
+        /**
+         * Token#info -> String
+         *
+         * Additional information:
+         *
+         * - Info string for "fence" tokens
+         * - The value "auto" for autolink "link_open" and "link_close" tokens
+         **/ this.info = ''
+        /**
+         * Token#meta -> Object
+         *
+         * A place for plugins to store an arbitrary data
+         **/ this.meta = null
+        /**
+         * Token#block -> Boolean
+         *
+         * True for block-level tokens, false for inline tokens.
+         * Used in renderer to calculate line breaks
+         **/ this.block = false
+        /**
+         * Token#hidden -> Boolean
+         *
+         * If it's true, ignore this element when rendering. Used for tight lists
+         * to hide paragraphs.
+         **/ this.hidden = false
+    }
+    /**
+     * Token.attrIndex(name) -> Number
+     *
+     * Search attribute index by name.
+     **/ Token.prototype.attrIndex = function attrIndex(name) {
+        var attrs, i, len
+        if (!this.attrs) {
+            return -1
+        }
+        attrs = this.attrs
+        for (i = 0, len = attrs.length; i < len; i++) {
+            if (attrs[i][0] === name) {
+                return i
+            }
+        }
+        return -1
+    }
+    /**
+     * Token.attrPush(attrData)
+     *
+     * Add `[ name, value ]` attribute to list. Init attrs if necessary
+     **/ Token.prototype.attrPush = function attrPush(attrData) {
+        if (this.attrs) {
+            this.attrs.push(attrData)
+        } else {
+            this.attrs = [attrData]
+        }
+    }
+    /**
+     * Token.attrSet(name, value)
+     *
+     * Set `name` attribute to `value`. Override old value if exists.
+     **/ Token.prototype.attrSet = function attrSet(name, value) {
+        var idx = this.attrIndex(name),
+            attrData = [name, value]
+        if (idx < 0) {
+            this.attrPush(attrData)
+        } else {
+            this.attrs[idx] = attrData
+        }
+    }
+    /**
+     * Token.attrGet(name)
+     *
+     * Get the value of attribute `name`, or null if it does not exist.
+     **/ Token.prototype.attrGet = function attrGet(name) {
+        var idx = this.attrIndex(name),
+            value = null
+        if (idx >= 0) {
+            value = this.attrs[idx][1]
+        }
+        return value
+    }
+    /**
+     * Token.attrJoin(name, value)
+     *
+     * Join value to existing attribute via space. Or create new attribute if not
+     * exists. Useful to operate with token classes.
+     **/ Token.prototype.attrJoin = function attrJoin(name, value) {
+        var idx = this.attrIndex(name)
+        if (idx < 0) {
+            this.attrPush([name, value])
+        } else {
+            this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value
+        }
+    }
+    var token = Token
+    function StateCore(src, md, env) {
+        this.src = src
+        this.env = env
+        this.tokens = []
+        this.inlineMode = false
+        this.md = md
+        // link to parser instance
+    }
+    // re-export Token class to use in core rules
+    StateCore.prototype.Token = token
+    var state_core = StateCore
+    var _rules$2 = [
+        ['normalize', normalize],
+        ['block', block],
+        ['inline', inline],
+        ['linkify', linkify],
+        ['replacements', replacements],
+        ['smartquotes', smartquotes],
+    ]
+    /**
+     * new Core()
+     **/ function Core() {
+        /**
+         * Core#ruler -> Ruler
+         *
+         * [[Ruler]] instance. Keep configuration of core rules.
+         **/
+        this.ruler = new ruler()
+        for (var i = 0; i < _rules$2.length; i++) {
+            this.ruler.push(_rules$2[i][0], _rules$2[i][1])
+        }
+    }
+    /**
+     * Core.process(state)
+     *
+     * Executes core chain rules.
+     **/ Core.prototype.process = function (state) {
+        var i, l, rules
+        rules = this.ruler.getRules('')
+        for (i = 0, l = rules.length; i < l; i++) {
+            rules[i](state)
+        }
+    }
+    Core.prototype.State = state_core
+    var parser_core = Core
+    var isSpace$a = utils.isSpace
+    function getLine(state, line) {
+        var pos = state.bMarks[line] + state.tShift[line],
+            max = state.eMarks[line]
+        return state.src.substr(pos, max - pos)
+    }
+    function escapedSplit(str) {
+        var result = [],
+            pos = 0,
+            max = str.length,
+            ch,
+            isEscaped = false,
+            lastPos = 0,
+            current = ''
+        ch = str.charCodeAt(pos)
+        while (pos < max) {
+            if (ch === 124 /* | */) {
+                if (!isEscaped) {
+                    // pipe separating cells, '|'
+                    result.push(current + str.substring(lastPos, pos))
+                    current = ''
+                    lastPos = pos + 1
+                } else {
+                    // escaped pipe, '\|'
+                    current += str.substring(lastPos, pos - 1)
+                    lastPos = pos
+                }
+            }
+            isEscaped = ch === 92 /* \ */
+            pos++
+            ch = str.charCodeAt(pos)
+        }
+        result.push(current + str.substring(lastPos))
+        return result
+    }
+    var table = function table(state, startLine, endLine, silent) {
+        var ch,
+            lineText,
+            pos,
+            i,
+            l,
+            nextLine,
+            columns,
+            columnCount,
+            token,
+            aligns,
+            t,
+            tableLines,
+            tbodyLines,
+            oldParentType,
+            terminate,
+            terminatorRules,
+            firstCh,
+            secondCh
+        // should have at least two lines
+        if (startLine + 2 > endLine) {
+            return false
+        }
+        nextLine = startLine + 1
+        if (state.sCount[nextLine] < state.blkIndent) {
+            return false
+        }
+        // if it's indented more than 3 spaces, it should be a code block
+        if (state.sCount[nextLine] - state.blkIndent >= 4) {
+            return false
+        }
+        // first character of the second line should be '|', '-', ':',
+        // and no other characters are allowed but spaces;
+        // basically, this is the equivalent of /^[-:|][-:|\s]*$/ regexp
+        pos = state.bMarks[nextLine] + state.tShift[nextLine]
+        if (pos >= state.eMarks[nextLine]) {
+            return false
+        }
+        firstCh = state.src.charCodeAt(pos++)
+        if (firstCh !== 124 /* | */ && firstCh !== 45 /* - */ && firstCh !== 58 /* : */) {
+            return false
+        }
+        if (pos >= state.eMarks[nextLine]) {
+            return false
+        }
+        secondCh = state.src.charCodeAt(pos++)
+        if (secondCh !== 124 /* | */ && secondCh !== 45 /* - */ && secondCh !== 58 /* : */ && !isSpace$a(secondCh)) {
+            return false
+        }
+        // if first character is '-', then second character must not be a space
+        // (due to parsing ambiguity with list)
+        if (firstCh === 45 /* - */ && isSpace$a(secondCh)) {
+            return false
+        }
+        while (pos < state.eMarks[nextLine]) {
+            ch = state.src.charCodeAt(pos)
+            if (ch !== 124 /* | */ && ch !== 45 /* - */ && ch !== 58 /* : */ && !isSpace$a(ch)) {
+                return false
+            }
+            pos++
+        }
+        lineText = getLine(state, startLine + 1)
+        columns = lineText.split('|')
+        aligns = []
+        for (i = 0; i < columns.length; i++) {
+            t = columns[i].trim()
+            if (!t) {
+                // allow empty columns before and after table, but not in between columns;
+                // e.g. allow ` |---| `, disallow ` ---||--- `
+                if (i === 0 || i === columns.length - 1) {
+                    continue
+                } else {
+                    return false
+                }
+            }
+            if (!/^:?-+:?$/.test(t)) {
+                return false
+            }
+            if (t.charCodeAt(t.length - 1) === 58 /* : */) {
+                aligns.push(t.charCodeAt(0) === 58 /* : */ ? 'center' : 'right')
+            } else if (t.charCodeAt(0) === 58 /* : */) {
+                aligns.push('left')
+            } else {
+                aligns.push('')
+            }
+        }
+        lineText = getLine(state, startLine).trim()
+        if (lineText.indexOf('|') === -1) {
+            return false
+        }
+        if (state.sCount[startLine] - state.blkIndent >= 4) {
+            return false
+        }
+        columns = escapedSplit(lineText)
+        if (columns.length && columns[0] === '') columns.shift()
+        if (columns.length && columns[columns.length - 1] === '') columns.pop()
+        // header row will define an amount of columns in the entire table,
+        // and align row should be exactly the same (the rest of the rows can differ)
+        columnCount = columns.length
+        if (columnCount === 0 || columnCount !== aligns.length) {
+            return false
+        }
+        if (silent) {
+            return true
+        }
+        oldParentType = state.parentType
+        state.parentType = 'table'
+        // use 'blockquote' lists for termination because it's
+        // the most similar to tables
+        terminatorRules = state.md.block.ruler.getRules('blockquote')
+        token = state.push('table_open', 'table', 1)
+        token.map = tableLines = [startLine, 0]
+        token = state.push('thead_open', 'thead', 1)
+        token.map = [startLine, startLine + 1]
+        token = state.push('tr_open', 'tr', 1)
+        token.map = [startLine, startLine + 1]
+        for (i = 0; i < columns.length; i++) {
+            token = state.push('th_open', 'th', 1)
+            if (aligns[i]) {
+                token.attrs = [['style', 'text-align:' + aligns[i]]]
+            }
+            token = state.push('inline', '', 0)
+            token.content = columns[i].trim()
+            token.children = []
+            token = state.push('th_close', 'th', -1)
+        }
+        token = state.push('tr_close', 'tr', -1)
+        token = state.push('thead_close', 'thead', -1)
+        for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {
+            if (state.sCount[nextLine] < state.blkIndent) {
+                break
+            }
+            terminate = false
+            for (i = 0, l = terminatorRules.length; i < l; i++) {
+                if (terminatorRules[i](state, nextLine, endLine, true)) {
+                    terminate = true
+                    break
+                }
+            }
+            if (terminate) {
+                break
+            }
+            lineText = getLine(state, nextLine).trim()
+            if (!lineText) {
+                break
+            }
+            if (state.sCount[nextLine] - state.blkIndent >= 4) {
+                break
+            }
+            columns = escapedSplit(lineText)
+            if (columns.length && columns[0] === '') columns.shift()
+            if (columns.length && columns[columns.length - 1] === '') columns.pop()
+            if (nextLine === startLine + 2) {
+                token = state.push('tbody_open', 'tbody', 1)
+                token.map = tbodyLines = [startLine + 2, 0]
+            }
+            token = state.push('tr_open', 'tr', 1)
+            token.map = [nextLine, nextLine + 1]
+            for (i = 0; i < columnCount; i++) {
+                token = state.push('td_open', 'td', 1)
+                if (aligns[i]) {
+                    token.attrs = [['style', 'text-align:' + aligns[i]]]
+                }
+                token = state.push('inline', '', 0)
+                token.content = columns[i] ? columns[i].trim() : ''
+                token.children = []
+                token = state.push('td_close', 'td', -1)
+            }
+            token = state.push('tr_close', 'tr', -1)
+        }
+        if (tbodyLines) {
+            token = state.push('tbody_close', 'tbody', -1)
+            tbodyLines[1] = nextLine
+        }
+        token = state.push('table_close', 'table', -1)
+        tableLines[1] = nextLine
+        state.parentType = oldParentType
+        state.line = nextLine
+        return true
+    }
+    // Code block (4 spaces padded)
+    var code = function code(state, startLine, endLine /*, silent*/) {
+        var nextLine, last, token
+        if (state.sCount[startLine] - state.blkIndent < 4) {
+            return false
+        }
+        last = nextLine = startLine + 1
+        while (nextLine < endLine) {
+            if (state.isEmpty(nextLine)) {
+                nextLine++
+                continue
+            }
+            if (state.sCount[nextLine] - state.blkIndent >= 4) {
+                nextLine++
+                last = nextLine
+                continue
+            }
+            break
+        }
+        state.line = last
+        token = state.push('code_block', 'code', 0)
+        token.content = state.getLines(startLine, last, 4 + state.blkIndent, true)
+        token.map = [startLine, state.line]
+        return true
+    }
+    // fences (``` lang, ~~~ lang)
+    var fence = function fence(state, startLine, endLine, silent) {
+        var marker,
+            len,
+            params,
+            nextLine,
+            mem,
+            token,
+            markup,
+            haveEndMarker = false,
+            pos = state.bMarks[startLine] + state.tShift[startLine],
+            max = state.eMarks[startLine]
+        // if it's indented more than 3 spaces, it should be a code block
+        if (state.sCount[startLine] - state.blkIndent >= 4) {
+            return false
+        }
+        if (pos + 3 > max) {
+            return false
+        }
+        marker = state.src.charCodeAt(pos)
+        if (marker !== 126 /* ~ */ && marker !== 96 /* ` */) {
+            return false
+        }
+        // scan marker length
+        mem = pos
+        pos = state.skipChars(pos, marker)
+        len = pos - mem
+        if (len < 3) {
+            return false
+        }
+        markup = state.src.slice(mem, pos)
+        params = state.src.slice(pos, max)
+        if (marker === 96 /* ` */) {
+            if (params.indexOf(String.fromCharCode(marker)) >= 0) {
+                return false
+            }
+        }
+        // Since start is found, we can report success here in validation mode
+        if (silent) {
+            return true
+        }
+        // search end of block
+        nextLine = startLine
+        for (;;) {
+            nextLine++
+            if (nextLine >= endLine) {
+                // unclosed block should be autoclosed by end of document.
+                // also block seems to be autoclosed by end of parent
+                break
+            }
+            pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]
+            max = state.eMarks[nextLine]
+            if (pos < max && state.sCount[nextLine] < state.blkIndent) {
+                // non-empty line with negative indent should stop the list:
+                // - ```
+                //  test
+                break
+            }
+            if (state.src.charCodeAt(pos) !== marker) {
+                continue
+            }
+            if (state.sCount[nextLine] - state.blkIndent >= 4) {
+                // closing fence should be indented less than 4 spaces
+                continue
+            }
+            pos = state.skipChars(pos, marker)
+            // closing code fence must be at least as long as the opening one
+            if (pos - mem < len) {
+                continue
+            }
+            // make sure tail has spaces only
+            pos = state.skipSpaces(pos)
+            if (pos < max) {
+                continue
+            }
+            haveEndMarker = true
+            // found!
+            break
+        }
+        // If a fence has heading spaces, they should be removed from its inner block
+        len = state.sCount[startLine]
+        state.line = nextLine + (haveEndMarker ? 1 : 0)
+        token = state.push('fence', 'code', 0)
+        token.info = params
+        token.content = state.getLines(startLine + 1, nextLine, len, true)
+        token.markup = markup
+        token.map = [startLine, state.line]
+        return true
+    }
+    var isSpace$9 = utils.isSpace
+    var blockquote = function blockquote(state, startLine, endLine, silent) {
+        var adjustTab,
+            ch,
+            i,
+            initial,
+            l,
+            lastLineEmpty,
+            lines,
+            nextLine,
+            offset,
+            oldBMarks,
+            oldBSCount,
+            oldIndent,
+            oldParentType,
+            oldSCount,
+            oldTShift,
+            spaceAfterMarker,
+            terminate,
+            terminatorRules,
+            token,
+            isOutdented,
+            oldLineMax = state.lineMax,
+            pos = state.bMarks[startLine] + state.tShift[startLine],
+            max = state.eMarks[startLine]
+        // if it's indented more than 3 spaces, it should be a code block
+        if (state.sCount[startLine] - state.blkIndent >= 4) {
+            return false
+        }
+        // check the block quote marker
+        if (state.src.charCodeAt(pos++) !== 62 /* > */) {
+            return false
+        }
+        // we know that it's going to be a valid blockquote,
+        // so no point trying to find the end of it in silent mode
+        if (silent) {
+            return true
+        }
+        // set offset past spaces and ">"
+        initial = offset = state.sCount[startLine] + 1
+        // skip one optional space after '>'
+        if (state.src.charCodeAt(pos) === 32 /* space */) {
+            // ' >   test '
+            //     ^ -- position start of line here:
+            pos++
+            initial++
+            offset++
+            adjustTab = false
+            spaceAfterMarker = true
+        } else if (state.src.charCodeAt(pos) === 9 /* tab */) {
+            spaceAfterMarker = true
+            if ((state.bsCount[startLine] + offset) % 4 === 3) {
+                // '  >\t  test '
+                //       ^ -- position start of line here (tab has width===1)
+                pos++
+                initial++
+                offset++
+                adjustTab = false
+            } else {
+                // ' >\t  test '
+                //    ^ -- position start of line here + shift bsCount slightly
+                //         to make extra space appear
+                adjustTab = true
+            }
+        } else {
+            spaceAfterMarker = false
+        }
+        oldBMarks = [state.bMarks[startLine]]
+        state.bMarks[startLine] = pos
+        while (pos < max) {
+            ch = state.src.charCodeAt(pos)
+            if (isSpace$9(ch)) {
+                if (ch === 9) {
+                    offset += 4 - ((offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4)
+                } else {
+                    offset++
+                }
+            } else {
+                break
+            }
+            pos++
+        }
+        oldBSCount = [state.bsCount[startLine]]
+        state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0)
+        lastLineEmpty = pos >= max
+        oldSCount = [state.sCount[startLine]]
+        state.sCount[startLine] = offset - initial
+        oldTShift = [state.tShift[startLine]]
+        state.tShift[startLine] = pos - state.bMarks[startLine]
+        terminatorRules = state.md.block.ruler.getRules('blockquote')
+        oldParentType = state.parentType
+        state.parentType = 'blockquote'
+        // Search the end of the block
+
+        // Block ends with either:
+        //  1. an empty line outside:
+        //     ```
+        //     > test
+
+        //     ```
+        //  2. an empty line inside:
+        //     ```
+        //     >
+        //     test
+        //     ```
+        //  3. another tag:
+        //     ```
+        //     > test
+        //      - - -
+        //     ```
+        for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {
+            // check if it's outdented, i.e. it's inside list item and indented
+            // less than said list item:
+            // ```
+            // 1. anything
+            //    > current blockquote
+            // 2. checking this line
+            // ```
+            isOutdented = state.sCount[nextLine] < state.blkIndent
+            pos = state.bMarks[nextLine] + state.tShift[nextLine]
+            max = state.eMarks[nextLine]
+            if (pos >= max) {
+                // Case 1: line is not inside the blockquote, and this line is empty.
+                break
+            }
+            if (state.src.charCodeAt(pos++) === 62 /* > */ && !isOutdented) {
+                // This line is inside the blockquote.
+                // set offset past spaces and ">"
+                initial = offset = state.sCount[nextLine] + 1
+                // skip one optional space after '>'
+                if (state.src.charCodeAt(pos) === 32 /* space */) {
+                    // ' >   test '
+                    //     ^ -- position start of line here:
+                    pos++
+                    initial++
+                    offset++
+                    adjustTab = false
+                    spaceAfterMarker = true
+                } else if (state.src.charCodeAt(pos) === 9 /* tab */) {
+                    spaceAfterMarker = true
+                    if ((state.bsCount[nextLine] + offset) % 4 === 3) {
+                        // '  >\t  test '
+                        //       ^ -- position start of line here (tab has width===1)
+                        pos++
+                        initial++
+                        offset++
+                        adjustTab = false
+                    } else {
+                        // ' >\t  test '
+                        //    ^ -- position start of line here + shift bsCount slightly
+                        //         to make extra space appear
+                        adjustTab = true
+                    }
+                } else {
+                    spaceAfterMarker = false
+                }
+                oldBMarks.push(state.bMarks[nextLine])
+                state.bMarks[nextLine] = pos
+                while (pos < max) {
+                    ch = state.src.charCodeAt(pos)
+                    if (isSpace$9(ch)) {
+                        if (ch === 9) {
+                            offset += 4 - ((offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4)
+                        } else {
+                            offset++
+                        }
+                    } else {
+                        break
+                    }
+                    pos++
+                }
+                lastLineEmpty = pos >= max
+                oldBSCount.push(state.bsCount[nextLine])
+                state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)
+                oldSCount.push(state.sCount[nextLine])
+                state.sCount[nextLine] = offset - initial
+                oldTShift.push(state.tShift[nextLine])
+                state.tShift[nextLine] = pos - state.bMarks[nextLine]
+                continue
+            }
+            // Case 2: line is not inside the blockquote, and the last line was empty.
+            if (lastLineEmpty) {
+                break
+            }
+            // Case 3: another tag found.
+            terminate = false
+            for (i = 0, l = terminatorRules.length; i < l; i++) {
+                if (terminatorRules[i](state, nextLine, endLine, true)) {
+                    terminate = true
+                    break
+                }
+            }
+            if (terminate) {
+                // Quirk to enforce "hard termination mode" for paragraphs;
+                // normally if you call `tokenize(state, startLine, nextLine)`,
+                // paragraphs will look below nextLine for paragraph continuation,
+                // but if blockquote is terminated by another tag, they shouldn't
+                state.lineMax = nextLine
+                if (state.blkIndent !== 0) {
+                    // state.blkIndent was non-zero, we now set it to zero,
+                    // so we need to re-calculate all offsets to appear as
+                    // if indent wasn't changed
+                    oldBMarks.push(state.bMarks[nextLine])
+                    oldBSCount.push(state.bsCount[nextLine])
+                    oldTShift.push(state.tShift[nextLine])
+                    oldSCount.push(state.sCount[nextLine])
+                    state.sCount[nextLine] -= state.blkIndent
+                }
+                break
+            }
+            oldBMarks.push(state.bMarks[nextLine])
+            oldBSCount.push(state.bsCount[nextLine])
+            oldTShift.push(state.tShift[nextLine])
+            oldSCount.push(state.sCount[nextLine])
+            // A negative indentation means that this is a paragraph continuation
+
+            state.sCount[nextLine] = -1
+        }
+        oldIndent = state.blkIndent
+        state.blkIndent = 0
+        token = state.push('blockquote_open', 'blockquote', 1)
+        token.markup = '>'
+        token.map = lines = [startLine, 0]
+        state.md.block.tokenize(state, startLine, nextLine)
+        token = state.push('blockquote_close', 'blockquote', -1)
+        token.markup = '>'
+        state.lineMax = oldLineMax
+        state.parentType = oldParentType
+        lines[1] = state.line
+        // Restore original tShift; this might not be necessary since the parser
+        // has already been here, but just to make sure we can do that.
+        for (i = 0; i < oldTShift.length; i++) {
+            state.bMarks[i + startLine] = oldBMarks[i]
+            state.tShift[i + startLine] = oldTShift[i]
+            state.sCount[i + startLine] = oldSCount[i]
+            state.bsCount[i + startLine] = oldBSCount[i]
+        }
+        state.blkIndent = oldIndent
+        return true
+    }
+    var isSpace$8 = utils.isSpace
+    var hr = function hr(state, startLine, endLine, silent) {
+        var marker,
+            cnt,
+            ch,
+            token,
+            pos = state.bMarks[startLine] + state.tShift[startLine],
+            max = state.eMarks[startLine]
+        // if it's indented more than 3 spaces, it should be a code block
+        if (state.sCount[startLine] - state.blkIndent >= 4) {
+            return false
+        }
+        marker = state.src.charCodeAt(pos++)
+        // Check hr marker
+        if (marker !== 42 /* * */ && marker !== 45 /* - */ && marker !== 95 /* _ */) {
+            return false
+        }
+        // markers can be mixed with spaces, but there should be at least 3 of them
+        cnt = 1
+        while (pos < max) {
+            ch = state.src.charCodeAt(pos++)
+            if (ch !== marker && !isSpace$8(ch)) {
+                return false
+            }
+            if (ch === marker) {
+                cnt++
+            }
+        }
+        if (cnt < 3) {
+            return false
+        }
+        if (silent) {
+            return true
+        }
+        state.line = startLine + 1
+        token = state.push('hr', 'hr', 0)
+        token.map = [startLine, state.line]
+        token.markup = Array(cnt + 1).join(String.fromCharCode(marker))
+        return true
+    }
+    var isSpace$7 = utils.isSpace
+    // Search `[-+*][\n ]`, returns next pos after marker on success
+    // or -1 on fail.
+    function skipBulletListMarker(state, startLine) {
+        var marker, pos, max, ch
+        pos = state.bMarks[startLine] + state.tShift[startLine]
+        max = state.eMarks[startLine]
+        marker = state.src.charCodeAt(pos++)
+        // Check bullet
+        if (marker !== 42 /* * */ && marker !== 45 /* - */ && marker !== 43 /* + */) {
+            return -1
+        }
+        if (pos < max) {
+            ch = state.src.charCodeAt(pos)
+            if (!isSpace$7(ch)) {
+                // " -test " - is not a list item
+                return -1
+            }
+        }
+        return pos
+    }
+    // Search `\d+[.)][\n ]`, returns next pos after marker on success
+    // or -1 on fail.
+    function skipOrderedListMarker(state, startLine) {
+        var ch,
+            start = state.bMarks[startLine] + state.tShift[startLine],
+            pos = start,
+            max = state.eMarks[startLine]
+        // List marker should have at least 2 chars (digit + dot)
+        if (pos + 1 >= max) {
+            return -1
+        }
+        ch = state.src.charCodeAt(pos++)
+        if (ch < 48 /* 0 */ || ch > 57 /* 9 */) {
+            return -1
+        }
+        for (;;) {
+            // EOL -> fail
+            if (pos >= max) {
+                return -1
+            }
+            ch = state.src.charCodeAt(pos++)
+            if (ch >= 48 /* 0 */ && ch <= 57 /* 9 */) {
+                // List marker should have no more than 9 digits
+                // (prevents integer overflow in browsers)
+                if (pos - start >= 10) {
+                    return -1
+                }
+                continue
+            }
+            // found valid marker
+            if (ch === 41 /* ) */ || ch === 46 /* . */) {
+                break
+            }
+            return -1
+        }
+        if (pos < max) {
+            ch = state.src.charCodeAt(pos)
+            if (!isSpace$7(ch)) {
+                // " 1.test " - is not a list item
+                return -1
+            }
+        }
+        return pos
+    }
+    function markTightParagraphs(state, idx) {
+        var i,
+            l,
+            level = state.level + 2
+        for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {
+            if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {
+                state.tokens[i + 2].hidden = true
+                state.tokens[i].hidden = true
+                i += 2
+            }
+        }
+    }
+    var list = function list(state, startLine, endLine, silent) {
+        var ch,
+            contentStart,
+            i,
+            indent,
+            indentAfterMarker,
+            initial,
+            isOrdered,
+            itemLines,
+            l,
+            listLines,
+            listTokIdx,
+            markerCharCode,
+            markerValue,
+            max,
+            nextLine,
+            offset,
+            oldListIndent,
+            oldParentType,
+            oldSCount,
+            oldTShift,
+            oldTight,
+            pos,
+            posAfterMarker,
+            prevEmptyEnd,
+            start,
+            terminate,
+            terminatorRules,
+            token,
+            isTerminatingParagraph = false,
+            tight = true
+        // if it's indented more than 3 spaces, it should be a code block
+        if (state.sCount[startLine] - state.blkIndent >= 4) {
+            return false
+        }
+        // Special case:
+        //  - item 1
+        //   - item 2
+        //    - item 3
+        //     - item 4
+        //      - this one is a paragraph continuation
+        if (
+            state.listIndent >= 0 &&
+            state.sCount[startLine] - state.listIndent >= 4 &&
+            state.sCount[startLine] < state.blkIndent
+        ) {
+            return false
+        }
+        // limit conditions when list can interrupt
+        // a paragraph (validation mode only)
+        if (silent && state.parentType === 'paragraph') {
+            // Next list item should still terminate previous list item;
+            // This code can fail if plugins use blkIndent as well as lists,
+            // but I hope the spec gets fixed long before that happens.
+            if (state.tShift[startLine] >= state.blkIndent) {
+                isTerminatingParagraph = true
+            }
+        }
+        // Detect list type and position after marker
+        if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {
+            isOrdered = true
+            start = state.bMarks[startLine] + state.tShift[startLine]
+            markerValue = Number(state.src.substr(start, posAfterMarker - start - 1))
+            // If we're starting a new ordered list right after
+            // a paragraph, it should start with 1.
+            if (isTerminatingParagraph && markerValue !== 1) return false
+        } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {
+            isOrdered = false
+        } else {
+            return false
+        }
+        // If we're starting a new unordered list right after
+        // a paragraph, first line should not be empty.
+        if (isTerminatingParagraph) {
+            if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false
+        }
+        // We should terminate list on style change. Remember first one to compare.
+        markerCharCode = state.src.charCodeAt(posAfterMarker - 1)
+        // For validation mode we can terminate immediately
+        if (silent) {
+            return true
+        }
+        // Start list
+        listTokIdx = state.tokens.length
+        if (isOrdered) {
+            token = state.push('ordered_list_open', 'ol', 1)
+            if (markerValue !== 1) {
+                token.attrs = [['start', markerValue]]
+            }
+        } else {
+            token = state.push('bullet_list_open', 'ul', 1)
+        }
+        token.map = listLines = [startLine, 0]
+        token.markup = String.fromCharCode(markerCharCode)
+
+        // Iterate list items
+
+        nextLine = startLine
+        prevEmptyEnd = false
+        terminatorRules = state.md.block.ruler.getRules('list')
+        oldParentType = state.parentType
+        state.parentType = 'list'
+        while (nextLine < endLine) {
+            pos = posAfterMarker
+            max = state.eMarks[nextLine]
+            initial = offset =
+                state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine])
+            while (pos < max) {
+                ch = state.src.charCodeAt(pos)
+                if (ch === 9) {
+                    offset += 4 - ((offset + state.bsCount[nextLine]) % 4)
+                } else if (ch === 32) {
+                    offset++
+                } else {
+                    break
+                }
+                pos++
+            }
+            contentStart = pos
+            if (contentStart >= max) {
+                // trimming space in "-    \n  3" case, indent is 1 here
+                indentAfterMarker = 1
+            } else {
+                indentAfterMarker = offset - initial
+            }
+            // If we have more than 4 spaces, the indent is 1
+            // (the rest is just indented code block)
+            if (indentAfterMarker > 4) {
+                indentAfterMarker = 1
+            }
+            // "  -  test"
+            //  ^^^^^ - calculating total length of this thing
+            indent = initial + indentAfterMarker
+            // Run subparser & write tokens
+            token = state.push('list_item_open', 'li', 1)
+            token.markup = String.fromCharCode(markerCharCode)
+            token.map = itemLines = [startLine, 0]
+            // change current state, then restore it after parser subcall
+            oldTight = state.tight
+            oldTShift = state.tShift[startLine]
+            oldSCount = state.sCount[startLine]
+            //  - example list
+            // ^ listIndent position will be here
+            //   ^ blkIndent position will be here
+
+            oldListIndent = state.listIndent
+            state.listIndent = state.blkIndent
+            state.blkIndent = indent
+            state.tight = true
+            state.tShift[startLine] = contentStart - state.bMarks[startLine]
+            state.sCount[startLine] = offset
+            if (contentStart >= max && state.isEmpty(startLine + 1)) {
+                // workaround for this case
+                // (list item is empty, list terminates before "foo"):
+                // ~~~~~~~~
+                //   -
+                //     foo
+                // ~~~~~~~~
+                state.line = Math.min(state.line + 2, endLine)
+            } else {
+                state.md.block.tokenize(state, startLine, endLine, true)
+            }
+            // If any of list item is tight, mark list as tight
+            if (!state.tight || prevEmptyEnd) {
+                tight = false
+            }
+            // Item become loose if finish with empty line,
+            // but we should filter last element, because it means list finish
+            prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1)
+            state.blkIndent = state.listIndent
+            state.listIndent = oldListIndent
+            state.tShift[startLine] = oldTShift
+            state.sCount[startLine] = oldSCount
+            state.tight = oldTight
+            token = state.push('list_item_close', 'li', -1)
+            token.markup = String.fromCharCode(markerCharCode)
+            nextLine = startLine = state.line
+            itemLines[1] = nextLine
+            contentStart = state.bMarks[startLine]
+            if (nextLine >= endLine) {
+                break
+            }
+
+            // Try to check if list is terminated or continued.
+
+            if (state.sCount[nextLine] < state.blkIndent) {
+                break
+            }
+            // if it's indented more than 3 spaces, it should be a code block
+            if (state.sCount[startLine] - state.blkIndent >= 4) {
+                break
+            }
+            // fail if terminating block found
+            terminate = false
+            for (i = 0, l = terminatorRules.length; i < l; i++) {
+                if (terminatorRules[i](state, nextLine, endLine, true)) {
+                    terminate = true
+                    break
+                }
+            }
+            if (terminate) {
+                break
+            }
+            // fail if list has another type
+            if (isOrdered) {
+                posAfterMarker = skipOrderedListMarker(state, nextLine)
+                if (posAfterMarker < 0) {
+                    break
+                }
+            } else {
+                posAfterMarker = skipBulletListMarker(state, nextLine)
+                if (posAfterMarker < 0) {
+                    break
+                }
+            }
+            if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {
+                break
+            }
+        }
+        // Finalize list
+        if (isOrdered) {
+            token = state.push('ordered_list_close', 'ol', -1)
+        } else {
+            token = state.push('bullet_list_close', 'ul', -1)
+        }
+        token.markup = String.fromCharCode(markerCharCode)
+        listLines[1] = nextLine
+        state.line = nextLine
+        state.parentType = oldParentType
+        // mark paragraphs tight if needed
+        if (tight) {
+            markTightParagraphs(state, listTokIdx)
+        }
+        return true
+    }
+    var normalizeReference$2 = utils.normalizeReference
+    var isSpace$6 = utils.isSpace
+    var reference = function reference(state, startLine, _endLine, silent) {
+        var ch,
+            destEndPos,
+            destEndLineNo,
+            endLine,
+            href,
+            i,
+            l,
+            label,
+            labelEnd,
+            oldParentType,
+            res,
+            start,
+            str,
+            terminate,
+            terminatorRules,
+            title,
+            lines = 0,
+            pos = state.bMarks[startLine] + state.tShift[startLine],
+            max = state.eMarks[startLine],
+            nextLine = startLine + 1
+        // if it's indented more than 3 spaces, it should be a code block
+        if (state.sCount[startLine] - state.blkIndent >= 4) {
+            return false
+        }
+        if (state.src.charCodeAt(pos) !== 91 /* [ */) {
+            return false
+        }
+        // Simple check to quickly interrupt scan on [link](url) at the start of line.
+        // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54
+        while (++pos < max) {
+            if (state.src.charCodeAt(pos) === 93 /* ] */ && state.src.charCodeAt(pos - 1) !== 92 /* \ */) {
+                if (pos + 1 === max) {
+                    return false
+                }
+                if (state.src.charCodeAt(pos + 1) !== 58 /* : */) {
+                    return false
+                }
+                break
+            }
+        }
+        endLine = state.lineMax
+        // jump line-by-line until empty one or EOF
+        terminatorRules = state.md.block.ruler.getRules('reference')
+        oldParentType = state.parentType
+        state.parentType = 'reference'
+        for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
+            // this would be a code block normally, but after paragraph
+            // it's considered a lazy continuation regardless of what's there
+            if (state.sCount[nextLine] - state.blkIndent > 3) {
+                continue
+            }
+            // quirk for blockquotes, this line should already be checked by that rule
+            if (state.sCount[nextLine] < 0) {
+                continue
+            }
+            // Some tags can terminate paragraph without empty line.
+            terminate = false
+            for (i = 0, l = terminatorRules.length; i < l; i++) {
+                if (terminatorRules[i](state, nextLine, endLine, true)) {
+                    terminate = true
+                    break
+                }
+            }
+            if (terminate) {
+                break
+            }
+        }
+        str = state.getLines(startLine, nextLine, state.blkIndent, false).trim()
+        max = str.length
+        for (pos = 1; pos < max; pos++) {
+            ch = str.charCodeAt(pos)
+            if (ch === 91 /* [ */) {
+                return false
+            } else if (ch === 93 /* ] */) {
+                labelEnd = pos
+                break
+            } else if (ch === 10 /* \n */) {
+                lines++
+            } else if (ch === 92 /* \ */) {
+                pos++
+                if (pos < max && str.charCodeAt(pos) === 10) {
+                    lines++
+                }
+            }
+        }
+        if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 58 /* : */) {
+            return false
+        }
+        // [label]:   destination   'title'
+        //         ^^^ skip optional whitespace here
+        for (pos = labelEnd + 2; pos < max; pos++) {
+            ch = str.charCodeAt(pos)
+            if (ch === 10) {
+                lines++
+            } else if (isSpace$6(ch));
+            else {
+                break
+            }
+        }
+        // [label]:   destination   'title'
+        //            ^^^^^^^^^^^ parse this
+        res = state.md.helpers.parseLinkDestination(str, pos, max)
+        if (!res.ok) {
+            return false
+        }
+        href = state.md.normalizeLink(res.str)
+        if (!state.md.validateLink(href)) {
+            return false
+        }
+        pos = res.pos
+        lines += res.lines
+        // save cursor state, we could require to rollback later
+        destEndPos = pos
+        destEndLineNo = lines
+        // [label]:   destination   'title'
+        //                       ^^^ skipping those spaces
+        start = pos
+        for (; pos < max; pos++) {
+            ch = str.charCodeAt(pos)
+            if (ch === 10) {
+                lines++
+            } else if (isSpace$6(ch));
+            else {
+                break
+            }
+        }
+        // [label]:   destination   'title'
+        //                          ^^^^^^^ parse this
+        res = state.md.helpers.parseLinkTitle(str, pos, max)
+        if (pos < max && start !== pos && res.ok) {
+            title = res.str
+            pos = res.pos
+            lines += res.lines
+        } else {
+            title = ''
+            pos = destEndPos
+            lines = destEndLineNo
+        }
+        // skip trailing spaces until the rest of the line
+        while (pos < max) {
+            ch = str.charCodeAt(pos)
+            if (!isSpace$6(ch)) {
+                break
+            }
+            pos++
+        }
+        if (pos < max && str.charCodeAt(pos) !== 10) {
+            if (title) {
+                // garbage at the end of the line after title,
+                // but it could still be a valid reference if we roll back
+                title = ''
+                pos = destEndPos
+                lines = destEndLineNo
+                while (pos < max) {
+                    ch = str.charCodeAt(pos)
+                    if (!isSpace$6(ch)) {
+                        break
+                    }
+                    pos++
+                }
+            }
+        }
+        if (pos < max && str.charCodeAt(pos) !== 10) {
+            // garbage at the end of the line
+            return false
+        }
+        label = normalizeReference$2(str.slice(1, labelEnd))
+        if (!label) {
+            // CommonMark 0.20 disallows empty labels
+            return false
+        }
+        // Reference can not terminate anything. This check is for safety only.
+        /*istanbul ignore if*/ if (silent) {
+            return true
+        }
+        if (typeof state.env.references === 'undefined') {
+            state.env.references = {}
+        }
+        if (typeof state.env.references[label] === 'undefined') {
+            state.env.references[label] = {
+                title: title,
+                href: href,
+            }
+        }
+        state.parentType = oldParentType
+        state.line = startLine + lines + 1
+        return true
+    }
+    // List of valid html blocks names, accorting to commonmark spec
+    var html_blocks = [
+        'address',
+        'article',
+        'aside',
+        'base',
+        'basefont',
+        'blockquote',
+        'body',
+        'caption',
+        'center',
+        'col',
+        'colgroup',
+        'dd',
+        'details',
+        'dialog',
+        'dir',
+        'div',
+        'dl',
+        'dt',
+        'fieldset',
+        'figcaption',
+        'figure',
+        'footer',
+        'form',
+        'frame',
+        'frameset',
+        'h1',
+        'h2',
+        'h3',
+        'h4',
+        'h5',
+        'h6',
+        'head',
+        'header',
+        'hr',
+        'html',
+        'iframe',
+        'legend',
+        'li',
+        'link',
+        'main',
+        'menu',
+        'menuitem',
+        'nav',
+        'noframes',
+        'ol',
+        'optgroup',
+        'option',
+        'p',
+        'param',
+        'section',
+        'source',
+        'summary',
+        'table',
+        'tbody',
+        'td',
+        'tfoot',
+        'th',
+        'thead',
+        'title',
+        'tr',
+        'track',
+        'ul',
+    ]
+    // Regexps to match html elements
+    var attr_name = '[a-zA-Z_:][a-zA-Z0-9:._-]*'
+    var unquoted = '[^"\'=<>`\\x00-\\x20]+'
+    var single_quoted = "'[^']*'"
+    var double_quoted = '"[^"]*"'
+    var attr_value = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'
+    var attribute = '(?:\\s+' + attr_name + '(?:\\s*=\\s*' + attr_value + ')?)'
+    var open_tag = '<[A-Za-z][A-Za-z0-9\\-]*' + attribute + '*\\s*\\/?>'
+    var close_tag = '<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>'
+    var comment = '\x3c!----\x3e|\x3c!--(?:-?[^>-])(?:-?[^-])*--\x3e'
+    var processing = '<[?][\\s\\S]*?[?]>'
+    var declaration = '<![A-Z]+\\s+[^>]*>'
+    var cdata = '<!\\[CDATA\\[[\\s\\S]*?\\]\\]>'
+    var HTML_TAG_RE$1 = new RegExp(
+        '^(?:' + open_tag + '|' + close_tag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')',
+    )
+    var HTML_OPEN_CLOSE_TAG_RE$1 = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')
+    var HTML_TAG_RE_1 = HTML_TAG_RE$1
+    var HTML_OPEN_CLOSE_TAG_RE_1 = HTML_OPEN_CLOSE_TAG_RE$1
+    var html_re = {
+        HTML_TAG_RE: HTML_TAG_RE_1,
+        HTML_OPEN_CLOSE_TAG_RE: HTML_OPEN_CLOSE_TAG_RE_1,
+    }
+    var HTML_OPEN_CLOSE_TAG_RE = html_re.HTML_OPEN_CLOSE_TAG_RE
+    // An array of opening and corresponding closing sequences for html tags,
+    // last argument defines whether it can terminate a paragraph or not
+
+    var HTML_SEQUENCES = [
+        [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, true],
+        [/^<!--/, /-->/, true],
+        [/^<\?/, /\?>/, true],
+        [/^<![A-Z]/, />/, true],
+        [/^<!\[CDATA\[/, /\]\]>/, true],
+        [new RegExp('^</?(' + html_blocks.join('|') + ')(?=(\\s|/?>|$))', 'i'), /^$/, true],
+        [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\s*$'), /^$/, false],
+    ]
+    var html_block = function html_block(state, startLine, endLine, silent) {
+        var i,
+            nextLine,
+            token,
+            lineText,
+            pos = state.bMarks[startLine] + state.tShift[startLine],
+            max = state.eMarks[startLine]
+        // if it's indented more than 3 spaces, it should be a code block
+        if (state.sCount[startLine] - state.blkIndent >= 4) {
+            return false
+        }
+        if (!state.md.options.html) {
+            return false
+        }
+        if (state.src.charCodeAt(pos) !== 60 /* < */) {
+            return false
+        }
+        lineText = state.src.slice(pos, max)
+        for (i = 0; i < HTML_SEQUENCES.length; i++) {
+            if (HTML_SEQUENCES[i][0].test(lineText)) {
+                break
+            }
+        }
+        if (i === HTML_SEQUENCES.length) {
+            return false
+        }
+        if (silent) {
+            // true if this sequence can be a terminator, false otherwise
+            return HTML_SEQUENCES[i][2]
+        }
+        nextLine = startLine + 1
+        // If we are here - we detected HTML block.
+        // Let's roll down till block end.
+        if (!HTML_SEQUENCES[i][1].test(lineText)) {
+            for (; nextLine < endLine; nextLine++) {
+                if (state.sCount[nextLine] < state.blkIndent) {
+                    break
+                }
+                pos = state.bMarks[nextLine] + state.tShift[nextLine]
+                max = state.eMarks[nextLine]
+                lineText = state.src.slice(pos, max)
+                if (HTML_SEQUENCES[i][1].test(lineText)) {
+                    if (lineText.length !== 0) {
+                        nextLine++
+                    }
+                    break
+                }
+            }
+        }
+        state.line = nextLine
+        token = state.push('html_block', '', 0)
+        token.map = [startLine, nextLine]
+        token.content = state.getLines(startLine, nextLine, state.blkIndent, true)
+        return true
+    }
+    var isSpace$5 = utils.isSpace
+    var heading = function heading(state, startLine, endLine, silent) {
+        var ch,
+            level,
+            tmp,
+            token,
+            pos = state.bMarks[startLine] + state.tShift[startLine],
+            max = state.eMarks[startLine]
+        // if it's indented more than 3 spaces, it should be a code block
+        if (state.sCount[startLine] - state.blkIndent >= 4) {
+            return false
+        }
+        ch = state.src.charCodeAt(pos)
+        if (ch !== 35 /* # */ || pos >= max) {
+            return false
+        }
+        // count heading level
+        level = 1
+        ch = state.src.charCodeAt(++pos)
+        while (ch === 35 /* # */ && pos < max && level <= 6) {
+            level++
+            ch = state.src.charCodeAt(++pos)
+        }
+        if (level > 6 || (pos < max && !isSpace$5(ch))) {
+            return false
+        }
+        if (silent) {
+            return true
+        }
+        // Let's cut tails like '    ###  ' from the end of string
+        max = state.skipSpacesBack(max, pos)
+        tmp = state.skipCharsBack(max, 35, pos)
+        // #
+        if (tmp > pos && isSpace$5(state.src.charCodeAt(tmp - 1))) {
+            max = tmp
+        }
+        state.line = startLine + 1
+        token = state.push('heading_open', 'h' + String(level), 1)
+        token.markup = '########'.slice(0, level)
+        token.map = [startLine, state.line]
+        token = state.push('inline', '', 0)
+        token.content = state.src.slice(pos, max).trim()
+        token.map = [startLine, state.line]
+        token.children = []
+        token = state.push('heading_close', 'h' + String(level), -1)
+        token.markup = '########'.slice(0, level)
+        return true
+    }
+    // lheading (---, ===)
+    var lheading = function lheading(state, startLine, endLine /*, silent*/) {
+        var content,
+            terminate,
+            i,
+            l,
+            token,
+            pos,
+            max,
+            level,
+            marker,
+            nextLine = startLine + 1,
+            oldParentType,
+            terminatorRules = state.md.block.ruler.getRules('paragraph')
+        // if it's indented more than 3 spaces, it should be a code block
+        if (state.sCount[startLine] - state.blkIndent >= 4) {
+            return false
+        }
+        oldParentType = state.parentType
+        state.parentType = 'paragraph'
+        // use paragraph to match terminatorRules
+        // jump line-by-line until empty one or EOF
+        for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
+            // this would be a code block normally, but after paragraph
+            // it's considered a lazy continuation regardless of what's there
+            if (state.sCount[nextLine] - state.blkIndent > 3) {
+                continue
+            }
+
+            // Check for underline in setext header
+
+            if (state.sCount[nextLine] >= state.blkIndent) {
+                pos = state.bMarks[nextLine] + state.tShift[nextLine]
+                max = state.eMarks[nextLine]
+                if (pos < max) {
+                    marker = state.src.charCodeAt(pos)
+                    if (marker === 45 /* - */ || marker === 61 /* = */) {
+                        pos = state.skipChars(pos, marker)
+                        pos = state.skipSpaces(pos)
+                        if (pos >= max) {
+                            level = marker === 61 /* = */ ? 1 : 2
+                            break
+                        }
+                    }
+                }
+            }
+            // quirk for blockquotes, this line should already be checked by that rule
+            if (state.sCount[nextLine] < 0) {
+                continue
+            }
+            // Some tags can terminate paragraph without empty line.
+            terminate = false
+            for (i = 0, l = terminatorRules.length; i < l; i++) {
+                if (terminatorRules[i](state, nextLine, endLine, true)) {
+                    terminate = true
+                    break
+                }
+            }
+            if (terminate) {
+                break
+            }
+        }
+        if (!level) {
+            // Didn't find valid underline
+            return false
+        }
+        content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()
+        state.line = nextLine + 1
+        token = state.push('heading_open', 'h' + String(level), 1)
+        token.markup = String.fromCharCode(marker)
+        token.map = [startLine, state.line]
+        token = state.push('inline', '', 0)
+        token.content = content
+        token.map = [startLine, state.line - 1]
+        token.children = []
+        token = state.push('heading_close', 'h' + String(level), -1)
+        token.markup = String.fromCharCode(marker)
+        state.parentType = oldParentType
+        return true
+    }
+    // Paragraph
+    var paragraph = function paragraph(state, startLine /*, endLine*/) {
+        var content,
+            terminate,
+            i,
+            l,
+            token,
+            oldParentType,
+            nextLine = startLine + 1,
+            terminatorRules = state.md.block.ruler.getRules('paragraph'),
+            endLine = state.lineMax
+        oldParentType = state.parentType
+        state.parentType = 'paragraph'
+        // jump line-by-line until empty one or EOF
+        for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
+            // this would be a code block normally, but after paragraph
+            // it's considered a lazy continuation regardless of what's there
+            if (state.sCount[nextLine] - state.blkIndent > 3) {
+                continue
+            }
+            // quirk for blockquotes, this line should already be checked by that rule
+            if (state.sCount[nextLine] < 0) {
+                continue
+            }
+            // Some tags can terminate paragraph without empty line.
+            terminate = false
+            for (i = 0, l = terminatorRules.length; i < l; i++) {
+                if (terminatorRules[i](state, nextLine, endLine, true)) {
+                    terminate = true
+                    break
+                }
+            }
+            if (terminate) {
+                break
+            }
+        }
+        content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()
+        state.line = nextLine
+        token = state.push('paragraph_open', 'p', 1)
+        token.map = [startLine, state.line]
+        token = state.push('inline', '', 0)
+        token.content = content
+        token.map = [startLine, state.line]
+        token.children = []
+        token = state.push('paragraph_close', 'p', -1)
+        state.parentType = oldParentType
+        return true
+    }
+    var isSpace$4 = utils.isSpace
+    function StateBlock(src, md, env, tokens) {
+        var ch, s, start, pos, len, indent, offset, indent_found
+        this.src = src
+        // link to parser instance
+        this.md = md
+        this.env = env
+
+        // Internal state vartiables
+
+        this.tokens = tokens
+        this.bMarks = []
+        // line begin offsets for fast jumps
+        this.eMarks = []
+        // line end offsets for fast jumps
+        this.tShift = []
+        // offsets of the first non-space characters (tabs not expanded)
+        this.sCount = []
+        // indents for each line (tabs expanded)
+        // An amount of virtual spaces (tabs expanded) between beginning
+        // of each line (bMarks) and real beginning of that line.
+
+        // It exists only as a hack because blockquotes override bMarks
+        // losing information in the process.
+
+        // It's used only when expanding tabs, you can think about it as
+        // an initial tab length, e.g. bsCount=21 applied to string `\t123`
+        // means first tab should be expanded to 4-21%4 === 3 spaces.
+
+        this.bsCount = []
+        // block parser variables
+        this.blkIndent = 0
+        // required block content indent (for example, if we are
+        // inside a list, it would be positioned after list marker)
+        this.line = 0
+        // line index in src
+        this.lineMax = 0
+        // lines count
+        this.tight = false
+        // loose/tight mode for lists
+        this.ddIndent = -1
+        // indent of the current dd block (-1 if there isn't any)
+        this.listIndent = -1
+        // indent of the current list block (-1 if there isn't any)
+        // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'
+        // used in lists to determine if they interrupt a paragraph
+        this.parentType = 'root'
+        this.level = 0
+        // renderer
+        this.result = ''
+        // Create caches
+        // Generate markers.
+        s = this.src
+        indent_found = false
+        for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {
+            ch = s.charCodeAt(pos)
+            if (!indent_found) {
+                if (isSpace$4(ch)) {
+                    indent++
+                    if (ch === 9) {
+                        offset += 4 - (offset % 4)
+                    } else {
+                        offset++
+                    }
+                    continue
+                } else {
+                    indent_found = true
+                }
+            }
+            if (ch === 10 || pos === len - 1) {
+                if (ch !== 10) {
+                    pos++
+                }
+                this.bMarks.push(start)
+                this.eMarks.push(pos)
+                this.tShift.push(indent)
+                this.sCount.push(offset)
+                this.bsCount.push(0)
+                indent_found = false
+                indent = 0
+                offset = 0
+                start = pos + 1
+            }
+        }
+        // Push fake entry to simplify cache bounds checks
+        this.bMarks.push(s.length)
+        this.eMarks.push(s.length)
+        this.tShift.push(0)
+        this.sCount.push(0)
+        this.bsCount.push(0)
+        this.lineMax = this.bMarks.length - 1
+        // don't count last fake line
+    }
+    // Push new token to "stream".
+
+    StateBlock.prototype.push = function (type, tag, nesting) {
+        var token$1 = new token(type, tag, nesting)
+        token$1.block = true
+        if (nesting < 0) this.level--
+        // closing tag
+        token$1.level = this.level
+        if (nesting > 0) this.level++
+        // opening tag
+        this.tokens.push(token$1)
+        return token$1
+    }
+    StateBlock.prototype.isEmpty = function isEmpty(line) {
+        return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]
+    }
+    StateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {
+        for (var max = this.lineMax; from < max; from++) {
+            if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {
+                break
+            }
+        }
+        return from
+    }
+    // Skip spaces from given position.
+    StateBlock.prototype.skipSpaces = function skipSpaces(pos) {
+        var ch
+        for (var max = this.src.length; pos < max; pos++) {
+            ch = this.src.charCodeAt(pos)
+            if (!isSpace$4(ch)) {
+                break
+            }
+        }
+        return pos
+    }
+    // Skip spaces from given position in reverse.
+    StateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {
+        if (pos <= min) {
+            return pos
+        }
+        while (pos > min) {
+            if (!isSpace$4(this.src.charCodeAt(--pos))) {
+                return pos + 1
+            }
+        }
+        return pos
+    }
+    // Skip char codes from given position
+    StateBlock.prototype.skipChars = function skipChars(pos, code) {
+        for (var max = this.src.length; pos < max; pos++) {
+            if (this.src.charCodeAt(pos) !== code) {
+                break
+            }
+        }
+        return pos
+    }
+    // Skip char codes reverse from given position - 1
+    StateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {
+        if (pos <= min) {
+            return pos
+        }
+        while (pos > min) {
+            if (code !== this.src.charCodeAt(--pos)) {
+                return pos + 1
+            }
+        }
+        return pos
+    }
+    // cut lines range from source.
+    StateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {
+        var i,
+            lineIndent,
+            ch,
+            first,
+            last,
+            queue,
+            lineStart,
+            line = begin
+        if (begin >= end) {
+            return ''
+        }
+        queue = new Array(end - begin)
+        for (i = 0; line < end; line++, i++) {
+            lineIndent = 0
+            lineStart = first = this.bMarks[line]
+            if (line + 1 < end || keepLastLF) {
+                // No need for bounds check because we have fake entry on tail.
+                last = this.eMarks[line] + 1
+            } else {
+                last = this.eMarks[line]
+            }
+            while (first < last && lineIndent < indent) {
+                ch = this.src.charCodeAt(first)
+                if (isSpace$4(ch)) {
+                    if (ch === 9) {
+                        lineIndent += 4 - ((lineIndent + this.bsCount[line]) % 4)
+                    } else {
+                        lineIndent++
+                    }
+                } else if (first - lineStart < this.tShift[line]) {
+                    // patched tShift masked characters to look like spaces (blockquotes, list markers)
+                    lineIndent++
+                } else {
+                    break
+                }
+                first++
+            }
+            if (lineIndent > indent) {
+                // partially expanding tabs in code blocks, e.g '\t\tfoobar'
+                // with indent=2 becomes '  \tfoobar'
+                queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)
+            } else {
+                queue[i] = this.src.slice(first, last)
+            }
+        }
+        return queue.join('')
+    }
+    // re-export Token class to use in block rules
+    StateBlock.prototype.Token = token
+    var state_block = StateBlock
+    var _rules$1 = [
+        // First 2 params - rule name & source. Secondary array - list of rules,
+        // which can be terminated by this one.
+        ['table', table, ['paragraph', 'reference']],
+        ['code', code],
+        ['fence', fence, ['paragraph', 'reference', 'blockquote', 'list']],
+        ['blockquote', blockquote, ['paragraph', 'reference', 'blockquote', 'list']],
+        ['hr', hr, ['paragraph', 'reference', 'blockquote', 'list']],
+        ['list', list, ['paragraph', 'reference', 'blockquote']],
+        ['reference', reference],
+        ['html_block', html_block, ['paragraph', 'reference', 'blockquote']],
+        ['heading', heading, ['paragraph', 'reference', 'blockquote']],
+        ['lheading', lheading],
+        ['paragraph', paragraph],
+    ]
+    /**
+     * new ParserBlock()
+     **/ function ParserBlock() {
+        /**
+         * ParserBlock#ruler -> Ruler
+         *
+         * [[Ruler]] instance. Keep configuration of block rules.
+         **/
+        this.ruler = new ruler()
+        for (var i = 0; i < _rules$1.length; i++) {
+            this.ruler.push(_rules$1[i][0], _rules$1[i][1], {
+                alt: (_rules$1[i][2] || []).slice(),
+            })
+        }
+    }
+    // Generate tokens for input range
+
+    ParserBlock.prototype.tokenize = function (state, startLine, endLine) {
+        var ok,
+            i,
+            rules = this.ruler.getRules(''),
+            len = rules.length,
+            line = startLine,
+            hasEmptyLines = false,
+            maxNesting = state.md.options.maxNesting
+        while (line < endLine) {
+            state.line = line = state.skipEmptyLines(line)
+            if (line >= endLine) {
+                break
+            }
+            // Termination condition for nested calls.
+            // Nested calls currently used for blockquotes & lists
+            if (state.sCount[line] < state.blkIndent) {
+                break
+            }
+            // If nesting level exceeded - skip tail to the end. That's not ordinary
+            // situation and we should not care about content.
+            if (state.level >= maxNesting) {
+                state.line = endLine
+                break
+            }
+            // Try all possible rules.
+            // On success, rule should:
+
+            // - update `state.line`
+            // - update `state.tokens`
+            // - return true
+            for (i = 0; i < len; i++) {
+                ok = rules[i](state, line, endLine, false)
+                if (ok) {
+                    break
+                }
+            }
+            // set state.tight if we had an empty line before current tag
+            // i.e. latest empty line should not count
+            state.tight = !hasEmptyLines
+            // paragraph might "eat" one newline after it in nested lists
+            if (state.isEmpty(state.line - 1)) {
+                hasEmptyLines = true
+            }
+            line = state.line
+            if (line < endLine && state.isEmpty(line)) {
+                hasEmptyLines = true
+                line++
+                state.line = line
+            }
+        }
+    }
+    /**
+     * ParserBlock.parse(str, md, env, outTokens)
+     *
+     * Process input string and push block tokens into `outTokens`
+     **/ ParserBlock.prototype.parse = function (src, md, env, outTokens) {
+        var state
+        if (!src) {
+            return
+        }
+        state = new this.State(src, md, env, outTokens)
+        this.tokenize(state, state.line, state.lineMax)
+    }
+    ParserBlock.prototype.State = state_block
+    var parser_block = ParserBlock
+    // Skip text characters for text token, place those to pending buffer
+    // Rule to skip pure text
+    // '{}$%@~+=:' reserved for extentions
+    // !, ", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \, ], ^, _, `, {, |, }, or ~
+    // !!!! Don't confuse with "Markdown ASCII Punctuation" chars
+    // http://spec.commonmark.org/0.15/#ascii-punctuation-character
+    function isTerminatorChar(ch) {
+        switch (ch) {
+            case 10 /* \n */:
+            case 33 /* ! */:
+            case 35 /* # */:
+            case 36 /* $ */:
+            case 37 /* % */:
+            case 38 /* & */:
+            case 42 /* * */:
+            case 43 /* + */:
+            case 45 /* - */:
+            case 58 /* : */:
+            case 60 /* < */:
+            case 61 /* = */:
+            case 62 /* > */:
+            case 64 /* @ */:
+            case 91 /* [ */:
+            case 92 /* \ */:
+            case 93 /* ] */:
+            case 94 /* ^ */:
+            case 95 /* _ */:
+            case 96 /* ` */:
+            case 123 /* { */:
+            case 125 /* } */:
+            case 126 /* ~ */:
+                return true
+
+            default:
+                return false
+        }
+    }
+    var text = function text(state, silent) {
+        var pos = state.pos
+        while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {
+            pos++
+        }
+        if (pos === state.pos) {
+            return false
+        }
+        if (!silent) {
+            state.pending += state.src.slice(state.pos, pos)
+        }
+        state.pos = pos
+        return true
+    }
+    var isSpace$3 = utils.isSpace
+    var newline = function newline(state, silent) {
+        var pmax,
+            max,
+            pos = state.pos
+        if (state.src.charCodeAt(pos) !== 10 /* \n */) {
+            return false
+        }
+        pmax = state.pending.length - 1
+        max = state.posMax
+        // '  \n' -> hardbreak
+        // Lookup in pending chars is bad practice! Don't copy to other rules!
+        // Pending string is stored in concat mode, indexed lookups will cause
+        // convertion to flat mode.
+        if (!silent) {
+            if (pmax >= 0 && state.pending.charCodeAt(pmax) === 32) {
+                if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 32) {
+                    state.pending = state.pending.replace(/ +$/, '')
+                    state.push('hardbreak', 'br', 0)
+                } else {
+                    state.pending = state.pending.slice(0, -1)
+                    state.push('softbreak', 'br', 0)
+                }
+            } else {
+                state.push('softbreak', 'br', 0)
+            }
+        }
+        pos++
+        // skip heading spaces for next line
+        while (pos < max && isSpace$3(state.src.charCodeAt(pos))) {
+            pos++
+        }
+        state.pos = pos
+        return true
+    }
+    var isSpace$2 = utils.isSpace
+    var ESCAPED = []
+    for (var i = 0; i < 256; i++) {
+        ESCAPED.push(0)
+    }
+    '\\!"#$%&\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {
+        ESCAPED[ch.charCodeAt(0)] = 1
+    })
+    var _escape = function escape(state, silent) {
+        var ch,
+            pos = state.pos,
+            max = state.posMax
+        if (state.src.charCodeAt(pos) !== 92 /* \ */) {
+            return false
+        }
+        pos++
+        if (pos < max) {
+            ch = state.src.charCodeAt(pos)
+            if (ch < 256 && ESCAPED[ch] !== 0) {
+                if (!silent) {
+                    state.pending += state.src[pos]
+                }
+                state.pos += 2
+                return true
+            }
+            if (ch === 10) {
+                if (!silent) {
+                    state.push('hardbreak', 'br', 0)
+                }
+                pos++
+                // skip leading whitespaces from next line
+                while (pos < max) {
+                    ch = state.src.charCodeAt(pos)
+                    if (!isSpace$2(ch)) {
+                        break
+                    }
+                    pos++
+                }
+                state.pos = pos
+                return true
+            }
+        }
+        if (!silent) {
+            state.pending += '\\'
+        }
+        state.pos++
+        return true
+    }
+    // Parse backticks
+    var backticks = function backtick(state, silent) {
+        var start,
+            max,
+            marker,
+            token,
+            matchStart,
+            matchEnd,
+            openerLength,
+            closerLength,
+            pos = state.pos,
+            ch = state.src.charCodeAt(pos)
+        if (ch !== 96 /* ` */) {
+            return false
+        }
+        start = pos
+        pos++
+        max = state.posMax
+        // scan marker length
+        while (pos < max && state.src.charCodeAt(pos) === 96 /* ` */) {
+            pos++
+        }
+        marker = state.src.slice(start, pos)
+        openerLength = marker.length
+        if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {
+            if (!silent) state.pending += marker
+            state.pos += openerLength
+            return true
+        }
+        matchStart = matchEnd = pos
+        // Nothing found in the cache, scan until the end of the line (or until marker is found)
+        while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {
+            matchEnd = matchStart + 1
+            // scan marker length
+            while (matchEnd < max && state.src.charCodeAt(matchEnd) === 96 /* ` */) {
+                matchEnd++
+            }
+            closerLength = matchEnd - matchStart
+            if (closerLength === openerLength) {
+                // Found matching closer length.
+                if (!silent) {
+                    token = state.push('code_inline', 'code', 0)
+                    token.markup = marker
+                    token.content = state.src
+                        .slice(pos, matchStart)
+                        .replace(/\n/g, ' ')
+                        .replace(/^ (.+) $/, '$1')
+                }
+                state.pos = matchEnd
+                return true
+            }
+            // Some different length found, put it in cache as upper limit of where closer can be found
+            state.backticks[closerLength] = matchStart
+        }
+        // Scanned through the end, didn't find anything
+        state.backticksScanned = true
+        if (!silent) state.pending += marker
+        state.pos += openerLength
+        return true
+    }
+    // ~~strike through~~
+    // Insert each marker as a separate text token, and add it to delimiter list
+
+    var tokenize$1 = function strikethrough(state, silent) {
+        var i,
+            scanned,
+            token,
+            len,
+            ch,
+            start = state.pos,
+            marker = state.src.charCodeAt(start)
+        if (silent) {
+            return false
+        }
+        if (marker !== 126 /* ~ */) {
+            return false
+        }
+        scanned = state.scanDelims(state.pos, true)
+        len = scanned.length
+        ch = String.fromCharCode(marker)
+        if (len < 2) {
+            return false
+        }
+        if (len % 2) {
+            token = state.push('text', '', 0)
+            token.content = ch
+            len--
+        }
+        for (i = 0; i < len; i += 2) {
+            token = state.push('text', '', 0)
+            token.content = ch + ch
+            state.delimiters.push({
+                marker: marker,
+                length: 0,
+                // disable "rule of 3" length checks meant for emphasis
+                jump: i / 2,
+                // for `~~` 1 marker = 2 characters
+                token: state.tokens.length - 1,
+                end: -1,
+                open: scanned.can_open,
+                close: scanned.can_close,
+            })
+        }
+        state.pos += scanned.length
+        return true
+    }
+    function postProcess$1(state, delimiters) {
+        var i,
+            j,
+            startDelim,
+            endDelim,
+            token,
+            loneMarkers = [],
+            max = delimiters.length
+        for (i = 0; i < max; i++) {
+            startDelim = delimiters[i]
+            if (startDelim.marker !== 126 /* ~ */) {
+                continue
+            }
+            if (startDelim.end === -1) {
+                continue
+            }
+            endDelim = delimiters[startDelim.end]
+            token = state.tokens[startDelim.token]
+            token.type = 's_open'
+            token.tag = 's'
+            token.nesting = 1
+            token.markup = '~~'
+            token.content = ''
+            token = state.tokens[endDelim.token]
+            token.type = 's_close'
+            token.tag = 's'
+            token.nesting = -1
+            token.markup = '~~'
+            token.content = ''
+            if (state.tokens[endDelim.token - 1].type === 'text' && state.tokens[endDelim.token - 1].content === '~') {
+                loneMarkers.push(endDelim.token - 1)
+            }
+        }
+        // If a marker sequence has an odd number of characters, it's splitted
+        // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the
+        // start of the sequence.
+
+        // So, we have to move all those markers after subsequent s_close tags.
+
+        while (loneMarkers.length) {
+            i = loneMarkers.pop()
+            j = i + 1
+            while (j < state.tokens.length && state.tokens[j].type === 's_close') {
+                j++
+            }
+            j--
+            if (i !== j) {
+                token = state.tokens[j]
+                state.tokens[j] = state.tokens[i]
+                state.tokens[i] = token
+            }
+        }
+    }
+    // Walk through delimiter list and replace text tokens with tags
+
+    var postProcess_1$1 = function strikethrough(state) {
+        var curr,
+            tokens_meta = state.tokens_meta,
+            max = state.tokens_meta.length
+        postProcess$1(state, state.delimiters)
+        for (curr = 0; curr < max; curr++) {
+            if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
+                postProcess$1(state, tokens_meta[curr].delimiters)
+            }
+        }
+    }
+    var strikethrough = {
+        tokenize: tokenize$1,
+        postProcess: postProcess_1$1,
+    }
+    // Process *this* and _that_
+    // Insert each marker as a separate text token, and add it to delimiter list
+
+    var tokenize = function emphasis(state, silent) {
+        var i,
+            scanned,
+            token,
+            start = state.pos,
+            marker = state.src.charCodeAt(start)
+        if (silent) {
+            return false
+        }
+        if (marker !== 95 /* _ */ && marker !== 42 /* * */) {
+            return false
+        }
+        scanned = state.scanDelims(state.pos, marker === 42)
+        for (i = 0; i < scanned.length; i++) {
+            token = state.push('text', '', 0)
+            token.content = String.fromCharCode(marker)
+            state.delimiters.push({
+                // Char code of the starting marker (number).
+                marker: marker,
+                // Total length of these series of delimiters.
+                length: scanned.length,
+                // An amount of characters before this one that's equivalent to
+                // current one. In plain English: if this delimiter does not open
+                // an emphasis, neither do previous `jump` characters.
+                // Used to skip sequences like "*****" in one step, for 1st asterisk
+                // value will be 0, for 2nd it's 1 and so on.
+                jump: i,
+                // A position of the token this delimiter corresponds to.
+                token: state.tokens.length - 1,
+                // If this delimiter is matched as a valid opener, `end` will be
+                // equal to its position, otherwise it's `-1`.
+                end: -1,
+                // Boolean flags that determine if this delimiter could open or close
+                // an emphasis.
+                open: scanned.can_open,
+                close: scanned.can_close,
+            })
+        }
+        state.pos += scanned.length
+        return true
+    }
+    function postProcess(state, delimiters) {
+        var i,
+            startDelim,
+            endDelim,
+            token,
+            ch,
+            isStrong,
+            max = delimiters.length
+        for (i = max - 1; i >= 0; i--) {
+            startDelim = delimiters[i]
+            if (startDelim.marker !== 95 /* _ */ && startDelim.marker !== 42 /* * */) {
+                continue
+            }
+            // Process only opening markers
+            if (startDelim.end === -1) {
+                continue
+            }
+            endDelim = delimiters[startDelim.end]
+            // If the previous delimiter has the same marker and is adjacent to this one,
+            // merge those into one strong delimiter.
+
+            // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`
+
+            isStrong =
+                i > 0 &&
+                delimiters[i - 1].end === startDelim.end + 1 &&
+                delimiters[i - 1].token === startDelim.token - 1 &&
+                delimiters[startDelim.end + 1].token === endDelim.token + 1 &&
+                delimiters[i - 1].marker === startDelim.marker
+            ch = String.fromCharCode(startDelim.marker)
+            token = state.tokens[startDelim.token]
+            token.type = isStrong ? 'strong_open' : 'em_open'
+            token.tag = isStrong ? 'strong' : 'em'
+            token.nesting = 1
+            token.markup = isStrong ? ch + ch : ch
+            token.content = ''
+            token = state.tokens[endDelim.token]
+            token.type = isStrong ? 'strong_close' : 'em_close'
+            token.tag = isStrong ? 'strong' : 'em'
+            token.nesting = -1
+            token.markup = isStrong ? ch + ch : ch
+            token.content = ''
+            if (isStrong) {
+                state.tokens[delimiters[i - 1].token].content = ''
+                state.tokens[delimiters[startDelim.end + 1].token].content = ''
+                i--
+            }
+        }
+    }
+    // Walk through delimiter list and replace text tokens with tags
+
+    var postProcess_1 = function emphasis(state) {
+        var curr,
+            tokens_meta = state.tokens_meta,
+            max = state.tokens_meta.length
+        postProcess(state, state.delimiters)
+        for (curr = 0; curr < max; curr++) {
+            if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
+                postProcess(state, tokens_meta[curr].delimiters)
+            }
+        }
+    }
+    var emphasis = {
+        tokenize: tokenize,
+        postProcess: postProcess_1,
+    }
+    var normalizeReference$1 = utils.normalizeReference
+    var isSpace$1 = utils.isSpace
+    var link = function link(state, silent) {
+        var attrs,
+            code,
+            label,
+            labelEnd,
+            labelStart,
+            pos,
+            res,
+            ref,
+            token,
+            href = '',
+            title = '',
+            oldPos = state.pos,
+            max = state.posMax,
+            start = state.pos,
+            parseReference = true
+        if (state.src.charCodeAt(state.pos) !== 91 /* [ */) {
+            return false
+        }
+        labelStart = state.pos + 1
+        labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)
+        // parser failed to find ']', so it's not a valid link
+        if (labelEnd < 0) {
+            return false
+        }
+        pos = labelEnd + 1
+        if (pos < max && state.src.charCodeAt(pos) === 40 /* ( */) {
+            // Inline link
+            // might have found a valid shortcut link, disable reference parsing
+            parseReference = false
+            // [link](  <href>  "title"  )
+            //        ^^ skipping these spaces
+            pos++
+            for (; pos < max; pos++) {
+                code = state.src.charCodeAt(pos)
+                if (!isSpace$1(code) && code !== 10) {
+                    break
+                }
+            }
+            if (pos >= max) {
+                return false
+            }
+            // [link](  <href>  "title"  )
+            //          ^^^^^^ parsing link destination
+            start = pos
+            res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)
+            if (res.ok) {
+                href = state.md.normalizeLink(res.str)
+                if (state.md.validateLink(href)) {
+                    pos = res.pos
+                } else {
+                    href = ''
+                }
+                // [link](  <href>  "title"  )
+                //                ^^ skipping these spaces
+                start = pos
+                for (; pos < max; pos++) {
+                    code = state.src.charCodeAt(pos)
+                    if (!isSpace$1(code) && code !== 10) {
+                        break
+                    }
+                }
+                // [link](  <href>  "title"  )
+                //                  ^^^^^^^ parsing link title
+                res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)
+                if (pos < max && start !== pos && res.ok) {
+                    title = res.str
+                    pos = res.pos
+                    // [link](  <href>  "title"  )
+                    //                         ^^ skipping these spaces
+                    for (; pos < max; pos++) {
+                        code = state.src.charCodeAt(pos)
+                        if (!isSpace$1(code) && code !== 10) {
+                            break
+                        }
+                    }
+                }
+            }
+            if (pos >= max || state.src.charCodeAt(pos) !== 41 /* ) */) {
+                // parsing a valid shortcut link failed, fallback to reference
+                parseReference = true
+            }
+            pos++
+        }
+        if (parseReference) {
+            // Link reference
+            if (typeof state.env.references === 'undefined') {
+                return false
+            }
+            if (pos < max && state.src.charCodeAt(pos) === 91 /* [ */) {
+                start = pos + 1
+                pos = state.md.helpers.parseLinkLabel(state, pos)
+                if (pos >= 0) {
+                    label = state.src.slice(start, pos++)
+                } else {
+                    pos = labelEnd + 1
+                }
+            } else {
+                pos = labelEnd + 1
+            }
+            // covers label === '' and label === undefined
+            // (collapsed reference link and shortcut reference link respectively)
+            if (!label) {
+                label = state.src.slice(labelStart, labelEnd)
+            }
+            ref = state.env.references[normalizeReference$1(label)]
+            if (!ref) {
+                state.pos = oldPos
+                return false
+            }
+            href = ref.href
+            title = ref.title
+        }
+
+        // We found the end of the link, and know for a fact it's a valid link;
+        // so all that's left to do is to call tokenizer.
+
+        if (!silent) {
+            state.pos = labelStart
+            state.posMax = labelEnd
+            token = state.push('link_open', 'a', 1)
+            token.attrs = attrs = [['href', href]]
+            if (title) {
+                attrs.push(['title', title])
+            }
+            state.md.inline.tokenize(state)
+            token = state.push('link_close', 'a', -1)
+        }
+        state.pos = pos
+        state.posMax = max
+        return true
+    }
+    var normalizeReference = utils.normalizeReference
+    var isSpace = utils.isSpace
+    var image = function image(state, silent) {
+        var attrs,
+            code,
+            content,
+            label,
+            labelEnd,
+            labelStart,
+            pos,
+            ref,
+            res,
+            title,
+            token,
+            tokens,
+            start,
+            href = '',
+            oldPos = state.pos,
+            max = state.posMax
+        if (state.src.charCodeAt(state.pos) !== 33 /* ! */) {
+            return false
+        }
+        if (state.src.charCodeAt(state.pos + 1) !== 91 /* [ */) {
+            return false
+        }
+        labelStart = state.pos + 2
+        labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)
+        // parser failed to find ']', so it's not a valid link
+        if (labelEnd < 0) {
+            return false
+        }
+        pos = labelEnd + 1
+        if (pos < max && state.src.charCodeAt(pos) === 40 /* ( */) {
+            // Inline link
+            // [link](  <href>  "title"  )
+            //        ^^ skipping these spaces
+            pos++
+            for (; pos < max; pos++) {
+                code = state.src.charCodeAt(pos)
+                if (!isSpace(code) && code !== 10) {
+                    break
+                }
+            }
+            if (pos >= max) {
+                return false
+            }
+            // [link](  <href>  "title"  )
+            //          ^^^^^^ parsing link destination
+            start = pos
+            res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)
+            if (res.ok) {
+                href = state.md.normalizeLink(res.str)
+                if (state.md.validateLink(href)) {
+                    pos = res.pos
+                } else {
+                    href = ''
+                }
+            }
+            // [link](  <href>  "title"  )
+            //                ^^ skipping these spaces
+            start = pos
+            for (; pos < max; pos++) {
+                code = state.src.charCodeAt(pos)
+                if (!isSpace(code) && code !== 10) {
+                    break
+                }
+            }
+            // [link](  <href>  "title"  )
+            //                  ^^^^^^^ parsing link title
+            res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)
+            if (pos < max && start !== pos && res.ok) {
+                title = res.str
+                pos = res.pos
+                // [link](  <href>  "title"  )
+                //                         ^^ skipping these spaces
+                for (; pos < max; pos++) {
+                    code = state.src.charCodeAt(pos)
+                    if (!isSpace(code) && code !== 10) {
+                        break
+                    }
+                }
+            } else {
+                title = ''
+            }
+            if (pos >= max || state.src.charCodeAt(pos) !== 41 /* ) */) {
+                state.pos = oldPos
+                return false
+            }
+            pos++
+        } else {
+            // Link reference
+            if (typeof state.env.references === 'undefined') {
+                return false
+            }
+            if (pos < max && state.src.charCodeAt(pos) === 91 /* [ */) {
+                start = pos + 1
+                pos = state.md.helpers.parseLinkLabel(state, pos)
+                if (pos >= 0) {
+                    label = state.src.slice(start, pos++)
+                } else {
+                    pos = labelEnd + 1
+                }
+            } else {
+                pos = labelEnd + 1
+            }
+            // covers label === '' and label === undefined
+            // (collapsed reference link and shortcut reference link respectively)
+            if (!label) {
+                label = state.src.slice(labelStart, labelEnd)
+            }
+            ref = state.env.references[normalizeReference(label)]
+            if (!ref) {
+                state.pos = oldPos
+                return false
+            }
+            href = ref.href
+            title = ref.title
+        }
+
+        // We found the end of the link, and know for a fact it's a valid link;
+        // so all that's left to do is to call tokenizer.
+
+        if (!silent) {
+            content = state.src.slice(labelStart, labelEnd)
+            state.md.inline.parse(content, state.md, state.env, (tokens = []))
+            token = state.push('image', 'img', 0)
+            token.attrs = attrs = [
+                ['src', href],
+                ['alt', ''],
+            ]
+            token.children = tokens
+            token.content = content
+            if (title) {
+                attrs.push(['title', title])
+            }
+        }
+        state.pos = pos
+        state.posMax = max
+        return true
+    }
+    // Process autolinks '<protocol:...>'
+    /*eslint max-len:0*/ var EMAIL_RE =
+        /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/
+    var AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/
+    var autolink = function autolink(state, silent) {
+        var url,
+            fullUrl,
+            token,
+            ch,
+            start,
+            max,
+            pos = state.pos
+        if (state.src.charCodeAt(pos) !== 60 /* < */) {
+            return false
+        }
+        start = state.pos
+        max = state.posMax
+        for (;;) {
+            if (++pos >= max) return false
+            ch = state.src.charCodeAt(pos)
+            if (ch === 60 /* < */) return false
+            if (ch === 62 /* > */) break
+        }
+        url = state.src.slice(start + 1, pos)
+        if (AUTOLINK_RE.test(url)) {
+            fullUrl = state.md.normalizeLink(url)
+            if (!state.md.validateLink(fullUrl)) {
+                return false
+            }
+            if (!silent) {
+                token = state.push('link_open', 'a', 1)
+                token.attrs = [['href', fullUrl]]
+                token.markup = 'autolink'
+                token.info = 'auto'
+                token = state.push('text', '', 0)
+                token.content = state.md.normalizeLinkText(url)
+                token = state.push('link_close', 'a', -1)
+                token.markup = 'autolink'
+                token.info = 'auto'
+            }
+            state.pos += url.length + 2
+            return true
+        }
+        if (EMAIL_RE.test(url)) {
+            fullUrl = state.md.normalizeLink('mailto:' + url)
+            if (!state.md.validateLink(fullUrl)) {
+                return false
+            }
+            if (!silent) {
+                token = state.push('link_open', 'a', 1)
+                token.attrs = [['href', fullUrl]]
+                token.markup = 'autolink'
+                token.info = 'auto'
+                token = state.push('text', '', 0)
+                token.content = state.md.normalizeLinkText(url)
+                token = state.push('link_close', 'a', -1)
+                token.markup = 'autolink'
+                token.info = 'auto'
+            }
+            state.pos += url.length + 2
+            return true
+        }
+        return false
+    }
+    var HTML_TAG_RE = html_re.HTML_TAG_RE
+    function isLetter(ch) {
+        /*eslint no-bitwise:0*/
+        var lc = ch | 32
+        // to lower case
+        return lc >= 97 /* a */ && lc <= 122 /* z */
+    }
+    var html_inline = function html_inline(state, silent) {
+        var ch,
+            match,
+            max,
+            token,
+            pos = state.pos
+        if (!state.md.options.html) {
+            return false
+        }
+        // Check start
+        max = state.posMax
+        if (state.src.charCodeAt(pos) !== 60 /* < */ || pos + 2 >= max) {
+            return false
+        }
+        // Quick fail on second char
+        ch = state.src.charCodeAt(pos + 1)
+        if (ch !== 33 /* ! */ && ch !== 63 /* ? */ && ch !== 47 /* / */ && !isLetter(ch)) {
+            return false
+        }
+        match = state.src.slice(pos).match(HTML_TAG_RE)
+        if (!match) {
+            return false
+        }
+        if (!silent) {
+            token = state.push('html_inline', '', 0)
+            token.content = state.src.slice(pos, pos + match[0].length)
+        }
+        state.pos += match[0].length
+        return true
+    }
+    var has = utils.has
+    var isValidEntityCode = utils.isValidEntityCode
+    var fromCodePoint = utils.fromCodePoint
+    var DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i
+    var NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i
+    var entity = function entity(state, silent) {
+        var ch,
+            code,
+            match,
+            pos = state.pos,
+            max = state.posMax
+        if (state.src.charCodeAt(pos) !== 38 /* & */) {
+            return false
+        }
+        if (pos + 1 < max) {
+            ch = state.src.charCodeAt(pos + 1)
+            if (ch === 35 /* # */) {
+                match = state.src.slice(pos).match(DIGITAL_RE)
+                if (match) {
+                    if (!silent) {
+                        code =
+                            match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)
+                        state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(65533)
+                    }
+                    state.pos += match[0].length
+                    return true
+                }
+            } else {
+                match = state.src.slice(pos).match(NAMED_RE)
+                if (match) {
+                    if (has(entities, match[1])) {
+                        if (!silent) {
+                            state.pending += entities[match[1]]
+                        }
+                        state.pos += match[0].length
+                        return true
+                    }
+                }
+            }
+        }
+        if (!silent) {
+            state.pending += '&'
+        }
+        state.pos++
+        return true
+    }
+    // For each opening emphasis-like marker find a matching closing one
+    function processDelimiters(state, delimiters) {
+        var closerIdx,
+            openerIdx,
+            closer,
+            opener,
+            minOpenerIdx,
+            newMinOpenerIdx,
+            isOddMatch,
+            lastJump,
+            openersBottom = {},
+            max = delimiters.length
+        for (closerIdx = 0; closerIdx < max; closerIdx++) {
+            closer = delimiters[closerIdx]
+            // Length is only used for emphasis-specific "rule of 3",
+            // if it's not defined (in strikethrough or 3rd party plugins),
+            // we can default it to 0 to disable those checks.
+
+            closer.length = closer.length || 0
+            if (!closer.close) continue
+            // Previously calculated lower bounds (previous fails)
+            // for each marker, each delimiter length modulo 3,
+            // and for whether this closer can be an opener;
+            // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460
+            if (!openersBottom.hasOwnProperty(closer.marker)) {
+                openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]
+            }
+            minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]
+            openerIdx = closerIdx - closer.jump - 1
+            // avoid crash if `closer.jump` is pointing outside of the array, see #742
+            if (openerIdx < -1) openerIdx = -1
+            newMinOpenerIdx = openerIdx
+            for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {
+                opener = delimiters[openerIdx]
+                if (opener.marker !== closer.marker) continue
+                if (opener.open && opener.end < 0) {
+                    isOddMatch = false
+                    // from spec:
+
+                    // If one of the delimiters can both open and close emphasis, then the
+                    // sum of the lengths of the delimiter runs containing the opening and
+                    // closing delimiters must not be a multiple of 3 unless both lengths
+                    // are multiples of 3.
+
+                    if (opener.close || closer.open) {
+                        if ((opener.length + closer.length) % 3 === 0) {
+                            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {
+                                isOddMatch = true
+                            }
+                        }
+                    }
+                    if (!isOddMatch) {
+                        // If previous delimiter cannot be an opener, we can safely skip
+                        // the entire sequence in future checks. This is required to make
+                        // sure algorithm has linear complexity (see *_*_*_*_*_... case).
+                        lastJump =
+                            openerIdx > 0 && !delimiters[openerIdx - 1].open ? delimiters[openerIdx - 1].jump + 1 : 0
+                        closer.jump = closerIdx - openerIdx + lastJump
+                        closer.open = false
+                        opener.end = closerIdx
+                        opener.jump = lastJump
+                        opener.close = false
+                        newMinOpenerIdx = -1
+                        break
+                    }
+                }
+            }
+            if (newMinOpenerIdx !== -1) {
+                // If match for this delimiter run failed, we want to set lower bound for
+                // future lookups. This is required to make sure algorithm has linear
+                // complexity.
+                // See details here:
+                // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442
+                openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx
+            }
+        }
+    }
+    var balance_pairs = function link_pairs(state) {
+        var curr,
+            tokens_meta = state.tokens_meta,
+            max = state.tokens_meta.length
+        processDelimiters(state, state.delimiters)
+        for (curr = 0; curr < max; curr++) {
+            if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
+                processDelimiters(state, tokens_meta[curr].delimiters)
+            }
+        }
+    }
+    // Clean up tokens after emphasis and strikethrough postprocessing:
+    var text_collapse = function text_collapse(state) {
+        var curr,
+            last,
+            level = 0,
+            tokens = state.tokens,
+            max = state.tokens.length
+        for (curr = last = 0; curr < max; curr++) {
+            // re-calculate levels after emphasis/strikethrough turns some text nodes
+            // into opening/closing tags
+            if (tokens[curr].nesting < 0) level--
+            // closing tag
+            tokens[curr].level = level
+            if (tokens[curr].nesting > 0) level++
+            // opening tag
+            if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {
+                // collapse two adjacent text nodes
+                tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content
+            } else {
+                if (curr !== last) {
+                    tokens[last] = tokens[curr]
+                }
+                last++
+            }
+        }
+        if (curr !== last) {
+            tokens.length = last
+        }
+    }
+    var isWhiteSpace = utils.isWhiteSpace
+    var isPunctChar = utils.isPunctChar
+    var isMdAsciiPunct = utils.isMdAsciiPunct
+    function StateInline(src, md, env, outTokens) {
+        this.src = src
+        this.env = env
+        this.md = md
+        this.tokens = outTokens
+        this.tokens_meta = Array(outTokens.length)
+        this.pos = 0
+        this.posMax = this.src.length
+        this.level = 0
+        this.pending = ''
+        this.pendingLevel = 0
+        // Stores { start: end } pairs. Useful for backtrack
+        // optimization of pairs parse (emphasis, strikes).
+        this.cache = {}
+        // List of emphasis-like delimiters for current tag
+        this.delimiters = []
+        // Stack of delimiter lists for upper level tags
+        this._prev_delimiters = []
+        // backtick length => last seen position
+        this.backticks = {}
+        this.backticksScanned = false
+    }
+    // Flush pending text
+
+    StateInline.prototype.pushPending = function () {
+        var token$1 = new token('text', '', 0)
+        token$1.content = this.pending
+        token$1.level = this.pendingLevel
+        this.tokens.push(token$1)
+        this.pending = ''
+        return token$1
+    }
+    // Push new token to "stream".
+    // If pending text exists - flush it as text token
+
+    StateInline.prototype.push = function (type, tag, nesting) {
+        if (this.pending) {
+            this.pushPending()
+        }
+        var token$1 = new token(type, tag, nesting)
+        var token_meta = null
+        if (nesting < 0) {
+            // closing tag
+            this.level--
+            this.delimiters = this._prev_delimiters.pop()
+        }
+        token$1.level = this.level
+        if (nesting > 0) {
+            // opening tag
+            this.level++
+            this._prev_delimiters.push(this.delimiters)
+            this.delimiters = []
+            token_meta = {
+                delimiters: this.delimiters,
+            }
+        }
+        this.pendingLevel = this.level
+        this.tokens.push(token$1)
+        this.tokens_meta.push(token_meta)
+        return token$1
+    }
+    // Scan a sequence of emphasis-like markers, and determine whether
+    // it can start an emphasis sequence or end an emphasis sequence.
+
+    //  - start - position to scan from (it should point at a valid marker);
+    //  - canSplitWord - determine if these markers can be found inside a word
+
+    StateInline.prototype.scanDelims = function (start, canSplitWord) {
+        var pos = start,
+            lastChar,
+            nextChar,
+            count,
+            can_open,
+            can_close,
+            isLastWhiteSpace,
+            isLastPunctChar,
+            isNextWhiteSpace,
+            isNextPunctChar,
+            left_flanking = true,
+            right_flanking = true,
+            max = this.posMax,
+            marker = this.src.charCodeAt(start)
+        // treat beginning of the line as a whitespace
+        lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 32
+        while (pos < max && this.src.charCodeAt(pos) === marker) {
+            pos++
+        }
+        count = pos - start
+        // treat end of the line as a whitespace
+        nextChar = pos < max ? this.src.charCodeAt(pos) : 32
+        isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))
+        isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))
+        isLastWhiteSpace = isWhiteSpace(lastChar)
+        isNextWhiteSpace = isWhiteSpace(nextChar)
+        if (isNextWhiteSpace) {
+            left_flanking = false
+        } else if (isNextPunctChar) {
+            if (!(isLastWhiteSpace || isLastPunctChar)) {
+                left_flanking = false
+            }
+        }
+        if (isLastWhiteSpace) {
+            right_flanking = false
+        } else if (isLastPunctChar) {
+            if (!(isNextWhiteSpace || isNextPunctChar)) {
+                right_flanking = false
+            }
+        }
+        if (!canSplitWord) {
+            can_open = left_flanking && (!right_flanking || isLastPunctChar)
+            can_close = right_flanking && (!left_flanking || isNextPunctChar)
+        } else {
+            can_open = left_flanking
+            can_close = right_flanking
+        }
+        return {
+            can_open: can_open,
+            can_close: can_close,
+            length: count,
+        }
+    }
+    // re-export Token class to use in block rules
+    StateInline.prototype.Token = token
+    var state_inline = StateInline
+    ////////////////////////////////////////////////////////////////////////////////
+    // Parser rules
+    var _rules = [
+        ['text', text],
+        ['newline', newline],
+        ['escape', _escape],
+        ['backticks', backticks],
+        ['strikethrough', strikethrough.tokenize],
+        ['emphasis', emphasis.tokenize],
+        ['link', link],
+        ['image', image],
+        ['autolink', autolink],
+        ['html_inline', html_inline],
+        ['entity', entity],
+    ]
+    var _rules2 = [
+        ['balance_pairs', balance_pairs],
+        ['strikethrough', strikethrough.postProcess],
+        ['emphasis', emphasis.postProcess],
+        ['text_collapse', text_collapse],
+    ]
+    /**
+     * new ParserInline()
+     **/ function ParserInline() {
+        var i
+        /**
+         * ParserInline#ruler -> Ruler
+         *
+         * [[Ruler]] instance. Keep configuration of inline rules.
+         **/ this.ruler = new ruler()
+        for (i = 0; i < _rules.length; i++) {
+            this.ruler.push(_rules[i][0], _rules[i][1])
+        }
+        /**
+         * ParserInline#ruler2 -> Ruler
+         *
+         * [[Ruler]] instance. Second ruler used for post-processing
+         * (e.g. in emphasis-like rules).
+         **/ this.ruler2 = new ruler()
+        for (i = 0; i < _rules2.length; i++) {
+            this.ruler2.push(_rules2[i][0], _rules2[i][1])
+        }
+    }
+    // Skip single token by running all rules in validation mode;
+    // returns `true` if any rule reported success
+
+    ParserInline.prototype.skipToken = function (state) {
+        var ok,
+            i,
+            pos = state.pos,
+            rules = this.ruler.getRules(''),
+            len = rules.length,
+            maxNesting = state.md.options.maxNesting,
+            cache = state.cache
+        if (typeof cache[pos] !== 'undefined') {
+            state.pos = cache[pos]
+            return
+        }
+        if (state.level < maxNesting) {
+            for (i = 0; i < len; i++) {
+                // Increment state.level and decrement it later to limit recursion.
+                // It's harmless to do here, because no tokens are created. But ideally,
+                // we'd need a separate private state variable for this purpose.
+                state.level++
+                ok = rules[i](state, true)
+                state.level--
+                if (ok) {
+                    break
+                }
+            }
+        } else {
+            // Too much nesting, just skip until the end of the paragraph.
+            // NOTE: this will cause links to behave incorrectly in the following case,
+            //       when an amount of `[` is exactly equal to `maxNesting + 1`:
+            //       [[[[[[[[[[[[[[[[[[[[[foo]()
+            // TODO: remove this workaround when CM standard will allow nested links
+            //       (we can replace it by preventing links from being parsed in
+            //       validation mode)
+            state.pos = state.posMax
+        }
+        if (!ok) {
+            state.pos++
+        }
+        cache[pos] = state.pos
+    }
+    // Generate tokens for input range
+
+    ParserInline.prototype.tokenize = function (state) {
+        var ok,
+            i,
+            rules = this.ruler.getRules(''),
+            len = rules.length,
+            end = state.posMax,
+            maxNesting = state.md.options.maxNesting
+        while (state.pos < end) {
+            // Try all possible rules.
+            // On success, rule should:
+            // - update `state.pos`
+            // - update `state.tokens`
+            // - return true
+            if (state.level < maxNesting) {
+                for (i = 0; i < len; i++) {
+                    ok = rules[i](state, false)
+                    if (ok) {
+                        break
+                    }
+                }
+            }
+            if (ok) {
+                if (state.pos >= end) {
+                    break
+                }
+                continue
+            }
+            state.pending += state.src[state.pos++]
+        }
+        if (state.pending) {
+            state.pushPending()
+        }
+    }
+    /**
+     * ParserInline.parse(str, md, env, outTokens)
+     *
+     * Process input string and push inline tokens into `outTokens`
+     **/ ParserInline.prototype.parse = function (str, md, env, outTokens) {
+        var i, rules, len
+        var state = new this.State(str, md, env, outTokens)
+        this.tokenize(state)
+        rules = this.ruler2.getRules('')
+        len = rules.length
+        for (i = 0; i < len; i++) {
+            rules[i](state)
+        }
+    }
+    ParserInline.prototype.State = state_inline
+    var parser_inline = ParserInline
+    var re = function (opts) {
+        var re = {}
+        // Use direct extract instead of `regenerate` to reduse browserified size
+        re.src_Any = regex$3.source
+        re.src_Cc = regex$2.source
+        re.src_Z = regex.source
+        re.src_P = regex$4.source
+        // \p{\Z\P\Cc\CF} (white spaces + control + format + punctuation)
+        re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')
+        // \p{\Z\Cc} (white spaces + control)
+        re.src_ZCc = [re.src_Z, re.src_Cc].join('|')
+        // Experimental. List of chars, completely prohibited in links
+        // because can separate it from other part of text
+        var text_separators = '[><\uff5c]'
+        // All possible word characters (everything without punctuation, spaces & controls)
+        // Defined via punctuation & spaces to save space
+        // Should be something like \p{\L\N\S\M} (\w but without `_`)
+        re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'
+        // The same as abothe but without [0-9]
+        // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';
+        ////////////////////////////////////////////////////////////////////////////////
+        re.src_ip4 = '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'
+        // Prohibit any of "@/[]()" in user/pass to avoid wrong domain fetch.
+        re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\[\\]()]).)+@)?'
+        re.src_port = '(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?'
+        re.src_host_terminator =
+            '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\d|\\.-|\\.(?!$|' + re.src_ZPCc + '))'
+        re.src_path =
+            '(?:' +
+            '[/?#]' +
+            '(?:' +
+            '(?!' +
+            re.src_ZCc +
+            '|' +
+            text_separators +
+            '|[()[\\]{}.,"\'?!\\-]).|' +
+            '\\[(?:(?!' +
+            re.src_ZCc +
+            '|\\]).)*\\]|' +
+            '\\((?:(?!' +
+            re.src_ZCc +
+            '|[)]).)*\\)|' +
+            '\\{(?:(?!' +
+            re.src_ZCc +
+            '|[}]).)*\\}|' +
+            '\\"(?:(?!' +
+            re.src_ZCc +
+            '|["]).)+\\"|' +
+            "\\'(?:(?!" +
+            re.src_ZCc +
+            "|[']).)+\\'|" +
+            "\\'(?=" +
+            re.src_pseudo_letter +
+            '|[-]).|' + // allow `I'm_king` if no pair found
+            '\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in "google search" links (#66, #81).
+            // github has ... in commit range links,
+            // Restrict to
+            // - english
+            // - percent-encoded
+            // - parts of file path
+            // - params separator
+            // until more examples found.
+            '\\.(?!' +
+            re.src_ZCc +
+            '|[.]).|' +
+            (opts && opts['---'] ? '\\-(?!--(?:[^-]|$))(?:-*)|' : '\\-+|') +
+            '\\,(?!' +
+            re.src_ZCc +
+            ').|' + // allow `,,,` in paths
+            '\\!+(?!' +
+            re.src_ZCc +
+            '|[!]).|' + // allow `!!!` in paths, but not at the end
+            '\\?(?!' +
+            re.src_ZCc +
+            '|[?]).' +
+            ')+' +
+            '|\\/' +
+            ')?'
+        // Allow anything in markdown spec, forbid quote (") at the first position
+        // because emails enclosed in quotes are far more common
+        re.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*'
+        re.src_xn = 'xn--[a-z0-9\\-]{1,59}'
+        // More to read about domain names
+        // http://serverfault.com/questions/638260/
+        re.src_domain_root =
+            // Allow letters & digits (http://test1)
+            '(?:' + re.src_xn + '|' + re.src_pseudo_letter + '{1,63}' + ')'
+        re.src_domain =
+            '(?:' +
+            re.src_xn +
+            '|' +
+            '(?:' +
+            re.src_pseudo_letter +
+            ')' +
+            '|' +
+            '(?:' +
+            re.src_pseudo_letter +
+            '(?:-|' +
+            re.src_pseudo_letter +
+            '){0,61}' +
+            re.src_pseudo_letter +
+            ')' +
+            ')'
+        re.src_host =
+            '(?:' +
+            // Don't need IP check, because digits are already allowed in normal domain names
+            //   src_ip4 +
+            // '|' +
+            '(?:(?:(?:' +
+            re.src_domain +
+            ')\\.)*' +
+            re.src_domain /*_root*/ +
+            ')' +
+            ')'
+        re.tpl_host_fuzzy = '(?:' + re.src_ip4 + '|' + '(?:(?:(?:' + re.src_domain + ')\\.)+(?:%TLDS%))' + ')'
+        re.tpl_host_no_ip_fuzzy = '(?:(?:(?:' + re.src_domain + ')\\.)+(?:%TLDS%))'
+        re.src_host_strict = re.src_host + re.src_host_terminator
+        re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator
+        re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator
+        re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator
+        re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator
+        ////////////////////////////////////////////////////////////////////////////////
+        // Main rules
+        // Rude test fuzzy links by host, for quick deny
+        re.tpl_host_fuzzy_test = 'localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'
+        re.tpl_email_fuzzy =
+            '(^|' +
+            text_separators +
+            '|"|\\(|' +
+            re.src_ZCc +
+            ')' +
+            '(' +
+            re.src_email_name +
+            '@' +
+            re.tpl_host_fuzzy_strict +
+            ')'
+        re.tpl_link_fuzzy =
+            // Fuzzy link can't be prepended with .:/\- and non punctuation.
+            // but can start with > (markdown blockquote)
+            '(^|(?![.:/\\-_@])(?:[$+<=>^`|\uff5c]|' +
+            re.src_ZPCc +
+            '))' +
+            '((?![$+<=>^`|\uff5c])' +
+            re.tpl_host_port_fuzzy_strict +
+            re.src_path +
+            ')'
+        re.tpl_link_no_ip_fuzzy =
+            // Fuzzy link can't be prepended with .:/\- and non punctuation.
+            // but can start with > (markdown blockquote)
+            '(^|(?![.:/\\-_@])(?:[$+<=>^`|\uff5c]|' +
+            re.src_ZPCc +
+            '))' +
+            '((?![$+<=>^`|\uff5c])' +
+            re.tpl_host_port_no_ip_fuzzy_strict +
+            re.src_path +
+            ')'
+        return re
+    }
+    ////////////////////////////////////////////////////////////////////////////////
+    // Helpers
+    // Merge objects
+
+    function assign(obj /*from1, from2, from3, ...*/) {
+        var sources = Array.prototype.slice.call(arguments, 1)
+        sources.forEach(function (source) {
+            if (!source) {
+                return
+            }
+            Object.keys(source).forEach(function (key) {
+                obj[key] = source[key]
+            })
+        })
+        return obj
+    }
+    function _class(obj) {
+        return Object.prototype.toString.call(obj)
+    }
+    function isString(obj) {
+        return _class(obj) === '[object String]'
+    }
+    function isObject(obj) {
+        return _class(obj) === '[object Object]'
+    }
+    function isRegExp(obj) {
+        return _class(obj) === '[object RegExp]'
+    }
+    function isFunction(obj) {
+        return _class(obj) === '[object Function]'
+    }
+    function escapeRE(str) {
+        return str.replace(/[.?*+^$[\]\\(){}|-]/g, '\\$&')
+    }
+    ////////////////////////////////////////////////////////////////////////////////
+    var defaultOptions = {
+        fuzzyLink: true,
+        fuzzyEmail: true,
+        fuzzyIP: false,
+    }
+    function isOptionsObj(obj) {
+        return Object.keys(obj || {}).reduce(function (acc, k) {
+            return acc || defaultOptions.hasOwnProperty(k)
+        }, false)
+    }
+    var defaultSchemas = {
+        'http:': {
+            validate: function (text, pos, self) {
+                var tail = text.slice(pos)
+                if (!self.re.http) {
+                    // compile lazily, because "host"-containing variables can change on tlds update.
+                    self.re.http = new RegExp(
+                        '^\\/\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path,
+                        'i',
+                    )
+                }
+                if (self.re.http.test(tail)) {
+                    return tail.match(self.re.http)[0].length
+                }
+                return 0
+            },
+        },
+        'https:': 'http:',
+        'ftp:': 'http:',
+        '//': {
+            validate: function (text, pos, self) {
+                var tail = text.slice(pos)
+                if (!self.re.no_http) {
+                    // compile lazily, because "host"-containing variables can change on tlds update.
+                    self.re.no_http = new RegExp(
+                        '^' +
+                            self.re.src_auth +
+                            // Don't allow single-level domains, because of false positives like '//test'
+                            // with code comments
+                            '(?:localhost|(?:(?:' +
+                            self.re.src_domain +
+                            ')\\.)+' +
+                            self.re.src_domain_root +
+                            ')' +
+                            self.re.src_port +
+                            self.re.src_host_terminator +
+                            self.re.src_path,
+                        'i',
+                    )
+                }
+                if (self.re.no_http.test(tail)) {
+                    // should not be `://` & `///`, that protects from errors in protocol name
+                    if (pos >= 3 && text[pos - 3] === ':') {
+                        return 0
+                    }
+                    if (pos >= 3 && text[pos - 3] === '/') {
+                        return 0
+                    }
+                    return tail.match(self.re.no_http)[0].length
+                }
+                return 0
+            },
+        },
+        'mailto:': {
+            validate: function (text, pos, self) {
+                var tail = text.slice(pos)
+                if (!self.re.mailto) {
+                    self.re.mailto = new RegExp('^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i')
+                }
+                if (self.re.mailto.test(tail)) {
+                    return tail.match(self.re.mailto)[0].length
+                }
+                return 0
+            },
+        },
+    }
+    /*eslint-disable max-len*/
+    // RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)
+    var tlds_2ch_src_re =
+        'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'
+    // DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead
+    var tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444'.split(
+        '|',
+    )
+    /*eslint-enable max-len*/
+    ////////////////////////////////////////////////////////////////////////////////
+    function resetScanCache(self) {
+        self.__index__ = -1
+        self.__text_cache__ = ''
+    }
+    function createValidator(re) {
+        return function (text, pos) {
+            var tail = text.slice(pos)
+            if (re.test(tail)) {
+                return tail.match(re)[0].length
+            }
+            return 0
+        }
+    }
+    function createNormalizer() {
+        return function (match, self) {
+            self.normalize(match)
+        }
+    }
+    // Schemas compiler. Build regexps.
+
+    function compile(self) {
+        // Load & clone RE patterns.
+        var re$1 = (self.re = re(self.__opts__))
+        // Define dynamic patterns
+        var tlds = self.__tlds__.slice()
+        self.onCompile()
+        if (!self.__tlds_replaced__) {
+            tlds.push(tlds_2ch_src_re)
+        }
+        tlds.push(re$1.src_xn)
+        re$1.src_tlds = tlds.join('|')
+        function untpl(tpl) {
+            return tpl.replace('%TLDS%', re$1.src_tlds)
+        }
+        re$1.email_fuzzy = RegExp(untpl(re$1.tpl_email_fuzzy), 'i')
+        re$1.link_fuzzy = RegExp(untpl(re$1.tpl_link_fuzzy), 'i')
+        re$1.link_no_ip_fuzzy = RegExp(untpl(re$1.tpl_link_no_ip_fuzzy), 'i')
+        re$1.host_fuzzy_test = RegExp(untpl(re$1.tpl_host_fuzzy_test), 'i')
+
+        // Compile each schema
+
+        var aliases = []
+        self.__compiled__ = {}
+        // Reset compiled data
+        function schemaError(name, val) {
+            throw new Error('(LinkifyIt) Invalid schema "' + name + '": ' + val)
+        }
+        Object.keys(self.__schemas__).forEach(function (name) {
+            var val = self.__schemas__[name]
+            // skip disabled methods
+            if (val === null) {
+                return
+            }
+            var compiled = {
+                validate: null,
+                link: null,
+            }
+            self.__compiled__[name] = compiled
+            if (isObject(val)) {
+                if (isRegExp(val.validate)) {
+                    compiled.validate = createValidator(val.validate)
+                } else if (isFunction(val.validate)) {
+                    compiled.validate = val.validate
+                } else {
+                    schemaError(name, val)
+                }
+                if (isFunction(val.normalize)) {
+                    compiled.normalize = val.normalize
+                } else if (!val.normalize) {
+                    compiled.normalize = createNormalizer()
+                } else {
+                    schemaError(name, val)
+                }
+                return
+            }
+            if (isString(val)) {
+                aliases.push(name)
+                return
+            }
+            schemaError(name, val)
+        })
+
+        // Compile postponed aliases
+
+        aliases.forEach(function (alias) {
+            if (!self.__compiled__[self.__schemas__[alias]]) {
+                // Silently fail on missed schemas to avoid errons on disable.
+                // schemaError(alias, self.__schemas__[alias]);
+                return
+            }
+            self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate
+            self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize
+        })
+
+        // Fake record for guessed links
+
+        self.__compiled__[''] = {
+            validate: null,
+            normalize: createNormalizer(),
+        }
+
+        // Build schema condition
+
+        var slist = Object.keys(self.__compiled__)
+            .filter(function (name) {
+                // Filter disabled & fake schemas
+                return name.length > 0 && self.__compiled__[name]
+            })
+            .map(escapeRE)
+            .join('|')
+        // (?!_) cause 1.5x slowdown
+        self.re.schema_test = RegExp('(^|(?!_)(?:[><\uff5c]|' + re$1.src_ZPCc + '))(' + slist + ')', 'i')
+        self.re.schema_search = RegExp('(^|(?!_)(?:[><\uff5c]|' + re$1.src_ZPCc + '))(' + slist + ')', 'ig')
+        self.re.pretest = RegExp('(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@', 'i')
+
+        // Cleanup
+
+        resetScanCache(self)
+    }
+    /**
+     * class Match
+     *
+     * Match result. Single element of array, returned by [[LinkifyIt#match]]
+     **/ function Match(self, shift) {
+        var start = self.__index__,
+            end = self.__last_index__,
+            text = self.__text_cache__.slice(start, end)
+        /**
+         * Match#schema -> String
+         *
+         * Prefix (protocol) for matched string.
+         **/ this.schema = self.__schema__.toLowerCase()
+        /**
+         * Match#index -> Number
+         *
+         * First position of matched string.
+         **/ this.index = start + shift
+        /**
+         * Match#lastIndex -> Number
+         *
+         * Next position after matched string.
+         **/ this.lastIndex = end + shift
+        /**
+         * Match#raw -> String
+         *
+         * Matched string.
+         **/ this.raw = text
+        /**
+         * Match#text -> String
+         *
+         * Notmalized text of matched string.
+         **/ this.text = text
+        /**
+         * Match#url -> String
+         *
+         * Normalized url of matched string.
+         **/ this.url = text
+    }
+    function createMatch(self, shift) {
+        var match = new Match(self, shift)
+        self.__compiled__[match.schema].normalize(match, self)
+        return match
+    }
+    /**
+     * class LinkifyIt
+     **/
+    /**
+     * new LinkifyIt(schemas, options)
+     * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)
+     * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }
+     *
+     * Creates new linkifier instance with optional additional schemas.
+     * Can be called without `new` keyword for convenience.
+     *
+     * By default understands:
+     *
+     * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links
+     * - "fuzzy" links and emails (example.com, foo@bar.com).
+     *
+     * `schemas` is an object, where each key/value describes protocol/rule:
+     *
+     * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`
+     *   for example). `linkify-it` makes shure that prefix is not preceeded with
+     *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.
+     * - __value__ - rule to check tail after link prefix
+     *   - _String_ - just alias to existing rule
+     *   - _Object_
+     *     - _validate_ - validator function (should return matched length on success),
+     *       or `RegExp`.
+     *     - _normalize_ - optional function to normalize text & url of matched result
+     *       (for example, for @twitter mentions).
+     *
+     * `options`:
+     *
+     * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.
+     * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts
+     *   like version numbers. Default `false`.
+     * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.
+     *
+     **/ function LinkifyIt(schemas, options) {
+        if (!(this instanceof LinkifyIt)) {
+            return new LinkifyIt(schemas, options)
+        }
+        if (!options) {
+            if (isOptionsObj(schemas)) {
+                options = schemas
+                schemas = {}
+            }
+        }
+        this.__opts__ = assign({}, defaultOptions, options)
+        // Cache last tested result. Used to skip repeating steps on next `match` call.
+        this.__index__ = -1
+        this.__last_index__ = -1
+        // Next scan position
+        this.__schema__ = ''
+        this.__text_cache__ = ''
+        this.__schemas__ = assign({}, defaultSchemas, schemas)
+        this.__compiled__ = {}
+        this.__tlds__ = tlds_default
+        this.__tlds_replaced__ = false
+        this.re = {}
+        compile(this)
+    }
+    /** chainable
+     * LinkifyIt#add(schema, definition)
+     * - schema (String): rule name (fixed pattern prefix)
+     * - definition (String|RegExp|Object): schema definition
+     *
+     * Add new rule definition. See constructor description for details.
+     **/ LinkifyIt.prototype.add = function add(schema, definition) {
+        this.__schemas__[schema] = definition
+        compile(this)
+        return this
+    }
+    /** chainable
+     * LinkifyIt#set(options)
+     * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }
+     *
+     * Set recognition options for links without schema.
+     **/ LinkifyIt.prototype.set = function set(options) {
+        this.__opts__ = assign(this.__opts__, options)
+        return this
+    }
+    /**
+     * LinkifyIt#test(text) -> Boolean
+     *
+     * Searches linkifiable pattern and returns `true` on success or `false` on fail.
+     **/ LinkifyIt.prototype.test = function test(text) {
+        // Reset scan cache
+        this.__text_cache__ = text
+        this.__index__ = -1
+        if (!text.length) {
+            return false
+        }
+        var m, ml, me, len, shift, next, re, tld_pos, at_pos
+        // try to scan for link with schema - that's the most simple rule
+        if (this.re.schema_test.test(text)) {
+            re = this.re.schema_search
+            re.lastIndex = 0
+            while ((m = re.exec(text)) !== null) {
+                len = this.testSchemaAt(text, m[2], re.lastIndex)
+                if (len) {
+                    this.__schema__ = m[2]
+                    this.__index__ = m.index + m[1].length
+                    this.__last_index__ = m.index + m[0].length + len
+                    break
+                }
+            }
+        }
+        if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {
+            // guess schemaless links
+            tld_pos = text.search(this.re.host_fuzzy_test)
+            if (tld_pos >= 0) {
+                // if tld is located after found link - no need to check fuzzy pattern
+                if (this.__index__ < 0 || tld_pos < this.__index__) {
+                    if (
+                        (ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !==
+                        null
+                    ) {
+                        shift = ml.index + ml[1].length
+                        if (this.__index__ < 0 || shift < this.__index__) {
+                            this.__schema__ = ''
+                            this.__index__ = shift
+                            this.__last_index__ = ml.index + ml[0].length
+                        }
+                    }
+                }
+            }
+        }
+        if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {
+            // guess schemaless emails
+            at_pos = text.indexOf('@')
+            if (at_pos >= 0) {
+                // We can't skip this check, because this cases are possible:
+                // 192.168.1.1@gmail.com, my.in@example.com
+                if ((me = text.match(this.re.email_fuzzy)) !== null) {
+                    shift = me.index + me[1].length
+                    next = me.index + me[0].length
+                    if (
+                        this.__index__ < 0 ||
+                        shift < this.__index__ ||
+                        (shift === this.__index__ && next > this.__last_index__)
+                    ) {
+                        this.__schema__ = 'mailto:'
+                        this.__index__ = shift
+                        this.__last_index__ = next
+                    }
+                }
+            }
+        }
+        return this.__index__ >= 0
+    }
+    /**
+     * LinkifyIt#pretest(text) -> Boolean
+     *
+     * Very quick check, that can give false positives. Returns true if link MAY BE
+     * can exists. Can be used for speed optimization, when you need to check that
+     * link NOT exists.
+     **/ LinkifyIt.prototype.pretest = function pretest(text) {
+        return this.re.pretest.test(text)
+    }
+    /**
+     * LinkifyIt#testSchemaAt(text, name, position) -> Number
+     * - text (String): text to scan
+     * - name (String): rule (schema) name
+     * - position (Number): text offset to check from
+     *
+     * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly
+     * at given position. Returns length of found pattern (0 on fail).
+     **/ LinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {
+        // If not supported schema check requested - terminate
+        if (!this.__compiled__[schema.toLowerCase()]) {
+            return 0
+        }
+        return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)
+    }
+    /**
+     * LinkifyIt#match(text) -> Array|null
+     *
+     * Returns array of found link descriptions or `null` on fail. We strongly
+     * recommend to use [[LinkifyIt#test]] first, for best speed.
+     *
+     * ##### Result match description
+     *
+     * - __schema__ - link schema, can be empty for fuzzy links, or `//` for
+     *   protocol-neutral  links.
+     * - __index__ - offset of matched text
+     * - __lastIndex__ - index of next char after mathch end
+     * - __raw__ - matched text
+     * - __text__ - normalized text
+     * - __url__ - link, generated from matched text
+     **/ LinkifyIt.prototype.match = function match(text) {
+        var shift = 0,
+            result = []
+        // Try to take previous element from cache, if .test() called before
+        if (this.__index__ >= 0 && this.__text_cache__ === text) {
+            result.push(createMatch(this, shift))
+            shift = this.__last_index__
+        }
+        // Cut head if cache was used
+        var tail = shift ? text.slice(shift) : text
+        // Scan string until end reached
+        while (this.test(tail)) {
+            result.push(createMatch(this, shift))
+            tail = tail.slice(this.__last_index__)
+            shift += this.__last_index__
+        }
+        if (result.length) {
+            return result
+        }
+        return null
+    }
+    /** chainable
+     * LinkifyIt#tlds(list [, keepOld]) -> this
+     * - list (Array): list of tlds
+     * - keepOld (Boolean): merge with current list if `true` (`false` by default)
+     *
+     * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)
+     * to avoid false positives. By default this algorythm used:
+     *
+     * - hostname with any 2-letter root zones are ok.
+     * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф
+     *   are ok.
+     * - encoded (`xn--...`) root zones are ok.
+     *
+     * If list is replaced, then exact match for 2-chars root zones will be checked.
+     **/ LinkifyIt.prototype.tlds = function tlds(list, keepOld) {
+        list = Array.isArray(list) ? list : [list]
+        if (!keepOld) {
+            this.__tlds__ = list.slice()
+            this.__tlds_replaced__ = true
+            compile(this)
+            return this
+        }
+        this.__tlds__ = this.__tlds__
+            .concat(list)
+            .sort()
+            .filter(function (el, idx, arr) {
+                return el !== arr[idx - 1]
+            })
+            .reverse()
+        compile(this)
+        return this
+    }
+    /**
+     * LinkifyIt#normalize(match)
+     *
+     * Default normalizer (if schema does not define it's own).
+     **/ LinkifyIt.prototype.normalize = function normalize(match) {
+        // Do minimal possible changes by default. Need to collect feedback prior
+        // to move forward https://github.com/markdown-it/linkify-it/issues/1
+        if (!match.schema) {
+            match.url = 'http://' + match.url
+        }
+        if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {
+            match.url = 'mailto:' + match.url
+        }
+    }
+    /**
+     * LinkifyIt#onCompile()
+     *
+     * Override to modify basic RegExp-s.
+     **/ LinkifyIt.prototype.onCompile = function onCompile() {}
+    var linkifyIt = LinkifyIt
+    /*! https://mths.be/punycode v1.4.1 by @mathias */
+    /** Highest positive signed 32-bit float value */ var maxInt = 2147483647
+    // aka. 0x7FFFFFFF or 2^31-1
+    /** Bootstring parameters */ var base = 36
+    var tMin = 1
+    var tMax = 26
+    var skew = 38
+    var damp = 700
+    var initialBias = 72
+    var initialN = 128
+    // 0x80
+    var delimiter = '-'
+    // '\x2D'
+    /** Regular expressions */ var regexPunycode = /^xn--/
+    var regexNonASCII = /[^\x20-\x7E]/
+    // unprintable ASCII chars + non-ASCII chars
+    var regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g
+    // RFC 3490 separators
+    /** Error messages */ var errors = {
+        overflow: 'Overflow: input needs wider integers to process',
+        'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
+        'invalid-input': 'Invalid input',
+    }
+    /** Convenience shortcuts */ var baseMinusTMin = base - tMin
+    var floor = Math.floor
+    var stringFromCharCode = String.fromCharCode
+    /*--------------------------------------------------------------------------*/
+    /**
+     * A generic error utility function.
+     * @private
+     * @param {String} type The error type.
+     * @returns {Error} Throws a `RangeError` with the applicable error message.
+     */ function error(type) {
+        throw new RangeError(errors[type])
+    }
+    /**
+     * A generic `Array#map` utility function.
+     * @private
+     * @param {Array} array The array to iterate over.
+     * @param {Function} callback The function that gets called for every array
+     * item.
+     * @returns {Array} A new array of values returned by the callback function.
+     */ function map(array, fn) {
+        var length = array.length
+        var result = []
+        while (length--) {
+            result[length] = fn(array[length])
+        }
+        return result
+    }
+    /**
+     * A simple `Array#map`-like wrapper to work with domain name strings or email
+     * addresses.
+     * @private
+     * @param {String} domain The domain name or email address.
+     * @param {Function} callback The function that gets called for every
+     * character.
+     * @returns {Array} A new string of characters returned by the callback
+     * function.
+     */ function mapDomain(string, fn) {
+        var parts = string.split('@')
+        var result = ''
+        if (parts.length > 1) {
+            // In email addresses, only the domain name should be punycoded. Leave
+            // the local part (i.e. everything up to `@`) intact.
+            result = parts[0] + '@'
+            string = parts[1]
+        }
+        // Avoid `split(regex)` for IE8 compatibility. See #17.
+        string = string.replace(regexSeparators, '.')
+        var labels = string.split('.')
+        var encoded = map(labels, fn).join('.')
+        return result + encoded
+    }
+    /**
+     * Creates an array containing the numeric code points of each Unicode
+     * character in the string. While JavaScript uses UCS-2 internally,
+     * this function will convert a pair of surrogate halves (each of which
+     * UCS-2 exposes as separate characters) into a single code point,
+     * matching UTF-16.
+     * @see `punycode.ucs2.encode`
+     * @see <https://mathiasbynens.be/notes/javascript-encoding>
+     * @memberOf punycode.ucs2
+     * @name decode
+     * @param {String} string The Unicode input string (UCS-2).
+     * @returns {Array} The new array of code points.
+     */ function ucs2decode(string) {
+        var output = [],
+            counter = 0,
+            length = string.length,
+            value,
+            extra
+        while (counter < length) {
+            value = string.charCodeAt(counter++)
+            if (value >= 55296 && value <= 56319 && counter < length) {
+                // high surrogate, and there is a next character
+                extra = string.charCodeAt(counter++)
+                if ((extra & 64512) == 56320) {
+                    // low surrogate
+                    output.push(((value & 1023) << 10) + (extra & 1023) + 65536)
+                } else {
+                    // unmatched surrogate; only append this code unit, in case the next
+                    // code unit is the high surrogate of a surrogate pair
+                    output.push(value)
+                    counter--
+                }
+            } else {
+                output.push(value)
+            }
+        }
+        return output
+    }
+    /**
+     * Creates a string based on an array of numeric code points.
+     * @see `punycode.ucs2.decode`
+     * @memberOf punycode.ucs2
+     * @name encode
+     * @param {Array} codePoints The array of numeric code points.
+     * @returns {String} The new Unicode string (UCS-2).
+     */ function ucs2encode(array) {
+        return map(array, function (value) {
+            var output = ''
+            if (value > 65535) {
+                value -= 65536
+                output += stringFromCharCode(((value >>> 10) & 1023) | 55296)
+                value = 56320 | (value & 1023)
+            }
+            output += stringFromCharCode(value)
+            return output
+        }).join('')
+    }
+    /**
+     * Converts a basic code point into a digit/integer.
+     * @see `digitToBasic()`
+     * @private
+     * @param {Number} codePoint The basic numeric code point value.
+     * @returns {Number} The numeric value of a basic code point (for use in
+     * representing integers) in the range `0` to `base - 1`, or `base` if
+     * the code point does not represent a value.
+     */ function basicToDigit(codePoint) {
+        if (codePoint - 48 < 10) {
+            return codePoint - 22
+        }
+        if (codePoint - 65 < 26) {
+            return codePoint - 65
+        }
+        if (codePoint - 97 < 26) {
+            return codePoint - 97
+        }
+        return base
+    }
+    /**
+     * Converts a digit/integer into a basic code point.
+     * @see `basicToDigit()`
+     * @private
+     * @param {Number} digit The numeric value of a basic code point.
+     * @returns {Number} The basic code point whose value (when used for
+     * representing integers) is `digit`, which needs to be in the range
+     * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
+     * used; else, the lowercase form is used. The behavior is undefined
+     * if `flag` is non-zero and `digit` has no uppercase form.
+     */ function digitToBasic(digit, flag) {
+        //  0..25 map to ASCII a..z or A..Z
+        // 26..35 map to ASCII 0..9
+        return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5)
+    }
+    /**
+     * Bias adaptation function as per section 3.4 of RFC 3492.
+     * https://tools.ietf.org/html/rfc3492#section-3.4
+     * @private
+     */ function adapt(delta, numPoints, firstTime) {
+        var k = 0
+        delta = firstTime ? floor(delta / damp) : delta >> 1
+        delta += floor(delta / numPoints)
+        for (; delta > (baseMinusTMin * tMax) >> 1; k += base) {
+            delta = floor(delta / baseMinusTMin)
+        }
+        return floor(k + ((baseMinusTMin + 1) * delta) / (delta + skew))
+    }
+    /**
+     * Converts a Punycode string of ASCII-only symbols to a string of Unicode
+     * symbols.
+     * @memberOf punycode
+     * @param {String} input The Punycode string of ASCII-only symbols.
+     * @returns {String} The resulting string of Unicode symbols.
+     */ function decode(input) {
+        // Don't use UCS-2
+        var output = [],
+            inputLength = input.length,
+            out,
+            i = 0,
+            n = initialN,
+            bias = initialBias,
+            basic,
+            j,
+            index,
+            oldi,
+            w,
+            k,
+            digit,
+            t,
+            /** Cached calculation results */
+            baseMinusT
+        // Handle the basic code points: let `basic` be the number of input code
+        // points before the last delimiter, or `0` if there is none, then copy
+        // the first basic code points to the output.
+        basic = input.lastIndexOf(delimiter)
+        if (basic < 0) {
+            basic = 0
+        }
+        for (j = 0; j < basic; ++j) {
+            // if it's not a basic code point
+            if (input.charCodeAt(j) >= 128) {
+                error('not-basic')
+            }
+            output.push(input.charCodeAt(j))
+        }
+        // Main decoding loop: start just after the last delimiter if any basic code
+        // points were copied; start at the beginning otherwise.
+        for (index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {
+            // `index` is the index of the next character to be consumed.
+            // Decode a generalized variable-length integer into `delta`,
+            // which gets added to `i`. The overflow checking is easier
+            // if we increase `i` as we go, then subtract off its starting
+            // value at the end to obtain `delta`.
+            for (oldi = i, w = 1, k = base; ; k += base) {
+                if (index >= inputLength) {
+                    error('invalid-input')
+                }
+                digit = basicToDigit(input.charCodeAt(index++))
+                if (digit >= base || digit > floor((maxInt - i) / w)) {
+                    error('overflow')
+                }
+                i += digit * w
+                t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias
+                if (digit < t) {
+                    break
+                }
+                baseMinusT = base - t
+                if (w > floor(maxInt / baseMinusT)) {
+                    error('overflow')
+                }
+                w *= baseMinusT
+            }
+            out = output.length + 1
+            bias = adapt(i - oldi, out, oldi == 0)
+            // `i` was supposed to wrap around from `out` to `0`,
+            // incrementing `n` each time, so we'll fix that now:
+            if (floor(i / out) > maxInt - n) {
+                error('overflow')
+            }
+            n += floor(i / out)
+            i %= out
+            // Insert `n` at position `i` of the output
+            output.splice(i++, 0, n)
+        }
+        return ucs2encode(output)
+    }
+    /**
+     * Converts a string of Unicode symbols (e.g. a domain name label) to a
+     * Punycode string of ASCII-only symbols.
+     * @memberOf punycode
+     * @param {String} input The string of Unicode symbols.
+     * @returns {String} The resulting Punycode string of ASCII-only symbols.
+     */ function encode(input) {
+        var n,
+            delta,
+            handledCPCount,
+            basicLength,
+            bias,
+            j,
+            m,
+            q,
+            k,
+            t,
+            currentValue,
+            output = [],
+            /** `inputLength` will hold the number of code points in `input`. */
+            inputLength,
+            /** Cached calculation results */
+            handledCPCountPlusOne,
+            baseMinusT,
+            qMinusT
+        // Convert the input in UCS-2 to Unicode
+        input = ucs2decode(input)
+        // Cache the length
+        inputLength = input.length
+        // Initialize the state
+        n = initialN
+        delta = 0
+        bias = initialBias
+        // Handle the basic code points
+        for (j = 0; j < inputLength; ++j) {
+            currentValue = input[j]
+            if (currentValue < 128) {
+                output.push(stringFromCharCode(currentValue))
+            }
+        }
+        handledCPCount = basicLength = output.length
+        // `handledCPCount` is the number of code points that have been handled;
+        // `basicLength` is the number of basic code points.
+        // Finish the basic string - if it is not empty - with a delimiter
+        if (basicLength) {
+            output.push(delimiter)
+        }
+        // Main encoding loop:
+        while (handledCPCount < inputLength) {
+            // All non-basic code points < n have been handled already. Find the next
+            // larger one:
+            for (m = maxInt, j = 0; j < inputLength; ++j) {
+                currentValue = input[j]
+                if (currentValue >= n && currentValue < m) {
+                    m = currentValue
+                }
+            }
+            // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
+            // but guard against overflow
+            handledCPCountPlusOne = handledCPCount + 1
+            if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
+                error('overflow')
+            }
+            delta += (m - n) * handledCPCountPlusOne
+            n = m
+            for (j = 0; j < inputLength; ++j) {
+                currentValue = input[j]
+                if (currentValue < n && ++delta > maxInt) {
+                    error('overflow')
+                }
+                if (currentValue == n) {
+                    // Represent delta as a generalized variable-length integer
+                    for (q = delta, k = base; ; k += base) {
+                        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias
+                        if (q < t) {
+                            break
+                        }
+                        qMinusT = q - t
+                        baseMinusT = base - t
+                        output.push(stringFromCharCode(digitToBasic(t + (qMinusT % baseMinusT), 0)))
+                        q = floor(qMinusT / baseMinusT)
+                    }
+                    output.push(stringFromCharCode(digitToBasic(q, 0)))
+                    bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength)
+                    delta = 0
+                    ++handledCPCount
+                }
+            }
+            ++delta
+            ++n
+        }
+        return output.join('')
+    }
+    /**
+     * Converts a Punycode string representing a domain name or an email address
+     * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
+     * it doesn't matter if you call it on a string that has already been
+     * converted to Unicode.
+     * @memberOf punycode
+     * @param {String} input The Punycoded domain name or email address to
+     * convert to Unicode.
+     * @returns {String} The Unicode representation of the given Punycode
+     * string.
+     */ function toUnicode(input) {
+        return mapDomain(input, function (string) {
+            return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string
+        })
+    }
+    /**
+     * Converts a Unicode string representing a domain name or an email address to
+     * Punycode. Only the non-ASCII parts of the domain name will be converted,
+     * i.e. it doesn't matter if you call it with a domain that's already in
+     * ASCII.
+     * @memberOf punycode
+     * @param {String} input The domain name or email address to convert, as a
+     * Unicode string.
+     * @returns {String} The Punycode representation of the given domain name or
+     * email address.
+     */ function toASCII(input) {
+        return mapDomain(input, function (string) {
+            return regexNonASCII.test(string) ? 'xn--' + encode(string) : string
+        })
+    }
+    var version = '1.4.1'
+    /**
+     * An object of methods to convert from JavaScript's internal character
+     * representation (UCS-2) to Unicode code points, and back.
+     * @see <https://mathiasbynens.be/notes/javascript-encoding>
+     * @memberOf punycode
+     * @type Object
+     */ var ucs2 = {
+        decode: ucs2decode,
+        encode: ucs2encode,
+    }
+    var punycode$1 = {
+        version: version,
+        ucs2: ucs2,
+        toASCII: toASCII,
+        toUnicode: toUnicode,
+        encode: encode,
+        decode: decode,
+    }
+    var punycode$2 = Object.freeze({
+        __proto__: null,
+        decode: decode,
+        encode: encode,
+        toUnicode: toUnicode,
+        toASCII: toASCII,
+        version: version,
+        ucs2: ucs2,
+        default: punycode$1,
+    })
+    // markdown-it default options
+    var _default = {
+        options: {
+            html: false,
+            // Enable HTML tags in source
+            xhtmlOut: false,
+            // Use '/' to close single tags (<br />)
+            breaks: false,
+            // Convert '\n' in paragraphs into <br>
+            langPrefix: 'language-',
+            // CSS language prefix for fenced blocks
+            linkify: false,
+            // autoconvert URL-like texts to links
+            // Enable some language-neutral replacements + quotes beautification
+            typographer: false,
+            // Double + single quotes replacement pairs, when typographer enabled,
+            // and smartquotes on. Could be either a String or an Array.
+            // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
+            // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
+            quotes: '\u201c\u201d\u2018\u2019',
+            /* “”‘’ */
+            // Highlighter function. Should return escaped HTML,
+            // or '' if the source string is not changed and should be escaped externaly.
+            // If result starts with <pre... internal wrapper is skipped.
+            // function (/*str, lang*/) { return ''; }
+            highlight: null,
+            maxNesting: 100,
+        },
+        components: {
+            core: {},
+            block: {},
+            inline: {},
+        },
+    }
+    // "Zero" preset, with nothing enabled. Useful for manual configuring of simple
+    var zero = {
+        options: {
+            html: false,
+            // Enable HTML tags in source
+            xhtmlOut: false,
+            // Use '/' to close single tags (<br />)
+            breaks: false,
+            // Convert '\n' in paragraphs into <br>
+            langPrefix: 'language-',
+            // CSS language prefix for fenced blocks
+            linkify: false,
+            // autoconvert URL-like texts to links
+            // Enable some language-neutral replacements + quotes beautification
+            typographer: false,
+            // Double + single quotes replacement pairs, when typographer enabled,
+            // and smartquotes on. Could be either a String or an Array.
+            // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
+            // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
+            quotes: '\u201c\u201d\u2018\u2019',
+            /* “”‘’ */
+            // Highlighter function. Should return escaped HTML,
+            // or '' if the source string is not changed and should be escaped externaly.
+            // If result starts with <pre... internal wrapper is skipped.
+            // function (/*str, lang*/) { return ''; }
+            highlight: null,
+            maxNesting: 20,
+        },
+        components: {
+            core: {
+                rules: ['normalize', 'block', 'inline'],
+            },
+            block: {
+                rules: ['paragraph'],
+            },
+            inline: {
+                rules: ['text'],
+                rules2: ['balance_pairs', 'text_collapse'],
+            },
+        },
+    }
+    // Commonmark default options
+    var commonmark = {
+        options: {
+            html: true,
+            // Enable HTML tags in source
+            xhtmlOut: true,
+            // Use '/' to close single tags (<br />)
+            breaks: false,
+            // Convert '\n' in paragraphs into <br>
+            langPrefix: 'language-',
+            // CSS language prefix for fenced blocks
+            linkify: false,
+            // autoconvert URL-like texts to links
+            // Enable some language-neutral replacements + quotes beautification
+            typographer: false,
+            // Double + single quotes replacement pairs, when typographer enabled,
+            // and smartquotes on. Could be either a String or an Array.
+            // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
+            // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
+            quotes: '\u201c\u201d\u2018\u2019',
+            /* “”‘’ */
+            // Highlighter function. Should return escaped HTML,
+            // or '' if the source string is not changed and should be escaped externaly.
+            // If result starts with <pre... internal wrapper is skipped.
+            // function (/*str, lang*/) { return ''; }
+            highlight: null,
+            maxNesting: 20,
+        },
+        components: {
+            core: {
+                rules: ['normalize', 'block', 'inline'],
+            },
+            block: {
+                rules: [
+                    'blockquote',
+                    'code',
+                    'fence',
+                    'heading',
+                    'hr',
+                    'html_block',
+                    'lheading',
+                    'list',
+                    'reference',
+                    'paragraph',
+                ],
+            },
+            inline: {
+                rules: [
+                    'autolink',
+                    'backticks',
+                    'emphasis',
+                    'entity',
+                    'escape',
+                    'html_inline',
+                    'image',
+                    'link',
+                    'newline',
+                    'text',
+                ],
+                rules2: ['balance_pairs', 'emphasis', 'text_collapse'],
+            },
+        },
+    }
+    var punycode = getAugmentedNamespace(punycode$2)
+    var config = {
+        default: _default,
+        zero: zero,
+        commonmark: commonmark,
+    }
+    ////////////////////////////////////////////////////////////////////////////////
+
+    // This validator can prohibit more than really needed to prevent XSS. It's a
+    // tradeoff to keep code simple and to be secure by default.
+
+    // If you need different setup - override validator method as you wish. Or
+    // replace it with dummy function and use external sanitizer.
+
+    var BAD_PROTO_RE = /^(vbscript|javascript|file|data):/
+    var GOOD_DATA_RE = /^data:image\/(gif|png|jpeg|webp);/
+    function validateLink(url) {
+        // url should be normalized at this point, and existing entities are decoded
+        var str = url.trim().toLowerCase()
+        return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true
+    }
+    ////////////////////////////////////////////////////////////////////////////////
+    var RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']
+    function normalizeLink(url) {
+        var parsed = mdurl.parse(url, true)
+        if (parsed.hostname) {
+            // Encode hostnames in urls like:
+            // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`
+            // We don't encode unknown schemas, because it's likely that we encode
+            // something we shouldn't (e.g. `skype:name` treated as `skype:host`)
+            if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {
+                try {
+                    parsed.hostname = punycode.toASCII(parsed.hostname)
+                } catch (er) {}
+            }
+        }
+        return mdurl.encode(mdurl.format(parsed))
+    }
+    function normalizeLinkText(url) {
+        var parsed = mdurl.parse(url, true)
+        if (parsed.hostname) {
+            // Encode hostnames in urls like:
+            // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`
+            // We don't encode unknown schemas, because it's likely that we encode
+            // something we shouldn't (e.g. `skype:name` treated as `skype:host`)
+            if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {
+                try {
+                    parsed.hostname = punycode.toUnicode(parsed.hostname)
+                } catch (er) {}
+            }
+        }
+        // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720
+        return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')
+    }
+    /**
+     * class MarkdownIt
+     *
+     * Main parser/renderer class.
+     *
+     * ##### Usage
+     *
+     * ```javascript
+     * // node.js, "classic" way:
+     * var MarkdownIt = require('markdown-it'),
+     *     md = new MarkdownIt();
+     * var result = md.render('# markdown-it rulezz!');
+     *
+     * // node.js, the same, but with sugar:
+     * var md = require('markdown-it')();
+     * var result = md.render('# markdown-it rulezz!');
+     *
+     * // browser without AMD, added to "window" on script load
+     * // Note, there are no dash.
+     * var md = window.markdownit();
+     * var result = md.render('# markdown-it rulezz!');
+     * ```
+     *
+     * Single line rendering, without paragraph wrap:
+     *
+     * ```javascript
+     * var md = require('markdown-it')();
+     * var result = md.renderInline('__markdown-it__ rulezz!');
+     * ```
+     **/
+    /**
+     * new MarkdownIt([presetName, options])
+     * - presetName (String): optional, `commonmark` / `zero`
+     * - options (Object)
+     *
+     * Creates parser instanse with given config. Can be called without `new`.
+     *
+     * ##### presetName
+     *
+     * MarkdownIt provides named presets as a convenience to quickly
+     * enable/disable active syntax rules and options for common use cases.
+     *
+     * - ["commonmark"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -
+     *   configures parser to strict [CommonMark](http://commonmark.org/) mode.
+     * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -
+     *   similar to GFM, used when no preset name given. Enables all available rules,
+     *   but still without html, typographer & autolinker.
+     * - ["zero"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -
+     *   all rules disabled. Useful to quickly setup your config via `.enable()`.
+     *   For example, when you need only `bold` and `italic` markup and nothing else.
+     *
+     * ##### options:
+     *
+     * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!
+     *   That's not safe! You may need external sanitizer to protect output from XSS.
+     *   It's better to extend features via plugins, instead of enabling HTML.
+     * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags
+     *   (`<br />`). This is needed only for full CommonMark compatibility. In real
+     *   world you will need HTML output.
+     * - __breaks__ - `false`. Set `true` to convert `\n` in paragraphs into `<br>`.
+     * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.
+     *   Can be useful for external highlighters.
+     * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.
+     * - __typographer__  - `false`. Set `true` to enable [some language-neutral
+     *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +
+     *   quotes beautification (smartquotes).
+     * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement
+     *   pairs, when typographer enabled and smartquotes on. For example, you can
+     *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and
+     *   `['«\xA0', '\xA0»', '‹\xA0', '\xA0›']` for French (including nbsp).
+     * - __highlight__ - `null`. Highlighter function for fenced code blocks.
+     *   Highlighter `function (str, lang)` should return escaped HTML. It can also
+     *   return empty string if the source was not changed and should be escaped
+     *   externaly. If result starts with <pre... internal wrapper is skipped.
+     *
+     * ##### Example
+     *
+     * ```javascript
+     * // commonmark mode
+     * var md = require('markdown-it')('commonmark');
+     *
+     * // default mode
+     * var md = require('markdown-it')();
+     *
+     * // enable everything
+     * var md = require('markdown-it')({
+     *   html: true,
+     *   linkify: true,
+     *   typographer: true
+     * });
+     * ```
+     *
+     * ##### Syntax highlighting
+     *
+     * ```js
+     * var hljs = require('highlight.js') // https://highlightjs.org/
+     *
+     * var md = require('markdown-it')({
+     *   highlight: function (str, lang) {
+     *     if (lang && hljs.getLanguage(lang)) {
+     *       try {
+     *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;
+     *       } catch (__) {}
+     *     }
+     *
+     *     return ''; // use external default escaping
+     *   }
+     * });
+     * ```
+     *
+     * Or with full wrapper override (if you need assign class to `<pre>`):
+     *
+     * ```javascript
+     * var hljs = require('highlight.js') // https://highlightjs.org/
+     *
+     * // Actual default values
+     * var md = require('markdown-it')({
+     *   highlight: function (str, lang) {
+     *     if (lang && hljs.getLanguage(lang)) {
+     *       try {
+     *         return '<pre class="hljs"><code>' +
+     *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +
+     *                '</code></pre>';
+     *       } catch (__) {}
+     *     }
+     *
+     *     return '<pre class="hljs"><code>' + md.utils.escapeHtml(str) + '</code></pre>';
+     *   }
+     * });
+     * ```
+     *
+     **/ function MarkdownIt(presetName, options) {
+        if (!(this instanceof MarkdownIt)) {
+            return new MarkdownIt(presetName, options)
+        }
+        if (!options) {
+            if (!utils.isString(presetName)) {
+                options = presetName || {}
+                presetName = 'default'
+            }
+        }
+        /**
+         * MarkdownIt#inline -> ParserInline
+         *
+         * Instance of [[ParserInline]]. You may need it to add new rules when
+         * writing plugins. For simple rules control use [[MarkdownIt.disable]] and
+         * [[MarkdownIt.enable]].
+         **/ this.inline = new parser_inline()
+        /**
+         * MarkdownIt#block -> ParserBlock
+         *
+         * Instance of [[ParserBlock]]. You may need it to add new rules when
+         * writing plugins. For simple rules control use [[MarkdownIt.disable]] and
+         * [[MarkdownIt.enable]].
+         **/ this.block = new parser_block()
+        /**
+         * MarkdownIt#core -> Core
+         *
+         * Instance of [[Core]] chain executor. You may need it to add new rules when
+         * writing plugins. For simple rules control use [[MarkdownIt.disable]] and
+         * [[MarkdownIt.enable]].
+         **/ this.core = new parser_core()
+        /**
+         * MarkdownIt#renderer -> Renderer
+         *
+         * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering
+         * rules for new token types, generated by plugins.
+         *
+         * ##### Example
+         *
+         * ```javascript
+         * var md = require('markdown-it')();
+         *
+         * function myToken(tokens, idx, options, env, self) {
+         *   //...
+         *   return result;
+         * };
+         *
+         * md.renderer.rules['my_token'] = myToken
+         * ```
+         *
+         * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).
+         **/ this.renderer = new renderer()
+        /**
+         * MarkdownIt#linkify -> LinkifyIt
+         *
+         * [linkify-it](https://github.com/markdown-it/linkify-it) instance.
+         * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)
+         * rule.
+         **/ this.linkify = new linkifyIt()
+        /**
+         * MarkdownIt#validateLink(url) -> Boolean
+         *
+         * Link validation function. CommonMark allows too much in links. By default
+         * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas
+         * except some embedded image types.
+         *
+         * You can change this behaviour:
+         *
+         * ```javascript
+         * var md = require('markdown-it')();
+         * // enable everything
+         * md.validateLink = function () { return true; }
+         * ```
+         **/ this.validateLink = validateLink
+        /**
+         * MarkdownIt#normalizeLink(url) -> String
+         *
+         * Function used to encode link url to a machine-readable format,
+         * which includes url-encoding, punycode, etc.
+         **/ this.normalizeLink = normalizeLink
+        /**
+         * MarkdownIt#normalizeLinkText(url) -> String
+         *
+         * Function used to decode link url to a human-readable format`
+         **/ this.normalizeLinkText = normalizeLinkText
+        // Expose utils & helpers for easy acces from plugins
+        /**
+         * MarkdownIt#utils -> utils
+         *
+         * Assorted utility functions, useful to write plugins. See details
+         * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).
+         **/ this.utils = utils
+        /**
+         * MarkdownIt#helpers -> helpers
+         *
+         * Link components parser functions, useful to write plugins. See details
+         * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).
+         **/ this.helpers = utils.assign({}, helpers)
+        this.options = {}
+        this.configure(presetName)
+        if (options) {
+            this.set(options)
+        }
+    }
+    /** chainable
+     * MarkdownIt.set(options)
+     *
+     * Set parser options (in the same format as in constructor). Probably, you
+     * will never need it, but you can change options after constructor call.
+     *
+     * ##### Example
+     *
+     * ```javascript
+     * var md = require('markdown-it')()
+     *             .set({ html: true, breaks: true })
+     *             .set({ typographer, true });
+     * ```
+     *
+     * __Note:__ To achieve the best possible performance, don't modify a
+     * `markdown-it` instance options on the fly. If you need multiple configurations
+     * it's best to create multiple instances and initialize each with separate
+     * config.
+     **/ MarkdownIt.prototype.set = function (options) {
+        utils.assign(this.options, options)
+        return this
+    }
+    /** chainable, internal
+     * MarkdownIt.configure(presets)
+     *
+     * Batch load of all options and compenent settings. This is internal method,
+     * and you probably will not need it. But if you will - see available presets
+     * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)
+     *
+     * We strongly recommend to use presets instead of direct config loads. That
+     * will give better compatibility with next versions.
+     **/ MarkdownIt.prototype.configure = function (presets) {
+        var self = this,
+            presetName
+        if (utils.isString(presets)) {
+            presetName = presets
+            presets = config[presetName]
+            if (!presets) {
+                throw new Error('Wrong `markdown-it` preset "' + presetName + '", check name')
+            }
+        }
+        if (!presets) {
+            throw new Error("Wrong `markdown-it` preset, can't be empty")
+        }
+        if (presets.options) {
+            self.set(presets.options)
+        }
+        if (presets.components) {
+            Object.keys(presets.components).forEach(function (name) {
+                if (presets.components[name].rules) {
+                    self[name].ruler.enableOnly(presets.components[name].rules)
+                }
+                if (presets.components[name].rules2) {
+                    self[name].ruler2.enableOnly(presets.components[name].rules2)
+                }
+            })
+        }
+        return this
+    }
+    /** chainable
+     * MarkdownIt.enable(list, ignoreInvalid)
+     * - list (String|Array): rule name or list of rule names to enable
+     * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.
+     *
+     * Enable list or rules. It will automatically find appropriate components,
+     * containing rules with given names. If rule not found, and `ignoreInvalid`
+     * not set - throws exception.
+     *
+     * ##### Example
+     *
+     * ```javascript
+     * var md = require('markdown-it')()
+     *             .enable(['sub', 'sup'])
+     *             .disable('smartquotes');
+     * ```
+     **/ MarkdownIt.prototype.enable = function (list, ignoreInvalid) {
+        var result = []
+        if (!Array.isArray(list)) {
+            list = [list]
+        }
+        ;['core', 'block', 'inline'].forEach(function (chain) {
+            result = result.concat(this[chain].ruler.enable(list, true))
+        }, this)
+        result = result.concat(this.inline.ruler2.enable(list, true))
+        var missed = list.filter(function (name) {
+            return result.indexOf(name) < 0
+        })
+        if (missed.length && !ignoreInvalid) {
+            throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)
+        }
+        return this
+    }
+    /** chainable
+     * MarkdownIt.disable(list, ignoreInvalid)
+     * - list (String|Array): rule name or list of rule names to disable.
+     * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.
+     *
+     * The same as [[MarkdownIt.enable]], but turn specified rules off.
+     **/ MarkdownIt.prototype.disable = function (list, ignoreInvalid) {
+        var result = []
+        if (!Array.isArray(list)) {
+            list = [list]
+        }
+        ;['core', 'block', 'inline'].forEach(function (chain) {
+            result = result.concat(this[chain].ruler.disable(list, true))
+        }, this)
+        result = result.concat(this.inline.ruler2.disable(list, true))
+        var missed = list.filter(function (name) {
+            return result.indexOf(name) < 0
+        })
+        if (missed.length && !ignoreInvalid) {
+            throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)
+        }
+        return this
+    }
+    /** chainable
+     * MarkdownIt.use(plugin, params)
+     *
+     * Load specified plugin with given params into current parser instance.
+     * It's just a sugar to call `plugin(md, params)` with curring.
+     *
+     * ##### Example
+     *
+     * ```javascript
+     * var iterator = require('markdown-it-for-inline');
+     * var md = require('markdown-it')()
+     *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {
+     *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');
+     *             });
+     * ```
+     **/ MarkdownIt.prototype.use = function (plugin /*, params, ... */) {
+        var args = [this].concat(Array.prototype.slice.call(arguments, 1))
+        plugin.apply(plugin, args)
+        return this
+    }
+    /** internal
+     * MarkdownIt.parse(src, env) -> Array
+     * - src (String): source string
+     * - env (Object): environment sandbox
+     *
+     * Parse input string and return list of block tokens (special token type
+     * "inline" will contain list of inline tokens). You should not call this
+     * method directly, until you write custom renderer (for example, to produce
+     * AST).
+     *
+     * `env` is used to pass data between "distributed" rules and return additional
+     * metadata like reference info, needed for the renderer. It also can be used to
+     * inject data in specific cases. Usually, you will be ok to pass `{}`,
+     * and then pass updated object to renderer.
+     **/ MarkdownIt.prototype.parse = function (src, env) {
+        if (typeof src !== 'string') {
+            throw new Error('Input data should be a String')
+        }
+        var state = new this.core.State(src, this, env)
+        this.core.process(state)
+        return state.tokens
+    }
+    /**
+     * MarkdownIt.render(src [, env]) -> String
+     * - src (String): source string
+     * - env (Object): environment sandbox
+     *
+     * Render markdown string into html. It does all magic for you :).
+     *
+     * `env` can be used to inject additional metadata (`{}` by default).
+     * But you will not need it with high probability. See also comment
+     * in [[MarkdownIt.parse]].
+     **/ MarkdownIt.prototype.render = function (src, env) {
+        env = env || {}
+        return this.renderer.render(this.parse(src, env), this.options, env)
+    }
+    /** internal
+     * MarkdownIt.parseInline(src, env) -> Array
+     * - src (String): source string
+     * - env (Object): environment sandbox
+     *
+     * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the
+     * block tokens list with the single `inline` element, containing parsed inline
+     * tokens in `children` property. Also updates `env` object.
+     **/ MarkdownIt.prototype.parseInline = function (src, env) {
+        var state = new this.core.State(src, this, env)
+        state.inlineMode = true
+        this.core.process(state)
+        return state.tokens
+    }
+    /**
+     * MarkdownIt.renderInline(src [, env]) -> String
+     * - src (String): source string
+     * - env (Object): environment sandbox
+     *
+     * Similar to [[MarkdownIt.render]] but for single paragraph content. Result
+     * will NOT be wrapped into `<p>` tags.
+     **/ MarkdownIt.prototype.renderInline = function (src, env) {
+        env = env || {}
+        return this.renderer.render(this.parseInline(src, env), this.options, env)
+    }
+    var lib = MarkdownIt
+    var markdownIt = lib
+    return markdownIt
+})
diff --git a/assets/js/notes.js b/assets/js/notes.js
new file mode 100644
index 0000000..2ccb5f2
--- /dev/null
+++ b/assets/js/notes.js
@@ -0,0 +1,91 @@
+md = window.markdownit()
+
+let notifications = []
+let notificationsLoaded = false
+let fetchError = false
+const loadingHeader = document.querySelector('[js-notes-loading]')
+const fetchNotifications = async () => {
+    await fetch('https://strapi.codemagic.io/notifications', {
+        mode: 'cors',
+        headers: { Accept: 'application/json' },
+    })
+        .then((res) => {
+            res.json()
+                .then((data) => {
+                    const toc = document.querySelector('[data-js-toc] #TableOfContents')
+                    renderNotifications(data, toc)
+                })
+                .catch((err) => {
+                    loadingHeader.innerText = 'Failed to load release notes. Please refresh the page and try again.'
+                    console.error('data error', err)
+                })
+        })
+        .catch((err) => {
+            loadingHeader.innerText = 'Failed to load release notes. Please refresh the page and try again.'
+            console.error('data error', err)
+        })
+}
+fetchNotifications()
+
+const notificationTemplate = ({ description, reference, start, title }) => {
+    const el = document.createElement('div')
+    el.classList.add('note')
+    const date = new Date(start)
+    el.innerHTML = `
+            <h2 id="${idFormat(reference)}" class="note__title">${title}</h2>
+            <div class="note__timestamp">${months[date.getMonth()]} ${getOrdinalNum(
+        date.getDate(),
+    )} ${date.getFullYear()}</div>
+            <div class="note__description">${md.render(description.replace('</intro>', ''))}</div>
+        `
+    return el
+}
+const tocItemtemplate = ({ reference, title }) => {
+    const el = document.createElement('li')
+    el.innerHTML = `<a href="#${idFormat(reference)}">${title}</a>`
+    return el
+}
+const renderNotifications = (notifications, toc) => {
+    loadingHeader.style.display = 'none'
+    toc.innerHTML = '<ul></ul>'
+    const wrap = document.querySelector('[js-notifications-wrap]')
+    const tocWrap = toc.querySelector('ul')
+    notifications
+        .sort((a, b) => new Date(b.start) - new Date(a.start))
+        .forEach((item) => {
+            wrap.appendChild(notificationTemplate(item))
+            tocWrap.appendChild(tocItemtemplate(item))
+        })
+    createTableOfContents()
+    copyLinkFromTitles()
+}
+const idFormat = (text) => {
+    return text
+        .toString() // Convert to string
+        .normalize('NFD') // Change diacritics
+        .replace(/[\u0300-\u036f]/g, '') // Remove illegal characters
+        .replace(/\s+/g, '-') // Change whitespace to dashes
+        .toLowerCase() // Change to lowercase
+        .replace(/&/g, '-and-') // Replace ampersand
+        .replace(/[^a-z0-9\-]/g, '') // Remove anything that is not a letter, number or dash
+        .replace(/-+/g, '-') // Remove duplicate dashes
+        .replace(/^-*/, '') // Remove starting dashes
+        .replace(/-*$/, '') // Remove trailing dashes
+}
+const getOrdinalNum = (d) => {
+    return d + (31 == d || 21 == d || 1 == d ? 'st' : 22 == d || 2 == d ? 'nd' : 23 == d || 3 == d ? 'rd' : 'th')
+}
+const months = {
+    0: 'January',
+    1: 'February',
+    2: 'March',
+    3: 'April',
+    4: 'May',
+    5: 'June',
+    6: 'July',
+    7: 'August',
+    8: 'September',
+    9: 'October',
+    10: 'November',
+    11: 'December',
+}
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 01e105b..cf89c5d 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -504,6 +504,12 @@ body {
                     padding-left: 5px;
                 }
             }
+            .note {
+                &__timestamp {
+                    font-size: 16px;
+                    opacity: 0.5;
+                }
+            }
         }
         #toc {
             width: 230px;
diff --git a/content/notes/release-notes.md b/content/notes/release-notes.md
index bf4580b..9593390 100644
--- a/content/notes/release-notes.md
+++ b/content/notes/release-notes.md
@@ -1,295 +1,9 @@
 ---
 description: Codemagic release log for key features
 title: Codemagic feature releases
-aliases:  
+aliases:
   - '../releases-and-versions/release-notes'
 weight: 1
 ---
 
-## May 2021
-
-### Webhooks monitor
-
-We added a Webhooks tab to the application settings page. Here you can view a list of all webhooks received for your application, the webhook request and response,  a description of which workflows were built or skipped because of the processed webhook, and a button for automatically creating a webhook in your application's Git provider (if added via GitHub, Bitbucket, GitLab).
-
-### Working directory in codemagic.yaml
-
-You can specify a working directory for an entire workflow or for an individual build step script in codemagic.yaml. This can either be an absolute path or relative to the clone directory. Refer to the [docs](../getting-started/yaml/#working-directory) for example usage.
-
-### Conditional build triggers and build steps
-
-In codemagic.yaml configured workflows, you can now specify [conditional build triggers](../getting-started/yaml/#conditional-build-triggers) and [conditional build steps](../getting-started/yaml/#conditional-build-step-execution) depending on which files were changed in the last commit. For example, you can skip builds for commits that only have changes in markdown files or only run an Android workflow only when files changed in an android directory. Skipped builds will be marked skipped in the builds list.
-
-### Bundle ID list in Flutter iOS & macOS code signing 
-
-In Flutter workflow editor [iOS](../code-signing/ios-code-signing/) and [macOS](../code-signing/macos-code-signing/) code signing, you can now specify your Apple App Bundle ID directly from the list in [Appple Developer Portal](https://developer.apple.com/account/resources/identifiers/list/bundleId) with the Codemagic integration.
-
-### Flutter macOS and Linux desktop publishing
-
-You can now build and publish Flutter apps to the macOS App Store. This can be configured in [codemagic.yaml](../publishing-yaml/distribution/#app-store-connect) or [Flutter workflow editor](../publishing/publishing-to-app-store/). See the step-by-step macOS code signing guide for [codemagic.yaml](../code-signing-yaml/signing-macos/) and [Flutter workflow editor](../code-signing/macos-code-signing/). macOS publishing is limited to [macOS build machines](../specs/machine-type/#mac-mini-and-mac-pro).
-
-You can now build and publish Flutter apps to the Linux [Snapcraft Snap Store](https://snapcraft.io/snap-store). This can be configured in [codemagic.yaml](../getting-started/building-a-snap-package/) or [Flutter workflow editor](../publishing/snap-store/). Linux publishing is limited to [Linux build machines](../specs/machine-type/#linux-standard-and-linux-premium).
-
-## April 2021
-
-### Git tag label pattern matching
-
-You can now match Git tag label patterns like branch names (e.g. choose to build `*release*` but not `*-dev` tags). See the codemagic.yaml [triggering docs](https://docs.codemagic.io/getting-started/yaml/#triggering) or workflow editor Build triggers > pattern examples for more information.
-
-### codemagic.yaml inline editing and validation
-
-You can edit your [codemagic.yaml](../getting-started/yaml/) configuration and see validation errors right from the Codemagic UI. Validation is also automatically supported in all IDEs that implement the [JSON Schema Store](https://www.schemastore.org/json/) standard (such as IntelliJ and VS Code).
-
-## March 2021
-
-### Auto-increment build numbers
-
-Using [Codemagic CLI Tools](https://github.com/codemagic-ci-cd/cli-tools), you can now set your build number based on the currently published build number in the [Google Play](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/README.md), [App Store](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md), or [Test Flight](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md). See the [build versioning docs](../building/build-versioning) for all the details on how to set up the [Apple App Store](../building/build-versioning/#use-codemagic-cli-tools-to-get-the-latest-build-number-from-app-store-or-testflight) and [Google Play](../building/build-versioning/#use-codemagic-cli-tools-to-get-the-latest-build-number-from-google-play) credentials and script commands to enable auto-versioning in codemagic.yaml or the Flutter workflow editor. See the [Android Versioning Sample Application](https://github.com/codemagic-ci-cd/android-versioning-example/tree/master) for an example of using various versioning methods in Android.
-
-### Linux Build Machines
-
-Linux [build machines](../specs/versions-linux/) are available to run builds for [billing enabled](../billing/billing/) users and teams. These are only available in  workflows configured with [codemagic.yaml](../getting-started/yaml/#instance-type). See the [pricing page](https://codemagic.io/pricing/) for the build minute rate.
-
-## January 2021
-
-### Scheduled builds
-
-Whether you configure your builds in the Flutter workflow editor or codemagic.yaml configuration file, you can now schedule your workflows to run on days and time that suits you the best. See how to [create build schedules](../building/scheduling).
-
-### Support for `flutter build ipa`
-
-You can now use the `flutter build ipa` command to generate an .ipa file from the Flutter source. To use this build command with Flutter builds configured in the workflow editor, select the **Use flutter build ipa** checkbox in **App settings > Build > iOS build command**. You can also use it in your codemagic.yaml configuration, see an example [here](../getting-started/building-a-flutter-app/#building-a-signed-ios-application-archive-ipa).
-
-Note that:
-* This command is available from Flutter version `1.24.0-6.0`.
-* You still need to set up code singing in your Codemagic configuration.
-
-## December 2020
-
-### GitHub Checks and GitHub app integration for teams
-
-For repositories added via [Codemagic GitHub app](https://github.com/apps/codemagic-ci-cd), Codemagic now supports reporting the build summary of PR builds to GitHub Checks. Your Codemagic workflow will appear as a check and you will see the status and logs of individual build steps on the Checks tab of the PR. See how to set up GitHub Checks [here](../building/github-checks/).
-
-In addition, it is now possible to connect the GitHub app integration in team settings as a team integration. Learn more about the GitHub app integration [here](../getting-started/signup/#selected-repositories-github-app).
-
-### In-app priority and rollout fraction for Android releases
-
-Using both the Flutter workflow editor and `codemagic.yaml`, you can now set two additional parameters for your Android builds that you publish to users through Google Play.
-
-* **In-app priority** determines how strongly your app update will be recommended to existing users. The priority ranges from `0` (default) to `5` (high-priority update). Note that this feature is available only via Google Play API and for apps that support in-app updates.
-* **Rollout fraction** enables you to roll out the release to a percentage of users. Rollout fraction is a value between `0` and `1`, e.g. `0.25` to release to 25% of users.
-
-## November 2020
-
-### Filtering on Builds page and Public dashboards
-
-We have added filtering on the Builds page so you can filter builds based on team, application, workflow and branch.
-
-The Builds page also contains a new feature — **Public dashboards**. Public dashboards make it possible for teams to share the list of team’s builds, release notes (if passed) and build artifacts with people outside Codemagic using a public link (build logs will not be exposed). This is a convenient option for distributing builds to testers or sharing build artifacts with stakeholders.
-See the documentation [here](../publishing-yaml/public-dashboards/).
-
-### YAML file validation before starting a build
-
-We have improved the experience of using the `codemagic.yaml` file. Now you can see syntax errors in the UI before you start the build. We have included more information about the format, invalid keys or values in the error message to help you fix it without running builds. If there are issues with the YAML file, the build is not started.
-
-### Billing page
-
-There is now a Billing page for managing billing across teams and your personal account. This is where you can enable billing, see your usage, view your invoices and change the card used for payment. Read more about managing billing in Codemagic [here](../billing/billing).
-
-### Billing teams based on active users
-
-Starting from November 1, there are no more free minutes for teams and we count every user that triggers builds. Read more about this change on our [blog](https://blog.codemagic.io/pricing-changes-for-teams/). See how we count users in teams [here](../teams/users). 
-
-## October 2020
-
-### Email signup
-
-We have added the option to authenticate with Codemagic using email. Both on signup and on login, Codemagic sends users a temporary six-character authentication key that they are required to enter in the browser.
-
-## September 2020
-
-### Global Save button in Flutter app settings
-
-Instead of having to save your settings in each section, there is now one global **Save** button to save the changes you have made in your workflow. We’ll notify you if you have unsaved changes and point you to any errors there might be when saving the configuration. This helps to ensure that none of your changes remain unsaved by accident.
-
-## August 2020
-
-### Using App Store Connect API for Apple Developer Portal integration
-
-Instead of creating a session with Apple Developer Portal, we are now using App Store Connect API keys for authentication. This means there will be no more expiring sessions or hassle with two-factor authentication when using automatic code signing. It is possible to set up several keys for code signing and select the right key in workflow settings. See how to [set up the Apple Developer Portal in Codemagic app](../code-signing/ios-code-signing/#automatic-code-signing) for builds that are configured in the Flutter workflow editor. When building with `codemagic.yaml`, the API keys are added in the configuration file, see the instructions [here](../code-signing-yaml/signing-ios).
-
-### Support for multiple team owners
-
-Codemagic teams can now have multiple team owners. Team owners can manage team integrations, add or remove team members and set up billing. Team owners can also upgrade members to owners or downgrade other owners to member. Read more about how teams work [here](../teams/teams).
-
-## July 2020
-
-### New project setup guide
-
-Codemagic launches a new project setup guide that makes building and configuring your **Flutter, native iOS, Android** and **React Native** projects even easier.
-
-To give all mobile projects an even smoother and faster lift-off, we have updated our first build flow. Instead of having a default workflow without any configuration, you can just click **Set up build** when starting your first build, select the project type that you’re about to build, update it based on your needs and start building!
-
-If you are not building a Flutter project, you still need to use the `codemagic.yaml` file to configure the workflow, but with a click of a button, you will get a template that suits your selected project type that you can modify according to your needs. You can read step-by-step examples of using the `codemagic.yaml` file to configure [native Android](https://blog.codemagic.io/native-android-getting-started-guide-with-codemagic-cicd/), [native iOS](https://blog.codemagic.io/native-ios-getting-started-guide-with-codemagic/) and [React Native](https://blog.codemagic.io/react-native-getting-started-guide-with-codemagic/) apps on our blog.
-
-### Cancel pending builds
-
-We have added a much-requested feature to cancel ongoing and queued webhook-triggered builds on push and pull request commit when a new build has been triggered for the same branch. This is convenient when you’re making several commits and don’t want to wait for the previous builds to finish while you’re only interested in the build for the most recent commit. 
-
-You can enable this feature in the Flutter workflow editor by navigating to **App settings > Build triggers > Automatic build triggering** and selecting **Cancel outdated webhook builds**, or by setting `cancel_previous_builds: true` in the [triggering section](../getting-started/yaml/#triggering) of the `codemagic.yaml` file.
-
-> If you’re interested in running builds in parallel, get in touch with our sales team through the [Codemagic business page](https://codemagic.io/enterprise/).
-
-## June 2020
-
-### New billing model
-
-We have moved to a post-paid billing model that comes with a more consistent billing experience and premium features, such as Mac Pro builds. Read more about what changed, who wins from this and how to take advantage of the new billing model on [our blog](https://blog.codemagic.io/codemagic-new-billing/). If you are interested in numbers, check out our updated [pricing page](https://codemagic.io/pricing/) for a quick overview of free and paid features. A short guide for selecting Mac Pro as the machine type is available in our [documentation](../building/machine-type/).
-
-The new billing model will apply to all new users and teams signing up after 1st of June, 2020 as well as to existing users that have not purchased any paid build minutes or team seats. However, all existing users will be able to opt in for the improved billing model.
-If you have any questions or concerns, do not hesitate to reach out in our [#pricing channel](https://codemagicio.slack.com/archives/CHWC14F17).
-
-### Adding company details to the invoice
-
-We are continuing to improve our new billing model, and the first improvement is here!
-You can now provide your company details, such as company name, address or VAT number, in order to see them on the invoice and specify a billing email for receiving invoices. You can enter the company details in team or user settings when enabling billing and adding a new credit card, or by clicking **Update billing details** on the right sidebar when you have already enabled billing.
-
-## May 2020
-
-### Increase or decrease maximum build duration
-
-You can now have control over the maximum build duration and set a different value per each workflow. If the build reaches the set limit, it will end with a timeout. The default value is 60 minutes and the maximum value is 120 minutes.
-Note that timeouts do not consume any build minutes. See the relevant documentation [here](../building/timeout/).
-
-## April 2020
-
-### Dynamic workflows with Codemagic API
-
-You can now configure your build and Flutter/Xcode/Cocoapods versions dynamically using API. If you have several similar workflows, you can now combine them into one and create parametrized API calls. This way you can run your workflows without having to change the settings in the Flutter workflow editor or in the `codemagic.yaml` file.
-
-See [our documentation](../rest-api/builds/) or the <a href="https://blog.codemagic.io/dynamic-workflows-with-codemagic-api/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','dynamic-workflows-with-codemagic-api')">article about dynamic workflows</a> for more information.
-
-## March 2020
-
-### More options to configure your build environment
-
-We recently updated the Flutter workflow editor in the Build section of app settings with a dropdown field for `CocoaPods` version selection to make it easier to build with the versions required by your app. With `codemagic.yaml`, you have even more options available and can define which `Flutter`, `Xcode`, `CocoaPods`, `Node` and `npm` version to use for the build. See how to define software versions in YAML file [here](../building/yaml#environment).
-
-### Remote access to build machine via VNC
-
-We have good news to everyone developing on Windows or Linux. You can now launch and interact with graphical applications on the remote macOS machine running your build and perform actions you can only do on mac hardware:
-
-* Configure Xcode project settings
-
-* Create a developer certificate for iOS code signing
-
-* Launch iOS app on simulator
-
-* Set up CocoaPods, etc.
-
-Your project is already available on the machine, so it’s easy to run your iOS app on simulator. To find out more, see the [documentation](../troubleshooting/accessing-builder-machine-via-ssh) or <a href="https://blog.codemagic.io/remote-access-to-virtual-mac-build-machine/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','remote-access-to-virtual-mac-build-machine')">our detailed blog post about remote access.</a> 
-
-### Toggles for enabling/disabling publishing options
-
-We have improved the Flutter workflow editor for publishing options and added the **Enabled** checkbox to the settings that allows to easily enable or disable an option. This way you no longer have to delete the configuration in order to turn off the feature for a workflow. In addition, the enabled/disabled status is displayed for each publishing option when you open the Publish section, so you can have a better overview of what the workflow is configured to do.
-
-## February 2020
-
-### Codemagic CLI tools
-
-We have developed a variety of CLI utilities to assist with building, code signing and publishing apps, collectively known as Codemagic CLI tools: https://github.com/codemagic-ci-cd/cli-tools. The CLI tools are open source, so you are welcome to install them locally as well as share feedback and contribute.
-
-### YAML for iOS
-
-In addition to using `codemagic.yaml` for building Android and web projects, you can now use it to build, code sign and publish iOS apps. If you are interested in getting started with YAML, check out our [documentation](../building/yaml) or <a href="https://blog.codemagic.io/how-to-add-flutter-modules-to-native-ios-project-and-test-it-on-codemagic/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','how-to-add-flutter-modules-to-native-ios-project-and-test-it-on-codemagic')">this article</a> about using YAML when building a Native iOS project.
-
-## January 2020
-
-### Rescan application
-
-Rescanning the application updates the repository settings in Codemagic. This is useful when you have moved or renamed your repository, moved the Flutter project inside the repository or renamed the folder containing the project. The **Rescan application** option is available in **App settings > Repository settings**. Additionally, you can now see the path of the `pubspec.yaml` file that is used for building in **App settings > Build > Project file path**.
-
-### GitHub releases
-
-The Publish section in app settings now contains an integration with GitHub for publishing Android artifacts to a GitHub release. Publishing to GitHub happens only for successful builds triggered on tag creation and is unavailable for manual builds. Read more about GitHub releases here: https://help.github.com/en/github/administering-a-repository/about-releases.
-
-### Codemagic API key
-
-We have made Codemagic API key available from the user settings UI, which will make integrating Codemagic to your workflows even easier. The key is available in **User settings > Integrations > Codemagic API**. Currently, the API key can be used to set up custom build triggers, read more about it [here](../building/automatic-build-triggering/#custom-build-triggers).
-
-### Transfer personal paid minutes to team
-
-You can now transfer all personal paid build minutes to your team account from user settings and team settings.
-Note that you will see the **Transfer** button only if you have any minutes to transfer and are part of a team.
-
-## December 2019
-
-### Mac Pro trial
-
-Codemagic now has Mac Pro build machines available for business plan users. To test out Mac Pros, all users and teams get 3 Mac Pro builds without any additional cost as a one-time offer. You can choose to run a build on a Mac Pro when starting build manually. 
-
-## November 2019
-
-### Make builds public
-
-You can now share your Codemagic builds publicly via a **direct link** to the build or by displaying a **build status badge** in your repository. Anyone accessing the link will be able to see the build logs and download build artifacts. This is a great option for sharing your open-source projects and getting feedback from fellow Flutter developers.
-
-This feature is workflow-specific. In your Workflow settings, click the **Make builds public** toggle to make all existing and future build logs and artifacts of the workflow publicly accessible. Your app and its settings will remain private. Note that direct links to build artifacts and log files will remain accessible even when you disable the feature.
-
-### Download build step logs
-
-We have added the option to download the log of each build step. This makes it easier to view very large log files, search inside them or compare the logs of successful and failed builds.
-
-## October 2019
-
-### SMS verification for two-factor authentication
-
-Codemagic supports receiving verification codes for two-factor authentication via SMS. This is a good option for those who don’t have their Apple device at hand but have registered a trusted phone number to receive verification codes. If you have multiple trusted phone numbers available, you can choose the number to which the verification code will be sent.
-
-### Apple Developer Portal integration
-
-With the Apple Developer Portal integration, users can use the same credentials for automatic iOS code signing across all apps on user's personal account or in a team without having to enter them in app settings. Read more about [automatic code signing with Apple Developer Portal integration](../code-signing/ios-code-sining/#automatic-code-signing). 
-
-### Changing the app icon
-
-We have added the option to change the app icon displayed on Codemagic. This can be done under Repository settings via the **Change application icon** option which enables you to upload a new image. The image must be in `png` format and can be up to 1MB in size. 
-
-### Codemagic YAML configuration *beta*
-
-You can now export your Codemagic configuration from app settings as a `codemagic.yaml` file and keep it in your repository for build configuration. Exporting build configuration is currently supported for Android and web apps only. We invite our users to try it out and share the feedback with us.
-
-### Concurrent builds for teams
-
-Teams on Codemagic now have Magic seats available in addition to regular team seats. Purchasing a Magic seat increases your team's build concurrency by 1, allowing to run several builds in parallel. Read more about Magic seats on our [blog](https://blog.codemagic.io/get-additional-build-concurrency-with-magic-seats/) and check out the pricing details [here](https://codemagic.io/pricing/).
-
-## September 2019
-
-### Codemagic CI/CD GitHub app *beta*
-
-In addition to GitHub OAuth integration, you can now use Codemagic via the GitHub app. The [Codemagic CI/CD GitHub app](https://github.com/marketplace/codemagic-ci-cd) requires less permissions than the GitHub OAuth integration and enables you to configure which repositories Codemagic can access. Read more about the benefits of Codemagic GitHub app on our [blog](https://blog.codemagic.io/codemagic-github-app/) and see our [documentation](../getting-started/codemagic-github-app) for details about the integration. 
-
-### Testing on real devices with AWS Device Farm and Sylph
-
-We have added the option to run Flutter Driver tests on physical Android and iOS devices on AWS Device Farm. This is done thanks to integration with [Sylph](https://github.com/mmcc007/sylph) which makes it possible to configure the test run using a `sylph.yaml` file. See more details in [Testing on AWS Device Farm](../testing/aws).
-
-### Support for macOS and Linux apps
-
-Building Flutter desktop apps for macOS and Linux is now supported on Codemagic, see instructions [here](../building/building-for-desktop). You can also watch a [demo](https://blog.codemagic.io/codemagic-ci-cd-releases-support-for-flutter-desktop/) of building a desktop app on Codemagic and installing and running it on macOS.
-
-## August 2019
-
-### Codemagic community documentation
-
-We made Codemagic documentation public! Codemagic users are now welcome to contribute on [GitHub](https://github.com/codemagic-ci-cd/codemagic-docs/).
-
-The improved documentation site includes:
-
-* [Release notes](./release-notes) for an overview of latest Codemagic feature releases
-
-* [Common issues](../troubleshooting/common-issues) together with solutions to overcome them
-
-* [Software and versions](./versions) page containing a list of software that is available out-of-the-box
-
-### Automatic builds on tag creation -- GitLab and Bitbucket
-
-In addition to GitHub apps, we now support automatic builds on tag creation also for GitLab and Bitbucket apps. Whenever you create a tag via UI or using command line, Codemagic will automatically pick up and build the tagged commit. Read more about it [here](../building/automatic-build-triggering/#build-triggers).
+{{< strapi >}}
diff --git a/layouts/shortcodes/strapi.html b/layouts/shortcodes/strapi.html
new file mode 100644
index 0000000..4ed1508
--- /dev/null
+++ b/layouts/shortcodes/strapi.html
@@ -0,0 +1,9 @@
+<div js-notifications-wrap>
+    <h3 js-notes-loading>Loading release notes...</h3>
+</div>
+
+{{ $mdScript := resources.Get "js/markdown-it.js" | resources.ExecuteAsTemplate "" . | minify | fingerprint }}
+<script src="{{ $mdScript.RelPermalink }}" integrity="{{ $mdScript.Data.Integrity }}"></script>
+
+{{ $notesScript := resources.Get "js/notes.js" | resources.ExecuteAsTemplate "" . | minify | fingerprint }}
+<script src="{{ $notesScript.RelPermalink }}" integrity="{{ $notesScript.Data.Integrity }}"></script>

commit 099bade7cab75c97ebd0a1aa6e5ebdc130ff0f00
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Fri Jul 30 13:16:16 2021 +0300

    Update environment-variables.md (#402)
    
    $FCI_BUILD_STEP_STATUS, explicitly pointing out that it is for UI, not yaml.

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 8dcd1e4..e88edb1 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -45,7 +45,7 @@ Here you'll find some of the read-only environment variables explained.
 | FCI_PROJECT_ID           | UUID of the project that is being built                                                                                                                         |
 | FCI_BUILD_ID             | UUID of the build                                                                                                                                               |
 | FCI_TEST_STEP_STATUS     | Test step status, success or failure                                                                                                                            |
-| FCI_BUILD_STEP_STATUS    | Build step status, success, failure or skipped                                                                                                                  |
+| FCI_BUILD_STEP_STATUS    | Build step status, success, failure or skipped. Only available when using Workflow Editor, unavailabel with codemagic.yaml                                                                                                                |
 | FCI_BUILD_DIR            | Absolute path to the cloned repository in Codemagic builders                                                                                                    |
 | FCI_BUILD_OUTPUT_DIR     | Contains the artifact files generated during the build                                                                                                          |
 | FCI_EXPORT_DIR           | The files added to this directory will be added to a zip file and made available as build artifacts                                                             |

commit 4bb162bbc0add99f1d8bf7226c7f13500af247f5
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Thu Jul 29 15:05:10 2021 +0300

    add node cache (#426)

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 502ada3..9174700 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -207,6 +207,7 @@ See the default software versions on Codemagic build machines:
 | `$FLUTTER_ROOT/.pub-cache`                  | Dart cache                                       |
 | `$HOME/.gradle/caches`                      | Gradle cache. Note: do not cache `$HOME/.gradle` |
 | `$HOME/Library/Caches/CocoaPods`            | CocoaPods cache                                  |
+| `$FCI_BUILD_DIR`/node_modules               | Node cache                                       |
 
 <br>
 

commit 387044131bc93e2d869115815a78d70b404e3610
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Mon Jul 26 15:18:23 2021 +0300

    Remove warnings (#424)
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index fe37fbd..1c0b97e 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -121,15 +121,6 @@ publishing:
     submit_to_testflight: true        # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight to automatically enroll your build to beta testers.  
 ```
 
-Submitting a build for TestFlight beta review depends on Apple's build processing time. By default, Codemagic will repeat submission attempts for 20 minutes. You can change how long the submission attempts should be tried by setting the `APP_STORE_CONNECT_MAX_BUILD_PROCESSING_WAIT` environment variable. For example, to set a 42-minute timeout:
-
-```yaml
-environment:
-  vars:
-    APP_STORE_CONNECT_MAX_BUILD_PROCESSING_WAIT: 42
-```
-
-
 ## GitHub releases
 
 Publishing GitHub releases is available for GitHub repositories only.
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 3effd38..45a4c7b 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -67,10 +67,6 @@ Once the Apple Developer Portal has been enabled for the account or team the app
 
 Once you have successfully set up publishing to App Store Connect, Codemagic will automatically distribute the app to App Store Connect every time you build the workflow. Note that you must manually submit the app to App Store in App Store Connect.
 
-{{<notebox>}}
-Submitting a build for TestFlight beta review depends on Apple's build processing time. By default, Codemagic will repeat submission attempts for 20 minutes. You can change how long the submission attempts should be tried by setting the `APP_STORE_CONNECT_MAX_BUILD_PROCESSING_WAIT` [environment variable](../building/environment-variables/ 'Environment variables') in minutes.
-{{</notebox>}}
-
 ## Submitting an app to App Store
 
 To make your iOS app available to the public, it must be submitted for review in App Store Connect.

commit b90c6d951bdc7d266c9b47144c0929af75e4e760
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Mon Jul 26 10:13:30 2021 +0300

    Up and around fixes (#400)
    
    * Update billing.md
    
    * Update access-private-git-submodules.md
    
    * Update build-versioning.md
    
    * Update encrypting.md
    
    * Update running-locally.md
    
    * Update scheduling.md
    
    * Update timeout.md
    
    * Update signing-ios.md
    
    * Update signing-macos.md
    
    * Update running-locally.md
    
    * Update android-code-signing.md
    
    * Update ios-code-signing.md
    
    * Update android-code-signing.md
    
    * Update macos-code-signing.md
    
    * Various grammar and wording changes
    
    * Update common-issues.md
    
    * Update android-code-signing.md
    
    * Update flutter-projects.md
    
    * Update publishing-to-app-store.md

diff --git a/content/billing/billing.md b/content/billing/billing.md
index 6bd2964..fc79c0b 100644
--- a/content/billing/billing.md
+++ b/content/billing/billing.md
@@ -29,7 +29,7 @@ Click on **Update billing details** to change the billing information or add add
 
 ### Changing card
 
-To change the card used for payments, click **Edit** in the credit card section under the billing details. You can then click **Add new card** to register a new card or select a different card from already registered cards.
+To change the card used for payments, click **Edit** in the credit card section under the billing details. You can then click **New card** to register a new card or select a different card from already registered cards.
 
 ### Disabling billing
 
@@ -53,4 +53,4 @@ As soon as there is a failed invoice payment, your subscription will be put on h
 
 Team or account owners can manually retry the payment by clicking on the overdue invoice in **Billing history** and selecting **Pay invoice** on the popup with invoice details.
 
-Note that overdue invoices should be paid before subscription can be disabled. Please refer to the [Disable billing](/billing/billing/#disabling-billing) section for further info.
+Note that overdue invoices should be paid before the subscription can be disabled. Please refer to the [Disable billing](/billing/billing/#disabling-billing) section for further info.
diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index 4ccb854..80f9374 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -7,7 +7,7 @@ If your project requires accessing any private Git submodules or dependencies, y
 
 1. [Create an SSH key pair](../knowledge-base/generating-an-ssh-key) for use with Codemagic. Note that the SSH key **cannot** be password-protected.
 2. Add the **public key** to your repository settings. See how to do that on [GitHub](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account), [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), [GitLab](https://docs.gitlab.com/ee/ssh/README.html#adding-an-ssh-key-to-your-gitlab-account).
-3. Encrypt the contents of the **private key** file and add it as an environment variable in your Codemagic configuration configuration file. . (../building/environment-variables/). Make sure to check **Secure**. For example:
+3. Encrypt the contents of the **private key** file and add it as an [environment variable](../building/environment-variables/) in your Codemagic configuration file. Make sure to check **Secure**. For example:
 
     ```
     SSH_KEY = -----BEGIN OPENSSH PRIVATE KEY-----
@@ -23,7 +23,7 @@ Do not add an environment variable with the `_SSH_KEY` suffix if your repository
 
 ### Using multiple SSH keys
 
-When you add multiple SSH keys, or need to use a different key for private dependencies apart of the one used to clone your repository, git will by default attempt to use the first key available. This may cause problems when installing private dependencies.
+When you add multiple SSH keys or need to use a different key for private dependencies apart from the one used to clone your repository, git will by default attempt to use the first key available. This may cause problems when installing private dependencies.
 
 If you use yaml configuration, explicitly add the key to the SSH agent before invoking a command which requires it, as in the example below.
 
@@ -36,4 +36,4 @@ ssh-add /tmp/ssh_key
 ... # enter the commands that require the key
 ```
 
-But if you added a repository with an SSH key and want to use a different key to fetch dependencies, it's not possible to do in Workflow editor. Scripts are executed in independent shells, so the key explicitly added in a post-clone script will be lost as soon as the script finishes. The best thing to do in such case would be to use the same key for both your repository and your private dependency. You may need to add the key to your account, not to the specific repository.
+But if you added a repository with an SSH key and want to use a different key to fetch dependencies, it's not possible to do in Workflow editor. Scripts are executed in independent shells, so the key explicitly added in a post-clone script will be lost as soon as the script finishes. The best thing to do in such a case would be to use the same key for both your repository and your private dependency. You may need to add the key to your account, not to the specific repository.
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index df43b3f..2e710f0 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -4,7 +4,7 @@ description: How to set a new build number to push to app stores
 weight: 5
 ---
 
-If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using the environment variables that Codemagic exports during the build. There are two environment variables that count the number of builds:
+If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment the application version with every build is by using the environment variables that Codemagic exports during the build. There are two environment variables that count the number of builds:
 
 * `BUILD_NUMBER`. Holds the total count of builds (including the ongoing build) for a specific **workflow** in Codemagic. In other words, if you have triggered 10 builds for some workflow in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`.
 
@@ -54,7 +54,7 @@ It is recommended to create a dedicated App Store Connect API key for Codemagic
 2. Click on the + sign to generate a new API key.
 3. Enter the name for the key and select an access level. We recommend choosing either `Developer` or `App Manager`, read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
 4. Click **Generate**.
-5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+5. As soon as the key is generated, you can see it added to the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
 
 ### Saving the API access arguments to environment variables
 
@@ -152,7 +152,7 @@ environment:
 ```
 
 {{<notebox>}}
-Alternatively, credentials can be specified as a command argument with the dedicated flag, see the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/get-latest-build-number.md#--credentialsgcloud_service_account_credentials). But anyway you should have them in environment variables so that they can be decrypted. In that case, the environment variable will be fallback for missing value in the script.
+Alternatively, credentials can be specified as a command argument with the dedicated flag, see the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/get-latest-build-number.md#--credentialsgcloud_service_account_credentials). But anyway you should have them in environment variables so that they can be decrypted. In that case, the environment variable will be a fallback for the missing value in the script.
 {{</notebox>}}
 
 ### Saving the API access argument to environment variables in the Flutter workflow editor
@@ -172,7 +172,7 @@ LATEST_BUILD_NUMBER=$(google-play get-latest-build-number --package-name 'com.go
 By default, the action will try to get the latest build number as the maximum build number across all tracks (`internal`, `alpha`, `beta`, `production`). If you want to limit the search, you can specify a particular track(s) with the optional argument `--tracks` described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/get-latest-build-number.md#--tracksinternal--alpha--beta--production).
 {{</notebox>}}
 
-There are number of ways how you can pass the obtained build number to an Android project (through environment variables, `gradlew` argument properties, file, or a call from `build.gradle`). Check the [android-versioning-example repository](https://github.com/codemagic-ci-cd/android-versioning-example/tree/master) for more details.
+There are a number of ways how you can pass the obtained build number to an Android project (through environment variables, `gradlew` argument properties, file, or a call from `build.gradle`). Check the [android-versioning-example repository](https://github.com/codemagic-ci-cd/android-versioning-example/tree/master) for more details.
 
 #### Get the build number in the Flutter workflow editor
 
@@ -182,4 +182,4 @@ If you encrypted the content (not the file) of your gcloud service account crede
 --build-number=$(($(google-play get-latest-build-number --package-name 'com.google.example') + 1))  # use your own package name
 ```
 
-Alternatively you can add a custom [Pre-build script](https://docs.codemagic.io/flutter/custom-scripts/) and write the build number to a file, which will be read from your `android/app/build.gradle` during the build (See details [here](https://github.com/codemagic-ci-cd/android-versioning-example/tree/autoversioning_through_file)).
+Alternatively, you can add a custom [Pre-build script](https://docs.codemagic.io/flutter/custom-scripts/) and write the build number to a file, which will be read from your `android/app/build.gradle` during the build (See details [here](https://github.com/codemagic-ci-cd/android-versioning-example/tree/autoversioning_through_file)).
diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index 89f0bc5..be4f591 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -4,7 +4,7 @@ description: Encrypt your credentials and key files
 weight: 3
 ---
 
-If you wish to store sensitive information, such as login details or API keys, in environment variables or in your configuration file, it is important to encrypt the data so as to not expose it. You can easily encrypt values and files using the encryption interface in Codemagic.
+If you wish to store sensitive information, such as login details or API keys, in environment variables or your configuration file, it is important to encrypt the data to not expose it. You can easily encrypt values and files using the encryption interface in Codemagic.
 
 {{<notebox>}}
 For security reasons, encrypted environment variables work only in the team where they were created. When moving an app from your personal account to a team or from one team to another, you should re-encrypt the variables.
diff --git a/content/building/running-locally.md b/content/building/running-locally.md
index 85c1f91..289d8ab 100644
--- a/content/building/running-locally.md
+++ b/content/building/running-locally.md
@@ -43,11 +43,11 @@ xcode-project use-profiles --project /path/to/MyProject.xcodeproj --profile /pat
 xcode-project build-ipa --project /path/to/MyProject.xcodeproj --scheme MyScheme
 ```
 
-Note that `--project` option can be either a path literal, or a glob pattern to match projects in working directory (Default is `**/*.xcodeproj`).
+Note that `--project` option can be either a path literal, or a glob pattern to match projects in the working directory (default is `**/*.xcodeproj`).
 
-`--profile` option can be a glob pattern as well (Default is `$HOME/Library/MobileDevice/Provisioning Profiles/*.mobileprovision`).
+`--profile` option can be a glob pattern as well (default is `$HOME/Library/MobileDevice/Provisioning Profiles/*.mobileprovision`).
 
-## Generate universal .apk(s) with user specified keys from app bundle
+## Generate universal .apk(s) with user-specified keys from the app bundle
 
 To build .apk files(s) from the app bundle(s) found with `/path/to/**/*.aab` glob pattern with keystore `/path/to/keystore.keystore`, `KEYSTORE_PASSWORD`, `KEY_ALIAS` and `KEY_PASSWORD`, use the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) tool:
 
@@ -65,7 +65,7 @@ If `--bundle` option is not specified, default glob pattern `**/*.aab` will be u
 {{<notebox>}}
 Alternatively to entering `ISSUER_ID`, `KEY_IDENTIFIER`, `PRIVATE_KEY`, `CERTIFICATE_PASSWORD`,  `KEYSTORE_PASSWORD`, `KEY_PASSWORD` in plaintext, it may also be specified using an `@env:` prefix followed by an environment variable name, or `@file:` prefix followed by a path to the file containing the value. Example: `@env:<variable>` uses the value in the environment variable named `<variable>`, and `@file:<file_path>` uses the value from file at `<file_path>`.
 
-Please refer to [documentation](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs#cli-tools) for more details.
+Please refer to the [documentation](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs#cli-tools) for more details.
 {{</notebox>}}
 
 ## Generate a changelog text from Git history
@@ -74,4 +74,4 @@ To generate a changelog text from Git history, use the [git-changelog](https://g
 
 ```bash
 git-changelog generate --previous-commit `git rev-list --tags --skip=1  --max-count=1` > CHANGELOG
-```
\ No newline at end of file
+```
diff --git a/content/building/scheduling.md b/content/building/scheduling.md
index 5bf7755..6951c45 100644
--- a/content/building/scheduling.md
+++ b/content/building/scheduling.md
@@ -9,7 +9,7 @@ startLineBreak: true
 This feature is available for [teams](../teams/teams) only.
 {{</notebox>}}
 
-You can schedule Codemagic to automatically build your app on certain days and time. This way, your QA can start the day with the latest version of the app, or you can configure a workflow to run the long test suits at a convenient time and only run fast tests with builds triggered by commits to the repo.
+You can schedule Codemagic to automatically build your app on certain days and times. This way, your QA can start the day with the latest version of the app, or you can configure a workflow to run the long test suits at a convenient time and only run fast tests with builds triggered by commits to the repo.
 
 ## Setting up scheduled builds
 
@@ -22,6 +22,6 @@ You can schedule Codemagic to automatically build your app on certain days and t
 
 Saved schedules for each app are displayed in the **Scheduled builds** section on the right sidebar in app settings. If you no longer need the schedule, you can delete it by hovering on the schedule and clicking the trash bin icon.
 
-Builds that are triggered from a schedule are marked with "scheduled" on the **Builds** page and have "Schedule" as the trigger in build overview.
+Builds that are triggered from a schedule are marked with "scheduled" on the **Builds** page and have "Schedule" as the trigger in the build overview.
 
 Note that the user who is the author of the commit that is built is counted as an active user. Read more about [how we count active users](../teams/users).
diff --git a/content/building/timeout.md b/content/building/timeout.md
index d44a2d0..d61ff6a 100644
--- a/content/building/timeout.md
+++ b/content/building/timeout.md
@@ -6,7 +6,7 @@ weight: 7
 
 By default, Codemagic builds are set to time out after 60 minutes. You can decrease or increase the maximum build duration **per workflow**.
 
-* In `codemagic.yaml`, build timeout limit can be defined in the [workflow section](../getting-started/yaml#workflows). 
+* In `codemagic.yaml`, the build timeout limit can be defined in the [workflow section](../getting-started/yaml#workflows). 
 * For Flutter projects configured via the workflow editor, you can adjust the maximum build duration in **App settings > Workflow settings > Max build duration**. Move the slider right or left to increase or decrease the maximum build duration. The minimum build duration is 30 min and the maximum is 120 min.
 
 {{<notebox>}}
diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index ae4796d..f6671a2 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -33,7 +33,7 @@ It is recommended to create a dedicated App Store Connect API key for Codemagic
 2. Click on the + sign to generate a new API key.
 3. Enter the name for the key and select an access level. We recommend choosing either `Developer` or `App Manager`, read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
 4. Click **Generate**.
-5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+5. As soon as the key is generated, you can see it added to the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
 
 {{<notebox >}} 
 Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in the Codemagic UI.
@@ -66,7 +66,7 @@ environment:
 
 - `CERTIFICATE_PRIVATE_KEY`
 
-  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the command below in your terminal. Note that you should encrypt the **contents** of the file and save the encrypted value to the environment variable. 
+  An RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the command below in your terminal. Note that you should encrypt the **contents** of the file and save the encrypted value to the environment variable. 
 
 ```bash
 ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
diff --git a/content/code-signing-yaml/signing-macos.md b/content/code-signing-yaml/signing-macos.md
index 4aa577d..185c4c2 100644
--- a/content/code-signing-yaml/signing-macos.md
+++ b/content/code-signing-yaml/signing-macos.md
@@ -4,7 +4,7 @@ description: How to set up macOS code signing in codemagic.yaml
 weight: 2
 ---
 
-All macOS applications have to be digitally signed before they can be installed on devices or made available to the public via Mac App Store or outside of Mac App Store.
+All macOS applications have to be digitally signed before they can be installed on devices or made available to the public via the Mac App Store or outside of the Mac App Store.
 
 {{<notebox>}}
 This guide only applies to workflows configured with the **codemagic.yaml**. If your workflow is configured with **Flutter workflow editor** please go to [Signing macOS apps using the Flutter workflow editor](../code-signing/macos-code-signing).
@@ -25,7 +25,7 @@ You can upload your signing certificate and distribution profile to Codemagic to
 To set up publishing the code-signed application to App Store Connect, refer [here](../publishing-yaml/distribution/#app-store-connect).
 
 {{<notebox>}}
-Under the hood, we use [Codemagic CLI tools](https://github.com/codemagic-ci-cd/cli-tools) to perform macOS code signing ⏤ these tools are open source and can also be [used locally](../building/running-locally/) or in other environments. More specifically, we use the [xcode-project utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md) for preparing the code signing properties for the build, the [keychain utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md) for managing macOS keychains and certificates, and the [app-store-connect utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md) for creating and downloading code signing certificates and provisioning profiles. The latter makes use of the App Store Connect API for authenticating with Apple Developer Portal.
+Under the hood, we use [Codemagic CLI tools](https://github.com/codemagic-ci-cd/cli-tools) to perform macOS code signing ⏤ these tools are open source and can also be [used locally](../building/running-locally/) or in other environments. More specifically, we use the [xcode-project utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md) for preparing the code signing properties for the build, the [keychain utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md) for managing macOS keychains and certificates, and the [app-store-connect utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md) for creating and downloading code signing certificates and provisioning profiles. The latter makes use of the App Store Connect API for authenticating with the Apple Developer Portal.
 {{</notebox>}}
 
 ## Automatic code signing
@@ -40,7 +40,7 @@ It is recommended to create a dedicated App Store Connect API key for Codemagic
 2. Click on the + sign to generate a new API key.
 3. Enter the name for the key and select an access level. We recommend choosing either `Developer` or `App Manager`, read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
 4. Click **Generate**.
-5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+5. As soon as the key is generated, you can see it added to the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
 
 {{<notebox >}}
 Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in the Codemagic UI.
@@ -69,19 +69,19 @@ environment:
 
 - `APP_STORE_CONNECT_PRIVATE_KEY`
 
-  This is the private API key downloaded from App Store Connect. You'll need to [encrypt](../building/encrypting/) the **contents** of the file in the codemagic.yaml editor UI (and not the file itself). On macOS you can use `pbcopy < AuthKey_XXXXXX.p8` to copy the contents of the private key and paste this into the UI encryption tool.
+  This is the private API key downloaded from App Store Connect. You'll need to [encrypt](../building/encrypting/) the **contents** of the file in the codemagic.yaml editor UI (and not the file itself). On macOS, you can use `pbcopy < AuthKey_XXXXXX.p8` to copy the contents of the private key and paste this into the UI encryption tool.
 
 - `CERTIFICATE_PRIVATE_KEY`
 
-  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic fetches or creates. You'll need to either create a new certificate and private key or find an existing one. You'll need to [encrypt](../building/encrypting/) the **contents** of the private key in the codemagic.yaml editor UI (and not the file itself). On macOS, you can use `pbcopy < private_key` to copy the contents of the private key and paste this into the UI encryption tool.
+  An RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic fetches or creates. You'll need to either create a new certificate and private key or find an existing one. You'll need to [encrypt](../building/encrypting/) the **contents** of the private key in the codemagic.yaml editor UI (and not the file itself). On macOS, you can use `pbcopy < private_key` to copy the contents of the private key and paste this into the UI encryption tool.
 
-  App Developer Portal has a limitation of maximum 2 macOS distribution certificates per team. This means that if you already have 2 `Mac Installer Distribution` or `Developer ID Application` certificates, you won't be able to create new ones. If any of those are not used, you may revoke them in the [Apple Developer Portal](https://developer.apple.com/account/resources/certificates/list), which will make it possible to create new certificates with the specified new certificate private key. You can create a new 2048 bit RSA key by running the following command in your terminal:
+  App Developer Portal has a limitation of maximum of 2 macOS distribution certificates per team. This means that if you already have 2 `Mac Installer Distribution` or `Developer ID Application` certificates, you won't be able to create new ones. If any of those are not used, you may revoke them in the [Apple Developer Portal](https://developer.apple.com/account/resources/certificates/list), which will make it possible to create new certificates with the specified new certificate private key. You can create a new 2048 bit RSA key by running the following command in your terminal:
 
   ```bash
   ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
   ```
 
-   If you wish to use existing certificates and don't have the private key used to create them available, or those certificates were created via a Certificate Authority request or via Xcode, you can [export](https://help.apple.com/xcode/mac/current/#/dev154b28f09) the existing certificate(s) into `.p12` container(s) and get the used private key so as to be able to fetch these certificates from another machine. You can export the private key and convert it using the following command:
+   If you wish to use existing certificates and don't have the private key used to create them available, or those certificates were created via a Certificate Authority request or via Xcode, you can [export](https://help.apple.com/xcode/mac/current/#/dev154b28f09) the existing certificate(s) into `.p12` container(s) and get the used private key to be able to fetch these certificates from another machine. You can export the private key and convert it using the following command:
 
     ```bash
     openssl pkcs12 -in <your_certificate_name>.p12 -nodes -nocerts | openssl rsa -out <your_private_key_name>.key
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index abad308..11dfa80 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -4,7 +4,7 @@ title: Android code signing
 weight: 3
 ---
 
-Code signing is required for distributing your Android app to Google Play store. It enables to identify who developed the app and ensure that all updates to the app come from you.
+Code signing is required for distributing your Android app to the Google Play store. It enables to identify who developed the app and ensure that all updates to the app come from you.
 
 {{<notebox>}}
 This guide only applies to workflows configured with the **Flutter workflow editor**. If your workflow is configured with **codemagic.yaml** please go to [Signing Android apps using codemagic.yaml](../code-signing-yaml/signing-android).
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index a6f0843..d5bd706 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -57,7 +57,7 @@ It is recommended to create a dedicated App Store Connect API key for Codemagic
 2. Click on the + sign to generate a new API key.
 3. Enter the name for the key and select an access level. We recommend choosing either `Developer` or `App Manager`, read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
 4. Click **Generate**.
-5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+5. As soon as the key is generated, you can see it added to the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
 
 {{<notebox >}} 
 Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in Codemagic UI.
@@ -127,7 +127,7 @@ To export the signing certificate:
 
 To export the provisioning profile:
 
-1. Log in to Apple Developer portal.
+1. Log in to the Apple Developer portal.
 2. Navigate to **Certificates, Identifiers & Profiles > Profiles**.
 3. Select the provisioning profile you would like to export and click **Download**.
 4. Save it to have it ready.
diff --git a/content/code-signing/macos-code-signing.md b/content/code-signing/macos-code-signing.md
index 6575637..093e9be 100644
--- a/content/code-signing/macos-code-signing.md
+++ b/content/code-signing/macos-code-signing.md
@@ -4,9 +4,9 @@ title: macOS code signing
 weight: 2
 ---
 
-Code signing is required by Apple for integrating app services, installing your macOS app on another machine or for uploading it to distribute it through the Mac App Store or outside of Mac App Store. It enables to identify who developed the app and ensure that all the changes to the app come from you or your team.
+Code signing is required by Apple for integrating app services, installing your macOS app on another machine or uploading it to distribute it through the Mac App Store or outside of Mac App Store. It enables to identify who developed the app and ensure that all the changes to the app come from you or your team.
 
-To create an application package which can be published to Mac App Store on Codemagic, you need to set up code signing.
+To create an application package that can be published to Mac App Store on Codemagic, you need to set up code signing.
 
 {{<notebox>}}
 This guide only applies to workflows configured with the **Flutter workflow editor**. If your workflow is configured with **codemagic.yaml** please go to [Signing macOS apps using codemagic.yaml](../code-signing-yaml/signing-macos).
@@ -17,7 +17,7 @@ This guide only applies to workflows configured with the **Flutter workflow edit
 Before you can start signing or distributing your app, there are a few things you need.
 
 * [Apple Developer Program](https://developer.apple.com/programs/enroll/) membership
-* An [app ID](https://developer.apple.com/account/resources/identifiers/bundleId/add/) for your macOS app in Apple Developer portal
+* An [app ID](https://developer.apple.com/account/resources/identifiers/bundleId/add/) for your macOS app in the Apple Developer portal
 * **signing certificates** (`Personal Information Exchange, .p12`)
 * A **provisioning profile** (`.provisionprofile`)
 
@@ -31,9 +31,9 @@ With **automatic code signing**, Codemagic will create both the certificate and
 With **manual code signing**, you need to upload the signing files manually.
 {{</notebox>}}
 
-Signing an application with a development certificate and profile requires the UUID of the machine which builds the appliction to be present in the profile. Therefore, using a development certificate is not possible on Codemagic since the build machine won't be listed in the used profile.
+Signing an application with a development certificate and profile requires the UUID of the machine which builds the application to be present in the profile. Therefore, using a development certificate is not possible on Codemagic since the build machine won't be listed in the used profile.
 
-Distibution is possible to Mac App Store (using `Mac App Distribution` and `Mac Installer Distribution` certificates and `Mac App Store` profile) and outside of Mac App Store (using `Developer ID Application` certificate and `Developer ID` profile). 
+Distribution is possible to Mac App Store (using `Mac App Distribution` and `Mac Installer Distribution` certificates and `Mac App Store` profile) and outside of Mac App Store (using `Developer ID Application` certificate and `Developer ID` profile). 
 
 **Note**: Currently, Codemagic only supports code signing the app for publishing to the Mac App Store.
 
@@ -43,9 +43,9 @@ Codemagic makes automatic code signing possible by connecting to [App Store Conn
 
 The following sections describe how to set up automatic code signing for builds configured in the UI. If you're building with `codemagic.yaml`, please refer [here](../code-signing-yaml/signing-macos).
 
-Note that Apple Developer Portal has a limitation of maximum 2 macOS distribution certificates per team. This means that if you already have 2 `Mac Installer Distribution` certificates, Codemagic won't be able to create new ones. Using existing certificates won't be possible because the private key required to install them is only stored on your machine.
+Note that Apple Developer Portal has a limitation of maximum of 2 macOS distribution certificates per team. This means that if you already have 2 `Mac Installer Distribution` certificates, Codemagic won't be able to create new ones. Using existing certificates won't be possible because the private key required to install them is only stored on your machine.
 
-You may revoke an existing certifiate to allow Codemagic create a new one using a Codemagic team specific private key which is only stored on Codemagic. Alternatively, you can use [manual code signing](#manual-code-signing-to-publish-to-mac-app-store).
+You may revoke an existing certificate to allow Codemagic to create a new one using a Codemagic team-specific private key which is only stored on Codemagic. Alternatively, you can use [manual code signing](#manual-code-signing-to-publish-to-mac-app-store).
 
 ### Step 1. Creating an App Store API key for Codemagic
 
@@ -55,7 +55,7 @@ It is recommended to create a dedicated App Store Connect API key for Codemagic
 2. Click on the + sign to generate a new API key.
 3. Enter the name for the key and select an access level. We recommend choosing either `Developer` or `App Manager`, read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
 4. Click **Generate**.
-5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+5. As soon as the key is generated, you can see it added to the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
 
 {{<notebox >}}
 Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in Codemagic UI.
@@ -122,7 +122,7 @@ To export the signing certificate:
 
 To export the provisioning profile:
 
-1. Log in to Apple Developer portal.
+1. Log in to the Apple Developer portal.
 2. Navigate to **Certificates, Identifiers & Profiles > Profiles**.
 3. Select the provisioning profile you would like to export and click **Download**.
 4. Save it to have it ready.
diff --git a/content/flutter/automatic-build-triggering.md b/content/flutter/automatic-build-triggering.md
index 4718330..8fa5dac 100644
--- a/content/flutter/automatic-build-triggering.md
+++ b/content/flutter/automatic-build-triggering.md
@@ -16,14 +16,14 @@ You can configure the branches to track under **Watched branch patterns**.
 
 The branches tracked for building are selected by entering branch patterns and including or excluding the matching branches. Note that you can either enter the exact name of the branch to select it or use the wildcard symbols to select more than one branch with one pattern. Click **Show pattern examples** in the UI for tips.
 
-The first (i.e. topmost) pattern in the list is applied first. Each following pattern will limit the set of branches further. In the case of conflicting patterns, the latter one will prevail. You can check the targeted branches by clicking the eye icon next to **Watched branch patterns**.
+The first (i.e. topmost) pattern in the list is applied first. Each following pattern will limit the set of branches further. In the case of conflicting patterns, the latter will prevail. You can check the targeted branches by clicking the eye icon next to **Watched branch patterns**.
 
 To add a new branch pattern:
 
 1. Navigate to **App settings > Build triggers**.
 2. Enter a pattern matching the name of one or more branches in the project.
 3. Select **Include** or **Exclude** from the dropdown to limit the set of targeted branches by either including or excluding the matching branches.
-4. For **pull request builds**, select whether the tracked branch is the **Source** or the **Target** branch of the pull request. This setting has no effect on other types of builds.
+4. For **pull request builds**, select whether the tracked branch is the **Source** or the **Target** branch of the pull request. This setting does not affect other types of builds.
 5. Click **Add pattern** to save it. You can always edit or delete added patterns.
 
 ## Build triggers
@@ -44,9 +44,9 @@ If you have a `codemagic.yaml` in the repository, it is automatically used for c
 
 * If you want to only run tests for pull requests and skip building for platforms, select **Run tests only** under Build > Build for platforms.
 
-**Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
+**Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings do not affect tag builds.
 
-If enabled, you would be able to specify tag patterns to trigger builds. Similarly to **Watched branch patterns**, the first pattern in the list is applied first and each pattern will limit the set of tag labels further. In the case of conflicting patterns, the latter one will prevail. Using wildcard symbols is supported, click **Show pattern examples** for more information.
+If enabled, you would be able to specify tag patterns to trigger builds. Similarly to **Watched branch patterns**, the first pattern in the list is applied first and each pattern will limit the set of tag labels further. In the case of conflicting patterns, the latter will prevail. Using wildcard symbols is supported, click **Show pattern examples** for more information.
 
 **Cancel outdated webhook builds**. When checked, Codemagic will automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch. We recommend enabling this feature when you're making several commits, each of which triggers a build.
 
diff --git a/content/flutter/flutter-projects.md b/content/flutter/flutter-projects.md
index ca2afa5..1a02fc3 100644
--- a/content/flutter/flutter-projects.md
+++ b/content/flutter/flutter-projects.md
@@ -35,7 +35,7 @@ When you're building for release, you will need to build the app in Release mode
 
 ### Building Android app bundles
 
-You can build your app in [Android App Bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app  .apk(s) will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
+You can build your app in [Android App Bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app  .apk(s) will be dynamically created and optimized for the user's device configuration when the app is installed from Google Play Store.
 
 In order to upload your Android App Bundle to Google Play, you will need to:
 
@@ -77,7 +77,7 @@ In your app settings, select **macOS** under **Build for platforms** and an avai
 
 Then scroll down to the **Build** section to specify the **Flutter**, **Xcode** and **CocoaPods** version, select the build **Mode** (**Debug**, **Release** or **Profile**) or add additional build arguments, e.g. for [build versioning](../building/build-versioning) or verbose logging. 
 
-At the end of a successful build, Codemagic outputs a downloadable `.zip` file containing an `.app` archive. If you build for releasing to the App Store, you need to also set up [code signing](../code-signing/macos-code-signing/) to receive a `.pkg` file.
+At the end of a successful build, Codemagic outputs a downloadable `.zip` file containing an `.app` archive. If you build for release to the App Store, you need to also set up [code signing](../code-signing/macos-code-signing/) to receive a `.pkg` file.
 
 ## Building Linux apps
 
@@ -101,7 +101,7 @@ Additionally, you may want to install the generated `.snap` package onto your ma
 
 ## Running tests only
 
-In some cases you may want to run only tests and not build the entire project, e.g. when you're triggering a build on pull request update. To do so, [enable testing](../testing/running-automated-tests), and then in **App settings > Build > Build for platforms**, select **Run tests only**. Codemagic will then build the workflow until the testing step and skip building the app.
+In some cases, you may want to run only tests and not build the entire project, e.g. when you're triggering a build on pull request update. To do so, [enable testing](../testing/running-automated-tests), and then in **App settings > Build > Build for platforms**, select **Run tests only**. Codemagic will then build the workflow until the testing step and skip building the app.
 
 If tests fail, the status of the build will be “failed” and you'll receive an email about failing tests. If you have publishing to Slack configured, you'll receive notifications on build status updates.
 
@@ -115,7 +115,7 @@ For information about using API calls to trigger builds, look [here](../rest-api
 
 ## Multiple Flutter projects in one repository
 
-Codemagic supports monorepos and is able to detect multiple Flutter projects in a repository or projects not in the repository root provided that each project has its `pubspec.yaml` file with `flutter` dependency.
+Codemagic supports monorepos and can detect multiple Flutter projects in a repository or projects not in the repository root provided that each project has its `pubspec.yaml` file with `flutter` dependency.
 
 Initially, the only project path for every application is `.` — the root of the repository. The repository is scanned for Flutter projects during the first build, and if multiple projects are found, the first build is run for the project with the highest number of platforms available (presence of `android`, `ios` etc. directories). 
 
@@ -125,4 +125,4 @@ If you have changed the location of the project in the repository, renamed its p
 
 {{<notebox>}}
 Rescanning is not available for repositories added from a custom source. Instead, project paths are scanned on each new build and are updated on change.
-{{</notebox>}}
\ No newline at end of file
+{{</notebox>}}
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index d3fd3b3..234f8a0 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -24,7 +24,7 @@ Adding apps from GitHub requires authorizing Codemagic and installing the Codema
 Codemagic uses the [Codemagic CI/CD GitHub App](https://github.com/apps/codemagic-ci-cd) to integrate with GitHub. To share your GitHub repositories with Codemagic, Codemagic GitHub App will have to be installed on the account or organization in GitHub from which you would like to build applications.
 
 {{<notebox>}}
-Note that the GitHub App integration can be connected separately for your personal account and each team. The integrations configured for your personal account apply to the apps that are not part of a team in Codemagic. While teams inherit the integrations from team owner's personal account, it is highly recommended to set up repository integrations separately in team settings.
+Note that the GitHub App integration can be connected separately for your personal account and each team. The integrations configured for your personal account apply to the apps that are not part of a team in Codemagic. While teams inherit the integrations from the team owner's personal account, it is highly recommended to set up repository integrations separately in team settings.
 {{</notebox>}}
 
 1. In your user or team settings in Codemagic, navigate to the Integrations section and locate the GitHub App integration. The next steps may vary slightly depending on whether you have already authorized Codemagic or have the Codemagic GitHub App installed.
@@ -32,7 +32,7 @@ Note that the GitHub App integration can be connected separately for your person
 3. Back in the Integrations section, click **Finish installation** and then **Install app**. Note that at this stage you can also revoke your authorization of the app by clicking **Disconnect**.
 4. A popup window opens for you to select the organization or account where to install the app. Pick the installation location. You can later install the app to additional accounts.
 5. Then choose whether to share **All repositories** from the account or select the repositories to share by choosing **Select repositories only**.
-6. Click **Install & Authorize** to finish installation (you may be asked to confirm that action by entering your password). If you do not have the permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation.
+6. Click **Install & Authorize** to finish installation (you may be asked to confirm that action by entering your password). If you do not have permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation.
 
 ### Managing connected GitHub accounts and organizations
 
@@ -57,7 +57,7 @@ To completely remove the integration, **uninstall** the Codemagic CI/CD app and
 Here are some tips on what to check if you can't see your repository listed in Codemagic or it's shown as unavailable.
 
 * If you chose to grant access to **select repositories only** as opposed to all repositories when setting up the GitHub App, make sure you have also granted access to the repository in question. Click **Manage integration > Configure** in team or user integrations to configure repository access settings.
-* Your personal Codemagic account and each team have separate integrations. Make sure you have connected the GitHub App integration in the right team or in your user settings.
+* Your personal Codemagic account and each team have separate integrations. Make sure you have connected the GitHub App integration to the right team or in your user settings.
 * If you build apps from different GitHub accounts or organizations, make sure that you have installed the GitHub App on the account that has the repository available. Click **Manage integration > Configure** to see which accounts have been connected. You can also visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or github(dot)com/organizations/your-organization/settings/installations for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
 * Private GitHub repositories can be shared with Codemagic only when the GitHub App is installed on the account that owns the repository. If you are a collaborator to a private repository, please ask the repository owner to install Codemagic GitHub App in GitHub: [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd)
 
@@ -88,7 +88,7 @@ Apps that cannot be added via a repository integration can be cloned from a URL.
 
 1. Click **Add application** in the top right corner of the Applications page.
 2. Select **Other** and click **Next: Select repository**.
-3. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `git@example.com:username/repo.git`.
+3. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository by clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `git@example.com:username/repo.git`.
 4. Upload the **SSH private key** file. If your key is password-protected, enter the **Private key passphrase**.
 
    **Alternatively**, you can click **Generate key pair** and have Codemagic create an SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
@@ -102,23 +102,23 @@ Apps that cannot be added via a repository integration can be cloned from a URL.
 On clicking **Generate key pair**, Codemagic creates a secure 4096 bit SSH key pair. The private key will be used in Codemagic and the public key must be added to your repository settings. Click **Copy to clipboard** to copy the public key.
 
 - If your repository is hosted on [GitHub](https://developer.github.com/v3/guides/managing-deploy-keys/#setup-2), [GitLab](https://www.deployhq.com/support/projects/updating-your-project-repository/uploading-your-public-key-to-gitlab-manually) or [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), add the public key to your repository's access/deployment keys.
-- For self-hosted repositories, request your git server admins to allow access for the provided public key.
+- For self-hosted repositories, request your git server admins to allow access to the provided public key.
 
 After you have added the public key to your repository settings, finish adding the app by clicking **Finish: Add application**.
 
-{{<notebox>}}Don't close the module before you have finished adding the app, otherwise you'll need to start over and generate a new SSH key.{{</notebox>}}
+{{<notebox>}}Don't close the module before you have finished adding the app, otherwise, you'll need to start over and generate a new SSH key.{{</notebox>}}
 
 ### Connecting repository via HTTP/HTTPS
 
 1. Click **Add application** in the top right corner of the Applications page.
 2. Select **Other** and click **Next: Select repository**.
-3. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
+3. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository by clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
 4. If your repository is private, then enter your **Username** and **Password**. In the case of a public repository, check **Public repository**.
 5. Finish setting up the application by selecting the project type and clicking **Finish: Add application**. You will be then redirected to the app settings.
 
 >See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
 
-## Repositories behind firewall
+## Repositories behind a firewall
 
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
 
diff --git a/content/getting-started/building-a-cordova-app.md b/content/getting-started/building-a-cordova-app.md
index 54a7db3..e094ff5 100644
--- a/content/getting-started/building-a-cordova-app.md
+++ b/content/getting-started/building-a-cordova-app.md
@@ -38,7 +38,7 @@ To build, code sign, and publish Cordova Android and iOS apps:
 You can find an up-to-date codemagic.yaml Cordova iOS workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/cordova/cordova-demo-project/codemagic.yaml#L2).
 {{</notebox>}}
 
-The following example workflow shows how to build your **Cordova** iOS app and publish to App Store Connect.
+The following example workflow shows how to build your **Cordova** iOS app and publish it to App Store Connect.
 
 ```yaml
 workflows:
@@ -130,7 +130,7 @@ workflows:
 ```
 
 {{<notebox>}}
-Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) CLI command to prepare iOS application code signing properties for build.
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) CLI command to prepare iOS application code signing properties for the build.
 {{</notebox>}}
 
 ## Android Cordova workflow example
@@ -139,7 +139,7 @@ Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/
 You can find an up-to-date codemagic.yaml Cordova Android workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/cordova/cordova-demo-project/codemagic.yaml#L87).
 {{</notebox>}}
 
-The following example workflow shows how to build your **Cordova** Android app and publish to a Google Play alpha track.
+The following example workflow shows how to build your **Cordova** Android app and publish it to a Google Play alpha track.
 
 ```yaml
 workflows:
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index 65389b6..eaafc27 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -47,7 +47,7 @@ To test, code sign and publish an Android app:
 You can find an up-to-date codemagic.yaml Android workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/android/android-espresso-demo-project/codemagic.yaml).
 {{</notebox>}}
 
-The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
+The following example shows how to set up a workflow that builds your app and publishes it to a Google Play internal track.
 
 ```yaml
 workflows:
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index c4eb42f..1c8b431 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -54,7 +54,7 @@ workflows:
         instance_type: mac_mini
         environment:
             vars:
-                GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...) # <-- Put encrypted CONTENTS of your Gloud crendentials file here
+                GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...) # <-- Put encrypted CONTENTS of your Gloud credentials file here
                 PACKAGE_NAME: "YOUR_PACKAGE_NAME" # <-- Put your package name here e.g. com.domain.myapp
                 CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
                 CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
@@ -123,7 +123,7 @@ workflows:
 You can find an up-to-date codemagic.yaml React Native iOS workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/react-native/react-native-demo-project/codemagic.yaml#L72).
 {{</notebox>}}
 
-Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for the build.
 
 Script for building an iOS application:
 
@@ -230,7 +230,7 @@ workflows:
 
 To test and publish a React Native app:
 
-* The code for testing a React Native app also goes under `scripts`, before build commands. An example for testing a React Naive app can be found [here](../testing-yaml/testing/#react-native-unit-test).
+* The code for testing a React Native app also goes under `scripts`, before build commands. An example for testing a React Native app can be found [here](../testing-yaml/testing/#react-native-unit-test).
 * All iOS and Android applications need to be signed before release. See how to set up [iOS code signing](../code-signing-yaml/signing-ios) and [Android code signing](../code-signing-yaml/signing-android).
 * All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/#publishing).
 
@@ -248,4 +248,4 @@ Additionally, pay attention to how `signingConfigs{}` and `buildTypes{}` are con
 
 {{<notebox>}}Build versioning for iOS projects is performed as a script step in the codemagic.yaml{{</notebox>}}
  
-See the **Increment build number** script in the [codemagic.yaml](https://github.com/codemagic-ci-cd/react-native-demo-project/blob/master/codemagic.yaml) in the React Native demo project on GitHub.
\ No newline at end of file
+See the **Increment build number** script in the [codemagic.yaml](https://github.com/codemagic-ci-cd/react-native-demo-project/blob/master/codemagic.yaml) in the React Native demo project on GitHub.
diff --git a/content/getting-started/building-a-snap-package.md b/content/getting-started/building-a-snap-package.md
index a77c56d..c8829e1 100644
--- a/content/getting-started/building-a-snap-package.md
+++ b/content/getting-started/building-a-snap-package.md
@@ -40,7 +40,7 @@ Additionally, you may want to install the generated `.snap` package onto your ma
 
     snap install your-package.snap --dangerous
 
-In case you are packaging a **Flutter application**, be sure to set `SNAPCRAFT_BUILD_ENVIRONMENT` environment variable to `host`. It is required to avoid virtualization. Read more about virtualization options [here](https://flutter.dev/docs/deployment/linux). Additionally, Snapcraft manages all the dependencies according to `snapcraft.yaml` configuration. There is no need to include Flutter version in `codemagic.yaml`.
+In case you are packaging a **Flutter application**, be sure to set `SNAPCRAFT_BUILD_ENVIRONMENT` environment variable to `host`. It is required to avoid virtualization. Read more about virtualization options [here](https://flutter.dev/docs/deployment/linux). Additionally, Snapcraft manages all the dependencies according to `snapcraft.yaml` configuration. There is no need to include the Flutter version in `codemagic.yaml`.
 
 {{<notebox>}}
 **Note**: Snap is only available on Linux instances. Make sure to have `instance_type: linux` or `instance_type: linux_x2` in your `codemagic.yaml`. See the build machine specification [here](../specs/versions-linux/).
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index 5ba66c1..2178bdb 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -39,7 +39,7 @@ To test, code sign, and publish Ionic Android and iOS apps:
 You can find an up-to-date codemagic.yaml Ionic Android workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/ionic/ionic-capacitor-demo-project/codemagic.yaml#L95).
 {{</notebox>}}
 
-The following example shows how to set up a workflow that builds your **Ionic Capacitor** Android app and publishes to a Google Play internal track.
+The following example shows how to set up a workflow that builds your **Ionic Capacitor** Android app and publishes it to a Google Play internal track.
 
 ```yaml
 workflows:
@@ -121,7 +121,7 @@ android {
 ```
 ## Android Ionic Cordova workflow example
 
-The following example shows how to set up a workflow that builds your **Ionic Cordova** Android app and publishes to a Google Play internal track.
+The following example shows how to set up a workflow that builds your **Ionic Cordova** Android app and publishes it to a Google Play internal track.
 
 ```yaml
 workflows:
@@ -286,7 +286,7 @@ workflows:
 ```
 
 {{<notebox>}}
-Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) CLI command to prepare iOS application code signing properties for build.
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) CLI command to prepare iOS application code signing properties for the build.
 {{</notebox>}}
 
 ## iOS Ionic Cordova workflow example
diff --git a/content/getting-started/building_a_native_app_with_flutter_module.md b/content/getting-started/building_a_native_app_with_flutter_module.md
index 4a931cb..1098f85 100644
--- a/content/getting-started/building_a_native_app_with_flutter_module.md
+++ b/content/getting-started/building_a_native_app_with_flutter_module.md
@@ -10,7 +10,7 @@ aliases:
 
 Flutter can be integrated into your existing application as a library to render a part of your app’s UI in Flutter. To add a Flutter module to an existing app, please refer to [the official Flutter documentation](https://flutter.dev/docs/development/add-to-app).
 
-The examples below show how to build apps containing Flutter modules using `codemagic.yaml`. The examples provided here are inspired by [Flutter add-to-app samples](https://github.com/flutter/samples/tree/master/add_to_app) where the Flutter module directory (reffered to as `my_flutter_module` in templates) is on the same level as the host app directory (reffered to as `my_host_app`). 
+The examples below show how to build apps containing Flutter modules using `codemagic.yaml`. The examples provided here are inspired by [Flutter add-to-app samples](https://github.com/flutter/samples/tree/master/add_to_app) where the Flutter module directory (referred to as `my_flutter_module` in templates) is on the same level as the host app directory (referred to as `my_host_app`). 
 
 ### Using a Flutter module (with dependencies) as a library
 
@@ -54,7 +54,7 @@ If you don't have a workspace, use
 
 ### Using a prebuilt Flutter module
 
-Using a prebuilt module means that you don't need to build it every time the host app is built if there are no changes to the module. You may speed up your overall building time by precompiling your Flutter module once, committing it to the repository and reusing it afterwards without the need to build it from source.
+Using a prebuilt module means that you don't need to build it every time the host app is built if there are no changes to the module. You may speed up your overall building time by precompiling your Flutter module once, committing it to the repository and reusing it afterwards without the need to build it from the source.
 
 * In an Android app:
 
@@ -88,4 +88,4 @@ scripts:
       cd my_host_app
       pod install
       xcodebuild build -project "MyXcodeProject.xcodeproj" -scheme "MyXcodeScheme" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
-```
\ No newline at end of file
+```
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index fdaafcf..0e2068f 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -16,7 +16,7 @@ When signing up via GitHub, you will be asked to authorize Codemagic to authenti
 When authenticating using a Bitbucket or GitLab account via OAuth, Codemagic asks for access to your account and repositories so they can be listed when you're adding applications. You will need to authorize Codemagic to connect the Bitbucket/GitLab account to your Codemagic account.
 ## Sign up via email
 
-Enter your email address and name and click **Create your account** to get started. Codemagic will then send a six-character authentication key on the provided email address. Enter the authentication key and click **Continue** to verify the email address and finish signup. Note that an unused key expires in 10 minutes. 
+Enter your email address and name and click **Create your account** to get started. Codemagic will then send a six-character authentication key to the provided email address. Enter the authentication key and click **Continue** to verify the email address and finish signup. Note that an unused key expires in 10 minutes. 
 
 You will be sent a new authentication key every time you need to log in again.
 ## Connecting several repository integrations
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 3a29d63..502ada3 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -13,9 +13,9 @@ aliases:
 
 In order to use `codemagic.yaml` for build configuration on Codemagic, it has to be committed to your repository. The name of the file must be `codemagic.yaml` and it must be located in the root directory of the repository.
 
-When detected in repository, `codemagic.yaml` is automatically used for configuring builds that are triggered in response to the events defined in the file, provided that a [webhook](../building/webhooks) is set up. 
+When detected in the repository, `codemagic.yaml` is automatically used for configuring builds triggered in response to the events defined in the file, provided that a [webhook](../building/webhooks) is set up. 
 
-Builds can be also started manually by clicking **Start new build** in Codemagic and selecting the branch and workflow to build in the **Specify build configuration** popup.
+Builds can also be started manually by clicking **Start new build** in Codemagic and selecting the branch and workflow to build in the **Specify build configuration** popup.
 
 ## Syntax
 
@@ -49,7 +49,7 @@ scripts:
 
 ### Reusing sections
 
-If a particular section would be reused multiple times in the file, e.g. in each workflow, you can avoid repetitions by using **anchors**. This is also convenient when you need to make changes to the code as you would have to edit it in just one place. 
+If a particular section would be reused multiple times in the file, e.g. in each workflow, you can avoid repetitions by using **anchors**. This is also convenient when you need to make changes to the code, as you would have to edit it in just one place. 
 
 Define the section to be reused by adding `&` in front of it.
 
@@ -71,7 +71,7 @@ scripts:
 
 ## Template
 
-This is the skeleton structure of `codemagic.yaml`. Each section along with the configuration options is described in more detail below.
+This is the skeleton structure of `codemagic.yaml`. Each section, along with the configuration options, is described in more detail below.
 
 ```yaml
 workflows:
@@ -109,7 +109,7 @@ workflows:
 
 ### Workflows
 
-You can use `codemagic.yaml` to define several workflows for building a project. Each workflow describes the entire build pipeline from triggers to publishing. For example, you may want to have separate workflows for developing, testing and publishing the app.
+You can use `codemagic.yaml` to define several workflows for building a project. Each workflow describes the entire build pipeline from triggers to publishing. For example, you may want to have separate workflows for developing, testing, and publishing the app.
 
 ```yaml
 workflows:
@@ -212,7 +212,7 @@ See the default software versions on Codemagic build machines:
 
 {{<notebox>}}
 
-Caching `$HOME/Library/Developer/Xcode/DerivedData` won't help to speed up iOS builds with Xcode 10.2 or later.
+Caching `$HOME/Library/Developer/Xcode/DerivedData` won't help speed up iOS builds with Xcode 10.2 or later.
 
 {{</notebox>}}
 
@@ -352,7 +352,7 @@ publishing:
 
 ## Conditional build triggers
 
-You can skip building particular commits or watch for changes in specific files to trigger builds. It's possible to define build conditions per workflow or specific build steps.
+You can skip building particular commits or watch for changes in specific files to trigger builds. In addition, it's possible to define build conditions per workflow or specific build steps.
 ### Skip building a commit
 
 If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.
@@ -378,11 +378,11 @@ workflows:
           - '**/*.md'
 ```
 
-In this case, build would be skipped if there were changes only to Markdown files `.md`.
+In this case, the build would be skipped if there were changes only to Markdown files `.md`.
 
 Note that `codemagic.yaml` is always included in the changeset by default.
 
-Both keys `includes` and `excludes` in `changeset` are *optional*. If the `includes` key is not specified, its value would default to `'.'`. The `excludes` key defaults to no exclusions.
+Both keys `includes` and `excludes` in `changeset` are *optional*. If the `includes` key is not specified, its value will default to `'.'`. The `excludes` key defaults to no exclusions.
 
 If you use a monorepo, each workflow could be responsible for building a part of your application. Use conditional workflow triggering and specify the path to the application in the changeset as in the example below.
 
@@ -403,7 +403,7 @@ As a result, commits with changes outside of the android folder will not trigger
 
 ## Conditional build step execution
 
-You may also want to skip some specific steps when building your application. Use the same approach with scripts
+You may also want to skip some specific steps when building your application. Use the same approach with scripts.
 
 ```yaml
 workflows:
@@ -422,7 +422,7 @@ workflows:
 
 ## Working directory
 
-You may select a working directory globally for the entire workflow or for individual scripts only. If not specified, the global working directory defaults to the directory where the repository is cloned (`/Users/builder/clone`). You can override the global working directory by specifying the working directory in the individual steps. Consider the example below:
+You may select a working directory globally for the entire workflow or individual scripts only. If not specified, the global working directory defaults to the directory where the repository is cloned (`/Users/builder/clone`). You can override the global working directory by specifying the working directory in the individual steps. Consider the example below:
 
 ```yaml
 workflows:
diff --git a/content/integrations/jira-integration.md b/content/integrations/jira-integration.md
index 409c7b4..db8c0c2 100644
--- a/content/integrations/jira-integration.md
+++ b/content/integrations/jira-integration.md
@@ -4,15 +4,15 @@ description: How to integrate your workflows with Jira using codemagic.yaml
 weight: 1
 ---
 
-**Jira** is a an issue tracking and project management product developed by Atlassian. Many software development teams use it to maintain visibility of their projects. 
+**Jira** is an issue tracking and project management product developed by Atlassian. Many software development teams use it to maintain the visibility of their projects. 
 
-It offers a REST API which can be used used in conjunction with your **Codemagic** workflows in order to add comments, upload attachments or transition the status of an issue, story or epic.
+It offers a REST API that can be used in conjunction with your **Codemagic** workflows to add comments, upload attachments, or transition the status of an issue, story, or epic.
 
-The following example shows how to set up integration with Jira using the **codemagic.yaml** configuration with a **native iOS project** but the approach is the same for **Flutter**, **React Native** and **native Android** projects.
+The following example shows how to set up integration with Jira using the **codemagic.yaml** configuration with a **native iOS project** but the approach is the same for **Flutter**, **React Native**, and **native Android** projects.
 
 ## Getting started
 
-1. Clone the [Jira integratrion starter project](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/integrations/jira_integration_demo_project) from the Codemagic GitHub page.
+1. Clone the [Jira integration starter project](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/integrations/jira_integration_demo_project) from the Codemagic GitHub page.
 
 2. You will need access to a Jira account and can [sign up](https://www.atlassian.com/software/jira) for free.
 
@@ -20,7 +20,7 @@ The following example shows how to set up integration with Jira using the **code
 
 ## Add the codemagic.yaml to your project
 
-Copy the **codemagic.yaml** from the starter project into the root of your repository. Update the environment variables as indicated and use the documentation links where required for the values related to building your app, code signing and app publishing. 
+Copy the **codemagic.yaml** from the starter project into the root of your repository. Then, update the environment variables as indicated and use the documentation links, where required, for the values related to building your app, code signing, and app publishing. 
 
 ## Update the Jira environment variables
 
@@ -39,7 +39,7 @@ You can encode these credentials in the **macOS Terminal** using:
 echo -n 'email@example.com:<api_token>' | openssl base64
 ```
 
-Alternatively use an online tool to base64 encode this string. 
+Alternatively, use an online tool to base64 encode this string. 
 
 This value is used in the Authorization header used in cURL requests to the Jira API.
 
@@ -48,41 +48,41 @@ This value is used in the Authorization header used in cURL requests to the Jira
 This is the subdomain you chose when you set up your Jira account e.g. "YOUR_SUBDOMAIN.atlassian.net". Put the subdomain including "atalassian.net" in the `JIRA_BASE_URL` environment variable. 
 
 
-#### Specifying the  the JIRA_ISSUE environment variable
+#### Specifying the JIRA_ISSUE environment variable
 
-Issues, epics and stories have a unique id which is usually in the format **'XXXX-N'** and is visible on your issues either in the bottom right or top left when looking at an issue. Put this value in the `JIRA_ISSUE` environment variable. 
+Issues, epics, and stories have a unique id, usually in the format **'XXXX-N'**, and is visible on your issues either in the bottom right or top left when looking at an issue. Put this value in the `JIRA_ISSUE` environment variable. 
 
 #### Finding and updating the JIRA_TRANSITION_ID environment variable
 
-If you want to transition your issue to another status you will need to know what transition ids are available. You can obtain the available transition ids using a cURL request as documented in the [Jira API documentation](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issues/#api-rest-api-3-issue-issueidorkey-transitions-get). Once you know the transition id then put this value in the `JIRA_TRANSITION_ID` environment variable.
+If you want to transition your issue to another status, you will need to know what transition ids are available. You can obtain the available transition ids using a cURL request as documented in the [Jira API documentation](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issues/#api-rest-api-3-issue-issueidorkey-transitions-get). Once you know the transition id then put this value in the `JIRA_TRANSITION_ID` environment variable.
 
 ## Adding formatted comments to a Jira issue
 
-Copy the **.templates** folder to the root of your project. This folder contains a template file called **jira.json** which is used to add formatted comments to a Jira issue. 
+Copy the **.templates** folder to the root of your project. This folder contains a template file called **jira.json**, which adds formatted comments to a Jira issue. 
 
-The Atlassasion Document Format (ADF) is used to format the comment layout and style. Click [here](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/) for more information about ADF and how to modify this template. 
+The Atlassian Document Format (ADF) is used to format the comment layout and style. Click [here](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/) for more information about ADF and how to modify this template. 
 
 ![A formatted Jira issue comment](../uploads/jira_issue_comment.png)
 
-**Note** that it contains strings beginning with `$` which the scripts use to replace values in the JSON using `sed` before it is added as JSON payload to the `cURL` requests.
+**Note** that it contains strings beginning with `$`, which the scripts use to replace values in the JSON using `sed` before it is added as JSON payload to the `cURL` requests.
 
 ## Understanding the 'Post to Jira' script
 
-The script section for publishing to Jira contains several actions which set environment variables, update the comment template and then uses cURL requests to add a comment and upload files to a specific Jira issue.
+The script section for publishing to Jira contains several actions which set environment variables, update the comment template, and then use cURL requests to add a comment and upload files to a specific Jira issue.
 
 ### Using jq to parse $FCI_ARTIFACT_LINKS
 
-First, it uses **jq** (a command-line tool for parsing JSON) to parse the contents of the Codemagic environment variable `$FCI_ARTIFACT_LINKS` to find information such as the articact url, filename, bundle id and version name and store the values in environment varaibles.
+First, it uses **jq** (a command-line tool for parsing JSON) to parse the contents of the Codemagic environment variable `$FCI_ARTIFACT_LINKS` to find information such as the articact URL, filename, bundle id, and version name and store the values in environment variables.
 
 See this link about the JSON data that [$FCI_ARTIFACT_LINKS](../building/environment-variables/#codemagic-read-only-environment-variables) contains.
 
 ### Setting additional environment variables
 
-Addtional environment variables are then set such as the build number, build date and commit number. These environment variables are used to replace values in the **jira.json** comment template using **sed** which is a stream editor for parsing and transforming text.
+Additional environment variables are then set, such as the build number, build date, and commit number. These environment variables are used to replace values in the **jira.json** comment template using **sed**, a stream editor for parsing and transforming text.
 
 ### Making cURL requests to the Jira API 
 
-1. The script performs a request to add a comment to Jira issue specified using the jira.json as the payload.
+1. The script performs a request to add a comment to the Jira issue specified using the jira.json as the payload.
 2. Another request is used to transition the issue to a different status.
-3. The script checks to see if XML test results have been generated. See [here](../testing-yaml/testing/) for information about using `test_report` to generate a test report .xml output. If **xml test results** are available then they will be uploaded  to the Jira issue.
-4. If **release notes** have been created then these are uploaded to the Jira issue.
+3. The script checks to see if XML test results have been generated. See [here](../testing-yaml/testing/) for information about using `test_report` to generate a test report .xml output. If **xml test results** are available, then they will be uploaded to the Jira issue.
+4. If **release notes** have been created, then these are uploaded to the Jira issue.
diff --git a/content/knowledge-base/Firebase Crashlytics dsym uploading b/content/knowledge-base/Firebase Crashlytics dsym uploading
index bee0a6d..8df9321 100644
--- a/content/knowledge-base/Firebase Crashlytics dsym uploading	
+++ b/content/knowledge-base/Firebase Crashlytics dsym uploading	
@@ -21,4 +21,4 @@ Here is how you can upload Xcode debugging symbols file to Firebase Crashlytics
   fi
   ```
 
-Add this script to either your configuration file or in your post-publish script in the Flutter workflow editor to locate and upload dsym files to Firebase Crashlytics.
+Add this script either to your configuration file or in your post-publish script in the Flutter workflow editor to locate and upload dSYM files to Firebase Crashlytics.
diff --git a/content/knowledge-base/add-a-git-tag-with-app-version.md b/content/knowledge-base/add-a-git-tag-with-app-version.md
index 4c3dc62..4e6173b 100644
--- a/content/knowledge-base/add-a-git-tag-with-app-version.md
+++ b/content/knowledge-base/add-a-git-tag-with-app-version.md
@@ -9,7 +9,7 @@ You can use Codemagic to create a Git tag and push it to your repository.
 
 {{<notebox>}}
 
-Pushing Git tags from Codemagic to repository requires **write access** to the repository. Depending on the Git service and authentication method, Codemagic may not have write access to your repository and you may need to grant it separately in your Git service settings. We recommend that you create a dedicated app password / personal access token for Codemagic.
+Pushing Git tags from Codemagic to your repository requires **write access** to the repository. Depending on the Git service and authentication method, Codemagic may not have write access to your repository, and you may need to grant it separately in your Git service settings. We recommend that you create a dedicated app password / personal access token for Codemagic.
 
 * For repositories hosted on Bitbucket, create an [app password](https://confluence.atlassian.com/bitbucket/app-passwords-828781300.html) with **write** permission for repositories.
 * For repositories hosted on GitHub, create a [personal access token](https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line) with **repo** scope.
@@ -24,7 +24,7 @@ Pushing Git tags from Codemagic to repository requires **write access** to the r
   ```bash
   #!/usr/bin/env bash
 
-  set -e # exit on first failed commandset
+  set -e # exit on first failed command
   set -x # print all executed commands to the log
 
   if [ "$FCI_BUILD_STEP_STATUS" = "success" ]
@@ -40,7 +40,7 @@ Pushing Git tags from Codemagic to repository requires **write access** to the r
   * `BUILD_NUMBER` is the read-only environment variable that holds the total count of builds for this project in Codemagic.
   * `your-username` is your Git service username
   * `APP_PASSWORD_ENV_VARIABLE` is the name of the environment variable that holds your app password / personal access token.
-  * `your-git-service.com` is the name of your Git service, e.g. github.com, bitbucket.com or gitlab.com.
+  * `your-git-service.com` is the name of your Git service, e.g. github.com, bitbucket.com, or gitlab.com.
   * `your-repo` is the name of your repository
 
   Before creating the tag, the script will check if the build was successful.
diff --git a/content/knowledge-base/google-play-api.md b/content/knowledge-base/google-play-api.md
index 92925b0..026b29e 100644
--- a/content/knowledge-base/google-play-api.md
+++ b/content/knowledge-base/google-play-api.md
@@ -4,17 +4,17 @@ description: How to set up a Google Play service account for Codemagic
 weight: 6
 ---
 
-In order to allow Codemagic publish applications to Google Play, it is necessary to set up access using Google Play API. 
+In order to allow Codemagic to publish applications to Google Play, it is necessary to set up access using Google Play API. 
 
 ## Setting up the service account on Google Play and Google Cloud Platform
 
 1. In Google Play Console, navigate to **Settings > API access** and click **Create new service account**.<br><br>
 ![Google play start](../uploads/google_play_start.png)
 
-2. This will lead you to the Google Cloud Platform where you can start creating your service account by clicking **+ Create service account** at the top of the page.<br><br>
+2. This will lead you to the Google Cloud Platform, where you can start creating your service account by clicking **+ Create service account** at the top of the page.<br><br>
 ![Google cloud platform](../uploads/google_cloud_start.png)
 
-3. In step 1, fill in the **Service account details** and click **Create**. The name of the service account will allow you to identify it among other service accounts you may have created.
+3. In step 1, fill in the **Service account details** and click **Create**. The service account's name will allow you to identify it among other service accounts you may have created.
 
 4. In step 2, click the **Select a role** dropdown menu and choose **Basic > Editor** as the role.<br><br>
 ![Google cloud editor](../uploads/google_cloud_two.png)
diff --git a/content/knowledge-base/load-firebase-configuration.md b/content/knowledge-base/load-firebase-configuration.md
index f690026..b3bebe4 100644
--- a/content/knowledge-base/load-firebase-configuration.md
+++ b/content/knowledge-base/load-firebase-configuration.md
@@ -19,7 +19,7 @@ Instead of committing the Firebase configuration files to your repository, you c
   echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
   ```
 
-  In case your project is in a nested folder structure, it has to be reflected and the script should be as follows: 
+  In case your project is in a nested folder structure, it has to be reflected, and the script should be as follows: 
 
   ```bash
   #!/usr/bin/env sh
@@ -34,7 +34,7 @@ Instead of committing the Firebase configuration files to your repository, you c
 {{<notebox>}}
 
 `post-clone script failed on base64 decode. The command could not be found`
-If you received this error message when using the script above, it may be due to some invisible Unicode characters in the script after copy-pasting it. Try removing the space between the `base64` command and the `--decode` option and then adding it back.
+If you received this error message when using the script above, it might be due to some invisible Unicode characters in the script after copy-pasting it. Try removing the space between the `base64` command and the `--decode` option and then adding it back.
 {{</notebox>}}
 
 For more details about using base64 and loading the Firebase configuration in Codemagic, see the step-by-step guide [here](https://blog.codemagic.io/how-to-load-firebase-config-in-codemagic-with-environment-variables/).
diff --git a/content/knowledge-base/migrate-to-github-app.md b/content/knowledge-base/migrate-to-github-app.md
index 68f986b..bd2d4b3 100644
--- a/content/knowledge-base/migrate-to-github-app.md
+++ b/content/knowledge-base/migrate-to-github-app.md
@@ -3,15 +3,15 @@ title: Migrating from GitHub OAuth to GitHub App
 weight: 1
 ---
 
-On April 19, 2021, Codemagic deprecated the GitHub OAuth integration due to GitHub ending support for OAuth App integrations, you can read more about it [here](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/). If you used the GitHub OAuth integration, please switch to the GitHub App to continue building your GitHub repositories.
+On April 19, 2021, Codemagic deprecated the GitHub OAuth integration due to GitHub ending support for OAuth App integrations; you can read more about it [here](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/). If you used the GitHub OAuth integration, please switch to the GitHub App to continue building your GitHub repositories.
 
 ## Who needs to migrate?
 
-If you signed up or used to log in to Codemagic via GitHub (All repositories, OAuth), then this means we were using the OAuth integration to access the repositories on your GitHub account. A warning is displayed on the Applicactions page and also in the team settings if any of the apps shared in a team or on your personal account used the OAuth integration. Unless you switch to GitHub App and share access to these repositories, they will remain unavailable.
+If you signed up or used to log in to Codemagic via GitHub (All repositories, OAuth), then this means we were using the OAuth integration to access the repositories on your GitHub account. A warning is displayed on the Applications page and also in the team settings if any of the apps shared in a team or on your personal account used the OAuth integration. Unless you switch to GitHub App and share access to these repositories, they will remain unavailable.
 
 Deprecating OAuth does not affect GitHub repositories that are added over SSH or HTTPS.
 
-## GitHub OAuth vs GitHub App
+## GitHub OAuth vs. GitHub App
 
 The key difference between OAuth and GitHub App integrations is the scope of permissions. While OAuth requires you to grant Codemagic a very broad scope of permissions which included **write access** to all your repositories, the GitHub App integration requests only **read access** to your code and you can select which repositories you share with Codemagic.
 
@@ -29,7 +29,7 @@ For builds configured in `codemagic.yaml`, update your configuration by saving t
 
 From April 19 onwards, users logging in to Codemagic with their GitHub account will be prompted to authorize and install the GitHub App if they do not already have it installed.
 
-If you log in via email, Bitbucket or GitLab but have repositories that are accessed via the GitHub OAuth integration, you should enable the GitHub App integration in your user or team settings. Note that GitHub App must be enabled separately for your **personal account** in Codemagic user settings and each **team** in team settings. 
+If you log in via email, Bitbucket, or GitLab but have repositories that are accessed via the GitHub OAuth integration, you should enable the GitHub App integration in your user or team settings. Note that GitHub App must be enabled separately for your **personal account** in Codemagic user settings and each **team** in team settings. 
 
 {{<notebox>}}
 See how to connect the GitHub App integration, manage access to accounts and repositories and troubleshoot issues with repository access [here](../getting-started/adding-apps-from-custom-sources/#configuring-the-github-app-integration).
diff --git a/content/knowledge-base/validate-yaml.md b/content/knowledge-base/validate-yaml.md
index 3034908..6acf1d0 100644
--- a/content/knowledge-base/validate-yaml.md
+++ b/content/knowledge-base/validate-yaml.md
@@ -6,9 +6,9 @@ weight: 7
 
 Using the Codemagic JSON schema, you can validate your `codemagic.yaml` for structure and syntax errors right in your IDE. The same level of validation is carried out on the frontend in the YAML editor in your project settings. 
 
-The JSON schema does not validate the maximum build duration value, software version values, credentials, environment variable values or whether you have access to any paid features.
+The JSON schema does not validate the maximum build duration value, software version values, credentials, environment variable values, or whether you have access to any paid features.
 
-Codemagic JSON schema is available out of the box in the IDEs that are integrated with [schemastore.org](http://schemastore.org/), e.g. Android Studio and Visual Studio Code.
+Codemagic JSON schema is available out of the box in the IDEs integrated with [schemastore.org](http://schemastore.org/), e.g. Android Studio and Visual Studio Code.
 
 If your IDE does not have the Codemagic JSON schema available by default, you can set up validation manually. To do so:
 
diff --git a/content/knowledge-base/video-resources.md b/content/knowledge-base/video-resources.md
index 1e88edd..e3008e5 100644
--- a/content/knowledge-base/video-resources.md
+++ b/content/knowledge-base/video-resources.md
@@ -6,4 +6,4 @@ weight: 8
 
 A variety of video tutorials and webinars are available on the Codemagic YouTube channel.
 
-Click [here](https://www.youtube.com/channel/UC6iPpISHwCnNreb53c0eYvg) to visit our channel and don't forget to subscribe to be updated when new content is released.
+Click [here](https://www.youtube.com/channel/UC6iPpISHwCnNreb53c0eYvg) to visit our channel, and don't forget to subscribe to be updated when new content is released.
diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index ff0b8ad..fe37fbd 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -6,15 +6,15 @@ aliases:
     - '../yaml/distribution'
 ---
 
-All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with custom scripts, see the examples below.
+All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play, and App Store Connect. It is also possible to publish elsewhere with custom scripts; see the examples below.
 
 ## Integrations for publishing and notifications
 
-Codemagic has out-of-the-box support for publishing to the services listed below. Read more about each individual integration and see the configuration examples below.
+Codemagic has out-of-the-box support for publishing to the services listed below. Read more about each integration and see the configuration examples below.
 
 ### Email
 
-If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the provided email address(es). If the build fails, an email with a link to build logs will be sent.
+If the build finishes successfully, release notes (if passed), and the generated artifacts will be published to the provided email address(es). If the build fails, an email with a link to build logs will be sent.
 
 If you don't want to receive an email notification on build success or failure, you can set `success` to `false` or `failure` to `false` accordingly.
 
@@ -38,7 +38,7 @@ To set up publishing to Slack, you first need to connect your Slack workspace in
 
 ![List of integrations](../uploads/slack_connect.png)
 
-Click **Connect** next to the Slack integration. You will be then redirected to an authorization page. Review the requested permissions and click **Allow** to give Codemagic Slack app access to your Slack workspace and allow it post build status updates and build artifacts (see also our [privacy policy](https://codemagic.io/privacy-policy/)).
+Click **Connect** next to the Slack integration. You will then be redirected to an authorization page. Review the requested permissions and click **Allow** to give Codemagic Slack app access to your Slack workspace and allow it to post build status updates and build artifacts (see also our [privacy policy](https://codemagic.io/privacy-policy/)).
 
 ![Authorization page](../uploads/slack_allow.png)
 
@@ -51,10 +51,10 @@ After you have successfully authorized Codemagic and connected your workspace, y
 The Slack channel for publishing is configured separately for each workflow in the `publishing` section of `codemagic.yaml` (refer [here](../publishing/email-and-slack-notifications/#slack) if you're configuring app settings in the Flutter workflow editor).
 
 {{<notebox>}}
-In order to publish to **private channels**, you need to invite Codemagic app to the channels, otherwise the app does not have access to private channels. To invite Codemagic app to private channels, write `@codemagic` in the channel. If the private channel access is restricted by Slack admin rights, it will have to be changed manually, otherwise publishing to that channel will not be possible.
+In order to publish to **private channels**, you need to invite the Codemagic app to the channels; otherwise, the app does not have access to private channels. To invite Codemagic app to private channels, write `@codemagic` in the channel. If the private channel access is restricted by Slack admin rights, it will have to be changed manually, otherwise publishing to that channel will not be possible.
 {{</notebox>}}
 
-If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the specified channel. If the build fails, a link to the build logs is published. When you set `notify_on_build_start` to `true`, the channel will be notified when a build starts.
+If the build finishes successfully, release notes (if passed), and the generated artifacts will be published to the specified channel. If the build fails, a link to the build logs is published. When you set `notify_on_build_start` to `true`, the channel will be notified when a build starts.
 
 If you don't want to receive a Slack notification on build success or failure, you can set `success` to `false` or `failure` to `false` accordingly.
 
@@ -70,9 +70,9 @@ publishing:
 
 ### Google Play
 
-Codemagic enables you to automatically publish your app either to one of the predefined tracks (`internal`, `alpha`, `beta` and `production`) on Google Play, or to your custom closed testing tracks. In order to do so, you will need to set up a service account in Google Play Console and add the `JSON` key file to your Codemagic configuration file, see how to [set up a service account](../knowledge-base/google-play-api/). The proper way to add your keys to `codemagic.yaml` is to [encrypt](../building/encrypting) the contents of the key file and add the encrypted value into the configuration file.
+Codemagic enables you to automatically publish your app either to one of the predefined tracks (`internal`, `alpha`, `beta` and `production`) on Google Play or to your custom closed testing tracks. In order to do so, you will need to set up a service account in Google Play Console and add the `JSON` key file to your Codemagic configuration file; see how to [set up a service account](../knowledge-base/google-play-api/). The proper way to add your keys to `codemagic.yaml` is to [encrypt](../building/encrypting) the key file contents and add the encrypted value into the configuration file.
 
-If your application supports [in-app updates](https://developer.android.com/guide/playcore/in-app-updates) Codemagic allows setting the update priority. Otherwise, `in_app_update_priority` can be omitted or set to `0`.
+If your application supports [in-app updates](https://developer.android.com/guide/playcore/in-app-updates), Codemagic allows setting the update priority. Otherwise, `in_app_update_priority` can be omitted or set to `0`.
 
 In addition, Codemagic supports [staged releases](https://support.google.com/googleplay/android-developer/answer/6346149?hl=en), allowing users to choose which fraction of the testers or users get access to the application. To release to everyone, omit `rollout_fraction` from codemagic.yaml. 
 
@@ -96,9 +96,9 @@ If your changes are sent to review automatically, but the field is still set to
 `Changes are sent for review automatically. The query parameter changesNotSentForReview must not be set.`
 {{</notebox>}}
 
-If you are getting a 400 error related to app being in draft status it means you need to promote your draft build to the next level up of testing tracks. Play Console will show you how to do this. You'll need to go through the steps, fill out questionnaires, upload various screen shots and then after approval you can move to the Alpha testing track and Codemagic will publish (publishing builds on Draft status is not supported).
+If you are getting a 400 error related to the app being in draft status, you need to promote your draft build to the next level up of testing tracks. Play Console will show you how to do this. You'll need to go through the steps, fill out questionnaires, upload various screenshots, and then after approval, you can move to the Alpha testing track, and Codemagic will successfully publish (publishing builds on Draft status is not supported).
 
-If you are getting an error related to permissions then it is likely an issue related to the service account that has been created. Go through the steps of creating a service account once more carefully see how to [set up a service account](../knowledge-base/google-play-api/).
+If you are getting an error related to permissions, then it is likely an issue related to the service account that has been created. Go through the steps of creating a service account once more carefully see how to [set up a service account](../knowledge-base/google-play-api/).
 
 {{<notebox>}}
 You can override the publishing track specified in the configuration file using the environment variable `GOOGLE_PLAY_TRACK`. This is useful if you're starting your builds via [Codemagic API](../rest-api/overview/) and want to build different configurations without editing the configuration file.
@@ -150,7 +150,7 @@ Publishing happens only for successful builds triggered on tag creation and is u
       - tag
   ```
 
-4. Add the following script after the build or to publishing scripts that publishes the artifacts with tag builds. Edit the placeholders like your application name and the path to build artifacts to match your setup.
+4. Add the following script after the build or publishing scripts that publish the artifacts with tag builds. Edit the placeholders like your application name and the path to build artifacts to match your setup.
 
     ```bash
     #!/usr/bin/env zsh
@@ -176,8 +176,8 @@ Publishing happens only for successful builds triggered on tag creation and is u
 
 ## Publishing a Flutter package to pub.dev
 
-In order to get publishing permissions, first you will need to log in to pub.dev locally. It can be done with running `pub publish --dry-run`.
-After that `credentials.json` will be generated which you can use to log in without the need of Google confirmation through browser.
+In order to get publishing permissions, first, you will need to log in to pub.dev locally. It can be done by running `pub publish --dry-run`.
+After that, `credentials.json` will be generated, which you can use to log in without the need for Google confirmation through the browser.
 
 `credentials.json` can be found in the pub cache directory (`~/.pub-cache/credentials.json` on MacOS and Linux, `%APPDATA%\Pub\Cache\credentials.json` on Windows)
 
@@ -253,7 +253,7 @@ If you wish to pass release notes with your build, create a `release_notes.txt`
 
 Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documentation](https://firebase.google.com/docs/cli#cli-ci-systems) for details.
 
-Before running a lane, you should install Fastlane Firebase app distribution plugin
+Before running a lane, you should install Fastlane Firebase app distribution plugin.
 
 ```yaml
 - name: Install fastlane-plugin-firebase_app_distribution
@@ -326,13 +326,13 @@ Call the `gradlew` task for distribution
 
 {{<notebox>}}
 
-If you didn't specify `serviceCredentialsFile`, you may export it to random location like `/tmp/google-application-credentials.json`
+If you didn't specify `serviceCredentialsFile`, you may export it to a random location like `/tmp/google-application-credentials.json`
 
 ```bash
 echo $GOOGLE_APP_CREDENTIALS | base64 --decode > /tmp/google-application-credentials.json
 ```
 
-And then export the filepath on the gradlew task
+And then export the file path on the gradlew task
 
 ```yaml
 - name: Distribute app to firebase with gradle plugin
@@ -345,7 +345,7 @@ And then export the filepath on the gradlew task
 
 ## Publishing web applications to Firebase Hosting
 
-Publishing web applications to Firebase Hosting With Codemagic publishing to Firebase Hosting is a straight-forward process as the Firebase CLI is already pre-installed on our virtual machines. Please note that before trying to publish to Firebase Hosting, you will have to set it up for your project locally. You can find more information in the official [documentation](https://firebase.google.com/docs/hosting/quickstart) for Firebase.
+Publishing web applications to Firebase Hosting With Codemagic publishing to Firebase Hosting is a straightforward process as the Firebase CLI is already pre-installed on our virtual machines. Please note that you will have to set it up for your project locally before publishing it to Firebase Hosting. You can find more information in the official [documentation](https://firebase.google.com/docs/hosting/quickstart) for Firebase.
 
 1. To get started with adding Firebase Hosting to Codemagic, you will need to obtain your Firebase token. In order to do that, run `firebase login:ci` in your local terminal. 
 2. After running the command, your default browser should prompt for authorization to your Firebase project - when access is granted, the necessary token will appear in your terminal.
diff --git a/content/publishing-yaml/public-dashboards.md b/content/publishing-yaml/public-dashboards.md
index 9fe6aef..7657383 100644
--- a/content/publishing-yaml/public-dashboards.md
+++ b/content/publishing-yaml/public-dashboards.md
@@ -21,7 +21,7 @@ Public dashboards can be disabled anytime by clicking **Disable sharing**.
 
 ## Creating and sharing a build dashboard
 
-Open the **Builds** page via the navigation bar and use the **team**, **application**, **workflow**, **branch** and **status** filters on the left sidebar to create a build dashboard. Then click **Share dashboard** at the top of the page to generate a public link to it. A popup with the generated link will appear and you can copy the link to clipboard. The generated link will be also saved to the **Public dashboards** section in team settings.
+Open the **Builds** page via the navigation bar and use the **team**, **application**, **workflow**, **branch** and **status** filters on the left sidebar to create a build dashboard. Then click **Share dashboard** at the top of the page to generate a public link. A popup with the generated link will appear, and you can copy the link to the clipboard. The generated link will be also saved to the **Public dashboards** section in team settings.
 
 {{<notebox>}}
 Please note that anyone with the public link can access the build dashboard and download build artifacts.
diff --git a/content/publishing-yaml/status-badges.md b/content/publishing-yaml/status-badges.md
index 696e39b..00297f5 100644
--- a/content/publishing-yaml/status-badges.md
+++ b/content/publishing-yaml/status-badges.md
@@ -5,7 +5,7 @@ weight: 3
 aliases:
 ---
 
-Adding Codemagic status badges to repositories helps to keep the latest build status visible. The build status badge is workflow-specific, and displays whether the build passed or failed. 
+Adding Codemagic status badges to repositories helps to keep the latest build status visible. The build status badge is workflow-specific and displays whether the build passed or failed. 
 
 ## Adding status badges to your repository
 
diff --git a/content/publishing/beta-deployment-with-fastlane.md b/content/publishing/beta-deployment-with-fastlane.md
index 65a8b4a..23210f7 100644
--- a/content/publishing/beta-deployment-with-fastlane.md
+++ b/content/publishing/beta-deployment-with-fastlane.md
@@ -12,7 +12,7 @@ If your Flutter app has an existing *fastlane* setup for beta deployment, you ca
 ```bash
 #!/usr/bin/env bash
 
-set -e # exit on first failed command
+set -e # exit on the first failed command
 set -x # print all executed commands to the log
 
 if [ "$FCI_BUILD_STEP_STATUS" = "success" ]
@@ -23,4 +23,4 @@ then
         bundle exec fastlane beta
 fi
 ```
-Now, whenever your workflow is built successfully, your app is published to the beta testing services specified in your *beta* lane.
\ No newline at end of file
+Now, your app is published to the beta testing services specified in your *beta* lane whenever your workflow is built successfully.
diff --git a/content/publishing/email-and-slack-notifications.md b/content/publishing/email-and-slack-notifications.md
index d36b26d..92c50dd 100644
--- a/content/publishing/email-and-slack-notifications.md
+++ b/content/publishing/email-and-slack-notifications.md
@@ -10,7 +10,7 @@ Email publishing settings can be found in **App settings > Notifications > Email
 
 Email publishing is the only publishing option that is enabled by default. Codemagic uses the email specified as the default one in the service you used to log in (Github, Bitbucket, Gitlab). You can add multiple email addresses.
 
-If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the provided email.
+If the build finishes successfully, release notes (if passed), and the generated artifacts will be published to the provided email.
 
 If the build fails, you will be sent a link to the build logs. Check the **Publish artifacts even if tests fail** option in the workflow editor to publish artifacts even when one or more tests fail. If that option is unchecked, generated artifacts (if there are any) will be attached only to successful builds.
 
@@ -26,17 +26,16 @@ In order to set up publishing to Slack, you first need to connect the Slack work
 
 Once your Slack workspace is connected, you can enable Slack publishing and select a channel for publishing in **App settings > Notifications > Slack** when using the workflow editor.
 
-In order to publish to **private channels**, you need to invite Codemagic app to the channels, otherwise the app does not have access to private channels. To invite Codemagic app to private channels, write `@codemagic` in the channel. If you are in the Codemagic web app, refresh the page and the new channel will become available in the dropdown menu.
+In order to publish to **private channels**, you need to invite the Codemagic app to the channels, otherwise, the app does not have access to private channels. To invite the Codemagic app to private channels, write `@codemagic` in the channel. If you are in the Codemagic web app, refresh the page, and the new channel will become available in the dropdown menu.
 
-If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the specified channel.
+If the build finishes successfully, release notes (if passed), and the generated artifacts will be published to the specified channel.
 
 If the build fails, a link to the build logs is published. Check **Publish artifacts even if tests fail** to publish artifacts even when one or more tests fail. If the option is unchecked, generated artifacts (if any) will be attached to successful builds only.
 
-To receive a notification when a build starts, check the checkbox **Notify when build starts**.
+To receive a notification when a build starts, check the checkbox **Notify when the build starts**.
 
 ## Published artifacts
 
 When you set up email or Slack publishing, Codemagic publishes the following artifacts:
 
 * `app`, `ipa`, `apk`, the archive with Flutter web build directory, Linux application bundle files
-
diff --git a/content/publishing/github-release.md b/content/publishing/github-release.md
index 537848e..cb3e7f1 100644
--- a/content/publishing/github-release.md
+++ b/content/publishing/github-release.md
@@ -4,7 +4,7 @@ title: GitHub releases
 weight: 11
 ---
 
-Codemagic enables you to automatically create a GitHub release and upload generated artifacts when your build is triggered on tag creation. Read more about GitHub releases in [GitHub's documentation](https://docs.github.com/en/github/administering-a-repository/about-releases).
+Codemagic enables you to create a GitHub release automatically, and upload generated artifacts when your build is triggered on tag creation. Read more about GitHub releases in [GitHub's documentation](https://docs.github.com/en/github/administering-a-repository/about-releases).
 
 ## Requirements
 
diff --git a/content/publishing/publish-app-artifacts-to-app-center.md b/content/publishing/publish-app-artifacts-to-app-center.md
index 822c799..b89a6ab 100644
--- a/content/publishing/publish-app-artifacts-to-app-center.md
+++ b/content/publishing/publish-app-artifacts-to-app-center.md
@@ -63,4 +63,4 @@ else
 fi
 ```
 
-This way, you can use Codemagic to automate publishing of your Android or iOS app to App Center.
+This way, you can use Codemagic to automate the publishing of your Android or iOS app to App Center.
diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index e63f0c1..12ec4f5 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -18,8 +18,8 @@ Release notes can be published to:
 
 There are three supported options to set up release notes:
 
-1. Create a `release_notes.txt` file and add it to the project working directory, which is either the repository root directory or the **Project path** specified in the **Build** section in your workflow settings. Codemagic will fetch the contents of that file and publish it with the build.
-    * For email, Slack and Firebase App Distribution, the releaser notes will be published as is.
+1. Create a `release_notes.txt` file and add it to the project working directory, which is either the repository root directory or the **Project path** specified in the **Build** section in your workflow settings. Codemagic will fetch the content of that file and publish it with the build when it's present.
+    * For email, Slack and Firebase App Distribution, the release notes will be published as is.
     * For Google Play, the release notes will be published under the `en-US` language localization code.
 
 {{<notebox>}}
@@ -27,7 +27,8 @@ For App Store Connect, supported languages and codes are listed [here](https://d
 {{</notebox>}}
 
 2. Create a `release_notes_<language_localization_code>.txt` file for every language used, e.g. `release_notes_en-GB.txt`, `release_notes_it.txt`, and add them to the project working directory, which is either the repository root directory or the **Project path** specified in the **Build** section in your workflow settings.
-    * Release notes with the `en-US` language code will be published to email, Slack and Firebase App Distribution in the case a file with the `en-US` language code exists. If not, the first found release notes will be published.
+    * Release notes with the `en-US` language code will be published to email, Slack and Firebase App Distribution in case a file with the `en-US` language code exists. If not, the first found release notes will be published.
+    * For Google Play, all the release notes will be published with corresponding language codes.
     * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.
 
 3. Create a `release_notes.json` file with the following content:
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 49ff743..3effd38 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -16,13 +16,13 @@ Codemagic needs your **[App Store Connect API key](https://developer.apple.com/d
 
 In addition, the application must be **App Store ready** for build distribution, meaning that it must have all the correct icons and icon sizes. Otherwise, App Store Connect will tag the binary as invalid, and you will not be able to distribute it at all.
 
-It is also worth pointing out the necessity for each uploaded binary to have a **different version**, otherwise it will be refused by App Store Connect. See the [Build versioning](../building/build-versioning/) article for instructions on incrementing app version with Codemagic.
+It is also worth pointing out the necessity for each uploaded binary to have a **different version**; otherwise, it will be refused by App Store Connect. See the [Build versioning](../building/build-versioning/) article for instructions on incrementing app version with Codemagic.
 
 {{<notebox>}}Please note that you will need to create an **app record** in App Store Connect before you can automate publishing with Codemagic. It is recommended to upload the very first version of the app manually. {{</notebox>}}
 
 ## Setting up publishing to App Store Connect on Codemagic
 
-In this section we give step-by-step instructions on how to configure publishing to App Store Connect using Flutter workflow editor.
+This section gives step-by-step instructions on how to configure publishing to App Store Connect using Flutter workflow editor.
 
 ### Step 1. Creating an App Store API key for Codemagic
     
@@ -34,12 +34,12 @@ It is recommended to create a dedicated App Store Connect API key for Codemagic
 
 1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
 2. Click on the + sign to generate a new API key.
-3. Enter the name for the key and select an access level. For App Store Connect publishing the key needs to have `App Manager` permissions. Read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
+3. Enter the name for the key and select an access level. For App Store Connect publishing, the key needs to have `App Manager` permissions. Read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
 4. Click **Generate**.
-5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+5. As soon as the key is generated, you can see it added to the active keys list. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
 
 {{<notebox >}} 
-Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in Codemagic UI.
+Take note of the **Issuer ID** above the table of active keys and the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in Codemagic UI.
 {{</notebox>}}
 
 ### Step 2. Connecting the Apple Developer Portal integration for your team/account
@@ -62,7 +62,7 @@ Once the Apple Developer Portal has been enabled for the account or team the app
 1. Navigate to **App settings > Distribution**.
 2. Click **App Store Connect**.
 3. If you have several keys available, select the right key in the **App Store Connect API key** field.
-4. Mark the **Submit to TestFlight** checkbox to automatically enroll your build to beta testers.  
+4. Mark the **Submit to TestFlight** checkbox to enroll your build to beta testers automatically.  
 5. Select **Enable App Store Connect publishing** at the top of the section to enable publishing.
 
 Once you have successfully set up publishing to App Store Connect, Codemagic will automatically distribute the app to App Store Connect every time you build the workflow. Note that you must manually submit the app to App Store in App Store Connect.
@@ -78,7 +78,7 @@ To make your iOS app available to the public, it must be submitted for review in
 1. Log in to [App Store Connect](https://appstoreconnect.apple.com/).
 2. Navigate to **My Apps** and identify the app you would like to publish to App Store.
 3. To start the submission process, click **Prepare for Submission**.
-4. Check that you app metadata is up to date, and once everything is ready, click the **Submit for Review** button.
+4. Check that your app metadata is up to date, and once everything is ready, click the **Submit for Review** button.
 
 ## Submitting release notes
 
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index b9cbd4f..88bb359 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -14,9 +14,9 @@ This guide only applies to workflows configured with the **Flutter workflow edit
 
 You will need a **service account in Google Play Console** to obtain the **JSON credentials file**. See how to do that [here](../knowledge-base/google-play-api/). In addition, you must build the app in **release mode** and set up **Android code signing**.
 
-Before releasing the app to Google Play, make sure that it meets the [Google Play's best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
+Before releasing the app to Google Play, ensure that it meets [Google Play's best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
 
-{{<notebox>}} Note that if you haven't published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](../building/build-versioning/ 'Build versioning') on Codemagic. {{</notebox>}}
+{{<notebox>}} Note that if you haven't published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version; see how to automatically [increment build version](../building/build-versioning/ 'Build versioning') on Codemagic. {{</notebox>}}
 
 ## Setting up publishing to Google Play on Codemagic
 
@@ -38,7 +38,7 @@ The very first version of the app must be added to Google Play manually. You can
 5. If you want to publish to a custom track, enter the custom track name.
 6. If your application supports [in-app updates](https://developer.android.com/guide/playcore/in-app-updates), set the desired priority. If not, select **Default**.
 7. In case you want to release a [staged version](https://support.google.com/googleplay/android-developer/answer/6346149?hl=en) of your application, which reaches only a fraction of users, set **Rollout fraction** to a value between 0 and 1. To release to everyone, leave the value empty.
-8. If you are getting the next error `Changes cannot be sent for review automatically. Please set the query parameter changesNotSentForReview to true`, mark the checkbox **Do not send changes for review**.
+8. If you are getting the next error: `Changes cannot be sent for review automatically. Please set the query parameter changesNotSentForReview to true`, mark the checkbox **Do not send changes for review**.
 
     But if the checkbox is marked and the app is sent for review automatically, you will get the error `Changes are sent for review automatically. The query parameter changesNotSentForReview must not be set.`
 
diff --git a/content/rest-api/applications.md b/content/rest-api/applications.md
index c3cb8c1..c5b1c21 100644
--- a/content/rest-api/applications.md
+++ b/content/rest-api/applications.md
@@ -9,7 +9,7 @@ APIs for managing applications are currently available for developers to preview
 
 `GET /apps/:id`
 
-Returns an application information based upon the application id supplied.
+Based on the application id provided, returns the applications information.
 
 ### Curl request
 
@@ -89,4 +89,4 @@ curl 'https://api.codemagic.io/apps/your-app-id/encrypt-environment-variable' \
 
 ```yaml
 {"encrypted": "Encrypted(Z0FBQUFBQmZMVkhwb3Q3QlJtRlVOeVFJcEJvTTRtWnZablpqMS0xN2V6dllTell1ODZSd2FUcnNqMUlZT09QY1paV0pjbVRfUlVJeDUxRWIzX1paOEZlc1dSdi1XMXlkUFVIdjNIZ2VqcE5Ja0tpMjlPWjhlSTQ9)"}
-```
\ No newline at end of file
+```
diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index 062672b..397c544 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -10,7 +10,7 @@ APIs for managing builds are currently available for developers to preview. Duri
 `POST /builds`
 
 {{<notebox>}}
-Note that when starting builds from an API request, the workflow and branch information is passed with the curl request and any configuration related to triggers or branches in Flutter workflow editor or in codemagic.yaml is ignored.
+Note that the workflow and branch information is passed with the curl request when starting builds from an API request. Any configuration related to triggers or branches in Flutter workflow editor or codemagic.yaml is ignored.
 {{</notebox>}}
 
 ### Parameters
diff --git a/content/rest-api/overview.md b/content/rest-api/overview.md
index e678c6f..694c5bd 100644
--- a/content/rest-api/overview.md
+++ b/content/rest-api/overview.md
@@ -7,10 +7,10 @@ Users can make calls to Codemagic REST API for better integration with other too
 
 ## Authentication
 
-When making calls to REST API methods, an access token must be included as an HTTP header in every call in order for the call to be successful.
+When making calls to REST API methods, an access token must be included as an HTTP header in every call for the call to be successful.
 
 ```
 x-auth-token: my-secret-token
 ```
 
-The access token is available via the Codemagic UI in **User settings > Integrations > Codemagic API > Show**.
\ No newline at end of file
+The access token is available via the Codemagic UI in **User settings > Integrations > Codemagic API > Show**.
diff --git a/content/sample-projects/codemagic-sample-projects.md b/content/sample-projects/codemagic-sample-projects.md
index 1e112e8..02b52b5 100644
--- a/content/sample-projects/codemagic-sample-projects.md
+++ b/content/sample-projects/codemagic-sample-projects.md
@@ -6,9 +6,9 @@ weight: 1
 
 The [codemagic-sample-projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects) repository on the Codemagic GitHub page contains a collection of sample projects which show how to configure your workflows using the **codemagic.yaml** configuration file. 
 
-You can use the **codemagic.yaml** from these projects as a template for your own workflow configuration. 
+You can use the **codemagic.yaml** from these projects as a template for your workflow configuration. 
 
-For further information on how configure the **codemagic.yaml** for your projects, please refer to our [getting started guide](https://docs.codemagic.io/getting-started/yaml/). 
+For further information on how to configure the **codemagic.yaml** for your projects, please refer to our [getting started guide](https://docs.codemagic.io/getting-started/yaml/). 
 
 ### Flutter Samples
 * [Flutter YAML workflow sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/flutter/flutter-yaml-demo-project)
diff --git a/content/teams/teams.md b/content/teams/teams.md
index fbf4220..db5a7ca 100644
--- a/content/teams/teams.md
+++ b/content/teams/teams.md
@@ -3,14 +3,14 @@ title: Creating and managing teams
 weight: 1
 ---
 
-If more than one developer is contributing to a project, it is wiser to set up a team so that everyone could work on the project together. Working in teams comes with some advantages:
+If more than one developer is contributing to a project, it is wiser to set up a team to work on the project together. Working in teams comes with some advantages:
 
 * One account is used to access the app repository
 * Team members can jointly configure app settings
 * Team members have access to build logs, build history and artifacts
 * Consistent build versioning
 
-{{<notebox>}}Note that Teams is a paid feature on Codemagic, see our [pricing page](https://codemagic.io/pricing/). We don't charge for UI access but count and bill for the users that contribute to team applications by triggering builds. Read more about how we count users [here](./users/).{{</notebox>}}
+{{<notebox>}}Note that Teams is a paid feature on Codemagic; see our [pricing page](https://codemagic.io/pricing/). We don't charge for UI access but count and bill for users who contribute to team applications by triggering builds. Read more about how we count users [here](./users/).{{</notebox>}}
 
 ## Creating a new team
 
@@ -22,7 +22,7 @@ To create a new team:
 4. Click **Proceed**. You will be then asked to add your credit card details and company information (if relevant) to enable billing for the team.
 5. Then click **Confirm and enable** to enable billing and continue setting up the team.
 
-Once the team has been created, team owners can change the name of the team, add or remove shared applications, add or remove users, change user roles and manage billing.
+Once the team has been created, team owners can change the team's name, add or remove shared applications, add or remove users, change user roles and manage billing.
 
 {{<notebox>}}Keep in mind to review the filter settings on the Applications page to see your newly created team and shared team apps.{{</notebox>}}
 
@@ -34,7 +34,7 @@ To add or remove shared applications, click on **Shared applications** to see th
 
 ## Inviting team members
 
-You can invite users to team by clicking on **Invite team member**. An email invitation will be sent to the user to join the team. If they don't yet have a Codemagic account, they will be asked to register one before they can join the team. 
+You can invite users to the team by clicking on **Invite team member**. An email invitation will be sent to the user to join the team. If they don't yet have a Codemagic account, they will be asked to register before joining the team. 
 
 If there are users that have triggered builds but are not yet part of the team in Codemagic, you can click **Add to team** on their email address to send them an invitation.
 
@@ -42,11 +42,11 @@ To remove any team members, click on the three dots next to their name and selec
 
 ## Managing user roles
 
-Users in Codemagic teams can have one of the 3 roles.
+Users in Codemagic teams can have one of the three roles.
 
-* **Owner**. The user creating a team will become a team owner by default and has full access to all team, app and repository settings. Other members of the team can be upgraded to owners as well. Owners can select the repositories to be shared with the team, invite new team members, change their roles or remove existing members, including other team owners, manage team integrations and billing.
+* **Owner**. The user creating a team will become a team owner by default and has full access to all team, app, and repository settings. Other members of the team can be upgraded to owners as well. Owners can select the repositories to be shared with the team, invite new team members, change their roles or remove existing members, including other team owners, manage team integrations and billing.
 
-* **Member**. A user with this role has access to the Codemagic UI and can view team settings, configure app settings and trigger new builds. Members cannot modify any team settings, billing details or repository settings other than app name.
+* **Member**. A user with this role has access to the Codemagic UI and can view team settings, configure app settings and trigger new builds. Members cannot modify any team settings, billing details, or repository settings other than the app name.
 
 * **User**. Any user that triggers builds from a webhook but does not have access to the team in Codemagic UI.
 
@@ -56,7 +56,7 @@ Users that have triggered builds can be invited to the team by clicking **Add to
 
 ## Public dashboards
 
-The public dashboards feature makes it possible to share team's builds and build artifacts via a public link. Read more about this feature [here](../publishing-yaml/public-dashboards).
+The public dashboards feature makes it possible to share the team's builds and build artifacts via a public link. Read more about this feature [here](../publishing-yaml/public-dashboards).
 
 ## Managing team integrations
 
diff --git a/content/teams/users.md b/content/teams/users.md
index 641d7b4..8a4e665 100644
--- a/content/teams/users.md
+++ b/content/teams/users.md
@@ -7,9 +7,9 @@ You can invite your team members to join the team in Codemagic free of charge. W
 
 ## Active users
 
-An active user is anyone who triggers a build manually from the Codemagic UI or via the API, or automaticlly from a webhook in response to events in the repository. Active users are marked with a green badge with the build count on it. The number of active users for the ongoing subscription period is shown on the right sidebar in team settings.
+An active user is anyone who triggers a build manually from the Codemagic UI, via the API, or automatically from a webhook in response to events in the repository. Active users are marked with a green badge with the build count on it. The number of active users for the ongoing subscription period is shown on the right sidebar in team settings.
 
-The active users count is reset at the beginning of every month. To see the active users of previous subscription periods, check the Billing history on the [Billing](../billing/billing) page.
+The active users count is reset at the beginning of every month. Check the Billing history on the [Billing](../billing/billing) page to see the active users of previous subscription periods.
 
 ## Identifying users
 
@@ -22,7 +22,7 @@ git config --global user.email johndoe@example.com
 
 ## User limit
 
-To avoid unexpected costs, team owners can set a limit to the maximum number of users allowed to run builds. Any number of users within the limit will be allowed to run builds. If the number of active users for the current subscription period is equal to the limit, builds from other users will be blocked. You can see the blocked build attempts in team settings. 
+To avoid unexpected costs, team owners can limit the maximum number of users allowed to run builds. Any number of users within the limit will be allowed to run builds. If the number of active users for the current subscription period is equal to the limit, builds from other users will be blocked. You can see the blocked build attempts in team settings. 
 
 To allow builds from additional users, team owners can increase the user limit by clicking **Manage billing** in team settings or selecting the team on the Billing page and then clicking **Update user limit** in Billing overview. Note that when decreasing the current limit, the new limit will apply starting from the next subscription period.
 
diff --git a/content/testing-yaml/firebase-test-lab.md b/content/testing-yaml/firebase-test-lab.md
index 36596de..341b162 100644
--- a/content/testing-yaml/firebase-test-lab.md
+++ b/content/testing-yaml/firebase-test-lab.md
@@ -4,7 +4,7 @@ description: How to run tests on Firebase Test Lab
 weight: 2
 ---
 
-Firebase Test Lab provides cloud-based infrastructure for testing Android and iOS apps on a range of devices and configurations. You can test your apps on Firebase Test Lab as part of the Codemagic build workflow provided you have set up a Firebase project.
+Firebase Test Lab provides a cloud-based infrastructure for testing Android and iOS apps on various devices and configurations. You can test your apps on Firebase Test Lab as part of the Codemagic build workflow provided you have set up a Firebase project.
 
 To set up testing on Firebase Test Lab in Codemagic, follow these steps.
 
@@ -57,7 +57,7 @@ gcloud firebase test android run \
 
 ### iOS
 
-Package your application and prepare it for the upload to Firebase Test Lab as desicribed [here](https://firebase.google.com/docs/test-lab/ios/run-xctest#package-app).
+Package your application and prepare it for upload to Firebase Test Lab as described [here](https://firebase.google.com/docs/test-lab/ios/run-xctest#package-app).
 
 Use the generated `MyTests.zip` to start testing:
 
diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index ef3dfea..0213861 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -16,7 +16,7 @@ For instructions on testing your app on real devices in Firebase Test Lab, refer
 
     flutter test
 
-**Tip:** you can display Flutter test results visually in the build overview if you use expanded form of the script in codemagic.yaml.
+**Tip:** you can display Flutter test results visually in the build overview if you use the expanded form of the script in codemagic.yaml.
 Just include the `test_report` field with a glob pattern matching the test result file location:
 
 ```yaml
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index b1dc4cd..5ce9838 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -8,7 +8,7 @@ Codemagic supports running **unit**, **integration** and **widget** tests as wel
 
 ### Detecting tests
 
-During the first build of your app, Codemagic will scan the content of the repository and automatically detect the tests according to the project structure. The expected locations of the tests are as follows:
+During the first build of your app, Codemagic will scan the repository's content and automatically detect the tests according to the project structure. The expected locations of the tests are as follows:
 
 Unit and widget tests: `project_root/test`
 
diff --git a/content/testing/testing-widgets.md b/content/testing/testing-widgets.md
index 7781861..3bb7919 100644
--- a/content/testing/testing-widgets.md
+++ b/content/testing/testing-widgets.md
@@ -11,6 +11,6 @@ To test widgets, the following is required:
 - A Flutter project without `ios` and `android` folders.
 - A `test` folder containing at least one test.
 
-Your widget repository is automatically detected just as any other repository, but there are differences in the build process. Technically, Codemagic will only fetch the sources, install the dependencies and run the tests. If there are failing tests, you will receive the test report on your email.
+Your widget repository is detected automatically like any other repository, but there are differences in the build process. Technically, Codemagic will only fetch the sources, install the dependencies and run the tests. If there are failing tests, you will receive the test report in your email.
 
 After the first build, you can change the Flutter version (by default, it's `channel Stable`) and configure email publishing and Slack for receiving status reports.
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index aaf6bac..7e7848b 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -1,20 +1,20 @@
 ---
-description: How to connect to build machine with SSH or VNC
-title: Remote access to build machine
+description: How to connect to the build machine with SSH or VNC
+title: Remote access to the build machine
 weight: 2
 ---
 
-You can establish remote access to the virtual build machine running your build either via SSH or using a VNC client. 
+You can establish remote access to the virtual build machine running your build via SSH or a VNC client. 
 
-The **SSH access** allows you to access the build machine only through a terminal and run commands on it. This is a great option for debugging your builds. You can see the processes running during the CI job, reproduce all commands run during the build or debug your custom scripts.
+The **SSH access** allows you to access the build machine only through a terminal and run commands on it. This is an excellent option for debugging your builds. You can see the processes running during the CI job, reproduce all commands run during the build, or debug your custom scripts.
 
-The **VNC client** allows you to graphically access the remote build machine. It has multiple versions of Xcode and iOS simulators preinstalled, so you can run and test your iOS apps or change Xcode configuration files without owning a Mac yourself. 
+The **VNC client** allows you to access the remote build machine graphically. It has multiple versions of Xcode and iOS simulators preinstalled, so you can run and test your iOS apps or change Xcode configuration files without owning a Mac yourself. 
 
-## How remote access to build machines works
+## How remote access to the build machines works
 
-All virtual machines are located within the private network. In order to allow users to connect to the virtual machine, Codemagic allows a temporary SSH or VNC access through the public gateway using a unique SSH key or user credentails that are generated before each build. The unique key and user credentials are valid for the duration of the build only and are revoked after the build is finished.
+All virtual machines are located within the private network. In order to allow users to connect to the virtual machine, Codemagic allows a temporary SSH or VNC access through the public gateway using a unique SSH key or user credentials that are generated before each build. The unique key and user credentials are valid for the duration of the build only and are revoked after the build is finished.
 
-## Setting up SSH connection to the virtual machine
+## Setting up an SSH connection to the virtual machine
 
 Establishing an SSH connection to the virtual machine is possible only for manually triggered builds.
 
@@ -25,7 +25,7 @@ Establishing an SSH connection to the virtual machine is possible only for manua
 If you don't run the script before the build finishes, the unique SSH key expires and can't be used anymore. A new script will be generated every time you run the build, so previous scripts cannot be reused.
 
 {{<notebox>}}
-Note that the script for establishing SSH connection works natively on Linux and MacOS but requires additional software like Git-bash on Windows.
+Note that the script for establishing SSH connection works natively on Linux and macOS but requires additional software like Git-bash on Windows.
 {{</notebox>}}
 
 ## Setting up VNC connection to the virtual machine
@@ -37,14 +37,14 @@ Establishing a VNC connection to the virtual machine is possible only for manual
 3. When the build has started, click **Explore build machine** above the build steps to see the instructions for setting up VNC access. Use the given **Host**, **Port**, **Username** and **Password** on your VNC client to establish the connection.
 
 {{<notebox>}}
-You can download VNC Viewer for Windows [here](https://www.realvnc.com/en/connect/download/viewer/windows/). Using VNC Viewer, make sure to add the values for **Host** and **Port** into the address field in this format: `<Host>:<Port>` (for example `192.159.66.83:16543`).
+You can download VNC Viewer for Windows [here](https://www.realvnc.com/en/connect/download/viewer/windows/). Using VNC Viewer, make sure to add the values for **Host** and **Port** into the address field in this format: `<Host>:<Port>` (for example,  `192.159.66.83:16543`).
 {{</notebox>}}
 
 New credentials will be generated every time you run the build, so previous credentials cannot be reused.
 
 ## Using the remote build machine
 
-You can use the remote session to reproduce all commands run during the build, rerun the build with a different configuration or even set up platform-specific files, e.g. CocoaPods. When accessing the build machine via the VNC client, you can use the Search functionality to easily find and launch Safari or Chrome, Xcode, Simulator or any other applications on the build machine.
+You can use the remote session to reproduce all commands run during the build, rerun the build with a different configuration, or set up platform-specific files, e.g. CocoaPods.
 
 * To access the clone of your project on the VM, run `cd $FCI_BUILD_DIR` in the terminal. 
 
@@ -54,7 +54,7 @@ You can use the remote session to reproduce all commands run during the build, r
 
 ## Remote access session time limit
 
-The SSH or VNC session remains active for a maximum of 20 minutes after all build steps are completed or until the maximum build duration limit is reached, whichever comes first. If you log out from the virtual machine during an active VNC or SSH session, the build is finished automatically and you cannot access the builder for this session. You would have to run a new build to establish a new remote access connection.
+The SSH or VNC session remains active for a maximum of 20 minutes after all build steps are completed or until the maximum build duration limit is reached, whichever comes first. If you log out from the virtual machine during an active VNC or SSH session, the build is finished automatically, and you cannot access the builder for this session. You would have to run a new build to establish a new remote access connection.
 
 {{<notebox>}}
 If you have finished debugging the build, don't forget to end the session to avoid losing build time.
diff --git a/content/troubleshooting/codemagic-status-page.md b/content/troubleshooting/codemagic-status-page.md
index fe495e6..5953ead 100644
--- a/content/troubleshooting/codemagic-status-page.md
+++ b/content/troubleshooting/codemagic-status-page.md
@@ -1,5 +1,5 @@
 ---
-description: How to get the latest information about uptime status of Codemagic
+description: How to get the latest information about the uptime status of Codemagic
 title: Codemagic status page
 weight: 3
 ---
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 5ef05c2..1678042 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -13,9 +13,9 @@ altool[xxx:xxx] *** Error: Unable to validate archive '/Users/builder/ipas/xxx'.
 altool[xxx:xxx] *** Error: code -22020 (Unable to validate your application. We are unable to create an authentication session.)
 ```
 
-The most common reason for the occurrence of this error message is using Apple ID password instead of [app-specific password](https://support.apple.com/en-us/HT204397) in App Store Connect publishing settings. 
+The most common reason for this error message is using your Apple ID password instead of [app-specific password](https://support.apple.com/en-us/HT204397) in App Store Connect publishing settings. 
 
-To generate an app-specific password, sign in to your [Apple ID account page](https://appleid.apple.com/account/manage), navigate to the **Security** section and click **Generate Password...** below **App-Specific Passwords**. The generated app-specific password will be in this format: `abcd-efgh-ijkl-mnop`. Insert this value into the Flutter workflow editor or as a password in `codemagic.yaml` when setting up publishing to App Store Connect. Note that the password should be generated with the same Apple account that you are using for publishing.
+To generate an app-specific password, sign in to your [Apple ID account page](https://appleid.apple.com/account/manage), navigate to the **Security** section, and click **Generate Password...** below **App-Specific Passwords**. The generated app-specific password will be in this format: `abcd-efgh-ijkl-mnop`. Insert this value into the Flutter workflow editor or as a password in `codemagic.yaml` when setting up publishing to App Store Connect. Note that the password should be generated with the same Apple account that you are using for publishing.
 
 ## iOS code signing troubleshooting
 
@@ -25,7 +25,7 @@ This is the list of the most common issues that may cause iOS code signing error
 
 * **The uploaded certificate and provisioning profile do not match.** For example, you're using a development certificate and a distribution profile to sign the build, or the certificate used for signing is not included in the provisioning profile.
 
-* **You don't have the required entitlements enabled for your app in Apple Developer portal.** In such cases, you will often see an error message similar to this one:
+* **You don't have the required entitlements enabled for your app in the Apple Developer portal.** In such cases, you will often see an error message similar to this one:
 
     > Code Signing Error: "Runner" requires a provisioning profile with the Push Notifications feature. Select a provisioning profile in the Signing & Capabilities editor.
 
@@ -39,9 +39,9 @@ This is the list of the most common issues that may cause iOS code signing error
 ## Version inconsistency between local and Codemagic
 
 **Description**:
-Builds succeed locally but not on Codemagic and throw vague errors, such as `Gradle task bundleRelease failed with exit code 1`, or build is successful but some functions aren't working. 
+Builds succeed locally but not on Codemagic and throw vague errors, such as `Gradle task bundleRelease failed with exit code 1`, or the build is successful, but some functions aren't working. 
 
-**Cause**: These issues are likely caused because plugin and gradle versions used locally are different from the versions used on Codemagic. If you are using a gradle version that is different from Codemagic, you have to define it in `gradle wrapper`. Otherwise, Codemagic ignores your `build.gradle` file and your build won't work properly. See which [software versions Codemagic uses](../releases-and-versions/versions/).
+**Cause**: These issues are likely caused because plugin and gradle versions used locally are different from the versions used on Codemagic. If you are using a gradle version that is different from Codemagic, you have to define it in `gradle wrapper`. Otherwise, Codemagic ignores your `build.gradle` file, and your build won't work properly. See which [software versions Codemagic uses](../releases-and-versions/versions/).
 
 **Solution**: First, you need to make sure that the `gradlew` file isn't in `.gitignore`. Look for `**/android/gradlew`, and if it's in `.gitignore`, delete it from there. Then add `!gradle-wrapper.jar` to a new line in `.gitignore` to create an exception so that `gradle-wrapper.jar` would also be excluded from `.gitignore`.
 

commit 954e76d6acfad8c1357583b8070bacd1dd34fe81
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Jul 22 10:43:04 2021 +0300

    Update firebase-app-distribution.md

diff --git a/content/publishing/firebase-app-distribution.md b/content/publishing/firebase-app-distribution.md
index 3fee1fe..89441a5 100644
--- a/content/publishing/firebase-app-distribution.md
+++ b/content/publishing/firebase-app-distribution.md
@@ -22,7 +22,7 @@ This guide only applies to workflows configured with the **Flutter workflow edit
 1. Navigate to **App settings > Distribution > Firebase App Distribution**.
 2. Enter your **Firebase token**.
 3. Provide the **Firebase app ID** for Android and/or iOS. Note that the fields for Android or iOS configuration are displayed conditionally based on the selected build platforms at the top of the page.
-4. Enter the name(s) of the **tester groups** to whom you want to distribute your Android or iOS app. The field is case-sensitive. To enter multiple groups, separate them with a comma or a space, or press Enter after each value.
+4. Enter the alias(es) of the **tester groups** to whom you want to distribute your Android or iOS app. To enter multiple groups, separate them with a comma or a space, or press Enter after each value.
 5. Select **Publish even if tests fail** to upload the artifacts even when one or more tests have failed.
 6. Finally, select **Enable publishing to Firebase App Distribution** at the top of the section to enable publishing.
 

commit 62b169354f19a9dae623233acd045c7ab5a1654f
Author: Priit Lätt <priit@nevercode.io>
Date:   Mon Jul 19 15:29:54 2021 +0300

    Base image update @ 19-07-2021 (#422)
    
    Co-authored-by: Arnold Veltmann <arnold.veltmann@gmail.com>

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index 1b93e8e..6e5e49f 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -2,7 +2,7 @@
 description: A list of tools available out-of-the-box on Codemagic build machines.
 title: Linux build machine specification
 aliases:
-  - '../releases-and-versions/versions-linux'
+  - "../releases-and-versions/versions-linux"
 weight: 6
 ---
 
@@ -24,7 +24,7 @@ weight: 6
 - aws `1.18.69`
 - curl `7.68.0`
 - docker `20.10.2`
-- firebase `9.1.0`
+- firebase `9.3.0`
 - flutter `2.2.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
@@ -53,13 +53,13 @@ weight: 6
 
 - **emulator**
 
-    - Device: `pixel_4 (Google)`
-    - Path: `/home/builder/.android/avd/emulator.avd`
-    - Target: `Google Play (Google Inc.)`
-    - Based on: `Android 10.0 (Q)`
-    - Tag/API: `google_apis_playstore/x86`
-    - Skin: `pixel_4`
-    - Sdcard: `512M`
+  - Device: `pixel_4 (Google)`
+  - Path: `/home/builder/.android/avd/emulator.avd`
+  - Target: `Google Play (Google Inc.)`
+  - Based on: `Android 10.0 (Q)`
+  - Tag/API: `google_apis_playstore/x86`
+  - Skin: `pixel_4`
+  - Sdcard: `512M`
 
 ## Java versions
 
diff --git a/content/specs/versions.md b/content/specs/versions.md
index 66293d1..4cc54ff 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -2,7 +2,7 @@
 description: A list of tools available out-of-the-box on Codemagic build machines.
 title: macOS build machine specification (Xcode 11.x)
 aliases:
-  - '../releases-and-versions/versions'
+  - "../releases-and-versions/versions"
 weight: 5
 ---
 
@@ -56,13 +56,13 @@ weight: 5
 
 - **emulator**
 
-    - Device: `pixel_2 (Google)`
-    - Path: `/Users/builder/.android/avd/emulator.avd`
-    - Target: `Google APIs (Google Inc.)`
-    - Based on: `Android 9.0 (Pie)`
-    - Tag/API: `google_apis/x86`
-    - Skin: `pixel_2`
-    - Sdcard: `512M`
+  - Device: `pixel_2 (Google)`
+  - Path: `/Users/builder/.android/avd/emulator.avd`
+  - Target: `Google APIs (Google Inc.)`
+  - Based on: `Android 9.0 (Pie)`
+  - Tag/API: `google_apis/x86`
+  - Skin: `pixel_2`
+  - Sdcard: `512M`
 
 ## Java versions
 
@@ -73,8 +73,8 @@ weight: 5
 
 ## Xcode 11.7 (11E801a)
 
-This is the Xcode version used by default when you select `11.7` in build settings in the workflow 
-editor for Flutter apps or set Xcode version to `11.7` in your codemagic.yaml file. 
+This is the Xcode version used by default when you select `11.7` in build settings in the workflow
+editor for Flutter apps or set Xcode version to `11.7` in your codemagic.yaml file.
 Other available versions are listed [here](#other-xcode-versions).
 
 Xcode path: `/Applications/Xcode-11.7.app`
@@ -161,4 +161,3 @@ With Xcode `11.7` build version `11E801a` the following runtimes and devices are
 - 11.2.1 (11B500) `/Applications/Xcode-11.2.1.app`
 - 11.1 (11A1027) `/Applications/Xcode-11.1.app`
 - 11.0 (11A420a) `/Applications/Xcode-11.app`
-
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 3d23f42..82d2b73 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -2,7 +2,7 @@
 description: A list of tools available out-of-the-box on Codemagic build machines.
 title: macOS build machine specification (Xcode 12.0 - 12.4)
 aliases:
-  - '../releases-and-versions/versions2'
+  - "../releases-and-versions/versions2"
 weight: 4
 ---
 
@@ -56,13 +56,13 @@ weight: 4
 
 - **emulator**
 
-    - Device: `pixel_2 (Google)`
-    - Path: `/Users/builder/.android/avd/emulator.avd`
-    - Target: `Google APIs (Google Inc.)`
-    - Based on: `Android 10.0 (Q)`
-    - Tag/API: `google_apis/x86`
-    - Skin: `pixel_2`
-    - Sdcard: `512M`
+  - Device: `pixel_2 (Google)`
+  - Path: `/Users/builder/.android/avd/emulator.avd`
+  - Target: `Google APIs (Google Inc.)`
+  - Based on: `Android 10.0 (Q)`
+  - Tag/API: `google_apis/x86`
+  - Skin: `pixel_2`
+  - Sdcard: `512M`
 
 ## Java versions
 
@@ -73,8 +73,8 @@ weight: 4
 
 ## Xcode 12.4 (12D4e)
 
-This is the Xcode version used by default when you select `12.4` in build settings in the workflow 
-editor for Flutter apps or set Xcode version to `12.4` in your codemagic.yaml file. 
+This is the Xcode version used by default when you select `12.4` in build settings in the workflow
+editor for Flutter apps or set Xcode version to `12.4` in your codemagic.yaml file.
 Other available versions are listed [here](#other-xcode-versions).
 
 Xcode path: `/Applications/Xcode-12.4.app`
@@ -163,4 +163,3 @@ With Xcode `12.4` build version `12D4e` the following runtimes and devices are i
 - 12.2 (12B45b) `/Applications/Xcode-12.2.app`
 - 12.1.1 (12A7605b) `/Applications/Xcode-12.1.1.app`
 - 12.0.1 (12A7300) `/Applications/Xcode-12.app`
-
diff --git a/content/specs/versions4.md b/content/specs/versions4.md
index f7b4e4a..ba66005 100644
--- a/content/specs/versions4.md
+++ b/content/specs/versions4.md
@@ -15,7 +15,7 @@ weight: 2
 
 - System version `macOS 11.4 (20F71)`
 - Kernel version `Darwin 20.5.0`
-- Disk `322GB (Free Space: 190GB)`
+- Disk `322GB (Free Space: 186GB)`
 
 ## Pre-installed tools
 
@@ -26,7 +26,7 @@ weight: 2
 - cordova `10.0.0`
 - curl
 - docker `20.10.2`
-- fastlane `2.186.0`
+- fastlane `2.187.0`
 - firebase `9.3.0`
 - flutter `2.2.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
@@ -70,14 +70,14 @@ weight: 2
 - **11.0.11** (default) JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home`
 - **1.8.0_292** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home`
 
-## Xcode 13.0 (13A5155e)
+## Xcode 13.0 (13A5192j)
 
-This is the Xcode version used by default when you select `13.0` or `edge` in build settings in the workflow
-editor for Flutter apps or set Xcode version to `13.0` or `edge` in your codemagic.yaml file.
+This is the Xcode version used by default when you select `13.0` or `edge` in build settings in the workflow 
+editor for Flutter apps or set Xcode version to `13.0` or `edge` in your codemagic.yaml file. 
 
 Xcode path: `/Applications/Xcode-13.0.app`
 
-With Xcode `13.0` build version `13A5155e` the following runtimes and devices are installed:
+With Xcode `13.0` build version `13A5192j` the following runtimes and devices are installed:
 
 ### Runtimes
 

commit 5d5ca72d9203ec59ab68285ccff20a76d7fca7ba
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Mon Jul 19 10:35:36 2021 +0300

    Firebase version pump

diff --git a/content/specs/versions.md b/content/specs/versions.md
index 48c0cbf..66293d1 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -27,7 +27,7 @@ weight: 5
 - curl
 - docker `19.03.8`
 - fastlane `2.157.3`
-- firebase `7.6.2`
+- firebase `9.3.0`
 - flutter `2.2.3 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - gh `1.8.1`

commit aeb05de1163f64c9a56a61b81cd6465a259ad8cb
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Mon Jul 19 10:34:55 2021 +0300

    Firebase version pump

diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 88fe8b3..3d23f42 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -27,7 +27,7 @@ weight: 4
 - curl
 - docker `20.10.2`
 - fastlane `2.172.0`
-- firebase `8.10.0`
+- firebase `9.3.0`
 - flutter `2.2.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`

commit 8e393064d514ebb6b7e6f97b157139e4fb2ccb30
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Jul 15 18:36:37 2021 +0300

    Specify android paths (#418)
    
    * Update building-a-flutter-app.md
    
    * Update yaml.md

diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index 67a6109..c6de67f 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -133,8 +133,8 @@ workflows:
         script: |
           cd . && flutter build apk --release --build-name=1.0.0 --build-number=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))
     artifacts:
-      - build/**/outputs/**/*.apk
-      - build/**/outputs/**/*.aab
+      - build/**/outputs/apk/**/*.apk
+      - build/**/outputs/bundle/**/*.aab
       - build/**/outputs/**/mapping.txt
       - flutter_drive.log
     publishing:
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 8678b94..3a29d63 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -98,7 +98,7 @@ workflows:
     scripts:
       - ...
     artifacts:
-      - build/**/outputs/**/*.aab
+      - build/**/outputs/bundle/**/*.aab
     publishing:
       email:
         recipients:
@@ -290,8 +290,8 @@ Configure the paths and names of the artifacts you would like to use in the foll
 
 ```yaml
 artifacts:
-  - build/**/outputs/**/*.apk                   # relative path for a project in root directory
-  - subfolder_name/build/**/outputs/**/*.apk    # relative path for a project in subfolder
+  - build/**/outputs/apk/**/*.apk                   # relative path for a project in root directory
+  - subfolder_name/build/**/outputs/apk/**/*.apk    # relative path for a project in subfolder
   - build/**/outputs/**/*.aab
   - build/**/outputs/**/mapping.txt
   - build/ios/ipa/*.ipa

commit 7dbedf5e872c8083c8af6b37c13ea9ded6d46a32
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Jul 15 18:36:25 2021 +0300

    Update distribution.md (#416)

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 6762030..ff0b8ad 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -199,7 +199,7 @@ echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleSe
 
 ### Publishing an app to Firebase App Distribution
 
-Codemagic enables you to automatically publish your iOS or Android app to [Firebase Console](https://console.firebase.google.com/). Codemagic uses your **Firebase token** for authentication with Firebase App Distribution. To retrieve the token, follow the instructions in [Firebase documentation](https://firebase.google.com/docs/cli#cli-ci-systems).
+Codemagic enables you to automatically publish your iOS or Android app to [Firebase Console](https://console.firebase.google.com/). Codemagic uses your **Firebase token** for authentication with Firebase App Distribution. To retrieve the token, follow the instructions in [Firebase documentation](https://firebase.google.com/docs/cli#cli-ci-systems). For distributing an iOS application to Firebase App Distribution, your application must use a development, Ad Hoc or Enterprise distribution profile.
 
 Make sure to [encrypt](https://docs.codemagic.io/building/encrypting/) your Firebase token. It is possible to add the encrypted token directly under publishing or save it to the `FIREBASE_TOKEN` environment variable and reference it under publishing.
 

commit 17230e4738444e842d11035633836a679ab229d4
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Thu Jul 15 17:04:53 2021 +0300

    Update codemagic-sample-projects.md

diff --git a/content/sample-projects/codemagic-sample-projects.md b/content/sample-projects/codemagic-sample-projects.md
index 00d42b3..1e112e8 100644
--- a/content/sample-projects/codemagic-sample-projects.md
+++ b/content/sample-projects/codemagic-sample-projects.md
@@ -36,6 +36,8 @@ For further information on how configure the **codemagic.yaml** for your project
 
 ### Publishing and Distribution
 * [Firebase App Distribution](https://github.com/icarusdust/codemagic_firebase_app_distribution_yaml)
+* [App Store Connect](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/ios/ios-automatic-code-signing-demo-project)
+* [Google Play](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/android/android-espresso-demo-project)
 
 ### YAML Samples
 * [YAML anchors and aliases sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/yaml/yaml_anchors_aliases_sample)

commit 248780ed2605b6d6ad1b1cd13dd55d93d55edfdd
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Thu Jul 15 16:41:22 2021 +0300

    Update codemagic-sample-projects.md

diff --git a/content/sample-projects/codemagic-sample-projects.md b/content/sample-projects/codemagic-sample-projects.md
index 34e6025..00d42b3 100644
--- a/content/sample-projects/codemagic-sample-projects.md
+++ b/content/sample-projects/codemagic-sample-projects.md
@@ -34,8 +34,11 @@ For further information on how configure the **codemagic.yaml** for your project
 ### Integrations 
 * [Jira integation sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/integrations/jira_integration_demo_project)
 
+### Publishing and Distribution
+* [Firebase App Distribution](https://github.com/icarusdust/codemagic_firebase_app_distribution_yaml)
+
 ### YAML Samples
 * [YAML anchors and aliases sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/yaml/yaml_anchors_aliases_sample)
 
 ### Cordova Samples
-* [Cordova sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/cordova/cordova-demo-project)
\ No newline at end of file
+* [Cordova sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/cordova/cordova-demo-project)

commit 36c9c0c013888c1bbc0a8430666e96357f598478
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Jul 15 15:41:54 2021 +0300

    Add FAD workflow editor docs (#417)
    
    * Add FAD workflow editor docs
    
    * update release notes info
    
    * address comments
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/publishing/beta-deployment-with-fastlane.md b/content/publishing/beta-deployment-with-fastlane.md
index 2c2b3bc..65a8b4a 100644
--- a/content/publishing/beta-deployment-with-fastlane.md
+++ b/content/publishing/beta-deployment-with-fastlane.md
@@ -1,7 +1,7 @@
 ---
 description: How to deploy to fastlane beta in the Flutter workflow editor pre-publish script
 title: Run fastlane for beta deployment
-weight: 7
+weight: 8
 ---
 
 If your Flutter app has an existing *fastlane* setup for beta deployment, you can easily run *fastlane* scripts as part of the Codemagic build process and publish to Crashlytics, for example. Note that our build machines have *fastlane* pre-installed. You can use the pre-publish script example below to execute `fastlane beta` for successful Android builds.
diff --git a/content/publishing/email-and-slack-notifications.md b/content/publishing/email-and-slack-notifications.md
index f9bfb0b..d36b26d 100644
--- a/content/publishing/email-and-slack-notifications.md
+++ b/content/publishing/email-and-slack-notifications.md
@@ -1,7 +1,7 @@
 ---
 description: How to configure build status updates with links to artifacts in the Flutter workflow editor
 title: Email and Slack notifications
-weight: 8
+weight: 9
 ---
 
 ## Email
diff --git a/content/publishing/firebase-app-distribution.md b/content/publishing/firebase-app-distribution.md
new file mode 100644
index 0000000..3fee1fe
--- /dev/null
+++ b/content/publishing/firebase-app-distribution.md
@@ -0,0 +1,37 @@
+---
+description: Deploy a Flutter app to Firebase App Distribution using the Flutter workflow editor
+title: Firebase App Distribution
+weight: 3
+---
+
+Set up publishing to [Firebase App Distribution](https://firebase.google.com/docs/app-distribution) to distribute your Android and iOS apps to testers.
+
+{{<notebox>}}
+This guide only applies to workflows configured with the **Flutter workflow editor**. If your workflow is configured with **codemagic.yaml**, please go to [Publishing an app to Firebase App Distribution](../publishing-yaml/distribution/#publishing-an-app-to-firebase-app-distribution).
+{{</notebox>}}
+
+## Requirements
+
+* [Add Firebase to your Flutter project](https://firebase.google.com/docs/flutter/setup)
+* Generate a [Firebase token](https://firebase.google.com/docs/cli#cli-ci-systems) locally
+* Set up [iOS code signing](../code-signing/ios-code-signing). Note that an Ad Hoc or Enterprise distribution profile is required to distribute the app outside your development team.
+* Set up [Android code signing](../code-signing/android-code-signing). If you do not set up code signing, the artifact will be signed with a debug keystore from Codemagic build machine.
+
+## Enabling publishing to Firebase App Distribution
+
+1. Navigate to **App settings > Distribution > Firebase App Distribution**.
+2. Enter your **Firebase token**.
+3. Provide the **Firebase app ID** for Android and/or iOS. Note that the fields for Android or iOS configuration are displayed conditionally based on the selected build platforms at the top of the page.
+4. Enter the name(s) of the **tester groups** to whom you want to distribute your Android or iOS app. The field is case-sensitive. To enter multiple groups, separate them with a comma or a space, or press Enter after each value.
+5. Select **Publish even if tests fail** to upload the artifacts even when one or more tests have failed.
+6. Finally, select **Enable publishing to Firebase App Distribution** at the top of the section to enable publishing.
+
+{{<notebox>}}
+Note that:
+
+* if your app uses Firebase services, you need to upload the Firebase configuration files to Codemagic, see the instructions [here](../knowledge-base/load-firebase-configuration/); 
+* if no suitable artifacts are found, publishing to Firebase App Distribution is skipped;
+* each uploaded binary must have a different version to appear in the Firebase console, see how to [increment build version](../building/build-versioning/);
+* release notes can be published with the build if you have added them to your repository, read more [here](./publish-release-notes).
+
+{{</notebox>}}
diff --git a/content/publishing/github-release.md b/content/publishing/github-release.md
index 5c91a01..537848e 100644
--- a/content/publishing/github-release.md
+++ b/content/publishing/github-release.md
@@ -1,7 +1,7 @@
 ---
 description: How to create a GitHub release with artifacts using the Flutter workflow editor
 title: GitHub releases
-weight: 10
+weight: 11
 ---
 
 Codemagic enables you to automatically create a GitHub release and upload generated artifacts when your build is triggered on tag creation. Read more about GitHub releases in [GitHub's documentation](https://docs.github.com/en/github/administering-a-repository/about-releases).
diff --git a/content/publishing/publish-app-artifacts-to-app-center.md b/content/publishing/publish-app-artifacts-to-app-center.md
index 51c1038..822c799 100644
--- a/content/publishing/publish-app-artifacts-to-app-center.md
+++ b/content/publishing/publish-app-artifacts-to-app-center.md
@@ -1,7 +1,7 @@
 ---
 description: How to upload an apk or ipa file to App Center in a Flutter workflow editor post-build script
 title: Publish app artifacts to App Center
-weight: 6
+weight: 7
 ---
 
 As a custom build step, Codemagic can publish your app artifact to App Center using the [App Center Command Line Interface](https://github.com/microsoft/appcenter-cli). An **App Center API token** is required for publishing. It is advisable to create a new token for use on Codemagic, see the commands related to API tokens [here](https://github.com/microsoft/appcenter-cli#commands) or manage your tokens in [App Center settings](https://appcenter.ms/settings/apitokens).
diff --git a/content/publishing/publish-build-artifacts-to-amazon-s3.md b/content/publishing/publish-build-artifacts-to-amazon-s3.md
index ec33f2d..baa2722 100644
--- a/content/publishing/publish-build-artifacts-to-amazon-s3.md
+++ b/content/publishing/publish-build-artifacts-to-amazon-s3.md
@@ -1,7 +1,7 @@
 ---
 description: How to use Flutter workflow editor custom scripts to publish app artifacts to external services
 title: Publish build artifacts to Amazon S3
-weight: 5
+weight: 6
 ---
 
 You can use custom scripts to publish your app artifacts to external sources. Here's an example for publishing to [Amazon S3](https://aws.amazon.com/s3/).
diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index 0ee4fb6..e63f0c1 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -1,32 +1,33 @@
 ---
 description: How to publish build release notes using the Flutter workflow editor
 title: Passing release notes
-weight: 9
+weight: 10
 ---
 
-Create custom release notes file(s) to notify users of the changes as you publish a new version of your app.
+Create custom release notes to notify users of the changes as you publish a new version of your app.
 
 Release notes can be published to:
 
-* **email**. The release notes will be included in the publishing email of a successful build if you have the publishing configured in **App settings > Notifications > Email**.
-* **Slack**. The release notes will be included in the Slack notification of a successful build if you have the publishing configured in **App settings > Notifications > Slack**.
-* **App Store Connect**. The release notes will be published to App Store Connect if you have the publishing configured in **App settings > Distribution > App Store Connect**.
-* **Google Play**. The release notes will be published to Google Play Console if you have the publishing configured in **App settings > Distribution > Google Play**.
+* **email**. The release notes will be included in the publishing email of a successful build if you have publishing to email configured in **App settings > Notifications > Email**.
+* **Slack**. The release notes will be included in the Slack notification of a successful build if you have publishing to Slack configured in **App settings > Notifications > Slack**.
+* **App Store Connect**. The release notes will be published to App Store Connect if you have publishing to App Store Connect configured in **App settings > Distribution > App Store Connect**.
+* **Google Play**. The release notes will be published to Google Play Console if you have publishing to Google Play configured in **App settings > Distribution > Google Play**.
+* **Firebase App Distribution**. The release notes will be published to Firebase console if you have publishing to Firebase App Distribution configured in **App settings > Distribution > Firebase App Distribution**.
 
 ## Setting up release notes
 
 There are three supported options to set up release notes:
 
-1. Create a `release_notes.txt` file and add it to the project working directory, which is either the repository root directory or the **Project path** specified in the **Build** section in your workflow settings. Codemagic will fetch the content of that file and publish it with the build.
-    * For email and Slack it will be published as is.
-    * For Google Play it will be published under `en-US` language localization code.
+1. Create a `release_notes.txt` file and add it to the project working directory, which is either the repository root directory or the **Project path** specified in the **Build** section in your workflow settings. Codemagic will fetch the contents of that file and publish it with the build.
+    * For email, Slack and Firebase App Distribution, the releaser notes will be published as is.
+    * For Google Play, the release notes will be published under the `en-US` language localization code.
 
 {{<notebox>}}
 For App Store Connect, supported languages and codes are listed [here](https://developer.apple.com/documentation/appstoreconnectapi/betabuildlocalizationcreaterequest/data/attributes). For Google Play Console, supported languages and codes are listed [here](https://support.google.com/googleplay/android-developer/table/4419860?hl=en).
 {{</notebox>}}
 
 2. Create a `release_notes_<language_localization_code>.txt` file for every language used, e.g. `release_notes_en-GB.txt`, `release_notes_it.txt`, and add them to the project working directory, which is either the repository root directory or the **Project path** specified in the **Build** section in your workflow settings.
-    * Release notes with `en-US` language code will be published to email and Slack in case file with `en-US` language code exists. If not, the first found release notes will be published.
+    * Release notes with the `en-US` language code will be published to email, Slack and Firebase App Distribution in the case a file with the `en-US` language code exists. If not, the first found release notes will be published.
     * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.
 
 3. Create a `release_notes.json` file with the following content:
@@ -46,5 +47,5 @@ For App Store Connect, supported languages and codes are listed [here](https://d
 
     Add this file to the project working directory, which is either the repository root directory or the **Project path** specified in the **Build** section in your workflow settings. Notes with missing `language` or `text` fields will not be taken into account.
 
-    * Release notes with `en-US` language code will be published to email and Slack, given that a file with `en-US` language code exists. If not, the first release notes will be published.
+    * Release notes with the `en-US` language code will be published to email, Slack and Firebase App Distribution, given that a file with the `en-US` language code exists. If not, the first found release notes will be published.
     * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 647cc32..49ff743 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -59,7 +59,7 @@ If you work with multiple Apple Developer teams, you can add additional keys by
 
 Once the Apple Developer Portal has been enabled for the account or team the app belongs to, you can easily enable App Store Connect publishing per workflow.
 
-1. Navigate to the Publish section in app settings **App settings > Distribution**.
+1. Navigate to **App settings > Distribution**.
 2. Click **App Store Connect**.
 3. If you have several keys available, select the right key in the **App Store Connect API key** field.
 4. Mark the **Submit to TestFlight** checkbox to automatically enroll your build to beta testers.  
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index e4bb11d..4f9be06 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -1,7 +1,7 @@
 ---
 description: How to publish a web app to a custom subdomain using the Flutter workflow editor
 title: Codemagic Static Pages
-weight: 4
+weight: 5
 ---
 
 You can publish your web app to a custom subdomain of `codemagic.app` for easy access.
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index e57bf98..b9cbd4f 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -26,8 +26,8 @@ Once you configure publishing to Google Play, Codemagic will automatically distr
 The very first version of the app must be added to Google Play manually. You can download the **app_release.apk** from the build artifacts.
 {{</notebox>}}
 
-1. Navigate to the Publish section in app settings.
-2. Click **Google Play** to expand the options.
+1. Navigate to the Distribution section in app settings.
+2. Click **Google Play** to expand the option.
 3. Upload your credentials JSON file.
 4. Select a **track** for publishing.
    - Internal --- publish for internal testing and QA
diff --git a/content/publishing/snap-store.md b/content/publishing/snap-store.md
index bb9dde4..a6089dd 100644
--- a/content/publishing/snap-store.md
+++ b/content/publishing/snap-store.md
@@ -1,7 +1,7 @@
 ---
 description: How to publish a snap to the Snap Store using the Flutter workflow editor
 title: Snapcraft Snap Store
-weight: 3
+weight: 4
 ---
 
 The [snap packages](../flutter/flutter-projects/#building-snap-packages) you build in Codemagic can be published straight to the [Snapcraft Snap Store](https://snapcraft.io/) as part of the build workflow.

commit c67bbf91b74acf7066c44fe49cdd5092040bdeca
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Jul 15 11:05:29 2021 +0300

    Update distribution.md

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index a188cef..6762030 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -240,9 +240,9 @@ publishing:
       groups: # Add one or more groups that you wish to distribute your Android application to, you can create groups in the Firebase console
         - androidTesters
         - ...
-    ios: # Add one or more groups that you wish to distribute your iOS application to, you can create groups in the Firebase console
+    ios:
       app_id: x:xxxxxxxxxxxx:ios:xxxxxxxxxxxxxxxxxxxxxx # Add your iOS app id retrieved from Firebase console
-      groups:
+      groups: # Add one or more groups that you wish to distribute your iOS application to, you can create groups in the Firebase console
         - iosTesters
         - ...
 ```

commit eae4e96170b9663c43f2fb407786a71957c4ca7c
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Jul 15 11:04:51 2021 +0300

    Update distribution.md

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 53d73b2..a188cef 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -210,6 +210,7 @@ publishing:
   firebase:
     firebase_token: Encrypted(...) # Add your encrypted Firebase token, or add it to your environment variables and reference as $FIREBASE_TOKEN
     android:
+      app_id: x:xxxxxxxxxxxx:android:xxxxxxxxxxxxxxxxxxxxxx # Add your Android app id retrieved from Firebase console
       groups: # Add one or more groups that you wish to distribute your Android application to, you can create groups in the Firebase console
         - androidTesters
         - ...
@@ -222,6 +223,7 @@ publishing:
   firebase:
     firebase_token: Encrypted(...) # Add your encrypted Firebase token, or add it to your environment variables and reference as $FIREBASE_TOKEN
     ios:
+      app_id: x:xxxxxxxxxxxx:ios:xxxxxxxxxxxxxxxxxxxxxx # Add your iOS app id retrieved from Firebase console
       groups: # Add one or more groups that you wish to distribute your iOS application to, you can create groups in the Firebase console
         - iosTesters
         - ...
@@ -234,10 +236,12 @@ publishing:
   firebase:
     firebase_token: Encrypted(...) # Add your encrypted Firebase token, or add it to your environment variables and reference as $FIREBASE_TOKEN
     android:
+      app_id: x:xxxxxxxxxxxx:android:xxxxxxxxxxxxxxxxxxxxxx # Add your Android app id retrieved from Firebase console
       groups: # Add one or more groups that you wish to distribute your Android application to, you can create groups in the Firebase console
         - androidTesters
         - ...
     ios: # Add one or more groups that you wish to distribute your iOS application to, you can create groups in the Firebase console
+      app_id: x:xxxxxxxxxxxx:ios:xxxxxxxxxxxxxxxxxxxxxx # Add your iOS app id retrieved from Firebase console
       groups:
         - iosTesters
         - ...

commit a1a06ec60a4d86c51ede9bf811335f87c94fedf2
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Jul 14 12:10:00 2021 +0300

    Update distribution.md (#415)
    
    * Update distribution.md
    
    * Update distribution.md
    
    * Update publish-release-notes.md
    
    * Update distribution.md
    
    * Update distribution.md
    
    * Update content/publishing-yaml/distribution.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index f3416f3..53d73b2 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -197,40 +197,54 @@ echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/goo
 echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
 ```
 
-### Publishing an app using Firebase CLI
+### Publishing an app to Firebase App Distribution
 
-Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documentation](https://firebase.google.com/docs/cli#cli-ci-systems) for details.
+Codemagic enables you to automatically publish your iOS or Android app to [Firebase Console](https://console.firebase.google.com/). Codemagic uses your **Firebase token** for authentication with Firebase App Distribution. To retrieve the token, follow the instructions in [Firebase documentation](https://firebase.google.com/docs/cli#cli-ci-systems).
+
+Make sure to [encrypt](https://docs.codemagic.io/building/encrypting/) your Firebase token. It is possible to add the encrypted token directly under publishing or save it to the `FIREBASE_TOKEN` environment variable and reference it under publishing.
 
 Android
 
 ```yaml
-- name: Publish the app to Firebase App Distribution
-  script: |
-    apkPath=$(find build -name "*.apk" | head -1)
-    if [[ -z ${apkPath} ]]
-    then
-      echo "No apks were found, skip publishing to Firebase App Distribution"
-    else
-      echo "Publishing $apkPath to Firebase App Distribution"
-      firebase appdistribution:distribute --app <your_android_application_firebase_id> --groups <your_android_testers_group> $apkPath
-    fi
+publishing:
+  firebase:
+    firebase_token: Encrypted(...) # Add your encrypted Firebase token, or add it to your environment variables and reference as $FIREBASE_TOKEN
+    android:
+      groups: # Add one or more groups that you wish to distribute your Android application to, you can create groups in the Firebase console
+        - androidTesters
+        - ...
 ```
 
 iOS
 
 ```yaml
-- name: Publish the app to Firebase App Distribution
-  script: |
-    ipaPath=$(find build -name "*.ipa" | head -1)
-    if [[ -z ${ipaPath} ]]
-    then
-      echo "No ipas were found, skip publishing to Firebase App Distribution"
-    else
-      echo "Publishing $ipaPath to Firebase App Distribution"
-      firebase appdistribution:distribute --app <your_ios_application_firebase_id> --groups <your_ios_testers_group> $ipaPath
-    fi
+publishing:
+  firebase:
+    firebase_token: Encrypted(...) # Add your encrypted Firebase token, or add it to your environment variables and reference as $FIREBASE_TOKEN
+    ios:
+      groups: # Add one or more groups that you wish to distribute your iOS application to, you can create groups in the Firebase console
+        - iosTesters
+        - ...
 ```
 
+Android and iOS
+
+```yaml
+publishing:
+  firebase:
+    firebase_token: Encrypted(...) # Add your encrypted Firebase token, or add it to your environment variables and reference as $FIREBASE_TOKEN
+    android:
+      groups: # Add one or more groups that you wish to distribute your Android application to, you can create groups in the Firebase console
+        - androidTesters
+        - ...
+    ios: # Add one or more groups that you wish to distribute your iOS application to, you can create groups in the Firebase console
+      groups:
+        - iosTesters
+        - ...
+```
+
+If you wish to pass release notes with your build, create a `release_notes.txt` file and add it to the project working directory, which is either the repository root directory or the Project path specified in the Build section in your workflow settings. Codemagic will fetch the content of that file and publish it with the build.
+
 ### Publishing an app with Fastlane
 
 Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documentation](https://firebase.google.com/docs/cli#cli-ci-systems) for details.
diff --git a/content/publishing-yaml/publish-release-notes.md b/content/publishing-yaml/publish-release-notes.md
index 9deff02..72d211b 100644
--- a/content/publishing-yaml/publish-release-notes.md
+++ b/content/publishing-yaml/publish-release-notes.md
@@ -12,13 +12,14 @@ Release notes can be published to:
 * **Slack**. The release notes will be included in the Slack notification of a successful build if you have publishing to Slack configured in the `publishing` section of your workflow.
 * **App Store Connect**. The release notes will be published to the What to Test field in TestFlight if you have publishing to App Store Connect configured in the `publishing` section of your workflow.
 * **Google Play**. The release notes will be published to Google Play Console if you have publishing to Google Play configured in the `publishing` section of your workflow.
+* **Firebase App Distribution**. The release notes will be published to Firebase console if you have publishing to Firebase App Distribution configured in the `publishing` section of your workflow.
 
 ## Setting up release notes
 
 There are three supported options to set up release notes:
 
 1. Create a `release_notes.txt` file and add it to your project working directory, which is either the repository root directory or the `working_directory` specified in the root of your workflow configuration. Codemagic will fetch the content of that file and publish it with the build.
-    * For email and Slack it will be published as is.
+    * For email, Slack and Firebase it will be published as is.
     * For Google Play it will be published under `en-US` language localization code.
 
 {{<notebox>}}
@@ -46,5 +47,5 @@ For App Store Connect supported languages and codes are listed [here](https://de
 
    Add this file to your project working directory, which is either the repository root directory or the `working_directory` specified in the root of your workflow configuration. Notes with missing `language` or `text` fields will not be taken into account.
 
-    * Release notes with `en-US` language code will be published to email and Slack, given that a file with `en-US` language code exists. If not, the first release notes will be published.
+    * Release notes with `en-US` language code will be published to email, Slack and Firebase, given that a file with `en-US` language code exists. If not, the first release notes will be published.
     * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.

commit 0ad7624377685d4f798821fc5cc7cea4a641d176
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Tue Jul 13 10:50:55 2021 +0300

    Documentation regarding Ruby (#367)
    
    * Update yaml.md
    
    * Update yaml.md
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 1f5a4a1..8678b94 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -143,7 +143,11 @@ Note that `mac_pro`, `linux`, and `linux_x2` are only available for teams and us
 
 ### Environment
 
-`environment:` contains all the environment variables and enables to specify the version of Flutter, Xcode, CocoaPods, Node and npm used for building. This is also where you can add credentials and API keys required for [code signing](../code-signing-yaml/signing). Make sure to [encrypt the values](../building/encrypting) of variables that hold sensitive data. 
+`environment:` contains all the environment variables and enables to specify the version of Flutter, Xcode, CocoaPods, Node, npm and Ruby used for building. This is also where you can add credentials and API keys required for [code signing](../code-signing-yaml/signing). Make sure to [encrypt the values](../building/encrypting) of variables that hold sensitive data. 
+
+{{<notebox>}}
+Using a non-default version of Ruby for macOS builds will increase the time of your `Preparing build machine` step significantly. 
+{{</notebox>}}
 
 ```yaml
 environment:
@@ -182,7 +186,8 @@ environment:
   node: 12.14.0     # Define default, latest, current, lts, carbon (or another stream), nightly or version
   npm: 6.13.7       # Define default, latest, next, lts or version
   ndk: r21d         # Define default or revision (e.g. r19c)
-  java: 1.8         # Define platform version (e.g. 11)
+  java: 1.8         # Define default, or platform version (e.g. 11)
+  ruby: 2.7.2       # Define default or version
 ```
 
 {{<notebox>}}

commit 7030dbe9302d5a836083ce76ca2e7a2a173346a3
Author: Michael <2052646+bean5@users.noreply.github.com>
Date:   Mon Jul 12 01:06:53 2021 -0600

    Fix typos in new documentation for multi-lingual support of release notes (#414)

diff --git a/content/publishing-yaml/publish-release-notes.md b/content/publishing-yaml/publish-release-notes.md
index 58651a0..9deff02 100644
--- a/content/publishing-yaml/publish-release-notes.md
+++ b/content/publishing-yaml/publish-release-notes.md
@@ -39,7 +39,7 @@ For App Store Connect supported languages and codes are listed [here](https://de
         },
         {
             "language": "en-US",
-            "text": "The US Engish release notes text"
+            "text": "The US English release notes text"
         }
     ]
     ```
diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index dac42cb..0ee4fb6 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -39,7 +39,7 @@ For App Store Connect, supported languages and codes are listed [here](https://d
         },
         {
             "language": "en-US",
-            "text": "The US Engish release notes text"
+            "text": "The US English release notes text"
         }
     ]
     ```
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 70c6613..647cc32 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -92,7 +92,7 @@ To add localized release notes that will appear in the Test Details (What to tes
     },
     {
         "language": "en-US",
-        "text": "The US Engish release notes text"
+        "text": "The US English release notes text"
     }
 ]
 ```

commit 711c83ea2c6cc0bec0f747c1c4260772a2a81825
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Fri Jul 9 14:59:51 2021 +0300

    Update testing.md

diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index 035d72b..ef3dfea 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -286,4 +286,4 @@ For UI tests (also known as instrumented tests):
   test_report: app/build/outputs/androidTest-results/connected/*.xml
 ```
 
-**Tip**: you can save the emulator log with the `adb logcat -d > emulator.log` command.d
+**Tip**: you can save the emulator log with the `adb logcat -d > emulator.log` command

commit 589b953e5d7a79aa7f8447f4614338d6bcef3c8f
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Fri Jul 9 14:57:01 2021 +0300

    Update testing.md
    
    Guru page visual testing

diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index 320d570..035d72b 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -286,4 +286,4 @@ For UI tests (also known as instrumented tests):
   test_report: app/build/outputs/androidTest-results/connected/*.xml
 ```
 
-**Tip**: you can save the emulator log with the `adb logcat -d > emulator.log` command.
+**Tip**: you can save the emulator log with the `adb logcat -d > emulator.log` command.d

commit 0372ff30626fd87dc7bf9fbd9e2da9b484a3bb98
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Fri Jul 9 12:50:09 2021 +0300

    Update encrypting.md (#413)
    
    * Update encrypting.md
    
    encryption tool in the Workflow Editor, otherwise it could be vague what tool we are referring to
    
    * Update encrypting.md

diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index cf41bb3..89f0bc5 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -29,7 +29,7 @@ On macOS, in order to base64 encode a file and copy the contents to your clipboa
   ```bash
   cat your_file_name.extension | base64 | pbcopy 
   ```
-After the command has been run, you can paste the string from your clipboard to our encryption tool and then save the encrypted string to an environment variable.
+After the command has been run, you can paste the string from your clipboard to our encryption tool in the Codemagic UI and then save the encrypted string to an environment variable.
 
 Finally, base64 decode it during build time in your scripts section using the following command:
 

commit fe2308552b552ce4da95c2765c8ef62d2d6e9dbd
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Fri Jul 9 12:39:53 2021 +0300

    Update distribution.md (#411)
    
    * Update distribution.md
    
    Private slack channel publishing
    
    * Update distribution.md
    
    Made the changes

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 87a11f4..f3416f3 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -51,7 +51,7 @@ After you have successfully authorized Codemagic and connected your workspace, y
 The Slack channel for publishing is configured separately for each workflow in the `publishing` section of `codemagic.yaml` (refer [here](../publishing/email-and-slack-notifications/#slack) if you're configuring app settings in the Flutter workflow editor).
 
 {{<notebox>}}
-In order to publish to **private channels**, you need to invite Codemagic app to the channels, otherwise the app does not have access to private channels. To invite Codemagic app to private channels, write `@codemagic` in the channel.
+In order to publish to **private channels**, you need to invite Codemagic app to the channels, otherwise the app does not have access to private channels. To invite Codemagic app to private channels, write `@codemagic` in the channel. If the private channel access is restricted by Slack admin rights, it will have to be changed manually, otherwise publishing to that channel will not be possible.
 {{</notebox>}}
 
 If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the specified channel. If the build fails, a link to the build logs is published. When you set `notify_on_build_start` to `true`, the channel will be notified when a build starts.

commit d8187ba4ad5ff7884feca35d7299ae07917556a0
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Fri Jul 9 11:20:03 2021 +0300

    Feature/analytics (#412)
    
    track pageview and copy events for logged in users

diff --git a/assets/js/main.js b/assets/js/main.js
index 8099b98..6ce09f9 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -151,6 +151,7 @@ $(document).ready(function () {
                 window.auth._id = json.user._id
                 $('[data-js-header-auth-user]').addClass('transition-in')
                 $('[data-js-header-user-avatar]').html('<img src="' + auth.avatarUrl + '" alt=""/>')
+                setAnalyticsEvents()
             } else {
                 window.loggedIn = false
                 $('[data-js-header-auth-visitor]').addClass('transition-in')
@@ -165,6 +166,34 @@ $(document).ready(function () {
         }, 1000)
     }
 
+    async function setAnalyticsEvents() {
+        await sendEvent('page_viewed')
+
+        $(document).bind('copy', async function () {
+            await sendEvent('text_copied')
+        })
+
+        async function sendEvent(eventName) {
+            try {
+                await fetch('{{ site.Param "backendURL" }}/analytics', {
+                    mode: 'cors',
+                    method: 'POST',
+                    headers: {
+                        'Content-Type': 'application/json',
+                    },
+                    credentials: 'include',
+                    body: JSON.stringify({
+                        site: window.location.host,
+                        page_url: window.location.pathname,
+                        event_name: eventName,
+                    }),
+                })
+            } catch (error) {
+                console.error(error)
+            }
+        }
+    }
+
     $('[data-js-header-auth-logout]').on('click', userLogout)
 
     async function userLogout() {

commit 34472b783586f432039482e6a71d5f336ba8bb34
Author: maxstubbersfield <max.stubbersfield@gmail.com>
Date:   Fri Jul 9 09:08:46 2021 +0200

    CD into iOS folder before running agvtool (#374)
    
    * CD into ios folder before running agvtool
    
    * Add comment to script lines. Remove `$FCI_BUILD_DIR`.

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 1ef096b..df43b3f 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -102,6 +102,7 @@ Add the following script under your `scripts` field for `codemagic.yaml`, or as
 
 ```bash
 LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number '1234567890') # The argument is your application's Apple ID
+cd ./ios # Set working directory to iOS project directory as agvtool should run in directory with .xcodeproj file
 agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
 ```
 
@@ -109,6 +110,7 @@ To use the latest build number from Testflight use a similar script:
 
 ```bash
 LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number '1234567890') # The argument is your application's Apple ID
+cd ./ios # Set working directory to iOS project directory as agvtool should run in directory with .xcodeproj file
 agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
 ```
 

commit 4f4b3ad80bb77c59e899eaf033895c92ef3478d9
Author: nevercode-kevin <68225534+nevercode-kevin@users.noreply.github.com>
Date:   Wed Jul 7 13:58:21 2021 +0200

    More detailed information about pricing (#409)
    
    * first draft for pricing information
    
    * revisions to text
    
    * revert folder and doc name to prevent issues with links from app

diff --git a/config.yml b/config.yml
index 73a86e2..8878e5a 100644
--- a/config.yml
+++ b/config.yml
@@ -79,7 +79,7 @@ menu:
       name: Teams
       weight: 7
     - identifier: billing
-      name: Billing
+      name: Billing & Pricing
       weight: 8  
     - identifier: knowledge-base
       name: Knowledge base
diff --git a/content/billing/pricing.md b/content/billing/pricing.md
new file mode 100644
index 0000000..97a4fac
--- /dev/null
+++ b/content/billing/pricing.md
@@ -0,0 +1,105 @@
+---
+title: Pricing
+weight: 2
+---
+
+## Pay as you go pricing
+
+Pay as you go pricing allows you to pay for only what you use. 
+
+Currently it is only possible to run one build at a time with pay as you go.
+
+### Instance Types
+
+Codemagic provides macOS and Linux instance types.
+
+Premium VMs use more powerful hardware will run builds faster than standard VMs. 
+
+The instance types and hardware specifications can be found below.
+
+
+| **Item**        | **Specification**                                                                                                                                                       |
+| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |
+| macOS premium VM         | 3.7GHz Quad Core / 32GB                                                                                                                                                 |
+| macOS standard VM        | 2.3GHz Quad Core / 8GB                                                                                                                                                 |
+| Linux premium VM         | 8 vCPUs, 32 GB memory                                                                                                                                                 |
+| Linux standard VM        | 4 vCPUs, 16 GB memory  
+
+If you are planning to run instrumentation tests with Android emulators it is advised to use Linux instances. Android emulators are more stable on Linux VMs than on macOS VMs.
+
+If you need more powerful Linux or macOS machines, please contact us [here](https://codemagic.io/contact/).
+
+For Linux instances, details of the hardware specification, system information and pre-installed can be found [here](https://docs.codemagic.io/specs/versions-linux/)
+
+For macOS instances, details of the hardware specification, system information and pre-installed can be found [here](https://docs.codemagic.io/specs/versions3/)  
+
+### Pricing for Personal Accounts
+
+When billing is enabled on personal accounts you have 500 free builds minutes on macOS standard VM. 
+
+Usage on macOS standard VM that exceeds 500 minutes is charged at rate shown below.
+
+Builds on macOS premium VM, Linux standard VM, and Linux premium VM do not have free build minutes and are charged at the rates shown below. 
+
+| **Item**  | **Price**                                                                                                                                                       |
+| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |
+| macOS premium VM         | $0.095 / minute                                                                                                                                                 |
+| macOS standard VM        | $0.038 / minute                                                                                                                                                 |
+| Linux premium VM         | $0.045 / minute                                                                                                                                                 |
+| Linux standard VM        | $0.015 / minute                                                                                                                                                 |
+
+### Pricing for Teams
+
+For teams, all build minutes using macOS standard VM, macOS premium VM, Linux standard VM, and Linux premium VM are charged at the rates shown below. 
+
+Team users that were active in the current billing period are charged $10/month. To see how users are counted please see [here](https://docs.codemagic.io/teams/users/)
+
+| **Item**  | **Price**                                                                                                                                                       |
+| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |
+| macOS premium VM         | $0.095 / minute                                                                                                                                                 |
+| macOS standard VM        | $0.038 / minute                                                                                                                                                 |
+| Linux premium VM         | $0.045 / minute                                                                                                                                                 |
+| Linux standard VM        | $0.015 / minute                                                                                                                                                 |
+| Team user                | $10 / month                                                                                                                                                     |                                                                                                                                                 |
+
+## Business Plan
+
+The Codemagic business plan gives you a fixed price plan with the following benefits:
+
+* 3 concurrencies
+* Unlimited build minutes
+* Unlmited team seats
+* In-app chat support
+
+The **monthly** subscription is **$299/month** payable by credit card. Additional concurrencies are **$100/month**.
+
+An **annual** subscription with **20% discount** is **$2,870/year**. Additional concurrencies are **$960/year**. 
+
+Annual plans can be paid for with credit card and invoicing with bank transfer is available.
+
+If you would like to upgrade to a business plan, please contact us [here](https://codemagic.io/contact/).
+
+
+## Enterprise Plan
+
+Enterprise plans are available from **$6,000/year**.
+
+This plan is recommended if you need to go through a **procurement process** or have special requirements such as an **SLA**, **NDA**, **dedicated hosts**, or **custom base images**.
+
+If you would like more information about our Enterprise plan, please contact us [here](https://codemagic.io/enterprise/). 
+
+## Dedicated Hosts
+
+If you need specific software and tools available on a builder machine we can provide dedicated macOS host machines which give you 2 VMs. 
+
+Dedicated hosts are available for $449/month, paid annually with **20% discount** comes to **$4,310/year**. 
+
+Annual plans can be paid for with credit card and invoicing with bank transfer is available.
+
+For more information contact us [here](https://codemagic.io/contact/).
+
+### Unity Framework
+
+If you are building Unity apps for iOS or Android we can provide dedicated macOS hosts with Unity 2020.3 LTS Unity 2019.4.15 (Android build support and iOS build support components).
+
+If you would like more information about dedicated hosts, please contact us [here](https://codemagic.io/contact/).

commit 81b5d251ad8467085c158e38079b5594d0d6d985
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Jul 6 14:57:10 2021 +0300

    reorganize publishing section (#410)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/config.yml b/config.yml
index 7ebba6f..73a86e2 100644
--- a/config.yml
+++ b/config.yml
@@ -72,7 +72,7 @@ menu:
       weight: 3
       parent: setup-flutter
     - identifier: publishing
-      name: Publishing
+      name: Distribution and notifications
       weight: 4
       parent: setup-flutter
     - identifier: teams
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 79019e9..abad308 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -91,7 +91,7 @@ android {
 
 You are required to upload your keystore file and provide details about your key in order to receive signed builds on Codemagic.
 
-1. Navigate to the **Publish** section in app settings.
+1. Navigate to the **Distribution** section in app settings.
 2. Click **Android code signing**.
 3. Upload your release keystore file.
 4. Enter the **keystore password**, **key alias** and **key password**.
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 508d2d9..a6f0843 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -84,7 +84,7 @@ If you work with multiple Apple Developer teams, you can add additional keys by
 
 Once the Apple Developer Portal has been enabled for the account or team the app belongs to, you can easily enable automatic code signing per workflow.
 
-1. Go to **App settings > Publish > iOS code signing**.
+1. Go to **App settings > Distribution > iOS code signing**.
 2. Select **Automatic** as the code signing method. If you haven't enabled the Apple Developer Portal integration yet, you will be asked to enable it before you can continue configuration.
 3. If you have several keys available, select the right key in the **App Store Connect API key** field.
 4. Select the **provisioning profile type** used for provisioning the build. Codemagic will automatically select or generate a matching certificate for code signing. The provisioning profiles (except for Distribution) will include all the devices you have registered on your Apple Developer account at the time of creating the profile.
@@ -103,7 +103,7 @@ This is required when distributing your app via Apple Developer Enterprise Progr
 
 ### Setting up manual code signing
 
-1. Go to **App settings > Publish > iOS code signing**.
+1. Go to **App settings > Distribution > iOS code signing**.
 2. Select **Manual** as the code signing method.
 3. Upload your signing certificate (in `.p12` format). If your certificate is password-protected, enter the **Certificate password**. 
 4. Upload your provisioning profile (`.mobileprovision`). Note that if your app contains app extensions, you are required to upload an additional provisioning profile for each extension.
diff --git a/content/code-signing/macos-code-signing.md b/content/code-signing/macos-code-signing.md
index e516b8b..6575637 100644
--- a/content/code-signing/macos-code-signing.md
+++ b/content/code-signing/macos-code-signing.md
@@ -82,7 +82,7 @@ If you work with multiple Apple Developer teams, you can add additional keys by
 
 Once the Apple Developer Portal has been enabled for the account or team the app belongs to, you can easily enable automatic code signing per workflow.
 
-1. Go to **App settings > Publish > macOS code signing**.
+1. Go to **App settings > Distribution > macOS code signing**.
 2. Select **Automatic** as the code signing method. If you haven't enabled the Apple Developer Portal integration yet, you will be asked to enable it before you can continue configuration.
 3. If you have several keys available, select the right key in the **App Store Connect API key** field.
 4. Mark the checkbox **Project type setting > is Mac Catalyst** if you need a Mac Catalyst profile.
@@ -97,7 +97,7 @@ With the manual code signing method, you are required to upload the `Mac App Dis
 
 ### Setting up manual code signing
 
-1. Go to **App settings > Publish > iOS code signing**.
+1. Go to **App settings > Distribution > iOS code signing**.
 2. Select **Manual** as the code signing method.
 3. Upload your `Mac App Distribution` signing certificate (in `.p12` format). If your certificate is password-protected, enter the **Certificate password**.
 3. Upload your `Mac Installer Distribution` signing certificate (in `.p12` format). If your certificate is password-protected, enter the **Certificate password**.
diff --git a/content/publishing/beta-deployment-with-fastlane.md b/content/publishing/beta-deployment-with-fastlane.md
index ad2de2a..2c2b3bc 100644
--- a/content/publishing/beta-deployment-with-fastlane.md
+++ b/content/publishing/beta-deployment-with-fastlane.md
@@ -4,10 +4,10 @@ title: Run fastlane for beta deployment
 weight: 7
 ---
 
-If your Flutter app has an existing *fastlane* setup for beta deployment, you can easily run *fastlane* scripts as part of the Codemagic build process and publish to Crashlytics, for example. Note that our builder machines have *fastlane* pre-installed. You can use the pre-publish script example below to execute `fastlane beta` for successful Android builds.
+If your Flutter app has an existing *fastlane* setup for beta deployment, you can easily run *fastlane* scripts as part of the Codemagic build process and publish to Crashlytics, for example. Note that our build machines have *fastlane* pre-installed. You can use the pre-publish script example below to execute `fastlane beta` for successful Android builds.
 
 1. Before running the script, navigate to **App settings > Environment variables** and add the API keys / secrets required for authorizing with the third-party service as secure [environment variables](../building/environment-variables). 
-2. Click on the + sign between **Build** and **Publish** and paste your script to the pre-publish script field.
+2. Click on the + sign between **Build** and **Distribution** and paste your script to the pre-publish script field.
 
 ```bash
 #!/usr/bin/env bash
diff --git a/content/publishing/email-and-slack-notifications.md b/content/publishing/email-and-slack-notifications.md
index a0adfe4..f9bfb0b 100644
--- a/content/publishing/email-and-slack-notifications.md
+++ b/content/publishing/email-and-slack-notifications.md
@@ -6,7 +6,7 @@ weight: 8
 
 ## Email
 
-Email publishing settings can be found in **App settings > Publish > Email**.
+Email publishing settings can be found in **App settings > Notifications > Email**.
 
 Email publishing is the only publishing option that is enabled by default. Codemagic uses the email specified as the default one in the service you used to log in (Github, Bitbucket, Gitlab). You can add multiple email addresses.
 
@@ -24,7 +24,7 @@ Use only the part in angle brackets from the whole address line (e.g. `My awesom
 
 In order to set up publishing to Slack, you first need to connect the Slack workspace in **User settings > Integrations > Slack** for your personal apps and in **Teams > Your_team > Team integrations > Slack** for the team apps. 
 
-Once your Slack workspace is connected, you can enable Slack publishing and select a channel for publishing in **App settings > Publish > Slack** when using the workflow editor.
+Once your Slack workspace is connected, you can enable Slack publishing and select a channel for publishing in **App settings > Notifications > Slack** when using the workflow editor.
 
 In order to publish to **private channels**, you need to invite Codemagic app to the channels, otherwise the app does not have access to private channels. To invite Codemagic app to private channels, write `@codemagic` in the channel. If you are in the Codemagic web app, refresh the page and the new channel will become available in the dropdown menu.
 
diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index f4d23f4..dac42cb 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -8,10 +8,10 @@ Create custom release notes file(s) to notify users of the changes as you publis
 
 Release notes can be published to:
 
-* **email**. The release notes will be included in the publishing email of a successful build if you have the publishing configured in **App settings > Publish > Email**.
-* **Slack**. The release notes will be included in the Slack notification of a successful build if you have the publishing configured in **App settings > Publish > Slack**.
-* **App Store Connect**. The release notes will be published to App Store Connect if you have the publishing configured in **App settings > Publish > App Store Connect**.
-* **Google Play**. The release notes will be published to Google Play Console if you have the publishing configured in **App settings > Publish > Google Play**.
+* **email**. The release notes will be included in the publishing email of a successful build if you have the publishing configured in **App settings > Notifications > Email**.
+* **Slack**. The release notes will be included in the Slack notification of a successful build if you have the publishing configured in **App settings > Notifications > Slack**.
+* **App Store Connect**. The release notes will be published to App Store Connect if you have the publishing configured in **App settings > Distribution > App Store Connect**.
+* **Google Play**. The release notes will be published to Google Play Console if you have the publishing configured in **App settings > Distribution > Google Play**.
 
 ## Setting up release notes
 
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index fcf6b6c..70c6613 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -59,7 +59,7 @@ If you work with multiple Apple Developer teams, you can add additional keys by
 
 Once the Apple Developer Portal has been enabled for the account or team the app belongs to, you can easily enable App Store Connect publishing per workflow.
 
-1. Navigate to the Publish section in app settings **App settings > Publish**.
+1. Navigate to the Publish section in app settings **App settings > Distribution**.
 2. Click **App Store Connect**.
 3. If you have several keys available, select the right key in the **App Store Connect API key** field.
 4. Mark the **Submit to TestFlight** checkbox to automatically enroll your build to beta testers.  
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index 23322f3..e4bb11d 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -6,7 +6,7 @@ weight: 4
 
 You can publish your web app to a custom subdomain of `codemagic.app` for easy access.
 
-1. Go to **App settings > Publish > Codemagic Static Pages** to configure publishing to Codemagic Static Pages.  
+1. Go to **App settings > Distribution > Codemagic Static Pages** to configure publishing to Codemagic Static Pages.  
 2. Choose a subdomain name and enter it in the **Web page subdomain** field. By default, we suggest your app name as the subdomain name.
 3. Check **Publish artifacts even if tests fail** to publish the build even when one or more tests fail. Leaving this option unchecked will publish only successful builds that pass the tests, if any.
 4. Select **Enable Codemagic Static Pages publishing** at the top of the section to enable publishing.
diff --git a/content/publishing/snap-store.md b/content/publishing/snap-store.md
index 04ad090..bb9dde4 100644
--- a/content/publishing/snap-store.md
+++ b/content/publishing/snap-store.md
@@ -6,7 +6,7 @@ weight: 3
 
 The [snap packages](../flutter/flutter-projects/#building-snap-packages) you build in Codemagic can be published straight to the [Snapcraft Snap Store](https://snapcraft.io/) as part of the build workflow.
 
-1. Go to **App settings > Publish > Snapcraft** to configure publishing to the Snapcraft Snap Store.  
+1. Go to **App settings > Distribution > Snapcraft** to configure publishing to the Snapcraft Snap Store.  
 2. Upload your Snapcraft login credentials file. This can be created by running the following command locally.
 
 ```

commit 429e41783b8b29fdb36a92a9efaac41538dd52d0
Author: Priit Lätt <priit@nevercode.io>
Date:   Mon Jul 5 13:18:40 2021 +0300

    Base image update @ 05-07-2021 (#408)
    
    Co-authored-by: Vladimir Markov <remarkov@gmail.com>

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index 6895802..1b93e8e 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -25,7 +25,7 @@ weight: 6
 - curl `7.68.0`
 - docker `20.10.2`
 - firebase `9.1.0`
-- flutter `2.2.2 ($HOME/programs/flutter)`
+- flutter `2.2.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.25.1`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index 813ec27..48c0cbf 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -28,7 +28,7 @@ weight: 5
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `2.2.2 ($HOME/programs/flutter)`
+- flutter `2.2.3 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - gh `1.8.1`
 - git `2.28.0`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 133f69d..88fe8b3 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -28,7 +28,7 @@ weight: 4
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `2.2.2 ($HOME/programs/flutter)`
+- flutter `2.2.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.30.0`
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 603ba00..252669c 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -28,7 +28,7 @@ weight: 3
 - docker `20.10.2`
 - fastlane `2.186.0`
 - firebase `9.3.0`
-- flutter `2.2.2 ($HOME/programs/flutter)`
+- flutter `2.2.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.11.0`
 - git `2.32.0`
diff --git a/content/specs/versions4.md b/content/specs/versions4.md
index 704208f..f7b4e4a 100644
--- a/content/specs/versions4.md
+++ b/content/specs/versions4.md
@@ -28,7 +28,7 @@ weight: 2
 - docker `20.10.2`
 - fastlane `2.186.0`
 - firebase `9.3.0`
-- flutter `2.2.2 ($HOME/programs/flutter)`
+- flutter `2.2.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.11.0`
 - git `2.32.0`

commit ced13d2e110e865902e70eacc08eb70a853f285e
Author: Priit Lätt <priit@nevercode.io>
Date:   Thu Jul 1 15:37:59 2021 +0300

    Base image update @ 01-07-2021 (#407)

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index d9968be..6895802 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -3,7 +3,7 @@ description: A list of tools available out-of-the-box on Codemagic build machine
 title: Linux build machine specification
 aliases:
   - '../releases-and-versions/versions-linux'
-weight: 5
+weight: 6
 ---
 
 ## Hardware
diff --git a/content/specs/versions.md b/content/specs/versions.md
index 0b0cc2d..813ec27 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -3,7 +3,7 @@ description: A list of tools available out-of-the-box on Codemagic build machine
 title: macOS build machine specification (Xcode 11.x)
 aliases:
   - '../releases-and-versions/versions'
-weight: 4
+weight: 5
 ---
 
 ## Hardware
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index d328662..133f69d 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -3,7 +3,7 @@ description: A list of tools available out-of-the-box on Codemagic build machine
 title: macOS build machine specification (Xcode 12.0 - 12.4)
 aliases:
   - '../releases-and-versions/versions2'
-weight: 3
+weight: 4
 ---
 
 ## Hardware
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 7666aa9..603ba00 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -1,9 +1,9 @@
 ---
 description: A list of tools available out-of-the-box on Codemagic build machines.
-title: macOS build machine specification (Xcode 12.5+)
+title: macOS build machine specification (Xcode 12.5)
 aliases:
   - '../releases-and-versions/versions3'
-weight: 2
+weight: 3
 ---
 
 ## Hardware
@@ -15,31 +15,31 @@ weight: 2
 
 - System version `macOS 11.2 (20D64)`
 - Kernel version `Darwin 20.3.0`
-- Disk `322GB (Free Space: 92GB)`
+- Disk `322GB (Free Space: 71GB)`
 
 ## Pre-installed tools
 
 - Android tools `/usr/local/share/android-sdk`
 - Android NDK `22.1.7171670`
-- aws `2.1.39`
+- aws `2.2.14`
 - cocoapods `1.10.1`
 - cordova `10.0.0`
 - curl
 - docker `20.10.2`
-- fastlane `2.181.0`
+- fastlane `2.186.0`
 - firebase `9.3.0`
 - flutter `2.2.2 ($HOME/programs/flutter)`
 - gem `3.1.4`
-- gh `1.9.2`
-- git `2.31.1`
+- gh `1.11.0`
+- git `2.32.0`
 - Google Cloud SDK `327.0.0`
 - gradle `6.7.1`
 - gsutil `4.58`
-- homebrew `3.1.3`
+- homebrew `3.2.0`
 - ionic `6.12.4`
 - jq
 - node `14.15.5`
-- npm `7.10.0`
+- npm `7.18.1`
 - python `3.8.7`
 - python3 `3.8.7`
 - ruby `2.7.2p137`
@@ -66,19 +66,20 @@ weight: 2
 
 ## Java versions
 
-- **16** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-16.jdk/Contents/Home`
+- **16.0.1** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-16.jdk/Contents/Home`
+- **15.0.3** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-15.jdk/Contents/Home`
 - **11.0.11** (default) JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home`
 - **1.8.0_292** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home`
 
-## Xcode 12.5 (12E262)
+## Xcode 12.5.1 (12E507)
 
-This is the Xcode version used by default when you select `12.5`, `latest` or `edge` in build settings in the workflow 
-editor for Flutter apps or set Xcode version to `12.5`, `latest` or `edge` in your codemagic.yaml file. 
+This is the Xcode version used by default when you select `12.5.1` or `latest` in build settings in the workflow
+editor for Flutter apps or set Xcode version to `12.5.1` or `latest` in your codemagic.yaml file.
 Other available versions are listed [here](#other-xcode-versions).
 
-Xcode path: `/Applications/Xcode-12.5.app`
+Xcode path: `/Applications/Xcode-12.5.1.app`
 
-With Xcode `12.5` build version `12E262` the following runtimes and devices are installed:
+With Xcode `12.5.1` build version `12E507` the following runtimes and devices are installed:
 
 ### Runtimes
 
@@ -130,5 +131,6 @@ With Xcode `12.5` build version `12E262` the following runtimes and devices are
 
 ## Other Xcode versions
 
+- 12.5 (12E262) `/Applications/Xcode-12.5.app`
 - 12.4 (12D4e) `/Applications/Xcode-12.4.app`
 
diff --git a/content/specs/versions4.md b/content/specs/versions4.md
new file mode 100644
index 0000000..704208f
--- /dev/null
+++ b/content/specs/versions4.md
@@ -0,0 +1,119 @@
+---
+description: A list of tools available out-of-the-box on Codemagic build machines.
+title: macOS build machine specification (Xcode 13.0+)
+aliases:
+  - '../releases-and-versions/versions4'
+weight: 2
+---
+
+## Hardware
+
+- Standard VM on Mac mini `2.3GHz Quad Core / 8GB`
+- Premium VM on Mac Pro `3.7GHz Quad Core / 32GB`
+
+## System
+
+- System version `macOS 11.4 (20F71)`
+- Kernel version `Darwin 20.5.0`
+- Disk `322GB (Free Space: 190GB)`
+
+## Pre-installed tools
+
+- Android tools `/usr/local/share/android-sdk`
+- Android NDK `22.1.7171670`
+- aws `2.2.14`
+- cocoapods `1.10.1`
+- cordova `10.0.0`
+- curl
+- docker `20.10.2`
+- fastlane `2.186.0`
+- firebase `9.3.0`
+- flutter `2.2.2 ($HOME/programs/flutter)`
+- gem `3.1.4`
+- gh `1.11.0`
+- git `2.32.0`
+- Google Cloud SDK `327.0.0`
+- gradle `6.7.1`
+- gsutil `4.58`
+- homebrew `3.2.0`
+- ionic `6.12.4`
+- jq
+- node `14.15.5`
+- npm `7.18.1`
+- python `3.8.7`
+- python3 `3.8.7`
+- ruby `2.7.2p137`
+- ssh
+- sudo
+- tar
+- unzip
+- wget
+- yarn `1.22.10`
+- yq
+- zip
+
+## Android emulators
+
+- **emulator**
+
+    - Device: `pixel_3a (Google)`
+    - Path: `/Users/builder/.android/avd/emulator.avd`
+    - Target: `Google Play (Google Inc.)`
+    - Based on: `Android 10.0 (Q)`
+    - Tag/API: `google_apis_playstore/x86`
+    - Skin: `pixel_3a`
+    - Sdcard: `512M`
+
+## Java versions
+
+- **16.0.1** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-16.jdk/Contents/Home`
+- **11.0.11** (default) JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home`
+- **1.8.0_292** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home`
+
+## Xcode 13.0 (13A5155e)
+
+This is the Xcode version used by default when you select `13.0` or `edge` in build settings in the workflow
+editor for Flutter apps or set Xcode version to `13.0` or `edge` in your codemagic.yaml file.
+
+Xcode path: `/Applications/Xcode-13.0.app`
+
+With Xcode `13.0` build version `13A5155e` the following runtimes and devices are installed:
+
+### Runtimes
+
+- iOS 14.5
+- iOS 15.0
+- tvOS 14.5
+- tvOS 15.0
+- watchOS 7.4
+- watchOS 8.0
+
+### Devices
+
+- Apple TV
+- Apple TV 4K
+- Apple TV 4K (2nd generation)
+- Apple TV 4K (at 1080p)
+- Apple TV 4K (at 1080p) (2nd generation)
+- Apple Watch Series 5 - 40mm
+- Apple Watch Series 5 - 44mm
+- Apple Watch Series 6 - 40mm
+- Apple Watch Series 6 - 44mm
+- iPad (8th generation)
+- iPad Air (4th generation)
+- iPad Pro (11-inch) (2nd generation)
+- iPad Pro (11-inch) (3rd generation)
+- iPad Pro (12.9-inch) (4th generation)
+- iPad Pro (12.9-inch) (5th generation)
+- iPad Pro (9.7-inch)
+- iPhone 11
+- iPhone 11 Pro
+- iPhone 11 Pro Max
+- iPhone 12
+- iPhone 12 Pro
+- iPhone 12 Pro Max
+- iPhone 12 mini
+- iPhone 8
+- iPhone 8 Plus
+- iPhone SE (2nd generation)
+- iPod touch (7th generation)

commit c1253684ce1a3a04e47c1bb1ef548a396bba0452
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Thu Jul 1 11:21:40 2021 +0300

    Improvement: release notes support for working directory (#403)
    
    * Updating wording to include project working directory
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: Chris Raastad <craastad@gmail.com>

diff --git a/content/publishing-yaml/publish-release-notes.md b/content/publishing-yaml/publish-release-notes.md
index c125c36..58651a0 100644
--- a/content/publishing-yaml/publish-release-notes.md
+++ b/content/publishing-yaml/publish-release-notes.md
@@ -17,7 +17,7 @@ Release notes can be published to:
 
 There are three supported options to set up release notes:
 
-1. Create a `release_notes.txt` file and add it to the root of your project. When it's present, Codemagic will fetch the content of that file and publish it with the build.
+1. Create a `release_notes.txt` file and add it to your project working directory, which is either the repository root directory or the `working_directory` specified in the root of your workflow configuration. Codemagic will fetch the content of that file and publish it with the build.
     * For email and Slack it will be published as is.
     * For Google Play it will be published under `en-US` language localization code.
 
@@ -25,8 +25,8 @@ There are three supported options to set up release notes:
 For App Store Connect supported languages and codes are listed [here](https://developer.apple.com/documentation/appstoreconnectapi/betabuildlocalizationcreaterequest/data/attributes). For Google Play Console supported languages and codes are listed [here](https://support.google.com/googleplay/android-developer/table/4419860?hl=en).
 {{</notebox>}}
 
-2. Create a `release_notes_<language_localization_code>.txt` file for every language used, e.g. `release_notes_en-GB.txt`, `release_notes_it.txt`, and add them to the root of your project.
-    * Release notes with `en-US` language code will be published to email and Slack in case file with `en-US` language code exists. If not, the first found release notes will be published.
+2. Create a `release_notes_<language_localization_code>.txt` file for every language used, e.g. `release_notes_en-GB.txt`, `release_notes_it.txt`, and add them to your project working directory, which is either the repository root directory or the `working_directory` specified in the root of your workflow configuration.
+   * Release notes with `en-US` language code will be published to email and Slack in case file with `en-US` language code exists. If not, the first found release notes will be published.
    * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.
 
 3. Create a `release_notes.json` file with the following content:
@@ -44,7 +44,7 @@ For App Store Connect supported languages and codes are listed [here](https://de
     ]
     ```
 
-    Add this file to the root of your project. Notes with missing `language` or `text` fields will not be taken into account.
+   Add this file to your project working directory, which is either the repository root directory or the `working_directory` specified in the root of your workflow configuration. Notes with missing `language` or `text` fields will not be taken into account.
 
     * Release notes with `en-US` language code will be published to email and Slack, given that a file with `en-US` language code exists. If not, the first release notes will be published.
     * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.
diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index 98d6f44..f4d23f4 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -1,6 +1,6 @@
 ---
 description: How to publish build release notes using the Flutter workflow editor
-title: Publish release notes
+title: Passing release notes
 weight: 9
 ---
 
@@ -17,7 +17,7 @@ Release notes can be published to:
 
 There are three supported options to set up release notes:
 
-1. Create a `release_notes.txt` file and add it to the root of your project. When it's present, Codemagic will fetch the content of that file and publish it with the build.
+1. Create a `release_notes.txt` file and add it to the project working directory, which is either the repository root directory or the **Project path** specified in the **Build** section in your workflow settings. Codemagic will fetch the content of that file and publish it with the build.
     * For email and Slack it will be published as is.
     * For Google Play it will be published under `en-US` language localization code.
 
@@ -25,7 +25,7 @@ There are three supported options to set up release notes:
 For App Store Connect, supported languages and codes are listed [here](https://developer.apple.com/documentation/appstoreconnectapi/betabuildlocalizationcreaterequest/data/attributes). For Google Play Console, supported languages and codes are listed [here](https://support.google.com/googleplay/android-developer/table/4419860?hl=en).
 {{</notebox>}}
 
-2. Create a `release_notes_<language_localization_code>.txt` file for every language used, e.g. `release_notes_en-GB.txt`, `release_notes_it.txt`, and add them to the root of your project.
+2. Create a `release_notes_<language_localization_code>.txt` file for every language used, e.g. `release_notes_en-GB.txt`, `release_notes_it.txt`, and add them to the project working directory, which is either the repository root directory or the **Project path** specified in the **Build** section in your workflow settings.
     * Release notes with `en-US` language code will be published to email and Slack in case file with `en-US` language code exists. If not, the first found release notes will be published.
     * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.
 
@@ -44,7 +44,7 @@ For App Store Connect, supported languages and codes are listed [here](https://d
     ]
     ```
 
-    Add this file to the root of your project. Notes with missing `language` or `text` fields will not be taken into account.
+    Add this file to the project working directory, which is either the repository root directory or the **Project path** specified in the **Build** section in your workflow settings. Notes with missing `language` or `text` fields will not be taken into account.
 
     * Release notes with `en-US` language code will be published to email and Slack, given that a file with `en-US` language code exists. If not, the first release notes will be published.
     * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.

commit 26c679db2fc0a74d01b4739bd57ed5846beb41c3
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Thu Jul 1 10:43:31 2021 +0300

    Update environment-variables.md (#399)
    
    Some typos

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 7d9f70e..8dcd1e4 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -7,7 +7,7 @@ weight: 2
 Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
 
 {{<notebox>}}
-You can add evironment variables in the [environment](../getting-started/yaml/#environment) section of the `codemagic.yaml` confguration file or in the [Environment variables](../flutter/env-variables/) section in the Flutter workflow editor.
+You can add environment variables in the [environment](../getting-started/yaml/#environment) section of the `codemagic.yaml` configuration file or in the [Environment variables](../flutter/env-variables/) section in the Flutter workflow editor.
 
 See how to [encrypt sensitive information](./encrypting) in Codemagic.
 {{</notebox>}}

commit 256c83d05bcab188ecd7ad6e38605e84fb3d569e
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Wed Jun 30 17:20:10 2021 +0300

    Feature: localized release notes (#401)
    
    * Improvement: build processing time
    
    * UI configuration
    
    * Feature: localized release notes
    
    * Remove extra changes
    
    * Add App Store Connect
    
    * Yaml publishing release notes
    
    * Update content/publishing/publish-release-notes.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing/publish-release-notes.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing/publish-release-notes.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing/publishing-to-app-store.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing/publishing-to-app-store.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing-yaml/publish-release-notes.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing-yaml/publish-release-notes.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing-yaml/publish-release-notes.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update publish-release-notes.md
    
    * Update content/publishing-yaml/publish-release-notes.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing-yaml/publish-release-notes.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing-yaml/publish-release-notes.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing-yaml/publish-release-notes.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Weight
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/publishing-yaml/publish-release-notes.md b/content/publishing-yaml/publish-release-notes.md
new file mode 100644
index 0000000..c125c36
--- /dev/null
+++ b/content/publishing-yaml/publish-release-notes.md
@@ -0,0 +1,50 @@
+---
+description: How to pass release notes with successful builds
+title: Passing release notes
+weight: 2
+---
+
+Create custom release notes file(s) to notify users of the changes as you publish a new version of your app.
+
+Release notes can be published to:
+
+* **email**. The release notes will be included in the publishing email of a successful build if you have publishing to email configured in the `publishing` section of your workflow.
+* **Slack**. The release notes will be included in the Slack notification of a successful build if you have publishing to Slack configured in the `publishing` section of your workflow.
+* **App Store Connect**. The release notes will be published to the What to Test field in TestFlight if you have publishing to App Store Connect configured in the `publishing` section of your workflow.
+* **Google Play**. The release notes will be published to Google Play Console if you have publishing to Google Play configured in the `publishing` section of your workflow.
+
+## Setting up release notes
+
+There are three supported options to set up release notes:
+
+1. Create a `release_notes.txt` file and add it to the root of your project. When it's present, Codemagic will fetch the content of that file and publish it with the build.
+    * For email and Slack it will be published as is.
+    * For Google Play it will be published under `en-US` language localization code.
+
+{{<notebox>}}
+For App Store Connect supported languages and codes are listed [here](https://developer.apple.com/documentation/appstoreconnectapi/betabuildlocalizationcreaterequest/data/attributes). For Google Play Console supported languages and codes are listed [here](https://support.google.com/googleplay/android-developer/table/4419860?hl=en).
+{{</notebox>}}
+
+2. Create a `release_notes_<language_localization_code>.txt` file for every language used, e.g. `release_notes_en-GB.txt`, `release_notes_it.txt`, and add them to the root of your project.
+    * Release notes with `en-US` language code will be published to email and Slack in case file with `en-US` language code exists. If not, the first found release notes will be published.
+   * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.
+
+3. Create a `release_notes.json` file with the following content:
+
+    ```json
+    [
+        {
+            "language": "en-GB",
+            "text": "British English release notes text"
+        },
+        {
+            "language": "en-US",
+            "text": "The US Engish release notes text"
+        }
+    ]
+    ```
+
+    Add this file to the root of your project. Notes with missing `language` or `text` fields will not be taken into account.
+
+    * Release notes with `en-US` language code will be published to email and Slack, given that a file with `en-US` language code exists. If not, the first release notes will be published.
+    * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.
diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index 17f90bd..98d6f44 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -10,6 +10,7 @@ Release notes can be published to:
 
 * **email**. The release notes will be included in the publishing email of a successful build if you have the publishing configured in **App settings > Publish > Email**.
 * **Slack**. The release notes will be included in the Slack notification of a successful build if you have the publishing configured in **App settings > Publish > Slack**.
+* **App Store Connect**. The release notes will be published to App Store Connect if you have the publishing configured in **App settings > Publish > App Store Connect**.
 * **Google Play**. The release notes will be published to Google Play Console if you have the publishing configured in **App settings > Publish > Google Play**.
 
 ## Setting up release notes
@@ -21,26 +22,29 @@ There are three supported options to set up release notes:
     * For Google Play it will be published under `en-US` language localization code.
 
 {{<notebox>}}
-Language localization code is referred to a BCP-47 language tag as used in Google Play Services.
+For App Store Connect, supported languages and codes are listed [here](https://developer.apple.com/documentation/appstoreconnectapi/betabuildlocalizationcreaterequest/data/attributes). For Google Play Console, supported languages and codes are listed [here](https://support.google.com/googleplay/android-developer/table/4419860?hl=en).
 {{</notebox>}}
 
 2. Create a `release_notes_<language_localization_code>.txt` file for every language used, e.g. `release_notes_en-GB.txt`, `release_notes_it.txt`, and add them to the root of your project.
     * Release notes with `en-US` language code will be published to email and Slack in case file with `en-US` language code exists. If not, the first found release notes will be published.
-    * For Google Play, all the release notes will be published with corresponding language codes.
+    * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.
 
 3. Create a `release_notes.json` file with the following content:
 
     ```json
     [
         {
-            "language": string, # Language localization code (a BCP-47 language tag)
-            "text": string      # The text in the given language
+            "language": "en-GB",
+            "text": "British English release notes text"
         },
-        ...
+        {
+            "language": "en-US",
+            "text": "The US Engish release notes text"
+        }
     ]
     ```
 
-    Add this file to the root of your project. Notes with missing `language` or `text` fields will not be taken into account. Please refer to the [list of supported languages](https://support.google.com/googleplay/android-developer/table/4419860?hl=en).
+    Add this file to the root of your project. Notes with missing `language` or `text` fields will not be taken into account.
 
     * Release notes with `en-US` language code will be published to email and Slack, given that a file with `en-US` language code exists. If not, the first release notes will be published.
-    * For Google Play, all the found release notes will be published with corresponding language codes.
+    * For both App Store Connect and Google Play, only the release notes with the supported language codes will be published, omitting language codes that are not supported.
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index a1c3395..fcf6b6c 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -79,3 +79,22 @@ To make your iOS app available to the public, it must be submitted for review in
 2. Navigate to **My Apps** and identify the app you would like to publish to App Store.
 3. To start the submission process, click **Prepare for Submission**.
 4. Check that you app metadata is up to date, and once everything is ready, click the **Submit for Review** button.
+
+## Submitting release notes
+
+To add localized release notes that will appear in the Test Details (What to test?) section, include a `release_notes.json` with the following content:
+
+```json
+[
+    {
+        "language": "en-GB",
+        "text": "British English release notes text"
+    },
+    {
+        "language": "en-US",
+        "text": "The US Engish release notes text"
+    }
+]
+```
+
+Supported languages could be found [here](https://developer.apple.com/documentation/appstoreconnectapi/betabuildlocalizationcreaterequest/data/attributes).

commit 9a5b7ee0c5b81939214d1c6b8b8c1a966ddefac3
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Jun 30 10:26:18 2021 +0300

    Update yaml.md

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 02f751b..1f5a4a1 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -24,9 +24,9 @@ You can readily commit `codemagic.yaml` with the following content to test it ou
 ```yaml
 workflows:
   hello-world:
-    name: Hello world worklfow
+    name: Hello world workflow
     scripts:
-        - echo "Hello world!"
+        - echo "Hello World!"
 ```
 
 The scripts in the `scripts` section will be run right after the repository is cloned.

commit 41804d60af3ee51d8d8929eb03cb588a7d668dd1
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Jun 30 09:58:44 2021 +0300

    Refactor docs to remove reference to file UI encrypting (#398)
    
    * Update video-resources.md
    
    * Create base64-encode-decode.md
    
    * Update encrypting.md
    
    * Update base64-encode-decode.md
    
    * Update signing-ios.md
    
    * Update signing-ios.md
    
    * Delete base64-encode-decode.md
    
    * Update video-resources.md
    
    * Update encrypting.md
    
    * Update signing-ios.md
    
    * Update building-a-snap-package.md
    
    * Update building-a-snap-package.md
    
    * Update google-play-api.md
    
    * Update google-play-api.md
    
    * Update signing-android.md
    
    * Update build-versioning.md
    
    * Update signing-macos.md
    
    * Delete google_play_yaml_two.png
    
    * Update content/building/encrypting.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/building/encrypting.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/building/encrypting.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/code-signing-yaml/signing-ios.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update encrypting.md
    
    * Update content/building/encrypting.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index b730141..1ef096b 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -68,7 +68,7 @@ It is recommended to create a dedicated App Store Connect API key for Codemagic
 
 - `APP_STORE_CONNECT_PRIVATE_KEY`
 
-  This is the private API key downloaded from App Store Connect. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build. Alternatively, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
+  This is the private API key downloaded from App Store Connect. Encrypt the **contents** of the file and save the encrypted value to the environment variable.
 
 #### Saving to `codemagic.yaml` config
 
@@ -101,7 +101,6 @@ Once you have the App Store Connect API access set with mentioned above environm
 Add the following script under your `scripts` field for `codemagic.yaml`, or as a custom [Pre-build script](https://docs.codemagic.io/flutter/custom-scripts/) in the Flutter workflow editor:
 
 ```bash
-export APP_STORE_CONNECT_PRIVATE_KEY=$(echo $APP_STORE_CONNECT_PRIVATE_KEY | base64 --decode) # if you encrypted the file itself, not its content
 LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number '1234567890') # The argument is your application's Apple ID
 agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
 ```
@@ -109,7 +108,6 @@ agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
 To use the latest build number from Testflight use a similar script:
 
 ```bash
-export APP_STORE_CONNECT_PRIVATE_KEY=$(echo $APP_STORE_CONNECT_PRIVATE_KEY | base64 --decode) # if you encrypted the file itself, not its content
 LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number '1234567890') # The argument is your application's Apple ID
 agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
 ```
diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index 9db26a0..cf41bb3 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -22,11 +22,17 @@ The encrypted value will look something like this:
 Encrypted(Z0FBQUFBQmRyY1FLWXIwVEhqdWphdjRhQ0xubkdoOGJ2bThkNmh4YmdXbFB3S2wyNTN2OERoV3c0YWU0OVBERG42d3Rfc2N0blNDX3FfblZxbUc4d2pWUHJBSVppbXNXNC04U1VqcGlnajZ2VnJVMVFWc3lZZ289)
 ```
 
-Note that when you upload a **file** for encryption, it is encoded to `base64` and would have to be decoded during the build. If you want to encrypt a file (plaintext, JSON, plist), copy-paste the contents of it to the encryption interface and use the encrypted value in your configuration.
+If you wish to encrypt a **file** to add to your workflow, you will first have to base64 encode it and then encrypt the received string. To use the file, you will have to decode it during the build.
 
-Writing the base64-encoded environment variable to a file can be done like this:
+On macOS, in order to base64 encode a file and copy the contents to your clipboard, you can run the following command in the terminal:
 
-```yaml
-scripts:
-  - echo $MY_FILE | base64 --decode > my-file.json
-```
\ No newline at end of file
+  ```bash
+  cat your_file_name.extension | base64 | pbcopy 
+  ```
+After the command has been run, you can paste the string from your clipboard to our encryption tool and then save the encrypted string to an environment variable.
+
+Finally, base64 decode it during build time in your scripts section using the following command:
+
+  ```bash
+  echo $YOUR_ENVIRONMENT_VARIABLE | base64 --decode > /path/to/decode/to/your_file_name.extension
+  ```
diff --git a/content/code-signing-yaml/signing-android.md b/content/code-signing-yaml/signing-android.md
index ee9426e..36a8cac 100644
--- a/content/code-signing-yaml/signing-android.md
+++ b/content/code-signing-yaml/signing-android.md
@@ -47,7 +47,7 @@ This example shows how to set up code signing using Gradle.
   }
   ...
 ```
-2. Add your keystore and keystore details in the [`environment`](../getting-started/yaml#environment) section of the configuration file. [Encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password-protected), key alias and key alias password (if key alias is password-protected) and set the encrypted values to the following environment variables. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build.
+2. Add your keystore and keystore details in the [`environment`](../getting-started/yaml#environment) section of the configuration file. [Encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password-protected), key alias and key alias password (if key alias is password-protected) and set the encrypted values to the following environment variables. Note that encrypting files requires you to base64 encode them locally and decode them during the build.
 
 ```yaml
 environment:
diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index 46c1436..ae4796d 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -62,13 +62,11 @@ environment:
 
 - `APP_STORE_CONNECT_PRIVATE_KEY`
 
-  This is the private API key downloaded from App Store Connect. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build. Alternatively, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
+  This is the private API key downloaded from App Store Connect. Encrypt the **contents** of the file and save the encrypted value to the environment variable.
 
 - `CERTIFICATE_PRIVATE_KEY`
 
-  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal. 
-  
-  Similarly to the above note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build. Alternatively, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
+  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the command below in your terminal. Note that you should encrypt the **contents** of the file and save the encrypted value to the environment variable. 
 
 ```bash
 ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
@@ -106,7 +104,7 @@ Based on the specified bundle ID and [provisioning profile type](https://github.
 
 ## Manual code signing
 
-In order to use manual code signing, [encrypt](../building/encrypting/#encrypting-sensitive-data) your **signing certificate**, the **certificate password** (if the certificate is password-protected) and the **provisioning profile**, and set the encrypted values to the following environment variables. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build.
+In order to use manual code signing, [encrypt](../building/encrypting/#encrypting-sensitive-data) your **signing certificate**, the **certificate password** (if the certificate is password-protected) and the **provisioning profile**, and set the encrypted values to the following environment variables. Note that when encrypting files, you will have to locally base64 encode them and then decode during the build.
 
 ```yaml
 environment:
diff --git a/content/code-signing-yaml/signing-macos.md b/content/code-signing-yaml/signing-macos.md
index d30f5b8..4aa577d 100644
--- a/content/code-signing-yaml/signing-macos.md
+++ b/content/code-signing-yaml/signing-macos.md
@@ -126,7 +126,7 @@ Instead of specifying the exact bundle-id, you can use `"$(xcode-project detect-
 
 ## Provide signing files manually
 
-In order to use manual code signing, [encrypt](../building/encrypting/#encrypting-sensitive-data) your **signing certificate**, the **certificate password** (if the certificate is password-protected) and the **provisioning profile**, and set the encrypted values to the following environment variables. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build.
+In order to use manual code signing, [encrypt](../building/encrypting/#encrypting-sensitive-data) your **signing certificate**, the **certificate password** (if the certificate is password-protected) and the **provisioning profile**, and set the encrypted values to the following environment variables. Note that to encrypt files, they will have to be base64 encoded and will have to be decoded during the build.
 
 ```yaml
 environment:
diff --git a/content/getting-started/building-a-snap-package.md b/content/getting-started/building-a-snap-package.md
index 7cad1e5..a77c56d 100644
--- a/content/getting-started/building-a-snap-package.md
+++ b/content/getting-started/building-a-snap-package.md
@@ -58,13 +58,13 @@ snapcraft export-login snapcraft-login-credentials
 
   You will be asked to enter your Snapcraft account username and password.
 
-2. Drag and drop the credentials file to the encryption interface in Codemagic. This is available via the lock icon next to the yaml editor in your app settings. Read more about encrypting sensitive info in Codemagic [here](../building/encrypting/). 
+2. Base64 encode and encrypt the credentials file. Read more about encrypting sensitive info in Codemagic [here](../building/encrypting/). 
 3. Add the encrypted value to `codemagic.yaml` as an environment variable with the name `SNAPCRAFT_LOGIN_CREDENTIALS`.
 
 ```yaml
 SNAPCRAFT_LOGIN_CREDENTIALS: Encrypted(...)
 ```
-4. In the `scripts` section, add steps to log in to Snapcraft via CLI, build the snap package and release it to the desired channel.
+4. In the `scripts` section, add steps to base64 decode the credentials file, log in to Snapcraft via CLI, build the snap package and release it to the desired channel.
 
 ```yaml
 scripts:
diff --git a/content/knowledge-base/google-play-api.md b/content/knowledge-base/google-play-api.md
index 4f40497..92925b0 100644
--- a/content/knowledge-base/google-play-api.md
+++ b/content/knowledge-base/google-play-api.md
@@ -48,8 +48,7 @@ In order to set up publishing to Google Play, you need to encrypt the contents o
 1. Navigate to your app settings in the Codemagic UI and click **Encrypt environment variables** at the bottom of the screen.<br><br>
 ![Service account encrypt yaml](../uploads/google_play_yaml_one.png)
 
-2. Upload or drop the `JSON` key file to the encryption interface and copy the encrypted value.
-![Service account encrypt copy](../uploads/google_play_yaml_two.png)
+2. Open your `JSON` key file in an IDE of your choice and copy the contents, then proceed to paste the contents of your `JSON` key file to the encryption interface and copy the encrypted value.
 
 3. In your configuration file, set the encrypted value to the `credentials` variable under `google_play` publishing and commit the changes.
 ```yaml
diff --git a/content/knowledge-base/video-resources.md b/content/knowledge-base/video-resources.md
index c64296d..1e88edd 100644
--- a/content/knowledge-base/video-resources.md
+++ b/content/knowledge-base/video-resources.md
@@ -6,4 +6,4 @@ weight: 8
 
 A variety of video tutorials and webinars are available on the Codemagic YouTube channel.
 
-Click [here](https://www.youtube.com/channel/UC6iPpISHwCnNreb53c0eYvg) to visit our channel and don't forget to subscribe to be updated when new content is released.
\ No newline at end of file
+Click [here](https://www.youtube.com/channel/UC6iPpISHwCnNreb53c0eYvg) to visit our channel and don't forget to subscribe to be updated when new content is released.
diff --git a/content/uploads/google_play_yaml_two.png b/content/uploads/google_play_yaml_two.png
deleted file mode 100644
index d95d155..0000000
Binary files a/content/uploads/google_play_yaml_two.png and /dev/null differ

commit a39560084eb5304ef862c5db421976dd1fb0139a
Author: Priit Lätt <priit@nevercode.io>
Date:   Mon Jun 28 13:35:32 2021 +0300

    Base image update @ 28-06-2021 (#397)
    
    Co-authored-by: Arnold Veltmann <arnold.veltmann@gmail.com>

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index a34d4e6..d9968be 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -25,13 +25,13 @@ weight: 5
 - curl `7.68.0`
 - docker `20.10.2`
 - firebase `9.1.0`
-- flutter `2.2.1 ($HOME/programs/flutter)`
+- flutter `2.2.2 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.25.1`
 - Google Cloud SDK `325.0.0`
+- gradle `6.7.1`
 - gsutil `4.58`
-
 - ionic `5.4.16`
 - jq `jq-1.6`
 - node `14.15.3`
@@ -63,9 +63,9 @@ weight: 5
 
 ## Java versions
 
-- **15**: version `15-ea (2020-09-15)`, OpenJDK Runtime Environment
-- **11**: version `11.0.10 (2021-01-19)`, OpenJDK Runtime Environment
-- **1.8**: version `1.8.0_282`, OpenJDK Runtime Environment
+- **15-ea (2020-09-15)** JAVA_HOME: `/usr/lib/jvm/java-1.15.0-openjdk-amd64`
+- **11.0.10 (2021-01-19)** (default) JAVA_HOME: `/usr/lib/jvm/java-1.11.0-openjdk-amd64`
+- **1.8.0_282** JAVA_HOME: `/usr/lib/jvm/java-1.8.0-openjdk-amd64`
 
 ## Android Studio 4.1.2 (201.8743.12.41.7042882)
 
diff --git a/content/specs/versions.md b/content/specs/versions.md
index 9d31658..0b0cc2d 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -28,12 +28,12 @@ weight: 4
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `2.2.1 ($HOME/programs/flutter)`
+- flutter `2.2.2 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - gh `1.8.1`
 - git `2.28.0`
 - Google Cloud SDK `270.0.0`
-- gradle `6.1.1`
+- gradle `6.7.1`
 - gsutil `4.46`
 - homebrew `3.1.0`
 - ionic `4.11.0`
@@ -66,10 +66,10 @@ weight: 4
 
 ## Java versions
 
-- **14**: version `14.0.2`, JVM `OpenJDK 14.0.2`
-- **9**: version `9.0.4`, JVM `OpenJDK 9.0.4`
-- **1.8**: version `1.8.0_202`, JVM `Java SE 8`
-- **1.7**: version `1.7.0_272`, JVM `Zulu 7.40.0.15`
+- **14.0.2** JAVA_HOME: `/Library/Java/JavaVirtualMachines/openjdk-14.0.2.jdk/Contents/Home`
+- **9.0.4** JAVA_HOME: `/Library/Java/JavaVirtualMachines/jdk-9.0.4.jdk/Contents/Home`
+- **1.8.0_202** (default) JAVA_HOME: `/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home`
+- **1.7.0_272** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-7.jdk/Contents/Home`
 
 ## Xcode 11.7 (11E801a)
 
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 22aef32..d328662 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -15,7 +15,7 @@ weight: 3
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 29GB)`
+- Disk `322GB (Free Space: 28GB)`
 
 ## Pre-installed tools
 
@@ -28,12 +28,12 @@ weight: 3
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `2.2.1 ($HOME/programs/flutter)`
+- flutter `2.2.2 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.30.0`
 - Google Cloud SDK `310.0.0`
-- gradle `6.1.1`
+- gradle `6.7.1`
 - gsutil `4.53`
 - homebrew `3.1.0`
 - ionic `5.4.16`
@@ -66,10 +66,10 @@ weight: 3
 
 ## Java versions
 
-- **15**: version `15.0.1`, JVM `Zulu 15.28.51`
-- **11**: version `11.0.9.1`, JVM `Zulu 11.43.55`
-- **1.8**: version `1.8.0_275`, JVM `Zulu 8.50.0.51`
-- **1.7**: version `1.7.0_285`, JVM `Zulu 7.42.0.51`
+- **15.0.1** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-15.jdk/Contents/Home`
+- **11.0.9.1** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home`
+- **1.8.0_275** (default) JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home`
+- **1.7.0_285** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-7.jdk/Contents/Home`
 
 ## Xcode 12.4 (12D4e)
 
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 88ae534..7666aa9 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -15,7 +15,7 @@ weight: 2
 
 - System version `macOS 11.2 (20D64)`
 - Kernel version `Darwin 20.3.0`
-- Disk `322GB (Free Space: 93GB)`
+- Disk `322GB (Free Space: 92GB)`
 
 ## Pre-installed tools
 
@@ -28,12 +28,12 @@ weight: 2
 - docker `20.10.2`
 - fastlane `2.181.0`
 - firebase `9.3.0`
-- flutter `2.2.1 ($HOME/programs/flutter)`
+- flutter `2.2.2 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.9.2`
 - git `2.31.1`
 - Google Cloud SDK `327.0.0`
-- gradle `6.1.1`
+- gradle `6.7.1`
 - gsutil `4.58`
 - homebrew `3.1.3`
 - ionic `6.12.4`
@@ -66,9 +66,9 @@ weight: 2
 
 ## Java versions
 
-- **16**: version `16`, JVM `Zulu 16.28.11`
-- **11**: version `11.0.11`, JVM `Zulu 11.48.21`
-- **1.8**: version `1.8.0_292`, JVM `Zulu 8.54.0.21`
+- **16** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-16.jdk/Contents/Home`
+- **11.0.11** (default) JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home`
+- **1.8.0_292** JAVA_HOME: `/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home`
 
 ## Xcode 12.5 (12E262)
 
@@ -131,3 +131,4 @@ With Xcode `12.5` build version `12E262` the following runtimes and devices are
 ## Other Xcode versions
 
 - 12.4 (12D4e) `/Applications/Xcode-12.4.app`
+

commit d60633b4173064302dd1c8437d81ec0a44479811
Author: Dominik Roszkowski <dominik@roszkowski.dev>
Date:   Fri Jun 25 15:14:16 2021 +0200

    docs: clarify how to provide CERTIFICATE_PRIVATE_KEY (#395)

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index 35d2367..46c1436 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -66,7 +66,9 @@ environment:
 
 - `CERTIFICATE_PRIVATE_KEY`
 
-  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal:
+  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal. 
+  
+  Similarly to the above note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build. Alternatively, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
 
 ```bash
 ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""

commit de12886297780007d2f5235cd7b0f98f1ef3ab00
Author: Priit Lätt <priit@nevercode.io>
Date:   Fri Jun 25 10:44:58 2021 +0300

    Base image update @ 15-06-2021 (#388)
    
    Co-authored-by: Vladimir Markov <remarkov@gmail.com>

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index 7d68bdd..a34d4e6 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -42,7 +42,7 @@ weight: 5
 - ssh
 - snapcraft `4.6.2`
 - sudo
-- tar
+- tar / bsdtar
 - unzip
 - wget
 - yarn `1.22.5`

commit 7334d7dd454b2102246848174d71ad0a1cb7d628
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Fri Jun 25 10:26:34 2021 +0300

    Update UI integration test documentation (#390)
    
    * Update UI integration test documentation
    
    * Update running-automated-tests.md
    
    * Update content/testing/running-automated-tests.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index 73d8333..b1dc4cd 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -56,6 +56,8 @@ flutter emulators --launch emulator
 
 {{</notebox>}}
 
+It is also possible to use `flutter test` to run integration tests using the `integration_test` dependency. When using `flutter test integration_test` instead of `flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart`, it is possible to generate machine-readable output, and the results will be displayed in the UI once the tests have been completed. To do so, add `test integration_test` under `Flutter drive arguments` in the **Flutter workflow editor**.
+
 ### Stop build if tests fail
 
 Selecting the **Stop build if tests fail** option will stop the build after finishing all the enabled tests when any of the tests fail. Such builds will have the status "failed".

commit 4e501166554e2f808b7d0fec9c1f5e311bf4106c
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Tue Jun 22 14:31:25 2021 +0300

    Improvement: build processing time (#391)
    
    * Improvement: build processing time
    
    * UI configuration
    
    * Update content/publishing-yaml/distribution.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing/publishing-to-app-store.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update distribution.md
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 1f69fda..87a11f4 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -121,6 +121,15 @@ publishing:
     submit_to_testflight: true        # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight to automatically enroll your build to beta testers.  
 ```
 
+Submitting a build for TestFlight beta review depends on Apple's build processing time. By default, Codemagic will repeat submission attempts for 20 minutes. You can change how long the submission attempts should be tried by setting the `APP_STORE_CONNECT_MAX_BUILD_PROCESSING_WAIT` environment variable. For example, to set a 42-minute timeout:
+
+```yaml
+environment:
+  vars:
+    APP_STORE_CONNECT_MAX_BUILD_PROCESSING_WAIT: 42
+```
+
+
 ## GitHub releases
 
 Publishing GitHub releases is available for GitHub repositories only.
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 28dd21e..a1c3395 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -67,6 +67,10 @@ Once the Apple Developer Portal has been enabled for the account or team the app
 
 Once you have successfully set up publishing to App Store Connect, Codemagic will automatically distribute the app to App Store Connect every time you build the workflow. Note that you must manually submit the app to App Store in App Store Connect.
 
+{{<notebox>}}
+Submitting a build for TestFlight beta review depends on Apple's build processing time. By default, Codemagic will repeat submission attempts for 20 minutes. You can change how long the submission attempts should be tried by setting the `APP_STORE_CONNECT_MAX_BUILD_PROCESSING_WAIT` [environment variable](../building/environment-variables/ 'Environment variables') in minutes.
+{{</notebox>}}
+
 ## Submitting an app to App Store
 
 To make your iOS app available to the public, it must be submitted for review in App Store Connect.

commit 2d8e3f7acf6d9718cf91965fbb1cf83630979982
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Tue Jun 22 11:48:34 2021 +0300

    WIP - update documentation regarding Java versioning (#392)
    
    * Update yaml.md
    
    * Update yaml.md

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 6156fcd..02f751b 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -182,7 +182,7 @@ environment:
   node: 12.14.0     # Define default, latest, current, lts, carbon (or another stream), nightly or version
   npm: 6.13.7       # Define default, latest, next, lts or version
   ndk: r21d         # Define default or revision (e.g. r19c)
-  java: 1.8         # Define default, or platform version (e.g. 11). The default platform version is 1.8
+  java: 1.8         # Define platform version (e.g. 11)
 ```
 
 {{<notebox>}}

commit f848ae7041be0d8122a121fe3a99e1cb654765e4
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Jun 17 11:45:35 2021 +0300

    Update testing.md

diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index f5e6948..320d570 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -33,7 +33,7 @@ scripts:
 
 The `integration_test` dependency allows you to run integration tests on a real device or emulator. Android application tests can be run on an Android emulator, iOS application tests can be run on an iOS simulator, and web application tests can be run on a web browser driver.
 
-**Tip:** It is also possible to use `flutter test` to run integration tests using the integration_test package. When using `flutter test` instead of `flutter drive` it is possible to generate machine readable output using the `--machine` flag, hence the results can be displayed in the UI. Just include the `test_report` field with a glob pattern matching the test result file location:
+**Tip:** It is also possible to use `flutter test` to run integration tests using the `integration_test` dependency. When using `flutter test` instead of `flutter drive` it is possible to generate machine readable output using the `--machine` flag, hence the results can be displayed in the UI. Just include the `test_report` field with a glob pattern matching the test result file location:
 
 ```yaml
 scripts:

commit 5dee134d915037d92b9b3218344aa5dbe222a530
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Jun 17 11:39:10 2021 +0300

    Update testing.md (#389)

diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index 3e718ff..f5e6948 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -33,6 +33,18 @@ scripts:
 
 The `integration_test` dependency allows you to run integration tests on a real device or emulator. Android application tests can be run on an Android emulator, iOS application tests can be run on an iOS simulator, and web application tests can be run on a web browser driver.
 
+**Tip:** It is also possible to use `flutter test` to run integration tests using the integration_test package. When using `flutter test` instead of `flutter drive` it is possible to generate machine readable output using the `--machine` flag, hence the results can be displayed in the UI. Just include the `test_report` field with a glob pattern matching the test result file location:
+
+```yaml
+scripts:
+  - echo 'previous step'
+  - name: Integration tests
+    script: |
+      mkdir -p test-results
+      flutter -d emulator-5554 test --machine > test-results/flutter.json integration_test # for iOS use: -d iPhone
+    test_report: test-results/flutter.json
+```
+
 ### Running iOS/Android application tests on a mobile simulator/emulator
 
 ```bash

commit f0c2c78efc827bf3e614b80af8d8ebcc09896169
Author: Nihal Agazade <43378371+icarusdust@users.noreply.github.com>
Date:   Tue Jun 15 19:54:35 2021 +0300

    ensure keystore has JKS format (#385)
    
    * Update android-code-signing.md
    
    * Update android-code-signing.md

diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index a082aec..79019e9 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -34,7 +34,7 @@ As a keystore can hold multiple keys, each key in it must have an **alias**. Bot
 You can create a keystore for signing your release builds with the Java Keytool utility by running the following command:
 
 ```bash
-keytool -genkey -v -keystore keystore_name.jks -alias alias_name -keyalg RSA -keysize 2048 -validity 10000
+keytool -genkey -v -keystore keystore_name.jks -storetype JKS -keyalg RSA -keysize 2048 -validity 10000 -alias alias_name
 ```
 
 Keytool then prompts you to enter your personal details for creating the certificate, as well as provide passwords for the keystore and the key. It then generates the keystore as a file called **keystore_name.jks** in the directory you're in. The key is valid for 10,000 days.

commit ba4fb5d50c338d4a914cc266bc832df2aa924d32
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Mon Jun 14 13:09:09 2021 +0300

    update lodash dependency

diff --git a/yarn.lock b/yarn.lock
index 53d802d..a6caed5 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -696,7 +696,7 @@ golgoth@2.0.0:
     esm "3.2.25"
     flat "5.0.2"
     got "11.8.0"
-    lodash "4.17.20"
+    lodash "4.17.21"
     p-all "3.0.0"
     p-map "4.0.0"
     p-map-series "2.1.0"
@@ -796,7 +796,7 @@ inquirer@7.3.3:
     cli-width "^3.0.0"
     external-editor "^3.0.3"
     figures "^3.0.0"
-    lodash "^4.17.19"
+    lodash "^4.17.21"
     mute-stream "0.0.8"
     run-async "^2.4.0"
     rxjs "^6.6.0"
@@ -903,12 +903,7 @@ locate-path@^6.0.0:
   dependencies:
     p-locate "^5.0.0"
 
-lodash@4.17.20:
-  version "4.17.20"
-  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.20.tgz#b44a9b6297bcb698f1c51a3545a2b3b368d59c52"
-  integrity sha512-PlhdFcillOINfeV7Ni6oF1TAEayyZBoZ8bcshTHqOYJYlrqzRK5hagpagky5o4HfCzzd1TRkXPMFq6cKk9rGmA==
-
-lodash@^4.11.1, lodash@^4.17.19:
+lodash@4.17.21, lodash@^4.17.21:
   version "4.17.21"
   resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c"
   integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
@@ -1254,7 +1249,7 @@ std-mocks@1.0.1:
   resolved "https://registry.yarnpkg.com/std-mocks/-/std-mocks-1.0.1.tgz#d3388876d7beeba3c70fbd8e2bcaf46eb07d79fe"
   integrity sha1-0ziIdte+66PHD72OK8r0brB9ef4=
   dependencies:
-    lodash "^4.11.1"
+    lodash "^4.17.21"
 
 strict-uri-encode@^2.0.0:
   version "2.0.0"

commit 276dbbef0c04e30b1f16335d3ac99c8b1c4eb023
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Mon Jun 14 13:03:50 2021 +0300

    update normalize-url dependency

diff --git a/yarn.lock b/yarn.lock
index 70d8f6e..53d802d 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -597,7 +597,7 @@ firost@2.6.1:
     is-glob "4.0.1"
     json-stable-stringify "1.0.1"
     nanoid "3.1.20"
-    normalize-url "5.3.0"
+    normalize-url "6.0.1"
     ora "5.2.0"
     std-mocks "1.0.1"
     strip-ansi "6.0.0"
@@ -986,12 +986,7 @@ normalize-path@^3.0.0, normalize-path@~3.0.0:
   resolved "https://registry.yarnpkg.com/normalize-path/-/normalize-path-3.0.0.tgz#0dcd69ff23a1c9b11fd0978316644a0388216a65"
   integrity sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==
 
-normalize-url@5.3.0:
-  version "5.3.0"
-  resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-5.3.0.tgz#8959b3cdaa295b61592c1f245dded34b117618dd"
-  integrity sha512-9/nOVLYYe/dO/eJeQUNaGUF4m4Z5E7cb9oNTKabH+bNf19mqj60txTcveQxL0GlcWLXCxkOu2/LwL8oW0idIDA==
-
-normalize-url@^6.0.1:
+normalize-url@6.0.1, normalize-url@^6.0.1:
   version "6.0.1"
   resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-6.0.1.tgz#a4f27f58cf8c7b287b440b8a8201f42d0b00d256"
   integrity sha512-VU4pzAuh7Kip71XEmO9aNREYAdMHFGTVj/i+CaTImS8x0i1d3jUZkXhqluy/PRgjPLMgsLQulYY3PJ/aSbSjpQ==

commit 8d97cb96e7b4eda0622f3ba77ce9a25e0a3f62f2
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Mon Jun 14 12:52:34 2021 +0300

    update algolia-indexing dependencies
    
    * Bump normalize-url from 4.5.0 to 4.5.1
    
    Bumps [normalize-url](https://github.com/sindresorhus/normalize-url) from 4.5.0 to 4.5.1.
    - [Release notes](https://github.com/sindresorhus/normalize-url/releases)
    - [Commits](https://github.com/sindresorhus/normalize-url/commits)
    
    ---
    updated-dependencies:
    - dependency-name: normalize-url
      dependency-type: indirect
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>
    
    * update normalize-url (from 4.5.1 to 6.0.1) and other outdated dependencies
    
    Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
    Co-authored-by: Vladyslav Bondarenko <vladyslav@nevercode.io>

diff --git a/yarn.lock b/yarn.lock
index 0cbcf74..70d8f6e 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -106,25 +106,25 @@
     "@algolia/logger-common" "4.2.0"
     "@algolia/requester-common" "4.2.0"
 
-"@nodelib/fs.scandir@2.1.4":
-  version "2.1.4"
-  resolved "https://registry.yarnpkg.com/@nodelib/fs.scandir/-/fs.scandir-2.1.4.tgz#d4b3549a5db5de2683e0c1071ab4f140904bbf69"
-  integrity sha512-33g3pMJk3bg5nXbL/+CY6I2eJDzZAni49PfJnL5fghPTggPvBd/pFNSgJsdAgWptuFu7qq/ERvOYFlhvsLTCKA==
+"@nodelib/fs.scandir@2.1.5":
+  version "2.1.5"
+  resolved "https://registry.yarnpkg.com/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz#7619c2eb21b25483f6d167548b4cfd5a7488c3d5"
+  integrity sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==
   dependencies:
-    "@nodelib/fs.stat" "2.0.4"
+    "@nodelib/fs.stat" "2.0.5"
     run-parallel "^1.1.9"
 
-"@nodelib/fs.stat@2.0.4", "@nodelib/fs.stat@^2.0.2":
-  version "2.0.4"
-  resolved "https://registry.yarnpkg.com/@nodelib/fs.stat/-/fs.stat-2.0.4.tgz#a3f2dd61bab43b8db8fa108a121cfffe4c676655"
-  integrity sha512-IYlHJA0clt2+Vg7bccq+TzRdJvv19c2INqBSsoOLp1je7xjtr7J26+WXR72MCdvU9q1qTzIWDfhMf+DRvQJK4Q==
+"@nodelib/fs.stat@2.0.5", "@nodelib/fs.stat@^2.0.2":
+  version "2.0.5"
+  resolved "https://registry.yarnpkg.com/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz#5bd262af94e9d25bd1e71b05deed44876a222e8b"
+  integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==
 
 "@nodelib/fs.walk@^1.2.3":
-  version "1.2.6"
-  resolved "https://registry.yarnpkg.com/@nodelib/fs.walk/-/fs.walk-1.2.6.tgz#cce9396b30aa5afe9e3756608f5831adcb53d063"
-  integrity sha512-8Broas6vTtW4GIXTAHDoE32hnN2M5ykgCpWGbuXHQ15vEMqr23pB76e/GZcYsZCHALv50ktd24qhEyKr6wBtow==
+  version "1.2.7"
+  resolved "https://registry.yarnpkg.com/@nodelib/fs.walk/-/fs.walk-1.2.7.tgz#94c23db18ee4653e129abd26fb06f870ac9e1ee2"
+  integrity sha512-BTIhocbPBSrRmHxOAJFtR18oLhxTtAFDAvL8hY1S3iU8k+E60W/YFs4jrixGzQjMpF4qPXxIQHcjVD9dz1C2QA==
   dependencies:
-    "@nodelib/fs.scandir" "2.1.4"
+    "@nodelib/fs.scandir" "2.1.5"
     fastq "^1.6.0"
 
 "@sindresorhus/is@^4.0.0":
@@ -162,9 +162,9 @@
     "@types/node" "*"
 
 "@types/node@*":
-  version "15.3.1"
-  resolved "https://registry.yarnpkg.com/@types/node/-/node-15.3.1.tgz#23a06b87eedb524016616e886b116b8fdcb180af"
-  integrity sha512-weaeiP4UF4XgF++3rpQhpIJWsCTS4QJw5gvBhQu6cFIxTwyxWIe3xbnrY/o2lTCQ0lsdb8YIUDUvLR4Vuz5rbw==
+  version "15.12.2"
+  resolved "https://registry.yarnpkg.com/@types/node/-/node-15.12.2.tgz#1f2b42c4be7156ff4a6f914b2fb03d05fa84e38d"
+  integrity sha512-zjQ69G564OCIWIOHSXyQEEDpdpGl+G348RAKY0XXy9Z5kU9Vzv1GMNnkar/ZJ8dzXB3COzD9Mo9NtRZ4xfgUww==
 
 "@types/responselike@*", "@types/responselike@^1.0.0":
   version "1.0.0"
@@ -301,16 +301,16 @@ cacheable-lookup@^5.0.3:
   integrity sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==
 
 cacheable-request@^7.0.1:
-  version "7.0.1"
-  resolved "https://registry.yarnpkg.com/cacheable-request/-/cacheable-request-7.0.1.tgz#062031c2856232782ed694a257fa35da93942a58"
-  integrity sha512-lt0mJ6YAnsrBErpTMWeu5kl/tg9xMAWjavYTN6VQXM1A/teBITuNcccXsCxF0tDQQJf9DfAaX5O4e0zp0KlfZw==
+  version "7.0.2"
+  resolved "https://registry.yarnpkg.com/cacheable-request/-/cacheable-request-7.0.2.tgz#ea0d0b889364a25854757301ca12b2da77f91d27"
+  integrity sha512-pouW8/FmiPQbuGpkXQ9BAPv/Mo5xDGANgSNXzTzJ8DrKGuXOssM4wIQRjfanNRh3Yu5cfYPvcorqbhg2KIJtew==
   dependencies:
     clone-response "^1.0.2"
     get-stream "^5.1.0"
     http-cache-semantics "^4.0.0"
     keyv "^4.0.0"
     lowercase-keys "^2.0.0"
-    normalize-url "^4.1.0"
+    normalize-url "^6.0.1"
     responselike "^2.0.0"
 
 callsites@3.1.0, callsites@^3.1.0:
@@ -991,10 +991,10 @@ normalize-url@5.3.0:
   resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-5.3.0.tgz#8959b3cdaa295b61592c1f245dded34b117618dd"
   integrity sha512-9/nOVLYYe/dO/eJeQUNaGUF4m4Z5E7cb9oNTKabH+bNf19mqj60txTcveQxL0GlcWLXCxkOu2/LwL8oW0idIDA==
 
-normalize-url@^4.1.0:
-  version "4.5.0"
-  resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-4.5.0.tgz#453354087e6ca96957bd8f5baf753f5982142129"
-  integrity sha512-2s47yzUxdexf1OhyRi4Em83iQk0aPvwTddtFz4hnSSw9dCEsLEGf6SwIO8ss/19S9iBb5sJaOuTvTGDeZI00BQ==
+normalize-url@^6.0.1:
+  version "6.0.1"
+  resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-6.0.1.tgz#a4f27f58cf8c7b287b440b8a8201f42d0b00d256"
+  integrity sha512-VU4pzAuh7Kip71XEmO9aNREYAdMHFGTVj/i+CaTImS8x0i1d3jUZkXhqluy/PRgjPLMgsLQulYY3PJ/aSbSjpQ==
 
 npm-run-path@^4.0.1:
   version "4.0.1"
@@ -1109,9 +1109,9 @@ path-type@^4.0.0:
   integrity sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==
 
 picomatch@^2.0.4, picomatch@^2.2.1, picomatch@^2.2.3:
-  version "2.2.3"
-  resolved "https://registry.yarnpkg.com/picomatch/-/picomatch-2.2.3.tgz#465547f359ccc206d3c48e46a1bcb89bf7ee619d"
-  integrity sha512-KpELjfwcCDUb9PeigTs2mBJzXUPzAuP2oPcA989He8Rte0+YUAjw1JVedDhuTKPkHjSYzMN3npC9luThGYEKdg==
+  version "2.3.0"
+  resolved "https://registry.yarnpkg.com/picomatch/-/picomatch-2.3.0.tgz#f1f061de8f6a4bf022892e2d128234fb98302972"
+  integrity sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw==
 
 pify@5.0.0:
   version "5.0.0"

commit 1ab4d6bad4b468903b51373798d703a29eb35a2f
Author: nevercode-kevin <68225534+nevercode-kevin@users.noreply.github.com>
Date:   Mon Jun 14 11:37:20 2021 +0200

    Add Knowledge Base entry for video resources (#384)
    
    * Add KB entry for video resources
    
    * remove superfluous word

diff --git a/content/knowledge-base/video-resources.md b/content/knowledge-base/video-resources.md
new file mode 100644
index 0000000..c64296d
--- /dev/null
+++ b/content/knowledge-base/video-resources.md
@@ -0,0 +1,9 @@
+---
+title: Video resources
+description:
+weight: 8
+---
+
+A variety of video tutorials and webinars are available on the Codemagic YouTube channel.
+
+Click [here](https://www.youtube.com/channel/UC6iPpISHwCnNreb53c0eYvg) to visit our channel and don't forget to subscribe to be updated when new content is released.
\ No newline at end of file

commit e4ee807529454864e43015cb98ba52cdc1f8ee4a
Author: Priit Lätt <priit@nevercode.io>
Date:   Fri Jun 11 13:12:29 2021 +0300

    App store connect publisher documentation updates (#382)
    
    * Update App Store Connect publisher Yaml docs
    
    * Update Flutter workflow editor docs about App Store Connect publisher
    
    * Add more descriptive comment to 'submit_to_testflight' key in yaml docs
    
    * Unify formatting of boolean values
    
    * Apply suggestions from code review
    
    Copy changes - add missing articles and commas
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/publishing/publishing-to-app-store.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Add note about reusing keys
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index e5cf6a6..1f69fda 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -83,7 +83,7 @@ publishing:
     track: alpha                      # Name of the track: internal, alpha, beta, production, internal app sharing, or your custom track name
     in_app_update_priority: 3         # Priority of the release (only set if in-app updates are supported): integer in range [0, 5]
     rollout_fraction: 0.25            # Rollout fraction (set only if releasing to a fraction of users): value between (0, 1)
-    changes_not_sent_for_review: True # To be used ONLY if your app cannot be sent for review automatically *
+    changes_not_sent_for_review: true # To be used ONLY if your app cannot be sent for review automatically *
 ```
 
 {{<notebox>}}
@@ -91,7 +91,7 @@ publishing:
 
 `Changes cannot be sent for review automatically. Please set the query parameter changesNotSentForReview to true. Once committed, the changes in this edit can be sent for review from the Google Play Console UI.`
 
-If your changes are sent to review automatically, but the field is still set to `True`, you will get the next error:
+If your changes are sent to review automatically, but the field is still set to `true`, you will get the next error:
 
 `Changes are sent for review automatically. The query parameter changesNotSentForReview must not be set.`
 {{</notebox>}}
@@ -106,13 +106,19 @@ You can override the publishing track specified in the configuration file using
 
 ### App Store Connect
 
-Codemagic enables you to automatically publish your iOS or macOS app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store.
+Codemagic enables you to automatically publish your iOS or macOS app to [App Store Connect](https://appstoreconnect.apple.com/) for beta testing with [TestFlight](https://developer.apple.com/testflight/) or distributing the app to users via App Store. Codemagic uses the **App Store Connect API key** for authenticating communication with Apple's services. You can read more about generating an API key from Apple's [documentation page](https://developer.apple.com/documentation/appstoreconnectapi/creating_api_keys_for_app_store_connect_api). 
+
+Please note that
+1. for App Store Connect publishing, the provided key needs to have [App Manager permission](https://help.apple.com/app-store-connect/#/deve5f9a89d7),
+2. and in order to submit your iOS application to App Store Connect, it must be code signed with a distribution [certificate](https://developer.apple.com/support/certificates/).  
 
 ```yaml
 publishing:
   app_store_connect:                  # For iOS or macOS app
-    apple_id: name@example.com        # Email address used for login
-    password: Encrypted(...)          # App-specific password
+    api_key: Encrypted(...)           # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
+    key_id: 3MD9688D9K                # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
+    issuer_id: 21d78e2f-b8ad-...      # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
+    submit_to_testflight: true        # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight to automatically enroll your build to beta testers.  
 ```
 
 ## GitHub releases
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 66e9bb1..28dd21e 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -4,7 +4,7 @@ title: App Store Connect
 weight: 1
 ---
 
-Codemagic enables you to automatically publish your app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store. To do so, you must first set up [iOS code signing](../code-signing/ios-code-signing/) and then configure publishing to App Store Connect.
+Codemagic enables you to automatically publish your app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store. To do so, you must first set up [iOS code signing](../code-signing/ios-code-signing/) using a distribution code signing [certificate](https://developer.apple.com/support/certificates/) and then configure publishing to App Store Connect.
 
 {{<notebox>}}
 This guide only applies to workflows configured with the **Flutter workflow editor**. If your workflow is configured with **codemagic.yaml** please go to [Publishing to App Store Connect using codemagic.yaml](../publishing-yaml/distribution/#app-store-connect).
@@ -12,9 +12,9 @@ This guide only applies to workflows configured with the **Flutter workflow edit
 
 ## Requirements
 
-Codemagic needs your **Apple ID** and [**app-specific password**](https://support.apple.com/en-us/HT204397) to perform publishing to App Store Connect on your behalf. Publishing to App Store Connect requires that the app be signed with App Store **distribution certificate**.
+Codemagic needs your **[App Store Connect API key](https://developer.apple.com/documentation/appstoreconnectapi/creating_api_keys_for_app_store_connect_api)** to perform publishing to App Store Connect on your behalf. Publishing to App Store Connect requires that the app is code signed with a [distribution certificate](https://developer.apple.com/support/certificates/).
 
-In addition, the application must be **App Store ready** for build distribution, meaning that it must have all the correct icons and icon sizes, otherwise App Store Connect will tag the binary as invalid, and you will not be able to distribute it at all.
+In addition, the application must be **App Store ready** for build distribution, meaning that it must have all the correct icons and icon sizes. Otherwise, App Store Connect will tag the binary as invalid, and you will not be able to distribute it at all.
 
 It is also worth pointing out the necessity for each uploaded binary to have a **different version**, otherwise it will be refused by App Store Connect. See the [Build versioning](../building/build-versioning/) article for instructions on incrementing app version with Codemagic.
 
@@ -22,10 +22,48 @@ It is also worth pointing out the necessity for each uploaded binary to have a *
 
 ## Setting up publishing to App Store Connect on Codemagic
 
-1. Navigate to the Publish section in app settings.
+In this section we give step-by-step instructions on how to configure publishing to App Store Connect using Flutter workflow editor.
+
+### Step 1. Creating an App Store API key for Codemagic
+    
+{{<notebox>}}
+You may also reuse any of the keys you've already set up for automatic [iOS](../code-signing/ios-code-signing/#automatic-code-signing) or [macOS](../code-signing/macos-code-signing/#automatic-code-signing) code signing.
+{{</notebox>}}
+
+It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api). To do so:
+
+1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
+2. Click on the + sign to generate a new API key.
+3. Enter the name for the key and select an access level. For App Store Connect publishing the key needs to have `App Manager` permissions. Read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
+4. Click **Generate**.
+5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+
+{{<notebox >}} 
+Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in Codemagic UI.
+{{</notebox>}}
+
+### Step 2. Connecting the Apple Developer Portal integration for your team/account
+
+The Apple Developer Portal integration can be enabled in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to conveniently use the same access credentials for publishing across different apps and workflows.
+
+1. In the list of available integrations, click the **Connect** button for **Developer Portal**.
+2. In the **App Store Connect API key name**, provide a name for the key you are going to set up the integration with. This is for identifying the key in Codemagic.
+3. Enter the **Issuer ID** related to your Apple Developer account. You can find it above the table of active keys on the Keys tab of the [Users and Access](https://appstoreconnect.apple.com/access/api) page.
+4. Enter the **Key ID** of the key to be used for code signing.
+5. In the **API key** field, upload the private API key downloaded from App Store Connect.
+6. Click **Save** to finish the setup.
+
+If you work with multiple Apple Developer teams, you can add additional keys by clicking **Add another key** right after adding the first key and repeating the steps described above. You can delete existing keys or add new ones when you click **Manage keys** next to the Developer Portal integration in user or team settings.
+
+### 3. Enabling App Store Connect publishing for workflow
+
+Once the Apple Developer Portal has been enabled for the account or team the app belongs to, you can easily enable App Store Connect publishing per workflow.
+
+1. Navigate to the Publish section in app settings **App settings > Publish**.
 2. Click **App Store Connect**.
-3. Enter your **Apple ID** (the email address used for login) and your [**app-specific password**](https://support.apple.com/en-us/HT204397).
-4. Select **Enable App Store Connect publishing** at the top of the section to enable publishing.
+3. If you have several keys available, select the right key in the **App Store Connect API key** field.
+4. Mark the **Submit to TestFlight** checkbox to automatically enroll your build to beta testers.  
+5. Select **Enable App Store Connect publishing** at the top of the section to enable publishing.
 
 Once you have successfully set up publishing to App Store Connect, Codemagic will automatically distribute the app to App Store Connect every time you build the workflow. Note that you must manually submit the app to App Store in App Store Connect.
 

commit 1bdd61a3177e13f6aa2d8d72ab17e36788f0ec09
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Mon Jun 7 17:36:48 2021 +0300

    fix incorrect yaml example for ios test

diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index 3d1489d..3e718ff 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -238,12 +238,12 @@ workflows:
 
 ```bash
 - name: iOS test
-    script: |
+  script: |
     xcode-project run-tests \
         --workspace MyAwesomeApp.xcworkspace \
         --scheme MyAwesomeApp \
         --device "iPhone 11"
-    test_report: build/ios/test/*.xml
+  test_report: build/ios/test/*.xml
 ```
 
 Please check [Codemagic CLI tools documentation](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/run-tests.md#run-tests) to learn more about more optional arguments to `xcode-project run-tests`.

commit 47c2d883a4b14f5740fb7a456ebb8472b2974221
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Mon Jun 7 12:22:33 2021 +0300

    fix typo in testing.md

diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index 53602f8..3d1489d 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -107,7 +107,7 @@ yarn test
 
 In React Native, 3rd party modules are oftentimes published as **untranspiled**. Since all files inside `node_modules` are not transformed by default, Jest will not understand the code in these modules, resulting in syntax errors. To overcome this, you need to use `transformIgnorePatterns` to allow transpiling such modules.
 
-Below is a configuration for the same which needs to be specficied in `package.json`:
+Below is a configuration for the same which needs to be specified in `package.json`:
 
 ```json
 "jest": {

commit 67e83816ac98ad3d942bb38ca07d1c1e62a407bf
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Fri Jun 4 17:20:03 2021 +0200

    Minor correction in SSH keys docs (#378)
    
    We actually show the message about adding the SSH keys to the agent during the "Fetching app sources" step, not during "Preparing build machine"

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index 4ca5570..4ccb854 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -15,7 +15,7 @@ If your project requires accessing any private Git submodules or dependencies, y
     -----END OPENSSH PRIVATE KEY-----
     ```
 
-All environment variables whose name has the suffix `_SSH_KEY` will be automatically added to the SSH agent and will be ready for use during the whole build process. Check the `Preparing build machine` step in build logs to verify that the key has been successfully added to the SSH agent.
+All environment variables whose name has the suffix `_SSH_KEY` will be automatically added to the SSH agent and will be ready for use during the whole build process. Check the `Fetching app sources` step in build logs to verify that the key has been successfully added to the SSH agent.
 
 {{<notebox>}}
 Do not add an environment variable with the `_SSH_KEY` suffix if your repository was added using a different SSH key. If you do so, the repository's key will be overwritten and it won't be possible to clone the repository.

commit a2bee05fa59102efe55246d1dbd7fadb763bd8fb
Author: Taha Tesser <tessertaha@gmail.com>
Date:   Fri Jun 4 17:53:02 2021 +0300

    Update Flutter integration tests  (#379)
    
    * Update Flutter integration tests
    
    * minor fixes
    
    * update -d arguments
    
    * fix web title

diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index 7820e11..53602f8 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -31,13 +31,13 @@ scripts:
 
 ## Flutter integration tests
 
-The `flutter_driver` dependency allows you to run integration tests on a real device or emulator. Android application tests can be run on an Android emulator, iOS application tests can be run on an iOS simulator, and web application tests can be run on a web browser driver.
+The `integration_test` dependency allows you to run integration tests on a real device or emulator. Android application tests can be run on an Android emulator, iOS application tests can be run on an iOS simulator, and web application tests can be run on a web browser driver.
 
 ### Running iOS/Android application tests on a mobile simulator/emulator
 
 ```bash
 flutter emulators --launch apple_ios_simulator             # for android use: flutter emulators --launch emulator
-flutter drive --target=test_driver/my_drive_target.dart
+flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart -d iPhone  # for android use: -d emulator-5554 
 ```
 
 ### Running web application tests on a web browser driver
@@ -47,11 +47,11 @@ Chrome
 ```yaml
 scripts:
   - echo 'previous step'
-  - name: 'Flutter drive web test'
+  - name: 'Flutter integration test for web'
     script: |
       chromedriver --port=4444 &
       flutter config --enable-web
-      flutter drive --target=test_driver/button_pressing.dart -d chrome --browser-name chrome --release
+      flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart -d web-server --release --browser-name chrome
 ```
 
 Safari
@@ -59,12 +59,12 @@ Safari
 ```yaml
 scripts:
   - echo 'previous step'
-  - name: 'Flutter drive web test'
+  - name: 'Flutter integration test for web'
     script: |
       sudo safaridriver --enable
       safaridriver --port 4444 &
       flutter config --enable-web
-      flutter drive --target=test_driver/button_pressing.dart --browser-name safari --release
+      flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart -d web-server --release --browser-name safari
 ```
 
 ## React Native Unit Tests using Jest

commit 5746ff1d38454c48f989caf39d7433f55ceef6a3
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Fri Jun 4 16:02:31 2021 +0300

    fix typos (#380)
    
    * fix typos
    
    * Update yaml.md

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index d5b3881..6156fcd 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -249,7 +249,7 @@ triggering:
   tag_patterns:                 # Include or exlude watched tag labels
     - pattern: '*'
       include: true
-    - pattern: exluded-tag
+    - pattern: excluded-tag
       include: false
     - pattern: included-tag
       include: true
@@ -312,6 +312,7 @@ publishing:
     recipients:
       - name@example.com
   scripts:
+    name: Check for apk
     script: |
       apkPath=$(find build -name "*.apk" | head -1)
       if [[ -z ${apkPath} ]]
@@ -376,7 +377,7 @@ In this case, build would be skipped if there were changes only to Markdown file
 
 Note that `codemagic.yaml` is always included in the changeset by default.
 
-Both keys `includes` and `excludes` in `changeset` are *optional*. If the `includes` key is not specified, its value would defalut to `'.'`. The `excludes` key defaults to no exlusions.
+Both keys `includes` and `excludes` in `changeset` are *optional*. If the `includes` key is not specified, its value would default to `'.'`. The `excludes` key defaults to no exclusions.
 
 If you use a monorepo, each workflow could be responsible for building a part of your application. Use conditional workflow triggering and specify the path to the application in the changeset as in the example below.
 

commit bad21e366eb8bb21d7013add3d508633a0f57919
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Fri Jun 4 14:09:55 2021 +0300

    fix jumping sidebar, fix logo gradient in safari

diff --git a/assets/js/main.js b/assets/js/main.js
index 81468b5..8099b98 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -209,11 +209,6 @@ const docsMenu = $('[data-js-docs-menu]')
 const contentWrap = $('[data-js-content-wrap]')
 const searchResults = $('[data-js-search-results]')
 
-if ($(window).scrollTop() === 0) {
-    header.css('top', 0)
-    sidebar.css('top', header.innerHeight())
-}
-
 $(window).on('scroll', function () {
     const currentScrollPosition = $(window).scrollTop()
     // do not consider scrolling bounce effect as scrolling
diff --git a/layouts/partials/codemagic-logo.html b/layouts/partials/codemagic-logo.html
index 245fc69..1279e88 100644
--- a/layouts/partials/codemagic-logo.html
+++ b/layouts/partials/codemagic-logo.html
@@ -1,101 +1,170 @@
-<svg class="cm-logo" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 564.3 133" xml:space="preserve">
-	<g class="cm-logo__name">
-		<path class="letter" d="M20.7,34.9c3.1-1.6,6.5-2.4,10-2.4c3-0.1,6,0.5,8.7,1.8l4.2,3.1c1.7,1.8,4.5,2.1,6.6,0.8c1.4-0.8,2.3-2.3,2.4-3.9
+<svg
+    class="cm-logo"
+    x="0px"
+    y="0px"
+    xmlns="http://www.w3.org/2000/svg"
+    xmlns:xlink="http://www.w3.org/1999/xlink"
+    viewBox="0 0 564.3 133"
+    xml:space="preserve"
+>
+    <defs>
+        <linearGradient id="cm_logo_star" x1="60" x2="125" gradientUnits="userSpaceOnUse">
+            <stop offset="0" stop-color="#ec0c43" />
+            <stop offset="1" stop-color="#fbb03b" />
+        </linearGradient>
+    </defs>
+    <g class="cm-logo__name">
+        <path
+            class="letter"
+            d="M20.7,34.9c3.1-1.6,6.5-2.4,10-2.4c3-0.1,6,0.5,8.7,1.8l4.2,3.1c1.7,1.8,4.5,2.1,6.6,0.8c1.4-0.8,2.3-2.3,2.4-3.9
 			c0.3-1.5-0.2-3.1-1.3-4.2c-1.8-1.9-3.9-3.4-6.3-4.5c-4.3-2.4-9.2-3.6-14.2-3.4c-5.5-0.1-10.9,1.3-15.7,3.9c-4.6,2.3-8.4,6-11,10.5
 			c-2.7,4.7-4,10.1-3.9,15.5c-0.1,5.3,1.3,10.6,3.9,15.2c2.6,4.5,6.4,8.2,11,10.8c4.9,2.4,10.3,3.7,15.7,3.7c4.9,0.1,9.8-1,14.2-3.1
 			c2.3-1.3,4.4-2.9,6.3-4.7c1.1-1.1,1.6-2.7,1.3-4.2c-0.1-1.6-1-3.1-2.4-3.9c-2.1-1.2-4.8-0.9-6.6,0.8C42.4,68,41,69,39.4,69.8
 			c-2.7,1.4-5.6,2.1-8.7,2.1c-3.5,0.1-6.9-0.8-10-2.4c-2.9-1.7-5.3-4.1-6.8-7.1c-1.6-3.2-2.5-6.7-2.4-10.2c-0.1-3.6,0.7-7.2,2.4-10.5
-			C15.6,38.9,17.9,36.5,20.7,34.9z"/>
-		<path class="letter" d="M184.1,0c-3.2,0-5.8,2.6-5.8,5.8v24.9c-2.1-2.6-4.8-4.6-7.9-6c-3.5-1.6-7.2-2.4-11-2.4c-5.2-0.1-10.4,1.3-15,3.9
+			C15.6,38.9,17.9,36.5,20.7,34.9z"
+        />
+        <path
+            class="letter"
+            d="M184.1,0c-3.2,0-5.8,2.6-5.8,5.8v24.9c-2.1-2.6-4.8-4.6-7.9-6c-3.5-1.6-7.2-2.4-11-2.4c-5.2-0.1-10.4,1.3-15,3.9
 			c-4.4,2.4-8,6-10.2,10.5c-2.9,4.7-4.4,10-4.5,15.5c0.1,5.5,1.6,10.8,4.5,15.5c2.3,4.5,5.8,8.1,10.2,10.5c4.6,2.6,9.7,3.8,15,3.7
 			c4,0,7.9-0.8,11.5-2.4c3-1.6,5.6-3.8,7.9-6.3v2.6c0,3,2.5,5.5,5.5,5.5l0,0c3-0.1,5.4-2.5,5.5-5.5v-70C189.9,2.6,187.3,0,184.1,0
 			L184.1,0z M169.5,69.2c-2.7,1.8-5.9,2.7-9.2,2.6c-3.3,0-6.6-0.9-9.4-2.6c-2.7-1.7-5-4-6.6-6.8c-1.6-3.2-2.4-6.7-2.4-10.2
 			c-0.1-3.6,0.7-7.2,2.4-10.5c1.6-2.8,3.9-5.1,6.6-6.8c2.9-1.5,6.1-2.4,9.4-2.4c3.2,0,6.4,0.8,9.2,2.4c2.8,1.6,5.1,4,6.6,6.8
-			c1.7,3.2,2.6,6.8,2.6,10.5c0,3.6-0.9,7.1-2.6,10.2C174.6,65.4,172.3,67.7,169.5,69.2z"/>
-		<path class="letter" d="M240.8,26.2c-9.3-5.2-20.6-5.2-29.9,0c-4.5,2.4-8.1,6-10.5,10.5c-2.6,4.7-4,10.1-3.9,15.5c-0.1,5.3,1.3,10.6,3.9,15.2
+			c1.7,3.2,2.6,6.8,2.6,10.5c0,3.6-0.9,7.1-2.6,10.2C174.6,65.4,172.3,67.7,169.5,69.2z"
+        />
+        <path
+            class="letter"
+            d="M240.8,26.2c-9.3-5.2-20.6-5.2-29.9,0c-4.5,2.4-8.1,6-10.5,10.5c-2.6,4.7-4,10.1-3.9,15.5c-0.1,5.3,1.3,10.6,3.9,15.2
 			c2.6,4.6,6.4,8.3,11,10.8c5.2,2.4,10.8,3.7,16.5,3.7c4.5,0.1,8.9-0.8,13.1-2.4c2.3-0.9,4.4-2.1,6.3-3.7c1.1-0.8,1.8-2.1,2.1-3.4
 			c0-1.4-0.5-2.8-1.3-3.9c-1.8-1.8-4.7-2.1-6.8-0.5c-3.8,2.7-8.4,4.1-13.1,3.9c-5,0.1-9.9-1.4-13.9-4.5c-3.4-2.9-5.7-6.9-6.3-11.3h43
 			c2,0,3.7-1.6,3.7-3.7l0,0c0-5.5-1.2-10.9-3.7-15.7C248.7,32.3,245.1,28.7,240.8,26.2z M244.2,47.5H208c0.6-4.2,2.7-8.1,5.8-11
-			c3.3-2.9,7.7-4.4,12.1-4.2c4.5-0.2,8.8,1.4,12.1,4.5c3.2,2.8,5.2,6.6,5.8,10.8L244.2,47.5L244.2,47.5z"/>
-		<path class="letter" d="M333.7,22.3c-4.6,0-9.2,0.9-13.4,2.9c-3.5,1.6-6.5,4.2-8.7,7.3c-1.8-3.2-4.6-5.8-7.9-7.3c-3.7-1.9-7.9-2.9-12.1-2.9
+			c3.3-2.9,7.7-4.4,12.1-4.2c4.5-0.2,8.8,1.4,12.1,4.5c3.2,2.8,5.2,6.6,5.8,10.8L244.2,47.5L244.2,47.5z"
+        />
+        <path
+            class="letter"
+            d="M333.7,22.3c-4.6,0-9.2,0.9-13.4,2.9c-3.5,1.6-6.5,4.2-8.7,7.3c-1.8-3.2-4.6-5.8-7.9-7.3c-3.7-1.9-7.9-2.9-12.1-2.9
 			c-4.1-0.1-8.1,0.7-11.8,2.4c-2.9,1.4-5.5,3.4-7.6,5.8v-2.1c0-3-2.5-5.5-5.5-5.5c-3,0.1-5.4,2.5-5.5,5.5v47.5c0.1,3,2.5,5.4,5.5,5.5
 			h0.5c3-0.1,5.4-2.5,5.5-5.5V51.1c-0.3-4.9,1.3-9.8,4.5-13.6c3.2-3.2,7.6-5,12.1-4.7c4-0.3,7.9,1.1,10.8,3.9c2.7,3.5,4,7.9,3.7,12.3
 			v26.8c0,3,2.5,5.5,5.5,5.5h0.5c2.9-0.1,5.2-2.6,5.2-5.5V51.1c-0.3-5,1.4-9.9,4.7-13.6c3.2-3.2,7.6-5,12.1-4.7
 			c4-0.3,7.9,1.2,10.8,3.9c2.7,3.5,4,7.9,3.7,12.3v26.8c0,3,2.5,5.5,5.5,5.5l0,0h0.3c3,0,5.5-2.5,5.5-5.5l0,0V47.7
-			c0-8.4-2.1-14.7-6.6-18.9C346.3,24.4,340.1,22,333.7,22.3z"/>
-		<path class="letter" d="M389.8,22.3c-7,0.1-13.9,1.8-20.2,5c-2.4,1.4-3.2,4.4-1.8,6.8l0,0c1.2,2.3,4.1,3.2,6.4,1.9c0.1,0,0.1-0.1,0.2-0.1l4.5-1.8
+			c0-8.4-2.1-14.7-6.6-18.9C346.3,24.4,340.1,22,333.7,22.3z"
+        />
+        <path
+            class="letter"
+            d="M389.8,22.3c-7,0.1-13.9,1.8-20.2,5c-2.4,1.4-3.2,4.4-1.8,6.8l0,0c1.2,2.3,4.1,3.2,6.4,1.9c0.1,0,0.1-0.1,0.2-0.1l4.5-1.8
 			c3.2-1.1,6.6-1.8,10-1.8c4-0.3,8,1.1,11,3.7c2.7,2.5,4,6.1,3.7,9.7v1.6h-15.7c-8.1,0-14.2,1.6-17.8,4.7c-3.8,3-6,7.7-5.8,12.6
 			c-0.2,4.9,2,9.7,6,12.6c4.5,3.3,10.1,5,15.7,4.7c4,0.2,7.9-0.6,11.5-2.1c2.6-1,4.9-2.8,6.6-5v1c0,3,2.5,5.5,5.5,5.5
 			s5.5-2.5,5.5-5.5l0,0V46.2c0.4-6.6-2-13.1-6.6-17.8C404.2,24.4,397.9,22.3,389.8,22.3z M403.4,55.9v7.3c-1,3.1-3.2,5.6-6,7.1
-			c-3,1.9-6.5,2.8-10,2.6c-3.1,0.2-6.3-0.7-8.9-2.4c-2.1-1.5-3.3-4-3.1-6.6c0-5.5,4.2-8.1,12.6-8.1L403.4,55.9L403.4,55.9z"/>
-		<path class="letter" d="M476.1,22.8c-2.9,0.1-5.2,2.6-5.2,5.5V31c-2.2-2.7-5.1-4.8-8.4-6c-3.6-1.8-7.5-2.7-11.5-2.6c-5.1,0-10.2,1.3-14.7,3.7
+			c-3,1.9-6.5,2.8-10,2.6c-3.1,0.2-6.3-0.7-8.9-2.4c-2.1-1.5-3.3-4-3.1-6.6c0-5.5,4.2-8.1,12.6-8.1L403.4,55.9L403.4,55.9z"
+        />
+        <path
+            class="letter"
+            d="M476.1,22.8c-2.9,0.1-5.2,2.6-5.2,5.5V31c-2.2-2.7-5.1-4.8-8.4-6c-3.6-1.8-7.5-2.7-11.5-2.6c-5.1,0-10.2,1.3-14.7,3.7
 			c-4.3,2.3-8,5.8-10.5,10c-2.5,4.5-3.7,9.6-3.7,14.7c-0.1,5.1,1.2,10.2,3.7,14.7c2.6,4.2,6.2,7.6,10.5,10c4.5,2.5,9.6,3.8,14.7,3.7
 			c3.9,0,7.7-0.8,11.3-2.4c3.1-1.3,5.8-3.3,8.1-5.8v3c0,6.3-1.6,11.3-4.7,14.2s-8.1,4.7-14.7,4.7c-4,0-8-0.7-11.8-2.1
 			c-1.8-0.5-3.4-1.2-5-2.1c-2.5-1.4-5.6-0.6-7.1,1.8c-1.6,2.4-0.9,5.7,1.5,7.3c0,0,0.1,0,0.1,0.1c2.2,1.2,4.6,2.2,7.1,2.9
 			c5.1,1.4,10.4,2.1,15.7,2.1c10,0,17.6-2.4,22.6-7.3c5-5,7.6-12.3,7.6-22.6V28.3C481.6,25.3,479.1,22.8,476.1,22.8L476.1,22.8z
 			M470.3,50.6c0,3.3-0.8,6.5-2.4,9.4c-1.6,2.7-3.8,4.8-6.6,6.3c-2.8,1.7-6.1,2.5-9.4,2.4c-3.3,0.1-6.6-0.7-9.4-2.4
 			c-2.7-1.5-5-3.6-6.6-6.3c-1.6-2.9-2.4-6.1-2.4-9.4c-0.3-4.9,1.5-9.7,5-13.1c3.6-3.4,8.4-5.2,13.4-5c4.9-0.2,9.6,1.6,13.1,5
-			C468.7,40.9,470.6,45.7,470.3,50.6z"/>
-		<path class="letter" d="M497.6,22.8c-3.2,0-5.8,2.6-5.8,5.8v47c0,3.2,2.6,5.8,5.8,5.8c3,0,5.5-2.5,5.5-5.5c0-0.1,0-0.2,0-0.3v-47
-			c0.1-3-2.2-5.6-5.2-5.8C497.8,22.8,497.7,22.8,497.6,22.8z"/>
-		<path class="letter" d="M561.9,65.8c-2.1-1.2-4.8-0.9-6.6,0.8c-1.2,1.3-2.6,2.3-4.2,3.1c-2.7,1.4-5.6,2.1-8.7,2.1c-3.5,0.1-6.9-0.8-10-2.4
+			C468.7,40.9,470.6,45.7,470.3,50.6z"
+        />
+        <path
+            class="letter"
+            d="M497.6,22.8c-3.2,0-5.8,2.6-5.8,5.8v47c0,3.2,2.6,5.8,5.8,5.8c3,0,5.5-2.5,5.5-5.5c0-0.1,0-0.2,0-0.3v-47
+			c0.1-3-2.2-5.6-5.2-5.8C497.8,22.8,497.7,22.8,497.6,22.8z"
+        />
+        <path
+            class="letter"
+            d="M561.9,65.8c-2.1-1.2-4.8-0.9-6.6,0.8c-1.2,1.3-2.6,2.3-4.2,3.1c-2.7,1.4-5.6,2.1-8.7,2.1c-3.5,0.1-6.9-0.8-10-2.4
 			c-2.9-1.7-5.3-4.1-6.8-7.1c-1.6-3.2-2.5-6.7-2.4-10.2c-0.1-3.6,0.7-7.2,2.4-10.5c1.6-2.8,4-5.2,6.8-6.8c3.1-1.6,6.5-2.4,10-2.4
 			c3-0.1,6,0.5,8.7,1.8l4.2,3.1c1.7,1.8,4.5,2.1,6.6,0.8c1.4-0.8,2.3-2.3,2.4-3.9c0.3-1.5-0.2-3.1-1.3-4.2c-1.8-1.9-3.9-3.4-6.3-4.5
 			c-4.3-2.4-9.2-3.6-14.2-3.4c-5.5-0.1-10.9,1.3-15.7,3.9c-4.6,2.3-8.4,6-11,10.5c-2.7,4.7-4,10.1-3.9,15.5
 			c-0.1,5.3,1.3,10.6,3.9,15.2c2.6,4.5,6.4,8.2,11,10.8c4.9,2.4,10.3,3.7,15.7,3.7c4.9,0.1,9.8-1,14.2-3.1c2.3-1.3,4.4-2.9,6.3-4.7
-			c1.1-1.1,1.6-2.7,1.3-4.2C564.1,68.2,563.2,66.7,561.9,65.8z"/>
-	</g>
-	<g class="cm-logo__star">
-		<path class="base" d="M122.2,46.4l-17.3-8.7c-0.3,0-0.5-0.2-0.5-0.5l0,0l-8.7-17.3c-1-2.2-3.1-3.5-5.5-3.4c-2.3,0-4.5,1.3-5.5,3.4
+			c1.1-1.1,1.6-2.7,1.3-4.2C564.1,68.2,563.2,66.7,561.9,65.8z"
+        />
+    </g>
+    <g class="cm-logo__star">
+        <path
+            class="base"
+            d="M122.2,46.4l-17.3-8.7c-0.3,0-0.5-0.2-0.5-0.5l0,0l-8.7-17.3c-1-2.2-3.1-3.5-5.5-3.4c-2.3,0-4.5,1.3-5.5,3.4
 			L76,37.5h-0.3l-17.6,8.7c-3,1.7-4.1,5.5-2.5,8.6c0.6,1,1.4,1.9,2.5,2.5L75.7,66h0.5l8.4,18.1c1.1,2.1,3.2,3.4,5.5,3.4
 			s4.5-1.3,5.5-3.4l8.7-17.6h0.5l17.3-8.7c3.1-1.5,4.4-5.3,2.8-8.4C124.5,48,123.5,47,122.2,46.4z M109.4,47.5l-8.1,7.1
 			c-1.5,1.5-2.6,3.4-3.1,5.5L96,70.6c0,0.5-1,0.8-1.3,0.3L87.6,63c-1.4-1.7-3.4-2.8-5.5-3.1l-10.5-2.1c-0.5-0.3-0.7-0.9-0.4-1.4
 			l0.1-0.1l7.9-6.8c1.7-1.4,2.8-3.3,3.1-5.5l2.1-10.5c0.3-0.5,0.9-0.7,1.4-0.4l0.1,0.1l6.8,7.9c1.4,1.6,3.4,2.7,5.5,3.1l10.5,2.1
-			c0.4,0,0.8,0.4,0.7,0.8C109.6,47.2,109.5,47.3,109.4,47.5z"/>
-		<path class="gradient" d="M122.2,46.4l-17.3-8.7c-0.3,0-0.5-0.2-0.5-0.5l0,0l-8.7-17.3c-1-2.2-3.1-3.5-5.5-3.4c-2.3,0-4.5,1.3-5.5,3.4
+			c0.4,0,0.8,0.4,0.7,0.8C109.6,47.2,109.5,47.3,109.4,47.5z"
+        />
+        <path
+            class="gradient"
+            d="M122.2,46.4l-17.3-8.7c-0.3,0-0.5-0.2-0.5-0.5l0,0l-8.7-17.3c-1-2.2-3.1-3.5-5.5-3.4c-2.3,0-4.5,1.3-5.5,3.4
 			L76,37.5h-0.3l-17.6,8.7c-3,1.7-4.1,5.5-2.5,8.6c0.6,1,1.4,1.9,2.5,2.5L75.7,66h0.5l8.4,18.1c1.1,2.1,3.2,3.4,5.5,3.4
 			s4.5-1.3,5.5-3.4l8.7-17.6h0.5l17.3-8.7c3.1-1.5,4.4-5.3,2.8-8.4C124.5,48,123.5,47,122.2,46.4z M109.4,47.5l-8.1,7.1
 			c-1.5,1.5-2.6,3.4-3.1,5.5L96,70.6c0,0.5-1,0.8-1.3,0.3L87.6,63c-1.4-1.7-3.4-2.8-5.5-3.1l-10.5-2.1c-0.5-0.3-0.7-0.9-0.4-1.4
 			l0.1-0.1l7.9-6.8c1.7-1.4,2.8-3.3,3.1-5.5l2.1-10.5c0.3-0.5,0.9-0.7,1.4-0.4l0.1,0.1l6.8,7.9c1.4,1.6,3.4,2.7,5.5,3.1l10.5,2.1
-			c0.4,0,0.8,0.4,0.7,0.8C109.6,47.2,109.5,47.3,109.4,47.5z"/>
-	</g>
-	<g class="cm-logo__slogan">
-		<path class="letter" d="M28.1,106.4c1.4,0.9,2.5,2.2,3.3,3.8c0.8,1.6,1.2,3.4,1.2,5.5c0,2-0.4,3.9-1.2,5.5s-1.9,2.9-3.3,3.8s-3,1.4-4.8,1.4
+			c0.4,0,0.8,0.4,0.7,0.8C109.6,47.2,109.5,47.3,109.4,47.5z"
+        />
+    </g>
+    <g class="cm-logo__slogan">
+        <path
+            class="letter"
+            d="M28.1,106.4c1.4,0.9,2.5,2.2,3.3,3.8c0.8,1.6,1.2,3.4,1.2,5.5c0,2-0.4,3.9-1.2,5.5s-1.9,2.9-3.3,3.8s-3,1.4-4.8,1.4
 			c-1.5,0-2.8-0.3-4.1-1c-1.2-0.6-2.2-1.6-3-2.7v3.2h-4.8V98.4h4.8v10.4c0.8-1.2,1.8-2.1,3-2.7s2.6-1,4.1-1
 			C25.1,105.1,26.7,105.5,28.1,106.4z M26.2,120.4c1.1-1.2,1.7-2.8,1.7-4.7c0-1.9-0.6-3.5-1.7-4.7s-2.5-1.8-4.2-1.8
-			s-3.1,0.6-4.1,1.8c-1.1,1.2-1.6,2.8-1.6,4.7c0,1.9,0.5,3.5,1.6,4.7s2.5,1.8,4.1,1.8C23.7,122.3,25.1,121.7,26.2,120.4z"/>
-		<path class="letter" d="M36.2,132.7c-0.8-0.2-1.5-0.4-2.1-0.8l1-3.5c0.9,0.5,1.8,0.7,2.6,0.7c1.2,0,2.1-0.4,2.6-1.3l0.9-1.8l-8.6-20.5h5.1
-			l5.9,15.2l5.6-15.2h5l-8.6,21.8c-1.5,3.7-3.8,5.6-7,5.7C37.8,133,37,132.9,36.2,132.7z"/>
-		<path class="letter" d="M69.6,98.9h4.9l14.3,19v-19h4.9v27h-4.9l-14.3-19v19h-4.9V98.9z"/>
-		<path class="letter" d="M110.5,121.5c1-0.4,1.8-0.9,2.4-1.5l3,3.1c-0.9,0.9-2.1,1.7-3.7,2.3c-1.6,0.6-3.1,0.9-4.6,0.9c-1.9,0-3.7-0.5-5.3-1.4
+			s-3.1,0.6-4.1,1.8c-1.1,1.2-1.6,2.8-1.6,4.7c0,1.9,0.5,3.5,1.6,4.7s2.5,1.8,4.1,1.8C23.7,122.3,25.1,121.7,26.2,120.4z"
+        />
+        <path
+            class="letter"
+            d="M36.2,132.7c-0.8-0.2-1.5-0.4-2.1-0.8l1-3.5c0.9,0.5,1.8,0.7,2.6,0.7c1.2,0,2.1-0.4,2.6-1.3l0.9-1.8l-8.6-20.5h5.1
+			l5.9,15.2l5.6-15.2h5l-8.6,21.8c-1.5,3.7-3.8,5.6-7,5.7C37.8,133,37,132.9,36.2,132.7z"
+        />
+        <path class="letter" d="M69.6,98.9h4.9l14.3,19v-19h4.9v27h-4.9l-14.3-19v19h-4.9V98.9z" />
+        <path
+            class="letter"
+            d="M110.5,121.5c1-0.4,1.8-0.9,2.4-1.5l3,3.1c-0.9,0.9-2.1,1.7-3.7,2.3c-1.6,0.6-3.1,0.9-4.6,0.9c-1.9,0-3.7-0.5-5.3-1.4
 			c-1.6-0.9-2.9-2.2-3.9-3.8c-1-1.6-1.4-3.5-1.4-5.5s0.5-3.8,1.4-5.4s2.2-2.9,3.7-3.8c1.6-0.9,3.3-1.4,5.2-1.4
 			c2.1,0,3.9,0.5,5.4,1.5s2.6,2.4,3.4,4.3c0.8,1.8,1.2,4,1.2,6.5H102c0.3,1.4,0.9,2.6,1.9,3.4c1,0.9,2.2,1.3,3.7,1.3
 			C108.5,122.1,109.5,121.9,110.5,121.5z M104,110.5c-1,0.8-1.7,1.8-2,3.2h10.7c-0.3-1.3-0.9-2.4-1.8-3.2c-0.9-0.8-2-1.2-3.4-1.2
-			C106.2,109.3,105.1,109.7,104,110.5z"/>
-		<path class="letter" d="M117.7,105.6h5.1l5.9,14.8l5.8-14.8h5.1l-8.6,20.3h-4.5L117.7,105.6z"/>
-		<path class="letter" d="M154.6,121.5c1-0.4,1.8-0.9,2.4-1.5l3,3.1c-0.9,0.9-2.1,1.7-3.7,2.3c-1.6,0.6-3.1,0.9-4.6,0.9c-1.9,0-3.7-0.5-5.3-1.4
+			C106.2,109.3,105.1,109.7,104,110.5z"
+        />
+        <path class="letter" d="M117.7,105.6h5.1l5.9,14.8l5.8-14.8h5.1l-8.6,20.3h-4.5L117.7,105.6z" />
+        <path
+            class="letter"
+            d="M154.6,121.5c1-0.4,1.8-0.9,2.4-1.5l3,3.1c-0.9,0.9-2.1,1.7-3.7,2.3c-1.6,0.6-3.1,0.9-4.6,0.9c-1.9,0-3.7-0.5-5.3-1.4
 			s-2.9-2.2-3.9-3.8c-1-1.6-1.4-3.5-1.4-5.5s0.5-3.8,1.4-5.4s2.2-2.9,3.7-3.8c1.6-0.9,3.3-1.4,5.2-1.4c2.1,0,3.9,0.5,5.4,1.5
 			s2.6,2.4,3.4,4.3c0.8,1.8,1.2,4,1.2,6.5H146c0.3,1.4,0.9,2.6,1.9,3.4c1,0.9,2.2,1.3,3.7,1.3C152.6,122.1,153.6,121.9,154.6,121.5z
 				M148.1,110.5c-1,0.8-1.7,1.8-2,3.2h10.7c-0.3-1.3-0.9-2.4-1.8-3.2c-0.9-0.8-2-1.2-3.4-1.2C150.3,109.3,149.1,109.7,148.1,110.5z"
-			/>
-		<path class="letter" d="M172.6,106.3c1.3-0.8,2.7-1.2,4.4-1.2v4.1c-2.2,0-3.9,0.6-5.3,1.8c-1.3,1.2-2,2.7-2,4.7V126h-4.8v-20.3h4.8v3.9
-			C170.3,108.1,171.3,107.1,172.6,106.3z"/>
-		<path class="letter" d="M183.6,124.9c-1.7-1-3-2.3-4-3.9s-1.5-3.4-1.5-5.3s0.5-3.6,1.5-5.3s2.3-2.9,4-3.9s3.5-1.5,5.4-1.5c1.5,0,2.9,0.3,4.2,0.9
+        />
+        <path
+            class="letter"
+            d="M172.6,106.3c1.3-0.8,2.7-1.2,4.4-1.2v4.1c-2.2,0-3.9,0.6-5.3,1.8c-1.3,1.2-2,2.7-2,4.7V126h-4.8v-20.3h4.8v3.9
+			C170.3,108.1,171.3,107.1,172.6,106.3z"
+        />
+        <path
+            class="letter"
+            d="M183.6,124.9c-1.7-1-3-2.3-4-3.9s-1.5-3.4-1.5-5.3s0.5-3.6,1.5-5.3s2.3-2.9,4-3.9s3.5-1.5,5.4-1.5c1.5,0,2.9,0.3,4.2,0.9
 			s2.5,1.4,3.5,2.4l-3.2,2.8c-0.6-0.6-1.2-1.1-2-1.5s-1.6-0.6-2.5-0.6c-1.1,0-2.1,0.3-3.1,0.9c-0.9,0.6-1.7,1.4-2.2,2.4
 			c-0.6,1-0.8,2.1-0.8,3.2c0,1.2,0.3,2.3,0.8,3.3c0.6,1,1.3,1.8,2.2,2.4s2,0.9,3.1,0.9c0.9,0,1.7-0.2,2.5-0.6s1.5-0.9,2.1-1.6
-			l3.2,2.8c-1,1.1-2.2,1.9-3.5,2.5s-2.8,0.9-4.4,0.9C187.1,126.4,185.3,125.9,183.6,124.9z"/>
-		<path class="letter" d="M204.6,124.9c-1.7-1-3-2.3-4-3.9s-1.5-3.4-1.5-5.3s0.5-3.6,1.5-5.3s2.3-2.9,4-3.9s3.5-1.5,5.4-1.5s3.7,0.5,5.4,1.5
+			l3.2,2.8c-1,1.1-2.2,1.9-3.5,2.5s-2.8,0.9-4.4,0.9C187.1,126.4,185.3,125.9,183.6,124.9z"
+        />
+        <path
+            class="letter"
+            d="M204.6,124.9c-1.7-1-3-2.3-4-3.9s-1.5-3.4-1.5-5.3s0.5-3.6,1.5-5.3s2.3-2.9,4-3.9s3.5-1.5,5.4-1.5s3.7,0.5,5.4,1.5
 			s3,2.3,4,3.9s1.5,3.4,1.5,5.3s-0.5,3.7-1.5,5.3c-1,1.6-2.3,2.9-4,3.9s-3.5,1.5-5.4,1.5S206.3,125.9,204.6,124.9z M213.1,121.4
 			c0.9-0.6,1.7-1.4,2.3-2.4s0.8-2.1,0.8-3.3c0-1.2-0.3-2.2-0.8-3.2c-0.6-1-1.3-1.8-2.3-2.4c-0.9-0.6-2-0.9-3.1-0.9s-2.1,0.3-3.1,0.9
-			s-1.7,1.4-2.3,2.4s-0.8,2.1-0.8,3.2c0,1.2,0.3,2.3,0.8,3.3c0.6,1,1.3,1.8,2.3,2.4s2,0.9,3.1,0.9S212.2,122,213.1,121.4z"/>
-		<path class="letter" d="M245.4,98.4v27.5h-4.8v-3.1c-0.8,1.2-1.8,2-3,2.7c-1.2,0.6-2.5,0.9-4,0.9c-1.8,0-3.4-0.5-4.8-1.4c-1.4-0.9-2.5-2.2-3.3-3.8
+			s-1.7,1.4-2.3,2.4s-0.8,2.1-0.8,3.2c0,1.2,0.3,2.3,0.8,3.3c0.6,1,1.3,1.8,2.3,2.4s2,0.9,3.1,0.9S212.2,122,213.1,121.4z"
+        />
+        <path
+            class="letter"
+            d="M245.4,98.4v27.5h-4.8v-3.1c-0.8,1.2-1.8,2-3,2.7c-1.2,0.6-2.5,0.9-4,0.9c-1.8,0-3.4-0.5-4.8-1.4c-1.4-0.9-2.5-2.2-3.3-3.8
 			c-0.8-1.6-1.2-3.5-1.2-5.5s0.4-3.9,1.2-5.5s1.9-2.9,3.3-3.8c1.4-0.9,3-1.4,4.8-1.4c1.5,0,2.8,0.3,4,0.9s2.2,1.5,3,2.7V98.4H245.4z
 			M239,120.4c1.1-1.2,1.6-2.8,1.6-4.7c0-1.9-0.5-3.5-1.6-4.7s-2.5-1.8-4.1-1.8c-1.7,0-3.1,0.6-4.2,1.8c-1.1,1.2-1.7,2.8-1.7,4.7
-			c0,1.9,0.6,3.5,1.7,4.7s2.5,1.8,4.2,1.8C236.5,122.3,237.9,121.7,239,120.4z"/>
-		<path class="letter" d="M263.2,121.5c1-0.4,1.8-0.9,2.4-1.5l3,3.1c-0.9,0.9-2.1,1.7-3.7,2.3c-1.6,0.6-3.1,0.9-4.6,0.9c-1.9,0-3.7-0.5-5.3-1.4
+			c0,1.9,0.6,3.5,1.7,4.7s2.5,1.8,4.2,1.8C236.5,122.3,237.9,121.7,239,120.4z"
+        />
+        <path
+            class="letter"
+            d="M263.2,121.5c1-0.4,1.8-0.9,2.4-1.5l3,3.1c-0.9,0.9-2.1,1.7-3.7,2.3c-1.6,0.6-3.1,0.9-4.6,0.9c-1.9,0-3.7-0.5-5.3-1.4
 			c-1.6-0.9-2.9-2.2-3.9-3.8c-1-1.6-1.4-3.5-1.4-5.5s0.5-3.8,1.4-5.4s2.2-2.9,3.7-3.8c1.6-0.9,3.3-1.4,5.2-1.4c2.1,0,3.9,0.5,5.4,1.5
 			s2.6,2.4,3.4,4.3c0.8,1.8,1.2,4,1.2,6.5h-15.3c0.3,1.4,0.9,2.6,1.9,3.4c1,0.9,2.2,1.3,3.7,1.3C261.2,122.1,262.2,121.9,263.2,121.5
 			z M256.7,110.5c-1,0.8-1.7,1.8-2,3.2h10.7c-0.3-1.3-0.9-2.4-1.8-3.2c-0.9-0.8-2-1.2-3.4-1.2C258.9,109.3,257.7,109.7,256.7,110.5z"
-			/>
-	</g>
-</svg>
\ No newline at end of file
+        />
+    </g>
+</svg>

commit 06fb8868b6f47d60f5b0ea89bbc2b6e3253b7d7a
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Fri Jun 4 12:54:40 2021 +0300

    change header and sidebar layout - emphasise search (#377)
    
    * prettify, remove links, emphasise search
    
    * minor style edit
    
    * delete unused icons
    
    * add links to landing and blog
    
    * fix search input font, show clear search icon when input files has a value
    
    * edit auth buttons position
    
    * fix external links style
    
    * fix padding-bottom not working in firefox
    
    * fix header position

diff --git a/assets/js/main.js b/assets/js/main.js
index b52fd99..81468b5 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -1,219 +1,205 @@
-const desktopScreenWidth = 1001;
+const desktopScreenWidth = 1001
 
 $('[data-js-docs-menu-item].open').parents('[data-js-docs-menu-item]').addClass('open')
 
 // Open - open only current category
 // Close - close current and all descendant categories
-$('[data-js-category-name]').on('click', function() {
-  const parent = $(this).parent()
-  if (parent.hasClass('open')) {
-    parent.find('[data-js-category-posts]').each(function(_,item) {
-      $(item).slideUp(150, function complete() {
-        $(item).parent().removeClass('open')
-      })
-    })
-  } else {
-    $(this).siblings('[data-js-category-posts]').slideDown(150, function complete() {
-      parent.addClass('open')
-    })
-  }
+$('[data-js-category-name]').on('click', function () {
+    const parent = $(this).parent()
+    if (parent.hasClass('open')) {
+        parent.find('[data-js-category-posts]').each(function (_, item) {
+            $(item).slideUp(150, function complete() {
+                $(item).parent().removeClass('open')
+            })
+        })
+    } else {
+        $(this)
+            .siblings('[data-js-category-posts]')
+            .slideDown(150, function complete() {
+                parent.addClass('open')
+            })
+    }
 })
 
 // Menu toggle
-$('[data-js-docs-menu-toggle]').on('click', function() {
-  $('[data-js-docs-menu-toggle-icon]').toggleClass('open')
-  $('[data-js-docs-menu]').toggleClass('open')
+$('[data-js-docs-menu-toggle]').on('click', function () {
+    $('[data-js-docs-menu-toggle]').toggleClass('open')
+    $('[data-js-docs-menu]').toggleClass('open')
 })
 
 // Create permalinks
 function createTableOfContents() {
-  var tocLinks = $('#TableOfContents a')
-  tocLinks.each(function() {
-    var $link = $(this)
-    var hrefAttr = $link.attr('href')
-    var $heading = $(hrefAttr)
-    var href = $link.prop('href')
-    $heading.append(
-      '<i class="ctc fas fa-link" data-target-link="' +
-        href +
-        '" title="Copy link to section to clipboard"></i>'
-    )
-  })
-  hashScroll()
+    var tocLinks = $('#TableOfContents a')
+    tocLinks.each(function () {
+        var $link = $(this)
+        var hrefAttr = $link.attr('href')
+        var $heading = $(hrefAttr)
+        var href = $link.prop('href')
+        $heading.append(
+            '<i class="ctc fas fa-link" data-target-link="' + href + '" title="Copy link to section to clipboard"></i>',
+        )
+    })
+    hashScroll()
 }
 
 function scrollToAnchor(target) {
-  const headerHeight = $('[data-js-header]').innerHeight()
-  const targetMarginTop = 40
-  let offset = headerHeight + targetMarginTop
-  if (window.innerWidth < desktopScreenWidth) {
-    offset += $('[data-js-sidebar]').innerHeight()
-  }
-  $('html, body').animate({ scrollTop: target.offset().top - offset }, 300)
+    const headerHeight = $('[data-js-header]').innerHeight()
+    const targetMarginTop = 40
+    let offset = headerHeight + targetMarginTop
+    if (window.innerWidth < desktopScreenWidth) {
+        offset += $('[data-js-sidebar]').innerHeight()
+    }
+    $('html, body').animate({ scrollTop: target.offset().top - offset }, 300)
 }
 
 // Scroll to heading from url
 function hashScroll() {
-  if (window.location.hash) {
-    const target = $(window.location.hash)
-    scrollToAnchor(target)
-    history.pushState(
-      '',
-      document.title,
-      window.location.pathname + window.location.search
-    )
-  }
+    if (window.location.hash) {
+        const target = $(window.location.hash)
+        scrollToAnchor(target)
+        history.pushState('', document.title, window.location.pathname + window.location.search)
+    }
 }
 // Scroll to selected heading on click
-$(document).on('click', 'a[href^="#"]', function(event) {
-  event.preventDefault()
-  const target = $($.attr(this, 'href'))
-  scrollToAnchor(target)
+$(document).on('click', 'a[href^="#"]', function (event) {
+    event.preventDefault()
+    const target = $($.attr(this, 'href'))
+    scrollToAnchor(target)
 })
 
 // Copy section link to clipboard
-$('h1, h2, h3, h4, h5, h6').on('click', 'i.ctc', function() {
-  var link = $(this).attr('data-target-link')
-  var $temp = $('<input>')
-  $('body').append($temp)
-  $temp.val(link).select()
-  document.execCommand('copy')
-  $temp.remove()
-  alert('Copied to clipboard')
+$('h1, h2, h3, h4, h5, h6').on('click', 'i.ctc', function () {
+    var link = $(this).attr('data-target-link')
+    var $temp = $('<input>')
+    $('body').append($temp)
+    $temp.val(link).select()
+    document.execCommand('copy')
+    $temp.remove()
+    alert('Copied to clipboard')
 })
 
-$(document).ready(function() {
-  addMenuListeners()
-  createTableOfContents()
-  // Wrap tables for responsiveness
-  var contentTable = $('#main-content main table')
-  contentTable.each(function() {
-    $(this).wrap('<div class="table-wrap"></div>')
-  })
-  elementsTopPosition()
+$(document).ready(function () {
+    createTableOfContents()
+    // Wrap tables for responsiveness
+    var contentTable = $('#main-content main table')
+    contentTable.each(function () {
+        $(this).wrap('<div class="table-wrap"></div>')
+    })
+    elementsTopPosition()
 })
 
-$(document).ready(function() {
-
-  window.userRequest = fetchUser()
-
-  // Fetch user
-  async function fetchUser() {
-      const url = '{{ site.Param "backendURL" }}/user'
-      const timeout = 3000
-
-      const controller = new AbortController()
-      const signal = controller.signal
-
-      setTimeout(() => controller.abort(), timeout)
-
-      try {
-          const response = await fetch(url, {
-              mode: 'cors',
-              credentials: 'include',
-              headers: { Accept: 'application/json' },
-              signal,
-          })
-          try {
-              return { response, json: await response.json() }
-          } catch (error) {
-              return { response, error }
-          }
-      } catch (error) {
-          return { error }
-      }
-  }
-
-  // Menu toggle
-  $('[data-js-header-menu-toggle]').on('click', function() {
-      $(this).toggleClass('open')
-      const visible = $('[data-js-header-menu-wrap]').is(':visible')
-      if (visible) {
-          $('[data-js-header-menu-wrap]').slideUp(200)
-      } else {
-          $('[data-js-header-menu-wrap]').slideDown(200)
-      }
-  })
-
-  // Open extenral links in new tab
-  $('a').each(function() {
-      var hostName = window.location.hostname
-      var href = $(this).attr('href')
-      if (href && !href.includes(hostName) && !href.startsWith('/') && !href.startsWith('#')) {
-          $(this).attr('target', '_blank')
-      }
-  })
-
-  authenticateUser()
-
-  async function authenticateUser() {
-    const { response, json } = await window.userRequest
-    window.auth = { loaded: true }
-
-    if (response && response.ok && json && json.user) {
-        Object.assign(window.auth, json.user.user)
-        if (json.user.ok) {
-            window.loggedIn = true
-            window.auth._id = json.user._id
-            $('[data-js-header-auth-user]').addClass('transition-in')
-            $('[data-js-header-user-avatar]').html('<img src="' + auth.avatarUrl + '" alt=""/>')
+$(document).ready(function () {
+    window.userRequest = fetchUser()
+
+    // Fetch user
+    async function fetchUser() {
+        const url = '{{ site.Param "backendURL" }}/user'
+        const timeout = 3000
+
+        const controller = new AbortController()
+        const signal = controller.signal
+
+        setTimeout(() => controller.abort(), timeout)
+
+        try {
+            const response = await fetch(url, {
+                mode: 'cors',
+                credentials: 'include',
+                headers: { Accept: 'application/json' },
+                signal,
+            })
+            try {
+                return { response, json: await response.json() }
+            } catch (error) {
+                return { response, error }
+            }
+        } catch (error) {
+            return { error }
+        }
+    }
+
+    // Menu toggle
+    $('[data-js-header-menu-toggle]').on('click', function () {
+        $(this).toggleClass('open')
+        const visible = $('[data-js-header-menu-wrap]').is(':visible')
+        if (visible) {
+            $('[data-js-header-menu-wrap]').slideUp(200)
+        } else {
+            $('[data-js-header-menu-wrap]').slideDown(200)
+        }
+    })
+
+    // Open extenral links in new tab
+    $('a').each(function () {
+        var hostName = window.location.hostname
+        var href = $(this).attr('href')
+        if (href && !href.includes(hostName) && !href.startsWith('/') && !href.startsWith('#')) {
+            $(this).attr('target', '_blank')
+        }
+    })
+
+    authenticateUser()
+
+    async function authenticateUser() {
+        const { response, json } = await window.userRequest
+        window.auth = { loaded: true }
+
+        if (response && response.ok && json && json.user) {
+            Object.assign(window.auth, json.user.user)
+            if (json.user.ok) {
+                window.loggedIn = true
+                window.auth._id = json.user._id
+                $('[data-js-header-auth-user]').addClass('transition-in')
+                $('[data-js-header-user-avatar]').html('<img src="' + auth.avatarUrl + '" alt=""/>')
+            } else {
+                window.loggedIn = false
+                $('[data-js-header-auth-visitor]').addClass('transition-in')
+            }
         } else {
             window.loggedIn = false
             $('[data-js-header-auth-visitor]').addClass('transition-in')
         }
-    } else {
-        window.loggedIn = false
-        $('[data-js-header-auth-visitor]').addClass('transition-in')
-    }
-    $('[data-js-header-auth-loading]').addClass('transition-out')
-    setTimeout(function() {
-        $('[data-js-header-auth-loading-grey-line]').hide()
-    }, 1000)
-  }
-
-  $('[data-js-header-auth-logout]').on('click', userLogout)
-
-  async function userLogout() {
-    $('[data-js-header-authentication]').addClass('loading')
-    $('[data-js-header-auth-loading]')
-        .removeClass('transition-out')
-        .addClass('transition-in')
-    $('[data-js-header-auth-loading-grey-line]').show()
-    if ($(window).innerWidth() < 841) {
-        $('[data-js-header-menu-toggle]').removeClass('open')
-        $('[data-js-header-menu-wrap]').slideUp(200)
-    }
-    $('[data-js-header-menu-wrap]').slideUp(200)
-
-    const url = '{{ site.Param "backendURL" }}/logout'
-    const options = {
-        method: 'GET',
-        mode: 'cors',
-        credentials: 'include',
-        headers: { Accept: 'application/json' },
-    }
-    try {
-        await fetch(url, options)
-        $('[data-js-header-auth-user]')
-            .removeClass('transition-in')
-            .addClass('transition-out')
-        setTimeout(function() {
+        $('[data-js-header-auth-loading]').addClass('transition-out')
+        setTimeout(function () {
             $('[data-js-header-auth-loading-grey-line]').hide()
-            $('[data-js-header-auth-visitor]')
-                .removeClass('transition-out')
-                .addClass('transition-in')
         }, 1000)
-    } catch (error) {
-        location.reload()
-    } finally {
-        auth = { loaded: true }
-        window.loggedIn = false
-        $('[data-js-header-authentication]').removeClass('loading')
-        $('[data-js-header-auth-loading]')
-            .removeClass('transition-in')
-            .addClass('transition-out')
     }
-  }
+
+    $('[data-js-header-auth-logout]').on('click', userLogout)
+
+    async function userLogout() {
+        $('[data-js-header-authentication]').addClass('loading')
+        $('[data-js-header-auth-loading]').removeClass('transition-out').addClass('transition-in')
+        $('[data-js-header-auth-loading-grey-line]').show()
+        if ($(window).innerWidth() < 841) {
+            $('[data-js-header-menu-toggle]').removeClass('open')
+            $('[data-js-header-menu-wrap]').slideUp(200)
+        }
+        $('[data-js-header-menu-wrap]').slideUp(200)
+
+        const url = '{{ site.Param "backendURL" }}/logout'
+        const options = {
+            method: 'GET',
+            mode: 'cors',
+            credentials: 'include',
+            headers: { Accept: 'application/json' },
+        }
+        try {
+            await fetch(url, options)
+            $('[data-js-header-auth-user]').removeClass('transition-in').addClass('transition-out')
+            setTimeout(function () {
+                $('[data-js-header-auth-loading-grey-line]').hide()
+                $('[data-js-header-auth-visitor]').removeClass('transition-out').addClass('transition-in')
+            }, 1000)
+        } catch (error) {
+            location.reload()
+        } finally {
+            auth = { loaded: true }
+            window.loggedIn = false
+            $('[data-js-header-authentication]').removeClass('loading')
+            $('[data-js-header-auth-loading]').removeClass('transition-in').addClass('transition-out')
+        }
+    }
 })
 
 let lastScrollPosition = 0
@@ -224,68 +210,73 @@ const contentWrap = $('[data-js-content-wrap]')
 const searchResults = $('[data-js-search-results]')
 
 if ($(window).scrollTop() === 0) {
-  header.css('top', 0)
-  sidebar.css('top', header.innerHeight())
+    header.css('top', 0)
+    sidebar.css('top', header.innerHeight())
 }
 
 $(window).on('scroll', function () {
-  const currentScrollPosition = $(window).scrollTop()
-  // do not consider scrolling bounce effect as scrolling
-  if (currentScrollPosition >= 0 && currentScrollPosition <= $('body').height() - $(window).height()) {
-      window.scrollingDown = currentScrollPosition > lastScrollPosition
-      lastScrollPosition = currentScrollPosition
-  }
+    const currentScrollPosition = $(window).scrollTop()
+    // do not consider scrolling bounce effect as scrolling
+    if (currentScrollPosition >= 0 && currentScrollPosition <= $('body').height() - $(window).height()) {
+        window.scrollingDown = currentScrollPosition > lastScrollPosition
+        lastScrollPosition = currentScrollPosition
+    }
 })
 
-$(window).on('load scroll resize', function() {
-  const headerHeight = header.innerHeight()
-  const sidebarHeight = sidebar.innerHeight()
-  if (window.innerWidth < desktopScreenWidth) {
-    if (window.scrollingDown) {
-      sidebar.css('top', 0)
-      header.css('top', -headerHeight)
-      docsMenu.css('top', sidebarHeight)
-      searchResults.css('margin-top', sidebarHeight)
-      contentWrap.css('paddingTop', 0)
+$(window).on('load scroll resize', function () {
+    const headerHeight = header.innerHeight()
+    const sidebarHeight = sidebar.innerHeight()
+    if (window.innerWidth < desktopScreenWidth) {
+        if (window.scrollingDown) {
+            sidebar.css('top', 0)
+            header.css('top', -headerHeight)
+            docsMenu.css('top', sidebarHeight)
+            searchResults.css('margin-top', sidebarHeight)
+            contentWrap.css('paddingTop', 0)
+        } else {
+            header.css('top', 0)
+            sidebar.css('top', headerHeight)
+            docsMenu.css('top', headerHeight + sidebarHeight)
+            searchResults.css('margin-top', headerHeight + sidebarHeight)
+            contentWrap.css('paddingTop', headerHeight)
+        }
     } else {
-      header.css('top', 0)
-      sidebar.css('top', headerHeight)
-      docsMenu.css('top', headerHeight + sidebarHeight)
-      searchResults.css('margin-top', headerHeight + sidebarHeight)
-      contentWrap.css('paddingTop', headerHeight)
+        sidebar.css('top', 0)
+        searchResults.css('margin-top', 76)
+        sidebar.css('top', 0)
+        header.css('top', 0)
+        docsMenu.css('top', 78)
+        searchResults.css('margin-top', headerHeight)
+        contentWrap.css('paddingTop', headerHeight)
     }
-  } else {
-    docsMenu.css('top', 90)
-    searchResults.css('margin-top', 76)
-  }
-  elementsTopPosition() // TOC
+    elementsTopPosition() // TOC
 })
 
 // Table of content
 
 // Adjust elements positions depending on content shown
 function elementsTopPosition() {
-  const windowHeight = $(window).height()
-  const topOfWindow = $(window).scrollTop()
-  const footerPosition = $('#footer').offset().top
-  const toc = $('[data-js-toc]')
-  const progress = (topOfWindow / (footerPosition - windowHeight)) * 100
-
-  if (toc.length) {
-      const tableOfContentHeight = $('#TableOfContents').height()
-      let contentTablePull = 0
-      if (tableOfContentHeight > windowHeight * 0.9) {
-          heightDifference = tableOfContentHeight - windowHeight * 0.8
-          contentTablePull = heightDifference * progress / 100
-      }
-      const tableOfContentTop = 70 - contentTablePull
-      toc.css('top', tableOfContentTop)
-  }
+    const windowHeight = $(window).height()
+    const topOfWindow = $(window).scrollTop()
+    const footerPosition = $('#footer').offset().top
+    const toc = $('[data-js-toc]')
+    const progress = (topOfWindow / (footerPosition - windowHeight)) * 100
+
+    if (toc.length) {
+        const tableOfContentHeight = $('#TableOfContents').height()
+        let contentTablePull = 0
+        if (tableOfContentHeight > windowHeight * 0.9) {
+            heightDifference = tableOfContentHeight - windowHeight * 0.8
+            contentTablePull = (heightDifference * progress) / 100
+        }
+        const tableOfContentTop = 70 - contentTablePull
+        toc.css('top', tableOfContentTop)
+    }
 }
 
 function isOnScreen(elem) {
     if (elem.length === 0) {
-        return;
+        return
     }
     const viewportTop = $(window).scrollTop()
     const viewportHeight = $(window).height()
@@ -294,44 +285,32 @@ function isOnScreen(elem) {
     const height = $(elem).height()
     const bottom = top + height
 
-    return (top >= viewportTop && top < viewportBottom) ||
+    return (
+        (top >= viewportTop && top < viewportBottom) ||
         (bottom > viewportTop && bottom <= viewportBottom) ||
         (height > viewportHeight && top <= viewportTop && bottom >= viewportBottom)
+    )
 }
 
 function setContentTableHeaderActive(id) {
-    $('#TableOfContents ul li a').removeClass('active');
-    $(`#TableOfContents ul li a[href="#${id}"]`).addClass('active');
+    $('#TableOfContents ul li a').removeClass('active')
+    $(`#TableOfContents ul li a[href="#${id}"]`).addClass('active')
 }
 
 // Sidemenu scroll spy
 $(window).ready(function () {
     const observer = new IntersectionObserver(function (entries) {
         headers = Array.from($('#main-content h2, #main-content h3'))
-        headersOnScreen = headers.filter(h => isOnScreen(h))
+        headersOnScreen = headers.filter((h) => isOnScreen(h))
         if (headersOnScreen.length) {
             setContentTableHeaderActive(headersOnScreen[0].id)
         } else if (entries[0].intersectionRatio == 0 && !window.scrollingDown) {
-            currentIndex = headers.findIndex(header => header.id === entries[0].target.getAttribute('id'))
+            currentIndex = headers.findIndex((header) => header.id === entries[0].target.getAttribute('id'))
             previousHeader = currentIndex ? currentIndex - 1 : 0
             setContentTableHeaderActive(headers[previousHeader].id)
         }
-    });
-    document.querySelectorAll('#main-content h2, #main-content h3').forEach(function (header) {
-        observer.observe(header);
-    });
-});
-
-const addMenuListeners = () => {
-    $('[data-js-toggle-menu-product-dropdown]').on('click', function () {
-        $(this).toggleClass('open')
-        $('[data-js-menu-product-dropdown]').toggleClass('open')
     })
-    window.addEventListener('click', function (e) {
-        const select = document.querySelector('[data-js-menu-product-dropdown], [data-js-toggle-menu-product-dropdown]')
-        if (!select.contains(e.target)) {
-            select.classList.remove('open')
-            $('[data-js-menu-product-dropdown]').removeClass('open')
-        }
+    document.querySelectorAll('#main-content h2, #main-content h3').forEach(function (header) {
+        observer.observe(header)
     })
-}
+})
diff --git a/assets/js/search.js b/assets/js/search.js
index 0747b93..108bff8 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -1,28 +1,28 @@
-
-const algolia = algoliasearch("27CIRMYZIB", "7e88305c04e90188508daa6c89e5f4df").initIndex("codemagic_docs");
+const algolia = algoliasearch('27CIRMYZIB', '7e88305c04e90188508daa6c89e5f4df').initIndex('codemagic_docs')
 
 $(document).ready(() => {
     initSearchEvents()
 })
 
 const initSearchEvents = () => {
-    $('.search__icon--search').on('click', () => {
-        $(this).closest('.search').find('.search__input').trigger('focus')
+    $('[data-js-search-icon]').on('click', () => {
+        $('[data-js-search-input]').trigger('focus')
     })
-    $('.search__icon--clear').on('mousedown', () => {
+    $('[data-js-search-clear-icon]').on('mousedown', () => {
         // mousedown is before blur, 'click' wouldn't work because after blur the icon disappears
         updateFromInput(null)
     })
 
-    $('.search__input')
-        .bind('focus focusin', () => {
-            $('.search').addClass('search--active')
+    $('[data-js-search-input]')
+        .bind('change keyup input', (event) => {
+            if (event.target.value.trim().length) $('[data-js-search]').addClass('search--active')
+            else $('[data-js-search]').removeClass('search--active')
         })
         .bind('blur focusout', (event) => {
             if (event.target.value) {
                 return
             }
-            $('.search').removeClass('search--active')
+            $('[data-js-search]').removeClass('search--active')
         })
         .on('keyup', (event) => {
             if (event.keyCode === 27) {
@@ -76,9 +76,9 @@ const updateResults = async (query) => {
 }
 
 const updateInputs = (query) => {
-    var $inputs = $('.search__input')
+    var $inputs = $('[data-js-search-input]')
     $inputs.val(query)
-    query === null ? $inputs.trigger('blur') : query && $('.search').addClass('search--active')
+    query === null ? $inputs.trigger('blur') : query && $('[data-js-search]').addClass('search--active')
 }
 
 const getResultHtml = (algoliaResultList, query) => {
@@ -104,7 +104,7 @@ const getResultHtml = (algoliaResultList, query) => {
                 html: [
                     $('<a>', { html: result._highlightResult.title.value, href: result.uri }),
                     $('<p>', { html: result._highlightResult.subtitle.value }),
-                    $('<p>', { html: result._snippetResult.content.value}),
+                    $('<p>', { html: result._snippetResult.content.value }),
                 ],
             })
         }),
@@ -114,12 +114,13 @@ const getResultHtml = (algoliaResultList, query) => {
 const getResults = (query) =>
     query
         ? algolia
-            .search(`'${query}`, {
-                highlightPreTag: '<mark data-markjs="true">',
-                highlightPostTag: '</mark>',
-            }).then((result) => {
-                return result.hits;
-            })
+              .search(`'${query}`, {
+                  highlightPreTag: '<mark data-markjs="true">',
+                  highlightPostTag: '</mark>',
+              })
+              .then((result) => {
+                  return result.hits
+              })
         : null
 
 const debounce = (func, wait, immediate) => {
diff --git a/assets/scss/_header.scss b/assets/scss/_header.scss
index 9eacc42..1ef4551 100644
--- a/assets/scss/_header.scss
+++ b/assets/scss/_header.scss
@@ -4,21 +4,25 @@
 }
 .inner {
     width: auto;
-    margin: auto 40px;
+    margin: auto 0;
+    height: 100%;
+    @media (max-width: 1000px) {
+        margin: auto 40px;
+    }
+    @media (max-width: 560px) {
+        margin: auto 10px auto 40px;
+    }
 }
 #header {
-    padding: 14px 0;
     position: fixed;
     top: 0;
-    left: 0;
+    left: 360px;
     right: 0;
     font-weight: 600;
     font-size: 14px;
     font-family: $font-family-bold;
     z-index: 14;
-    opacity: 0;
-    transform: translateY(-10px);
-    animation: fadeIn 600ms forwards, moveDown 600ms forwards;
+    height: 76px;
     transition: all 300ms ease-in-out;
 
     .inner {
@@ -29,12 +33,26 @@
     }
     background-color: white;
     box-shadow: 0 0 20px -10px transparentize(black, 0.7);
+
+    @media (max-width: 1000px) {
+        left: 0;
+        box-shadow: 0 0 30px transparentize(black, 0.9);
+        z-index: 16;
+    }
 }
-#header-logo {
-    width: 140px;
-    margin-right: 50px;
+.toggle-wrapper {
+    display: none;
+    z-index: 1;
+    width: 76px;
+    height: 76px;
+    justify-content: center;
+    align-items: center;
+    @media (max-width: 1000px) {
+        display: flex;
+    }
 }
-#menu-toggle {
+#menu-toggle,
+#sidebar-toggle {
     display: none;
     width: 42px;
     height: 42px;
@@ -79,86 +97,15 @@
             transform: rotate(-45deg);
         }
     }
-    @media (max-width: 900px) {
-        display: block;
-    }
 }
-.menu-dropdown {
-    display: none;
-    position: absolute;
-    box-shadow: 0px 3px 60px #06225d29;
-    background: white;
-    top: 100%;
-    border-radius: 20px;
-    padding: 30px;
-    &.open {
+#menu-toggle {
+    @media (max-width: 560px) {
         display: block;
     }
 }
-.menu-link.toggle-dropdown-button {
-    position: relative;
-    &::after {
-        content: '\f078';
-        font-family: 'Font Awesome 5 Free';
-        transition: all 160ms linear;
+#sidebar-toggle {
+    @media (max-width: 1000px) {
         display: inline-block;
-        font-weight: 600;
-        font-size: 9px;
-        margin-left: 10px;
-        vertical-align: middle;
-    }
-    &.open {
-        &::after {
-            transform: rotate(180deg);
-        }
-    }
-}
-.menu-block {
-    &__header {
-        color: $black-l;
-        font-size: 12px;
-        margin-bottom: 10px;
-        text-transform: uppercase;
-    }
-    &__links {
-        display: grid;
-        grid-template-columns: 1fr 1fr;
-        gap: 10px 20px;
-    }
-    &__link {
-        font-size: 13px;
-        display: flex;
-        height: 56px;
-        align-items: center;
-        padding: 0 20px;
-        border-radius: 10px;
-        color: $black-l;
-        box-shadow: 0px 3px 46px $shadow-blue;
-        svg {
-            width: 20px;
-            height: 20px;
-            margin-right: 10px;
-            vertical-align: middle;
-            * {
-                transition: fill 200ms linear;
-                stroke: none;
-                fill: $black-l;
-                opacity: 1;
-            }
-            &.ios {
-                position: relative;
-                bottom: 3px;
-            }
-        }
-        &:hover {
-            color: $blue;
-            svg * {
-                fill: $blue;
-            }
-        }
-    }
-    &:not(:last-child) {
-        margin-bottom: 30px;
     }
 }
 #header-menu-wrap {
@@ -166,16 +113,20 @@
     display: flex;
     justify-content: space-between;
     align-items: center;
+    padding: 14px 0;
 
-    @media (min-width: 901px) {
-        .menu-link,
+    @media (max-width: 1000px) {
+        flex: none;
+    }
+
+    @media (min-width: 561px) {
         #login-link,
         .label {
             position: relative;
             display: inline-block;
             height: 48px;
             line-height: 48px;
-            padding: 0 24px;
+            padding-right: 24px;
             color: $black;
             cursor: pointer;
 
@@ -186,25 +137,18 @@
         display: flex !important;
     }
 }
-#header-main-menu {
-    display: flex;
-}
 
 #login-link {
     color: $black;
 }
 
 @media (max-width: 1065px) {
-    #header-logo {
-        margin-right: 20px;
-    }
-    #header-menu-wrap .menu-link,
     #header-menu-wrap #login-link,
     #header-menu-wrap .label {
         padding: 0 10px;
     }
 }
-@media (min-width: 901px) {
+@media (min-width: 561px) {
     #signup-btn {
         background-color: $blue;
         color: white;
@@ -315,7 +259,7 @@
         }
     }
     #header-authentication {
-        width: 220px;
+        width: 240px;
         height: 48px;
         position: relative;
         overflow: hidden;
@@ -329,7 +273,13 @@
         }
     }
 }
-@media (max-width: 900px) {
+@media (min-width: 1001px) {
+    #header-auth-visitor,
+    #header-auth-user {
+        justify-content: center;
+    }
+}
+@media (max-width: 560px) {
     #header-menu-wrap {
         display: none;
         position: fixed;
@@ -337,72 +287,9 @@
         top: 0;
         left: 0;
         flex: none;
-        right: 100px;
+        right: 85px;
         box-shadow: 0 0 20px transparentize($black, 0.7);
-        height: 100vh;
         overflow: auto;
-
-        .menu-link,
-        .menu-block__link {
-            position: relative;
-            display: block;
-            color: $black;
-            height: 60px;
-            line-height: 60px;
-            padding: 0 50px;
-            border-bottom: 1px solid $grey-l;
-
-            &:not(.toggle-dropdown-button)::after {
-                content: '\f061';
-                font-family: 'Font Awesome 5 Free';
-            }
-            &::after {
-                position: absolute;
-                right: 50px;
-                transition: right 300ms ease-in-out;
-            }
-            &:hover,
-            &:focus {
-                background-color: $grey-xl;
-                color: $blue;
-            }
-            &:not(.toggle-dropdown-button) {
-                &:hover,
-                &:focus {
-                    &::after {
-                        right: 46px;
-                    }
-                }
-            }
-        }
-        .menu-dropdown {
-            position: static;
-            box-shadow: none;
-            border-radius: 0;
-            padding: 0;
-        }
-        .menu-block {
-            &__links {
-                display: block;
-            }
-            &__link {
-                box-shadow: none;
-                border-radius: 0;
-                padding: 0 80px;
-                svg {
-                    display: none;
-                }
-            }
-            &__header {
-                display: none;
-            }
-            &:not(:last-child) {
-                margin: 0;
-            }
-        }
-    }
-    #header-main-menu {
-        display: block;
     }
     #header-authentication {
         margin-top: 20px;
@@ -518,30 +405,10 @@
         }
     }
 }
-@media (max-width: 420px) {
-    #header-menu-wrap {
-        .menu-link {
-            padding: 0 20px;
-        }
-        .menu-block__link {
-            padding: 0 50px;
-        }
-        .menu-link,
-        .menu-block__link {
-            &::after {
-                right: 20px;
-            }
-            &:not(.toggle-dropdown-button):hover::after {
-                right: 16px;
-            }
-        }
-    }
-}
 @media (max-width: 320px) {
     #header-menu-wrap {
         right: 75px;
     }
-    #header-menu-wrap .menu-link::after,
     #header-user-avatar {
         display: none;
     }
diff --git a/assets/scss/_search.scss b/assets/scss/_search.scss
index 7ee966a..88745c3 100644
--- a/assets/scss/_search.scss
+++ b/assets/scss/_search.scss
@@ -1,165 +1,151 @@
 .search {
-  .search__input {
-    font-size: 14px;
-    border-radius: 3px;
-    border: 1px solid $grey-bg;
-    box-sizing: border-box;
-    padding: 10px;
-    padding-right: 35px;
     width: 100%;
-  }
-
-  &.search--sidebar {
+    max-width: calc(100% - 240px);
     position: relative;
-    width: 100%;
+    height: 100%;
+    font-size: 18px;
+    .search__input {
+        font-family: inherit;
+        font-size: 18px;
+        border: none;
+        border-right: 1px solid $grey-bg;
+        box-sizing: border-box;
+        padding: 10px 76px;
+        height: 100%;
+        width: 100%;
+        &::placeholder {
+            font-size: 18px;
+        }
+        @media (max-width: 1000px) {
+            border-left: 1px solid $grey-bg;
+        }
+    }
     @media (max-width: 1000px) {
-      display: none;
+        flex: 1;
+        &--header {
+            display: none;
+        }
+    }
+    &--sidebar {
+        z-index: 1;
+        width: 100%;
+        max-width: unset;
+        display: none;
+        @media (max-width: 1000px) {
+            display: block;
+        }
     }
-    margin: 10px 0;
-    width: 100%;
-  }
 
-  &.search--header {
-    position: absolute;
-    right: 10px;
-    width: 150px;
-    transition: width 150ms ease-in-out;
-    z-index: 1;
+    .search__icon {
+        position: absolute;
+        top: 0;
+        height: 100%;
+        width: 76px;
+        display: flex;
+        align-items: center;
+        justify-content: center;
+
+        &--search {
+            left: 0;
+            color: $grey-text-light;
+            cursor: pointer;
+        }
+        &--clear {
+            right: 0;
+            cursor: pointer;
+        }
+    }
 
-    @media (min-width: 1001px) {
-      display: none;
+    &:not(.search--active) .search__icon--clear {
+        display: none;
     }
+}
 
-    &.search--active {
-      width: 300px;
+#search-results {
+    position: fixed;
+    top: 0;
+    left: 0;
+    right: 0;
+    bottom: 0;
+    z-index: 1;
+    background: rgb(248, 248, 248);
+    overflow: auto;
+    margin-top: 70px;
+
+    &:not(:empty) ~ #main-content {
+        position: fixed;
+        overflow: hidden;
+        height: 100%;
+    }
 
-      @media (max-width: 670px) {
-        width: calc(100% - 360px);
-      }
+    @media (min-width: 1001px) {
+        margin-left: 360px;
+        margin-top: 76;
     }
 
     @media (max-width: 1000px) {
-      right: 40px;
+        margin-top: 140px;
     }
 
-    @media (max-width: 500px) {
-      width: 40px;
-
-      &.search--active {
-        width: calc(100% - 80px);
-      }
-
-      .search__input {
-        padding-right: 28px;
-      }
+    &:empty {
+        display: none;
     }
-  }
-
-  .search__icon {
-    position: absolute;
-    right: 0;
-    padding: 12px;
 
-    &--search {
-      color: $grey-text-light;
+    ul {
+        padding: 30px;
     }
-  }
 
-  .search--sidebar .search__icon {
-    right: 10px;
-  }
-
-  &.search--active .search__icon--search,
-  &:not(.search--active) .search__icon--clear {
-    display: none;
-  }
-}
+    li {
+        padding: 12px 0;
+    }
 
-#search-results {
-  position: fixed;
-  top: 0;
-  left: 0;
-  right: 0;
-  bottom: 0;
-  z-index: 1;
-  background: rgb(248, 248, 248);
-  overflow: auto;
-  margin-top: 70px;
-
-  &:not(:empty) ~ #main-content {
-    position: fixed;
-    overflow: hidden;
-    height: 100%;
-  }
+    a {
+        font-size: 18px;
+        color: $blue;
+        &:hover {
+            color: $blue-hover;
+        }
+    }
 
-  @media (min-width: 1001px) {
-    margin-left: 360px;
-    margin-top: 76;
-  }
+    p {
+        font-size: 14px;
+        line-height: 16px;
+        margin-top: 5px;
+        color: #666;
+    }
 
-  @media (max-width: 1000px) {
-    margin-top: 140px;
-  }
+    span {
+        &:not(.start):before,
+        &:last-child:not(.end):after {
+            content: '\00A0...\00A0';
+        }
+    }
 
-  &:empty {
-    display: none;
-  }
+    a mark {
+        color: $blue;
+    }
 
-  ul {
-    padding: 30px;
-  }
+    p mark {
+        color: black;
+    }
 
-  li {
-    padding: 12px 0;
-  }
+    mark {
+        background: transparent;
+        font-family: $font-family-bold;
+    }
 
-  a {
-    font-size: 18px;
-    color: $blue;
-    &:hover {
-      color: $blue-hover;
-    }
-  }
-
-  p {
-    font-size: 14px;
-    line-height: 16px;
-    margin-top: 5px;
-    color: #666;
-  }
-
-  span {
-    &:not(.start):before,
-    &:last-child:not(.end):after {
-      content: '\00A0...\00A0';
-    }
-  }
-
-  a mark {
-    color: $blue;
-  }
-
-  p mark {
-    color: black;
-  }
-
-  mark {
-    background: transparent;
-    font-family: $font-family-bold;
-  }
-
-  .no-results-message {
-    font-size: 28px;
-    text-align: center;
-    display: flex;
-    top: 0;
-    right: 0;
-    bottom: 0;
-    left: 0;
-    position: absolute;
-    align-items: center;
-    justify-content: center;
-    padding: 30px;
-    box-sizing: border-box;
-  }
+    .no-results-message {
+        font-size: 28px;
+        text-align: center;
+        display: flex;
+        top: 0;
+        right: 0;
+        bottom: 0;
+        left: 0;
+        position: absolute;
+        align-items: center;
+        justify-content: center;
+        padding: 30px;
+        box-sizing: border-box;
+    }
 }
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 8466af2..01e105b 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -17,12 +17,27 @@ body {
     font-family: $font-family-default;
     color: $black;
     font-size: 16px;
-    letter-spacing: -.4px;
+    letter-spacing: -0.4px;
 }
 
 .article-page {
     font-family: inherit;
-} 
+}
+
+#sidebar-logo {
+    width: 140px;
+    display: block;
+    @media (max-width: 1000px) {
+        display: none;
+    }
+}
+#header-logo {
+    width: 140px;
+    display: none;
+    @media (max-width: 1000px) {
+        display: inline-block;
+    }
+}
 #content-wrap {
     position: relative;
     padding-top: 76px;
@@ -32,23 +47,23 @@ body {
         width: 360px;
         position: fixed;
         left: 0;
-        top: 76px;
+        top: 0;
         bottom: 0;
         overflow: visible;
-        box-shadow: 0 0 30px transparentize(black, .9);
+        box-shadow: 0 0 30px transparentize(black, 0.9);
         background: white;
-        z-index: 10;
+        z-index: 15;
         transition: top 300ms ease-in-out;
         .overlay {
-          position: absolute;
-          top: 0;
-          left: 0;
-          height: 100%;
-          width: 100%;
-          background: white;
-          z-index: 1;
-          box-shadow: 0 0 30px rgba(0,0,0,0.1);
-          display: none;
+            position: absolute;
+            top: 0;
+            left: 0;
+            height: 100%;
+            width: 100%;
+            background: white;
+            z-index: 1;
+            box-shadow: 0 0 30px rgba(0, 0, 0, 0.1);
+            display: none;
         }
         &__header {
             margin: 0 40px;
@@ -56,92 +71,51 @@ body {
             font-family: $font-family-bold;
             position: relative;
             z-index: 1;
-            padding: 45px 0;
-            .sidebar__header--link {
-              display: inline;
-            }
-            .sidebar__header--plaintext {
-              display: none;
-            }
+            padding: 20px 0;
+            border-bottom: 1px solid $grey-bg;
             a {
-              color: black;
-              &:hover {
-                color: $blue;
-              }
+                color: black;
+                &:hover {
+                    color: $blue;
+                }
             }
         }
-        &__toggle {
-          display: none;
-          width: 17px;
-          height: 12px;
-          margin-right: 5px;
-          position: relative;
-          cursor: pointer;
-          .bar {
-              position: absolute;
-              height: 2px;
-              width: 17px;
-              border-radius: 2px;
-              background-color: white;
-              transition: all 300ms linear;
-              cursor: pointer;
-              overflow: hidden;
-              &:nth-child(1) {
-                  top: 0px;
-              }
-              &:nth-child(2) {
-                  top: 5px;
-              }
-              &:nth-child(3) {
-                  top: 10px;
-              }
-              background-color: $black;
-          }
-          &.open .bar {
-              &:nth-child(1) {
-                  top: 5px;
-                  transform: rotate(45deg);
-              }
-              &:nth-child(2) {
-                  top: 5px;
-                  width: 0;
-              }
-              &:nth-child(3) {
-                  top: 5px;
-                  transform: rotate(-45deg);
-              }
-          }
-        }
         #docs-menu {
             background: white;
             overflow: auto;
             position: absolute;
-            top: 90px;
+            top: 78px;
             bottom: 0;
             right: 0;
-            padding: 10px 40px;
+            padding: 10px 40px 0;
             width: 100%;
             box-sizing: border-box;
 
+            &::after {
+                content: '';
+                display: block;
+                padding-bottom: 50px;
+            }
+
             & > ul > li {
-              & > .category-name {
-                padding-left: 0;
-                font-size: 18px;
-              }
-              &.open > .category-posts::before {
-                left: 0;
-              }
-              & > .category-posts {
-                padding-left: 0;
-                & > ul > li {
-                  & > .category-name {
-                    font-size: 16px;
-                  }
-                  & > .category-posts > ul > li > .category-name {
-                    font-size: 14px;
-                  }
+                & > .category-name {
+                    padding-left: 0;
+                    font-size: 18px;
+                }
+                &.open > .category-posts::before {
+                    left: 0;
+                }
+                & > .category-posts {
+                    padding-left: 0;
+                    & > ul > li {
+                        & > .category-name {
+                            font-size: 16px;
+                        }
+                        & > .category-posts > ul > li > .category-name {
+                            font-size: 14px;
+                        }
+                    }
                 }
-              }
             }
 
             li {
@@ -174,36 +148,68 @@ body {
                         transition: all 300ms ease-in-out;
                         border-left: 2px solid transparent;
                         margin-bottom: 5px;
-    
+
                         &:hover {
-                          color: $blue;
+                            color: $blue;
                         }
                         &.active {
-                          color: $blue;
-                          font-family: $font-family-bold;
-                          border-color: $blue;
+                            color: $blue;
+                            font-family: $font-family-bold;
+                            border-color: $blue;
                         }
                     }
                 }
                 &.open {
-                    & > .category-name { &::after { transform: rotate(180deg); } }
+                    & > .category-name {
+                        &::after {
+                            transform: rotate(180deg);
+                        }
+                    }
                     & > .category-posts {
-                      &::before {
-                        content: '';
-                        border-right: 2px solid #eaeaea;
-                        position: absolute;
-                        left: 20px;
-                        top: 0;
-                        height: 100%;
-                      }
+                        &::before {
+                            content: '';
+                            border-right: 2px solid #eaeaea;
+                            position: absolute;
+                            left: 20px;
+                            top: 0;
+                            height: 100%;
+                        }
                         display: block;
-                        a { opacity: 1; }
+                        a {
+                            opacity: 1;
+                        }
+                    }
+                }
+            }
+            .external-links {
+                margin-top: 15px;
+                padding-top: 20px;
+                border-top: 1px solid $grey-bg;
+                display: flex;
+                flex-direction: column;
+                gap: 10px;
+                a {
+                    font-size: 18px;
+                    font-family: $font-family-bold;
+                    color: $black;
+                    display: flex;
+                    justify-content: space-between;
+                    align-items: center;
+                    &::after {
+                        @include fontAwesome('\f35d');
+                        font-size: 10px;
+                        margin-left: 5px;
+                    }
+                    &:hover {
+                        color: $blue;
                     }
                 }
             }
         }
         @media (min-width: 1001px) {
-            #docs-menu { display: block; }
+            #docs-menu {
+                display: block;
+            }
         }
         @media (max-width: 1000px) {
             left: 0;
@@ -217,25 +223,21 @@ body {
             flex-wrap: nowrap;
             height: 70px;
             box-shadow: none;
+            padding: 0;
 
             .overlay {
-              display: block;
+                display: block;
             }
 
-            #menu-toggle { display: block; }
-            #sidebar__toggle { display: inline-block; }
+            #menu-toggle {
+                display: block;
+            }
             #sidebar__header {
                 font-size: 16px;
                 margin: 0;
                 padding: 0;
                 width: fit-content;
                 cursor: pointer;
-                .sidebar__header--link {
-                  display: none;
-                }
-                .sidebar__header--plaintext {
-                  display: inline-block;
-                }
             }
             #docs-menu {
                 position: fixed;
@@ -244,8 +246,9 @@ body {
                 left: 0;
                 width: 360px;
                 transform: translateY(-120%);
-                box-shadow: 0 0 30px transparentize(black, .9);
+                box-shadow: 0 0 30px transparentize(black, 0.9);
                 overflow: auto;
+                padding-top: 15px;
                 transition: transform 300ms ease-in-out, top 300ms ease-in-out;
 
                 &.open {
@@ -254,17 +257,17 @@ body {
             }
         }
         @media (max-width: 900px) {
-          top: 70px;
-          #docs-menu {
-            top: 140px;
-          }
+            top: 70px;
+            #docs-menu {
+                top: 140px;
+            }
         }
         @media (max-width: 400px) {
-            #docs-menu { 
-              width: 100%;
-              padding-left: 25px;
-              padding-right: 25px;
-              box-sizing: border-box;
+            #docs-menu {
+                width: 100%;
+                padding-left: 25px;
+                padding-right: 25px;
+                box-sizing: border-box;
             }
         }
     }
@@ -279,21 +282,28 @@ body {
             box-sizing: border-box;
             font-size: 18px;
 
-            h1, h2, h3, h4, h5, h6 {
-              margin: 40px 0;
-              .ctc {
-                  display: inline;
-                  font-size: .75em;
-                  margin-left: .5em;
-                  vertical-align: middle;
-                  opacity: 0;
-                  cursor: pointer;
-                  transition: all 300ms ease-in-out;
-              }
-              &:hover {
-                  .ctc { opacity: 1; }
-              }
-          }
+            h1,
+            h2,
+            h3,
+            h4,
+            h5,
+            h6 {
+                margin: 40px 0;
+                .ctc {
+                    display: inline;
+                    font-size: 0.75em;
+                    margin-left: 0.5em;
+                    vertical-align: middle;
+                    opacity: 0;
+                    cursor: pointer;
+                    transition: all 300ms ease-in-out;
+                }
+                &:hover {
+                    .ctc {
+                        opacity: 1;
+                    }
+                }
+            }
 
             h1 {
                 font-size: 48px;
@@ -302,15 +312,34 @@ body {
                 margin-top: 0;
                 margin-bottom: 10px;
             }
-            h2 { font-size: 36px; }
-            h3 { font-size: 26px; }
-            h4 { font-size: 22px; }
-            h5 { font-size: 20px; }
-            h6 { font-size: 18px; }
-
+            h2 {
+                font-size: 36px;
+            }
+            h3 {
+                font-size: 26px;
+            }
+            h4 {
+                font-size: 22px;
+            }
+            h5 {
+                font-size: 20px;
+            }
+            h6 {
+                font-size: 18px;
+            }
 
-            p, li { line-height: 28px; }
-            p, ul, ol, pre, hr, figure { margin: 20px auto; }
+            p,
+            li {
+                line-height: 28px;
+            }
+            p,
+            ul,
+            ol,
+            pre,
+            hr,
+            figure {
+                margin: 20px auto;
+            }
             img {
                 border-radius: 2px;
                 filter: drop-shadow(0 0 10px transparentize(black, 0.9));
@@ -318,49 +347,51 @@ body {
                 max-width: 100%;
             }
             a {
-              color: $blue;
-              &:hover {
-                color: $blue-hover;
-              }
-              code {
                 color: $blue;
-              }
+                &:hover {
+                    color: $blue-hover;
+                }
+                code {
+                    color: $blue;
+                }
             }
             figure {
                 text-align: center;
 
                 img {
-                  display: inline-block;
+                    display: inline-block;
                 }
 
                 &.align-left {
-                  text-align: left;
+                    text-align: left;
                 }
 
                 &.align-right {
-                  text-align: right;
+                    text-align: right;
                 }
 
-                &.size-medium img, &.size-medium video {
-                  max-width: 80%;
+                &.size-medium img,
+                &.size-medium video {
+                    max-width: 80%;
                 }
 
-                &.size-small img, &.size-small video {
-                  max-width: 50%;
+                &.size-small img,
+                &.size-small video {
+                    max-width: 50%;
                 }
 
                 figcaption {
-                    font-size: .8em;
+                    font-size: 0.8em;
                     margin: 15px auto;
                 }
             }
             code {
-              font-family: monospace;
-              background: $grey-bg-light;
-              font-size: 0.9em;
-              padding: 2px 4px;
-              word-break: break-word;
-              border-radius: 2px;
+                font-family: monospace;
+                background: $grey-bg-light;
+                font-size: 0.9em;
+                padding: 2px 4px;
+                word-break: break-word;
+                border-radius: 2px;
             }
             pre {
                 background: $grey-bg-light !important;
@@ -371,57 +402,65 @@ body {
                 overflow: auto;
 
                 code {
-                  background: transparent;
-                  font-size: 1em;
-                  padding: 0;
-                  span {
-                    background: transparent !important;
-                  }
+                    background: transparent;
+                    font-size: 1em;
+                    padding: 0;
+                    span {
+                        background: transparent !important;
+                    }
                 }
             }
             .notebox {
-              background: transparentize($blue, 0.95);
-              border-left: 10px solid $blue;
-              padding: 30px 40px;
-              text-align: left;
-              border-radius: 2px;
-              line-height: 28px;
-
-              p {
-                  font-size: .9em;
-                  margin: 10px auto;
-                  line-height: 22px;
-
-                  &:first-of-type { margin-top: 0; }
-                  &:last-of-type { margin-bottom: 0; }
-              }
-
-              code {
                 background: transparentize($blue, 0.95);
-              }
-              pre {
-                background: $grey-bg !important;
-              }
-              ol li,
-              ul li {
-                font-size: .9em;
-                line-height: 22px;
-              }
+                border-left: 10px solid $blue;
+                padding: 30px 40px;
+                text-align: left;
+                border-radius: 2px;
+                line-height: 28px;
+
+                p {
+                    font-size: 0.9em;
+                    margin: 10px auto;
+                    line-height: 22px;
+
+                    &:first-of-type {
+                        margin-top: 0;
+                    }
+                    &:last-of-type {
+                        margin-bottom: 0;
+                    }
+                }
+
+                code {
+                    background: transparentize($blue, 0.95);
+                }
+                pre {
+                    background: $grey-bg !important;
+                }
+                ol li,
+                ul li {
+                    font-size: 0.9em;
+                    line-height: 22px;
+                }
             }
             .description {
-              font-size: 26px;
-              margin: 0;
-              padding: 0;
+                font-size: 26px;
+                margin: 0;
+                padding: 0;
             }
 
             blockquote {
-              overflow: auto;
-              padding: 20px 20px;
-              border-left: 10px solid $grey-bg;
-              background: $grey-bg-light;
+                overflow: auto;
+                padding: 20px 20px;
+                border-left: 10px solid $grey-bg;
+                background: $grey-bg-light;
 
-              p:first-child {margin-top: 0}
-              p:last-child {margin-bottom: 0}
+                p:first-child {
+                    margin-top: 0;
+                }
+                p:last-child {
+                    margin-bottom: 0;
+                }
             }
 
             .table-wrap {
@@ -430,9 +469,11 @@ body {
             table {
                 font-size: 14px;
                 line-height: 1.2;
-                tbody, thead {
+                tbody,
+                thead {
                     tr {
-                        td, th {
+                        td,
+                        th {
                             min-width: 150px;
                             padding: 15px;
                             border: 2px solid $grey-bg;
@@ -442,25 +483,26 @@ body {
                 }
 
                 code {
-                  padding: 2px 5px;
+                    padding: 2px 5px;
                 }
             }
 
             ol {
-              list-style-type: decimal;
+                list-style-type: decimal;
             }
-  
+
             ul {
-              list-style-type: disc;
+                list-style-type: disc;
             }
-  
-            ul, ol {
-              padding-left: 35px;
-              li {
-                margin: 10px 0;
-                line-height: 25px;
-                padding-left: 5px;
-              }
+
+            ul,
+            ol {
+                padding-left: 35px;
+                li {
+                    margin: 10px 0;
+                    line-height: 25px;
+                    padding-left: 5px;
+                }
             }
         }
         #toc {
@@ -472,26 +514,26 @@ body {
             padding-top: 32px;
             padding-right: 30px;
             nav {
-              position: relative;
-              padding-left: 10px;
-              &::before {
-                content: '';
-                position: absolute;
-                left: 0;
-                top: 0;
-                display: block;
-                border-right: 2px solid $grey-bg;
-                height: 100%;
-                transition: all 300ms ease-in-out;
-              }
+                position: relative;
+                padding-left: 10px;
+                &::before {
+                    content: '';
+                    position: absolute;
+                    left: 0;
+                    top: 0;
+                    display: block;
+                    border-right: 2px solid $grey-bg;
+                    height: 100%;
+                    transition: all 300ms ease-in-out;
+                }
             }
 
             code {
-              color: inherit;
-              font-family: inherit;
-              background: inherit;
-              font-size: inherit;
-              padding: 0;
+                color: inherit;
+                font-family: inherit;
+                background: inherit;
+                font-size: inherit;
+                padding: 0;
             }
 
             .heading {
@@ -530,24 +572,30 @@ body {
                 }
             }
 
-            ul, ol {
-              list-style-type: none;
-              padding-left: 0;
-              li {
-                padding: 0;
-                margin: 0;
-                li a {
-                  padding-left: 15px;
+            ul,
+            ol {
+                list-style-type: none;
+                padding-left: 0;
+                li {
+                    padding: 0;
+                    margin: 0;
+                    li a {
+                        padding-left: 15px;
+                    }
                 }
-              }
             }
             ul ul {
-              margin: 0;
+                margin: 0;
             }
         }
         @media (max-width: 1200px) {
-            main { width: 100%; padding: 32px 70px 16px 40px; }
-            #toc { display: none; }
+            main {
+                width: 100%;
+                padding: 32px 70px 16px 40px;
+            }
+            #toc {
+                display: none;
+            }
         }
         @media (max-width: 1000px) {
             margin: 100px 50px 0;
@@ -555,56 +603,82 @@ body {
         @media (max-width: 760px) {
             margin: 80px 0 0;
             main {
-                h1 { font-size: 30px; }
-                h2 { font-size: 24px; }
-                h3 { font-size: 21px; }
-                h4 { font-size: 18px; }
-                h5 { font-size: 18px; }
-                h6 { font-size: 18px; }
+                h1 {
+                    font-size: 30px;
+                }
+                h2 {
+                    font-size: 24px;
+                }
+                h3 {
+                    font-size: 21px;
+                }
+                h4 {
+                    font-size: 18px;
+                }
+                h5 {
+                    font-size: 18px;
+                }
+                h6 {
+                    font-size: 18px;
+                }
             }
         }
         @media (max-width: 480px) {
             main {
                 font-size: 14px;
                 padding: 32px 40px 50px 40px;
-                p, li { line-height: 22px; }
-                p, ul, ol, pre, hr, figure { margin: 20px auto; }
+                p,
+                li {
+                    line-height: 22px;
+                }
+                p,
+                ul,
+                ol,
+                pre,
+                hr,
                 figure {
-                  &.align-left, &.align-right, &.size-medium, &.size-small {
-                    text-align: center;
-                    img, video {
-                      max-width: 100%
+                    margin: 20px auto;
+                }
+                figure {
+                    &.align-left,
+                    &.align-right,
+                    &.size-medium,
+                    &.size-small {
+                        text-align: center;
+                        img,
+                        video {
+                            max-width: 100%;
+                        }
                     }
-                  }
                 }
             }
         }
     }
 }
 #footer {
-  box-sizing: border-box;
-  margin-left: 390px;
-  margin-right: 32px;
-  padding: 32px 40px;
-  
-  border-top: 1px solid #EEE;
-  font-size: 18px;
-
-  @media (max-width: 1000px){
-    margin: 100px 50px 0;
-  }
-    
-  a {
-    color: #0957FF;
-  }
-
-  .page-metadata {
-    font-size: .9em;
-    line-height: 1.5;
-  }
-
-  .edit-link {
-    font-weight: bold;
-    display: inline-block;
-  }
+    box-sizing: border-box;
+    margin-left: 390px;
+    margin-right: 32px;
+    padding: 32px 40px;
+
+    border-top: 1px solid #eee;
+    font-size: 18px;
+
+    @media (max-width: 1000px) {
+        margin: 100px 50px 0;
+    }
+
+    a {
+        color: #0957ff;
+    }
+
+    .page-metadata {
+        font-size: 0.9em;
+        line-height: 1.5;
+    }
+
+    .edit-link {
+        font-weight: bold;
+        display: inline-block;
+    }
 }
diff --git a/assets/svg/book.svg b/assets/svg/book.svg
deleted file mode 100644
index d92bc04..0000000
--- a/assets/svg/book.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<svg xmlns="http://www.w3.org/2000/svg" width="17.501" height="20" viewBox="0 0 17.501 20">
-  <path id="book" d="M17.5,14.063V.938A.935.935,0,0,0,16.562,0H3.75A3.751,3.751,0,0,0,0,3.75v12.5A3.751,3.751,0,0,0,3.75,20H16.563a.935.935,0,0,0,.938-.938v-.625a.945.945,0,0,0-.348-.731,8.719,8.719,0,0,1,0-2.918.93.93,0,0,0,.348-.727ZM5,5.234A.235.235,0,0,1,5.234,5h8.281a.235.235,0,0,1,.234.234v.781a.235.235,0,0,1-.234.234H5.234A.235.235,0,0,1,5,6.016Zm0,2.5A.235.235,0,0,1,5.234,7.5h8.281a.235.235,0,0,1,.234.234v.781a.235.235,0,0,1-.234.234H5.234A.235.235,0,0,1,5,8.516ZM14.9,17.5H3.75a1.25,1.25,0,1,1,0-2.5H14.9A14.02,14.02,0,0,0,14.9,17.5Z" fill="#06225d"/>
-</svg>
diff --git a/assets/svg/platforms/android.svg b/assets/svg/platforms/android.svg
deleted file mode 100644
index 06305ff..0000000
--- a/assets/svg/platforms/android.svg
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
-<svg version="1.1" id="android" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
-	 viewBox="0 0 35 35" style="enable-background:new 0 0 35 35;" xml:space="preserve">
-<style type="text/css">
-	.st0{fill:#C6CBDE;}
-</style>
-<path class="st0" d="M24.9,22c-0.7,0-1.3-0.6-1.3-1.3c0-0.7,0.6-1.3,1.3-1.3c0.7,0,1.3,0.6,1.3,1.3C26.2,21.4,25.6,22,24.9,22
-	 M10.1,22c-0.7,0-1.3-0.6-1.3-1.3c0-0.7,0.6-1.3,1.3-1.3c0.7,0,1.3,0.6,1.3,1.3C11.5,21.4,10.9,22,10.1,22 M25.3,13.9L28,9.3
-	c0.2-0.3,0.1-0.6-0.2-0.8c-0.3-0.2-0.6-0.1-0.8,0.2l-2.7,4.7C22.3,12.5,20,12,17.5,12c-2.5,0-4.8,0.5-6.8,1.5L8,8.8
-	C7.8,8.5,7.5,8.4,7.2,8.6C6.9,8.7,6.8,9.1,7,9.3l2.7,4.6C5.1,16.4,2,21,1.5,26.5h32C33,21,29.9,16.4,25.3,13.9"/>
-</svg>
diff --git a/assets/svg/platforms/cordova.svg b/assets/svg/platforms/cordova.svg
deleted file mode 100644
index 0357830..0000000
--- a/assets/svg/platforms/cordova.svg
+++ /dev/null
@@ -1,10 +0,0 @@
-<svg id="cordova" xmlns="http://www.w3.org/2000/svg" width="30" height="28.626" viewBox="0 0 30 28.626">
-  <defs>
-    <style>
-      .cls-1 {
-        fill: #c6cbde;
-      }
-    </style>
-  </defs>
-  <path id="Path_114" data-name="Path 114" class="cls-1" d="M27.252,28.626H22.385l.344-4.094H20.353l-.344,4.094H9.962l-.344-4.094H7.242l.344,4.094H2.719L0,10.906,6.813,0H23.187L30,10.906ZM21.813,5.439h-4.38l.286,2.032H12.281l.286-2.032H8.187L5.468,10.878,6.842,21.784H23.187l1.374-10.906ZM19.437,18.177c-.372,0-.687-1.145-.687-2.548s.315-2.548.687-2.548.687,1.145.687,2.548C20.1,17.061,19.809,18.177,19.437,18.177Zm-8.616.229c-.372,0-.687-1.145-.687-2.548s.315-2.548.687-2.548.687,1.145.687,2.548S11.193,18.406,10.821,18.406Z"/>
-</svg>
diff --git a/assets/svg/platforms/flutter.svg b/assets/svg/platforms/flutter.svg
deleted file mode 100644
index f4e8c06..0000000
--- a/assets/svg/platforms/flutter.svg
+++ /dev/null
@@ -1,34 +0,0 @@
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24.735" height="30.63" viewBox="0 0 24.735 30.63">
-  <defs>
-    <style>
-      .cls-1 {
-        fill: #c6cbde;
-      }
-
-      .cls-2 {
-        clip-path: url(#clip-path);
-      }
-    </style>
-    <clipPath id="clip-path">
-      <path id="Path_102" data-name="Path 102" class="cls-1" d="M32.166,15.409,23.92,23.657l8.245,8.248H22.744L14.5,23.657l8.248-8.248ZM22.744,1.275,7.43,16.589,12.143,21.3,32.166,1.275Z" transform="translate(-7.43 -1.275)"/>
-    </clipPath>
-  </defs>
-  <g id="flutterio-icon" transform="translate(-7.43 -1.275)">
-    <g id="Group_98" data-name="Group 98" class="cls-2" transform="translate(7.43 1.275)">
-      <path id="Path_101" data-name="Path 101" class="cls-1" d="M22.2,39.053l4.709,4.712L39.865,30.8H30.443Z" transform="translate(-15.13 -16.671)"/>
-    </g>
-    <g id="Group_99" data-name="Group 99" class="cls-2" transform="translate(7.43 1.275)">
-      <path id="Path_103" data-name="Path 103" class="cls-1" d="M22.744,1.275h9.422L12.143,21.3,7.43,16.589Z" transform="translate(-7.43 -1.275)"/>
-    </g>
-    <g id="Group_100" data-name="Group 100" class="cls-2" transform="translate(7.43 1.275)">
-      <path id="Path_105" data-name="Path 105" class="cls-1" d="M32.037,52.75l3.536,3.533h9.422L36.75,48.037Z" transform="translate(-20.259 -25.655)"/>
-    </g>
-    <g id="Group_101" data-name="Group 101" class="cls-2" transform="translate(7.43 1.275)">
-      <path id="Path_107" data-name="Path 107" class="cls-1" d="M39.026,50.329,36.75,48.037,32.037,52.75Z" transform="translate(-20.259 -25.655)"/>
-    </g>
-    <g id="Group_102" data-name="Group 102" class="cls-2" transform="translate(7.43 1.275)">
-      <path id="Path_109" data-name="Path 109" class="cls-1" d="M22.2,42.9l4.712-4.712L31.622,42.9l-4.713,4.712Z" transform="translate(-15.129 -20.52)"/>
-    </g>
-    <path id="Path_111" data-name="Path 111" class="cls-1" d="M32.166,15.409,23.92,23.657l8.245,8.248H22.744L14.5,23.657l8.248-8.248ZM22.744,1.275,7.43,16.589,12.143,21.3,32.166,1.275Z"/>
-  </g>
-</svg>
diff --git a/assets/svg/platforms/ionic.svg b/assets/svg/platforms/ionic.svg
deleted file mode 100644
index 6a6554e..0000000
--- a/assets/svg/platforms/ionic.svg
+++ /dev/null
@@ -1,12 +0,0 @@
-<svg id="ionic" xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">
-  <defs>
-    <style>
-      .cls-1 {
-        fill: #c6cbde;
-      }
-    </style>
-  </defs>
-  <path id="Path_112" data-name="Path 112" class="cls-1" d="M34.04,27.2a6.84,6.84,0,1,0,6.84,6.84h0A6.837,6.837,0,0,0,34.04,27.2Z" transform="translate(-19.04 -19.04)"/>
-  <circle id="Ellipse_6" data-name="Ellipse 6" class="cls-1" cx="3.12" cy="3.12" r="3.12" transform="translate(21.69 2.55)"/>
-  <path id="Path_113" data-name="Path 113" class="cls-1" d="M28.65,8.79l-.12-.3-.21.24a4.835,4.835,0,0,1-1.89,1.29l-.21.06.09.21a12.317,12.317,0,1,1-6.06-6.33l.18.09.09-.21a4.536,4.536,0,0,1,1.38-1.8l.24-.21-.27-.15A14.809,14.809,0,0,0,15,0,15,15,0,1,0,30,15a14.742,14.742,0,0,0-1.35-6.21Z" transform="translate(0 0)"/>
-</svg>
diff --git a/assets/svg/platforms/ios.svg b/assets/svg/platforms/ios.svg
deleted file mode 100644
index f8ccbeb..0000000
--- a/assets/svg/platforms/ios.svg
+++ /dev/null
@@ -1,10 +0,0 @@
-<svg xmlns="http://www.w3.org/2000/svg" width="25.73" height="30.62" viewBox="0 0 25.73 30.62">
-  <defs>
-    <style>
-      .cls-1 {
-        fill: #c6cbde;
-      }
-    </style>
-  </defs>
-  <path id="Path_115" data-name="Path 115" class="cls-1" d="M21.513-12.257a6.382,6.382,0,0,1,3.418-5.8,7.345,7.345,0,0,0-5.79-3.049c-2.427-.191-5.079,1.415-6.05,1.415-1.025,0-3.377-1.347-5.223-1.347C4.054-20.973,0-17.992,0-11.929A17.027,17.027,0,0,0,.984-6.378c.875,2.509,4.033,8.661,7.328,8.559C10.035,2.14,11.252.957,13.494.957c2.174,0,3.3,1.224,5.223,1.224,3.322-.048,6.18-5.64,7.014-8.155A6.776,6.776,0,0,1,21.513-12.257ZM17.643-23.481a6.438,6.438,0,0,0,1.641-4.956,7.249,7.249,0,0,0-4.642,2.386,6.539,6.539,0,0,0-1.75,4.915A5.741,5.741,0,0,0,17.643-23.481Z" transform="translate(0 28.438)"/>
-</svg>
diff --git a/assets/svg/platforms/react.svg b/assets/svg/platforms/react.svg
deleted file mode 100644
index 1a2ab2b..0000000
--- a/assets/svg/platforms/react.svg
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
-<svg version="1.1" id="react-native" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px"
-	 y="0px" viewBox="0 0 35 35" style="enable-background:new 0 0 35 35;" xml:space="preserve">
-<style type="text/css">
-	.st0{fill:#C6CBDE;}
-</style>
-<path class="st0" d="M35,17.5c0,2.2-2.9,4.3-6.8,5.6c-0.2,0.1-0.4,0.1-0.6,0.2c0.1,0.3,0.1,0.6,0.2,0.9c0.8,3.9,0.2,7.2-1.7,8.2
-	c-1.8,1-4.7,0-7.6-2.5c-0.3-0.3-0.6-0.6-0.9-0.8c-0.2,0.2-0.5,0.5-0.7,0.7c-3,2.6-6.1,3.7-8,2.7c-1.8-1-2.4-4-1.6-7.8
-	c0.1-0.4,0.2-0.8,0.3-1.2c-0.3-0.1-0.6-0.2-0.9-0.3C2.8,21.8,0,19.7,0,17.5c0-2.1,2.6-4.1,6.3-5.3c0.4-0.1,0.8-0.3,1.3-0.4
-	c-0.1-0.4-0.2-0.8-0.3-1.1c-0.8-3.9-0.2-7,1.6-8c1.9-1.1,5,0.1,8.1,2.8c0.2,0.2,0.4,0.3,0.6,0.5c0.3-0.3,0.6-0.5,0.9-0.8
-	c3-2.6,5.9-3.7,7.7-2.6c1.9,1.1,2.4,4.4,1.6,8.4c-0.1,0.3-0.1,0.5-0.2,0.8c0.4,0.1,0.7,0.2,1.1,0.3C32.3,13.5,35,15.5,35,17.5z
-	 M9.6,17.6c-0.6-1.4-1.2-2.9-1.7-4.4c-0.4,0.1-0.8,0.2-1.2,0.4c-3.1,1.1-5.3,2.7-5.3,3.9c0.1,0.8,0.6,1.6,1.3,2
-	c1.2,1,2.9,1.7,4.3,2.1c0.3,0.1,0.6,0.2,0.8,0.3C8.4,20.5,8.9,19,9.6,17.6z M16.5,28.1c-1.1-1.1-2.1-2.4-3-3.7
-	c-1.6-0.1-3.1-0.3-4.6-0.7c-0.1,0.4-0.2,0.8-0.3,1.1C8,28,8.4,30.5,9.5,31.1c0.8,0.3,1.7,0.3,2.4-0.1c1.4-0.6,2.7-1.4,3.9-2.4
-	C16.1,28.5,16.3,28.3,16.5,28.1z M8.7,10.4c0.1,0.4,0.2,0.7,0.2,1.1c1.5-0.3,3-0.6,4.6-0.7c0.9-1.3,1.9-2.5,2.9-3.6
-	c-0.2-0.2-0.3-0.3-0.5-0.5C13.2,4.3,10.7,3.4,9.5,4C8.5,4.6,8.1,7.1,8.7,10.4z M10.5,19.3c-0.4,1-0.8,2.1-1.1,3
-	c1,0.2,2.1,0.4,3.2,0.5c-0.4-0.6-0.7-1.2-1.1-1.8C11.1,20.5,10.8,19.9,10.5,19.3z M10.5,15.9c0.3-0.6,0.6-1.2,1-1.8
-	c0.3-0.6,0.7-1.2,1.1-1.7c-1.1,0.1-2.1,0.3-3.1,0.5C9.7,13.8,10,14.8,10.5,15.9z M12.7,20.4c0.5,0.9,1.1,1.8,1.7,2.7
-	c1,0.1,2,0.1,3.1,0.1s2.1,0,3.2-0.1c0.6-0.9,1.1-1.8,1.7-2.7c0.5-0.9,1-1.8,1.5-2.8c-0.5-0.9-1-1.9-1.5-2.8s-1.1-1.8-1.7-2.6
-	c-1-0.1-2.1-0.1-3.1-0.1s-2.1,0-3.1,0.1c-0.6,0.9-1.1,1.8-1.7,2.7c-0.6,0.9-1,1.8-1.5,2.8C11.7,18.5,12.2,19.4,12.7,20.4z
-	 M14.4,17.6c0-1.7,1.4-3.1,3.1-3.1s3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1S14.4,19.3,14.4,17.6z M15.5,10.6c1.4-0.1,2.7-0.1,4.1,0
-	c-0.6-0.8-1.3-1.7-2-2.4C16.8,8.9,16.1,9.7,15.5,10.6z M19.6,24.5c-0.7,0-1.4,0-2.1,0s-1.4,0-2,0c0.7,0.9,1.4,1.7,2.1,2.5
-	C18.3,26.2,18.9,25.4,19.6,24.5z M18.5,7.1c1.1,1.1,2,2.4,2.9,3.6c1.5,0.1,3.1,0.4,4.6,0.7c0.1-0.2,0.1-0.5,0.2-0.7
-	c0.7-3.5,0.3-6.2-0.9-6.9c-1.1-0.6-3.5,0.2-6,2.5C19.1,6.6,18.8,6.9,18.5,7.1z M26.3,24.5c-0.1-0.3-0.1-0.6-0.2-0.8
-	c-1.5,0.3-3.1,0.6-4.7,0.7c-0.9,1.3-1.8,2.5-2.9,3.7c0.3,0.3,0.6,0.5,0.9,0.8c2.5,2.1,4.8,3,5.9,2.3c0.7-0.5,1.1-1.3,1.1-2.1
-	C26.7,27.6,26.7,26,26.3,24.5z M22.5,22.8c1.1-0.1,2.2-0.3,3.2-0.5c-0.3-1-0.7-2-1.2-3c-0.3,0.6-0.6,1.2-1,1.8
-	C23.2,21.7,22.9,22.3,22.5,22.8z M25.7,12.9c-1-0.2-2-0.4-3.1-0.5c0.4,0.6,0.7,1.1,1,1.7c0.3,0.6,0.7,1.2,1,1.8
-	C25,14.9,25.3,13.9,25.7,12.9z M33.5,17.5c0-1.2-2.2-2.9-5.4-4c-0.3-0.1-0.7-0.2-1-0.3c-0.5,1.5-1,2.9-1.7,4.3
-	c0.7,1.4,1.3,2.9,1.7,4.4c0.2-0.1,0.4-0.1,0.6-0.2C31.1,20.6,33.5,18.9,33.5,17.5z"/>
-</svg>
diff --git a/assets/svg/plug.svg b/assets/svg/plug.svg
deleted file mode 100644
index 1e6e374..0000000
--- a/assets/svg/plug.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<svg xmlns="http://www.w3.org/2000/svg" width="14.555" height="19.406" viewBox="0 0 14.555 19.406">
-  <path id="plug" d="M12.129,1.213a1.213,1.213,0,1,0-2.426,0V4.852h2.426Zm1.819,4.852H.606A.606.606,0,0,0,0,6.671V7.884a.606.606,0,0,0,.606.606h.606V9.7a6.067,6.067,0,0,0,4.851,5.943v3.76H8.49v-3.76A6.067,6.067,0,0,0,13.342,9.7V8.49h.606a.606.606,0,0,0,.606-.606V6.671A.606.606,0,0,0,13.948,6.064Zm-9.1-4.852a1.213,1.213,0,1,0-2.426,0V4.852H4.852Z" fill="#06225d"/>
-</svg>
diff --git a/layouts/_default/baseof.html b/layouts/_default/baseof.html
index 06a6e8b..609f2dd 100644
--- a/layouts/_default/baseof.html
+++ b/layouts/_default/baseof.html
@@ -1,41 +1,39 @@
-<!doctype html>
+<!DOCTYPE html>
 
 <html>
-  <head>
-    {{ .Render "head" }}
-  </head>
-  <body id="article-page" class="page">
-    {{ partial "header" . }}
-    <div id="content-wrap" data-js-content-wrap>
-      <div id="search-results" data-js-search-results></div>
-      <aside id="sidebar" data-js-sidebar>
-        <div class="overlay"></div>
-        <div id="sidebar__header" data-js-docs-menu-toggle>
-          <div id="sidebar__toggle" data-js-docs-menu-toggle-icon>
-            <div class="bar"></div>
-            <div class="bar"></div>
-            <div class="bar"></div>
-          </div>
-          <a href="/" class="sidebar__header--link">Codemagic Documentation</a>
-          <span class="sidebar__header--plaintext">Codemagic Documentation</span>
+    <head>
+        {{ .Render "head" }}
+    </head>
+    <body id="article-page" class="page">
+        {{ partial "header" . }}
+        <div id="content-wrap" data-js-content-wrap>
+            <div id="search-results" data-js-search-results></div>
+            <aside id="sidebar" data-js-sidebar>
+                <div class="overlay"></div>
+                <div class="toggle-wrapper">
+                    <div id="sidebar-toggle" data-js-docs-menu-toggle>
+                        <div class="bar"></div>
+                        <div class="bar"></div>
+                        <div class="bar"></div>
+                    </div>
+                </div>
+                <div class="search search--sidebar" data-js-search>
+                    <input class="search__input" type="text" placeholder="Search" data-js-search-input />
+                    <div class="search__icon search__icon--search fas fa-search" data-js-search-icon></div>
+                    <div class="search__icon search__icon--clear fas fa-times" data-js-search-clear-icon></div>
+                </div>
+                <div id="sidebar__header" data-js-docs-menu-toggle>
+                    <a href="/" id="sidebar-logo" onclick="sendGtag('Logo_clicked', 'CodemagicMenu')"
+                        >{{ partial "codemagic-logo" . }}</a
+                    >
+                </div>
+                {{ partial "sidebar" . }}
+            </aside>
+            <div id="main-content">
+                <main>{{ block "main" . }}{{ end }}</main>
+            </div>
         </div>
-        <div class="search search--header">
-          <input class="search__input" type="text" placeholder="Search">
-          <div class="search__icon search__icon--search fas fa-search"></div>
-          <div class="search__icon search__icon--clear fas fa-times"></div>
-        </div>
-        {{ partial "sidebar" . }}
-      </aside>
-      <div id="main-content">
-        <main>
-          {{ block "main" . }}{{ end }}
-        </main>
-      </div>
-    </div>
-    <footer id="footer">
-      {{ partial "footer" . }}
-    </footer>
-    {{ partial "analytics" . }}
-    {{ partial "site-footer" . }}
-  </body>
+        <footer id="footer">{{ partial "footer" . }}</footer>
+        {{ partial "analytics" . }} {{ partial "site-footer" . }}
+    </body>
 </html>
diff --git a/layouts/partials/header.html b/layouts/partials/header.html
index 9bb2b61..0b48b33 100644
--- a/layouts/partials/header.html
+++ b/layouts/partials/header.html
@@ -1,120 +1,22 @@
 <div id="nav-trigger"></div>
 <header id="header" data-js-header>
     <div class="inner">
-        <a
-            href='{{ site.Param "landingURL" }}/start'
-            id="header-logo"
-            onclick="sendGtag('Logo_clicked', 'CodemagicMenu')"
-            target="_blank"
+        <a href="/" id="header-logo" onclick="sendGtag('Logo_clicked', 'CodemagicMenu')"
             >{{ partial "codemagic-logo" . }}</a
         >
-        <div id="menu-toggle" data-js-header-menu-toggle>
-            <div class="bar"></div>
-            <div class="bar"></div>
-            <div class="bar"></div>
+        <div class="search search--header" data-js-search>
+            <input class="search__input" type="text" placeholder="Search" data-js-search-input />
+            <div class="search__icon search__icon--search fas fa-search" data-js-search-icon></div>
+            <div class="search__icon search__icon--clear fas fa-times" data-js-search-clear-icon></div>
+        </div>
+        <div class="toggle-wrapper">
+            <div id="menu-toggle" data-js-header-menu-toggle>
+                <div class="bar"></div>
+                <div class="bar"></div>
+                <div class="bar"></div>
+            </div>
         </div>
         <div id="header-menu-wrap" data-js-header-menu-wrap>
-            <nav id="header-menu">
-                <a class="menu-link toggle-dropdown-button" data-js-toggle-menu-product-dropdown>Product</a>
-                <div class="menu-dropdown" data-js-menu-product-dropdown>
-                    <div class="menu-block">
-                        <p class="menu-block__header">Use Codemagic CI/CD for</p>
-                        <ul class="menu-block__links">
-                            <li>
-                                <a
-                                    href="https://flutterci.com"
-                                    class="menu-block__link"
-                                    onclick="sendGtag('Flutter_clicked', 'CodemagicMenu')"
-                                    target="_blank"
-                                >
-                                    {{ readFile "/assets/svg/platforms/flutter.svg" | safeHTML }} Flutter</a
-                                >
-                            </li>
-                            <li>
-                                <a
-                                    href='{{ site.Param "landingURL" }}/react-native-continuous-integration'
-                                    class="menu-block__link"
-                                    onclick="sendGtag('React_native_clicked', 'CodemagicMenu')"
-                                >
-                                    {{ readFile "/assets/svg/platforms/react.svg" | safeHTML }} React Native</a
-                                >
-                            </li>
-                            <li>
-                                <a
-                                    href='{{ site.Param "landingURL" }}/ios-continuous-integration'
-                                    class="menu-block__link"
-                                    onclick="sendGtag('iOS_clicked', 'CodemagicMenu')"
-                                    >{{ readFile "/assets/svg/platforms/ios.svg" | safeHTML }} Native iOS</a
-                                >
-                            </li>
-                            <li>
-                                <a
-                                    href='{{ site.Param "landingURL" }}/android-continuous-integration'
-                                    class="menu-block__link"
-                                    onclick="sendGtag('Android_clicked', 'CodemagicMenu')"
-                                >
-                                    {{ readFile "/assets/svg/platforms/android.svg" | safeHTML }} Native Android</a
-                                >
-                            </li>
-                            <li>
-                                <a
-                                    href='{{ site.Param "landingURL" }}/cordova-continuous-integration'
-                                    class="menu-block__link"
-                                    onclick="sendGtag('Cordova_clicked', 'CodemagicMenu')"
-                                >
-                                    {{ readFile "/assets/svg/platforms/cordova.svg" | safeHTML }} Cordova</a
-                                >
-                            </li>
-                            <li>
-                                <a
-                                    href='{{ site.Param "landingURL" }}/ionic-continuous-integration'
-                                    class="menu-block__link"
-                                    onclick="sendGtag('Ionic_clicked', 'CodemagicMenu')"
-                                >
-                                    {{ readFile "/assets/svg/platforms/ionic.svg" | safeHTML }} Ionic</a
-                                >
-                            </li>
-                        </ul>
-                    </div>
-                    <div class="menu-block">
-                        <p class="menu-block__header">Discover more from</p>
-                        <ul class="menu-block__links">
-                            <li>
-                                <a
-                                    href='{{ site.Param "landingURL" }}/integrations'
-                                    class="menu-block__link"
-                                    onclick="sendGtag('Integrations_clicked', 'CodemagicMenu')"
-                                    >{{ readFile "/assets/svg/plug.svg" | safeHTML }} Integrations</a
-                                >
-                            </li>
-                            <li>
-                                <a
-                                    href='{{ site.Param "blogURL" }}'
-                                    class="menu-block__link"
-                                    onclick="sendGtag('Blog_clicked', 'CodemagicMenu')"
-                                    target="_blank"
-                                    >{{ readFile "/assets/svg/book.svg" | safeHTML }} Blog</a
-                                >
-                            </li>
-                        </ul>
-                    </div>
-                </div>
-                <a
-                    class="menu-link"
-                    href='{{ site.Param "landingURL" }}/pricing'
-                    onclick="sendGtag('Pricing_clicked', 'CodemagicMenu')"
-                    >Pricing</a
-                >
-                <a
-                    class="menu-link"
-                    href='{{ site.Param "landingURL" }}/enterprise'
-                    onclick="sendGtag('Enterprise_clicked', 'CodemagicMenu')"
-                    >Enterprise</a
-                >
-                <a class="menu-link" href="/" onclick="sendGtag('Documentation_clicked', 'CodemagicMenu')"
-                    >Documentation</a
-                >
-            </nav>
             <aside id="header-authentication" data-js-header-authentication>
                 <div id="header-auth-visitor" data-js-header-auth-visitor>
                     <a
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 0272190..44ad723 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -18,10 +18,9 @@
 {{ end }}
 
 <nav id="docs-menu" data-js-docs-menu>
-  <div class="search search--sidebar">
-    <input class="search__input" type="text" placeholder="Search">
-    <div class="search__icon search__icon--search fas fa-search"></div>
-    <div class="search__icon search__icon--clear fas fa-times"></div>
-  </div>
   {{ template "content-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}}
+  <div class="external-links">
+    <a id="codemagic-landing-link" onclick="sendGtag('Codemagic_clicked', 'DocumentationMenu')" href="https://codemagic.io/start" target="_blank">Codemagic</a>
+    <a id="codemagic-blog-link" onclick="sendGtag('Blog_clicked', 'DocumentationMenu')" href="https://blog.codemagic.io" target="_blank">Codemagic Blog</a>
+  </div>
 </nav>

commit bf1bb9998eea4807e1e29fc5006bb96ce83210ff
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Jun 3 19:11:39 2021 +0300

    Remove AWS Device Farm, add info about Firebase Test Lab (#376)
    
    * Feature: working directory
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Remove slash
    
    * Improvement: add basic codemagic.yaml example
    
    * Move to scripts
    
    * Deprecation: AWS Device Farm via Sylph
    
    * Deprecation: AWS Device Farm via Sylph
    
    * Sync
    
    * Remove references
    
    * Draft
    
    * Draft
    
    * Example Firebase tests
    
    * Add examples on Firebase Test Lab
    
    * Add back release notes
    
    * editing
    
    * link to doc for creating service account
    
    * Add information about packaging
    
    * Update content/testing-yaml/firebase-test-lab.md
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/testing-yaml/firebase-test-lab.md b/content/testing-yaml/firebase-test-lab.md
new file mode 100644
index 0000000..36596de
--- /dev/null
+++ b/content/testing-yaml/firebase-test-lab.md
@@ -0,0 +1,71 @@
+---
+title: Testing on Firebase Test Lab
+description: How to run tests on Firebase Test Lab
+weight: 2
+---
+
+Firebase Test Lab provides cloud-based infrastructure for testing Android and iOS apps on a range of devices and configurations. You can test your apps on Firebase Test Lab as part of the Codemagic build workflow provided you have set up a Firebase project.
+
+To set up testing on Firebase Test Lab in Codemagic, follow these steps.
+
+## Firebase Test Lab prerequisites
+
+You will need to set up the following in the [Firebase console](https://firebase.google.com/).
+
+1. Create a Firebase project.
+2. Create a service account with Editor permissions and download the JSON key file so you can authenticate with Firebase Test Lab during the build. See how to create a service account [here](../knowledge-base/google-play-api).
+3. Enable the [Cloud Tools Results API](https://console.cloud.google.com/apis/library/toolresults.googleapis.com?pli=1&project=woven-voyage-217607&folder=&organizationId=).
+
+Please follow the guides in the [Firebase Test Lab documentation](https://firebase.google.com/docs/test-lab/?gclid=EAIaIQobChMIs5qVwqW25QIV8iCtBh3DrwyUEAAYASAAEgLFU_D_BwE) to set up a project.
+
+## Configure testing in Firebase Test Lab in codemagic.yaml
+
+To access the Firebase project from Codemagic, add the service account JSON key file to your `codemagic.yaml` and the Firebase project name as environment variables. See how to [encrypt environment variables](../building/encrypting).
+
+```yaml
+environment:
+  vars:
+    GCLOUD_KEY_FILE: Encrypted(...) # <-- Put your encrypted service account JSON key file here
+    FIREBASE_PROJECT: "YOUR_FIREBASE_PROJECT_NAME" # <-- Put your Firebase Project Name here
+```
+Then, add the scripts to run tests on the preferred platform and device. The testing step should come after build scripts.
+
+Note that Codemagic machines come with installed gcloud CLI tools. Refer [CLI documentation for Android](https://firebase.google.com/docs/test-lab/android/command-line) and [CLI documentation for iOS](https://firebase.google.com/docs/test-lab/ios/command-line) for the detailed description.
+
+```yaml
+ - name: Run Firebase Test Lab tests
+   script: |
+     set -ex
+     echo $GCLOUD_KEY_FILE | base64 --decode > ./gcloud_key_file.json
+     gcloud auth activate-service-account --key-file=gcloud_key_file.json
+
+     gcloud --quiet config set project $FIREBASE_PROJECT
+```
+
+### Android
+```yaml
+gcloud firebase test android run \
+  --type instrumentation \
+  --app your-app.apk \
+  --test your-app-test.apk \
+  --device model=TestDevice1,version=AndroidVersion1  \
+  --device model=TestDevice2,version=AndroidVersion2  \
+  --environment-variables coverage=true,coverageFile="/sdcard/coverage.ec" \
+  --directories-to-pull /sdcard
+  --timeout 3m
+```
+
+### iOS
+
+Package your application and prepare it for the upload to Firebase Test Lab as desicribed [here](https://firebase.google.com/docs/test-lab/ios/run-xctest#package-app).
+
+Use the generated `MyTests.zip` to start testing:
+
+```yaml
+  gcloud firebase test ios run --test PATH/TO/MyTests.zip \
+    --device model=MODEL_ID_1,version=VERSION_ID_1,locale=LOCALE_1,orientation=ORIENTATION_1 \
+    --device model=MODEL_ID_2,version=VERSION_ID_2,locale=LOCALE_2,orientation=ORIENTATION_2
+    --timeout 3m
+```
+
+Check out [this sample Flutter project](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/flutter/flutter-integration-tests-demo-project) and the relevant [codemagic.yaml](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/flutter/flutter-integration-tests-demo-project/codemagic.yaml) file for setting up integration tests in Firebase.
diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index a7e5794..7820e11 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -1,5 +1,5 @@
 ---
-title: Testing
+title: Running tests
 description: How to run tests with codemagic.yaml
 weight: 1
 aliases:
@@ -8,8 +8,64 @@ aliases:
 
 Test scripts are added under `scripts` in the [overall architecture](../getting-started/yaml#template), before the build commands.
 
-You can display test results visually in the build overview if you use expanded form of the script in `codemagic.yaml`.
-Just include the `test_report` field with a glob pattern matching the test result file location. Supported test report formats are [Junit XML](https://llg.cubic.org/docs/junit/) `.JSON` for Flutter's `--machine` report.
+You can display test results visually in the build overview if you use an expanded form of the script in `codemagic.yaml`. Just include the `test_report` field with a glob pattern matching the test result file location. Supported test report formats are [Junit XML](https://llg.cubic.org/docs/junit/) and `.JSON` for Flutter's `--machine` report.
+
+For instructions on testing your app on real devices in Firebase Test Lab, refer [here](./firebase-test-lab).
+
+## Flutter unit tests
+
+    flutter test
+
+**Tip:** you can display Flutter test results visually in the build overview if you use expanded form of the script in codemagic.yaml.
+Just include the `test_report` field with a glob pattern matching the test result file location:
+
+```yaml
+scripts:
+  - echo 'previous step'
+  - name: Unit tests
+    script: |
+      mkdir -p test-results
+      flutter test --machine > test-results/flutter.json
+    test_report: test-results/flutter.json
+```
+
+## Flutter integration tests
+
+The `flutter_driver` dependency allows you to run integration tests on a real device or emulator. Android application tests can be run on an Android emulator, iOS application tests can be run on an iOS simulator, and web application tests can be run on a web browser driver.
+
+### Running iOS/Android application tests on a mobile simulator/emulator
+
+```bash
+flutter emulators --launch apple_ios_simulator             # for android use: flutter emulators --launch emulator
+flutter drive --target=test_driver/my_drive_target.dart
+```
+
+### Running web application tests on a web browser driver
+
+Chrome
+
+```yaml
+scripts:
+  - echo 'previous step'
+  - name: 'Flutter drive web test'
+    script: |
+      chromedriver --port=4444 &
+      flutter config --enable-web
+      flutter drive --target=test_driver/button_pressing.dart -d chrome --browser-name chrome --release
+```
+
+Safari
+
+```yaml
+scripts:
+  - echo 'previous step'
+  - name: 'Flutter drive web test'
+    script: |
+      sudo safaridriver --enable
+      safaridriver --port 4444 &
+      flutter config --enable-web
+      flutter drive --target=test_driver/button_pressing.dart --browser-name safari --release
+```
 
 ## React Native Unit Tests using Jest
 
@@ -178,6 +234,20 @@ workflows:
   ...
 ```
 
+## Native iOS
+
+```bash
+- name: iOS test
+    script: |
+    xcode-project run-tests \
+        --workspace MyAwesomeApp.xcworkspace \
+        --scheme MyAwesomeApp \
+        --device "iPhone 11"
+    test_report: build/ios/test/*.xml
+```
+
+Please check [Codemagic CLI tools documentation](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/run-tests.md#run-tests) to learn more about more optional arguments to `xcode-project run-tests`.
+
 ## Native Android
 
 For non-UI tests or unit tests:
@@ -205,76 +275,3 @@ For UI tests (also known as instrumented tests):
 ```
 
 **Tip**: you can save the emulator log with the `adb logcat -d > emulator.log` command.
-
-## Native iOS
-
-```bash
-- name: iOS test
-    script: |
-    xcode-project run-tests \
-        --workspace MyAwesomeApp.xcworkspace \
-        --scheme MyAwesomeApp \
-        --device "iPhone 11"
-    test_report: build/ios/test/*.xml
-```
-
-Please check [Codemagic CLI tools documentation](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/run-tests.md#run-tests) to learn more about more optional arguments to `xcode-project run-tests`.
-
-## Flutter unit tests
-
-    flutter test
-
-**Tip:** you can display Flutter test results visually in the build overview if you use expanded form of the script in codemagic.yaml.
-Just include the `test_report` field with a glob pattern matching the test result file location:
-
-```yaml
-scripts:
-  - echo 'previous step'
-  - name: Unit tests
-    script: |
-      mkdir -p test-results
-      flutter test --machine > test-results/flutter.json
-    test_report: test-results/flutter.json
-```
-
-## Flutter integration tests
-
-The `flutter_driver` dependency allows you to run integration tests on a real device or emulator. Android application tests can be run on an Android emulator, iOS application tests can be run on an iOS simulator, and web application tests can be run on a web browser driver.
-
-### Running iOS/Android application tests on a mobile simulator/emulator
-
-```bash
-flutter emulators --launch apple_ios_simulator             # for android use: flutter emulators --launch emulator
-flutter drive --target=test_driver/my_drive_target.dart
-```
-
-### Running web application tests on a web browser driver
-
-Chrome
-
-```yaml
-scripts:
-  - echo 'previous step'
-  - name: 'Flutter drive web test'
-    script: |
-      chromedriver --port=4444 &
-      flutter config --enable-web
-      flutter drive --target=test_driver/button_pressing.dart -d chrome --browser-name chrome --release
-```
-
-Safari
-
-```yaml
-scripts:
-  - echo 'previous step'
-  - name: 'Flutter drive web test'
-    script: |
-      sudo safaridriver --enable
-      safaridriver --port 4444 &
-      flutter config --enable-web
-      flutter drive --target=test_driver/button_pressing.dart --browser-name safari --release
-```
-
-{{<notebox>}}
-Flutter for web is available in Flutter version **2.0.0** or higher on the **stable** channel.
-{{</notebox>}}
\ No newline at end of file
diff --git a/content/testing/aws.md b/content/testing/aws.md
deleted file mode 100644
index 3642584..0000000
--- a/content/testing/aws.md
+++ /dev/null
@@ -1,59 +0,0 @@
----
-description: How to configure Flutter Driver tests in the Flutter workflow editor
-title: Testing on AWS Device Farm
-weight: 5
----
-
-You can run Flutter integration tests on physical Android and iOS devices on [AWS Device Farm](https://aws.amazon.com/device-farm/) thanks to the integration with [Sylph](https://github.com/mmcc007/sylph). 
-
-{{<notebox>}}
-Using AWS Device Farm requires having an AWS account. You are billed separately by AWS for device usage. See the AWS Device Farm [pricing page](https://aws.amazon.com/device-farm/pricing/) for more information.
-{{</notebox>}}
-
-## Requirements
-
-* An IAM user with Device Farm permissions is required. Follow the instructions outlined in the [setup document](https://docs.aws.amazon.com/devicefarm/latest/developerguide/setting-up.html) to create an IAM user with access to Device Farm and make note of the **access key ID** and **secret access key**.
-* `sylph.yaml` file in the repository for AWS Device Farm configuration (optional). The `sylph.yaml` templates are available on [GitHub](https://github.com/mmcc007/sylph/tree/master/example).
-
-{{<notebox>}}
-We strongly advise you to set up an IAM user with a policy to access Device Farm and no other AWS permissions. Don't use your AWS root account credentials to link Codemagic with Device Farm.
-{{</notebox>}}
-
-## AWS Device Farm setup on Codemagic
-
-1. Navigate to **App settings** > **Test**.
-2. At the top of the section, select **Enable Flutter Driver tests** to enable running integration tests for this workflow.
-3. Select to run Flutter Driver tests on **AWS Device Farm**. 
-4. Enter your **AWS access key ID** and **AWS secret access Key** to the respective fields.
-
-For testing on **iOS devices**, additional configuration is needed. Follow the instructions in the [iOS builds](https://github.com/mmcc007/sylph#ios-builds) section in Sylph readme and add the required environment variables to Codemagic in **App settings > Environment variables**.
-
-During the build, Codemagic searches the repository for a `sylph.yaml` file to configure the AWS Device Farm test run and generates a default configuration file if no existing configuration is found. By default, we run the tests in your `project_root/test_driver` folder on Google Pixel 2 (OS 8.0.0) regardless of the build platforms you have selected. 
-
-## Test logs
-
-After the test run, you will see an overview of how many tests failed, passed or were skipped on the **Results** tab as well as a detailed test log containing information about used device minutes on the **Log** tab.
-
-{{< figure size="medium" src="/uploads/aws_log.png" caption="" >}}
-
-## Changing the Flutter version used for testing
-
-Sylph comes with a predefined Flutter version set [here](https://github.com/mmcc007/sylph/blob/master/lib/resources/test_spec.yaml#L32) and doesn't yet support version changing.
-
-If you want to test your application with another Flutter version, follow these steps:
-
-1. Fork the [Sylph repository](https://github.com/mmcc007/sylph) and change the Flutter version in `test_spec.yaml` to the desired one. Note that the version name is followed with the channel name.
-2. In Codemagic, add a pre-test script to activate your fork. 
-
-    If you made your changes to the forked repository on the default branch, you can simply mention the git URL to activate it:
-
-    ```bash
-    pub global activate -s git https://github.com/your_username/sylph.git
-    ```
-
-    If you made your changes on a specific branch e.g. `flutter_1.17.5`, you can clone the specific branch and specify the path to the cloned repository:
-
-    ```bash
-    git clone --branch your_branch_name https://github.com/your_username/sylph.git $HOME/sylph
-    pub global activate -s path $HOME/sylph
-    ```
\ No newline at end of file
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index f35f65e..73d8333 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -30,7 +30,6 @@ There are several options for running integration tests during the build. You ca
 
 * iOS simulator (selected by default)
 * Android emulator
-* [AWS Device Farm](./aws) --- enables to run tests on physical Android and iOS devices. Requires an AWS account and additional setup.
 
 Devices available on the machine are:
 
@@ -60,3 +59,7 @@ flutter emulators --launch emulator
 ### Stop build if tests fail
 
 Selecting the **Stop build if tests fail** option will stop the build after finishing all the enabled tests when any of the tests fail. Such builds will have the status "failed".
+
+### Running tests in Firebase Test Lab
+
+Integration tests can also be run on real devices in Firebase Test Lab when using the [integration_test](https://github.com/flutter/flutter/tree/master/packages/integration_test) package and custom scripts in Codemagic. See a detailed guide on how to set up testing in Firebase Test Lab [here](https://blog.codemagic.io/codemagic-flutter-integration-tests-firebase-test-lab/).

commit f32c6634a5ff0931d8da383e6a50814b674edb07
Author: Chris Raastad <craastad@gmail.com>
Date:   Thu Jun 3 15:53:37 2021 +0300

    Remove link to article that will be deleted and add in useful tips for debugging. (#375)

diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 59f56f5..aaf6bac 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -60,6 +60,12 @@ The SSH or VNC session remains active for a maximum of 20 minutes after all buil
 If you have finished debugging the build, don't forget to end the session to avoid losing build time.
 {{</notebox>}}
 
-## Closer look
+## Useful tips for debugging
+
+* You can access your project on the builder machine by running `cd $FCI_BUILD_DIR`
+* If you encounter an error during the build, a good way to get started is by digging into the build logs on Codemagic and rerunning the first failed command.
+* The command `printenv` prints all the environment variables exported during the build. See [environment variables](../building/environment-variables/) for an explanation of read-only environment variables.
+* The `sudo` command is available to execute any commands with root privileges.
+* During an active SSH session, you can rerun the build with a different configuration right from the terminal.
+* Before terminating the connection, you can copy-paste the contents of the terminal window to keep a record of your actions on the builder machine.
 
-If you want to know more about setting up remote access, there is a detailed overview on both SSH and VNC connection <a href="https://blog.codemagic.io/remote-access-to-virtual-mac-build-machine/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','remote-access-to-virtual-mac-build-machine')">on our blog.</a>

commit 3d5e1bb70589467e2d2f49179f03fae694bdfc96
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Jun 3 14:28:12 2021 +0300

    Update build-versioning.md

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index d58b859..b730141 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -68,7 +68,7 @@ It is recommended to create a dedicated App Store Connect API key for Codemagic
 
 - `APP_STORE_CONNECT_PRIVATE_KEY`
 
-  This is the private API key downloaded from App Store Connect. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build. Alternativey, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
+  This is the private API key downloaded from App Store Connect. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build. Alternatively, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
 
 #### Saving to `codemagic.yaml` config
 

commit eef2d3cd6a5c0c94d310fffbb57c9b0749afcce6
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Wed Jun 2 14:40:07 2021 +0300

    Update due to UI changes (#373)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index 88a3392..9db26a0 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -6,9 +6,13 @@ weight: 3
 
 If you wish to store sensitive information, such as login details or API keys, in environment variables or in your configuration file, it is important to encrypt the data so as to not expose it. You can easily encrypt values and files using the encryption interface in Codemagic.
 
+{{<notebox>}}
+For security reasons, encrypted environment variables work only in the team where they were created. When moving an app from your personal account to a team or from one team to another, you should re-encrypt the variables.
+{{</notebox>}}
+
 1. Click open your app in Codemagic.
-2. Click **Secret variables** on the sidebar next to the YAML window (or click **Encrypt environment variables** on the right sidebar in the **Configuration as code** section if you are using the Flutter workflow editor).
-3. Paste the value of the variable in the field or upload it as a file.
+2. Click **Encrypt variables** on the YAML editor window (or click **Encrypt environment variables** on the right sidebar in the **Configuration as code** section if you are using the Flutter workflow editor).
+3. A popup window appears. Paste the value of the variable in the field or upload it as a file.
 4. Click **Encrypt**. 
 5. Copy the encrypted value and paste it as the value of the variable.
 
@@ -18,9 +22,7 @@ The encrypted value will look something like this:
 Encrypted(Z0FBQUFBQmRyY1FLWXIwVEhqdWphdjRhQ0xubkdoOGJ2bThkNmh4YmdXbFB3S2wyNTN2OERoV3c0YWU0OVBERG42d3Rfc2N0blNDX3FfblZxbUc4d2pWUHJBSVppbXNXNC04U1VqcGlnajZ2VnJVMVFWc3lZZ289)
 ```
 
-{{<notebox>}}
-Note that when you upload a file for encryption, it is encoded to `base64` and would have to be decoded during the build. If you want to encrypt a file (plaintext, JSON, plist), copy-paste the contents of it to the encryption interface and use the encrypted value in your configuration.
-{{</notebox>}}
+Note that when you upload a **file** for encryption, it is encoded to `base64` and would have to be decoded during the build. If you want to encrypt a file (plaintext, JSON, plist), copy-paste the contents of it to the encryption interface and use the encrypted value in your configuration.
 
 Writing the base64-encoded environment variable to a file can be done like this:
 

commit c885b0db656691deca6411f5a5979fc16286614f
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Jun 2 10:33:34 2021 +0300

    Typo in docs (#371)

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 64e0e29..d58b859 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -176,7 +176,7 @@ There are number of ways how you can pass the obtained build number to an Androi
 
 #### Get the build number in the Flutter workflow editor
 
-If you encrypted the content (not the file) of your gcloud service account credentials and added it as the environment variable `GCLOUD_SERVICE_ACCOUNT_CREDENTIALS`, you can call it immideately as a build argument to your android build command to increment the build number:
+If you encrypted the content (not the file) of your gcloud service account credentials and added it as the environment variable `GCLOUD_SERVICE_ACCOUNT_CREDENTIALS`, you can call it immediately as a build argument to your android build command to increment the build number:
 
 ```bash
 --build-number=$(($(google-play get-latest-build-number --package-name 'com.google.example') + 1))  # use your own package name

commit 6edd2645d2435f3d6f5086d25a14d892c09b8ad0
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Jun 1 18:52:28 2021 +0300

    Revert "revert algolia search"
    
    This reverts commit f63ade851df9ad36af650f19354e50f3782bd47b.

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 636e6b3..60e3ee5 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -18,3 +18,7 @@ jobs:
       - run: curl --location https://github.com/gohugoio/hugo/releases/download/v0.77.0/hugo_extended_0.77.0_Linux-64bit.tar.gz | tar -vxzO hugo > hugo && chmod a+x hugo
       - run: ./hugo --environment production --minify
       - run: ./hugo deploy --environment production --invalidateCDN true --maxDeletes -1
+
+      - run: yarn install
+      - name: Update search index
+        run: yarn run algolia ${{ secrets.ALGOLIA_ADMIN_KEY }}
\ No newline at end of file
diff --git a/.gitignore b/.gitignore
index c6d7e4b..7ac638b 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,4 @@
 /public/
 /resources/
 .DS_Store
+/node_modules/
diff --git a/algolia.js b/algolia.js
new file mode 100644
index 0000000..20d487a
--- /dev/null
+++ b/algolia.js
@@ -0,0 +1,9 @@
+const indexing = require('algolia-indexing')
+const fs = require('fs')
+
+const apiKey = process.argv[2]
+
+const credentials = { appId: '27CIRMYZIB', apiKey: apiKey, indexName: 'codemagic_docs' }
+const records = JSON.parse(fs.readFileSync('./public/index.json'))
+
+indexing.fullAtomic(credentials, records);
\ No newline at end of file
diff --git a/assets/js/search.js b/assets/js/search.js
index d7d5dbc..0747b93 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -1,35 +1,8 @@
-let fuse
 
-const fuseOptions = {
-    includeMatches: true,
-    findAllMatches: true,
-    includeScore: true,
-    threshold: 0,
-    ignoreLocation: true,
-    maxPatternLength: 32,
-    minMatchCharLength: 3,
-    useExtendedSearch: true,
-    keys: [
-        {
-            name: 'title',
-            weight: 15,
-        },
-        {
-            name: 'subtitle',
-            weight: 10,
-        },
-        {
-            name: 'content',
-            weight: 5,
-        },
-    ],
-}
+const algolia = algoliasearch("27CIRMYZIB", "7e88305c04e90188508daa6c89e5f4df").initIndex("codemagic_docs");
 
 $(document).ready(() => {
-    $.getJSON('/index.json', (data) => {
-        fuse = new Fuse(data, fuseOptions)
-        initSearchEvents()
-    })
+    initSearchEvents()
 })
 
 const initSearchEvents = () => {
@@ -92,10 +65,10 @@ const updateUrl = (query) =>
             (query ? '?q=' + encodeURIComponent(query) : ''),
     )
 
-const updateResults = (query) => {
+const updateResults = async (query) => {
     let result
     try {
-        result = getResults(query)
+        result = await getResults(query)
     } catch (error) {
         result = error
     }
@@ -108,116 +81,30 @@ const updateInputs = (query) => {
     query === null ? $inputs.trigger('blur') : query && $('.search').addClass('search--active')
 }
 
-const getResultHtml = (resultList, query) => {
-    if (!resultList) return null
+const getResultHtml = (algoliaResultList, query) => {
+    if (!algoliaResultList) return null
 
-    if (resultList instanceof Error) {
+    if (algoliaResultList instanceof Error) {
         return $('<div>', {
             class: 'no-results-message',
-            text: 'Invalid search query: ' + resultList.message,
+            text: 'Invalid search query: ' + algoliaResultList.message,
         })
     }
 
-    if (!resultList.length) {
+    if (!algoliaResultList.length) {
         return $('<div>', {
             class: 'no-results-message',
             text: 'No results matching "' + query + '"',
         })
     }
 
-    const orderByStartPosition = (a, b) => a.start - b.start
-
-    const collectSnippetPositions = (contentLength, all, p) => {
-        const charsBefore = 30
-        const charsAfter = 30
-        const maxSnippetLength = 200
-
-        const start = Math.max(p.start - charsBefore, 0)
-        const end = Math.min(p.start + p.length + charsAfter, contentLength)
-
-        const prev = all[all.length - 1]
-        const isOverlappingWithPrevious = prev && prev.start + prev.length > start
-        if (isOverlappingWithPrevious) {
-            const newLength = end - prev.start
-            if (newLength > maxSnippetLength) {
-                return all
-            }
-            prev.length = newLength
-            prev.keywords.push({ start: p.start - prev.start, length: p.length })
-        } else {
-            all.push({
-                start: start,
-                length: end - start,
-                keywords: [{ start: p.start - start, length: p.length }],
-            })
-        }
-
-        return all
-    }
-
-    const getSnippet = (content, s) => {
-        let c = content.substr(s.start, s.length + 1)
-        const m = c.match(new RegExp('|', 'g'))
-
-        const isStartOfContent = s.start === 0
-        const firstKw = s.keywords[0]
-        const start = isStartOfContent ? 0 : Math.min(firstKw.start, m ? c.indexOf(m[0]) + m[0].length : 0)
-        const lastKw = s.keywords[s.keywords.length - 1]
-
-        const isEndOfContent = s.start + s.length === content.length
-        const end = isEndOfContent
-            ? c.length + 1
-            : Math.max(lastKw.start + lastKw.length, m ? c.lastIndexOf(m[m.length - 1]) : c.length + 1)
-
-        c = c.substring(start, end)
-
-        return Object.assign({}, s, {
-            content: c,
-            isStart: isStartOfContent,
-            isEnd: isEndOfContent,
-            keywords: s.keywords.map((k) => {
-                return { start: k.start - start, length: k.length }
-            }),
-        })
-    }
-
-    const getContentSnippets = (contentPositions, content) => {
-        content = (content || '').trim()
-
-        return contentPositions
-            ? contentPositions
-                  .sort(orderByStartPosition)
-                  .reduce(collectSnippetPositions.bind(null, content.length), [])
-                  .map(getSnippet.bind(null, content))
-                  .slice(0, 3)
-            : [
-                  {
-                      isFirst: true,
-                      isLast: false,
-                      content: content.substring(0, 100),
-                      keywords: contentPositions,
-                  },
-              ]
-    }
-
     return $('<ul>', {
-        html: resultList.map((result) => {
-            const snippets = getContentSnippets(result.positions.content, result.item.content)
-
+        html: algoliaResultList.map((result) => {
             return $('<li>', {
                 html: [
-                    $('<a>', { text: result.item.title, href: result.item.uri }).markRanges(result.positions.title),
-                    $('<p>', { text: result.item.subtitle }),
-                    snippets
-                        ? $('<p>', {
-                              html: snippets.map((s) => {
-                                  return $('<span>', {
-                                      class: [s.isStart ? 'start' : '', s.isEnd ? 'end' : ''].join(' '),
-                                      text: s.content,
-                                  }).markRanges(s.keywords)
-                              }),
-                          })
-                        : null,
+                    $('<a>', { html: result._highlightResult.title.value, href: result.uri }),
+                    $('<p>', { html: result._highlightResult.subtitle.value }),
+                    $('<p>', { html: result._snippetResult.content.value}),
                 ],
             })
         }),
@@ -226,27 +113,13 @@ const getResultHtml = (resultList, query) => {
 
 const getResults = (query) =>
     query
-        ? fuse
-              // ' is a token for extended search needed to find items that include the value
-              // it prevents fuzzy search
-              .search(`'${query}`, {
-                  limit: 16,
-              })
-              .map((result) => {
-                  let positions = { title: [], subtitle: [], content: [] }
-                  result.matches.map((match) => {
-                      match.indices.map((index) => {
-                          positions[match.key].push({
-                              length: index[1] - index[0] + 1,
-                              start: index[0],
-                          })
-                      })
-                  })
-                  return {
-                      ...result,
-                      positions,
-                  }
-              })
+        ? algolia
+            .search(`'${query}`, {
+                highlightPreTag: '<mark data-markjs="true">',
+                highlightPostTag: '</mark>',
+            }).then((result) => {
+                return result.hits;
+            })
         : null
 
 const debounce = (func, wait, immediate) => {
diff --git a/layouts/partials/search.html b/layouts/partials/search.html
index ef6593a..2a8388f 100644
--- a/layouts/partials/search.html
+++ b/layouts/partials/search.html
@@ -1,9 +1,9 @@
-<script defer src="https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.min.js"></script>
 <script
     src="https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.min.js"
     integrity="sha384-iqnguDoMujGknA4B5Jk7pbSn7sb7M8Tc0zVsTNQXm629Xx00jGEpD9TsZXbfNjKO"
     crossorigin="anonymous"
 ></script>
+<script defer src="https://cdn.jsdelivr.net/npm/algoliasearch@4.5.1/dist/algoliasearch-lite.umd.js"></script>
 
 {{ $searchScript := resources.Get "js/search.js" | minify | fingerprint }}
 <script defer src="{{ $searchScript.RelPermalink }}" integrity="{{ $searchScript.Data.Integrity }}"></script>
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..386a963
--- /dev/null
+++ b/package.json
@@ -0,0 +1,10 @@
+{
+    "name": "codemagic-docs",
+    "version": "1.0.0",
+    "scripts": {
+        "algolia": "node algolia.js"
+    },
+    "devDependencies": {
+        "algolia-indexing": "^1.2.0"
+    }
+}
diff --git a/yarn.lock b/yarn.lock
new file mode 100644
index 0000000..0cbcf74
--- /dev/null
+++ b/yarn.lock
@@ -0,0 +1,1410 @@
+# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
+# yarn lockfile v1
+
+
+"@algolia/cache-browser-local-storage@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/cache-browser-local-storage/-/cache-browser-local-storage-4.2.0.tgz#45cc4be4c8fcd69cb98ebaa2e78a459a1cf6ba64"
+  integrity sha512-uji5zxBxwNu8qKtyqghg9lUsN0OOZ58NfRKk0Il4IZCcCo78E0KfT3Uxr7XiYCJMRnqIsvbKWf0xA67tYNBSbA==
+  dependencies:
+    "@algolia/cache-common" "4.2.0"
+
+"@algolia/cache-common@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/cache-common/-/cache-common-4.2.0.tgz#ada18e559f205a63eaf60c21a035b3d41f0f8d7d"
+  integrity sha512-ATBQCBBLt4hPNKIKn06y5zqZPWQmI+PBF0287rFVj8BGmEr82BzoKMa5XIkvgpjtxwx6c5nSKxZaYkEFqtrxtQ==
+
+"@algolia/cache-in-memory@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/cache-in-memory/-/cache-in-memory-4.2.0.tgz#82f07cc99aee9e20a96bdd69c635bdd2dc4288f1"
+  integrity sha512-NsVOR6ixK6jvurLW+1+h80/9N18QjU/AXdAZJoVeu4JXb2NPuej4Ld1zXFYvz/ypCFQE+dU8haaQnJIuTbD4vg==
+  dependencies:
+    "@algolia/cache-common" "4.2.0"
+
+"@algolia/client-account@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/client-account/-/client-account-4.2.0.tgz#7abf3dd8922fde1735b1e0d19e8b0bdbf64a1435"
+  integrity sha512-xz5OXU9DQ9pegABAgmTPV23f9tXmbUPO3w5J/b2QcP6jzfNnNfW3CkTwywgNLr16jIKLxmmClN5yqyJp6XmHBA==
+  dependencies:
+    "@algolia/client-common" "4.2.0"
+    "@algolia/client-search" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+"@algolia/client-analytics@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/client-analytics/-/client-analytics-4.2.0.tgz#11e9331fed5bbaa6668d71c890dff60c4af1c741"
+  integrity sha512-UNuZQOYuKPYl5fCgm1HZzoZ6Ewxtqrc4Cv5Dhdy5VatIV6lYEWOtdn+g+5qvWFGb6fv6688dg5EVJnXZNvVVZQ==
+  dependencies:
+    "@algolia/client-common" "4.2.0"
+    "@algolia/client-search" "4.2.0"
+    "@algolia/requester-common" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+"@algolia/client-common@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/client-common/-/client-common-4.2.0.tgz#bf8a550dc51927bb103de9aab7e6ac4d90a9cf0d"
+  integrity sha512-KxZTWXf9FSl188iTAz9rhTMeBtbF/uaJcxw99jbWHxyK9KR87obZzTlTFYnIWLEBaTG1MmlgPSsDogAE4CHLOQ==
+  dependencies:
+    "@algolia/requester-common" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+"@algolia/client-recommendation@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/client-recommendation/-/client-recommendation-4.2.0.tgz#bd49b5b9601fe4220ba6db0fc397d816584ee4ec"
+  integrity sha512-5QwvUJ5hpZVDz99o+EPgMg+z7maLWOZGUrUt5z8s+esl+taTb2h1PtyLpikAvC2d/BjYCEKyObTiRDYdzhqcoA==
+  dependencies:
+    "@algolia/client-common" "4.2.0"
+    "@algolia/requester-common" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+"@algolia/client-search@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/client-search/-/client-search-4.2.0.tgz#4917499cac66a5cca7f2ca9d1334bffc96a79b17"
+  integrity sha512-2SAz1/undr+RM7FNj3G0taWFG+8QEMQcYHxUhoOJKMIY9sPQN7UNCJRHYsulM+/g45oF67tXX09NSt14ewen0Q==
+  dependencies:
+    "@algolia/client-common" "4.2.0"
+    "@algolia/requester-common" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+"@algolia/logger-common@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/logger-common/-/logger-common-4.2.0.tgz#dd373b267594656d72a1563f6621ab7f727c4373"
+  integrity sha512-VQcJE5lr78oc+lbcGfPonCDTRwLNSxwtPrUP6Tj+CoDedsVHZhODAlHzLHhxc4vuyrU7xomvKJLqTUgfDNxzXQ==
+
+"@algolia/logger-console@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/logger-console/-/logger-console-4.2.0.tgz#10e18ab75f60fd0f2e2b16cb9a1b0bcc947087f2"
+  integrity sha512-/1GE43jY0xKfJUi5ZGtEqq+oTyOzs+EgGKj7/zEHIpUc5NyxokIPWTqt3q6pzGSWFEkNbaA1gAVgXM1zCMVWYw==
+  dependencies:
+    "@algolia/logger-common" "4.2.0"
+
+"@algolia/requester-browser-xhr@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/requester-browser-xhr/-/requester-browser-xhr-4.2.0.tgz#c2a7982bef940e1749f2ba2aa04e3f8a971b6a78"
+  integrity sha512-+PZKOe+UBdZYQg/h/8AbKQ2Ha4uDeoLnpZFv00IMr/elym0m2hl76xAeIBiIqGYsLCmGybGBFUF9n1imsKJUJQ==
+  dependencies:
+    "@algolia/requester-common" "4.2.0"
+
+"@algolia/requester-common@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/requester-common/-/requester-common-4.2.0.tgz#df67a940516d5a313bbf79bcbceddadfff9f8ce2"
+  integrity sha512-SSKPRM/7UP54/dxyK6EYt4p6nTeJxYb1P6xVh/Ic6noBTCfqg5vBEKDa1DZD5MBtCvABoODd97UOfAo3ECG/jg==
+
+"@algolia/requester-node-http@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/requester-node-http/-/requester-node-http-4.2.0.tgz#e26efd3d630b7c988bcc9cda3a8ee68ab4a168dd"
+  integrity sha512-mRQgSM8qrMfjXaBnMjTmymR0NKwbr82Qwh1a5TgYyzMOBuRO5nRikawvTVgpNaEnQS0uesIiwd2ohOJ2gNu6oA==
+  dependencies:
+    "@algolia/requester-common" "4.2.0"
+
+"@algolia/transporter@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/transporter/-/transporter-4.2.0.tgz#9e6bea3304f1e6f4a64a3d7c1f9de047ba89056f"
+  integrity sha512-7CiwMYsEhrHySA8q70euIYOyhGtz/wz+MEC3nwGONBC82nGI6ntVqTFhCkpLIJqqbGbNlFgnCpwnLmSqLhRP3A==
+  dependencies:
+    "@algolia/cache-common" "4.2.0"
+    "@algolia/logger-common" "4.2.0"
+    "@algolia/requester-common" "4.2.0"
+
+"@nodelib/fs.scandir@2.1.4":
+  version "2.1.4"
+  resolved "https://registry.yarnpkg.com/@nodelib/fs.scandir/-/fs.scandir-2.1.4.tgz#d4b3549a5db5de2683e0c1071ab4f140904bbf69"
+  integrity sha512-33g3pMJk3bg5nXbL/+CY6I2eJDzZAni49PfJnL5fghPTggPvBd/pFNSgJsdAgWptuFu7qq/ERvOYFlhvsLTCKA==
+  dependencies:
+    "@nodelib/fs.stat" "2.0.4"
+    run-parallel "^1.1.9"
+
+"@nodelib/fs.stat@2.0.4", "@nodelib/fs.stat@^2.0.2":
+  version "2.0.4"
+  resolved "https://registry.yarnpkg.com/@nodelib/fs.stat/-/fs.stat-2.0.4.tgz#a3f2dd61bab43b8db8fa108a121cfffe4c676655"
+  integrity sha512-IYlHJA0clt2+Vg7bccq+TzRdJvv19c2INqBSsoOLp1je7xjtr7J26+WXR72MCdvU9q1qTzIWDfhMf+DRvQJK4Q==
+
+"@nodelib/fs.walk@^1.2.3":
+  version "1.2.6"
+  resolved "https://registry.yarnpkg.com/@nodelib/fs.walk/-/fs.walk-1.2.6.tgz#cce9396b30aa5afe9e3756608f5831adcb53d063"
+  integrity sha512-8Broas6vTtW4GIXTAHDoE32hnN2M5ykgCpWGbuXHQ15vEMqr23pB76e/GZcYsZCHALv50ktd24qhEyKr6wBtow==
+  dependencies:
+    "@nodelib/fs.scandir" "2.1.4"
+    fastq "^1.6.0"
+
+"@sindresorhus/is@^4.0.0":
+  version "4.0.1"
+  resolved "https://registry.yarnpkg.com/@sindresorhus/is/-/is-4.0.1.tgz#d26729db850fa327b7cacc5522252194404226f5"
+  integrity sha512-Qm9hBEBu18wt1PO2flE7LPb30BHMQt1eQgbV76YntdNk73XZGpn3izvGTYxbGgzXKgbCjiia0uxTd3aTNQrY/g==
+
+"@szmarczak/http-timer@^4.0.5":
+  version "4.0.5"
+  resolved "https://registry.yarnpkg.com/@szmarczak/http-timer/-/http-timer-4.0.5.tgz#bfbd50211e9dfa51ba07da58a14cdfd333205152"
+  integrity sha512-PyRA9sm1Yayuj5OIoJ1hGt2YISX45w9WcFbh6ddT0Z/0yaFxOtGLInr4jUfU1EAFVs0Yfyfev4RNwBlUaHdlDQ==
+  dependencies:
+    defer-to-connect "^2.0.0"
+
+"@types/cacheable-request@^6.0.1":
+  version "6.0.1"
+  resolved "https://registry.yarnpkg.com/@types/cacheable-request/-/cacheable-request-6.0.1.tgz#5d22f3dded1fd3a84c0bbeb5039a7419c2c91976"
+  integrity sha512-ykFq2zmBGOCbpIXtoVbz4SKY5QriWPh3AjyU4G74RYbtt5yOc5OfaY75ftjg7mikMOla1CTGpX3lLbuJh8DTrQ==
+  dependencies:
+    "@types/http-cache-semantics" "*"
+    "@types/keyv" "*"
+    "@types/node" "*"
+    "@types/responselike" "*"
+
+"@types/http-cache-semantics@*":
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/@types/http-cache-semantics/-/http-cache-semantics-4.0.0.tgz#9140779736aa2655635ee756e2467d787cfe8a2a"
+  integrity sha512-c3Xy026kOF7QOTn00hbIllV1dLR9hG9NkSrLQgCVs8NF6sBU+VGWjD3wLPhmh1TYAc7ugCFsvHYMN4VcBN1U1A==
+
+"@types/keyv@*":
+  version "3.1.1"
+  resolved "https://registry.yarnpkg.com/@types/keyv/-/keyv-3.1.1.tgz#e45a45324fca9dab716ab1230ee249c9fb52cfa7"
+  integrity sha512-MPtoySlAZQ37VoLaPcTHCu1RWJ4llDkULYZIzOYxlhxBqYPB0RsRlmMU0R6tahtFe27mIdkHV+551ZWV4PLmVw==
+  dependencies:
+    "@types/node" "*"
+
+"@types/node@*":
+  version "15.3.1"
+  resolved "https://registry.yarnpkg.com/@types/node/-/node-15.3.1.tgz#23a06b87eedb524016616e886b116b8fdcb180af"
+  integrity sha512-weaeiP4UF4XgF++3rpQhpIJWsCTS4QJw5gvBhQu6cFIxTwyxWIe3xbnrY/o2lTCQ0lsdb8YIUDUvLR4Vuz5rbw==
+
+"@types/responselike@*", "@types/responselike@^1.0.0":
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/@types/responselike/-/responselike-1.0.0.tgz#251f4fe7d154d2bad125abe1b429b23afd262e29"
+  integrity sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==
+  dependencies:
+    "@types/node" "*"
+
+aggregate-error@^3.0.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/aggregate-error/-/aggregate-error-3.1.0.tgz#92670ff50f5359bdb7a3e0d40d0ec30c5737687a"
+  integrity sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==
+  dependencies:
+    clean-stack "^2.0.0"
+    indent-string "^4.0.0"
+
+algolia-indexing@^1.2.0:
+  version "1.2.0"
+  resolved "https://registry.yarnpkg.com/algolia-indexing/-/algolia-indexing-1.2.0.tgz#303c38a96327f1c67c636904c7a3ce0a6c064607"
+  integrity sha512-hLzlZlBxzcvsPm0xczuz3Hcpg6Vvi3T9oBWrWiU0koUnSumoON2/4MK+o0RTtbwV+VqB13HCnS1+BgvfE52Lgg==
+  dependencies:
+    algoliasearch "4.2.0"
+    firost "2.6.1"
+    golgoth "2.0.0"
+    node-object-hash "2.0.0"
+
+algoliasearch@4.2.0:
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/algoliasearch/-/algoliasearch-4.2.0.tgz#dd81a1a0c57eb9f74af6db70b0c11f256692d1e6"
+  integrity sha512-CgbyDBGMSzNISBFezPt68xAseknork+wNe/Oour1Hluk4OwbtobysRawFf93ZbLSQw/KbeGlVmVAvujeVIVdnQ==
+  dependencies:
+    "@algolia/cache-browser-local-storage" "4.2.0"
+    "@algolia/cache-common" "4.2.0"
+    "@algolia/cache-in-memory" "4.2.0"
+    "@algolia/client-account" "4.2.0"
+    "@algolia/client-analytics" "4.2.0"
+    "@algolia/client-common" "4.2.0"
+    "@algolia/client-recommendation" "4.2.0"
+    "@algolia/client-search" "4.2.0"
+    "@algolia/logger-common" "4.2.0"
+    "@algolia/logger-console" "4.2.0"
+    "@algolia/requester-browser-xhr" "4.2.0"
+    "@algolia/requester-common" "4.2.0"
+    "@algolia/requester-node-http" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+ansi-escapes@^4.2.1:
+  version "4.3.2"
+  resolved "https://registry.yarnpkg.com/ansi-escapes/-/ansi-escapes-4.3.2.tgz#6b2291d1db7d98b6521d5f1efa42d0f3a9feb65e"
+  integrity sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==
+  dependencies:
+    type-fest "^0.21.3"
+
+ansi-regex@^5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-5.0.0.tgz#388539f55179bf39339c81af30a654d69f87cb75"
+  integrity sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==
+
+ansi-styles@^4.1.0:
+  version "4.3.0"
+  resolved "https://registry.yarnpkg.com/ansi-styles/-/ansi-styles-4.3.0.tgz#edd803628ae71c04c85ae7a0906edad34b648937"
+  integrity sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==
+  dependencies:
+    color-convert "^2.0.1"
+
+anymatch@~3.1.1:
+  version "3.1.2"
+  resolved "https://registry.yarnpkg.com/anymatch/-/anymatch-3.1.2.tgz#c0557c096af32f106198f4f4e2a383537e378716"
+  integrity sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==
+  dependencies:
+    normalize-path "^3.0.0"
+    picomatch "^2.0.4"
+
+array-union@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/array-union/-/array-union-2.1.0.tgz#b798420adbeb1de828d84acd8a2e23d3efe85e8d"
+  integrity sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==
+
+at-least-node@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/at-least-node/-/at-least-node-1.0.0.tgz#602cd4b46e844ad4effc92a8011a3c46e0238dc2"
+  integrity sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==
+
+balanced-match@^1.0.0:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.2.tgz#e83e3a7e3f300b34cb9d87f615fa0cbf357690ee"
+  integrity sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==
+
+base64-js@^1.3.1:
+  version "1.5.1"
+  resolved "https://registry.yarnpkg.com/base64-js/-/base64-js-1.5.1.tgz#1b1b440160a5bf7ad40b650f095963481903930a"
+  integrity sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==
+
+binary-extensions@^2.0.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/binary-extensions/-/binary-extensions-2.2.0.tgz#75f502eeaf9ffde42fc98829645be4ea76bd9e2d"
+  integrity sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==
+
+bl@^4.0.3:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/bl/-/bl-4.1.0.tgz#451535264182bec2fbbc83a62ab98cf11d9f7b3a"
+  integrity sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==
+  dependencies:
+    buffer "^5.5.0"
+    inherits "^2.0.4"
+    readable-stream "^3.4.0"
+
+brace-expansion@^1.1.7:
+  version "1.1.11"
+  resolved "https://registry.yarnpkg.com/brace-expansion/-/brace-expansion-1.1.11.tgz#3c7fcbf529d87226f3d2f52b966ff5271eb441dd"
+  integrity sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==
+  dependencies:
+    balanced-match "^1.0.0"
+    concat-map "0.0.1"
+
+braces@^3.0.1, braces@~3.0.2:
+  version "3.0.2"
+  resolved "https://registry.yarnpkg.com/braces/-/braces-3.0.2.tgz#3454e1a462ee8d599e236df336cd9ea4f8afe107"
+  integrity sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==
+  dependencies:
+    fill-range "^7.0.1"
+
+buffer@^5.5.0:
+  version "5.7.1"
+  resolved "https://registry.yarnpkg.com/buffer/-/buffer-5.7.1.tgz#ba62e7c13133053582197160851a8f648e99eed0"
+  integrity sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==
+  dependencies:
+    base64-js "^1.3.1"
+    ieee754 "^1.1.13"
+
+cacheable-lookup@^5.0.3:
+  version "5.0.4"
+  resolved "https://registry.yarnpkg.com/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz#5a6b865b2c44357be3d5ebc2a467b032719a7005"
+  integrity sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==
+
+cacheable-request@^7.0.1:
+  version "7.0.1"
+  resolved "https://registry.yarnpkg.com/cacheable-request/-/cacheable-request-7.0.1.tgz#062031c2856232782ed694a257fa35da93942a58"
+  integrity sha512-lt0mJ6YAnsrBErpTMWeu5kl/tg9xMAWjavYTN6VQXM1A/teBITuNcccXsCxF0tDQQJf9DfAaX5O4e0zp0KlfZw==
+  dependencies:
+    clone-response "^1.0.2"
+    get-stream "^5.1.0"
+    http-cache-semantics "^4.0.0"
+    keyv "^4.0.0"
+    lowercase-keys "^2.0.0"
+    normalize-url "^4.1.0"
+    responselike "^2.0.0"
+
+callsites@3.1.0, callsites@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73"
+  integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
+
+chalk@4.1.0:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/chalk/-/chalk-4.1.0.tgz#4e14870a618d9e2edd97dd8345fd9d9dc315646a"
+  integrity sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==
+  dependencies:
+    ansi-styles "^4.1.0"
+    supports-color "^7.1.0"
+
+chalk@^4.1.0:
+  version "4.1.1"
+  resolved "https://registry.yarnpkg.com/chalk/-/chalk-4.1.1.tgz#c80b3fab28bf6371e6863325eee67e618b77e6ad"
+  integrity sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==
+  dependencies:
+    ansi-styles "^4.1.0"
+    supports-color "^7.1.0"
+
+chardet@^0.7.0:
+  version "0.7.0"
+  resolved "https://registry.yarnpkg.com/chardet/-/chardet-0.7.0.tgz#90094849f0937f2eedc2425d0d28a9e5f0cbad9e"
+  integrity sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==
+
+chokidar@3.5.0:
+  version "3.5.0"
+  resolved "https://registry.yarnpkg.com/chokidar/-/chokidar-3.5.0.tgz#458a4816a415e9d3b3caa4faec2b96a6935a9e65"
+  integrity sha512-JgQM9JS92ZbFR4P90EvmzNpSGhpPBGBSj10PILeDyYFwp4h2/D9OM03wsJ4zW1fEp4ka2DGrnUeD7FuvQ2aZ2Q==
+  dependencies:
+    anymatch "~3.1.1"
+    braces "~3.0.2"
+    glob-parent "~5.1.0"
+    is-binary-path "~2.1.0"
+    is-glob "~4.0.1"
+    normalize-path "~3.0.0"
+    readdirp "~3.5.0"
+  optionalDependencies:
+    fsevents "~2.3.1"
+
+clean-stack@^2.0.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/clean-stack/-/clean-stack-2.2.0.tgz#ee8472dbb129e727b31e8a10a427dee9dfe4008b"
+  integrity sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==
+
+clear-module@4.1.1:
+  version "4.1.1"
+  resolved "https://registry.yarnpkg.com/clear-module/-/clear-module-4.1.1.tgz#bf8ba3b62eb70ee1e0adec90589741425cf32db8"
+  integrity sha512-ng0E7LeODcT3QkazOckzZqbca+JByQy/Q2Z6qO24YsTp+pLxCfohGz2gJYJqZS0CWTX3LEUiHOqe5KlYeUbEMw==
+  dependencies:
+    parent-module "^2.0.0"
+    resolve-from "^5.0.0"
+
+cli-cursor@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/cli-cursor/-/cli-cursor-3.1.0.tgz#264305a7ae490d1d03bf0c9ba7c925d1753af307"
+  integrity sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==
+  dependencies:
+    restore-cursor "^3.1.0"
+
+cli-spinners@^2.5.0:
+  version "2.6.0"
+  resolved "https://registry.yarnpkg.com/cli-spinners/-/cli-spinners-2.6.0.tgz#36c7dc98fb6a9a76bd6238ec3f77e2425627e939"
+  integrity sha512-t+4/y50K/+4xcCRosKkA7W4gTr1MySvLV0q+PxmG7FJ5g+66ChKurYjxBCjHggHH3HA5Hh9cy+lcUGWDqVH+4Q==
+
+cli-width@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/cli-width/-/cli-width-3.0.0.tgz#a2f48437a2caa9a22436e794bf071ec9e61cedf6"
+  integrity sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw==
+
+clone-response@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/clone-response/-/clone-response-1.0.2.tgz#d1dc973920314df67fbeb94223b4ee350239e96b"
+  integrity sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=
+  dependencies:
+    mimic-response "^1.0.0"
+
+clone@^1.0.2:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/clone/-/clone-1.0.4.tgz#da309cc263df15994c688ca902179ca3c7cd7c7e"
+  integrity sha1-2jCcwmPfFZlMaIypAheco8fNfH4=
+
+color-convert@^2.0.1:
+  version "2.0.1"
+  resolved "https://registry.yarnpkg.com/color-convert/-/color-convert-2.0.1.tgz#72d3a68d598c9bdb3af2ad1e84f21d896abd4de3"
+  integrity sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==
+  dependencies:
+    color-name "~1.1.4"
+
+color-name@~1.1.4:
+  version "1.1.4"
+  resolved "https://registry.yarnpkg.com/color-name/-/color-name-1.1.4.tgz#c2a09a87acbde69543de6f63fa3995c826c536a2"
+  integrity sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==
+
+concat-map@0.0.1:
+  version "0.0.1"
+  resolved "https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b"
+  integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=
+
+convert-hrtime@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/convert-hrtime/-/convert-hrtime-3.0.0.tgz#62c7593f5809ca10be8da858a6d2f702bcda00aa"
+  integrity sha512-7V+KqSvMiHp8yWDuwfww06XleMWVVB9b9tURBx+G7UTADuo5hYPuowKloz4OzOqbPezxgo+fdQ1522WzPG4OeA==
+
+cross-spawn@^7.0.3:
+  version "7.0.3"
+  resolved "https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.3.tgz#f73a85b9d5d41d045551c177e2882d4ac85728a6"
+  integrity sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==
+  dependencies:
+    path-key "^3.1.0"
+    shebang-command "^2.0.0"
+    which "^2.0.1"
+
+crypto-random-string@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/crypto-random-string/-/crypto-random-string-2.0.0.tgz#ef2a7a966ec11083388369baa02ebead229b30d5"
+  integrity sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==
+
+dayjs@1.9.6:
+  version "1.9.6"
+  resolved "https://registry.yarnpkg.com/dayjs/-/dayjs-1.9.6.tgz#6f0c77d76ac1ff63720dd1197e5cb87b67943d70"
+  integrity sha512-HngNLtPEBWRo8EFVmHFmSXAjtCX8rGNqeXQI0Gh7wCTSqwaKgPIDqu9m07wABVopNwzvOeCb+2711vQhDlcIXw==
+
+decode-uri-component@^0.2.0:
+  version "0.2.0"
+  resolved "https://registry.yarnpkg.com/decode-uri-component/-/decode-uri-component-0.2.0.tgz#eb3913333458775cb84cd1a1fae062106bb87545"
+  integrity sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=
+
+decompress-response@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.yarnpkg.com/decompress-response/-/decompress-response-6.0.0.tgz#ca387612ddb7e104bd16d85aab00d5ecf09c66fc"
+  integrity sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==
+  dependencies:
+    mimic-response "^3.1.0"
+
+dedent@0.7.0:
+  version "0.7.0"
+  resolved "https://registry.yarnpkg.com/dedent/-/dedent-0.7.0.tgz#2495ddbaf6eb874abb0e1be9df22d2e5a544326c"
+  integrity sha1-JJXduvbrh0q7Dhvp3yLS5aVEMmw=
+
+defaults@^1.0.3:
+  version "1.0.3"
+  resolved "https://registry.yarnpkg.com/defaults/-/defaults-1.0.3.tgz#c656051e9817d9ff08ed881477f3fe4019f3ef7d"
+  integrity sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=
+  dependencies:
+    clone "^1.0.2"
+
+defer-to-connect@^2.0.0:
+  version "2.0.1"
+  resolved "https://registry.yarnpkg.com/defer-to-connect/-/defer-to-connect-2.0.1.tgz#8016bdb4143e4632b77a3449c6236277de520587"
+  integrity sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==
+
+del@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.yarnpkg.com/del/-/del-6.0.0.tgz#0b40d0332cea743f1614f818be4feb717714c952"
+  integrity sha512-1shh9DQ23L16oXSZKB2JxpL7iMy2E0S9d517ptA1P8iw0alkPtQcrKH7ru31rYtKwF499HkTu+DRzq3TCKDFRQ==
+  dependencies:
+    globby "^11.0.1"
+    graceful-fs "^4.2.4"
+    is-glob "^4.0.1"
+    is-path-cwd "^2.2.0"
+    is-path-inside "^3.0.2"
+    p-map "^4.0.0"
+    rimraf "^3.0.2"
+    slash "^3.0.0"
+
+dir-glob@^3.0.1:
+  version "3.0.1"
+  resolved "https://registry.yarnpkg.com/dir-glob/-/dir-glob-3.0.1.tgz#56dbf73d992a4a93ba1584f4534063fd2e41717f"
+  integrity sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==
+  dependencies:
+    path-type "^4.0.0"
+
+emoji-regex@^8.0.0:
+  version "8.0.0"
+  resolved "https://registry.yarnpkg.com/emoji-regex/-/emoji-regex-8.0.0.tgz#e818fd69ce5ccfcb404594f842963bf53164cc37"
+  integrity sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==
+
+end-of-stream@^1.1.0:
+  version "1.4.4"
+  resolved "https://registry.yarnpkg.com/end-of-stream/-/end-of-stream-1.4.4.tgz#5ae64a5f45057baf3626ec14da0ca5e4b2431eb0"
+  integrity sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==
+  dependencies:
+    once "^1.4.0"
+
+escape-string-regexp@^1.0.5:
+  version "1.0.5"
+  resolved "https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4"
+  integrity sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=
+
+esm@3.2.25:
+  version "3.2.25"
+  resolved "https://registry.yarnpkg.com/esm/-/esm-3.2.25.tgz#342c18c29d56157688ba5ce31f8431fbb795cc10"
+  integrity sha512-U1suiZ2oDVWv4zPO56S0NcR5QriEahGtdN2OR6FiOG4WJvcjBVFB0qI4+eKoWFH483PKGuLuu6V8Z4T5g63UVA==
+
+eventemitter2@6.4.3:
+  version "6.4.3"
+  resolved "https://registry.yarnpkg.com/eventemitter2/-/eventemitter2-6.4.3.tgz#35c563619b13f3681e7eb05cbdaf50f56ba58820"
+  integrity sha512-t0A2msp6BzOf+QAcI6z9XMktLj52OjGQg+8SJH6v5+3uxNpWYRR3wQmfA+6xtMU9kOC59qk9licus5dYcrYkMQ==
+
+execa@5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/execa/-/execa-5.0.0.tgz#4029b0007998a841fbd1032e5f4de86a3c1e3376"
+  integrity sha512-ov6w/2LCiuyO4RLYGdpFGjkcs0wMTgGE8PrkTHikeUy5iJekXyPIKUjifk5CsE0pt7sMCrMZ3YNqoCj6idQOnQ==
+  dependencies:
+    cross-spawn "^7.0.3"
+    get-stream "^6.0.0"
+    human-signals "^2.1.0"
+    is-stream "^2.0.0"
+    merge-stream "^2.0.0"
+    npm-run-path "^4.0.1"
+    onetime "^5.1.2"
+    signal-exit "^3.0.3"
+    strip-final-newline "^2.0.0"
+
+external-editor@^3.0.3:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/external-editor/-/external-editor-3.1.0.tgz#cb03f740befae03ea4d283caed2741a83f335495"
+  integrity sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==
+  dependencies:
+    chardet "^0.7.0"
+    iconv-lite "^0.4.24"
+    tmp "^0.0.33"
+
+fast-glob@^3.1.1:
+  version "3.2.5"
+  resolved "https://registry.yarnpkg.com/fast-glob/-/fast-glob-3.2.5.tgz#7939af2a656de79a4f1901903ee8adcaa7cb9661"
+  integrity sha512-2DtFcgT68wiTTiwZ2hNdJfcHNke9XOfnwmBRWXhmeKM8rF0TGwmC/Qto3S7RoZKp5cilZbxzO5iTNTQsJ+EeDg==
+  dependencies:
+    "@nodelib/fs.stat" "^2.0.2"
+    "@nodelib/fs.walk" "^1.2.3"
+    glob-parent "^5.1.0"
+    merge2 "^1.3.0"
+    micromatch "^4.0.2"
+    picomatch "^2.2.1"
+
+fastq@^1.6.0:
+  version "1.11.0"
+  resolved "https://registry.yarnpkg.com/fastq/-/fastq-1.11.0.tgz#bb9fb955a07130a918eb63c1f5161cc32a5d0858"
+  integrity sha512-7Eczs8gIPDrVzT+EksYBcupqMyxSHXXrHOLRRxU2/DicV8789MRBRR8+Hc2uWzUupOs4YS4JzBmBxjjCVBxD/g==
+  dependencies:
+    reusify "^1.0.4"
+
+figures@^3.0.0:
+  version "3.2.0"
+  resolved "https://registry.yarnpkg.com/figures/-/figures-3.2.0.tgz#625c18bd293c604dc4a8ddb2febf0c88341746af"
+  integrity sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==
+  dependencies:
+    escape-string-regexp "^1.0.5"
+
+fill-range@^7.0.1:
+  version "7.0.1"
+  resolved "https://registry.yarnpkg.com/fill-range/-/fill-range-7.0.1.tgz#1919a6a7c75fe38b2c7c77e5198535da9acdda40"
+  integrity sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==
+  dependencies:
+    to-regex-range "^5.0.1"
+
+find-up@5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/find-up/-/find-up-5.0.0.tgz#4c92819ecb7083561e4f4a240a86be5198f536fc"
+  integrity sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==
+  dependencies:
+    locate-path "^6.0.0"
+    path-exists "^4.0.0"
+
+firost@2.6.1:
+  version "2.6.1"
+  resolved "https://registry.yarnpkg.com/firost/-/firost-2.6.1.tgz#138873e3c99dd3dc0ca8d1a04a5a23136237a4d3"
+  integrity sha512-WQN2DyL8f07YVcq/Sqi+gIZea5prqvzS0E8FqTskyJ8zhScGyCcUXLXc2pKcN5gSKgQorK1VuDScErdT+gtM8g==
+  dependencies:
+    callsites "3.1.0"
+    chokidar "3.5.0"
+    clear-module "4.1.1"
+    eventemitter2 "6.4.3"
+    execa "5.0.0"
+    find-up "5.0.0"
+    fs-extra "9.0.1"
+    globby "11.0.1"
+    golgoth "2.0.0"
+    inquirer "7.3.3"
+    is-glob "4.0.1"
+    json-stable-stringify "1.0.1"
+    nanoid "3.1.20"
+    normalize-url "5.3.0"
+    ora "5.2.0"
+    std-mocks "1.0.1"
+    strip-ansi "6.0.0"
+    tempy "1.0.0"
+    untildify "4.0.0"
+    which "2.0.2"
+
+flat@5.0.2:
+  version "5.0.2"
+  resolved "https://registry.yarnpkg.com/flat/-/flat-5.0.2.tgz#8ca6fe332069ffa9d324c327198c598259ceb241"
+  integrity sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ==
+
+fs-extra@9.0.1:
+  version "9.0.1"
+  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-9.0.1.tgz#910da0062437ba4c39fedd863f1675ccfefcb9fc"
+  integrity sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==
+  dependencies:
+    at-least-node "^1.0.0"
+    graceful-fs "^4.2.0"
+    jsonfile "^6.0.1"
+    universalify "^1.0.0"
+
+fs.realpath@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f"
+  integrity sha1-FQStJSMVjKpA20onh8sBQRmU6k8=
+
+fsevents@~2.3.1:
+  version "2.3.2"
+  resolved "https://registry.yarnpkg.com/fsevents/-/fsevents-2.3.2.tgz#8a526f78b8fdf4623b709e0b975c52c24c02fd1a"
+  integrity sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==
+
+get-stream@^5.1.0:
+  version "5.2.0"
+  resolved "https://registry.yarnpkg.com/get-stream/-/get-stream-5.2.0.tgz#4966a1795ee5ace65e706c4b7beb71257d6e22d3"
+  integrity sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==
+  dependencies:
+    pump "^3.0.0"
+
+get-stream@^6.0.0:
+  version "6.0.1"
+  resolved "https://registry.yarnpkg.com/get-stream/-/get-stream-6.0.1.tgz#a262d8eef67aced57c2852ad6167526a43cbf7b7"
+  integrity sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==
+
+glob-parent@^5.1.0, glob-parent@~5.1.0:
+  version "5.1.2"
+  resolved "https://registry.yarnpkg.com/glob-parent/-/glob-parent-5.1.2.tgz#869832c58034fe68a4093c17dc15e8340d8401c4"
+  integrity sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==
+  dependencies:
+    is-glob "^4.0.1"
+
+glob@^7.1.3:
+  version "7.1.7"
+  resolved "https://registry.yarnpkg.com/glob/-/glob-7.1.7.tgz#3b193e9233f01d42d0b3f78294bbeeb418f94a90"
+  integrity sha512-OvD9ENzPLbegENnYP5UUfJIirTg4+XwMWGaQfQTY0JenxNvvIKP3U3/tAQSPIu/lHxXYSZmpXlUHeqAIdKzBLQ==
+  dependencies:
+    fs.realpath "^1.0.0"
+    inflight "^1.0.4"
+    inherits "2"
+    minimatch "^3.0.4"
+    once "^1.3.0"
+    path-is-absolute "^1.0.0"
+
+globby@11.0.1:
+  version "11.0.1"
+  resolved "https://registry.yarnpkg.com/globby/-/globby-11.0.1.tgz#9a2bf107a068f3ffeabc49ad702c79ede8cfd357"
+  integrity sha512-iH9RmgwCmUJHi2z5o2l3eTtGBtXek1OYlHrbcxOYugyHLmAsZrPj43OtHThd62Buh/Vv6VyCBD2bdyWcGNQqoQ==
+  dependencies:
+    array-union "^2.1.0"
+    dir-glob "^3.0.1"
+    fast-glob "^3.1.1"
+    ignore "^5.1.4"
+    merge2 "^1.3.0"
+    slash "^3.0.0"
+
+globby@^11.0.1:
+  version "11.0.3"
+  resolved "https://registry.yarnpkg.com/globby/-/globby-11.0.3.tgz#9b1f0cb523e171dd1ad8c7b2a9fb4b644b9593cb"
+  integrity sha512-ffdmosjA807y7+lA1NM0jELARVmYul/715xiILEjo3hBLPTcirgQNnXECn5g3mtR8TOLCVbkfua1Hpen25/Xcg==
+  dependencies:
+    array-union "^2.1.0"
+    dir-glob "^3.0.1"
+    fast-glob "^3.1.1"
+    ignore "^5.1.4"
+    merge2 "^1.3.0"
+    slash "^3.0.0"
+
+golgoth@2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/golgoth/-/golgoth-2.0.0.tgz#29bb68398b57c4558fca2cc57f2ddcdf1bf03323"
+  integrity sha512-LJmQuGMdm+Hh7b8UBpstnfhjswzLA30WfKHPvMm+NTZUSq0y4YQ3mr3Nbj49Qs9sac2DT5Qw99g2djfvdyeilA==
+  dependencies:
+    chalk "4.1.0"
+    dayjs "1.9.6"
+    dedent "0.7.0"
+    esm "3.2.25"
+    flat "5.0.2"
+    got "11.8.0"
+    lodash "4.17.20"
+    p-all "3.0.0"
+    p-map "4.0.0"
+    p-map-series "2.1.0"
+    p-props "4.0.0"
+    pify "5.0.0"
+    query-string "6.13.7"
+    time-span "4.0.0"
+
+got@11.8.0:
+  version "11.8.0"
+  resolved "https://registry.yarnpkg.com/got/-/got-11.8.0.tgz#be0920c3586b07fd94add3b5b27cb28f49e6545f"
+  integrity sha512-k9noyoIIY9EejuhaBNLyZ31D5328LeqnyPNXJQb2XlJZcKakLqN5m6O/ikhq/0lw56kUYS54fVm+D1x57YC9oQ==
+  dependencies:
+    "@sindresorhus/is" "^4.0.0"
+    "@szmarczak/http-timer" "^4.0.5"
+    "@types/cacheable-request" "^6.0.1"
+    "@types/responselike" "^1.0.0"
+    cacheable-lookup "^5.0.3"
+    cacheable-request "^7.0.1"
+    decompress-response "^6.0.0"
+    http2-wrapper "^1.0.0-beta.5.2"
+    lowercase-keys "^2.0.0"
+    p-cancelable "^2.0.0"
+    responselike "^2.0.0"
+
+graceful-fs@^4.1.6, graceful-fs@^4.2.0, graceful-fs@^4.2.4:
+  version "4.2.6"
+  resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-4.2.6.tgz#ff040b2b0853b23c3d31027523706f1885d76bee"
+  integrity sha512-nTnJ528pbqxYanhpDYsi4Rd8MAeaBA67+RZ10CM1m3bTAVFEDcd5AuA4a6W5YkGZ1iNXHzZz8T6TBKLeBuNriQ==
+
+has-flag@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b"
+  integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
+
+http-cache-semantics@^4.0.0:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz#49e91c5cbf36c9b94bcfcd71c23d5249ec74e390"
+  integrity sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==
+
+http2-wrapper@^1.0.0-beta.5.2:
+  version "1.0.3"
+  resolved "https://registry.yarnpkg.com/http2-wrapper/-/http2-wrapper-1.0.3.tgz#b8f55e0c1f25d4ebd08b3b0c2c079f9590800b3d"
+  integrity sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==
+  dependencies:
+    quick-lru "^5.1.1"
+    resolve-alpn "^1.0.0"
+
+human-signals@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/human-signals/-/human-signals-2.1.0.tgz#dc91fcba42e4d06e4abaed33b3e7a3c02f514ea0"
+  integrity sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==
+
+iconv-lite@^0.4.24:
+  version "0.4.24"
+  resolved "https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.24.tgz#2022b4b25fbddc21d2f524974a474aafe733908b"
+  integrity sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==
+  dependencies:
+    safer-buffer ">= 2.1.2 < 3"
+
+ieee754@^1.1.13:
+  version "1.2.1"
+  resolved "https://registry.yarnpkg.com/ieee754/-/ieee754-1.2.1.tgz#8eb7a10a63fff25d15a57b001586d177d1b0d352"
+  integrity sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==
+
+ignore@^5.1.4:
+  version "5.1.8"
+  resolved "https://registry.yarnpkg.com/ignore/-/ignore-5.1.8.tgz#f150a8b50a34289b33e22f5889abd4d8016f0e57"
+  integrity sha512-BMpfD7PpiETpBl/A6S498BaIJ6Y/ABT93ETbby2fP00v4EbvPBXWEoaR1UBPKs3iR53pJY7EtZk5KACI57i1Uw==
+
+indent-string@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/indent-string/-/indent-string-4.0.0.tgz#624f8f4497d619b2d9768531d58f4122854d7251"
+  integrity sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==
+
+inflight@^1.0.4:
+  version "1.0.6"
+  resolved "https://registry.yarnpkg.com/inflight/-/inflight-1.0.6.tgz#49bd6331d7d02d0c09bc910a1075ba8165b56df9"
+  integrity sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=
+  dependencies:
+    once "^1.3.0"
+    wrappy "1"
+
+inherits@2, inherits@^2.0.3, inherits@^2.0.4:
+  version "2.0.4"
+  resolved "https://registry.yarnpkg.com/inherits/-/inherits-2.0.4.tgz#0fa2c64f932917c3433a0ded55363aae37416b7c"
+  integrity sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==
+
+inquirer@7.3.3:
+  version "7.3.3"
+  resolved "https://registry.yarnpkg.com/inquirer/-/inquirer-7.3.3.tgz#04d176b2af04afc157a83fd7c100e98ee0aad003"
+  integrity sha512-JG3eIAj5V9CwcGvuOmoo6LB9kbAYT8HXffUl6memuszlwDC/qvFAJw49XJ5NROSFNPxp3iQg1GqkFhaY/CR0IA==
+  dependencies:
+    ansi-escapes "^4.2.1"
+    chalk "^4.1.0"
+    cli-cursor "^3.1.0"
+    cli-width "^3.0.0"
+    external-editor "^3.0.3"
+    figures "^3.0.0"
+    lodash "^4.17.19"
+    mute-stream "0.0.8"
+    run-async "^2.4.0"
+    rxjs "^6.6.0"
+    string-width "^4.1.0"
+    strip-ansi "^6.0.0"
+    through "^2.3.6"
+
+is-binary-path@~2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/is-binary-path/-/is-binary-path-2.1.0.tgz#ea1f7f3b80f064236e83470f86c09c254fb45b09"
+  integrity sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==
+  dependencies:
+    binary-extensions "^2.0.0"
+
+is-extglob@^2.1.1:
+  version "2.1.1"
+  resolved "https://registry.yarnpkg.com/is-extglob/-/is-extglob-2.1.1.tgz#a88c02535791f02ed37c76a1b9ea9773c833f8c2"
+  integrity sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=
+
+is-fullwidth-code-point@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz#f116f8064fe90b3f7844a38997c0b75051269f1d"
+  integrity sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==
+
+is-glob@4.0.1, is-glob@^4.0.1, is-glob@~4.0.1:
+  version "4.0.1"
+  resolved "https://registry.yarnpkg.com/is-glob/-/is-glob-4.0.1.tgz#7567dbe9f2f5e2467bc77ab83c4a29482407a5dc"
+  integrity sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==
+  dependencies:
+    is-extglob "^2.1.1"
+
+is-interactive@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/is-interactive/-/is-interactive-1.0.0.tgz#cea6e6ae5c870a7b0a0004070b7b587e0252912e"
+  integrity sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==
+
+is-number@^7.0.0:
+  version "7.0.0"
+  resolved "https://registry.yarnpkg.com/is-number/-/is-number-7.0.0.tgz#7535345b896734d5f80c4d06c50955527a14f12b"
+  integrity sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==
+
+is-path-cwd@^2.2.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/is-path-cwd/-/is-path-cwd-2.2.0.tgz#67d43b82664a7b5191fd9119127eb300048a9fdb"
+  integrity sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ==
+
+is-path-inside@^3.0.2:
+  version "3.0.3"
+  resolved "https://registry.yarnpkg.com/is-path-inside/-/is-path-inside-3.0.3.tgz#d231362e53a07ff2b0e0ea7fed049161ffd16283"
+  integrity sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==
+
+is-stream@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/is-stream/-/is-stream-2.0.0.tgz#bde9c32680d6fae04129d6ac9d921ce7815f78e3"
+  integrity sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==
+
+is-unicode-supported@^0.1.0:
+  version "0.1.0"
+  resolved "https://registry.yarnpkg.com/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz#3f26c76a809593b52bfa2ecb5710ed2779b522a7"
+  integrity sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==
+
+isexe@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/isexe/-/isexe-2.0.0.tgz#e8fbf374dc556ff8947a10dcb0572d633f2cfa10"
+  integrity sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=
+
+json-buffer@3.0.1:
+  version "3.0.1"
+  resolved "https://registry.yarnpkg.com/json-buffer/-/json-buffer-3.0.1.tgz#9338802a30d3b6605fbe0613e094008ca8c05a13"
+  integrity sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==
+
+json-stable-stringify@1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz#9a759d39c5f2ff503fd5300646ed445f88c4f9af"
+  integrity sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=
+  dependencies:
+    jsonify "~0.0.0"
+
+jsonfile@^6.0.1:
+  version "6.1.0"
+  resolved "https://registry.yarnpkg.com/jsonfile/-/jsonfile-6.1.0.tgz#bc55b2634793c679ec6403094eb13698a6ec0aae"
+  integrity sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==
+  dependencies:
+    universalify "^2.0.0"
+  optionalDependencies:
+    graceful-fs "^4.1.6"
+
+jsonify@~0.0.0:
+  version "0.0.0"
+  resolved "https://registry.yarnpkg.com/jsonify/-/jsonify-0.0.0.tgz#2c74b6ee41d93ca51b7b5aaee8f503631d252a73"
+  integrity sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=
+
+keyv@^4.0.0:
+  version "4.0.3"
+  resolved "https://registry.yarnpkg.com/keyv/-/keyv-4.0.3.tgz#4f3aa98de254803cafcd2896734108daa35e4254"
+  integrity sha512-zdGa2TOpSZPq5mU6iowDARnMBZgtCqJ11dJROFi6tg6kTn4nuUdU09lFyLFSaHrWqpIJ+EBq4E8/Dc0Vx5vLdA==
+  dependencies:
+    json-buffer "3.0.1"
+
+locate-path@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.yarnpkg.com/locate-path/-/locate-path-6.0.0.tgz#55321eb309febbc59c4801d931a72452a681d286"
+  integrity sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==
+  dependencies:
+    p-locate "^5.0.0"
+
+lodash@4.17.20:
+  version "4.17.20"
+  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.20.tgz#b44a9b6297bcb698f1c51a3545a2b3b368d59c52"
+  integrity sha512-PlhdFcillOINfeV7Ni6oF1TAEayyZBoZ8bcshTHqOYJYlrqzRK5hagpagky5o4HfCzzd1TRkXPMFq6cKk9rGmA==
+
+lodash@^4.11.1, lodash@^4.17.19:
+  version "4.17.21"
+  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c"
+  integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
+
+log-symbols@^4.0.0:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/log-symbols/-/log-symbols-4.1.0.tgz#3fbdbb95b4683ac9fc785111e792e558d4abd503"
+  integrity sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==
+  dependencies:
+    chalk "^4.1.0"
+    is-unicode-supported "^0.1.0"
+
+lowercase-keys@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/lowercase-keys/-/lowercase-keys-2.0.0.tgz#2603e78b7b4b0006cbca2fbcc8a3202558ac9479"
+  integrity sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==
+
+merge-stream@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/merge-stream/-/merge-stream-2.0.0.tgz#52823629a14dd00c9770fb6ad47dc6310f2c1f60"
+  integrity sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==
+
+merge2@^1.3.0:
+  version "1.4.1"
+  resolved "https://registry.yarnpkg.com/merge2/-/merge2-1.4.1.tgz#4368892f885e907455a6fd7dc55c0c9d404990ae"
+  integrity sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==
+
+micromatch@^4.0.2:
+  version "4.0.4"
+  resolved "https://registry.yarnpkg.com/micromatch/-/micromatch-4.0.4.tgz#896d519dfe9db25fce94ceb7a500919bf881ebf9"
+  integrity sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==
+  dependencies:
+    braces "^3.0.1"
+    picomatch "^2.2.3"
+
+mimic-fn@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/mimic-fn/-/mimic-fn-2.1.0.tgz#7ed2c2ccccaf84d3ffcb7a69b57711fc2083401b"
+  integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==
+
+mimic-response@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/mimic-response/-/mimic-response-1.0.1.tgz#4923538878eef42063cb8a3e3b0798781487ab1b"
+  integrity sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==
+
+mimic-response@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/mimic-response/-/mimic-response-3.1.0.tgz#2d1d59af9c1b129815accc2c46a022a5ce1fa3c9"
+  integrity sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==
+
+minimatch@^3.0.4:
+  version "3.0.4"
+  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.4.tgz#5166e286457f03306064be5497e8dbb0c3d32083"
+  integrity sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==
+  dependencies:
+    brace-expansion "^1.1.7"
+
+mute-stream@0.0.8:
+  version "0.0.8"
+  resolved "https://registry.yarnpkg.com/mute-stream/-/mute-stream-0.0.8.tgz#1630c42b2251ff81e2a283de96a5497ea92e5e0d"
+  integrity sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==
+
+nanoid@3.1.20:
+  version "3.1.20"
+  resolved "https://registry.yarnpkg.com/nanoid/-/nanoid-3.1.20.tgz#badc263c6b1dcf14b71efaa85f6ab4c1d6cfc788"
+  integrity sha512-a1cQNyczgKbLX9jwbS/+d7W8fX/RfgYR7lVWwWOGIPNgK2m0MWvrGF6/m4kk6U3QcFMnZf3RIhL0v2Jgh/0Uxw==
+
+node-object-hash@2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/node-object-hash/-/node-object-hash-2.0.0.tgz#9971fcdb7d254f05016bd9ccf508352bee11116b"
+  integrity sha512-VZR0zroAusy1ETZMZiGeLkdu50LGjG5U1KHZqTruqtTyQ2wfWhHG2Ow4nsUbfTFGlaREgNHcCWoM/OzEm6p+NQ==
+
+normalize-path@^3.0.0, normalize-path@~3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/normalize-path/-/normalize-path-3.0.0.tgz#0dcd69ff23a1c9b11fd0978316644a0388216a65"
+  integrity sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==
+
+normalize-url@5.3.0:
+  version "5.3.0"
+  resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-5.3.0.tgz#8959b3cdaa295b61592c1f245dded34b117618dd"
+  integrity sha512-9/nOVLYYe/dO/eJeQUNaGUF4m4Z5E7cb9oNTKabH+bNf19mqj60txTcveQxL0GlcWLXCxkOu2/LwL8oW0idIDA==
+
+normalize-url@^4.1.0:
+  version "4.5.0"
+  resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-4.5.0.tgz#453354087e6ca96957bd8f5baf753f5982142129"
+  integrity sha512-2s47yzUxdexf1OhyRi4Em83iQk0aPvwTddtFz4hnSSw9dCEsLEGf6SwIO8ss/19S9iBb5sJaOuTvTGDeZI00BQ==
+
+npm-run-path@^4.0.1:
+  version "4.0.1"
+  resolved "https://registry.yarnpkg.com/npm-run-path/-/npm-run-path-4.0.1.tgz#b7ecd1e5ed53da8e37a55e1c2269e0b97ed748ea"
+  integrity sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==
+  dependencies:
+    path-key "^3.0.0"
+
+once@^1.3.0, once@^1.3.1, once@^1.4.0:
+  version "1.4.0"
+  resolved "https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1"
+  integrity sha1-WDsap3WWHUsROsF9nFC6753Xa9E=
+  dependencies:
+    wrappy "1"
+
+onetime@^5.1.0, onetime@^5.1.2:
+  version "5.1.2"
+  resolved "https://registry.yarnpkg.com/onetime/-/onetime-5.1.2.tgz#d0e96ebb56b07476df1dd9c4806e5237985ca45e"
+  integrity sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==
+  dependencies:
+    mimic-fn "^2.1.0"
+
+ora@5.2.0:
+  version "5.2.0"
+  resolved "https://registry.yarnpkg.com/ora/-/ora-5.2.0.tgz#de10bfd2d15514384af45f3fa9d9b1aaf344fda1"
+  integrity sha512-+wG2v8TUU8EgzPHun1k/n45pXquQ9fHnbXVetl9rRgO6kjZszGGbraF3XPTIdgeA+s1lbRjSEftAnyT0w8ZMvQ==
+  dependencies:
+    bl "^4.0.3"
+    chalk "^4.1.0"
+    cli-cursor "^3.1.0"
+    cli-spinners "^2.5.0"
+    is-interactive "^1.0.0"
+    log-symbols "^4.0.0"
+    strip-ansi "^6.0.0"
+    wcwidth "^1.0.1"
+
+os-tmpdir@~1.0.2:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/os-tmpdir/-/os-tmpdir-1.0.2.tgz#bbe67406c79aa85c5cfec766fe5734555dfa1274"
+  integrity sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=
+
+p-all@3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/p-all/-/p-all-3.0.0.tgz#077c023c37e75e760193badab2bad3ccd5782bfb"
+  integrity sha512-qUZbvbBFVXm6uJ7U/WDiO0fv6waBMbjlCm4E66oZdRR+egswICarIdHyVSZZHudH8T5SF8x/JG0q0duFzPnlBw==
+  dependencies:
+    p-map "^4.0.0"
+
+p-cancelable@^2.0.0:
+  version "2.1.1"
+  resolved "https://registry.yarnpkg.com/p-cancelable/-/p-cancelable-2.1.1.tgz#aab7fbd416582fa32a3db49859c122487c5ed2cf"
+  integrity sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==
+
+p-limit@^3.0.2:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/p-limit/-/p-limit-3.1.0.tgz#e1daccbe78d0d1388ca18c64fea38e3e57e3706b"
+  integrity sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==
+  dependencies:
+    yocto-queue "^0.1.0"
+
+p-locate@^5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/p-locate/-/p-locate-5.0.0.tgz#83c8315c6785005e3bd021839411c9e110e6d834"
+  integrity sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==
+  dependencies:
+    p-limit "^3.0.2"
+
+p-map-series@2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/p-map-series/-/p-map-series-2.1.0.tgz#7560d4c452d9da0c07e692fdbfe6e2c81a2a91f2"
+  integrity sha512-RpYIIK1zXSNEOdwxcfe7FdvGcs7+y5n8rifMhMNWvaxRNMPINJHF5GDeuVxWqnfrcHPSCnp7Oo5yNXHId9Av2Q==
+
+p-map@4.0.0, p-map@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/p-map/-/p-map-4.0.0.tgz#bb2f95a5eda2ec168ec9274e06a747c3e2904d2b"
+  integrity sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==
+  dependencies:
+    aggregate-error "^3.0.0"
+
+p-props@4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/p-props/-/p-props-4.0.0.tgz#f37c877a9a722057833e1dc38d43edf3906b3437"
+  integrity sha512-3iKFbPdoPG7Ne3cMA53JnjPsTMaIzE9gxKZnvKJJivTAeqLEZPBu6zfi6DYq9AsH1nYycWmo3sWCNI8Kz6T2Zg==
+  dependencies:
+    p-map "^4.0.0"
+
+parent-module@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/parent-module/-/parent-module-2.0.0.tgz#fa71f88ff1a50c27e15d8ff74e0e3a9523bf8708"
+  integrity sha512-uo0Z9JJeWzv8BG+tRcapBKNJ0dro9cLyczGzulS6EfeyAdeC9sbojtW6XwvYxJkEne9En+J2XEl4zyglVeIwFg==
+  dependencies:
+    callsites "^3.1.0"
+
+path-exists@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/path-exists/-/path-exists-4.0.0.tgz#513bdbe2d3b95d7762e8c1137efa195c6c61b5b3"
+  integrity sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==
+
+path-is-absolute@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f"
+  integrity sha1-F0uSaHNVNP+8es5r9TpanhtcX18=
+
+path-key@^3.0.0, path-key@^3.1.0:
+  version "3.1.1"
+  resolved "https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375"
+  integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
+
+path-type@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/path-type/-/path-type-4.0.0.tgz#84ed01c0a7ba380afe09d90a8c180dcd9d03043b"
+  integrity sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==
+
+picomatch@^2.0.4, picomatch@^2.2.1, picomatch@^2.2.3:
+  version "2.2.3"
+  resolved "https://registry.yarnpkg.com/picomatch/-/picomatch-2.2.3.tgz#465547f359ccc206d3c48e46a1bcb89bf7ee619d"
+  integrity sha512-KpELjfwcCDUb9PeigTs2mBJzXUPzAuP2oPcA989He8Rte0+YUAjw1JVedDhuTKPkHjSYzMN3npC9luThGYEKdg==
+
+pify@5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/pify/-/pify-5.0.0.tgz#1f5eca3f5e87ebec28cc6d54a0e4aaf00acc127f"
+  integrity sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==
+
+pump@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/pump/-/pump-3.0.0.tgz#b4a2116815bde2f4e1ea602354e8c75565107a64"
+  integrity sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==
+  dependencies:
+    end-of-stream "^1.1.0"
+    once "^1.3.1"
+
+query-string@6.13.7:
+  version "6.13.7"
+  resolved "https://registry.yarnpkg.com/query-string/-/query-string-6.13.7.tgz#af53802ff6ed56f3345f92d40a056f93681026ee"
+  integrity sha512-CsGs8ZYb39zu0WLkeOhe0NMePqgYdAuCqxOYKDR5LVCytDZYMGx3Bb+xypvQvPHVPijRXB0HZNFllCzHRe4gEA==
+  dependencies:
+    decode-uri-component "^0.2.0"
+    split-on-first "^1.0.0"
+    strict-uri-encode "^2.0.0"
+
+queue-microtask@^1.2.2:
+  version "1.2.3"
+  resolved "https://registry.yarnpkg.com/queue-microtask/-/queue-microtask-1.2.3.tgz#4929228bbc724dfac43e0efb058caf7b6cfb6243"
+  integrity sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==
+
+quick-lru@^5.1.1:
+  version "5.1.1"
+  resolved "https://registry.yarnpkg.com/quick-lru/-/quick-lru-5.1.1.tgz#366493e6b3e42a3a6885e2e99d18f80fb7a8c932"
+  integrity sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==
+
+readable-stream@^3.4.0:
+  version "3.6.0"
+  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-3.6.0.tgz#337bbda3adc0706bd3e024426a286d4b4b2c9198"
+  integrity sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==
+  dependencies:
+    inherits "^2.0.3"
+    string_decoder "^1.1.1"
+    util-deprecate "^1.0.1"
+
+readdirp@~3.5.0:
+  version "3.5.0"
+  resolved "https://registry.yarnpkg.com/readdirp/-/readdirp-3.5.0.tgz#9ba74c019b15d365278d2e91bb8c48d7b4d42c9e"
+  integrity sha512-cMhu7c/8rdhkHXWsY+osBhfSy0JikwpHK/5+imo+LpeasTF8ouErHrlYkwT0++njiyuDvc7OFY5T3ukvZ8qmFQ==
+  dependencies:
+    picomatch "^2.2.1"
+
+resolve-alpn@^1.0.0:
+  version "1.1.2"
+  resolved "https://registry.yarnpkg.com/resolve-alpn/-/resolve-alpn-1.1.2.tgz#30b60cfbb0c0b8dc897940fe13fe255afcdd4d28"
+  integrity sha512-8OyfzhAtA32LVUsJSke3auIyINcwdh5l3cvYKdKO0nvsYSKuiLfTM5i78PJswFPT8y6cPW+L1v6/hE95chcpDA==
+
+resolve-from@^5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/resolve-from/-/resolve-from-5.0.0.tgz#c35225843df8f776df21c57557bc087e9dfdfc69"
+  integrity sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==
+
+responselike@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/responselike/-/responselike-2.0.0.tgz#26391bcc3174f750f9a79eacc40a12a5c42d7723"
+  integrity sha512-xH48u3FTB9VsZw7R+vvgaKeLKzT6jOogbQhEe/jewwnZgzPcnyWui2Av6JpoYZF/91uueC+lqhWqeURw5/qhCw==
+  dependencies:
+    lowercase-keys "^2.0.0"
+
+restore-cursor@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/restore-cursor/-/restore-cursor-3.1.0.tgz#39f67c54b3a7a58cea5236d95cf0034239631f7e"
+  integrity sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==
+  dependencies:
+    onetime "^5.1.0"
+    signal-exit "^3.0.2"
+
+reusify@^1.0.4:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/reusify/-/reusify-1.0.4.tgz#90da382b1e126efc02146e90845a88db12925d76"
+  integrity sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==
+
+rimraf@^3.0.2:
+  version "3.0.2"
+  resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-3.0.2.tgz#f1a5402ba6220ad52cc1282bac1ae3aa49fd061a"
+  integrity sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==
+  dependencies:
+    glob "^7.1.3"
+
+run-async@^2.4.0:
+  version "2.4.1"
+  resolved "https://registry.yarnpkg.com/run-async/-/run-async-2.4.1.tgz#8440eccf99ea3e70bd409d49aab88e10c189a455"
+  integrity sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==
+
+run-parallel@^1.1.9:
+  version "1.2.0"
+  resolved "https://registry.yarnpkg.com/run-parallel/-/run-parallel-1.2.0.tgz#66d1368da7bdf921eb9d95bd1a9229e7f21a43ee"
+  integrity sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==
+  dependencies:
+    queue-microtask "^1.2.2"
+
+rxjs@^6.6.0:
+  version "6.6.7"
+  resolved "https://registry.yarnpkg.com/rxjs/-/rxjs-6.6.7.tgz#90ac018acabf491bf65044235d5863c4dab804c9"
+  integrity sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==
+  dependencies:
+    tslib "^1.9.0"
+
+safe-buffer@~5.2.0:
+  version "5.2.1"
+  resolved "https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.2.1.tgz#1eaf9fa9bdb1fdd4ec75f58f9cdb4e6b7827eec6"
+  integrity sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==
+
+"safer-buffer@>= 2.1.2 < 3":
+  version "2.1.2"
+  resolved "https://registry.yarnpkg.com/safer-buffer/-/safer-buffer-2.1.2.tgz#44fa161b0187b9549dd84bb91802f9bd8385cd6a"
+  integrity sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==
+
+shebang-command@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/shebang-command/-/shebang-command-2.0.0.tgz#ccd0af4f8835fbdc265b82461aaf0c36663f34ea"
+  integrity sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==
+  dependencies:
+    shebang-regex "^3.0.0"
+
+shebang-regex@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/shebang-regex/-/shebang-regex-3.0.0.tgz#ae16f1644d873ecad843b0307b143362d4c42172"
+  integrity sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==
+
+signal-exit@^3.0.2, signal-exit@^3.0.3:
+  version "3.0.3"
+  resolved "https://registry.yarnpkg.com/signal-exit/-/signal-exit-3.0.3.tgz#a1410c2edd8f077b08b4e253c8eacfcaf057461c"
+  integrity sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFRoeDoJO7wthSLq42EjA==
+
+slash@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/slash/-/slash-3.0.0.tgz#6539be870c165adbd5240220dbe361f1bc4d4634"
+  integrity sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==
+
+split-on-first@^1.0.0:
+  version "1.1.0"
+  resolved "https://registry.yarnpkg.com/split-on-first/-/split-on-first-1.1.0.tgz#f610afeee3b12bce1d0c30425e76398b78249a5f"
+  integrity sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw==
+
+std-mocks@1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/std-mocks/-/std-mocks-1.0.1.tgz#d3388876d7beeba3c70fbd8e2bcaf46eb07d79fe"
+  integrity sha1-0ziIdte+66PHD72OK8r0brB9ef4=
+  dependencies:
+    lodash "^4.11.1"
+
+strict-uri-encode@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/strict-uri-encode/-/strict-uri-encode-2.0.0.tgz#b9c7330c7042862f6b142dc274bbcc5866ce3546"
+  integrity sha1-ucczDHBChi9rFC3CdLvMWGbONUY=
+
+string-width@^4.1.0:
+  version "4.2.2"
+  resolved "https://registry.yarnpkg.com/string-width/-/string-width-4.2.2.tgz#dafd4f9559a7585cfba529c6a0a4f73488ebd4c5"
+  integrity sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE/xi3vOeA==
+  dependencies:
+    emoji-regex "^8.0.0"
+    is-fullwidth-code-point "^3.0.0"
+    strip-ansi "^6.0.0"
+
+string_decoder@^1.1.1:
+  version "1.3.0"
+  resolved "https://registry.yarnpkg.com/string_decoder/-/string_decoder-1.3.0.tgz#42f114594a46cf1a8e30b0a84f56c78c3edac21e"
+  integrity sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==
+  dependencies:
+    safe-buffer "~5.2.0"
+
+strip-ansi@6.0.0, strip-ansi@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.yarnpkg.com/strip-ansi/-/strip-ansi-6.0.0.tgz#0b1571dd7669ccd4f3e06e14ef1eed26225ae532"
+  integrity sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==
+  dependencies:
+    ansi-regex "^5.0.0"
+
+strip-final-newline@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/strip-final-newline/-/strip-final-newline-2.0.0.tgz#89b852fb2fcbe936f6f4b3187afb0a12c1ab58ad"
+  integrity sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==
+
+supports-color@^7.1.0:
+  version "7.2.0"
+  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-7.2.0.tgz#1b7dcdcb32b8138801b3e478ba6a51caa89648da"
+  integrity sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==
+  dependencies:
+    has-flag "^4.0.0"
+
+temp-dir@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/temp-dir/-/temp-dir-2.0.0.tgz#bde92b05bdfeb1516e804c9c00ad45177f31321e"
+  integrity sha512-aoBAniQmmwtcKp/7BzsH8Cxzv8OL736p7v1ihGb5e9DJ9kTwGWHrQrVB5+lfVDzfGrdRzXch+ig7LHaY1JTOrg==
+
+tempy@1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/tempy/-/tempy-1.0.0.tgz#4f192b3ee3328a2684d0e3fc5c491425395aab65"
+  integrity sha512-eLXG5B1G0mRPHmgH2WydPl5v4jH35qEn3y/rA/aahKhIa91Pn119SsU7n7v/433gtT9ONzC8ISvNHIh2JSTm0w==
+  dependencies:
+    del "^6.0.0"
+    is-stream "^2.0.0"
+    temp-dir "^2.0.0"
+    type-fest "^0.16.0"
+    unique-string "^2.0.0"
+
+through@^2.3.6:
+  version "2.3.8"
+  resolved "https://registry.yarnpkg.com/through/-/through-2.3.8.tgz#0dd4c9ffaabc357960b1b724115d7e0e86a2e1f5"
+  integrity sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=
+
+time-span@4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/time-span/-/time-span-4.0.0.tgz#fe74cd50a54e7998712f90ddfe47109040c985c4"
+  integrity sha512-MyqZCTGLDZ77u4k+jqg4UlrzPTPZ49NDlaekU6uuFaJLzPIN1woaRXCbGeqOfxwc3Y37ZROGAJ614Rdv7Olt+g==
+  dependencies:
+    convert-hrtime "^3.0.0"
+
+tmp@^0.0.33:
+  version "0.0.33"
+  resolved "https://registry.yarnpkg.com/tmp/-/tmp-0.0.33.tgz#6d34335889768d21b2bcda0aa277ced3b1bfadf9"
+  integrity sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==
+  dependencies:
+    os-tmpdir "~1.0.2"
+
+to-regex-range@^5.0.1:
+  version "5.0.1"
+  resolved "https://registry.yarnpkg.com/to-regex-range/-/to-regex-range-5.0.1.tgz#1648c44aae7c8d988a326018ed72f5b4dd0392e4"
+  integrity sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==
+  dependencies:
+    is-number "^7.0.0"
+
+tslib@^1.9.0:
+  version "1.14.1"
+  resolved "https://registry.yarnpkg.com/tslib/-/tslib-1.14.1.tgz#cf2d38bdc34a134bcaf1091c41f6619e2f672d00"
+  integrity sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==
+
+type-fest@^0.16.0:
+  version "0.16.0"
+  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.16.0.tgz#3240b891a78b0deae910dbeb86553e552a148860"
+  integrity sha512-eaBzG6MxNzEn9kiwvtre90cXaNLkmadMWa1zQMs3XORCXNbsH/OewwbxC5ia9dCxIxnTAsSxXJaa/p5y8DlvJg==
+
+type-fest@^0.21.3:
+  version "0.21.3"
+  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.21.3.tgz#d260a24b0198436e133fa26a524a6d65fa3b2e37"
+  integrity sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==
+
+unique-string@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/unique-string/-/unique-string-2.0.0.tgz#39c6451f81afb2749de2b233e3f7c5e8843bd89d"
+  integrity sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==
+  dependencies:
+    crypto-random-string "^2.0.0"
+
+universalify@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/universalify/-/universalify-1.0.0.tgz#b61a1da173e8435b2fe3c67d29b9adf8594bd16d"
+  integrity sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==
+
+universalify@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/universalify/-/universalify-2.0.0.tgz#75a4984efedc4b08975c5aeb73f530d02df25717"
+  integrity sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==
+
+untildify@4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/untildify/-/untildify-4.0.0.tgz#2bc947b953652487e4600949fb091e3ae8cd919b"
+  integrity sha512-KK8xQ1mkzZeg9inewmFVDNkg3l5LUhoq9kN6iWYB/CC9YMG8HA+c1Q8HwDe6dEX7kErrEVNVBO3fWsVq5iDgtw==
+
+util-deprecate@^1.0.1:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/util-deprecate/-/util-deprecate-1.0.2.tgz#450d4dc9fa70de732762fbd2d4a28981419a0ccf"
+  integrity sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=
+
+wcwidth@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/wcwidth/-/wcwidth-1.0.1.tgz#f0b0dcf915bc5ff1528afadb2c0e17b532da2fe8"
+  integrity sha1-8LDc+RW8X/FSivrbLA4XtTLaL+g=
+  dependencies:
+    defaults "^1.0.3"
+
+which@2.0.2, which@^2.0.1:
+  version "2.0.2"
+  resolved "https://registry.yarnpkg.com/which/-/which-2.0.2.tgz#7c6a8dd0a636a0327e10b59c9286eee93f3f51b1"
+  integrity sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==
+  dependencies:
+    isexe "^2.0.0"
+
+wrappy@1:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f"
+  integrity sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=
+
+yocto-queue@^0.1.0:
+  version "0.1.0"
+  resolved "https://registry.yarnpkg.com/yocto-queue/-/yocto-queue-0.1.0.tgz#0294eb3dee05028d31ee1a5fa2c556a6aaf10a1b"
+  integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==

commit f63ade851df9ad36af650f19354e50f3782bd47b
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Jun 1 18:48:12 2021 +0300

    revert algolia search

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 60e3ee5..636e6b3 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -18,7 +18,3 @@ jobs:
       - run: curl --location https://github.com/gohugoio/hugo/releases/download/v0.77.0/hugo_extended_0.77.0_Linux-64bit.tar.gz | tar -vxzO hugo > hugo && chmod a+x hugo
       - run: ./hugo --environment production --minify
       - run: ./hugo deploy --environment production --invalidateCDN true --maxDeletes -1
-
-      - run: yarn install
-      - name: Update search index
-        run: yarn run algolia ${{ secrets.ALGOLIA_ADMIN_KEY }}
\ No newline at end of file
diff --git a/.gitignore b/.gitignore
index 7ac638b..c6d7e4b 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,4 +1,3 @@
 /public/
 /resources/
 .DS_Store
-/node_modules/
diff --git a/algolia.js b/algolia.js
deleted file mode 100644
index 20d487a..0000000
--- a/algolia.js
+++ /dev/null
@@ -1,9 +0,0 @@
-const indexing = require('algolia-indexing')
-const fs = require('fs')
-
-const apiKey = process.argv[2]
-
-const credentials = { appId: '27CIRMYZIB', apiKey: apiKey, indexName: 'codemagic_docs' }
-const records = JSON.parse(fs.readFileSync('./public/index.json'))
-
-indexing.fullAtomic(credentials, records);
\ No newline at end of file
diff --git a/assets/js/search.js b/assets/js/search.js
index 0747b93..d7d5dbc 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -1,8 +1,35 @@
+let fuse
 
-const algolia = algoliasearch("27CIRMYZIB", "7e88305c04e90188508daa6c89e5f4df").initIndex("codemagic_docs");
+const fuseOptions = {
+    includeMatches: true,
+    findAllMatches: true,
+    includeScore: true,
+    threshold: 0,
+    ignoreLocation: true,
+    maxPatternLength: 32,
+    minMatchCharLength: 3,
+    useExtendedSearch: true,
+    keys: [
+        {
+            name: 'title',
+            weight: 15,
+        },
+        {
+            name: 'subtitle',
+            weight: 10,
+        },
+        {
+            name: 'content',
+            weight: 5,
+        },
+    ],
+}
 
 $(document).ready(() => {
-    initSearchEvents()
+    $.getJSON('/index.json', (data) => {
+        fuse = new Fuse(data, fuseOptions)
+        initSearchEvents()
+    })
 })
 
 const initSearchEvents = () => {
@@ -65,10 +92,10 @@ const updateUrl = (query) =>
             (query ? '?q=' + encodeURIComponent(query) : ''),
     )
 
-const updateResults = async (query) => {
+const updateResults = (query) => {
     let result
     try {
-        result = await getResults(query)
+        result = getResults(query)
     } catch (error) {
         result = error
     }
@@ -81,30 +108,116 @@ const updateInputs = (query) => {
     query === null ? $inputs.trigger('blur') : query && $('.search').addClass('search--active')
 }
 
-const getResultHtml = (algoliaResultList, query) => {
-    if (!algoliaResultList) return null
+const getResultHtml = (resultList, query) => {
+    if (!resultList) return null
 
-    if (algoliaResultList instanceof Error) {
+    if (resultList instanceof Error) {
         return $('<div>', {
             class: 'no-results-message',
-            text: 'Invalid search query: ' + algoliaResultList.message,
+            text: 'Invalid search query: ' + resultList.message,
         })
     }
 
-    if (!algoliaResultList.length) {
+    if (!resultList.length) {
         return $('<div>', {
             class: 'no-results-message',
             text: 'No results matching "' + query + '"',
         })
     }
 
+    const orderByStartPosition = (a, b) => a.start - b.start
+
+    const collectSnippetPositions = (contentLength, all, p) => {
+        const charsBefore = 30
+        const charsAfter = 30
+        const maxSnippetLength = 200
+
+        const start = Math.max(p.start - charsBefore, 0)
+        const end = Math.min(p.start + p.length + charsAfter, contentLength)
+
+        const prev = all[all.length - 1]
+        const isOverlappingWithPrevious = prev && prev.start + prev.length > start
+        if (isOverlappingWithPrevious) {
+            const newLength = end - prev.start
+            if (newLength > maxSnippetLength) {
+                return all
+            }
+            prev.length = newLength
+            prev.keywords.push({ start: p.start - prev.start, length: p.length })
+        } else {
+            all.push({
+                start: start,
+                length: end - start,
+                keywords: [{ start: p.start - start, length: p.length }],
+            })
+        }
+
+        return all
+    }
+
+    const getSnippet = (content, s) => {
+        let c = content.substr(s.start, s.length + 1)
+        const m = c.match(new RegExp('|', 'g'))
+
+        const isStartOfContent = s.start === 0
+        const firstKw = s.keywords[0]
+        const start = isStartOfContent ? 0 : Math.min(firstKw.start, m ? c.indexOf(m[0]) + m[0].length : 0)
+        const lastKw = s.keywords[s.keywords.length - 1]
+
+        const isEndOfContent = s.start + s.length === content.length
+        const end = isEndOfContent
+            ? c.length + 1
+            : Math.max(lastKw.start + lastKw.length, m ? c.lastIndexOf(m[m.length - 1]) : c.length + 1)
+
+        c = c.substring(start, end)
+
+        return Object.assign({}, s, {
+            content: c,
+            isStart: isStartOfContent,
+            isEnd: isEndOfContent,
+            keywords: s.keywords.map((k) => {
+                return { start: k.start - start, length: k.length }
+            }),
+        })
+    }
+
+    const getContentSnippets = (contentPositions, content) => {
+        content = (content || '').trim()
+
+        return contentPositions
+            ? contentPositions
+                  .sort(orderByStartPosition)
+                  .reduce(collectSnippetPositions.bind(null, content.length), [])
+                  .map(getSnippet.bind(null, content))
+                  .slice(0, 3)
+            : [
+                  {
+                      isFirst: true,
+                      isLast: false,
+                      content: content.substring(0, 100),
+                      keywords: contentPositions,
+                  },
+              ]
+    }
+
     return $('<ul>', {
-        html: algoliaResultList.map((result) => {
+        html: resultList.map((result) => {
+            const snippets = getContentSnippets(result.positions.content, result.item.content)
+
             return $('<li>', {
                 html: [
-                    $('<a>', { html: result._highlightResult.title.value, href: result.uri }),
-                    $('<p>', { html: result._highlightResult.subtitle.value }),
-                    $('<p>', { html: result._snippetResult.content.value}),
+                    $('<a>', { text: result.item.title, href: result.item.uri }).markRanges(result.positions.title),
+                    $('<p>', { text: result.item.subtitle }),
+                    snippets
+                        ? $('<p>', {
+                              html: snippets.map((s) => {
+                                  return $('<span>', {
+                                      class: [s.isStart ? 'start' : '', s.isEnd ? 'end' : ''].join(' '),
+                                      text: s.content,
+                                  }).markRanges(s.keywords)
+                              }),
+                          })
+                        : null,
                 ],
             })
         }),
@@ -113,13 +226,27 @@ const getResultHtml = (algoliaResultList, query) => {
 
 const getResults = (query) =>
     query
-        ? algolia
-            .search(`'${query}`, {
-                highlightPreTag: '<mark data-markjs="true">',
-                highlightPostTag: '</mark>',
-            }).then((result) => {
-                return result.hits;
-            })
+        ? fuse
+              // ' is a token for extended search needed to find items that include the value
+              // it prevents fuzzy search
+              .search(`'${query}`, {
+                  limit: 16,
+              })
+              .map((result) => {
+                  let positions = { title: [], subtitle: [], content: [] }
+                  result.matches.map((match) => {
+                      match.indices.map((index) => {
+                          positions[match.key].push({
+                              length: index[1] - index[0] + 1,
+                              start: index[0],
+                          })
+                      })
+                  })
+                  return {
+                      ...result,
+                      positions,
+                  }
+              })
         : null
 
 const debounce = (func, wait, immediate) => {
diff --git a/layouts/partials/search.html b/layouts/partials/search.html
index 2a8388f..ef6593a 100644
--- a/layouts/partials/search.html
+++ b/layouts/partials/search.html
@@ -1,9 +1,9 @@
+<script defer src="https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.min.js"></script>
 <script
     src="https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.min.js"
     integrity="sha384-iqnguDoMujGknA4B5Jk7pbSn7sb7M8Tc0zVsTNQXm629Xx00jGEpD9TsZXbfNjKO"
     crossorigin="anonymous"
 ></script>
-<script defer src="https://cdn.jsdelivr.net/npm/algoliasearch@4.5.1/dist/algoliasearch-lite.umd.js"></script>
 
 {{ $searchScript := resources.Get "js/search.js" | minify | fingerprint }}
 <script defer src="{{ $searchScript.RelPermalink }}" integrity="{{ $searchScript.Data.Integrity }}"></script>
diff --git a/package.json b/package.json
deleted file mode 100644
index 386a963..0000000
--- a/package.json
+++ /dev/null
@@ -1,10 +0,0 @@
-{
-    "name": "codemagic-docs",
-    "version": "1.0.0",
-    "scripts": {
-        "algolia": "node algolia.js"
-    },
-    "devDependencies": {
-        "algolia-indexing": "^1.2.0"
-    }
-}
diff --git a/yarn.lock b/yarn.lock
deleted file mode 100644
index 0cbcf74..0000000
--- a/yarn.lock
+++ /dev/null
@@ -1,1410 +0,0 @@
-# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
-# yarn lockfile v1
-
-
-"@algolia/cache-browser-local-storage@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/cache-browser-local-storage/-/cache-browser-local-storage-4.2.0.tgz#45cc4be4c8fcd69cb98ebaa2e78a459a1cf6ba64"
-  integrity sha512-uji5zxBxwNu8qKtyqghg9lUsN0OOZ58NfRKk0Il4IZCcCo78E0KfT3Uxr7XiYCJMRnqIsvbKWf0xA67tYNBSbA==
-  dependencies:
-    "@algolia/cache-common" "4.2.0"
-
-"@algolia/cache-common@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/cache-common/-/cache-common-4.2.0.tgz#ada18e559f205a63eaf60c21a035b3d41f0f8d7d"
-  integrity sha512-ATBQCBBLt4hPNKIKn06y5zqZPWQmI+PBF0287rFVj8BGmEr82BzoKMa5XIkvgpjtxwx6c5nSKxZaYkEFqtrxtQ==
-
-"@algolia/cache-in-memory@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/cache-in-memory/-/cache-in-memory-4.2.0.tgz#82f07cc99aee9e20a96bdd69c635bdd2dc4288f1"
-  integrity sha512-NsVOR6ixK6jvurLW+1+h80/9N18QjU/AXdAZJoVeu4JXb2NPuej4Ld1zXFYvz/ypCFQE+dU8haaQnJIuTbD4vg==
-  dependencies:
-    "@algolia/cache-common" "4.2.0"
-
-"@algolia/client-account@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/client-account/-/client-account-4.2.0.tgz#7abf3dd8922fde1735b1e0d19e8b0bdbf64a1435"
-  integrity sha512-xz5OXU9DQ9pegABAgmTPV23f9tXmbUPO3w5J/b2QcP6jzfNnNfW3CkTwywgNLr16jIKLxmmClN5yqyJp6XmHBA==
-  dependencies:
-    "@algolia/client-common" "4.2.0"
-    "@algolia/client-search" "4.2.0"
-    "@algolia/transporter" "4.2.0"
-
-"@algolia/client-analytics@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/client-analytics/-/client-analytics-4.2.0.tgz#11e9331fed5bbaa6668d71c890dff60c4af1c741"
-  integrity sha512-UNuZQOYuKPYl5fCgm1HZzoZ6Ewxtqrc4Cv5Dhdy5VatIV6lYEWOtdn+g+5qvWFGb6fv6688dg5EVJnXZNvVVZQ==
-  dependencies:
-    "@algolia/client-common" "4.2.0"
-    "@algolia/client-search" "4.2.0"
-    "@algolia/requester-common" "4.2.0"
-    "@algolia/transporter" "4.2.0"
-
-"@algolia/client-common@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/client-common/-/client-common-4.2.0.tgz#bf8a550dc51927bb103de9aab7e6ac4d90a9cf0d"
-  integrity sha512-KxZTWXf9FSl188iTAz9rhTMeBtbF/uaJcxw99jbWHxyK9KR87obZzTlTFYnIWLEBaTG1MmlgPSsDogAE4CHLOQ==
-  dependencies:
-    "@algolia/requester-common" "4.2.0"
-    "@algolia/transporter" "4.2.0"
-
-"@algolia/client-recommendation@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/client-recommendation/-/client-recommendation-4.2.0.tgz#bd49b5b9601fe4220ba6db0fc397d816584ee4ec"
-  integrity sha512-5QwvUJ5hpZVDz99o+EPgMg+z7maLWOZGUrUt5z8s+esl+taTb2h1PtyLpikAvC2d/BjYCEKyObTiRDYdzhqcoA==
-  dependencies:
-    "@algolia/client-common" "4.2.0"
-    "@algolia/requester-common" "4.2.0"
-    "@algolia/transporter" "4.2.0"
-
-"@algolia/client-search@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/client-search/-/client-search-4.2.0.tgz#4917499cac66a5cca7f2ca9d1334bffc96a79b17"
-  integrity sha512-2SAz1/undr+RM7FNj3G0taWFG+8QEMQcYHxUhoOJKMIY9sPQN7UNCJRHYsulM+/g45oF67tXX09NSt14ewen0Q==
-  dependencies:
-    "@algolia/client-common" "4.2.0"
-    "@algolia/requester-common" "4.2.0"
-    "@algolia/transporter" "4.2.0"
-
-"@algolia/logger-common@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/logger-common/-/logger-common-4.2.0.tgz#dd373b267594656d72a1563f6621ab7f727c4373"
-  integrity sha512-VQcJE5lr78oc+lbcGfPonCDTRwLNSxwtPrUP6Tj+CoDedsVHZhODAlHzLHhxc4vuyrU7xomvKJLqTUgfDNxzXQ==
-
-"@algolia/logger-console@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/logger-console/-/logger-console-4.2.0.tgz#10e18ab75f60fd0f2e2b16cb9a1b0bcc947087f2"
-  integrity sha512-/1GE43jY0xKfJUi5ZGtEqq+oTyOzs+EgGKj7/zEHIpUc5NyxokIPWTqt3q6pzGSWFEkNbaA1gAVgXM1zCMVWYw==
-  dependencies:
-    "@algolia/logger-common" "4.2.0"
-
-"@algolia/requester-browser-xhr@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/requester-browser-xhr/-/requester-browser-xhr-4.2.0.tgz#c2a7982bef940e1749f2ba2aa04e3f8a971b6a78"
-  integrity sha512-+PZKOe+UBdZYQg/h/8AbKQ2Ha4uDeoLnpZFv00IMr/elym0m2hl76xAeIBiIqGYsLCmGybGBFUF9n1imsKJUJQ==
-  dependencies:
-    "@algolia/requester-common" "4.2.0"
-
-"@algolia/requester-common@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/requester-common/-/requester-common-4.2.0.tgz#df67a940516d5a313bbf79bcbceddadfff9f8ce2"
-  integrity sha512-SSKPRM/7UP54/dxyK6EYt4p6nTeJxYb1P6xVh/Ic6noBTCfqg5vBEKDa1DZD5MBtCvABoODd97UOfAo3ECG/jg==
-
-"@algolia/requester-node-http@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/requester-node-http/-/requester-node-http-4.2.0.tgz#e26efd3d630b7c988bcc9cda3a8ee68ab4a168dd"
-  integrity sha512-mRQgSM8qrMfjXaBnMjTmymR0NKwbr82Qwh1a5TgYyzMOBuRO5nRikawvTVgpNaEnQS0uesIiwd2ohOJ2gNu6oA==
-  dependencies:
-    "@algolia/requester-common" "4.2.0"
-
-"@algolia/transporter@4.2.0":
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/@algolia/transporter/-/transporter-4.2.0.tgz#9e6bea3304f1e6f4a64a3d7c1f9de047ba89056f"
-  integrity sha512-7CiwMYsEhrHySA8q70euIYOyhGtz/wz+MEC3nwGONBC82nGI6ntVqTFhCkpLIJqqbGbNlFgnCpwnLmSqLhRP3A==
-  dependencies:
-    "@algolia/cache-common" "4.2.0"
-    "@algolia/logger-common" "4.2.0"
-    "@algolia/requester-common" "4.2.0"
-
-"@nodelib/fs.scandir@2.1.4":
-  version "2.1.4"
-  resolved "https://registry.yarnpkg.com/@nodelib/fs.scandir/-/fs.scandir-2.1.4.tgz#d4b3549a5db5de2683e0c1071ab4f140904bbf69"
-  integrity sha512-33g3pMJk3bg5nXbL/+CY6I2eJDzZAni49PfJnL5fghPTggPvBd/pFNSgJsdAgWptuFu7qq/ERvOYFlhvsLTCKA==
-  dependencies:
-    "@nodelib/fs.stat" "2.0.4"
-    run-parallel "^1.1.9"
-
-"@nodelib/fs.stat@2.0.4", "@nodelib/fs.stat@^2.0.2":
-  version "2.0.4"
-  resolved "https://registry.yarnpkg.com/@nodelib/fs.stat/-/fs.stat-2.0.4.tgz#a3f2dd61bab43b8db8fa108a121cfffe4c676655"
-  integrity sha512-IYlHJA0clt2+Vg7bccq+TzRdJvv19c2INqBSsoOLp1je7xjtr7J26+WXR72MCdvU9q1qTzIWDfhMf+DRvQJK4Q==
-
-"@nodelib/fs.walk@^1.2.3":
-  version "1.2.6"
-  resolved "https://registry.yarnpkg.com/@nodelib/fs.walk/-/fs.walk-1.2.6.tgz#cce9396b30aa5afe9e3756608f5831adcb53d063"
-  integrity sha512-8Broas6vTtW4GIXTAHDoE32hnN2M5ykgCpWGbuXHQ15vEMqr23pB76e/GZcYsZCHALv50ktd24qhEyKr6wBtow==
-  dependencies:
-    "@nodelib/fs.scandir" "2.1.4"
-    fastq "^1.6.0"
-
-"@sindresorhus/is@^4.0.0":
-  version "4.0.1"
-  resolved "https://registry.yarnpkg.com/@sindresorhus/is/-/is-4.0.1.tgz#d26729db850fa327b7cacc5522252194404226f5"
-  integrity sha512-Qm9hBEBu18wt1PO2flE7LPb30BHMQt1eQgbV76YntdNk73XZGpn3izvGTYxbGgzXKgbCjiia0uxTd3aTNQrY/g==
-
-"@szmarczak/http-timer@^4.0.5":
-  version "4.0.5"
-  resolved "https://registry.yarnpkg.com/@szmarczak/http-timer/-/http-timer-4.0.5.tgz#bfbd50211e9dfa51ba07da58a14cdfd333205152"
-  integrity sha512-PyRA9sm1Yayuj5OIoJ1hGt2YISX45w9WcFbh6ddT0Z/0yaFxOtGLInr4jUfU1EAFVs0Yfyfev4RNwBlUaHdlDQ==
-  dependencies:
-    defer-to-connect "^2.0.0"
-
-"@types/cacheable-request@^6.0.1":
-  version "6.0.1"
-  resolved "https://registry.yarnpkg.com/@types/cacheable-request/-/cacheable-request-6.0.1.tgz#5d22f3dded1fd3a84c0bbeb5039a7419c2c91976"
-  integrity sha512-ykFq2zmBGOCbpIXtoVbz4SKY5QriWPh3AjyU4G74RYbtt5yOc5OfaY75ftjg7mikMOla1CTGpX3lLbuJh8DTrQ==
-  dependencies:
-    "@types/http-cache-semantics" "*"
-    "@types/keyv" "*"
-    "@types/node" "*"
-    "@types/responselike" "*"
-
-"@types/http-cache-semantics@*":
-  version "4.0.0"
-  resolved "https://registry.yarnpkg.com/@types/http-cache-semantics/-/http-cache-semantics-4.0.0.tgz#9140779736aa2655635ee756e2467d787cfe8a2a"
-  integrity sha512-c3Xy026kOF7QOTn00hbIllV1dLR9hG9NkSrLQgCVs8NF6sBU+VGWjD3wLPhmh1TYAc7ugCFsvHYMN4VcBN1U1A==
-
-"@types/keyv@*":
-  version "3.1.1"
-  resolved "https://registry.yarnpkg.com/@types/keyv/-/keyv-3.1.1.tgz#e45a45324fca9dab716ab1230ee249c9fb52cfa7"
-  integrity sha512-MPtoySlAZQ37VoLaPcTHCu1RWJ4llDkULYZIzOYxlhxBqYPB0RsRlmMU0R6tahtFe27mIdkHV+551ZWV4PLmVw==
-  dependencies:
-    "@types/node" "*"
-
-"@types/node@*":
-  version "15.3.1"
-  resolved "https://registry.yarnpkg.com/@types/node/-/node-15.3.1.tgz#23a06b87eedb524016616e886b116b8fdcb180af"
-  integrity sha512-weaeiP4UF4XgF++3rpQhpIJWsCTS4QJw5gvBhQu6cFIxTwyxWIe3xbnrY/o2lTCQ0lsdb8YIUDUvLR4Vuz5rbw==
-
-"@types/responselike@*", "@types/responselike@^1.0.0":
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/@types/responselike/-/responselike-1.0.0.tgz#251f4fe7d154d2bad125abe1b429b23afd262e29"
-  integrity sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==
-  dependencies:
-    "@types/node" "*"
-
-aggregate-error@^3.0.0:
-  version "3.1.0"
-  resolved "https://registry.yarnpkg.com/aggregate-error/-/aggregate-error-3.1.0.tgz#92670ff50f5359bdb7a3e0d40d0ec30c5737687a"
-  integrity sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==
-  dependencies:
-    clean-stack "^2.0.0"
-    indent-string "^4.0.0"
-
-algolia-indexing@^1.2.0:
-  version "1.2.0"
-  resolved "https://registry.yarnpkg.com/algolia-indexing/-/algolia-indexing-1.2.0.tgz#303c38a96327f1c67c636904c7a3ce0a6c064607"
-  integrity sha512-hLzlZlBxzcvsPm0xczuz3Hcpg6Vvi3T9oBWrWiU0koUnSumoON2/4MK+o0RTtbwV+VqB13HCnS1+BgvfE52Lgg==
-  dependencies:
-    algoliasearch "4.2.0"
-    firost "2.6.1"
-    golgoth "2.0.0"
-    node-object-hash "2.0.0"
-
-algoliasearch@4.2.0:
-  version "4.2.0"
-  resolved "https://registry.yarnpkg.com/algoliasearch/-/algoliasearch-4.2.0.tgz#dd81a1a0c57eb9f74af6db70b0c11f256692d1e6"
-  integrity sha512-CgbyDBGMSzNISBFezPt68xAseknork+wNe/Oour1Hluk4OwbtobysRawFf93ZbLSQw/KbeGlVmVAvujeVIVdnQ==
-  dependencies:
-    "@algolia/cache-browser-local-storage" "4.2.0"
-    "@algolia/cache-common" "4.2.0"
-    "@algolia/cache-in-memory" "4.2.0"
-    "@algolia/client-account" "4.2.0"
-    "@algolia/client-analytics" "4.2.0"
-    "@algolia/client-common" "4.2.0"
-    "@algolia/client-recommendation" "4.2.0"
-    "@algolia/client-search" "4.2.0"
-    "@algolia/logger-common" "4.2.0"
-    "@algolia/logger-console" "4.2.0"
-    "@algolia/requester-browser-xhr" "4.2.0"
-    "@algolia/requester-common" "4.2.0"
-    "@algolia/requester-node-http" "4.2.0"
-    "@algolia/transporter" "4.2.0"
-
-ansi-escapes@^4.2.1:
-  version "4.3.2"
-  resolved "https://registry.yarnpkg.com/ansi-escapes/-/ansi-escapes-4.3.2.tgz#6b2291d1db7d98b6521d5f1efa42d0f3a9feb65e"
-  integrity sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==
-  dependencies:
-    type-fest "^0.21.3"
-
-ansi-regex@^5.0.0:
-  version "5.0.0"
-  resolved "https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-5.0.0.tgz#388539f55179bf39339c81af30a654d69f87cb75"
-  integrity sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==
-
-ansi-styles@^4.1.0:
-  version "4.3.0"
-  resolved "https://registry.yarnpkg.com/ansi-styles/-/ansi-styles-4.3.0.tgz#edd803628ae71c04c85ae7a0906edad34b648937"
-  integrity sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==
-  dependencies:
-    color-convert "^2.0.1"
-
-anymatch@~3.1.1:
-  version "3.1.2"
-  resolved "https://registry.yarnpkg.com/anymatch/-/anymatch-3.1.2.tgz#c0557c096af32f106198f4f4e2a383537e378716"
-  integrity sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==
-  dependencies:
-    normalize-path "^3.0.0"
-    picomatch "^2.0.4"
-
-array-union@^2.1.0:
-  version "2.1.0"
-  resolved "https://registry.yarnpkg.com/array-union/-/array-union-2.1.0.tgz#b798420adbeb1de828d84acd8a2e23d3efe85e8d"
-  integrity sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==
-
-at-least-node@^1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/at-least-node/-/at-least-node-1.0.0.tgz#602cd4b46e844ad4effc92a8011a3c46e0238dc2"
-  integrity sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==
-
-balanced-match@^1.0.0:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.2.tgz#e83e3a7e3f300b34cb9d87f615fa0cbf357690ee"
-  integrity sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==
-
-base64-js@^1.3.1:
-  version "1.5.1"
-  resolved "https://registry.yarnpkg.com/base64-js/-/base64-js-1.5.1.tgz#1b1b440160a5bf7ad40b650f095963481903930a"
-  integrity sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==
-
-binary-extensions@^2.0.0:
-  version "2.2.0"
-  resolved "https://registry.yarnpkg.com/binary-extensions/-/binary-extensions-2.2.0.tgz#75f502eeaf9ffde42fc98829645be4ea76bd9e2d"
-  integrity sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==
-
-bl@^4.0.3:
-  version "4.1.0"
-  resolved "https://registry.yarnpkg.com/bl/-/bl-4.1.0.tgz#451535264182bec2fbbc83a62ab98cf11d9f7b3a"
-  integrity sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==
-  dependencies:
-    buffer "^5.5.0"
-    inherits "^2.0.4"
-    readable-stream "^3.4.0"
-
-brace-expansion@^1.1.7:
-  version "1.1.11"
-  resolved "https://registry.yarnpkg.com/brace-expansion/-/brace-expansion-1.1.11.tgz#3c7fcbf529d87226f3d2f52b966ff5271eb441dd"
-  integrity sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==
-  dependencies:
-    balanced-match "^1.0.0"
-    concat-map "0.0.1"
-
-braces@^3.0.1, braces@~3.0.2:
-  version "3.0.2"
-  resolved "https://registry.yarnpkg.com/braces/-/braces-3.0.2.tgz#3454e1a462ee8d599e236df336cd9ea4f8afe107"
-  integrity sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==
-  dependencies:
-    fill-range "^7.0.1"
-
-buffer@^5.5.0:
-  version "5.7.1"
-  resolved "https://registry.yarnpkg.com/buffer/-/buffer-5.7.1.tgz#ba62e7c13133053582197160851a8f648e99eed0"
-  integrity sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==
-  dependencies:
-    base64-js "^1.3.1"
-    ieee754 "^1.1.13"
-
-cacheable-lookup@^5.0.3:
-  version "5.0.4"
-  resolved "https://registry.yarnpkg.com/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz#5a6b865b2c44357be3d5ebc2a467b032719a7005"
-  integrity sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==
-
-cacheable-request@^7.0.1:
-  version "7.0.1"
-  resolved "https://registry.yarnpkg.com/cacheable-request/-/cacheable-request-7.0.1.tgz#062031c2856232782ed694a257fa35da93942a58"
-  integrity sha512-lt0mJ6YAnsrBErpTMWeu5kl/tg9xMAWjavYTN6VQXM1A/teBITuNcccXsCxF0tDQQJf9DfAaX5O4e0zp0KlfZw==
-  dependencies:
-    clone-response "^1.0.2"
-    get-stream "^5.1.0"
-    http-cache-semantics "^4.0.0"
-    keyv "^4.0.0"
-    lowercase-keys "^2.0.0"
-    normalize-url "^4.1.0"
-    responselike "^2.0.0"
-
-callsites@3.1.0, callsites@^3.1.0:
-  version "3.1.0"
-  resolved "https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73"
-  integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
-
-chalk@4.1.0:
-  version "4.1.0"
-  resolved "https://registry.yarnpkg.com/chalk/-/chalk-4.1.0.tgz#4e14870a618d9e2edd97dd8345fd9d9dc315646a"
-  integrity sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==
-  dependencies:
-    ansi-styles "^4.1.0"
-    supports-color "^7.1.0"
-
-chalk@^4.1.0:
-  version "4.1.1"
-  resolved "https://registry.yarnpkg.com/chalk/-/chalk-4.1.1.tgz#c80b3fab28bf6371e6863325eee67e618b77e6ad"
-  integrity sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==
-  dependencies:
-    ansi-styles "^4.1.0"
-    supports-color "^7.1.0"
-
-chardet@^0.7.0:
-  version "0.7.0"
-  resolved "https://registry.yarnpkg.com/chardet/-/chardet-0.7.0.tgz#90094849f0937f2eedc2425d0d28a9e5f0cbad9e"
-  integrity sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==
-
-chokidar@3.5.0:
-  version "3.5.0"
-  resolved "https://registry.yarnpkg.com/chokidar/-/chokidar-3.5.0.tgz#458a4816a415e9d3b3caa4faec2b96a6935a9e65"
-  integrity sha512-JgQM9JS92ZbFR4P90EvmzNpSGhpPBGBSj10PILeDyYFwp4h2/D9OM03wsJ4zW1fEp4ka2DGrnUeD7FuvQ2aZ2Q==
-  dependencies:
-    anymatch "~3.1.1"
-    braces "~3.0.2"
-    glob-parent "~5.1.0"
-    is-binary-path "~2.1.0"
-    is-glob "~4.0.1"
-    normalize-path "~3.0.0"
-    readdirp "~3.5.0"
-  optionalDependencies:
-    fsevents "~2.3.1"
-
-clean-stack@^2.0.0:
-  version "2.2.0"
-  resolved "https://registry.yarnpkg.com/clean-stack/-/clean-stack-2.2.0.tgz#ee8472dbb129e727b31e8a10a427dee9dfe4008b"
-  integrity sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==
-
-clear-module@4.1.1:
-  version "4.1.1"
-  resolved "https://registry.yarnpkg.com/clear-module/-/clear-module-4.1.1.tgz#bf8ba3b62eb70ee1e0adec90589741425cf32db8"
-  integrity sha512-ng0E7LeODcT3QkazOckzZqbca+JByQy/Q2Z6qO24YsTp+pLxCfohGz2gJYJqZS0CWTX3LEUiHOqe5KlYeUbEMw==
-  dependencies:
-    parent-module "^2.0.0"
-    resolve-from "^5.0.0"
-
-cli-cursor@^3.1.0:
-  version "3.1.0"
-  resolved "https://registry.yarnpkg.com/cli-cursor/-/cli-cursor-3.1.0.tgz#264305a7ae490d1d03bf0c9ba7c925d1753af307"
-  integrity sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==
-  dependencies:
-    restore-cursor "^3.1.0"
-
-cli-spinners@^2.5.0:
-  version "2.6.0"
-  resolved "https://registry.yarnpkg.com/cli-spinners/-/cli-spinners-2.6.0.tgz#36c7dc98fb6a9a76bd6238ec3f77e2425627e939"
-  integrity sha512-t+4/y50K/+4xcCRosKkA7W4gTr1MySvLV0q+PxmG7FJ5g+66ChKurYjxBCjHggHH3HA5Hh9cy+lcUGWDqVH+4Q==
-
-cli-width@^3.0.0:
-  version "3.0.0"
-  resolved "https://registry.yarnpkg.com/cli-width/-/cli-width-3.0.0.tgz#a2f48437a2caa9a22436e794bf071ec9e61cedf6"
-  integrity sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw==
-
-clone-response@^1.0.2:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/clone-response/-/clone-response-1.0.2.tgz#d1dc973920314df67fbeb94223b4ee350239e96b"
-  integrity sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=
-  dependencies:
-    mimic-response "^1.0.0"
-
-clone@^1.0.2:
-  version "1.0.4"
-  resolved "https://registry.yarnpkg.com/clone/-/clone-1.0.4.tgz#da309cc263df15994c688ca902179ca3c7cd7c7e"
-  integrity sha1-2jCcwmPfFZlMaIypAheco8fNfH4=
-
-color-convert@^2.0.1:
-  version "2.0.1"
-  resolved "https://registry.yarnpkg.com/color-convert/-/color-convert-2.0.1.tgz#72d3a68d598c9bdb3af2ad1e84f21d896abd4de3"
-  integrity sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==
-  dependencies:
-    color-name "~1.1.4"
-
-color-name@~1.1.4:
-  version "1.1.4"
-  resolved "https://registry.yarnpkg.com/color-name/-/color-name-1.1.4.tgz#c2a09a87acbde69543de6f63fa3995c826c536a2"
-  integrity sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==
-
-concat-map@0.0.1:
-  version "0.0.1"
-  resolved "https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b"
-  integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=
-
-convert-hrtime@^3.0.0:
-  version "3.0.0"
-  resolved "https://registry.yarnpkg.com/convert-hrtime/-/convert-hrtime-3.0.0.tgz#62c7593f5809ca10be8da858a6d2f702bcda00aa"
-  integrity sha512-7V+KqSvMiHp8yWDuwfww06XleMWVVB9b9tURBx+G7UTADuo5hYPuowKloz4OzOqbPezxgo+fdQ1522WzPG4OeA==
-
-cross-spawn@^7.0.3:
-  version "7.0.3"
-  resolved "https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.3.tgz#f73a85b9d5d41d045551c177e2882d4ac85728a6"
-  integrity sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==
-  dependencies:
-    path-key "^3.1.0"
-    shebang-command "^2.0.0"
-    which "^2.0.1"
-
-crypto-random-string@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/crypto-random-string/-/crypto-random-string-2.0.0.tgz#ef2a7a966ec11083388369baa02ebead229b30d5"
-  integrity sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==
-
-dayjs@1.9.6:
-  version "1.9.6"
-  resolved "https://registry.yarnpkg.com/dayjs/-/dayjs-1.9.6.tgz#6f0c77d76ac1ff63720dd1197e5cb87b67943d70"
-  integrity sha512-HngNLtPEBWRo8EFVmHFmSXAjtCX8rGNqeXQI0Gh7wCTSqwaKgPIDqu9m07wABVopNwzvOeCb+2711vQhDlcIXw==
-
-decode-uri-component@^0.2.0:
-  version "0.2.0"
-  resolved "https://registry.yarnpkg.com/decode-uri-component/-/decode-uri-component-0.2.0.tgz#eb3913333458775cb84cd1a1fae062106bb87545"
-  integrity sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=
-
-decompress-response@^6.0.0:
-  version "6.0.0"
-  resolved "https://registry.yarnpkg.com/decompress-response/-/decompress-response-6.0.0.tgz#ca387612ddb7e104bd16d85aab00d5ecf09c66fc"
-  integrity sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==
-  dependencies:
-    mimic-response "^3.1.0"
-
-dedent@0.7.0:
-  version "0.7.0"
-  resolved "https://registry.yarnpkg.com/dedent/-/dedent-0.7.0.tgz#2495ddbaf6eb874abb0e1be9df22d2e5a544326c"
-  integrity sha1-JJXduvbrh0q7Dhvp3yLS5aVEMmw=
-
-defaults@^1.0.3:
-  version "1.0.3"
-  resolved "https://registry.yarnpkg.com/defaults/-/defaults-1.0.3.tgz#c656051e9817d9ff08ed881477f3fe4019f3ef7d"
-  integrity sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=
-  dependencies:
-    clone "^1.0.2"
-
-defer-to-connect@^2.0.0:
-  version "2.0.1"
-  resolved "https://registry.yarnpkg.com/defer-to-connect/-/defer-to-connect-2.0.1.tgz#8016bdb4143e4632b77a3449c6236277de520587"
-  integrity sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==
-
-del@^6.0.0:
-  version "6.0.0"
-  resolved "https://registry.yarnpkg.com/del/-/del-6.0.0.tgz#0b40d0332cea743f1614f818be4feb717714c952"
-  integrity sha512-1shh9DQ23L16oXSZKB2JxpL7iMy2E0S9d517ptA1P8iw0alkPtQcrKH7ru31rYtKwF499HkTu+DRzq3TCKDFRQ==
-  dependencies:
-    globby "^11.0.1"
-    graceful-fs "^4.2.4"
-    is-glob "^4.0.1"
-    is-path-cwd "^2.2.0"
-    is-path-inside "^3.0.2"
-    p-map "^4.0.0"
-    rimraf "^3.0.2"
-    slash "^3.0.0"
-
-dir-glob@^3.0.1:
-  version "3.0.1"
-  resolved "https://registry.yarnpkg.com/dir-glob/-/dir-glob-3.0.1.tgz#56dbf73d992a4a93ba1584f4534063fd2e41717f"
-  integrity sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==
-  dependencies:
-    path-type "^4.0.0"
-
-emoji-regex@^8.0.0:
-  version "8.0.0"
-  resolved "https://registry.yarnpkg.com/emoji-regex/-/emoji-regex-8.0.0.tgz#e818fd69ce5ccfcb404594f842963bf53164cc37"
-  integrity sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==
-
-end-of-stream@^1.1.0:
-  version "1.4.4"
-  resolved "https://registry.yarnpkg.com/end-of-stream/-/end-of-stream-1.4.4.tgz#5ae64a5f45057baf3626ec14da0ca5e4b2431eb0"
-  integrity sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==
-  dependencies:
-    once "^1.4.0"
-
-escape-string-regexp@^1.0.5:
-  version "1.0.5"
-  resolved "https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4"
-  integrity sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=
-
-esm@3.2.25:
-  version "3.2.25"
-  resolved "https://registry.yarnpkg.com/esm/-/esm-3.2.25.tgz#342c18c29d56157688ba5ce31f8431fbb795cc10"
-  integrity sha512-U1suiZ2oDVWv4zPO56S0NcR5QriEahGtdN2OR6FiOG4WJvcjBVFB0qI4+eKoWFH483PKGuLuu6V8Z4T5g63UVA==
-
-eventemitter2@6.4.3:
-  version "6.4.3"
-  resolved "https://registry.yarnpkg.com/eventemitter2/-/eventemitter2-6.4.3.tgz#35c563619b13f3681e7eb05cbdaf50f56ba58820"
-  integrity sha512-t0A2msp6BzOf+QAcI6z9XMktLj52OjGQg+8SJH6v5+3uxNpWYRR3wQmfA+6xtMU9kOC59qk9licus5dYcrYkMQ==
-
-execa@5.0.0:
-  version "5.0.0"
-  resolved "https://registry.yarnpkg.com/execa/-/execa-5.0.0.tgz#4029b0007998a841fbd1032e5f4de86a3c1e3376"
-  integrity sha512-ov6w/2LCiuyO4RLYGdpFGjkcs0wMTgGE8PrkTHikeUy5iJekXyPIKUjifk5CsE0pt7sMCrMZ3YNqoCj6idQOnQ==
-  dependencies:
-    cross-spawn "^7.0.3"
-    get-stream "^6.0.0"
-    human-signals "^2.1.0"
-    is-stream "^2.0.0"
-    merge-stream "^2.0.0"
-    npm-run-path "^4.0.1"
-    onetime "^5.1.2"
-    signal-exit "^3.0.3"
-    strip-final-newline "^2.0.0"
-
-external-editor@^3.0.3:
-  version "3.1.0"
-  resolved "https://registry.yarnpkg.com/external-editor/-/external-editor-3.1.0.tgz#cb03f740befae03ea4d283caed2741a83f335495"
-  integrity sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==
-  dependencies:
-    chardet "^0.7.0"
-    iconv-lite "^0.4.24"
-    tmp "^0.0.33"
-
-fast-glob@^3.1.1:
-  version "3.2.5"
-  resolved "https://registry.yarnpkg.com/fast-glob/-/fast-glob-3.2.5.tgz#7939af2a656de79a4f1901903ee8adcaa7cb9661"
-  integrity sha512-2DtFcgT68wiTTiwZ2hNdJfcHNke9XOfnwmBRWXhmeKM8rF0TGwmC/Qto3S7RoZKp5cilZbxzO5iTNTQsJ+EeDg==
-  dependencies:
-    "@nodelib/fs.stat" "^2.0.2"
-    "@nodelib/fs.walk" "^1.2.3"
-    glob-parent "^5.1.0"
-    merge2 "^1.3.0"
-    micromatch "^4.0.2"
-    picomatch "^2.2.1"
-
-fastq@^1.6.0:
-  version "1.11.0"
-  resolved "https://registry.yarnpkg.com/fastq/-/fastq-1.11.0.tgz#bb9fb955a07130a918eb63c1f5161cc32a5d0858"
-  integrity sha512-7Eczs8gIPDrVzT+EksYBcupqMyxSHXXrHOLRRxU2/DicV8789MRBRR8+Hc2uWzUupOs4YS4JzBmBxjjCVBxD/g==
-  dependencies:
-    reusify "^1.0.4"
-
-figures@^3.0.0:
-  version "3.2.0"
-  resolved "https://registry.yarnpkg.com/figures/-/figures-3.2.0.tgz#625c18bd293c604dc4a8ddb2febf0c88341746af"
-  integrity sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==
-  dependencies:
-    escape-string-regexp "^1.0.5"
-
-fill-range@^7.0.1:
-  version "7.0.1"
-  resolved "https://registry.yarnpkg.com/fill-range/-/fill-range-7.0.1.tgz#1919a6a7c75fe38b2c7c77e5198535da9acdda40"
-  integrity sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==
-  dependencies:
-    to-regex-range "^5.0.1"
-
-find-up@5.0.0:
-  version "5.0.0"
-  resolved "https://registry.yarnpkg.com/find-up/-/find-up-5.0.0.tgz#4c92819ecb7083561e4f4a240a86be5198f536fc"
-  integrity sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==
-  dependencies:
-    locate-path "^6.0.0"
-    path-exists "^4.0.0"
-
-firost@2.6.1:
-  version "2.6.1"
-  resolved "https://registry.yarnpkg.com/firost/-/firost-2.6.1.tgz#138873e3c99dd3dc0ca8d1a04a5a23136237a4d3"
-  integrity sha512-WQN2DyL8f07YVcq/Sqi+gIZea5prqvzS0E8FqTskyJ8zhScGyCcUXLXc2pKcN5gSKgQorK1VuDScErdT+gtM8g==
-  dependencies:
-    callsites "3.1.0"
-    chokidar "3.5.0"
-    clear-module "4.1.1"
-    eventemitter2 "6.4.3"
-    execa "5.0.0"
-    find-up "5.0.0"
-    fs-extra "9.0.1"
-    globby "11.0.1"
-    golgoth "2.0.0"
-    inquirer "7.3.3"
-    is-glob "4.0.1"
-    json-stable-stringify "1.0.1"
-    nanoid "3.1.20"
-    normalize-url "5.3.0"
-    ora "5.2.0"
-    std-mocks "1.0.1"
-    strip-ansi "6.0.0"
-    tempy "1.0.0"
-    untildify "4.0.0"
-    which "2.0.2"
-
-flat@5.0.2:
-  version "5.0.2"
-  resolved "https://registry.yarnpkg.com/flat/-/flat-5.0.2.tgz#8ca6fe332069ffa9d324c327198c598259ceb241"
-  integrity sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ==
-
-fs-extra@9.0.1:
-  version "9.0.1"
-  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-9.0.1.tgz#910da0062437ba4c39fedd863f1675ccfefcb9fc"
-  integrity sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==
-  dependencies:
-    at-least-node "^1.0.0"
-    graceful-fs "^4.2.0"
-    jsonfile "^6.0.1"
-    universalify "^1.0.0"
-
-fs.realpath@^1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f"
-  integrity sha1-FQStJSMVjKpA20onh8sBQRmU6k8=
-
-fsevents@~2.3.1:
-  version "2.3.2"
-  resolved "https://registry.yarnpkg.com/fsevents/-/fsevents-2.3.2.tgz#8a526f78b8fdf4623b709e0b975c52c24c02fd1a"
-  integrity sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==
-
-get-stream@^5.1.0:
-  version "5.2.0"
-  resolved "https://registry.yarnpkg.com/get-stream/-/get-stream-5.2.0.tgz#4966a1795ee5ace65e706c4b7beb71257d6e22d3"
-  integrity sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==
-  dependencies:
-    pump "^3.0.0"
-
-get-stream@^6.0.0:
-  version "6.0.1"
-  resolved "https://registry.yarnpkg.com/get-stream/-/get-stream-6.0.1.tgz#a262d8eef67aced57c2852ad6167526a43cbf7b7"
-  integrity sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==
-
-glob-parent@^5.1.0, glob-parent@~5.1.0:
-  version "5.1.2"
-  resolved "https://registry.yarnpkg.com/glob-parent/-/glob-parent-5.1.2.tgz#869832c58034fe68a4093c17dc15e8340d8401c4"
-  integrity sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==
-  dependencies:
-    is-glob "^4.0.1"
-
-glob@^7.1.3:
-  version "7.1.7"
-  resolved "https://registry.yarnpkg.com/glob/-/glob-7.1.7.tgz#3b193e9233f01d42d0b3f78294bbeeb418f94a90"
-  integrity sha512-OvD9ENzPLbegENnYP5UUfJIirTg4+XwMWGaQfQTY0JenxNvvIKP3U3/tAQSPIu/lHxXYSZmpXlUHeqAIdKzBLQ==
-  dependencies:
-    fs.realpath "^1.0.0"
-    inflight "^1.0.4"
-    inherits "2"
-    minimatch "^3.0.4"
-    once "^1.3.0"
-    path-is-absolute "^1.0.0"
-
-globby@11.0.1:
-  version "11.0.1"
-  resolved "https://registry.yarnpkg.com/globby/-/globby-11.0.1.tgz#9a2bf107a068f3ffeabc49ad702c79ede8cfd357"
-  integrity sha512-iH9RmgwCmUJHi2z5o2l3eTtGBtXek1OYlHrbcxOYugyHLmAsZrPj43OtHThd62Buh/Vv6VyCBD2bdyWcGNQqoQ==
-  dependencies:
-    array-union "^2.1.0"
-    dir-glob "^3.0.1"
-    fast-glob "^3.1.1"
-    ignore "^5.1.4"
-    merge2 "^1.3.0"
-    slash "^3.0.0"
-
-globby@^11.0.1:
-  version "11.0.3"
-  resolved "https://registry.yarnpkg.com/globby/-/globby-11.0.3.tgz#9b1f0cb523e171dd1ad8c7b2a9fb4b644b9593cb"
-  integrity sha512-ffdmosjA807y7+lA1NM0jELARVmYul/715xiILEjo3hBLPTcirgQNnXECn5g3mtR8TOLCVbkfua1Hpen25/Xcg==
-  dependencies:
-    array-union "^2.1.0"
-    dir-glob "^3.0.1"
-    fast-glob "^3.1.1"
-    ignore "^5.1.4"
-    merge2 "^1.3.0"
-    slash "^3.0.0"
-
-golgoth@2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/golgoth/-/golgoth-2.0.0.tgz#29bb68398b57c4558fca2cc57f2ddcdf1bf03323"
-  integrity sha512-LJmQuGMdm+Hh7b8UBpstnfhjswzLA30WfKHPvMm+NTZUSq0y4YQ3mr3Nbj49Qs9sac2DT5Qw99g2djfvdyeilA==
-  dependencies:
-    chalk "4.1.0"
-    dayjs "1.9.6"
-    dedent "0.7.0"
-    esm "3.2.25"
-    flat "5.0.2"
-    got "11.8.0"
-    lodash "4.17.20"
-    p-all "3.0.0"
-    p-map "4.0.0"
-    p-map-series "2.1.0"
-    p-props "4.0.0"
-    pify "5.0.0"
-    query-string "6.13.7"
-    time-span "4.0.0"
-
-got@11.8.0:
-  version "11.8.0"
-  resolved "https://registry.yarnpkg.com/got/-/got-11.8.0.tgz#be0920c3586b07fd94add3b5b27cb28f49e6545f"
-  integrity sha512-k9noyoIIY9EejuhaBNLyZ31D5328LeqnyPNXJQb2XlJZcKakLqN5m6O/ikhq/0lw56kUYS54fVm+D1x57YC9oQ==
-  dependencies:
-    "@sindresorhus/is" "^4.0.0"
-    "@szmarczak/http-timer" "^4.0.5"
-    "@types/cacheable-request" "^6.0.1"
-    "@types/responselike" "^1.0.0"
-    cacheable-lookup "^5.0.3"
-    cacheable-request "^7.0.1"
-    decompress-response "^6.0.0"
-    http2-wrapper "^1.0.0-beta.5.2"
-    lowercase-keys "^2.0.0"
-    p-cancelable "^2.0.0"
-    responselike "^2.0.0"
-
-graceful-fs@^4.1.6, graceful-fs@^4.2.0, graceful-fs@^4.2.4:
-  version "4.2.6"
-  resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-4.2.6.tgz#ff040b2b0853b23c3d31027523706f1885d76bee"
-  integrity sha512-nTnJ528pbqxYanhpDYsi4Rd8MAeaBA67+RZ10CM1m3bTAVFEDcd5AuA4a6W5YkGZ1iNXHzZz8T6TBKLeBuNriQ==
-
-has-flag@^4.0.0:
-  version "4.0.0"
-  resolved "https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b"
-  integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
-
-http-cache-semantics@^4.0.0:
-  version "4.1.0"
-  resolved "https://registry.yarnpkg.com/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz#49e91c5cbf36c9b94bcfcd71c23d5249ec74e390"
-  integrity sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==
-
-http2-wrapper@^1.0.0-beta.5.2:
-  version "1.0.3"
-  resolved "https://registry.yarnpkg.com/http2-wrapper/-/http2-wrapper-1.0.3.tgz#b8f55e0c1f25d4ebd08b3b0c2c079f9590800b3d"
-  integrity sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==
-  dependencies:
-    quick-lru "^5.1.1"
-    resolve-alpn "^1.0.0"
-
-human-signals@^2.1.0:
-  version "2.1.0"
-  resolved "https://registry.yarnpkg.com/human-signals/-/human-signals-2.1.0.tgz#dc91fcba42e4d06e4abaed33b3e7a3c02f514ea0"
-  integrity sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==
-
-iconv-lite@^0.4.24:
-  version "0.4.24"
-  resolved "https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.24.tgz#2022b4b25fbddc21d2f524974a474aafe733908b"
-  integrity sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==
-  dependencies:
-    safer-buffer ">= 2.1.2 < 3"
-
-ieee754@^1.1.13:
-  version "1.2.1"
-  resolved "https://registry.yarnpkg.com/ieee754/-/ieee754-1.2.1.tgz#8eb7a10a63fff25d15a57b001586d177d1b0d352"
-  integrity sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==
-
-ignore@^5.1.4:
-  version "5.1.8"
-  resolved "https://registry.yarnpkg.com/ignore/-/ignore-5.1.8.tgz#f150a8b50a34289b33e22f5889abd4d8016f0e57"
-  integrity sha512-BMpfD7PpiETpBl/A6S498BaIJ6Y/ABT93ETbby2fP00v4EbvPBXWEoaR1UBPKs3iR53pJY7EtZk5KACI57i1Uw==
-
-indent-string@^4.0.0:
-  version "4.0.0"
-  resolved "https://registry.yarnpkg.com/indent-string/-/indent-string-4.0.0.tgz#624f8f4497d619b2d9768531d58f4122854d7251"
-  integrity sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==
-
-inflight@^1.0.4:
-  version "1.0.6"
-  resolved "https://registry.yarnpkg.com/inflight/-/inflight-1.0.6.tgz#49bd6331d7d02d0c09bc910a1075ba8165b56df9"
-  integrity sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=
-  dependencies:
-    once "^1.3.0"
-    wrappy "1"
-
-inherits@2, inherits@^2.0.3, inherits@^2.0.4:
-  version "2.0.4"
-  resolved "https://registry.yarnpkg.com/inherits/-/inherits-2.0.4.tgz#0fa2c64f932917c3433a0ded55363aae37416b7c"
-  integrity sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==
-
-inquirer@7.3.3:
-  version "7.3.3"
-  resolved "https://registry.yarnpkg.com/inquirer/-/inquirer-7.3.3.tgz#04d176b2af04afc157a83fd7c100e98ee0aad003"
-  integrity sha512-JG3eIAj5V9CwcGvuOmoo6LB9kbAYT8HXffUl6memuszlwDC/qvFAJw49XJ5NROSFNPxp3iQg1GqkFhaY/CR0IA==
-  dependencies:
-    ansi-escapes "^4.2.1"
-    chalk "^4.1.0"
-    cli-cursor "^3.1.0"
-    cli-width "^3.0.0"
-    external-editor "^3.0.3"
-    figures "^3.0.0"
-    lodash "^4.17.19"
-    mute-stream "0.0.8"
-    run-async "^2.4.0"
-    rxjs "^6.6.0"
-    string-width "^4.1.0"
-    strip-ansi "^6.0.0"
-    through "^2.3.6"
-
-is-binary-path@~2.1.0:
-  version "2.1.0"
-  resolved "https://registry.yarnpkg.com/is-binary-path/-/is-binary-path-2.1.0.tgz#ea1f7f3b80f064236e83470f86c09c254fb45b09"
-  integrity sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==
-  dependencies:
-    binary-extensions "^2.0.0"
-
-is-extglob@^2.1.1:
-  version "2.1.1"
-  resolved "https://registry.yarnpkg.com/is-extglob/-/is-extglob-2.1.1.tgz#a88c02535791f02ed37c76a1b9ea9773c833f8c2"
-  integrity sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=
-
-is-fullwidth-code-point@^3.0.0:
-  version "3.0.0"
-  resolved "https://registry.yarnpkg.com/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz#f116f8064fe90b3f7844a38997c0b75051269f1d"
-  integrity sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==
-
-is-glob@4.0.1, is-glob@^4.0.1, is-glob@~4.0.1:
-  version "4.0.1"
-  resolved "https://registry.yarnpkg.com/is-glob/-/is-glob-4.0.1.tgz#7567dbe9f2f5e2467bc77ab83c4a29482407a5dc"
-  integrity sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==
-  dependencies:
-    is-extglob "^2.1.1"
-
-is-interactive@^1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/is-interactive/-/is-interactive-1.0.0.tgz#cea6e6ae5c870a7b0a0004070b7b587e0252912e"
-  integrity sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==
-
-is-number@^7.0.0:
-  version "7.0.0"
-  resolved "https://registry.yarnpkg.com/is-number/-/is-number-7.0.0.tgz#7535345b896734d5f80c4d06c50955527a14f12b"
-  integrity sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==
-
-is-path-cwd@^2.2.0:
-  version "2.2.0"
-  resolved "https://registry.yarnpkg.com/is-path-cwd/-/is-path-cwd-2.2.0.tgz#67d43b82664a7b5191fd9119127eb300048a9fdb"
-  integrity sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ==
-
-is-path-inside@^3.0.2:
-  version "3.0.3"
-  resolved "https://registry.yarnpkg.com/is-path-inside/-/is-path-inside-3.0.3.tgz#d231362e53a07ff2b0e0ea7fed049161ffd16283"
-  integrity sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==
-
-is-stream@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/is-stream/-/is-stream-2.0.0.tgz#bde9c32680d6fae04129d6ac9d921ce7815f78e3"
-  integrity sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==
-
-is-unicode-supported@^0.1.0:
-  version "0.1.0"
-  resolved "https://registry.yarnpkg.com/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz#3f26c76a809593b52bfa2ecb5710ed2779b522a7"
-  integrity sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==
-
-isexe@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/isexe/-/isexe-2.0.0.tgz#e8fbf374dc556ff8947a10dcb0572d633f2cfa10"
-  integrity sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=
-
-json-buffer@3.0.1:
-  version "3.0.1"
-  resolved "https://registry.yarnpkg.com/json-buffer/-/json-buffer-3.0.1.tgz#9338802a30d3b6605fbe0613e094008ca8c05a13"
-  integrity sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==
-
-json-stable-stringify@1.0.1:
-  version "1.0.1"
-  resolved "https://registry.yarnpkg.com/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz#9a759d39c5f2ff503fd5300646ed445f88c4f9af"
-  integrity sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=
-  dependencies:
-    jsonify "~0.0.0"
-
-jsonfile@^6.0.1:
-  version "6.1.0"
-  resolved "https://registry.yarnpkg.com/jsonfile/-/jsonfile-6.1.0.tgz#bc55b2634793c679ec6403094eb13698a6ec0aae"
-  integrity sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==
-  dependencies:
-    universalify "^2.0.0"
-  optionalDependencies:
-    graceful-fs "^4.1.6"
-
-jsonify@~0.0.0:
-  version "0.0.0"
-  resolved "https://registry.yarnpkg.com/jsonify/-/jsonify-0.0.0.tgz#2c74b6ee41d93ca51b7b5aaee8f503631d252a73"
-  integrity sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=
-
-keyv@^4.0.0:
-  version "4.0.3"
-  resolved "https://registry.yarnpkg.com/keyv/-/keyv-4.0.3.tgz#4f3aa98de254803cafcd2896734108daa35e4254"
-  integrity sha512-zdGa2TOpSZPq5mU6iowDARnMBZgtCqJ11dJROFi6tg6kTn4nuUdU09lFyLFSaHrWqpIJ+EBq4E8/Dc0Vx5vLdA==
-  dependencies:
-    json-buffer "3.0.1"
-
-locate-path@^6.0.0:
-  version "6.0.0"
-  resolved "https://registry.yarnpkg.com/locate-path/-/locate-path-6.0.0.tgz#55321eb309febbc59c4801d931a72452a681d286"
-  integrity sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==
-  dependencies:
-    p-locate "^5.0.0"
-
-lodash@4.17.20:
-  version "4.17.20"
-  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.20.tgz#b44a9b6297bcb698f1c51a3545a2b3b368d59c52"
-  integrity sha512-PlhdFcillOINfeV7Ni6oF1TAEayyZBoZ8bcshTHqOYJYlrqzRK5hagpagky5o4HfCzzd1TRkXPMFq6cKk9rGmA==
-
-lodash@^4.11.1, lodash@^4.17.19:
-  version "4.17.21"
-  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c"
-  integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
-
-log-symbols@^4.0.0:
-  version "4.1.0"
-  resolved "https://registry.yarnpkg.com/log-symbols/-/log-symbols-4.1.0.tgz#3fbdbb95b4683ac9fc785111e792e558d4abd503"
-  integrity sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==
-  dependencies:
-    chalk "^4.1.0"
-    is-unicode-supported "^0.1.0"
-
-lowercase-keys@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/lowercase-keys/-/lowercase-keys-2.0.0.tgz#2603e78b7b4b0006cbca2fbcc8a3202558ac9479"
-  integrity sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==
-
-merge-stream@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/merge-stream/-/merge-stream-2.0.0.tgz#52823629a14dd00c9770fb6ad47dc6310f2c1f60"
-  integrity sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==
-
-merge2@^1.3.0:
-  version "1.4.1"
-  resolved "https://registry.yarnpkg.com/merge2/-/merge2-1.4.1.tgz#4368892f885e907455a6fd7dc55c0c9d404990ae"
-  integrity sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==
-
-micromatch@^4.0.2:
-  version "4.0.4"
-  resolved "https://registry.yarnpkg.com/micromatch/-/micromatch-4.0.4.tgz#896d519dfe9db25fce94ceb7a500919bf881ebf9"
-  integrity sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==
-  dependencies:
-    braces "^3.0.1"
-    picomatch "^2.2.3"
-
-mimic-fn@^2.1.0:
-  version "2.1.0"
-  resolved "https://registry.yarnpkg.com/mimic-fn/-/mimic-fn-2.1.0.tgz#7ed2c2ccccaf84d3ffcb7a69b57711fc2083401b"
-  integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==
-
-mimic-response@^1.0.0:
-  version "1.0.1"
-  resolved "https://registry.yarnpkg.com/mimic-response/-/mimic-response-1.0.1.tgz#4923538878eef42063cb8a3e3b0798781487ab1b"
-  integrity sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==
-
-mimic-response@^3.1.0:
-  version "3.1.0"
-  resolved "https://registry.yarnpkg.com/mimic-response/-/mimic-response-3.1.0.tgz#2d1d59af9c1b129815accc2c46a022a5ce1fa3c9"
-  integrity sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==
-
-minimatch@^3.0.4:
-  version "3.0.4"
-  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.4.tgz#5166e286457f03306064be5497e8dbb0c3d32083"
-  integrity sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==
-  dependencies:
-    brace-expansion "^1.1.7"
-
-mute-stream@0.0.8:
-  version "0.0.8"
-  resolved "https://registry.yarnpkg.com/mute-stream/-/mute-stream-0.0.8.tgz#1630c42b2251ff81e2a283de96a5497ea92e5e0d"
-  integrity sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==
-
-nanoid@3.1.20:
-  version "3.1.20"
-  resolved "https://registry.yarnpkg.com/nanoid/-/nanoid-3.1.20.tgz#badc263c6b1dcf14b71efaa85f6ab4c1d6cfc788"
-  integrity sha512-a1cQNyczgKbLX9jwbS/+d7W8fX/RfgYR7lVWwWOGIPNgK2m0MWvrGF6/m4kk6U3QcFMnZf3RIhL0v2Jgh/0Uxw==
-
-node-object-hash@2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/node-object-hash/-/node-object-hash-2.0.0.tgz#9971fcdb7d254f05016bd9ccf508352bee11116b"
-  integrity sha512-VZR0zroAusy1ETZMZiGeLkdu50LGjG5U1KHZqTruqtTyQ2wfWhHG2Ow4nsUbfTFGlaREgNHcCWoM/OzEm6p+NQ==
-
-normalize-path@^3.0.0, normalize-path@~3.0.0:
-  version "3.0.0"
-  resolved "https://registry.yarnpkg.com/normalize-path/-/normalize-path-3.0.0.tgz#0dcd69ff23a1c9b11fd0978316644a0388216a65"
-  integrity sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==
-
-normalize-url@5.3.0:
-  version "5.3.0"
-  resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-5.3.0.tgz#8959b3cdaa295b61592c1f245dded34b117618dd"
-  integrity sha512-9/nOVLYYe/dO/eJeQUNaGUF4m4Z5E7cb9oNTKabH+bNf19mqj60txTcveQxL0GlcWLXCxkOu2/LwL8oW0idIDA==
-
-normalize-url@^4.1.0:
-  version "4.5.0"
-  resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-4.5.0.tgz#453354087e6ca96957bd8f5baf753f5982142129"
-  integrity sha512-2s47yzUxdexf1OhyRi4Em83iQk0aPvwTddtFz4hnSSw9dCEsLEGf6SwIO8ss/19S9iBb5sJaOuTvTGDeZI00BQ==
-
-npm-run-path@^4.0.1:
-  version "4.0.1"
-  resolved "https://registry.yarnpkg.com/npm-run-path/-/npm-run-path-4.0.1.tgz#b7ecd1e5ed53da8e37a55e1c2269e0b97ed748ea"
-  integrity sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==
-  dependencies:
-    path-key "^3.0.0"
-
-once@^1.3.0, once@^1.3.1, once@^1.4.0:
-  version "1.4.0"
-  resolved "https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1"
-  integrity sha1-WDsap3WWHUsROsF9nFC6753Xa9E=
-  dependencies:
-    wrappy "1"
-
-onetime@^5.1.0, onetime@^5.1.2:
-  version "5.1.2"
-  resolved "https://registry.yarnpkg.com/onetime/-/onetime-5.1.2.tgz#d0e96ebb56b07476df1dd9c4806e5237985ca45e"
-  integrity sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==
-  dependencies:
-    mimic-fn "^2.1.0"
-
-ora@5.2.0:
-  version "5.2.0"
-  resolved "https://registry.yarnpkg.com/ora/-/ora-5.2.0.tgz#de10bfd2d15514384af45f3fa9d9b1aaf344fda1"
-  integrity sha512-+wG2v8TUU8EgzPHun1k/n45pXquQ9fHnbXVetl9rRgO6kjZszGGbraF3XPTIdgeA+s1lbRjSEftAnyT0w8ZMvQ==
-  dependencies:
-    bl "^4.0.3"
-    chalk "^4.1.0"
-    cli-cursor "^3.1.0"
-    cli-spinners "^2.5.0"
-    is-interactive "^1.0.0"
-    log-symbols "^4.0.0"
-    strip-ansi "^6.0.0"
-    wcwidth "^1.0.1"
-
-os-tmpdir@~1.0.2:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/os-tmpdir/-/os-tmpdir-1.0.2.tgz#bbe67406c79aa85c5cfec766fe5734555dfa1274"
-  integrity sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=
-
-p-all@3.0.0:
-  version "3.0.0"
-  resolved "https://registry.yarnpkg.com/p-all/-/p-all-3.0.0.tgz#077c023c37e75e760193badab2bad3ccd5782bfb"
-  integrity sha512-qUZbvbBFVXm6uJ7U/WDiO0fv6waBMbjlCm4E66oZdRR+egswICarIdHyVSZZHudH8T5SF8x/JG0q0duFzPnlBw==
-  dependencies:
-    p-map "^4.0.0"
-
-p-cancelable@^2.0.0:
-  version "2.1.1"
-  resolved "https://registry.yarnpkg.com/p-cancelable/-/p-cancelable-2.1.1.tgz#aab7fbd416582fa32a3db49859c122487c5ed2cf"
-  integrity sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==
-
-p-limit@^3.0.2:
-  version "3.1.0"
-  resolved "https://registry.yarnpkg.com/p-limit/-/p-limit-3.1.0.tgz#e1daccbe78d0d1388ca18c64fea38e3e57e3706b"
-  integrity sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==
-  dependencies:
-    yocto-queue "^0.1.0"
-
-p-locate@^5.0.0:
-  version "5.0.0"
-  resolved "https://registry.yarnpkg.com/p-locate/-/p-locate-5.0.0.tgz#83c8315c6785005e3bd021839411c9e110e6d834"
-  integrity sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==
-  dependencies:
-    p-limit "^3.0.2"
-
-p-map-series@2.1.0:
-  version "2.1.0"
-  resolved "https://registry.yarnpkg.com/p-map-series/-/p-map-series-2.1.0.tgz#7560d4c452d9da0c07e692fdbfe6e2c81a2a91f2"
-  integrity sha512-RpYIIK1zXSNEOdwxcfe7FdvGcs7+y5n8rifMhMNWvaxRNMPINJHF5GDeuVxWqnfrcHPSCnp7Oo5yNXHId9Av2Q==
-
-p-map@4.0.0, p-map@^4.0.0:
-  version "4.0.0"
-  resolved "https://registry.yarnpkg.com/p-map/-/p-map-4.0.0.tgz#bb2f95a5eda2ec168ec9274e06a747c3e2904d2b"
-  integrity sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==
-  dependencies:
-    aggregate-error "^3.0.0"
-
-p-props@4.0.0:
-  version "4.0.0"
-  resolved "https://registry.yarnpkg.com/p-props/-/p-props-4.0.0.tgz#f37c877a9a722057833e1dc38d43edf3906b3437"
-  integrity sha512-3iKFbPdoPG7Ne3cMA53JnjPsTMaIzE9gxKZnvKJJivTAeqLEZPBu6zfi6DYq9AsH1nYycWmo3sWCNI8Kz6T2Zg==
-  dependencies:
-    p-map "^4.0.0"
-
-parent-module@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/parent-module/-/parent-module-2.0.0.tgz#fa71f88ff1a50c27e15d8ff74e0e3a9523bf8708"
-  integrity sha512-uo0Z9JJeWzv8BG+tRcapBKNJ0dro9cLyczGzulS6EfeyAdeC9sbojtW6XwvYxJkEne9En+J2XEl4zyglVeIwFg==
-  dependencies:
-    callsites "^3.1.0"
-
-path-exists@^4.0.0:
-  version "4.0.0"
-  resolved "https://registry.yarnpkg.com/path-exists/-/path-exists-4.0.0.tgz#513bdbe2d3b95d7762e8c1137efa195c6c61b5b3"
-  integrity sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==
-
-path-is-absolute@^1.0.0:
-  version "1.0.1"
-  resolved "https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f"
-  integrity sha1-F0uSaHNVNP+8es5r9TpanhtcX18=
-
-path-key@^3.0.0, path-key@^3.1.0:
-  version "3.1.1"
-  resolved "https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375"
-  integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
-
-path-type@^4.0.0:
-  version "4.0.0"
-  resolved "https://registry.yarnpkg.com/path-type/-/path-type-4.0.0.tgz#84ed01c0a7ba380afe09d90a8c180dcd9d03043b"
-  integrity sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==
-
-picomatch@^2.0.4, picomatch@^2.2.1, picomatch@^2.2.3:
-  version "2.2.3"
-  resolved "https://registry.yarnpkg.com/picomatch/-/picomatch-2.2.3.tgz#465547f359ccc206d3c48e46a1bcb89bf7ee619d"
-  integrity sha512-KpELjfwcCDUb9PeigTs2mBJzXUPzAuP2oPcA989He8Rte0+YUAjw1JVedDhuTKPkHjSYzMN3npC9luThGYEKdg==
-
-pify@5.0.0:
-  version "5.0.0"
-  resolved "https://registry.yarnpkg.com/pify/-/pify-5.0.0.tgz#1f5eca3f5e87ebec28cc6d54a0e4aaf00acc127f"
-  integrity sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==
-
-pump@^3.0.0:
-  version "3.0.0"
-  resolved "https://registry.yarnpkg.com/pump/-/pump-3.0.0.tgz#b4a2116815bde2f4e1ea602354e8c75565107a64"
-  integrity sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==
-  dependencies:
-    end-of-stream "^1.1.0"
-    once "^1.3.1"
-
-query-string@6.13.7:
-  version "6.13.7"
-  resolved "https://registry.yarnpkg.com/query-string/-/query-string-6.13.7.tgz#af53802ff6ed56f3345f92d40a056f93681026ee"
-  integrity sha512-CsGs8ZYb39zu0WLkeOhe0NMePqgYdAuCqxOYKDR5LVCytDZYMGx3Bb+xypvQvPHVPijRXB0HZNFllCzHRe4gEA==
-  dependencies:
-    decode-uri-component "^0.2.0"
-    split-on-first "^1.0.0"
-    strict-uri-encode "^2.0.0"
-
-queue-microtask@^1.2.2:
-  version "1.2.3"
-  resolved "https://registry.yarnpkg.com/queue-microtask/-/queue-microtask-1.2.3.tgz#4929228bbc724dfac43e0efb058caf7b6cfb6243"
-  integrity sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==
-
-quick-lru@^5.1.1:
-  version "5.1.1"
-  resolved "https://registry.yarnpkg.com/quick-lru/-/quick-lru-5.1.1.tgz#366493e6b3e42a3a6885e2e99d18f80fb7a8c932"
-  integrity sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==
-
-readable-stream@^3.4.0:
-  version "3.6.0"
-  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-3.6.0.tgz#337bbda3adc0706bd3e024426a286d4b4b2c9198"
-  integrity sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==
-  dependencies:
-    inherits "^2.0.3"
-    string_decoder "^1.1.1"
-    util-deprecate "^1.0.1"
-
-readdirp@~3.5.0:
-  version "3.5.0"
-  resolved "https://registry.yarnpkg.com/readdirp/-/readdirp-3.5.0.tgz#9ba74c019b15d365278d2e91bb8c48d7b4d42c9e"
-  integrity sha512-cMhu7c/8rdhkHXWsY+osBhfSy0JikwpHK/5+imo+LpeasTF8ouErHrlYkwT0++njiyuDvc7OFY5T3ukvZ8qmFQ==
-  dependencies:
-    picomatch "^2.2.1"
-
-resolve-alpn@^1.0.0:
-  version "1.1.2"
-  resolved "https://registry.yarnpkg.com/resolve-alpn/-/resolve-alpn-1.1.2.tgz#30b60cfbb0c0b8dc897940fe13fe255afcdd4d28"
-  integrity sha512-8OyfzhAtA32LVUsJSke3auIyINcwdh5l3cvYKdKO0nvsYSKuiLfTM5i78PJswFPT8y6cPW+L1v6/hE95chcpDA==
-
-resolve-from@^5.0.0:
-  version "5.0.0"
-  resolved "https://registry.yarnpkg.com/resolve-from/-/resolve-from-5.0.0.tgz#c35225843df8f776df21c57557bc087e9dfdfc69"
-  integrity sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==
-
-responselike@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/responselike/-/responselike-2.0.0.tgz#26391bcc3174f750f9a79eacc40a12a5c42d7723"
-  integrity sha512-xH48u3FTB9VsZw7R+vvgaKeLKzT6jOogbQhEe/jewwnZgzPcnyWui2Av6JpoYZF/91uueC+lqhWqeURw5/qhCw==
-  dependencies:
-    lowercase-keys "^2.0.0"
-
-restore-cursor@^3.1.0:
-  version "3.1.0"
-  resolved "https://registry.yarnpkg.com/restore-cursor/-/restore-cursor-3.1.0.tgz#39f67c54b3a7a58cea5236d95cf0034239631f7e"
-  integrity sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==
-  dependencies:
-    onetime "^5.1.0"
-    signal-exit "^3.0.2"
-
-reusify@^1.0.4:
-  version "1.0.4"
-  resolved "https://registry.yarnpkg.com/reusify/-/reusify-1.0.4.tgz#90da382b1e126efc02146e90845a88db12925d76"
-  integrity sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==
-
-rimraf@^3.0.2:
-  version "3.0.2"
-  resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-3.0.2.tgz#f1a5402ba6220ad52cc1282bac1ae3aa49fd061a"
-  integrity sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==
-  dependencies:
-    glob "^7.1.3"
-
-run-async@^2.4.0:
-  version "2.4.1"
-  resolved "https://registry.yarnpkg.com/run-async/-/run-async-2.4.1.tgz#8440eccf99ea3e70bd409d49aab88e10c189a455"
-  integrity sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==
-
-run-parallel@^1.1.9:
-  version "1.2.0"
-  resolved "https://registry.yarnpkg.com/run-parallel/-/run-parallel-1.2.0.tgz#66d1368da7bdf921eb9d95bd1a9229e7f21a43ee"
-  integrity sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==
-  dependencies:
-    queue-microtask "^1.2.2"
-
-rxjs@^6.6.0:
-  version "6.6.7"
-  resolved "https://registry.yarnpkg.com/rxjs/-/rxjs-6.6.7.tgz#90ac018acabf491bf65044235d5863c4dab804c9"
-  integrity sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==
-  dependencies:
-    tslib "^1.9.0"
-
-safe-buffer@~5.2.0:
-  version "5.2.1"
-  resolved "https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.2.1.tgz#1eaf9fa9bdb1fdd4ec75f58f9cdb4e6b7827eec6"
-  integrity sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==
-
-"safer-buffer@>= 2.1.2 < 3":
-  version "2.1.2"
-  resolved "https://registry.yarnpkg.com/safer-buffer/-/safer-buffer-2.1.2.tgz#44fa161b0187b9549dd84bb91802f9bd8385cd6a"
-  integrity sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==
-
-shebang-command@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/shebang-command/-/shebang-command-2.0.0.tgz#ccd0af4f8835fbdc265b82461aaf0c36663f34ea"
-  integrity sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==
-  dependencies:
-    shebang-regex "^3.0.0"
-
-shebang-regex@^3.0.0:
-  version "3.0.0"
-  resolved "https://registry.yarnpkg.com/shebang-regex/-/shebang-regex-3.0.0.tgz#ae16f1644d873ecad843b0307b143362d4c42172"
-  integrity sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==
-
-signal-exit@^3.0.2, signal-exit@^3.0.3:
-  version "3.0.3"
-  resolved "https://registry.yarnpkg.com/signal-exit/-/signal-exit-3.0.3.tgz#a1410c2edd8f077b08b4e253c8eacfcaf057461c"
-  integrity sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFRoeDoJO7wthSLq42EjA==
-
-slash@^3.0.0:
-  version "3.0.0"
-  resolved "https://registry.yarnpkg.com/slash/-/slash-3.0.0.tgz#6539be870c165adbd5240220dbe361f1bc4d4634"
-  integrity sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==
-
-split-on-first@^1.0.0:
-  version "1.1.0"
-  resolved "https://registry.yarnpkg.com/split-on-first/-/split-on-first-1.1.0.tgz#f610afeee3b12bce1d0c30425e76398b78249a5f"
-  integrity sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw==
-
-std-mocks@1.0.1:
-  version "1.0.1"
-  resolved "https://registry.yarnpkg.com/std-mocks/-/std-mocks-1.0.1.tgz#d3388876d7beeba3c70fbd8e2bcaf46eb07d79fe"
-  integrity sha1-0ziIdte+66PHD72OK8r0brB9ef4=
-  dependencies:
-    lodash "^4.11.1"
-
-strict-uri-encode@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/strict-uri-encode/-/strict-uri-encode-2.0.0.tgz#b9c7330c7042862f6b142dc274bbcc5866ce3546"
-  integrity sha1-ucczDHBChi9rFC3CdLvMWGbONUY=
-
-string-width@^4.1.0:
-  version "4.2.2"
-  resolved "https://registry.yarnpkg.com/string-width/-/string-width-4.2.2.tgz#dafd4f9559a7585cfba529c6a0a4f73488ebd4c5"
-  integrity sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE/xi3vOeA==
-  dependencies:
-    emoji-regex "^8.0.0"
-    is-fullwidth-code-point "^3.0.0"
-    strip-ansi "^6.0.0"
-
-string_decoder@^1.1.1:
-  version "1.3.0"
-  resolved "https://registry.yarnpkg.com/string_decoder/-/string_decoder-1.3.0.tgz#42f114594a46cf1a8e30b0a84f56c78c3edac21e"
-  integrity sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==
-  dependencies:
-    safe-buffer "~5.2.0"
-
-strip-ansi@6.0.0, strip-ansi@^6.0.0:
-  version "6.0.0"
-  resolved "https://registry.yarnpkg.com/strip-ansi/-/strip-ansi-6.0.0.tgz#0b1571dd7669ccd4f3e06e14ef1eed26225ae532"
-  integrity sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==
-  dependencies:
-    ansi-regex "^5.0.0"
-
-strip-final-newline@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/strip-final-newline/-/strip-final-newline-2.0.0.tgz#89b852fb2fcbe936f6f4b3187afb0a12c1ab58ad"
-  integrity sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==
-
-supports-color@^7.1.0:
-  version "7.2.0"
-  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-7.2.0.tgz#1b7dcdcb32b8138801b3e478ba6a51caa89648da"
-  integrity sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==
-  dependencies:
-    has-flag "^4.0.0"
-
-temp-dir@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/temp-dir/-/temp-dir-2.0.0.tgz#bde92b05bdfeb1516e804c9c00ad45177f31321e"
-  integrity sha512-aoBAniQmmwtcKp/7BzsH8Cxzv8OL736p7v1ihGb5e9DJ9kTwGWHrQrVB5+lfVDzfGrdRzXch+ig7LHaY1JTOrg==
-
-tempy@1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/tempy/-/tempy-1.0.0.tgz#4f192b3ee3328a2684d0e3fc5c491425395aab65"
-  integrity sha512-eLXG5B1G0mRPHmgH2WydPl5v4jH35qEn3y/rA/aahKhIa91Pn119SsU7n7v/433gtT9ONzC8ISvNHIh2JSTm0w==
-  dependencies:
-    del "^6.0.0"
-    is-stream "^2.0.0"
-    temp-dir "^2.0.0"
-    type-fest "^0.16.0"
-    unique-string "^2.0.0"
-
-through@^2.3.6:
-  version "2.3.8"
-  resolved "https://registry.yarnpkg.com/through/-/through-2.3.8.tgz#0dd4c9ffaabc357960b1b724115d7e0e86a2e1f5"
-  integrity sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=
-
-time-span@4.0.0:
-  version "4.0.0"
-  resolved "https://registry.yarnpkg.com/time-span/-/time-span-4.0.0.tgz#fe74cd50a54e7998712f90ddfe47109040c985c4"
-  integrity sha512-MyqZCTGLDZ77u4k+jqg4UlrzPTPZ49NDlaekU6uuFaJLzPIN1woaRXCbGeqOfxwc3Y37ZROGAJ614Rdv7Olt+g==
-  dependencies:
-    convert-hrtime "^3.0.0"
-
-tmp@^0.0.33:
-  version "0.0.33"
-  resolved "https://registry.yarnpkg.com/tmp/-/tmp-0.0.33.tgz#6d34335889768d21b2bcda0aa277ced3b1bfadf9"
-  integrity sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==
-  dependencies:
-    os-tmpdir "~1.0.2"
-
-to-regex-range@^5.0.1:
-  version "5.0.1"
-  resolved "https://registry.yarnpkg.com/to-regex-range/-/to-regex-range-5.0.1.tgz#1648c44aae7c8d988a326018ed72f5b4dd0392e4"
-  integrity sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==
-  dependencies:
-    is-number "^7.0.0"
-
-tslib@^1.9.0:
-  version "1.14.1"
-  resolved "https://registry.yarnpkg.com/tslib/-/tslib-1.14.1.tgz#cf2d38bdc34a134bcaf1091c41f6619e2f672d00"
-  integrity sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==
-
-type-fest@^0.16.0:
-  version "0.16.0"
-  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.16.0.tgz#3240b891a78b0deae910dbeb86553e552a148860"
-  integrity sha512-eaBzG6MxNzEn9kiwvtre90cXaNLkmadMWa1zQMs3XORCXNbsH/OewwbxC5ia9dCxIxnTAsSxXJaa/p5y8DlvJg==
-
-type-fest@^0.21.3:
-  version "0.21.3"
-  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.21.3.tgz#d260a24b0198436e133fa26a524a6d65fa3b2e37"
-  integrity sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==
-
-unique-string@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/unique-string/-/unique-string-2.0.0.tgz#39c6451f81afb2749de2b233e3f7c5e8843bd89d"
-  integrity sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==
-  dependencies:
-    crypto-random-string "^2.0.0"
-
-universalify@^1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/universalify/-/universalify-1.0.0.tgz#b61a1da173e8435b2fe3c67d29b9adf8594bd16d"
-  integrity sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==
-
-universalify@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/universalify/-/universalify-2.0.0.tgz#75a4984efedc4b08975c5aeb73f530d02df25717"
-  integrity sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==
-
-untildify@4.0.0:
-  version "4.0.0"
-  resolved "https://registry.yarnpkg.com/untildify/-/untildify-4.0.0.tgz#2bc947b953652487e4600949fb091e3ae8cd919b"
-  integrity sha512-KK8xQ1mkzZeg9inewmFVDNkg3l5LUhoq9kN6iWYB/CC9YMG8HA+c1Q8HwDe6dEX7kErrEVNVBO3fWsVq5iDgtw==
-
-util-deprecate@^1.0.1:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/util-deprecate/-/util-deprecate-1.0.2.tgz#450d4dc9fa70de732762fbd2d4a28981419a0ccf"
-  integrity sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=
-
-wcwidth@^1.0.1:
-  version "1.0.1"
-  resolved "https://registry.yarnpkg.com/wcwidth/-/wcwidth-1.0.1.tgz#f0b0dcf915bc5ff1528afadb2c0e17b532da2fe8"
-  integrity sha1-8LDc+RW8X/FSivrbLA4XtTLaL+g=
-  dependencies:
-    defaults "^1.0.3"
-
-which@2.0.2, which@^2.0.1:
-  version "2.0.2"
-  resolved "https://registry.yarnpkg.com/which/-/which-2.0.2.tgz#7c6a8dd0a636a0327e10b59c9286eee93f3f51b1"
-  integrity sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==
-  dependencies:
-    isexe "^2.0.0"
-
-wrappy@1:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f"
-  integrity sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=
-
-yocto-queue@^0.1.0:
-  version "0.1.0"
-  resolved "https://registry.yarnpkg.com/yocto-queue/-/yocto-queue-0.1.0.tgz#0294eb3dee05028d31ee1a5fa2c556a6aaf10a1b"
-  integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==

commit 6f2da7632ced6abea9a1c0c0086a66458a1a757f
Author: Michael <2052646+bean5@users.noreply.github.com>
Date:   Mon May 31 03:13:40 2021 -0600

    Provide users with scripts that are compatible with both MacOS and current Linux VMs (#366)

diff --git a/content/knowledge-base/add-a-git-tag-with-app-version.md b/content/knowledge-base/add-a-git-tag-with-app-version.md
index d4dc92d..4c3dc62 100644
--- a/content/knowledge-base/add-a-git-tag-with-app-version.md
+++ b/content/knowledge-base/add-a-git-tag-with-app-version.md
@@ -22,12 +22,12 @@ Pushing Git tags from Codemagic to repository requires **write access** to the r
 2. Add the following **pre-publish script**.  Note that you need to replace the placeholders with your actual environment variable name and Git service details.
 
   ```bash
-  #!/usr/bin/env sh
+  #!/usr/bin/env bash
 
   set -e # exit on first failed commandset
   set -x # print all executed commands to the log
 
-  if [ "$FCI_BUILD_STEP_STATUS" == "success" ]
+  if [ "$FCI_BUILD_STEP_STATUS" = "success" ]
   then
     new_version=v1.0.$BUILD_NUMBER
     git tag $new_version
diff --git a/content/publishing/beta-deployment-with-fastlane.md b/content/publishing/beta-deployment-with-fastlane.md
index 13e41df..ad2de2a 100644
--- a/content/publishing/beta-deployment-with-fastlane.md
+++ b/content/publishing/beta-deployment-with-fastlane.md
@@ -10,12 +10,12 @@ If your Flutter app has an existing *fastlane* setup for beta deployment, you ca
 2. Click on the + sign between **Build** and **Publish** and paste your script to the pre-publish script field.
 
 ```bash
-#!/usr/bin/env sh
+#!/usr/bin/env bash
 
 set -e # exit on first failed command
 set -x # print all executed commands to the log
 
-if [ "$FCI_BUILD_STEP_STATUS" == "success" ]
+if [ "$FCI_BUILD_STEP_STATUS" = "success" ]
 then
         gem install bundler
         cd android

commit 9f980e5fc07ecae1273ce424bed134ae6ef2250d
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Mon May 31 10:13:46 2021 +0300

    new add app flow (#363)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index cfbb8a2..d3fd3b3 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -4,48 +4,119 @@ title: Adding repositories
 weight: 2
 ---
 
-When you sign up via OAuth, Codemagic already has access to the repositories you have available on your Git provider account. However, you can add apps from public or private as well as from cloud-based or self-hosted Git repositories.
+Add applications from any self-hosted or cloud-based Git repository. For the best integration with the Git provider, it's recommended to connect your GitHub, Bitbucket or GitLab repositories using the repository integration. However, you can also add repositories by entering the clone URL of the repository. 
+
+To get started, click **Add application** in the top right corner of the Applications page. 
+
+## Adding apps from GitHub
+
+Adding apps from GitHub requires authorizing Codemagic and installing the Codemagic CI/CD GitHub App to a GitHub account or an organization to be able to load the repositories.
+
+1. Click **Add application** in the top right corner of the Applications page.
+2. Select **GitHub** as the Git provider. If you have already set up the integration, click **Next: Select repository** and skip to step 4. If the GitHub integration has not been set up, you'll see click **Next: Authorize integration** instead. A new window appears for you to authorize Codemagic. Confirm the authorization by clicking **Authorize Codemagic CI/CD**.
+3. In the next step, click **Install GitHub App** to set up the integration. A GitHub page opens in a new window. Select the account or an organization where to install the app and choose whether to give Codemagic access to all the repositories from this account or only selected ones. Finish the installation by clicking **Install & Authorize**.
+4. Finally, set up the application by selecting the repository from the dropdown menu and specifying the project type. Click **Finish: Add application**. You will be then redirected to the app settings.
+
+>See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
+
+### Configuring the GitHub App integration
+
+Codemagic uses the [Codemagic CI/CD GitHub App](https://github.com/apps/codemagic-ci-cd) to integrate with GitHub. To share your GitHub repositories with Codemagic, Codemagic GitHub App will have to be installed on the account or organization in GitHub from which you would like to build applications.
 
 {{<notebox>}}
-Note that webhooks for automatic build triggering need to be [created manually](../building/webhooks).
+Note that the GitHub App integration can be connected separately for your personal account and each team. The integrations configured for your personal account apply to the apps that are not part of a team in Codemagic. While teams inherit the integrations from team owner's personal account, it is highly recommended to set up repository integrations separately in team settings.
 {{</notebox>}}
 
-## Connecting repository via SSH
+1. In your user or team settings in Codemagic, navigate to the Integrations section and locate the GitHub App integration. The next steps may vary slightly depending on whether you have already authorized Codemagic or have the Codemagic GitHub App installed.
+2. Click **Connect** next to the GitHub App integration, and when redirected to GitHub, click **Authorize Codemagic**.
+3. Back in the Integrations section, click **Finish installation** and then **Install app**. Note that at this stage you can also revoke your authorization of the app by clicking **Disconnect**.
+4. A popup window opens for you to select the organization or account where to install the app. Pick the installation location. You can later install the app to additional accounts.
+5. Then choose whether to share **All repositories** from the account or select the repositories to share by choosing **Select repositories only**.
+6. Click **Install & Authorize** to finish installation (you may be asked to confirm that action by entering your password). If you do not have the permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation.
 
-1. Click **Add repository** on the Applications page.
+### Managing connected GitHub accounts and organizations
 
-   {{< figure size="medium" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
+In the Integrations section in your user or team settings, click **Manage integration > Configure**. You can then select an account to configure or install Codemagic GitHub App to additional accounts. The accounts that already have Codemagic GitHub App installed are marked with "Configure". 
 
-2. Enter the **Repository URL** for **cloning** the repository. Usually, the URL is in this format: `git@example.com:username/repo.git`.
-3. Upload the **SSH private key** file. If your key is password-protected, enter the **Private key passphrase**.
+![Integrations > GitHub App > Manage integration > Configure](../uploads/gh-app-conf.png)
 
-   **Alternatively**, you can click **Generate key pair** and have Codemagic create an SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
+You can also access the same settings in GitHub by going directly to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd) and clicking **Configure**.
+
+These settings allow you to revisit your repository access configuration should you want to share access to additional repositories or revoke access to a previously shared repository. In addition, you can disconnect an account by clicking **Uninstall** in the danger zone.
+
+If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter.
+
+### Disconnecting Codemagic GitHub App integration
+
+The Codemagic CI/CD GitHub App integration can be disabled by clicking **Manage integration > Disconnect** in **User settings > Integrations > GitHub App** for your personal account or in **Team settings > Team Integrations > GitHub App** to disconnect it from the team. This will delete the GitHub access token that Codemagic had stored which means we no longer interact with GitHub.
+
+To completely remove the integration, **uninstall** the Codemagic CI/CD app and revoke the authorization in GitHub. Visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or github.com/organizations/your-organization/settings/installations for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
+
+### Repository is unavailable
 
-4. Click **Add application**.
+Here are some tips on what to check if you can't see your repository listed in Codemagic or it's shown as unavailable.
+
+* If you chose to grant access to **select repositories only** as opposed to all repositories when setting up the GitHub App, make sure you have also granted access to the repository in question. Click **Manage integration > Configure** in team or user integrations to configure repository access settings.
+* Your personal Codemagic account and each team have separate integrations. Make sure you have connected the GitHub App integration in the right team or in your user settings.
+* If you build apps from different GitHub accounts or organizations, make sure that you have installed the GitHub App on the account that has the repository available. Click **Manage integration > Configure** to see which accounts have been connected. You can also visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or github(dot)com/organizations/your-organization/settings/installations for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
+* Private GitHub repositories can be shared with Codemagic only when the GitHub App is installed on the account that owns the repository. If you are a collaborator to a private repository, please ask the repository owner to install Codemagic GitHub App in GitHub: [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd)
+
+## Adding apps from Bitbucket
+
+Adding apps from Bitbucket requires granting access to your Bitbucket account to enable the integration and load repositories.
+
+1. Click **Add application** in the top right corner of the Applications page.
+2. Select **Bitbucket** as the Git provider and click **Next: Authorize integration**. A new window appears for you to authorize Codemagic. Confirm the authorization by clicking **Grant access**. If you have already authorized Bitbucket, click **Next: Select repository** instead.
+3. Set up the application by selecting the repository from the dropdown menu and specifying the project type. Click **Finish: Add application**. You will be then redirected to the app settings.
+
+>See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
+
+## Adding apps from GitLab
+
+Adding apps from GitLab requires granting access to your GitLab account to enable the integration and load repositories.
+
+1. Click **Add application** in the top right corner of the Applications page.
+2. Select **GitLab** as the Git provider and click **Next: Authorize integration**. A new window appears for you to authorize Codemagic. Confirm the authorization by clicking **Authorize**. If you have already authorized GitLab, click **Next: Select repository** instead.
+3. Set up the application by selecting the repository from the dropdown menu and specifying the project type. Click **Finish: Add application**. You will be then redirected to the app settings.
+
+>See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
+
+## Adding apps from other repositories
+
+Apps that cannot be added via a repository integration can be cloned from a URL. Authentication for private repositories can be set up via HTTPS or SSH.
+### Connecting repository via SSH
+
+1. Click **Add application** in the top right corner of the Applications page.
+2. Select **Other** and click **Next: Select repository**.
+3. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `git@example.com:username/repo.git`.
+4. Upload the **SSH private key** file. If your key is password-protected, enter the **Private key passphrase**.
+
+   **Alternatively**, you can click **Generate key pair** and have Codemagic create an SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
 
-You can then continue configuring your project by selecting a starter workflow.
+5. Finish setting up the application by selecting the project type and clicking **Finish: Add application**. You will be then redirected to the app settings.
 
-{{<notebox>}}If you need to update the private key in Codemagic, you can upload or generate a new one in **App settings > Repository settings > Repository access settings**.{{</notebox>}}
+>See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
 
-### Generating a key pair in Codemagic
+#### Generating a key pair in Codemagic
 
 On clicking **Generate key pair**, Codemagic creates a secure 4096 bit SSH key pair. The private key will be used in Codemagic and the public key must be added to your repository settings. Click **Copy to clipboard** to copy the public key.
 
 - If your repository is hosted on [GitHub](https://developer.github.com/v3/guides/managing-deploy-keys/#setup-2), [GitLab](https://www.deployhq.com/support/projects/updating-your-project-repository/uploading-your-public-key-to-gitlab-manually) or [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), add the public key to your repository's access/deployment keys.
 - For self-hosted repositories, request your git server admins to allow access for the provided public key.
 
-After you have added the public key to your repository settings, finish adding the app by clicking **Add repository**.
+After you have added the public key to your repository settings, finish adding the app by clicking **Finish: Add application**.
 
-{{<notebox>}}Don't close the **Add repository** module before you have finished adding the app, otherwise you'll need to start over and generate a new SSH key.{{</notebox>}}
+{{<notebox>}}Don't close the module before you have finished adding the app, otherwise you'll need to start over and generate a new SSH key.{{</notebox>}}
 
-## Connecting repository via HTTP/HTTPS
+### Connecting repository via HTTP/HTTPS
 
-1. Click **Add repository** on the Applications page.
-2. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
-3. If your repository is private, then enter your **Username** and **Password**. In the case of a public repository, check **Public repository**.
-4. Click **Add repository**.
+1. Click **Add application** in the top right corner of the Applications page.
+2. Select **Other** and click **Next: Select repository**.
+3. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
+4. If your repository is private, then enter your **Username** and **Password**. In the case of a public repository, check **Public repository**.
+5. Finish setting up the application by selecting the project type and clicking **Finish: Add application**. You will be then redirected to the app settings.
 
-Your app will be then listed on the Applications page and you can then continue configuring your project by clicking on **Configure for building**.
+>See the getting started guides and [sample projects](../sample-projects/codemagic-sample-projects/) configured with [codemagic.yaml](../getting-started/yaml/) to set up your project. Alternatively, Flutter apps can be also configured using the [Flutter workflow editor](../flutter/flutter-projects/).
 
 ## Repositories behind firewall
 
@@ -56,4 +127,4 @@ To allow Codemagic access the private repository, the following IP addresses nee
 
 ## Modifying repository access settings
 
-When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.
+When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. You can also generate a new private key. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index b6a8f9f..fdaafcf 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -1,82 +1,30 @@
 ---
-title: Signup and repository integrations
+title: Signup
 weight: 1
 aliases:
   - '../getting-started/codemagic-github-app'
   - '../getting-started/github-organization-accounts'
 ---
 
-You can sign up to Codemagic using a [GitHub](https://github.com/), [Bitbucket](https://bitbucket.org/) or [GitLab](https://about.gitlab.com/) account or an email address. After signup, you can connect different repository providers and add apps from any self-hosted or cloud-based Git repository, see [Adding repositories](./adding-apps-from-custom-sources).
-## GitHub
+You can sign up to Codemagic using a [GitHub](https://github.com/), [Bitbucket](https://bitbucket.org/) or [GitLab](https://about.gitlab.com/) account, or via email. SSO integrations for enterprises are available on request.
 
-On signup, you will be asked to authorize Codemagic to authenticate yourself without granting access to any repositories. To have your GitHub repositories available in Codemagic, connect the GitHub App integration.
+After signup, you can easily add repositories from the above Git providers or any self-hosted or cloud-based Git repository, see [Adding repositories](./adding-apps-from-custom-sources).
+## Sign up via GitHub, Bitbucket or GitLab
 
-{{<notebox>}}
-The GitHub OAuth integration has been deprecated as of April 19, 2021. Codemagic now uses the GitHub App to integrate with GitHub, see the [migration guide](../knowledge-base/migrate-to-github-app/).
-{{</notebox>}}
-### Connecting the GitHub App integration
-
-Codemagic uses the [Codemagic CI/CD GitHub App](https://github.com/apps/codemagic-ci-cd) to integrate with GitHub. To share your GitHub repositories with Codemagic, Codemagic GitHub App will have to be installed on the account or organization in GitHub from which you would like to build applications.
-
-{{<notebox>}}
-Note that the GitHub App integration can be connected separately for your personal account and each team. The integrations configured for your personal account apply to the apps that are not part of a team in Codemagic. While teams inherit the integrations from team owner's personal account, it is highly recommended to set up repository integrations separately in team settings.
-{{</notebox>}}
-
-1. In your user or team settings in Codemagic, navigate to the Integrations section and locate the GitHub App integration. The next steps may vary slightly depending on whether you have already authorized Codemagic or have the Codemagic GitHub App installed.
-2. Click **Connect** next to the GitHub App integration, and when redirected to GitHub, click **Authorize Codemagic**.
-3. Back in the Integrations section, click **Finish installation** and then **Install app**. Note that at this stage you can also revoke your authorization of the app by clicking **Disconnect**.
-4. A popup window opens for you to select the organization or account where to install the app. Pick the installation location. You can later install the app to additional accounts.
-5. Then choose whether to share **All repositories** from the account or select the repositories to share by choosing **Select repositories only**.
-6. Click **Install & Authorize** to finish installation (you may be asked to confirm that action by entering your password). If you do not have the permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation.
-
-### Managing connected GitHub accounts and organizations
-
-In the Integrations section in your user or team settings, click **Manage integration > Configure**. You can then select an account to configure or install Codemagic GitHub App to additional accounts. The accounts that already have Codemagic GitHub App hinstalled are marked with "Configure". 
-
-![Integrations > GitHub App > Manage integration > Configure](../uploads/gh-app-conf.png)
-
-You can also access the same settings in GitHub by going directly to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd) and clicking **Configure**.
-
-These settings allow you to revisit your repository access configuration should you want to share access to additional repositories or revoke access to a previously shared repository. In addition, you can disconnect an account by clicking **Uninstall** in the danger zone.
-
-If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter.
-
-### Disconnecting Codemagic GitHub app integration
-
-The Codemagic CI/CD GitHub App integration can be disabled by clicking **Manage integration > Disconnect** in **User settings > Integrations > GitHub App** for your personal account or in **Team settings > Team Integrations > GitHub App** to disconnect it from the team. This annuls all settings configured for the Codemagic app in GitHub but won't delete your buid history. 
-
-The GitHub app integration is also disabled when you **uninstall** the Codemagic CI/CD app in GitHub. You can still log in to Codemagic with the GitHub App and see your build history if Codemagic CI/CD remains an **authorized GitHub app** in GitHub. 
-
-### Repository is unavailable
-
-Here are some tips on what to check if you can't see your repository listed in Codemagic or it's shown as unavailable.
-
-* If you chose to grant access to **select repositories only** as opposed to all repositories when setting up the GitHub App, make sure you have also granted access to the repository in question. Click **Manage integration > Configure** in team or user integrations to configure repository access settings.
-* Your personal Codemagic account and each team have separate integrations. Make sure you have connected the GitHub App integration in the right team or in your user settings.
-* If you build apps from different GitHub accounts or organizations, make sure that you have installed the GitHub App on the account that has the repository available. Click **Manage integration > Configure** to see which accounts have been connected. You can also visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or github(dot)com/organizations/your-organization/settings/installations for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
-* Private GitHub repositories can be shared with Codemagic only when the GitHub App is installed on the account that owns the repository. If you are a collaborator to a private repository, please ask the repository owner to install Codemagic GitHub App in GitHub: [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd)
-
-## Sign up via Bitbucket or GitLab
-
-When authenticating using a Bitbucket or GitLab account via OAuth, Codemagic asks for **read/write** permission to access your repositories and create webhooks for automatic building. Write permission is also required for pushing tags to the repository. 
-
-You will need to authorize Codemagic to connect the Bitbucket/GitLab account to your Codemagic account. Once you log in to Codemagic, you will see all your repositories listed.
+When signing up via GitHub, you will be asked to authorize Codemagic to authenticate yourself without giving any access to your repositories. To add apps from GitHub, you also need to install the Codemagic CI/CD GitHub App, read more about it [here](../getting-started/adding-apps-from-custom-sources/#adding-apps-from-github).
 
+When authenticating using a Bitbucket or GitLab account via OAuth, Codemagic asks for access to your account and repositories so they can be listed when you're adding applications. You will need to authorize Codemagic to connect the Bitbucket/GitLab account to your Codemagic account.
 ## Sign up via email
 
-Enter your email address and name and click **Create account** to get started. Codemagic will then send a six-character authentication key on the provided email address. Enter the authentication key and click **Continue** to verify the email address and finish signup. Note that an unused key expires in 10 minutes. 
+Enter your email address and name and click **Create your account** to get started. Codemagic will then send a six-character authentication key on the provided email address. Enter the authentication key and click **Continue** to verify the email address and finish signup. Note that an unused key expires in 10 minutes. 
 
 You will be sent a new authentication key every time you need to log in again.
 ## Connecting several repository integrations
 
-Private repositories. You can connect several repository accounts (GitHub, GitHub app, GitLab, Bitbucket) with one Codemagic account or Codemagic team (read more about managing team integrations [here](../teams/teams/#managing-team-integrations)).
+You can connect several repository accounts (GitHub, GitLab, Bitbucket) with one Codemagic account or Codemagic team (read more about managing team integrations [here](../teams/teams/#managing-team-integrations)).
 
 1. Log in to Codemagic with the account you signed up.
 2. Click on your account avatar at the bottom left and open **User settings**.
 3. In the **Integrations** section, click **Connect** next to the account you would like to connect to Codemagic.
 
 Once you have connected another account to your Codemagic account, you can log in to Codemagic with either of these accounts. Email notifications with build status reports will be sent to the email address that's connected with the repository from which you build.
-
-{{<notebox>}}
-Note that if you have connected both GitHub and GitHub App, the GitHub App integration will prevail.
-{{</notebox>}}
diff --git a/content/knowledge-base/migrate-to-github-app.md b/content/knowledge-base/migrate-to-github-app.md
index c7bbb9f..68f986b 100644
--- a/content/knowledge-base/migrate-to-github-app.md
+++ b/content/knowledge-base/migrate-to-github-app.md
@@ -32,5 +32,5 @@ From April 19 onwards, users logging in to Codemagic with their GitHub account w
 If you log in via email, Bitbucket or GitLab but have repositories that are accessed via the GitHub OAuth integration, you should enable the GitHub App integration in your user or team settings. Note that GitHub App must be enabled separately for your **personal account** in Codemagic user settings and each **team** in team settings. 
 
 {{<notebox>}}
-See how to connect the GitHub App integration, manage access to accounts and repositories and troubleshoot issues with repository access [here](../getting-started/signup/#connecting-the-github-app-integration).
+See how to connect the GitHub App integration, manage access to accounts and repositories and troubleshoot issues with repository access [here](../getting-started/adding-apps-from-custom-sources/#configuring-the-github-app-integration).
 {{</notebox>}}

commit 0c81d5e4533a626a2470601e534a0c237085d3d9
Author: Priit Lätt <priit@nevercode.io>
Date:   Mon May 31 09:20:25 2021 +0300

    Base image update @ 31-05-2021 (#370)
    
    Co-authored-by: Vladimir Markov <remarkov@gmail.com>

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index 92c237f..7d68bdd 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -25,10 +25,13 @@ weight: 5
 - curl `7.68.0`
 - docker `20.10.2`
 - firebase `9.1.0`
-- flutter `2.2.0 ($HOME/programs/flutter)`
+- flutter `2.2.1 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.25.1`
+- Google Cloud SDK `325.0.0`
+- gsutil `4.58`
+
 - ionic `5.4.16`
 - jq `jq-1.6`
 - node `14.15.3`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index e719dc2..9d31658 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -28,11 +28,13 @@ weight: 4
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `2.2.0 ($HOME/programs/flutter)`
+- flutter `2.2.1 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - gh `1.8.1`
 - git `2.28.0`
+- Google Cloud SDK `270.0.0`
 - gradle `6.1.1`
+- gsutil `4.46`
 - homebrew `3.1.0`
 - ionic `4.11.0`
 - jq
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 64439c6..22aef32 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -28,11 +28,13 @@ weight: 3
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `2.2.0 ($HOME/programs/flutter)`
+- flutter `2.2.1 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.30.0`
+- Google Cloud SDK `310.0.0`
 - gradle `6.1.1`
+- gsutil `4.53`
 - homebrew `3.1.0`
 - ionic `5.4.16`
 - jq
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index a087a3b..88ae534 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -28,11 +28,13 @@ weight: 2
 - docker `20.10.2`
 - fastlane `2.181.0`
 - firebase `9.3.0`
-- flutter `2.2.0 ($HOME/programs/flutter)`
+- flutter `2.2.1 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.9.2`
 - git `2.31.1`
+- Google Cloud SDK `327.0.0`
 - gradle `6.1.1`
+- gsutil `4.58`
 - homebrew `3.1.3`
 - ionic `6.12.4`
 - jq

commit b6f7ed665cc91643cce0d38f2cf0f3de593aa6f6
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Fri May 28 15:52:15 2021 +0300

    Document pull request destination environment variable (#369)
    
    * Update environment-variables.md
    
    * Update environment-variables.md

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index c2e5c77..7d9f70e 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -39,6 +39,7 @@ Here you'll find some of the read-only environment variables explained.
 | FCI_PREVIOUS_COMMIT      | Commit hash of the previous successful build, unset if there is no previous successful build                                                                    |
 | FCI_PULL_REQUEST         | `true`, if the current build is building a pull request, `false` otherwise                                                                                      |
 | FCI_PULL_REQUEST_NUMBER  | Set to Integer ID of the pull request for the Git provider (Bitbucket, Github etc) if the current build is building a pull request, unset otherwise             |
+| FCI_PULL_REQUEST_DEST    | The destination branch, if the current build is building a pull request, unset otherwise                                                                         |
 | FCI_CLONE_UNSHALLOW      | If set to `true` performs a full clone of the repository instead of top 50 commits                                                                              |
 | FCI_CLONE_DEPTH          | Specifies the number of commits to be fetched from the repository when cloning, default: 50. Specifying a smaller number can decrease the default fetching time |
 | FCI_PROJECT_ID           | UUID of the project that is being built                                                                                                                         |

commit 46288a3ed4ea8f1d4a67dd6565a1ea84e36bb035
Author: Chris Raastad <craastad@gmail.com>
Date:   Thu May 27 17:24:09 2021 +0300

    Added webhooks to release notes (#368)

diff --git a/content/notes/release-notes.md b/content/notes/release-notes.md
index 16875f0..bf4580b 100644
--- a/content/notes/release-notes.md
+++ b/content/notes/release-notes.md
@@ -8,6 +8,10 @@ weight: 1
 
 ## May 2021
 
+### Webhooks monitor
+
+We added a Webhooks tab to the application settings page. Here you can view a list of all webhooks received for your application, the webhook request and response,  a description of which workflows were built or skipped because of the processed webhook, and a button for automatically creating a webhook in your application's Git provider (if added via GitHub, Bitbucket, GitLab).
+
 ### Working directory in codemagic.yaml
 
 You can specify a working directory for an entire workflow or for an individual build step script in codemagic.yaml. This can either be an absolute path or relative to the clone directory. Refer to the [docs](../getting-started/yaml/#working-directory) for example usage.

commit 3375c49921d43bb4f2ad8d510f167c8cef8d74dc
Author: Chris Raastad <craastad@gmail.com>
Date:   Tue May 25 11:58:19 2021 +0300

    Updated release notes
    
    * Add working directory to release notes
    * Add git tag and bundle ID list to release notes.

diff --git a/content/notes/release-notes.md b/content/notes/release-notes.md
index ffae0a6..16875f0 100644
--- a/content/notes/release-notes.md
+++ b/content/notes/release-notes.md
@@ -8,10 +8,18 @@ weight: 1
 
 ## May 2021
 
+### Working directory in codemagic.yaml
+
+You can specify a working directory for an entire workflow or for an individual build step script in codemagic.yaml. This can either be an absolute path or relative to the clone directory. Refer to the [docs](../getting-started/yaml/#working-directory) for example usage.
+
 ### Conditional build triggers and build steps
 
 In codemagic.yaml configured workflows, you can now specify [conditional build triggers](../getting-started/yaml/#conditional-build-triggers) and [conditional build steps](../getting-started/yaml/#conditional-build-step-execution) depending on which files were changed in the last commit. For example, you can skip builds for commits that only have changes in markdown files or only run an Android workflow only when files changed in an android directory. Skipped builds will be marked skipped in the builds list.
 
+### Bundle ID list in Flutter iOS & macOS code signing 
+
+In Flutter workflow editor [iOS](../code-signing/ios-code-signing/) and [macOS](../code-signing/macos-code-signing/) code signing, you can now specify your Apple App Bundle ID directly from the list in [Appple Developer Portal](https://developer.apple.com/account/resources/identifiers/list/bundleId) with the Codemagic integration.
+
 ### Flutter macOS and Linux desktop publishing
 
 You can now build and publish Flutter apps to the macOS App Store. This can be configured in [codemagic.yaml](../publishing-yaml/distribution/#app-store-connect) or [Flutter workflow editor](../publishing/publishing-to-app-store/). See the step-by-step macOS code signing guide for [codemagic.yaml](../code-signing-yaml/signing-macos/) and [Flutter workflow editor](../code-signing/macos-code-signing/). macOS publishing is limited to [macOS build machines](../specs/machine-type/#mac-mini-and-mac-pro).
@@ -20,6 +28,10 @@ You can now build and publish Flutter apps to the Linux [Snapcraft Snap Store](h
 
 ## April 2021
 
+### Git tag label pattern matching
+
+You can now match Git tag label patterns like branch names (e.g. choose to build `*release*` but not `*-dev` tags). See the codemagic.yaml [triggering docs](https://docs.codemagic.io/getting-started/yaml/#triggering) or workflow editor Build triggers > pattern examples for more information.
+
 ### codemagic.yaml inline editing and validation
 
 You can edit your [codemagic.yaml](../getting-started/yaml/) configuration and see validation errors right from the Codemagic UI. Validation is also automatically supported in all IDEs that implement the [JSON Schema Store](https://www.schemastore.org/json/) standard (such as IntelliJ and VS Code).

commit 2535bb753e99550c3008fc7870209e16e81a19a2
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Thu May 20 16:31:24 2021 +0300

    Algolia search index update (#362)
    
    * update algolia index on deploy
    
    * address comments
    
    Co-authored-by: Chris Raastad <craastad@gmail.com>

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 636e6b3..60e3ee5 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -18,3 +18,7 @@ jobs:
       - run: curl --location https://github.com/gohugoio/hugo/releases/download/v0.77.0/hugo_extended_0.77.0_Linux-64bit.tar.gz | tar -vxzO hugo > hugo && chmod a+x hugo
       - run: ./hugo --environment production --minify
       - run: ./hugo deploy --environment production --invalidateCDN true --maxDeletes -1
+
+      - run: yarn install
+      - name: Update search index
+        run: yarn run algolia ${{ secrets.ALGOLIA_ADMIN_KEY }}
\ No newline at end of file
diff --git a/.gitignore b/.gitignore
index c6d7e4b..7ac638b 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,4 @@
 /public/
 /resources/
 .DS_Store
+/node_modules/
diff --git a/algolia.js b/algolia.js
new file mode 100644
index 0000000..20d487a
--- /dev/null
+++ b/algolia.js
@@ -0,0 +1,9 @@
+const indexing = require('algolia-indexing')
+const fs = require('fs')
+
+const apiKey = process.argv[2]
+
+const credentials = { appId: '27CIRMYZIB', apiKey: apiKey, indexName: 'codemagic_docs' }
+const records = JSON.parse(fs.readFileSync('./public/index.json'))
+
+indexing.fullAtomic(credentials, records);
\ No newline at end of file
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..386a963
--- /dev/null
+++ b/package.json
@@ -0,0 +1,10 @@
+{
+    "name": "codemagic-docs",
+    "version": "1.0.0",
+    "scripts": {
+        "algolia": "node algolia.js"
+    },
+    "devDependencies": {
+        "algolia-indexing": "^1.2.0"
+    }
+}
diff --git a/yarn.lock b/yarn.lock
new file mode 100644
index 0000000..0cbcf74
--- /dev/null
+++ b/yarn.lock
@@ -0,0 +1,1410 @@
+# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
+# yarn lockfile v1
+
+
+"@algolia/cache-browser-local-storage@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/cache-browser-local-storage/-/cache-browser-local-storage-4.2.0.tgz#45cc4be4c8fcd69cb98ebaa2e78a459a1cf6ba64"
+  integrity sha512-uji5zxBxwNu8qKtyqghg9lUsN0OOZ58NfRKk0Il4IZCcCo78E0KfT3Uxr7XiYCJMRnqIsvbKWf0xA67tYNBSbA==
+  dependencies:
+    "@algolia/cache-common" "4.2.0"
+
+"@algolia/cache-common@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/cache-common/-/cache-common-4.2.0.tgz#ada18e559f205a63eaf60c21a035b3d41f0f8d7d"
+  integrity sha512-ATBQCBBLt4hPNKIKn06y5zqZPWQmI+PBF0287rFVj8BGmEr82BzoKMa5XIkvgpjtxwx6c5nSKxZaYkEFqtrxtQ==
+
+"@algolia/cache-in-memory@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/cache-in-memory/-/cache-in-memory-4.2.0.tgz#82f07cc99aee9e20a96bdd69c635bdd2dc4288f1"
+  integrity sha512-NsVOR6ixK6jvurLW+1+h80/9N18QjU/AXdAZJoVeu4JXb2NPuej4Ld1zXFYvz/ypCFQE+dU8haaQnJIuTbD4vg==
+  dependencies:
+    "@algolia/cache-common" "4.2.0"
+
+"@algolia/client-account@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/client-account/-/client-account-4.2.0.tgz#7abf3dd8922fde1735b1e0d19e8b0bdbf64a1435"
+  integrity sha512-xz5OXU9DQ9pegABAgmTPV23f9tXmbUPO3w5J/b2QcP6jzfNnNfW3CkTwywgNLr16jIKLxmmClN5yqyJp6XmHBA==
+  dependencies:
+    "@algolia/client-common" "4.2.0"
+    "@algolia/client-search" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+"@algolia/client-analytics@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/client-analytics/-/client-analytics-4.2.0.tgz#11e9331fed5bbaa6668d71c890dff60c4af1c741"
+  integrity sha512-UNuZQOYuKPYl5fCgm1HZzoZ6Ewxtqrc4Cv5Dhdy5VatIV6lYEWOtdn+g+5qvWFGb6fv6688dg5EVJnXZNvVVZQ==
+  dependencies:
+    "@algolia/client-common" "4.2.0"
+    "@algolia/client-search" "4.2.0"
+    "@algolia/requester-common" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+"@algolia/client-common@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/client-common/-/client-common-4.2.0.tgz#bf8a550dc51927bb103de9aab7e6ac4d90a9cf0d"
+  integrity sha512-KxZTWXf9FSl188iTAz9rhTMeBtbF/uaJcxw99jbWHxyK9KR87obZzTlTFYnIWLEBaTG1MmlgPSsDogAE4CHLOQ==
+  dependencies:
+    "@algolia/requester-common" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+"@algolia/client-recommendation@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/client-recommendation/-/client-recommendation-4.2.0.tgz#bd49b5b9601fe4220ba6db0fc397d816584ee4ec"
+  integrity sha512-5QwvUJ5hpZVDz99o+EPgMg+z7maLWOZGUrUt5z8s+esl+taTb2h1PtyLpikAvC2d/BjYCEKyObTiRDYdzhqcoA==
+  dependencies:
+    "@algolia/client-common" "4.2.0"
+    "@algolia/requester-common" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+"@algolia/client-search@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/client-search/-/client-search-4.2.0.tgz#4917499cac66a5cca7f2ca9d1334bffc96a79b17"
+  integrity sha512-2SAz1/undr+RM7FNj3G0taWFG+8QEMQcYHxUhoOJKMIY9sPQN7UNCJRHYsulM+/g45oF67tXX09NSt14ewen0Q==
+  dependencies:
+    "@algolia/client-common" "4.2.0"
+    "@algolia/requester-common" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+"@algolia/logger-common@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/logger-common/-/logger-common-4.2.0.tgz#dd373b267594656d72a1563f6621ab7f727c4373"
+  integrity sha512-VQcJE5lr78oc+lbcGfPonCDTRwLNSxwtPrUP6Tj+CoDedsVHZhODAlHzLHhxc4vuyrU7xomvKJLqTUgfDNxzXQ==
+
+"@algolia/logger-console@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/logger-console/-/logger-console-4.2.0.tgz#10e18ab75f60fd0f2e2b16cb9a1b0bcc947087f2"
+  integrity sha512-/1GE43jY0xKfJUi5ZGtEqq+oTyOzs+EgGKj7/zEHIpUc5NyxokIPWTqt3q6pzGSWFEkNbaA1gAVgXM1zCMVWYw==
+  dependencies:
+    "@algolia/logger-common" "4.2.0"
+
+"@algolia/requester-browser-xhr@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/requester-browser-xhr/-/requester-browser-xhr-4.2.0.tgz#c2a7982bef940e1749f2ba2aa04e3f8a971b6a78"
+  integrity sha512-+PZKOe+UBdZYQg/h/8AbKQ2Ha4uDeoLnpZFv00IMr/elym0m2hl76xAeIBiIqGYsLCmGybGBFUF9n1imsKJUJQ==
+  dependencies:
+    "@algolia/requester-common" "4.2.0"
+
+"@algolia/requester-common@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/requester-common/-/requester-common-4.2.0.tgz#df67a940516d5a313bbf79bcbceddadfff9f8ce2"
+  integrity sha512-SSKPRM/7UP54/dxyK6EYt4p6nTeJxYb1P6xVh/Ic6noBTCfqg5vBEKDa1DZD5MBtCvABoODd97UOfAo3ECG/jg==
+
+"@algolia/requester-node-http@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/requester-node-http/-/requester-node-http-4.2.0.tgz#e26efd3d630b7c988bcc9cda3a8ee68ab4a168dd"
+  integrity sha512-mRQgSM8qrMfjXaBnMjTmymR0NKwbr82Qwh1a5TgYyzMOBuRO5nRikawvTVgpNaEnQS0uesIiwd2ohOJ2gNu6oA==
+  dependencies:
+    "@algolia/requester-common" "4.2.0"
+
+"@algolia/transporter@4.2.0":
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/@algolia/transporter/-/transporter-4.2.0.tgz#9e6bea3304f1e6f4a64a3d7c1f9de047ba89056f"
+  integrity sha512-7CiwMYsEhrHySA8q70euIYOyhGtz/wz+MEC3nwGONBC82nGI6ntVqTFhCkpLIJqqbGbNlFgnCpwnLmSqLhRP3A==
+  dependencies:
+    "@algolia/cache-common" "4.2.0"
+    "@algolia/logger-common" "4.2.0"
+    "@algolia/requester-common" "4.2.0"
+
+"@nodelib/fs.scandir@2.1.4":
+  version "2.1.4"
+  resolved "https://registry.yarnpkg.com/@nodelib/fs.scandir/-/fs.scandir-2.1.4.tgz#d4b3549a5db5de2683e0c1071ab4f140904bbf69"
+  integrity sha512-33g3pMJk3bg5nXbL/+CY6I2eJDzZAni49PfJnL5fghPTggPvBd/pFNSgJsdAgWptuFu7qq/ERvOYFlhvsLTCKA==
+  dependencies:
+    "@nodelib/fs.stat" "2.0.4"
+    run-parallel "^1.1.9"
+
+"@nodelib/fs.stat@2.0.4", "@nodelib/fs.stat@^2.0.2":
+  version "2.0.4"
+  resolved "https://registry.yarnpkg.com/@nodelib/fs.stat/-/fs.stat-2.0.4.tgz#a3f2dd61bab43b8db8fa108a121cfffe4c676655"
+  integrity sha512-IYlHJA0clt2+Vg7bccq+TzRdJvv19c2INqBSsoOLp1je7xjtr7J26+WXR72MCdvU9q1qTzIWDfhMf+DRvQJK4Q==
+
+"@nodelib/fs.walk@^1.2.3":
+  version "1.2.6"
+  resolved "https://registry.yarnpkg.com/@nodelib/fs.walk/-/fs.walk-1.2.6.tgz#cce9396b30aa5afe9e3756608f5831adcb53d063"
+  integrity sha512-8Broas6vTtW4GIXTAHDoE32hnN2M5ykgCpWGbuXHQ15vEMqr23pB76e/GZcYsZCHALv50ktd24qhEyKr6wBtow==
+  dependencies:
+    "@nodelib/fs.scandir" "2.1.4"
+    fastq "^1.6.0"
+
+"@sindresorhus/is@^4.0.0":
+  version "4.0.1"
+  resolved "https://registry.yarnpkg.com/@sindresorhus/is/-/is-4.0.1.tgz#d26729db850fa327b7cacc5522252194404226f5"
+  integrity sha512-Qm9hBEBu18wt1PO2flE7LPb30BHMQt1eQgbV76YntdNk73XZGpn3izvGTYxbGgzXKgbCjiia0uxTd3aTNQrY/g==
+
+"@szmarczak/http-timer@^4.0.5":
+  version "4.0.5"
+  resolved "https://registry.yarnpkg.com/@szmarczak/http-timer/-/http-timer-4.0.5.tgz#bfbd50211e9dfa51ba07da58a14cdfd333205152"
+  integrity sha512-PyRA9sm1Yayuj5OIoJ1hGt2YISX45w9WcFbh6ddT0Z/0yaFxOtGLInr4jUfU1EAFVs0Yfyfev4RNwBlUaHdlDQ==
+  dependencies:
+    defer-to-connect "^2.0.0"
+
+"@types/cacheable-request@^6.0.1":
+  version "6.0.1"
+  resolved "https://registry.yarnpkg.com/@types/cacheable-request/-/cacheable-request-6.0.1.tgz#5d22f3dded1fd3a84c0bbeb5039a7419c2c91976"
+  integrity sha512-ykFq2zmBGOCbpIXtoVbz4SKY5QriWPh3AjyU4G74RYbtt5yOc5OfaY75ftjg7mikMOla1CTGpX3lLbuJh8DTrQ==
+  dependencies:
+    "@types/http-cache-semantics" "*"
+    "@types/keyv" "*"
+    "@types/node" "*"
+    "@types/responselike" "*"
+
+"@types/http-cache-semantics@*":
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/@types/http-cache-semantics/-/http-cache-semantics-4.0.0.tgz#9140779736aa2655635ee756e2467d787cfe8a2a"
+  integrity sha512-c3Xy026kOF7QOTn00hbIllV1dLR9hG9NkSrLQgCVs8NF6sBU+VGWjD3wLPhmh1TYAc7ugCFsvHYMN4VcBN1U1A==
+
+"@types/keyv@*":
+  version "3.1.1"
+  resolved "https://registry.yarnpkg.com/@types/keyv/-/keyv-3.1.1.tgz#e45a45324fca9dab716ab1230ee249c9fb52cfa7"
+  integrity sha512-MPtoySlAZQ37VoLaPcTHCu1RWJ4llDkULYZIzOYxlhxBqYPB0RsRlmMU0R6tahtFe27mIdkHV+551ZWV4PLmVw==
+  dependencies:
+    "@types/node" "*"
+
+"@types/node@*":
+  version "15.3.1"
+  resolved "https://registry.yarnpkg.com/@types/node/-/node-15.3.1.tgz#23a06b87eedb524016616e886b116b8fdcb180af"
+  integrity sha512-weaeiP4UF4XgF++3rpQhpIJWsCTS4QJw5gvBhQu6cFIxTwyxWIe3xbnrY/o2lTCQ0lsdb8YIUDUvLR4Vuz5rbw==
+
+"@types/responselike@*", "@types/responselike@^1.0.0":
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/@types/responselike/-/responselike-1.0.0.tgz#251f4fe7d154d2bad125abe1b429b23afd262e29"
+  integrity sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==
+  dependencies:
+    "@types/node" "*"
+
+aggregate-error@^3.0.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/aggregate-error/-/aggregate-error-3.1.0.tgz#92670ff50f5359bdb7a3e0d40d0ec30c5737687a"
+  integrity sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==
+  dependencies:
+    clean-stack "^2.0.0"
+    indent-string "^4.0.0"
+
+algolia-indexing@^1.2.0:
+  version "1.2.0"
+  resolved "https://registry.yarnpkg.com/algolia-indexing/-/algolia-indexing-1.2.0.tgz#303c38a96327f1c67c636904c7a3ce0a6c064607"
+  integrity sha512-hLzlZlBxzcvsPm0xczuz3Hcpg6Vvi3T9oBWrWiU0koUnSumoON2/4MK+o0RTtbwV+VqB13HCnS1+BgvfE52Lgg==
+  dependencies:
+    algoliasearch "4.2.0"
+    firost "2.6.1"
+    golgoth "2.0.0"
+    node-object-hash "2.0.0"
+
+algoliasearch@4.2.0:
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/algoliasearch/-/algoliasearch-4.2.0.tgz#dd81a1a0c57eb9f74af6db70b0c11f256692d1e6"
+  integrity sha512-CgbyDBGMSzNISBFezPt68xAseknork+wNe/Oour1Hluk4OwbtobysRawFf93ZbLSQw/KbeGlVmVAvujeVIVdnQ==
+  dependencies:
+    "@algolia/cache-browser-local-storage" "4.2.0"
+    "@algolia/cache-common" "4.2.0"
+    "@algolia/cache-in-memory" "4.2.0"
+    "@algolia/client-account" "4.2.0"
+    "@algolia/client-analytics" "4.2.0"
+    "@algolia/client-common" "4.2.0"
+    "@algolia/client-recommendation" "4.2.0"
+    "@algolia/client-search" "4.2.0"
+    "@algolia/logger-common" "4.2.0"
+    "@algolia/logger-console" "4.2.0"
+    "@algolia/requester-browser-xhr" "4.2.0"
+    "@algolia/requester-common" "4.2.0"
+    "@algolia/requester-node-http" "4.2.0"
+    "@algolia/transporter" "4.2.0"
+
+ansi-escapes@^4.2.1:
+  version "4.3.2"
+  resolved "https://registry.yarnpkg.com/ansi-escapes/-/ansi-escapes-4.3.2.tgz#6b2291d1db7d98b6521d5f1efa42d0f3a9feb65e"
+  integrity sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==
+  dependencies:
+    type-fest "^0.21.3"
+
+ansi-regex@^5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-5.0.0.tgz#388539f55179bf39339c81af30a654d69f87cb75"
+  integrity sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==
+
+ansi-styles@^4.1.0:
+  version "4.3.0"
+  resolved "https://registry.yarnpkg.com/ansi-styles/-/ansi-styles-4.3.0.tgz#edd803628ae71c04c85ae7a0906edad34b648937"
+  integrity sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==
+  dependencies:
+    color-convert "^2.0.1"
+
+anymatch@~3.1.1:
+  version "3.1.2"
+  resolved "https://registry.yarnpkg.com/anymatch/-/anymatch-3.1.2.tgz#c0557c096af32f106198f4f4e2a383537e378716"
+  integrity sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==
+  dependencies:
+    normalize-path "^3.0.0"
+    picomatch "^2.0.4"
+
+array-union@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/array-union/-/array-union-2.1.0.tgz#b798420adbeb1de828d84acd8a2e23d3efe85e8d"
+  integrity sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==
+
+at-least-node@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/at-least-node/-/at-least-node-1.0.0.tgz#602cd4b46e844ad4effc92a8011a3c46e0238dc2"
+  integrity sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==
+
+balanced-match@^1.0.0:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.2.tgz#e83e3a7e3f300b34cb9d87f615fa0cbf357690ee"
+  integrity sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==
+
+base64-js@^1.3.1:
+  version "1.5.1"
+  resolved "https://registry.yarnpkg.com/base64-js/-/base64-js-1.5.1.tgz#1b1b440160a5bf7ad40b650f095963481903930a"
+  integrity sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==
+
+binary-extensions@^2.0.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/binary-extensions/-/binary-extensions-2.2.0.tgz#75f502eeaf9ffde42fc98829645be4ea76bd9e2d"
+  integrity sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==
+
+bl@^4.0.3:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/bl/-/bl-4.1.0.tgz#451535264182bec2fbbc83a62ab98cf11d9f7b3a"
+  integrity sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==
+  dependencies:
+    buffer "^5.5.0"
+    inherits "^2.0.4"
+    readable-stream "^3.4.0"
+
+brace-expansion@^1.1.7:
+  version "1.1.11"
+  resolved "https://registry.yarnpkg.com/brace-expansion/-/brace-expansion-1.1.11.tgz#3c7fcbf529d87226f3d2f52b966ff5271eb441dd"
+  integrity sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==
+  dependencies:
+    balanced-match "^1.0.0"
+    concat-map "0.0.1"
+
+braces@^3.0.1, braces@~3.0.2:
+  version "3.0.2"
+  resolved "https://registry.yarnpkg.com/braces/-/braces-3.0.2.tgz#3454e1a462ee8d599e236df336cd9ea4f8afe107"
+  integrity sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==
+  dependencies:
+    fill-range "^7.0.1"
+
+buffer@^5.5.0:
+  version "5.7.1"
+  resolved "https://registry.yarnpkg.com/buffer/-/buffer-5.7.1.tgz#ba62e7c13133053582197160851a8f648e99eed0"
+  integrity sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==
+  dependencies:
+    base64-js "^1.3.1"
+    ieee754 "^1.1.13"
+
+cacheable-lookup@^5.0.3:
+  version "5.0.4"
+  resolved "https://registry.yarnpkg.com/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz#5a6b865b2c44357be3d5ebc2a467b032719a7005"
+  integrity sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==
+
+cacheable-request@^7.0.1:
+  version "7.0.1"
+  resolved "https://registry.yarnpkg.com/cacheable-request/-/cacheable-request-7.0.1.tgz#062031c2856232782ed694a257fa35da93942a58"
+  integrity sha512-lt0mJ6YAnsrBErpTMWeu5kl/tg9xMAWjavYTN6VQXM1A/teBITuNcccXsCxF0tDQQJf9DfAaX5O4e0zp0KlfZw==
+  dependencies:
+    clone-response "^1.0.2"
+    get-stream "^5.1.0"
+    http-cache-semantics "^4.0.0"
+    keyv "^4.0.0"
+    lowercase-keys "^2.0.0"
+    normalize-url "^4.1.0"
+    responselike "^2.0.0"
+
+callsites@3.1.0, callsites@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73"
+  integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
+
+chalk@4.1.0:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/chalk/-/chalk-4.1.0.tgz#4e14870a618d9e2edd97dd8345fd9d9dc315646a"
+  integrity sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==
+  dependencies:
+    ansi-styles "^4.1.0"
+    supports-color "^7.1.0"
+
+chalk@^4.1.0:
+  version "4.1.1"
+  resolved "https://registry.yarnpkg.com/chalk/-/chalk-4.1.1.tgz#c80b3fab28bf6371e6863325eee67e618b77e6ad"
+  integrity sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==
+  dependencies:
+    ansi-styles "^4.1.0"
+    supports-color "^7.1.0"
+
+chardet@^0.7.0:
+  version "0.7.0"
+  resolved "https://registry.yarnpkg.com/chardet/-/chardet-0.7.0.tgz#90094849f0937f2eedc2425d0d28a9e5f0cbad9e"
+  integrity sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==
+
+chokidar@3.5.0:
+  version "3.5.0"
+  resolved "https://registry.yarnpkg.com/chokidar/-/chokidar-3.5.0.tgz#458a4816a415e9d3b3caa4faec2b96a6935a9e65"
+  integrity sha512-JgQM9JS92ZbFR4P90EvmzNpSGhpPBGBSj10PILeDyYFwp4h2/D9OM03wsJ4zW1fEp4ka2DGrnUeD7FuvQ2aZ2Q==
+  dependencies:
+    anymatch "~3.1.1"
+    braces "~3.0.2"
+    glob-parent "~5.1.0"
+    is-binary-path "~2.1.0"
+    is-glob "~4.0.1"
+    normalize-path "~3.0.0"
+    readdirp "~3.5.0"
+  optionalDependencies:
+    fsevents "~2.3.1"
+
+clean-stack@^2.0.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/clean-stack/-/clean-stack-2.2.0.tgz#ee8472dbb129e727b31e8a10a427dee9dfe4008b"
+  integrity sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==
+
+clear-module@4.1.1:
+  version "4.1.1"
+  resolved "https://registry.yarnpkg.com/clear-module/-/clear-module-4.1.1.tgz#bf8ba3b62eb70ee1e0adec90589741425cf32db8"
+  integrity sha512-ng0E7LeODcT3QkazOckzZqbca+JByQy/Q2Z6qO24YsTp+pLxCfohGz2gJYJqZS0CWTX3LEUiHOqe5KlYeUbEMw==
+  dependencies:
+    parent-module "^2.0.0"
+    resolve-from "^5.0.0"
+
+cli-cursor@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/cli-cursor/-/cli-cursor-3.1.0.tgz#264305a7ae490d1d03bf0c9ba7c925d1753af307"
+  integrity sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==
+  dependencies:
+    restore-cursor "^3.1.0"
+
+cli-spinners@^2.5.0:
+  version "2.6.0"
+  resolved "https://registry.yarnpkg.com/cli-spinners/-/cli-spinners-2.6.0.tgz#36c7dc98fb6a9a76bd6238ec3f77e2425627e939"
+  integrity sha512-t+4/y50K/+4xcCRosKkA7W4gTr1MySvLV0q+PxmG7FJ5g+66ChKurYjxBCjHggHH3HA5Hh9cy+lcUGWDqVH+4Q==
+
+cli-width@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/cli-width/-/cli-width-3.0.0.tgz#a2f48437a2caa9a22436e794bf071ec9e61cedf6"
+  integrity sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw==
+
+clone-response@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/clone-response/-/clone-response-1.0.2.tgz#d1dc973920314df67fbeb94223b4ee350239e96b"
+  integrity sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=
+  dependencies:
+    mimic-response "^1.0.0"
+
+clone@^1.0.2:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/clone/-/clone-1.0.4.tgz#da309cc263df15994c688ca902179ca3c7cd7c7e"
+  integrity sha1-2jCcwmPfFZlMaIypAheco8fNfH4=
+
+color-convert@^2.0.1:
+  version "2.0.1"
+  resolved "https://registry.yarnpkg.com/color-convert/-/color-convert-2.0.1.tgz#72d3a68d598c9bdb3af2ad1e84f21d896abd4de3"
+  integrity sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==
+  dependencies:
+    color-name "~1.1.4"
+
+color-name@~1.1.4:
+  version "1.1.4"
+  resolved "https://registry.yarnpkg.com/color-name/-/color-name-1.1.4.tgz#c2a09a87acbde69543de6f63fa3995c826c536a2"
+  integrity sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==
+
+concat-map@0.0.1:
+  version "0.0.1"
+  resolved "https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b"
+  integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=
+
+convert-hrtime@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/convert-hrtime/-/convert-hrtime-3.0.0.tgz#62c7593f5809ca10be8da858a6d2f702bcda00aa"
+  integrity sha512-7V+KqSvMiHp8yWDuwfww06XleMWVVB9b9tURBx+G7UTADuo5hYPuowKloz4OzOqbPezxgo+fdQ1522WzPG4OeA==
+
+cross-spawn@^7.0.3:
+  version "7.0.3"
+  resolved "https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.3.tgz#f73a85b9d5d41d045551c177e2882d4ac85728a6"
+  integrity sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==
+  dependencies:
+    path-key "^3.1.0"
+    shebang-command "^2.0.0"
+    which "^2.0.1"
+
+crypto-random-string@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/crypto-random-string/-/crypto-random-string-2.0.0.tgz#ef2a7a966ec11083388369baa02ebead229b30d5"
+  integrity sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==
+
+dayjs@1.9.6:
+  version "1.9.6"
+  resolved "https://registry.yarnpkg.com/dayjs/-/dayjs-1.9.6.tgz#6f0c77d76ac1ff63720dd1197e5cb87b67943d70"
+  integrity sha512-HngNLtPEBWRo8EFVmHFmSXAjtCX8rGNqeXQI0Gh7wCTSqwaKgPIDqu9m07wABVopNwzvOeCb+2711vQhDlcIXw==
+
+decode-uri-component@^0.2.0:
+  version "0.2.0"
+  resolved "https://registry.yarnpkg.com/decode-uri-component/-/decode-uri-component-0.2.0.tgz#eb3913333458775cb84cd1a1fae062106bb87545"
+  integrity sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=
+
+decompress-response@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.yarnpkg.com/decompress-response/-/decompress-response-6.0.0.tgz#ca387612ddb7e104bd16d85aab00d5ecf09c66fc"
+  integrity sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==
+  dependencies:
+    mimic-response "^3.1.0"
+
+dedent@0.7.0:
+  version "0.7.0"
+  resolved "https://registry.yarnpkg.com/dedent/-/dedent-0.7.0.tgz#2495ddbaf6eb874abb0e1be9df22d2e5a544326c"
+  integrity sha1-JJXduvbrh0q7Dhvp3yLS5aVEMmw=
+
+defaults@^1.0.3:
+  version "1.0.3"
+  resolved "https://registry.yarnpkg.com/defaults/-/defaults-1.0.3.tgz#c656051e9817d9ff08ed881477f3fe4019f3ef7d"
+  integrity sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=
+  dependencies:
+    clone "^1.0.2"
+
+defer-to-connect@^2.0.0:
+  version "2.0.1"
+  resolved "https://registry.yarnpkg.com/defer-to-connect/-/defer-to-connect-2.0.1.tgz#8016bdb4143e4632b77a3449c6236277de520587"
+  integrity sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==
+
+del@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.yarnpkg.com/del/-/del-6.0.0.tgz#0b40d0332cea743f1614f818be4feb717714c952"
+  integrity sha512-1shh9DQ23L16oXSZKB2JxpL7iMy2E0S9d517ptA1P8iw0alkPtQcrKH7ru31rYtKwF499HkTu+DRzq3TCKDFRQ==
+  dependencies:
+    globby "^11.0.1"
+    graceful-fs "^4.2.4"
+    is-glob "^4.0.1"
+    is-path-cwd "^2.2.0"
+    is-path-inside "^3.0.2"
+    p-map "^4.0.0"
+    rimraf "^3.0.2"
+    slash "^3.0.0"
+
+dir-glob@^3.0.1:
+  version "3.0.1"
+  resolved "https://registry.yarnpkg.com/dir-glob/-/dir-glob-3.0.1.tgz#56dbf73d992a4a93ba1584f4534063fd2e41717f"
+  integrity sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==
+  dependencies:
+    path-type "^4.0.0"
+
+emoji-regex@^8.0.0:
+  version "8.0.0"
+  resolved "https://registry.yarnpkg.com/emoji-regex/-/emoji-regex-8.0.0.tgz#e818fd69ce5ccfcb404594f842963bf53164cc37"
+  integrity sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==
+
+end-of-stream@^1.1.0:
+  version "1.4.4"
+  resolved "https://registry.yarnpkg.com/end-of-stream/-/end-of-stream-1.4.4.tgz#5ae64a5f45057baf3626ec14da0ca5e4b2431eb0"
+  integrity sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==
+  dependencies:
+    once "^1.4.0"
+
+escape-string-regexp@^1.0.5:
+  version "1.0.5"
+  resolved "https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4"
+  integrity sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=
+
+esm@3.2.25:
+  version "3.2.25"
+  resolved "https://registry.yarnpkg.com/esm/-/esm-3.2.25.tgz#342c18c29d56157688ba5ce31f8431fbb795cc10"
+  integrity sha512-U1suiZ2oDVWv4zPO56S0NcR5QriEahGtdN2OR6FiOG4WJvcjBVFB0qI4+eKoWFH483PKGuLuu6V8Z4T5g63UVA==
+
+eventemitter2@6.4.3:
+  version "6.4.3"
+  resolved "https://registry.yarnpkg.com/eventemitter2/-/eventemitter2-6.4.3.tgz#35c563619b13f3681e7eb05cbdaf50f56ba58820"
+  integrity sha512-t0A2msp6BzOf+QAcI6z9XMktLj52OjGQg+8SJH6v5+3uxNpWYRR3wQmfA+6xtMU9kOC59qk9licus5dYcrYkMQ==
+
+execa@5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/execa/-/execa-5.0.0.tgz#4029b0007998a841fbd1032e5f4de86a3c1e3376"
+  integrity sha512-ov6w/2LCiuyO4RLYGdpFGjkcs0wMTgGE8PrkTHikeUy5iJekXyPIKUjifk5CsE0pt7sMCrMZ3YNqoCj6idQOnQ==
+  dependencies:
+    cross-spawn "^7.0.3"
+    get-stream "^6.0.0"
+    human-signals "^2.1.0"
+    is-stream "^2.0.0"
+    merge-stream "^2.0.0"
+    npm-run-path "^4.0.1"
+    onetime "^5.1.2"
+    signal-exit "^3.0.3"
+    strip-final-newline "^2.0.0"
+
+external-editor@^3.0.3:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/external-editor/-/external-editor-3.1.0.tgz#cb03f740befae03ea4d283caed2741a83f335495"
+  integrity sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==
+  dependencies:
+    chardet "^0.7.0"
+    iconv-lite "^0.4.24"
+    tmp "^0.0.33"
+
+fast-glob@^3.1.1:
+  version "3.2.5"
+  resolved "https://registry.yarnpkg.com/fast-glob/-/fast-glob-3.2.5.tgz#7939af2a656de79a4f1901903ee8adcaa7cb9661"
+  integrity sha512-2DtFcgT68wiTTiwZ2hNdJfcHNke9XOfnwmBRWXhmeKM8rF0TGwmC/Qto3S7RoZKp5cilZbxzO5iTNTQsJ+EeDg==
+  dependencies:
+    "@nodelib/fs.stat" "^2.0.2"
+    "@nodelib/fs.walk" "^1.2.3"
+    glob-parent "^5.1.0"
+    merge2 "^1.3.0"
+    micromatch "^4.0.2"
+    picomatch "^2.2.1"
+
+fastq@^1.6.0:
+  version "1.11.0"
+  resolved "https://registry.yarnpkg.com/fastq/-/fastq-1.11.0.tgz#bb9fb955a07130a918eb63c1f5161cc32a5d0858"
+  integrity sha512-7Eczs8gIPDrVzT+EksYBcupqMyxSHXXrHOLRRxU2/DicV8789MRBRR8+Hc2uWzUupOs4YS4JzBmBxjjCVBxD/g==
+  dependencies:
+    reusify "^1.0.4"
+
+figures@^3.0.0:
+  version "3.2.0"
+  resolved "https://registry.yarnpkg.com/figures/-/figures-3.2.0.tgz#625c18bd293c604dc4a8ddb2febf0c88341746af"
+  integrity sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==
+  dependencies:
+    escape-string-regexp "^1.0.5"
+
+fill-range@^7.0.1:
+  version "7.0.1"
+  resolved "https://registry.yarnpkg.com/fill-range/-/fill-range-7.0.1.tgz#1919a6a7c75fe38b2c7c77e5198535da9acdda40"
+  integrity sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==
+  dependencies:
+    to-regex-range "^5.0.1"
+
+find-up@5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/find-up/-/find-up-5.0.0.tgz#4c92819ecb7083561e4f4a240a86be5198f536fc"
+  integrity sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==
+  dependencies:
+    locate-path "^6.0.0"
+    path-exists "^4.0.0"
+
+firost@2.6.1:
+  version "2.6.1"
+  resolved "https://registry.yarnpkg.com/firost/-/firost-2.6.1.tgz#138873e3c99dd3dc0ca8d1a04a5a23136237a4d3"
+  integrity sha512-WQN2DyL8f07YVcq/Sqi+gIZea5prqvzS0E8FqTskyJ8zhScGyCcUXLXc2pKcN5gSKgQorK1VuDScErdT+gtM8g==
+  dependencies:
+    callsites "3.1.0"
+    chokidar "3.5.0"
+    clear-module "4.1.1"
+    eventemitter2 "6.4.3"
+    execa "5.0.0"
+    find-up "5.0.0"
+    fs-extra "9.0.1"
+    globby "11.0.1"
+    golgoth "2.0.0"
+    inquirer "7.3.3"
+    is-glob "4.0.1"
+    json-stable-stringify "1.0.1"
+    nanoid "3.1.20"
+    normalize-url "5.3.0"
+    ora "5.2.0"
+    std-mocks "1.0.1"
+    strip-ansi "6.0.0"
+    tempy "1.0.0"
+    untildify "4.0.0"
+    which "2.0.2"
+
+flat@5.0.2:
+  version "5.0.2"
+  resolved "https://registry.yarnpkg.com/flat/-/flat-5.0.2.tgz#8ca6fe332069ffa9d324c327198c598259ceb241"
+  integrity sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ==
+
+fs-extra@9.0.1:
+  version "9.0.1"
+  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-9.0.1.tgz#910da0062437ba4c39fedd863f1675ccfefcb9fc"
+  integrity sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==
+  dependencies:
+    at-least-node "^1.0.0"
+    graceful-fs "^4.2.0"
+    jsonfile "^6.0.1"
+    universalify "^1.0.0"
+
+fs.realpath@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f"
+  integrity sha1-FQStJSMVjKpA20onh8sBQRmU6k8=
+
+fsevents@~2.3.1:
+  version "2.3.2"
+  resolved "https://registry.yarnpkg.com/fsevents/-/fsevents-2.3.2.tgz#8a526f78b8fdf4623b709e0b975c52c24c02fd1a"
+  integrity sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==
+
+get-stream@^5.1.0:
+  version "5.2.0"
+  resolved "https://registry.yarnpkg.com/get-stream/-/get-stream-5.2.0.tgz#4966a1795ee5ace65e706c4b7beb71257d6e22d3"
+  integrity sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==
+  dependencies:
+    pump "^3.0.0"
+
+get-stream@^6.0.0:
+  version "6.0.1"
+  resolved "https://registry.yarnpkg.com/get-stream/-/get-stream-6.0.1.tgz#a262d8eef67aced57c2852ad6167526a43cbf7b7"
+  integrity sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==
+
+glob-parent@^5.1.0, glob-parent@~5.1.0:
+  version "5.1.2"
+  resolved "https://registry.yarnpkg.com/glob-parent/-/glob-parent-5.1.2.tgz#869832c58034fe68a4093c17dc15e8340d8401c4"
+  integrity sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==
+  dependencies:
+    is-glob "^4.0.1"
+
+glob@^7.1.3:
+  version "7.1.7"
+  resolved "https://registry.yarnpkg.com/glob/-/glob-7.1.7.tgz#3b193e9233f01d42d0b3f78294bbeeb418f94a90"
+  integrity sha512-OvD9ENzPLbegENnYP5UUfJIirTg4+XwMWGaQfQTY0JenxNvvIKP3U3/tAQSPIu/lHxXYSZmpXlUHeqAIdKzBLQ==
+  dependencies:
+    fs.realpath "^1.0.0"
+    inflight "^1.0.4"
+    inherits "2"
+    minimatch "^3.0.4"
+    once "^1.3.0"
+    path-is-absolute "^1.0.0"
+
+globby@11.0.1:
+  version "11.0.1"
+  resolved "https://registry.yarnpkg.com/globby/-/globby-11.0.1.tgz#9a2bf107a068f3ffeabc49ad702c79ede8cfd357"
+  integrity sha512-iH9RmgwCmUJHi2z5o2l3eTtGBtXek1OYlHrbcxOYugyHLmAsZrPj43OtHThd62Buh/Vv6VyCBD2bdyWcGNQqoQ==
+  dependencies:
+    array-union "^2.1.0"
+    dir-glob "^3.0.1"
+    fast-glob "^3.1.1"
+    ignore "^5.1.4"
+    merge2 "^1.3.0"
+    slash "^3.0.0"
+
+globby@^11.0.1:
+  version "11.0.3"
+  resolved "https://registry.yarnpkg.com/globby/-/globby-11.0.3.tgz#9b1f0cb523e171dd1ad8c7b2a9fb4b644b9593cb"
+  integrity sha512-ffdmosjA807y7+lA1NM0jELARVmYul/715xiILEjo3hBLPTcirgQNnXECn5g3mtR8TOLCVbkfua1Hpen25/Xcg==
+  dependencies:
+    array-union "^2.1.0"
+    dir-glob "^3.0.1"
+    fast-glob "^3.1.1"
+    ignore "^5.1.4"
+    merge2 "^1.3.0"
+    slash "^3.0.0"
+
+golgoth@2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/golgoth/-/golgoth-2.0.0.tgz#29bb68398b57c4558fca2cc57f2ddcdf1bf03323"
+  integrity sha512-LJmQuGMdm+Hh7b8UBpstnfhjswzLA30WfKHPvMm+NTZUSq0y4YQ3mr3Nbj49Qs9sac2DT5Qw99g2djfvdyeilA==
+  dependencies:
+    chalk "4.1.0"
+    dayjs "1.9.6"
+    dedent "0.7.0"
+    esm "3.2.25"
+    flat "5.0.2"
+    got "11.8.0"
+    lodash "4.17.20"
+    p-all "3.0.0"
+    p-map "4.0.0"
+    p-map-series "2.1.0"
+    p-props "4.0.0"
+    pify "5.0.0"
+    query-string "6.13.7"
+    time-span "4.0.0"
+
+got@11.8.0:
+  version "11.8.0"
+  resolved "https://registry.yarnpkg.com/got/-/got-11.8.0.tgz#be0920c3586b07fd94add3b5b27cb28f49e6545f"
+  integrity sha512-k9noyoIIY9EejuhaBNLyZ31D5328LeqnyPNXJQb2XlJZcKakLqN5m6O/ikhq/0lw56kUYS54fVm+D1x57YC9oQ==
+  dependencies:
+    "@sindresorhus/is" "^4.0.0"
+    "@szmarczak/http-timer" "^4.0.5"
+    "@types/cacheable-request" "^6.0.1"
+    "@types/responselike" "^1.0.0"
+    cacheable-lookup "^5.0.3"
+    cacheable-request "^7.0.1"
+    decompress-response "^6.0.0"
+    http2-wrapper "^1.0.0-beta.5.2"
+    lowercase-keys "^2.0.0"
+    p-cancelable "^2.0.0"
+    responselike "^2.0.0"
+
+graceful-fs@^4.1.6, graceful-fs@^4.2.0, graceful-fs@^4.2.4:
+  version "4.2.6"
+  resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-4.2.6.tgz#ff040b2b0853b23c3d31027523706f1885d76bee"
+  integrity sha512-nTnJ528pbqxYanhpDYsi4Rd8MAeaBA67+RZ10CM1m3bTAVFEDcd5AuA4a6W5YkGZ1iNXHzZz8T6TBKLeBuNriQ==
+
+has-flag@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b"
+  integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
+
+http-cache-semantics@^4.0.0:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz#49e91c5cbf36c9b94bcfcd71c23d5249ec74e390"
+  integrity sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==
+
+http2-wrapper@^1.0.0-beta.5.2:
+  version "1.0.3"
+  resolved "https://registry.yarnpkg.com/http2-wrapper/-/http2-wrapper-1.0.3.tgz#b8f55e0c1f25d4ebd08b3b0c2c079f9590800b3d"
+  integrity sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==
+  dependencies:
+    quick-lru "^5.1.1"
+    resolve-alpn "^1.0.0"
+
+human-signals@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/human-signals/-/human-signals-2.1.0.tgz#dc91fcba42e4d06e4abaed33b3e7a3c02f514ea0"
+  integrity sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==
+
+iconv-lite@^0.4.24:
+  version "0.4.24"
+  resolved "https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.24.tgz#2022b4b25fbddc21d2f524974a474aafe733908b"
+  integrity sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==
+  dependencies:
+    safer-buffer ">= 2.1.2 < 3"
+
+ieee754@^1.1.13:
+  version "1.2.1"
+  resolved "https://registry.yarnpkg.com/ieee754/-/ieee754-1.2.1.tgz#8eb7a10a63fff25d15a57b001586d177d1b0d352"
+  integrity sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==
+
+ignore@^5.1.4:
+  version "5.1.8"
+  resolved "https://registry.yarnpkg.com/ignore/-/ignore-5.1.8.tgz#f150a8b50a34289b33e22f5889abd4d8016f0e57"
+  integrity sha512-BMpfD7PpiETpBl/A6S498BaIJ6Y/ABT93ETbby2fP00v4EbvPBXWEoaR1UBPKs3iR53pJY7EtZk5KACI57i1Uw==
+
+indent-string@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/indent-string/-/indent-string-4.0.0.tgz#624f8f4497d619b2d9768531d58f4122854d7251"
+  integrity sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==
+
+inflight@^1.0.4:
+  version "1.0.6"
+  resolved "https://registry.yarnpkg.com/inflight/-/inflight-1.0.6.tgz#49bd6331d7d02d0c09bc910a1075ba8165b56df9"
+  integrity sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=
+  dependencies:
+    once "^1.3.0"
+    wrappy "1"
+
+inherits@2, inherits@^2.0.3, inherits@^2.0.4:
+  version "2.0.4"
+  resolved "https://registry.yarnpkg.com/inherits/-/inherits-2.0.4.tgz#0fa2c64f932917c3433a0ded55363aae37416b7c"
+  integrity sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==
+
+inquirer@7.3.3:
+  version "7.3.3"
+  resolved "https://registry.yarnpkg.com/inquirer/-/inquirer-7.3.3.tgz#04d176b2af04afc157a83fd7c100e98ee0aad003"
+  integrity sha512-JG3eIAj5V9CwcGvuOmoo6LB9kbAYT8HXffUl6memuszlwDC/qvFAJw49XJ5NROSFNPxp3iQg1GqkFhaY/CR0IA==
+  dependencies:
+    ansi-escapes "^4.2.1"
+    chalk "^4.1.0"
+    cli-cursor "^3.1.0"
+    cli-width "^3.0.0"
+    external-editor "^3.0.3"
+    figures "^3.0.0"
+    lodash "^4.17.19"
+    mute-stream "0.0.8"
+    run-async "^2.4.0"
+    rxjs "^6.6.0"
+    string-width "^4.1.0"
+    strip-ansi "^6.0.0"
+    through "^2.3.6"
+
+is-binary-path@~2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/is-binary-path/-/is-binary-path-2.1.0.tgz#ea1f7f3b80f064236e83470f86c09c254fb45b09"
+  integrity sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==
+  dependencies:
+    binary-extensions "^2.0.0"
+
+is-extglob@^2.1.1:
+  version "2.1.1"
+  resolved "https://registry.yarnpkg.com/is-extglob/-/is-extglob-2.1.1.tgz#a88c02535791f02ed37c76a1b9ea9773c833f8c2"
+  integrity sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=
+
+is-fullwidth-code-point@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz#f116f8064fe90b3f7844a38997c0b75051269f1d"
+  integrity sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==
+
+is-glob@4.0.1, is-glob@^4.0.1, is-glob@~4.0.1:
+  version "4.0.1"
+  resolved "https://registry.yarnpkg.com/is-glob/-/is-glob-4.0.1.tgz#7567dbe9f2f5e2467bc77ab83c4a29482407a5dc"
+  integrity sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==
+  dependencies:
+    is-extglob "^2.1.1"
+
+is-interactive@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/is-interactive/-/is-interactive-1.0.0.tgz#cea6e6ae5c870a7b0a0004070b7b587e0252912e"
+  integrity sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==
+
+is-number@^7.0.0:
+  version "7.0.0"
+  resolved "https://registry.yarnpkg.com/is-number/-/is-number-7.0.0.tgz#7535345b896734d5f80c4d06c50955527a14f12b"
+  integrity sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==
+
+is-path-cwd@^2.2.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/is-path-cwd/-/is-path-cwd-2.2.0.tgz#67d43b82664a7b5191fd9119127eb300048a9fdb"
+  integrity sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ==
+
+is-path-inside@^3.0.2:
+  version "3.0.3"
+  resolved "https://registry.yarnpkg.com/is-path-inside/-/is-path-inside-3.0.3.tgz#d231362e53a07ff2b0e0ea7fed049161ffd16283"
+  integrity sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==
+
+is-stream@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/is-stream/-/is-stream-2.0.0.tgz#bde9c32680d6fae04129d6ac9d921ce7815f78e3"
+  integrity sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==
+
+is-unicode-supported@^0.1.0:
+  version "0.1.0"
+  resolved "https://registry.yarnpkg.com/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz#3f26c76a809593b52bfa2ecb5710ed2779b522a7"
+  integrity sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==
+
+isexe@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/isexe/-/isexe-2.0.0.tgz#e8fbf374dc556ff8947a10dcb0572d633f2cfa10"
+  integrity sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=
+
+json-buffer@3.0.1:
+  version "3.0.1"
+  resolved "https://registry.yarnpkg.com/json-buffer/-/json-buffer-3.0.1.tgz#9338802a30d3b6605fbe0613e094008ca8c05a13"
+  integrity sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==
+
+json-stable-stringify@1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz#9a759d39c5f2ff503fd5300646ed445f88c4f9af"
+  integrity sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=
+  dependencies:
+    jsonify "~0.0.0"
+
+jsonfile@^6.0.1:
+  version "6.1.0"
+  resolved "https://registry.yarnpkg.com/jsonfile/-/jsonfile-6.1.0.tgz#bc55b2634793c679ec6403094eb13698a6ec0aae"
+  integrity sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==
+  dependencies:
+    universalify "^2.0.0"
+  optionalDependencies:
+    graceful-fs "^4.1.6"
+
+jsonify@~0.0.0:
+  version "0.0.0"
+  resolved "https://registry.yarnpkg.com/jsonify/-/jsonify-0.0.0.tgz#2c74b6ee41d93ca51b7b5aaee8f503631d252a73"
+  integrity sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=
+
+keyv@^4.0.0:
+  version "4.0.3"
+  resolved "https://registry.yarnpkg.com/keyv/-/keyv-4.0.3.tgz#4f3aa98de254803cafcd2896734108daa35e4254"
+  integrity sha512-zdGa2TOpSZPq5mU6iowDARnMBZgtCqJ11dJROFi6tg6kTn4nuUdU09lFyLFSaHrWqpIJ+EBq4E8/Dc0Vx5vLdA==
+  dependencies:
+    json-buffer "3.0.1"
+
+locate-path@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.yarnpkg.com/locate-path/-/locate-path-6.0.0.tgz#55321eb309febbc59c4801d931a72452a681d286"
+  integrity sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==
+  dependencies:
+    p-locate "^5.0.0"
+
+lodash@4.17.20:
+  version "4.17.20"
+  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.20.tgz#b44a9b6297bcb698f1c51a3545a2b3b368d59c52"
+  integrity sha512-PlhdFcillOINfeV7Ni6oF1TAEayyZBoZ8bcshTHqOYJYlrqzRK5hagpagky5o4HfCzzd1TRkXPMFq6cKk9rGmA==
+
+lodash@^4.11.1, lodash@^4.17.19:
+  version "4.17.21"
+  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c"
+  integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
+
+log-symbols@^4.0.0:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/log-symbols/-/log-symbols-4.1.0.tgz#3fbdbb95b4683ac9fc785111e792e558d4abd503"
+  integrity sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==
+  dependencies:
+    chalk "^4.1.0"
+    is-unicode-supported "^0.1.0"
+
+lowercase-keys@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/lowercase-keys/-/lowercase-keys-2.0.0.tgz#2603e78b7b4b0006cbca2fbcc8a3202558ac9479"
+  integrity sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==
+
+merge-stream@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/merge-stream/-/merge-stream-2.0.0.tgz#52823629a14dd00c9770fb6ad47dc6310f2c1f60"
+  integrity sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==
+
+merge2@^1.3.0:
+  version "1.4.1"
+  resolved "https://registry.yarnpkg.com/merge2/-/merge2-1.4.1.tgz#4368892f885e907455a6fd7dc55c0c9d404990ae"
+  integrity sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==
+
+micromatch@^4.0.2:
+  version "4.0.4"
+  resolved "https://registry.yarnpkg.com/micromatch/-/micromatch-4.0.4.tgz#896d519dfe9db25fce94ceb7a500919bf881ebf9"
+  integrity sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==
+  dependencies:
+    braces "^3.0.1"
+    picomatch "^2.2.3"
+
+mimic-fn@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/mimic-fn/-/mimic-fn-2.1.0.tgz#7ed2c2ccccaf84d3ffcb7a69b57711fc2083401b"
+  integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==
+
+mimic-response@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/mimic-response/-/mimic-response-1.0.1.tgz#4923538878eef42063cb8a3e3b0798781487ab1b"
+  integrity sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==
+
+mimic-response@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/mimic-response/-/mimic-response-3.1.0.tgz#2d1d59af9c1b129815accc2c46a022a5ce1fa3c9"
+  integrity sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==
+
+minimatch@^3.0.4:
+  version "3.0.4"
+  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.4.tgz#5166e286457f03306064be5497e8dbb0c3d32083"
+  integrity sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==
+  dependencies:
+    brace-expansion "^1.1.7"
+
+mute-stream@0.0.8:
+  version "0.0.8"
+  resolved "https://registry.yarnpkg.com/mute-stream/-/mute-stream-0.0.8.tgz#1630c42b2251ff81e2a283de96a5497ea92e5e0d"
+  integrity sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==
+
+nanoid@3.1.20:
+  version "3.1.20"
+  resolved "https://registry.yarnpkg.com/nanoid/-/nanoid-3.1.20.tgz#badc263c6b1dcf14b71efaa85f6ab4c1d6cfc788"
+  integrity sha512-a1cQNyczgKbLX9jwbS/+d7W8fX/RfgYR7lVWwWOGIPNgK2m0MWvrGF6/m4kk6U3QcFMnZf3RIhL0v2Jgh/0Uxw==
+
+node-object-hash@2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/node-object-hash/-/node-object-hash-2.0.0.tgz#9971fcdb7d254f05016bd9ccf508352bee11116b"
+  integrity sha512-VZR0zroAusy1ETZMZiGeLkdu50LGjG5U1KHZqTruqtTyQ2wfWhHG2Ow4nsUbfTFGlaREgNHcCWoM/OzEm6p+NQ==
+
+normalize-path@^3.0.0, normalize-path@~3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/normalize-path/-/normalize-path-3.0.0.tgz#0dcd69ff23a1c9b11fd0978316644a0388216a65"
+  integrity sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==
+
+normalize-url@5.3.0:
+  version "5.3.0"
+  resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-5.3.0.tgz#8959b3cdaa295b61592c1f245dded34b117618dd"
+  integrity sha512-9/nOVLYYe/dO/eJeQUNaGUF4m4Z5E7cb9oNTKabH+bNf19mqj60txTcveQxL0GlcWLXCxkOu2/LwL8oW0idIDA==
+
+normalize-url@^4.1.0:
+  version "4.5.0"
+  resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-4.5.0.tgz#453354087e6ca96957bd8f5baf753f5982142129"
+  integrity sha512-2s47yzUxdexf1OhyRi4Em83iQk0aPvwTddtFz4hnSSw9dCEsLEGf6SwIO8ss/19S9iBb5sJaOuTvTGDeZI00BQ==
+
+npm-run-path@^4.0.1:
+  version "4.0.1"
+  resolved "https://registry.yarnpkg.com/npm-run-path/-/npm-run-path-4.0.1.tgz#b7ecd1e5ed53da8e37a55e1c2269e0b97ed748ea"
+  integrity sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==
+  dependencies:
+    path-key "^3.0.0"
+
+once@^1.3.0, once@^1.3.1, once@^1.4.0:
+  version "1.4.0"
+  resolved "https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1"
+  integrity sha1-WDsap3WWHUsROsF9nFC6753Xa9E=
+  dependencies:
+    wrappy "1"
+
+onetime@^5.1.0, onetime@^5.1.2:
+  version "5.1.2"
+  resolved "https://registry.yarnpkg.com/onetime/-/onetime-5.1.2.tgz#d0e96ebb56b07476df1dd9c4806e5237985ca45e"
+  integrity sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==
+  dependencies:
+    mimic-fn "^2.1.0"
+
+ora@5.2.0:
+  version "5.2.0"
+  resolved "https://registry.yarnpkg.com/ora/-/ora-5.2.0.tgz#de10bfd2d15514384af45f3fa9d9b1aaf344fda1"
+  integrity sha512-+wG2v8TUU8EgzPHun1k/n45pXquQ9fHnbXVetl9rRgO6kjZszGGbraF3XPTIdgeA+s1lbRjSEftAnyT0w8ZMvQ==
+  dependencies:
+    bl "^4.0.3"
+    chalk "^4.1.0"
+    cli-cursor "^3.1.0"
+    cli-spinners "^2.5.0"
+    is-interactive "^1.0.0"
+    log-symbols "^4.0.0"
+    strip-ansi "^6.0.0"
+    wcwidth "^1.0.1"
+
+os-tmpdir@~1.0.2:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/os-tmpdir/-/os-tmpdir-1.0.2.tgz#bbe67406c79aa85c5cfec766fe5734555dfa1274"
+  integrity sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=
+
+p-all@3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/p-all/-/p-all-3.0.0.tgz#077c023c37e75e760193badab2bad3ccd5782bfb"
+  integrity sha512-qUZbvbBFVXm6uJ7U/WDiO0fv6waBMbjlCm4E66oZdRR+egswICarIdHyVSZZHudH8T5SF8x/JG0q0duFzPnlBw==
+  dependencies:
+    p-map "^4.0.0"
+
+p-cancelable@^2.0.0:
+  version "2.1.1"
+  resolved "https://registry.yarnpkg.com/p-cancelable/-/p-cancelable-2.1.1.tgz#aab7fbd416582fa32a3db49859c122487c5ed2cf"
+  integrity sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==
+
+p-limit@^3.0.2:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/p-limit/-/p-limit-3.1.0.tgz#e1daccbe78d0d1388ca18c64fea38e3e57e3706b"
+  integrity sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==
+  dependencies:
+    yocto-queue "^0.1.0"
+
+p-locate@^5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/p-locate/-/p-locate-5.0.0.tgz#83c8315c6785005e3bd021839411c9e110e6d834"
+  integrity sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==
+  dependencies:
+    p-limit "^3.0.2"
+
+p-map-series@2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/p-map-series/-/p-map-series-2.1.0.tgz#7560d4c452d9da0c07e692fdbfe6e2c81a2a91f2"
+  integrity sha512-RpYIIK1zXSNEOdwxcfe7FdvGcs7+y5n8rifMhMNWvaxRNMPINJHF5GDeuVxWqnfrcHPSCnp7Oo5yNXHId9Av2Q==
+
+p-map@4.0.0, p-map@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/p-map/-/p-map-4.0.0.tgz#bb2f95a5eda2ec168ec9274e06a747c3e2904d2b"
+  integrity sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==
+  dependencies:
+    aggregate-error "^3.0.0"
+
+p-props@4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/p-props/-/p-props-4.0.0.tgz#f37c877a9a722057833e1dc38d43edf3906b3437"
+  integrity sha512-3iKFbPdoPG7Ne3cMA53JnjPsTMaIzE9gxKZnvKJJivTAeqLEZPBu6zfi6DYq9AsH1nYycWmo3sWCNI8Kz6T2Zg==
+  dependencies:
+    p-map "^4.0.0"
+
+parent-module@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/parent-module/-/parent-module-2.0.0.tgz#fa71f88ff1a50c27e15d8ff74e0e3a9523bf8708"
+  integrity sha512-uo0Z9JJeWzv8BG+tRcapBKNJ0dro9cLyczGzulS6EfeyAdeC9sbojtW6XwvYxJkEne9En+J2XEl4zyglVeIwFg==
+  dependencies:
+    callsites "^3.1.0"
+
+path-exists@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/path-exists/-/path-exists-4.0.0.tgz#513bdbe2d3b95d7762e8c1137efa195c6c61b5b3"
+  integrity sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==
+
+path-is-absolute@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f"
+  integrity sha1-F0uSaHNVNP+8es5r9TpanhtcX18=
+
+path-key@^3.0.0, path-key@^3.1.0:
+  version "3.1.1"
+  resolved "https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375"
+  integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
+
+path-type@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/path-type/-/path-type-4.0.0.tgz#84ed01c0a7ba380afe09d90a8c180dcd9d03043b"
+  integrity sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==
+
+picomatch@^2.0.4, picomatch@^2.2.1, picomatch@^2.2.3:
+  version "2.2.3"
+  resolved "https://registry.yarnpkg.com/picomatch/-/picomatch-2.2.3.tgz#465547f359ccc206d3c48e46a1bcb89bf7ee619d"
+  integrity sha512-KpELjfwcCDUb9PeigTs2mBJzXUPzAuP2oPcA989He8Rte0+YUAjw1JVedDhuTKPkHjSYzMN3npC9luThGYEKdg==
+
+pify@5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/pify/-/pify-5.0.0.tgz#1f5eca3f5e87ebec28cc6d54a0e4aaf00acc127f"
+  integrity sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==
+
+pump@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/pump/-/pump-3.0.0.tgz#b4a2116815bde2f4e1ea602354e8c75565107a64"
+  integrity sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==
+  dependencies:
+    end-of-stream "^1.1.0"
+    once "^1.3.1"
+
+query-string@6.13.7:
+  version "6.13.7"
+  resolved "https://registry.yarnpkg.com/query-string/-/query-string-6.13.7.tgz#af53802ff6ed56f3345f92d40a056f93681026ee"
+  integrity sha512-CsGs8ZYb39zu0WLkeOhe0NMePqgYdAuCqxOYKDR5LVCytDZYMGx3Bb+xypvQvPHVPijRXB0HZNFllCzHRe4gEA==
+  dependencies:
+    decode-uri-component "^0.2.0"
+    split-on-first "^1.0.0"
+    strict-uri-encode "^2.0.0"
+
+queue-microtask@^1.2.2:
+  version "1.2.3"
+  resolved "https://registry.yarnpkg.com/queue-microtask/-/queue-microtask-1.2.3.tgz#4929228bbc724dfac43e0efb058caf7b6cfb6243"
+  integrity sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==
+
+quick-lru@^5.1.1:
+  version "5.1.1"
+  resolved "https://registry.yarnpkg.com/quick-lru/-/quick-lru-5.1.1.tgz#366493e6b3e42a3a6885e2e99d18f80fb7a8c932"
+  integrity sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==
+
+readable-stream@^3.4.0:
+  version "3.6.0"
+  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-3.6.0.tgz#337bbda3adc0706bd3e024426a286d4b4b2c9198"
+  integrity sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==
+  dependencies:
+    inherits "^2.0.3"
+    string_decoder "^1.1.1"
+    util-deprecate "^1.0.1"
+
+readdirp@~3.5.0:
+  version "3.5.0"
+  resolved "https://registry.yarnpkg.com/readdirp/-/readdirp-3.5.0.tgz#9ba74c019b15d365278d2e91bb8c48d7b4d42c9e"
+  integrity sha512-cMhu7c/8rdhkHXWsY+osBhfSy0JikwpHK/5+imo+LpeasTF8ouErHrlYkwT0++njiyuDvc7OFY5T3ukvZ8qmFQ==
+  dependencies:
+    picomatch "^2.2.1"
+
+resolve-alpn@^1.0.0:
+  version "1.1.2"
+  resolved "https://registry.yarnpkg.com/resolve-alpn/-/resolve-alpn-1.1.2.tgz#30b60cfbb0c0b8dc897940fe13fe255afcdd4d28"
+  integrity sha512-8OyfzhAtA32LVUsJSke3auIyINcwdh5l3cvYKdKO0nvsYSKuiLfTM5i78PJswFPT8y6cPW+L1v6/hE95chcpDA==
+
+resolve-from@^5.0.0:
+  version "5.0.0"
+  resolved "https://registry.yarnpkg.com/resolve-from/-/resolve-from-5.0.0.tgz#c35225843df8f776df21c57557bc087e9dfdfc69"
+  integrity sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==
+
+responselike@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/responselike/-/responselike-2.0.0.tgz#26391bcc3174f750f9a79eacc40a12a5c42d7723"
+  integrity sha512-xH48u3FTB9VsZw7R+vvgaKeLKzT6jOogbQhEe/jewwnZgzPcnyWui2Av6JpoYZF/91uueC+lqhWqeURw5/qhCw==
+  dependencies:
+    lowercase-keys "^2.0.0"
+
+restore-cursor@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/restore-cursor/-/restore-cursor-3.1.0.tgz#39f67c54b3a7a58cea5236d95cf0034239631f7e"
+  integrity sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==
+  dependencies:
+    onetime "^5.1.0"
+    signal-exit "^3.0.2"
+
+reusify@^1.0.4:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/reusify/-/reusify-1.0.4.tgz#90da382b1e126efc02146e90845a88db12925d76"
+  integrity sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==
+
+rimraf@^3.0.2:
+  version "3.0.2"
+  resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-3.0.2.tgz#f1a5402ba6220ad52cc1282bac1ae3aa49fd061a"
+  integrity sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==
+  dependencies:
+    glob "^7.1.3"
+
+run-async@^2.4.0:
+  version "2.4.1"
+  resolved "https://registry.yarnpkg.com/run-async/-/run-async-2.4.1.tgz#8440eccf99ea3e70bd409d49aab88e10c189a455"
+  integrity sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==
+
+run-parallel@^1.1.9:
+  version "1.2.0"
+  resolved "https://registry.yarnpkg.com/run-parallel/-/run-parallel-1.2.0.tgz#66d1368da7bdf921eb9d95bd1a9229e7f21a43ee"
+  integrity sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==
+  dependencies:
+    queue-microtask "^1.2.2"
+
+rxjs@^6.6.0:
+  version "6.6.7"
+  resolved "https://registry.yarnpkg.com/rxjs/-/rxjs-6.6.7.tgz#90ac018acabf491bf65044235d5863c4dab804c9"
+  integrity sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==
+  dependencies:
+    tslib "^1.9.0"
+
+safe-buffer@~5.2.0:
+  version "5.2.1"
+  resolved "https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.2.1.tgz#1eaf9fa9bdb1fdd4ec75f58f9cdb4e6b7827eec6"
+  integrity sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==
+
+"safer-buffer@>= 2.1.2 < 3":
+  version "2.1.2"
+  resolved "https://registry.yarnpkg.com/safer-buffer/-/safer-buffer-2.1.2.tgz#44fa161b0187b9549dd84bb91802f9bd8385cd6a"
+  integrity sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==
+
+shebang-command@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/shebang-command/-/shebang-command-2.0.0.tgz#ccd0af4f8835fbdc265b82461aaf0c36663f34ea"
+  integrity sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==
+  dependencies:
+    shebang-regex "^3.0.0"
+
+shebang-regex@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/shebang-regex/-/shebang-regex-3.0.0.tgz#ae16f1644d873ecad843b0307b143362d4c42172"
+  integrity sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==
+
+signal-exit@^3.0.2, signal-exit@^3.0.3:
+  version "3.0.3"
+  resolved "https://registry.yarnpkg.com/signal-exit/-/signal-exit-3.0.3.tgz#a1410c2edd8f077b08b4e253c8eacfcaf057461c"
+  integrity sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFRoeDoJO7wthSLq42EjA==
+
+slash@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/slash/-/slash-3.0.0.tgz#6539be870c165adbd5240220dbe361f1bc4d4634"
+  integrity sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==
+
+split-on-first@^1.0.0:
+  version "1.1.0"
+  resolved "https://registry.yarnpkg.com/split-on-first/-/split-on-first-1.1.0.tgz#f610afeee3b12bce1d0c30425e76398b78249a5f"
+  integrity sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw==
+
+std-mocks@1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/std-mocks/-/std-mocks-1.0.1.tgz#d3388876d7beeba3c70fbd8e2bcaf46eb07d79fe"
+  integrity sha1-0ziIdte+66PHD72OK8r0brB9ef4=
+  dependencies:
+    lodash "^4.11.1"
+
+strict-uri-encode@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/strict-uri-encode/-/strict-uri-encode-2.0.0.tgz#b9c7330c7042862f6b142dc274bbcc5866ce3546"
+  integrity sha1-ucczDHBChi9rFC3CdLvMWGbONUY=
+
+string-width@^4.1.0:
+  version "4.2.2"
+  resolved "https://registry.yarnpkg.com/string-width/-/string-width-4.2.2.tgz#dafd4f9559a7585cfba529c6a0a4f73488ebd4c5"
+  integrity sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE/xi3vOeA==
+  dependencies:
+    emoji-regex "^8.0.0"
+    is-fullwidth-code-point "^3.0.0"
+    strip-ansi "^6.0.0"
+
+string_decoder@^1.1.1:
+  version "1.3.0"
+  resolved "https://registry.yarnpkg.com/string_decoder/-/string_decoder-1.3.0.tgz#42f114594a46cf1a8e30b0a84f56c78c3edac21e"
+  integrity sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==
+  dependencies:
+    safe-buffer "~5.2.0"
+
+strip-ansi@6.0.0, strip-ansi@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.yarnpkg.com/strip-ansi/-/strip-ansi-6.0.0.tgz#0b1571dd7669ccd4f3e06e14ef1eed26225ae532"
+  integrity sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==
+  dependencies:
+    ansi-regex "^5.0.0"
+
+strip-final-newline@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/strip-final-newline/-/strip-final-newline-2.0.0.tgz#89b852fb2fcbe936f6f4b3187afb0a12c1ab58ad"
+  integrity sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==
+
+supports-color@^7.1.0:
+  version "7.2.0"
+  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-7.2.0.tgz#1b7dcdcb32b8138801b3e478ba6a51caa89648da"
+  integrity sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==
+  dependencies:
+    has-flag "^4.0.0"
+
+temp-dir@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/temp-dir/-/temp-dir-2.0.0.tgz#bde92b05bdfeb1516e804c9c00ad45177f31321e"
+  integrity sha512-aoBAniQmmwtcKp/7BzsH8Cxzv8OL736p7v1ihGb5e9DJ9kTwGWHrQrVB5+lfVDzfGrdRzXch+ig7LHaY1JTOrg==
+
+tempy@1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/tempy/-/tempy-1.0.0.tgz#4f192b3ee3328a2684d0e3fc5c491425395aab65"
+  integrity sha512-eLXG5B1G0mRPHmgH2WydPl5v4jH35qEn3y/rA/aahKhIa91Pn119SsU7n7v/433gtT9ONzC8ISvNHIh2JSTm0w==
+  dependencies:
+    del "^6.0.0"
+    is-stream "^2.0.0"
+    temp-dir "^2.0.0"
+    type-fest "^0.16.0"
+    unique-string "^2.0.0"
+
+through@^2.3.6:
+  version "2.3.8"
+  resolved "https://registry.yarnpkg.com/through/-/through-2.3.8.tgz#0dd4c9ffaabc357960b1b724115d7e0e86a2e1f5"
+  integrity sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=
+
+time-span@4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/time-span/-/time-span-4.0.0.tgz#fe74cd50a54e7998712f90ddfe47109040c985c4"
+  integrity sha512-MyqZCTGLDZ77u4k+jqg4UlrzPTPZ49NDlaekU6uuFaJLzPIN1woaRXCbGeqOfxwc3Y37ZROGAJ614Rdv7Olt+g==
+  dependencies:
+    convert-hrtime "^3.0.0"
+
+tmp@^0.0.33:
+  version "0.0.33"
+  resolved "https://registry.yarnpkg.com/tmp/-/tmp-0.0.33.tgz#6d34335889768d21b2bcda0aa277ced3b1bfadf9"
+  integrity sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==
+  dependencies:
+    os-tmpdir "~1.0.2"
+
+to-regex-range@^5.0.1:
+  version "5.0.1"
+  resolved "https://registry.yarnpkg.com/to-regex-range/-/to-regex-range-5.0.1.tgz#1648c44aae7c8d988a326018ed72f5b4dd0392e4"
+  integrity sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==
+  dependencies:
+    is-number "^7.0.0"
+
+tslib@^1.9.0:
+  version "1.14.1"
+  resolved "https://registry.yarnpkg.com/tslib/-/tslib-1.14.1.tgz#cf2d38bdc34a134bcaf1091c41f6619e2f672d00"
+  integrity sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==
+
+type-fest@^0.16.0:
+  version "0.16.0"
+  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.16.0.tgz#3240b891a78b0deae910dbeb86553e552a148860"
+  integrity sha512-eaBzG6MxNzEn9kiwvtre90cXaNLkmadMWa1zQMs3XORCXNbsH/OewwbxC5ia9dCxIxnTAsSxXJaa/p5y8DlvJg==
+
+type-fest@^0.21.3:
+  version "0.21.3"
+  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.21.3.tgz#d260a24b0198436e133fa26a524a6d65fa3b2e37"
+  integrity sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==
+
+unique-string@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/unique-string/-/unique-string-2.0.0.tgz#39c6451f81afb2749de2b233e3f7c5e8843bd89d"
+  integrity sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==
+  dependencies:
+    crypto-random-string "^2.0.0"
+
+universalify@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/universalify/-/universalify-1.0.0.tgz#b61a1da173e8435b2fe3c67d29b9adf8594bd16d"
+  integrity sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==
+
+universalify@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/universalify/-/universalify-2.0.0.tgz#75a4984efedc4b08975c5aeb73f530d02df25717"
+  integrity sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==
+
+untildify@4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/untildify/-/untildify-4.0.0.tgz#2bc947b953652487e4600949fb091e3ae8cd919b"
+  integrity sha512-KK8xQ1mkzZeg9inewmFVDNkg3l5LUhoq9kN6iWYB/CC9YMG8HA+c1Q8HwDe6dEX7kErrEVNVBO3fWsVq5iDgtw==
+
+util-deprecate@^1.0.1:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/util-deprecate/-/util-deprecate-1.0.2.tgz#450d4dc9fa70de732762fbd2d4a28981419a0ccf"
+  integrity sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=
+
+wcwidth@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/wcwidth/-/wcwidth-1.0.1.tgz#f0b0dcf915bc5ff1528afadb2c0e17b532da2fe8"
+  integrity sha1-8LDc+RW8X/FSivrbLA4XtTLaL+g=
+  dependencies:
+    defaults "^1.0.3"
+
+which@2.0.2, which@^2.0.1:
+  version "2.0.2"
+  resolved "https://registry.yarnpkg.com/which/-/which-2.0.2.tgz#7c6a8dd0a636a0327e10b59c9286eee93f3f51b1"
+  integrity sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==
+  dependencies:
+    isexe "^2.0.0"
+
+wrappy@1:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f"
+  integrity sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=
+
+yocto-queue@^0.1.0:
+  version "0.1.0"
+  resolved "https://registry.yarnpkg.com/yocto-queue/-/yocto-queue-0.1.0.tgz#0294eb3dee05028d31ee1a5fa2c556a6aaf10a1b"
+  integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==

commit 3e482e055eeb1f441d14f133cb7c21d6531f1f9f
Author: Chris Raastad <craastad@gmail.com>
Date:   Thu May 20 16:05:02 2021 +0300

    Add Algolia search (#358)
    
    * Add Algolia search.
    * Remove fuse search

diff --git a/assets/js/search.js b/assets/js/search.js
index d7d5dbc..0747b93 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -1,35 +1,8 @@
-let fuse
 
-const fuseOptions = {
-    includeMatches: true,
-    findAllMatches: true,
-    includeScore: true,
-    threshold: 0,
-    ignoreLocation: true,
-    maxPatternLength: 32,
-    minMatchCharLength: 3,
-    useExtendedSearch: true,
-    keys: [
-        {
-            name: 'title',
-            weight: 15,
-        },
-        {
-            name: 'subtitle',
-            weight: 10,
-        },
-        {
-            name: 'content',
-            weight: 5,
-        },
-    ],
-}
+const algolia = algoliasearch("27CIRMYZIB", "7e88305c04e90188508daa6c89e5f4df").initIndex("codemagic_docs");
 
 $(document).ready(() => {
-    $.getJSON('/index.json', (data) => {
-        fuse = new Fuse(data, fuseOptions)
-        initSearchEvents()
-    })
+    initSearchEvents()
 })
 
 const initSearchEvents = () => {
@@ -92,10 +65,10 @@ const updateUrl = (query) =>
             (query ? '?q=' + encodeURIComponent(query) : ''),
     )
 
-const updateResults = (query) => {
+const updateResults = async (query) => {
     let result
     try {
-        result = getResults(query)
+        result = await getResults(query)
     } catch (error) {
         result = error
     }
@@ -108,116 +81,30 @@ const updateInputs = (query) => {
     query === null ? $inputs.trigger('blur') : query && $('.search').addClass('search--active')
 }
 
-const getResultHtml = (resultList, query) => {
-    if (!resultList) return null
+const getResultHtml = (algoliaResultList, query) => {
+    if (!algoliaResultList) return null
 
-    if (resultList instanceof Error) {
+    if (algoliaResultList instanceof Error) {
         return $('<div>', {
             class: 'no-results-message',
-            text: 'Invalid search query: ' + resultList.message,
+            text: 'Invalid search query: ' + algoliaResultList.message,
         })
     }
 
-    if (!resultList.length) {
+    if (!algoliaResultList.length) {
         return $('<div>', {
             class: 'no-results-message',
             text: 'No results matching "' + query + '"',
         })
     }
 
-    const orderByStartPosition = (a, b) => a.start - b.start
-
-    const collectSnippetPositions = (contentLength, all, p) => {
-        const charsBefore = 30
-        const charsAfter = 30
-        const maxSnippetLength = 200
-
-        const start = Math.max(p.start - charsBefore, 0)
-        const end = Math.min(p.start + p.length + charsAfter, contentLength)
-
-        const prev = all[all.length - 1]
-        const isOverlappingWithPrevious = prev && prev.start + prev.length > start
-        if (isOverlappingWithPrevious) {
-            const newLength = end - prev.start
-            if (newLength > maxSnippetLength) {
-                return all
-            }
-            prev.length = newLength
-            prev.keywords.push({ start: p.start - prev.start, length: p.length })
-        } else {
-            all.push({
-                start: start,
-                length: end - start,
-                keywords: [{ start: p.start - start, length: p.length }],
-            })
-        }
-
-        return all
-    }
-
-    const getSnippet = (content, s) => {
-        let c = content.substr(s.start, s.length + 1)
-        const m = c.match(new RegExp('|', 'g'))
-
-        const isStartOfContent = s.start === 0
-        const firstKw = s.keywords[0]
-        const start = isStartOfContent ? 0 : Math.min(firstKw.start, m ? c.indexOf(m[0]) + m[0].length : 0)
-        const lastKw = s.keywords[s.keywords.length - 1]
-
-        const isEndOfContent = s.start + s.length === content.length
-        const end = isEndOfContent
-            ? c.length + 1
-            : Math.max(lastKw.start + lastKw.length, m ? c.lastIndexOf(m[m.length - 1]) : c.length + 1)
-
-        c = c.substring(start, end)
-
-        return Object.assign({}, s, {
-            content: c,
-            isStart: isStartOfContent,
-            isEnd: isEndOfContent,
-            keywords: s.keywords.map((k) => {
-                return { start: k.start - start, length: k.length }
-            }),
-        })
-    }
-
-    const getContentSnippets = (contentPositions, content) => {
-        content = (content || '').trim()
-
-        return contentPositions
-            ? contentPositions
-                  .sort(orderByStartPosition)
-                  .reduce(collectSnippetPositions.bind(null, content.length), [])
-                  .map(getSnippet.bind(null, content))
-                  .slice(0, 3)
-            : [
-                  {
-                      isFirst: true,
-                      isLast: false,
-                      content: content.substring(0, 100),
-                      keywords: contentPositions,
-                  },
-              ]
-    }
-
     return $('<ul>', {
-        html: resultList.map((result) => {
-            const snippets = getContentSnippets(result.positions.content, result.item.content)
-
+        html: algoliaResultList.map((result) => {
             return $('<li>', {
                 html: [
-                    $('<a>', { text: result.item.title, href: result.item.uri }).markRanges(result.positions.title),
-                    $('<p>', { text: result.item.subtitle }),
-                    snippets
-                        ? $('<p>', {
-                              html: snippets.map((s) => {
-                                  return $('<span>', {
-                                      class: [s.isStart ? 'start' : '', s.isEnd ? 'end' : ''].join(' '),
-                                      text: s.content,
-                                  }).markRanges(s.keywords)
-                              }),
-                          })
-                        : null,
+                    $('<a>', { html: result._highlightResult.title.value, href: result.uri }),
+                    $('<p>', { html: result._highlightResult.subtitle.value }),
+                    $('<p>', { html: result._snippetResult.content.value}),
                 ],
             })
         }),
@@ -226,27 +113,13 @@ const getResultHtml = (resultList, query) => {
 
 const getResults = (query) =>
     query
-        ? fuse
-              // ' is a token for extended search needed to find items that include the value
-              // it prevents fuzzy search
-              .search(`'${query}`, {
-                  limit: 16,
-              })
-              .map((result) => {
-                  let positions = { title: [], subtitle: [], content: [] }
-                  result.matches.map((match) => {
-                      match.indices.map((index) => {
-                          positions[match.key].push({
-                              length: index[1] - index[0] + 1,
-                              start: index[0],
-                          })
-                      })
-                  })
-                  return {
-                      ...result,
-                      positions,
-                  }
-              })
+        ? algolia
+            .search(`'${query}`, {
+                highlightPreTag: '<mark data-markjs="true">',
+                highlightPostTag: '</mark>',
+            }).then((result) => {
+                return result.hits;
+            })
         : null
 
 const debounce = (func, wait, immediate) => {
diff --git a/layouts/partials/search.html b/layouts/partials/search.html
index ef6593a..2a8388f 100644
--- a/layouts/partials/search.html
+++ b/layouts/partials/search.html
@@ -1,9 +1,9 @@
-<script defer src="https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.min.js"></script>
 <script
     src="https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.min.js"
     integrity="sha384-iqnguDoMujGknA4B5Jk7pbSn7sb7M8Tc0zVsTNQXm629Xx00jGEpD9TsZXbfNjKO"
     crossorigin="anonymous"
 ></script>
+<script defer src="https://cdn.jsdelivr.net/npm/algoliasearch@4.5.1/dist/algoliasearch-lite.umd.js"></script>
 
 {{ $searchScript := resources.Get "js/search.js" | minify | fingerprint }}
 <script defer src="{{ $searchScript.RelPermalink }}" integrity="{{ $searchScript.Data.Integrity }}"></script>

commit d56a83a29c4ed79c022e62817ca4c861133bc58a
Author: Chris Raastad <craastad@gmail.com>
Date:   Thu May 20 14:38:46 2021 +0300

    Clear up ambiguity with fetching build number and version from pubspec (#360)
    
    Remove yq and pubspec section because it's misleading and doesn't help people solve their build versioning issues.

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 06c19ee..64e0e29 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -20,17 +20,6 @@ Here are some examples how you can increment the app version using Codemagic's r
 --build-name=1.0.0 --build-number=$BUILD_NUMBER
 ```
 
-## Fetching build number from pubsec.yaml
-
-Add the following build argument:
-
-```bash
---build-number=$(yq e .version pubspec.yaml)
-```
-
-It uses [yq](https://github.com/mikefarah/yq), a lightweight and portable command-line YAML processor.
-
-
 ## Set Xcode project build number via command line
 
 Calling agvtool is another way of forcing Xcode to set the build version for your next build.

commit f2f5239c36d9c3a09b492efe7c6777394223728f
Author: Priit Lätt <priit@nevercode.io>
Date:   Thu May 20 14:30:11 2021 +0300

    Base image update @ 20-05-2021 (#361)
    
    Co-authored-by: Vladimir Markov <remarkov@gmail.com>

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index 9adf0fc..92c237f 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -25,7 +25,7 @@ weight: 5
 - curl `7.68.0`
 - docker `20.10.2`
 - firebase `9.1.0`
-- flutter `2.0.6 ($HOME/programs/flutter)`
+- flutter `2.2.0 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.25.1`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index 2fa6140..e719dc2 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -28,7 +28,7 @@ weight: 4
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `2.0.6 ($HOME/programs/flutter)`
+- flutter `2.2.0 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - gh `1.8.1`
 - git `2.28.0`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index b77a877..64439c6 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -28,7 +28,7 @@ weight: 3
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `2.0.6 ($HOME/programs/flutter)`
+- flutter `2.2.0 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.30.0`
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 7cb6854..a087a3b 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -28,7 +28,7 @@ weight: 2
 - docker `20.10.2`
 - fastlane `2.181.0`
 - firebase `9.3.0`
-- flutter `2.0.6 ($HOME/programs/flutter)`
+- flutter `2.2.0 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.9.2`
 - git `2.31.1`

commit 10c6f70cab882f933d712e34a13da9f236bd4558
Author: Chris Raastad <craastad@gmail.com>
Date:   Wed May 19 16:29:51 2021 +0300

    Fixed workflow name (#357)

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index a374323..d5b3881 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -420,7 +420,7 @@ You may select a working directory globally for the entire workflow or for indiv
 
 ```yaml
 workflows:
-  build-ios:
+  build-apps:
     name: Build iOS and Android
     working_directory: mobile
     scripts:

commit 9ba7fa43fe9ecefdd58f5f02abbe3d5483ffcc38
Author: Chris Raastad <craastad@gmail.com>
Date:   Wed May 19 12:59:00 2021 +0300

    Update codemagic.yaml working directory example

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index c0cf9c4..a374323 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -425,16 +425,16 @@ workflows:
     working_directory: mobile
     scripts:
       - name: Prepare
-        script: # current working directory is /Users/builder/clone/mobile
+        script: pwd # current working directory is /Users/builder/clone/mobile
       - name: Build iOS
-        script: # iOS build command
         working_directory: mobile/ios
+        script: pwd # current working directory is /Users/builder/clone/mobile/ios
       - name: Build Android
-        script: # Android build command
         working_directory: mobile/android
-      - name: Logs
-        script: # Process logs in /Users/builder/Library/Logs folder
+        script: pwd # current working directory is /Users/builder/clone/mobile/android
+      - name: Process Logs
         working_directory: /Users/builder/Library/Logs
+        script: pwd # current working directory is /Users/builder/Library/Logs
 ```
 
 Working directory paths are relative to the repository clone directory, e.g. if `mobile` is the working directory, then the script will be executed in `/Users/builder/clone/mobile`.

commit cc60d4738d0704198363d574827cdbe1e81744ba
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Wed May 19 12:34:09 2021 +0300

    Improvement: add basic codemagic.yaml example (#355)
    
    * Feature: working directory
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Remove slash
    
    * Improvement: add basic codemagic.yaml example
    
    * Move to scripts
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index ed60af7..c0cf9c4 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -19,6 +19,18 @@ Builds can be also started manually by clicking **Start new build** in Codemagic
 
 ## Syntax
 
+You can readily commit `codemagic.yaml` with the following content to test it out:
+
+```yaml
+workflows:
+  hello-world:
+    name: Hello world worklfow
+    scripts:
+        - echo "Hello world!"
+```
+
+The scripts in the `scripts` section will be run right after the repository is cloned.
+
 `codemagic.yaml` follows the traditional [YAML syntax](https://yaml.org/). Here are a few tips and tricks on how to better structure the file.
 
 {{<notebox>}}

commit 80a2f222bf055e925c2ec9e502df4846a4ef0c46
Author: nevercode-kevin <68225534+nevercode-kevin@users.noreply.github.com>
Date:   Wed May 19 11:22:32 2021 +0200

    Sample projects (#352)
    
    * add --warn-only flag
    
    * update link to jira starter project
    
    * add information about  Codemagic GitHub sample projects
    
    * add full stop

diff --git a/config.yml b/config.yml
index 977e8fb..7ebba6f 100644
--- a/config.yml
+++ b/config.yml
@@ -38,24 +38,27 @@ menu:
     - identifier: getting-started
       name: Getting started
       weight: 1
+    - identifier: sample-projects
+      name: Sample Projects
+      weight: 2
     - identifier: building
       name: Configuration
-      weight: 2
+      weight: 3
     - identifier: testing-yaml
       name: Testing
-      weight: 3
+      weight: 4
     - identifier: code-signing-yaml
       name: Code signing
-      weight: 4
+      weight: 5
     - identifier: publishing-yaml
       name: Publishing
-      weight: 5
+      weight: 6
     - identifier: integrations
       name: Integrations
-      weight: 6
+      weight: 7
     - identifier: setup-flutter
       name: Flutter workflow editor
-      weight: 7
+      weight: 8
     - identifier: flutter
       name: Build configuration
       weight: 1
diff --git a/content/sample-projects/codemagic-sample-projects.md b/content/sample-projects/codemagic-sample-projects.md
new file mode 100644
index 0000000..34e6025
--- /dev/null
+++ b/content/sample-projects/codemagic-sample-projects.md
@@ -0,0 +1,41 @@
+---
+title: Codemagic sample projects
+description: Sample projects using codemagic.yaml
+weight: 1
+---
+
+The [codemagic-sample-projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects) repository on the Codemagic GitHub page contains a collection of sample projects which show how to configure your workflows using the **codemagic.yaml** configuration file. 
+
+You can use the **codemagic.yaml** from these projects as a template for your own workflow configuration. 
+
+For further information on how configure the **codemagic.yaml** for your projects, please refer to our [getting started guide](https://docs.codemagic.io/getting-started/yaml/). 
+
+### Flutter Samples
+* [Flutter YAML workflow sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/flutter/flutter-yaml-demo-project)
+* [Flutter integration tests](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/flutter/flutter-integration-tests-demo-project)
+* [Flutter flavors sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/flutter/flutter-flavors-demo-project)
+* [Flutter macOS sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/flutter/flutter-macos-demo-project)
+
+### iOS (Native) Samples
+* [Automatic code signing sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/ios/ios-automatic-code-signing-demo-project)
+* [Manual code signing sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/ios/ios-manual-code-signing-demo-project)
+* [White label single scheme sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/ios/ios-white-label-single-scheme-demo-project)
+
+### Android (Native) Samples
+* [Android with espresso testing sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/android/android-espresso-demo-project)
+
+### React Native Samples
+* [React Native sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/react-native/react-native-demo-project)
+* [React Native detox sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/react-native/react-native-detox-demo-project)
+
+### Ionic Samples
+* [Ionic capacitor sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/ionic/ionic-capacitor-demo-project)
+
+### Integrations 
+* [Jira integation sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/integrations/jira_integration_demo_project)
+
+### YAML Samples
+* [YAML anchors and aliases sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/yaml/yaml_anchors_aliases_sample)
+
+### Cordova Samples
+* [Cordova sample](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/cordova/cordova-demo-project)
\ No newline at end of file

commit afac9d1f68715696a88373a618debc7920bfe053
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Wed May 19 11:49:23 2021 +0300

    Feature: working directory (#348)
    
    * Feature: working directory
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Remove slash
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 5f257c6..ed60af7 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -401,3 +401,30 @@ workflows:
             excludes:
               - '**/*.md'
 ```
+
+## Working directory
+
+You may select a working directory globally for the entire workflow or for individual scripts only. If not specified, the global working directory defaults to the directory where the repository is cloned (`/Users/builder/clone`). You can override the global working directory by specifying the working directory in the individual steps. Consider the example below:
+
+```yaml
+workflows:
+  build-ios:
+    name: Build iOS and Android
+    working_directory: mobile
+    scripts:
+      - name: Prepare
+        script: # current working directory is /Users/builder/clone/mobile
+      - name: Build iOS
+        script: # iOS build command
+        working_directory: mobile/ios
+      - name: Build Android
+        script: # Android build command
+        working_directory: mobile/android
+      - name: Logs
+        script: # Process logs in /Users/builder/Library/Logs folder
+        working_directory: /Users/builder/Library/Logs
+```
+
+Working directory paths are relative to the repository clone directory, e.g. if `mobile` is the working directory, then the script will be executed in `/Users/builder/clone/mobile`.
+
+Note that you can specify an absolute path as a working directory as well.

commit bf2b4665601088dfbcecb720bfce0ffd5872df6d
Author: nevercode-kevin <68225534+nevercode-kevin@users.noreply.github.com>
Date:   Wed May 19 09:28:42 2021 +0200

    Jira integration updates (#351)
    
    * add --warn-only flag
    
    * update link to jira starter project

diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index 61c5a31..c4eb42f 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -196,7 +196,7 @@ workflows:
           agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
       - name: Set up code signing settings on Xcode project
         script: |
-          xcode-project use-profiles
+          xcode-project use-profiles --warn-only
       - name: Build ipa for distribution
         script: |
           xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" 
diff --git a/content/integrations/jira-integration.md b/content/integrations/jira-integration.md
index 5e4e018..409c7b4 100644
--- a/content/integrations/jira-integration.md
+++ b/content/integrations/jira-integration.md
@@ -12,7 +12,7 @@ The following example shows how to set up integration with Jira using the **code
 
 ## Getting started
 
-1. Clone the [Jira integratrion starter project](https://github.com/codemagic-ci-cd/jira_integration_demo_project) from the Codemagic GitHub page.
+1. Clone the [Jira integratrion starter project](https://github.com/codemagic-ci-cd/codemagic-sample-projects/tree/main/integrations/jira_integration_demo_project) from the Codemagic GitHub page.
 
 2. You will need access to a Jira account and can [sign up](https://www.atlassian.com/software/jira) for free.
 

commit ad70cbcffe5855d028865d922d8d22f3c2d15cf1
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Tue May 18 12:08:01 2021 +0300

    Improvement: publishing scripts (#347)
    
    * Improvement: prohibit disabling billing if there are unpaid invoices in subscription
    
    * Details
    
    * Retry payment
    
    * Grammar
    
    * Overdue invoices note
    
    * Add failed
    
    * Subscription could not be disabeld
    
    * Improvements
    
    * Indent
    
    * Sample YAML
    
    * Use articles
    
    * Update docs
    
    * Run only if artifacts are present
    
    * Copy
    
    * Restructure
    
    * Copy
    
    * Update content/getting-started/yaml.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>
    
    * Add comment
    
    * Sample with .apk
    
    * No post-publishing"
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index dc98ad1..5f257c6 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -290,17 +290,46 @@ There are several things to keep in mind about patterns:
 
 ### Publishing
 
-This is the section where you can set up publishing to external services. Codemagic has a number of integrations (e.g. email, Slack, Google Play, App Store Connect) for publishing but you can also use custom scripts to publish elsewhere (e.g. Firebase App Distribution). See the examples [here](../publishing-yaml/distribution).
+Codemagic has a number of integrations (e.g. email, Slack, Google Play, App Store Connect) for publishing but you can also publish elsewhere with custom scripts (e.g. Firebase App Distribution). See the examples [here](../publishing-yaml/distribution).
+
+Note that by default the publishing scripts are run regardless of the build status. You can specify additional conditions with if statements.
 
 ```yaml
 publishing:
   email:
     recipients:
       - name@example.com
+  scripts:
+    script: |
+      apkPath=$(find build -name "*.apk" | head -1)
+      if [[ -z ${apkPath} ]]
+      then
+        echo "No .apk were found"
+      else
+        echo "Publishing .apk artifacts"
+      fi
+```
+
+You can also use the publishing scripts to report build status.
+
+```yaml
 scripts:
-  - |
-    echo 'This is a Post-publish script'
-    echo 'This script is multiline'
+  - name: Report build start
+    script: # build started
+
+    . . .
+
+  - name: Build finished successfully
+    script: touch ~/SUCCESS
+publishing:
+  scripts:
+    - name: Report build status
+      script: |
+        if [ -a "~/SUCCESS" ] ; then
+           # build successful
+        else
+           # build failed
+        fi
 ```
 
 ## Conditional build triggers

commit 4813af09bc021560c1c29739b8f5cb0fe04dcb57
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon May 17 14:37:42 2021 +0300

    fix/stop_build_if_tests_fail (#346)

diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index 5a41619..f35f65e 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -59,4 +59,4 @@ flutter emulators --launch emulator
 
 ### Stop build if tests fail
 
-Selecting the **Stop build if tests fail** option will stop the build immediately when any of the tests fail. Such builds will have the status "failed".
+Selecting the **Stop build if tests fail** option will stop the build after finishing all the enabled tests when any of the tests fail. Such builds will have the status "failed".
diff --git a/content/testing/static-code-analysis.md b/content/testing/static-code-analysis.md
index 5f8fe65..5647c8a 100644
--- a/content/testing/static-code-analysis.md
+++ b/content/testing/static-code-analysis.md
@@ -6,8 +6,8 @@ weight: 2
 
 Test your code with `flutter analyze` to find possible mistakes. You can read more about this feature in [Dart documentation](https://dart.dev/guides/language/analysis-options). By default, static code analysis is disabled and has to be enabled in **App settings > Test** by checking the **Enable Flutter analyzer** option.
 
-To run `flutter analyze`, Codemagic specifies the `analyze` command in the **Flutter analyze arguments** field. You can pass additional arguments to customize static code analysis. For example, adding `--write=analyzer-output.txt` prints the results of static code analysis into a text file. 
+To run `flutter analyze`, Codemagic specifies the `analyze` command in the **Flutter analyze arguments** field. You can pass additional arguments to customize static code analysis. For example, adding `--write=analyzer-output.txt` prints the results of static code analysis into a text file.
 
-If you check **Stop build if tests fail**, the build will fail if any issues are detected during static code analysis.
+If you check **Stop build if tests fail**, the build will stop after finishing all the enabled tests when any of the tests fail. Such builds will have the status "failed".
 
 When enabled, `flutter analyze` will be run with each build. You can see the results and the logs of the analysis under the **Running tests** step in build overview.

commit 1cf509dc8cb98265cc27289cdd78eb2a381f248c
Author: Chris Raastad <craastad@gmail.com>
Date:   Fri May 14 16:01:25 2021 +0300

    Add full React Native and Flutter codemagic.yaml example workflows (#344)
    
    * Add sample React Native codemagic.yaml example.
    * Add sample Flutter codemagic.yaml examples.

diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index dd5131d..67a6109 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -83,6 +83,82 @@ More information about Android code signing can be found [here](../code-signing-
 Codemagic uses the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) utility to build universal .apk files from Android App Bundles.
 {{</notebox>}}
 
+### Example codemagic.yaml Flutter Android workflow
+
+```yaml
+workflows:
+  android-workflow:
+    name: Android Workflow
+    max_build_duration: 120
+    environment:
+      vars:
+        GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...) # <-- Put your encrypted Google Play service account credentials here.
+        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
+        FCI_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore here
+        FCI_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
+        FCI_KEY_PASSWORD: Encrypted(...) # <-- Put your encrypted key alias password here
+        FCI_KEY_ALIAS: Encrypted(...) # <-- Put your encrypted key alias here
+        PACKAGE_NAME: "io.codemagic.flutteryaml" # <-- Put your package name here
+        GOOGLE_PLAY_TRACK: "alpha" # <-- This must be "alpha" or above.  
+      flutter: stable
+      xcode: latest
+      cocoapods: default
+    scripts:
+      - name: Set up key properties
+        script: |
+          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
+          storePassword=$FCI_KEYSTORE_PASSWORD
+          keyPassword=$FCI_KEY_PASSWORD
+          keyAlias=$FCI_KEY_ALIAS
+          storeFile=/tmp/keystore.keystore
+          EOF
+      - name: Set up local.properties
+        script: |
+          echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
+      - name: Get Flutter packages
+        script: |
+          cd . && flutter packages pub get
+      - name: Flutter analyze
+        script: |
+          cd . && flutter analyze
+      - name: Flutter unit tests
+        script: |
+          cd . && flutter test
+        ignore_failure: true          
+      - name: Install pods
+        script: |
+          find . -name "Podfile" -execdir pod install \;
+      - name: Build APK with Flutter  
+        script: |
+          cd . && flutter build apk --release --build-name=1.0.0 --build-number=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))
+    artifacts:
+      - build/**/outputs/**/*.apk
+      - build/**/outputs/**/*.aab
+      - build/**/outputs/**/mapping.txt
+      - flutter_drive.log
+    publishing:
+      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
+      email:
+        recipients:
+          - user_1@example.com
+          - user_2@example.com
+        notify:
+          success: true     # To receive a notification when a build succeeds
+          failure: false    # To not receive a notification when a build fails
+      slack: 
+        # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
+        channel: '#builds'
+        notify_on_build_start: true   # To receive a notification when a build starts
+        notify:
+          success: true               # To receive a notification when a build succeeds
+          failure: false              # To not receive a notification when a build fails
+      google_play:
+        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
+        track: $GOOGLE_PLAY_TRACK
+        in_app_update_priority: 0
+```
+
 ## iOS builds
 
 {{<notebox>}}
@@ -115,6 +191,87 @@ Read more about the different schemes in [Apple's documentation](https://help.ap
 - flutter build ipa --export-options-plist=/Users/builder/export_options.plist
 ```
 
+### Example codemagic.yaml Flutter iOS workflow
+
+```yaml
+workflows:
+  ios-workflow:
+    name: iOS Workflow
+    # instance_type: mac_mini
+    max_build_duration: 120
+    environment:
+      vars:
+        XCODE_WORKSPACE: "Runner.xcworkspace"
+        XCODE_SCHEME: "Runner"                
+        # https://docs.codemagic.io/code-signing-yaml/signing-ios/
+        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...) # <-- Put your encrypted App Store Connect Issuer Id here 
+        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...) # <-- Put your encrypted App Store Connect Key Identifier here 
+        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your encrypted App Store Connect Private Key here 
+        CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your encrypted Certificate Private Key here 
+        APPLE_ID: Encrypted(...) # <-- Put your encrypted Apple Id email address here
+        APPLE_APP_SPECIFIC_PASSWORD: Encrypted(...) # <-- Put your encrypted App Specific password here
+        BUNDLE_ID: "io.codemagic.flutteryaml" # <-- Put your bundle id here
+        APP_STORE_ID: 1111111111 # <-- Use the TestFlight Apple id number (An automatically generated ID assigned to your app) found under General > App Information > Apple ID. 
+      flutter: stable
+      xcode: latest
+      cocoapods: default
+    scripts:
+      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+        script: |
+          keychain initialize
+      - name: Fetch signing files
+        script: |
+          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
+      - name: Use system default keychain
+        script: |
+          keychain add-certificates
+      - name: Set up code signing settings on Xcode project
+        script: |
+          xcode-project use-profiles
+      - name: Get Flutter packages
+        script: |
+          cd . && flutter packages pub get
+      - name: Flutter analyze
+        script: |
+          cd . && flutter analyze
+      - name: Flutter unit tests
+        script: |
+          cd . && flutter test
+        ignore_failure: true          
+      - name: Install pods
+        script: |
+          find . -name "Podfile" -execdir pod install \;
+      - name: Flutter build ipa and automatic versioning
+        script: |
+          flutter build ipa --release \
+          --build-name=1.0.0 \
+          --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1)) \
+          --export-options-plist=/Users/builder/export_options.plist
+    artifacts:
+      - build/ios/ipa/*.ipa
+      - /tmp/xcodebuild_logs/*.log
+      - flutter_drive.log
+    publishing:
+      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
+      email:
+        recipients:
+          - user_1@example.com
+          - user_2@example.com
+        notify:
+          success: true     # To receive a notification when a build succeeds
+          failure: false    # To not receive a notification when a build fails
+      slack: 
+        # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
+        channel: "#builds"
+        notify_on_build_start: true   # To receive a notification when a build starts
+        notify:
+          success: true               # To receive a notification when a build succeeds
+          failure: false              # To not receive a notification when a build fails
+      app_store_connect:   # https://docs.codemagic.io/publishing-yaml/distribution              
+        apple_id: $APPLE_ID    
+        password: $APPLE_APP_SPECIFIC_PASSWORD
+```
+
 ## Web builds
 
 ```yaml
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index c601514..61c5a31 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -44,6 +44,79 @@ Building an Android application:
 - cd android && ./gradlew build
 ```
 
+Here is a sample codemagic.yaml workflow for building Android and publishing to the Google Play alpha track:
+
+```yaml
+workflows:
+    react-native-android:
+        name: React Native Android
+        max_build_duration: 120
+        instance_type: mac_mini
+        environment:
+            vars:
+                GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...) # <-- Put encrypted CONTENTS of your Gloud crendentials file here
+                PACKAGE_NAME: "YOUR_PACKAGE_NAME" # <-- Put your package name here e.g. com.domain.myapp
+                CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
+                CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
+                CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
+                CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here 
+            node: latest
+        triggering:
+            events:
+                - push
+                - tag
+                - pull_request
+            branch_patterns:
+                - pattern: develop
+                  include: true
+                  source: true
+        scripts:
+            - name: Install npm dependencies
+              script: |
+                npm install
+            - name: Set Android SDK location
+              script: |
+                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
+            - name: Set up keystore
+              script: |
+                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
+                    storePassword=$CM_KEYSTORE_PASSWORD
+                    keyPassword=$CM_KEY_ALIAS_PASSWORD
+                    keyAlias=$CM_KEY_ALIAS_USERNAME
+                    storeFile=/tmp/keystore.keystore
+                    EOF               
+            - name: Build Android release
+              script: |
+                # Set environment variable so it can be used to increment build number in android/app/build.gradle
+                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
+                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
+                export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
+                cd android && ./gradlew assembleRelease
+        artifacts:
+            - android/app/build/outputs/**/*.apk
+        publishing:
+            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
+            email:
+                recipients:
+                    - user_1@example.com
+                    - user_2@example.com
+                notify:
+                  success: true     # To not receive a notification when a build succeeds
+                  failure: false    # To not receive a notification when a build fails
+            slack: 
+              # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
+              channel: '#channel-name'
+              notify_on_build_start: true   # To receive a notification when a build starts
+              notify:
+                success: true               # To receive a notification when a build succeeds
+                failure: false              # To not receive a notification when a build fails
+            google_play:
+              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
+              credentials: Encrypted(...) # <-- Put your encrypted google-services.json here
+              track: alpha
+```
+
 ## iOS
 
 {{<notebox>}}
@@ -60,6 +133,99 @@ Script for building an iOS application:
 
 Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46). 
 
+Here is a sample codemagic.yaml workflow for building iOS and publishing to App Store Connect:
+
+```yaml
+workflows:
+  react-native-ios:
+    name: React Native iOS
+    max_build_duration: 120
+    instance_type: mac_mini
+    environment:
+      vars:
+        # Env vars for automatic iOS code signing
+        # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
+        XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace" # <-- Put the name of your Xcode workspace here
+        XCODE_SCHEME: "YOUR_SCHEME_NAME" # <-- Put the name of your Xcode scheme here
+        APPLE_ID: Encrypted(...) # <-- Put you encrypted Apple ID here
+        APP_SPECIFIC_PASSWORD: Encrypted(...) # <-- Put your encrypted App Specific Password here. For more information visit: https://support.apple.com/en-us/HT204397
+        # https://appstoreconnect.apple.com/access/api
+        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...) # <-- Put your App Store Connect Issuer Id here
+        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...) # <-- Put your App Store Connect Key Identifier here
+        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
+        CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
+        BUNDLE_ID: "YOUR_BUNDLE_ID_HERE" # <-- Put your Bundle Id here e.g com.domain.myapp
+        APP_STORE_APP_ID: 1555555551 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
+      node: latest
+      xcode: latest
+      cocoapods: default
+    triggering:
+      events:
+        - push
+        - tag
+        - pull_request
+      branch_patterns:
+        - pattern: develop
+          include: true
+          source: true
+    scripts:
+      - name: Install npm dependencies
+        script: |
+          npm install
+      - name: Install CocoaPods dependencies
+        script: |
+          cd ios && pod install
+      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+        script: |
+          keychain initialize
+      - name:
+        script: |
+          # For information about Codemagic CLI commands visit: https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md
+          # For details about the --type paramater below - https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store
+          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
+      - name: Use system default keychain
+        script: |
+          keychain add-certificates
+      - name: Increment build number
+        script: |
+          #!/bin/sh
+          set -e
+          set -x
+          cd $FCI_BUILD_DIR/ios
+          # agvtool new-version -all $(($BUILD_NUMBER + 1))
+          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
+      - name: Set up code signing settings on Xcode project
+        script: |
+          xcode-project use-profiles
+      - name: Build ipa for distribution
+        script: |
+          xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" 
+    artifacts:
+      - build/ios/ipa/*.ipa
+      - /tmp/xcodebuild_logs/*.log
+      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
+      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+    publishing:
+      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
+      email:
+        recipients:
+          - user_1@example.com
+          - user_2@example.com
+        notify:
+          success: true     # To not receive a notification when a build succeeds
+          failure: false    # To not receive a notification when a build fails
+      slack:
+        # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
+        channel: '#channel-name'
+        notify_on_build_start: true   # To receive a notification when a build starts
+        notify:
+          success: true               # To receive a notification when a build succeeds
+          failure: false              # To not receive a notification when a build fails
+      app_store_connect:
+        apple_id: $APPLE_ID
+        password: $APP_SPECIFIC_PASSWORD
+```
+
 ## Testing, code signing and publishing
 
 To test and publish a React Native app:

commit fbc1038259ceab1a838ecdd5adfee5d735887078
Author: Chris Raastad <craastad@gmail.com>
Date:   Thu May 13 17:47:02 2021 +0300

    Update macos signing docs
    
    * Updated encryption steps and info about mac installer distribution certificate
    * Fixed issue with macOS application packaging

diff --git a/content/code-signing-yaml/signing-macos.md b/content/code-signing-yaml/signing-macos.md
index 074b7e6..d30f5b8 100644
--- a/content/code-signing-yaml/signing-macos.md
+++ b/content/code-signing-yaml/signing-macos.md
@@ -69,13 +69,13 @@ environment:
 
 - `APP_STORE_CONNECT_PRIVATE_KEY`
 
-  This is the private API key downloaded from App Store Connect. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build. Alternatively, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
+  This is the private API key downloaded from App Store Connect. You'll need to [encrypt](../building/encrypting/) the **contents** of the file in the codemagic.yaml editor UI (and not the file itself). On macOS you can use `pbcopy < AuthKey_XXXXXX.p8` to copy the contents of the private key and paste this into the UI encryption tool.
 
 - `CERTIFICATE_PRIVATE_KEY`
 
-  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic fetches or creates.
+  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic fetches or creates. You'll need to either create a new certificate and private key or find an existing one. You'll need to [encrypt](../building/encrypting/) the **contents** of the private key in the codemagic.yaml editor UI (and not the file itself). On macOS, you can use `pbcopy < private_key` to copy the contents of the private key and paste this into the UI encryption tool.
 
-  App Developer Portal has a limitation of maximum 2 macOS distribution certificates per team. This means that if you already have 2 `Mac Installer Distribution` or `Developer ID Application` certificates, you won't be able to create new ones. If any of those are not used, you may revoke them, which will make it possible to create new certificates with the specified new certificate private key. You can create a new 2048 bit RSA key by running the following command in your terminal:
+  App Developer Portal has a limitation of maximum 2 macOS distribution certificates per team. This means that if you already have 2 `Mac Installer Distribution` or `Developer ID Application` certificates, you won't be able to create new ones. If any of those are not used, you may revoke them in the [Apple Developer Portal](https://developer.apple.com/account/resources/certificates/list), which will make it possible to create new certificates with the specified new certificate private key. You can create a new 2048 bit RSA key by running the following command in your terminal:
 
   ```bash
   ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
@@ -185,7 +185,7 @@ To package your application into an `.pkg` Installer package and sign it with th
     script: |
       set -x
 
-      APP_NAME=$(find . -name "*.app")                                        # Command to find the path to your generated app, may be different
+      APP_NAME=$(find $(pwd) -name "*.app")                                        # Command to find the path to your generated app, may be different
       cd $(dirname "$APP_NAME")
       PACKAGE_NAME=$(basename "$APP_NAME" .app).pkg
       xcrun productbuild --component "$APP_NAME" /Applications/ unsigned.pkg  # Create and unsigned package

commit 306d7fe353c404af20825ac39b5222b6a540719d
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu May 13 17:34:43 2021 +0300

    update info about private dependencies (#343)
    
    * update info about private dependencies
    
    * fix

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index fb8e935..4ca5570 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -17,25 +17,23 @@ If your project requires accessing any private Git submodules or dependencies, y
 
 All environment variables whose name has the suffix `_SSH_KEY` will be automatically added to the SSH agent and will be ready for use during the whole build process. Check the `Preparing build machine` step in build logs to verify that the key has been successfully added to the SSH agent.
 
-If you wish to use a **custom** environment variable name without the suffix `_SSH_KEY`, add the following **post-clone** script to add the key to the SSH agent.
-
-```bash
-#!/usr/bin/env bash
-echo "${CUSTOM_KEY_NAME}" > /tmp/ssh_key
-chmod 600 /tmp/ssh_key
-eval `ssh-agent -s`
-ssh-add /tmp/ssh_key
-```
+{{<notebox>}}
+Do not add an environment variable with the `_SSH_KEY` suffix if your repository was added using a different SSH key. If you do so, the repository's key will be overwritten and it won't be possible to clone the repository.
+{{</notebox>}}
 
 ### Using multiple SSH keys
 
-When you add multiple SSH keys, git will by default attempt to use the first key available, which may cause problems when installing private dependencies. As a workaround, you can change the order of your environment variables in a way that the required SSH key comes first. A more robust solution would be to explicitly add the key to the SSH agent before invoking a command which requires it, as in the example below.
+When you add multiple SSH keys, or need to use a different key for private dependencies apart of the one used to clone your repository, git will by default attempt to use the first key available. This may cause problems when installing private dependencies.
+
+If you use yaml configuration, explicitly add the key to the SSH agent before invoking a command which requires it, as in the example below.
 
 ```bash
 #!/usr/bin/env bash
-echo "${MY_SSH_KEY}" > /tmp/ssh_key
+echo "${CUSTOM_KEY_NAME}" > /tmp/ssh_key
 chmod 600 /tmp/ssh_key
 eval `ssh-agent -s`
 ssh-add /tmp/ssh_key
 ... # enter the commands that require the key
 ```
+
+But if you added a repository with an SSH key and want to use a different key to fetch dependencies, it's not possible to do in Workflow editor. Scripts are executed in independent shells, so the key explicitly added in a post-clone script will be lost as soon as the script finishes. The best thing to do in such case would be to use the same key for both your repository and your private dependency. You may need to add the key to your account, not to the specific repository.

commit 2e9b58cdda936d010221544be06242159b9a47be
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu May 13 12:22:32 2021 +0300

    fix get installer cert name command
    
    jq does not require backslashes for new lines

diff --git a/content/code-signing-yaml/signing-macos.md b/content/code-signing-yaml/signing-macos.md
index 5dd60d8..074b7e6 100644
--- a/content/code-signing-yaml/signing-macos.md
+++ b/content/code-signing-yaml/signing-macos.md
@@ -192,9 +192,9 @@ To package your application into an `.pkg` Installer package and sign it with th
 
       # Find the installer certificate commmon name in keychain
       INSTALLER_CERT_NAME=$(keychain list-certificates \
-        | jq '.[] \
-          | select(.common_name \
-          | contains("Mac Developer Installer")) \
+        | jq '.[]
+          | select(.common_name
+          | contains("Mac Developer Installer"))
           | .common_name' \
         | xargs)
       xcrun productsign --sign "$INSTALLER_CERT_NAME" unsigned.pkg "$PACKAGE_NAME" # Sign the package

commit 13cdf5657cbeb28696095283102866aebf630527
Author: Priit Lätt <priit@nevercode.io>
Date:   Wed May 12 18:22:12 2021 +0300

    Base image update @ 12-05-2021 (#341)

diff --git a/content/specs/versions.md b/content/specs/versions.md
index bafb84d..2fa6140 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -15,7 +15,7 @@ weight: 4
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 60GB)`
+- Disk `322GB (Free Space: 61GB)`
 
 ## Pre-installed tools
 
@@ -102,59 +102,53 @@ With Xcode `11.7` build version `11E801a` the following runtimes and devices are
 
 ### Devices
 
-- iPhone 4s
-- iPhone 5
+- Apple TV
+- Apple TV 4K
+- Apple TV 4K (at 1080p)
+- Apple Watch Series 2 - 38mm
+- Apple Watch Series 2 - 42mm
+- Apple Watch Series 3 - 38mm
+- Apple Watch Series 3 - 42mm
+- Apple Watch Series 4 - 40mm
+- Apple Watch Series 4 - 44mm
+- Apple Watch Series 5 - 40mm
+- Apple Watch Series 5 - 44mm
+- iPad (5th generation)
+- iPad (6th generation)
+- iPad (7th generation)
+- iPad Air
+- iPad Air (3rd generation)
+- iPad Air 2
+- iPad Pro (10.5-inch)
+- iPad Pro (11-inch) (1st generation)
+- iPad Pro (11-inch) (2nd generation)
+- iPad Pro (12.9-inch)
+- iPad Pro (12.9-inch) (2nd generation)
+- iPad Pro (12.9-inch) (3rd generation)
+- iPad Pro (12.9-inch) (4th generation)
+- iPad Pro (9.7-inch)
+- iPad mini (5th generation)
+- iPad mini 2
+- iPad mini 3
+- iPad mini 4
+- iPhone 11
+- iPhone 11 Pro
+- iPhone 11 Pro Max
 - iPhone 5s
-- iPhone 6 Plus
 - iPhone 6
+- iPhone 6 Plus
 - iPhone 6s
 - iPhone 6s Plus
-- iPhone SE (1st generation)
 - iPhone 7
 - iPhone 7 Plus
 - iPhone 8
 - iPhone 8 Plus
+- iPhone SE (1st generation)
+- iPhone SE (2nd generation)
 - iPhone X
 - iPhone Xs
 - iPhone Xs Max
 - iPhone Xʀ
-- iPhone 11
-- iPhone 11 Pro
-- iPhone 11 Pro Max
-- iPhone SE (2nd generation)
-- iPad 2
-- iPad Retina
-- iPad Air
-- iPad mini 2
-- iPad mini 3
-- iPad mini 4
-- iPad Air 2
-- iPad Pro (9.7-inch)
-- iPad Pro (12.9-inch)
-- iPad (5th generation)
-- iPad Pro (12.9-inch) (2nd generation)
-- iPad Pro (10.5-inch)
-- iPad (6th generation)
-- iPad (7th generation)
-- iPad Pro (11-inch) (1st generation)
-- iPad Pro (12.9-inch) (3rd generation)
-- iPad Pro (11-inch) (2nd generation)
-- iPad Pro (12.9-inch) (4th generation)
-- iPad mini (5th generation)
-- iPad Air (3rd generation)
-- Apple TV
-- Apple TV 4K
-- Apple TV 4K (at 1080p)
-- Apple Watch - 38mm
-- Apple Watch - 42mm
-- Apple Watch Series 2 - 38mm
-- Apple Watch Series 2 - 42mm
-- Apple Watch Series 3 - 38mm
-- Apple Watch Series 3 - 42mm
-- Apple Watch Series 4 - 40mm
-- Apple Watch Series 4 - 44mm
-- Apple Watch Series 5 - 40mm
-- Apple Watch Series 5 - 44mm
 
 ## Other Xcode versions
 
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index ebbe640..b77a877 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -15,7 +15,7 @@ weight: 3
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 28GB)`
+- Disk `322GB (Free Space: 29GB)`
 
 ## Pre-installed tools
 
@@ -106,70 +106,54 @@ With Xcode `12.4` build version `12D4e` the following runtimes and devices are i
 
 ### Devices
 
-- iPhone 4s
-- iPhone 5
+- Apple TV
+- Apple TV 4K
+- Apple TV 4K (at 1080p)
+- Apple Watch Series 4 - 40mm
+- Apple Watch Series 4 - 44mm
+- Apple Watch Series 5 - 40mm
+- Apple Watch Series 5 - 44mm
+- Apple Watch Series 6 - 40mm
+- Apple Watch Series 6 - 44mm
+- iPad (5th generation)
+- iPad (6th generation)
+- iPad (7th generation)
+- iPad (8th generation)
+- iPad Air
+- iPad Air (3rd generation)
+- iPad Air (4th generation)
+- iPad Air 2
+- iPad Pro (10.5-inch)
+- iPad Pro (11-inch) (1st generation)
+- iPad Pro (11-inch) (2nd generation)
+- iPad Pro (12.9-inch) (1st generation)
+- iPad Pro (12.9-inch) (2nd generation)
+- iPad Pro (12.9-inch) (3rd generation)
+- iPad Pro (12.9-inch) (4th generation)
+- iPad Pro (9.7-inch)
+- iPhone 11
+- iPhone 11 Pro
+- iPhone 11 Pro Max
+- iPhone 12
+- iPhone 12 Pro
+- iPhone 12 Pro Max
+- iPhone 12 mini
 - iPhone 5s
-- iPhone 6 Plus
 - iPhone 6
+- iPhone 6 Plus
 - iPhone 6s
 - iPhone 6s Plus
-- iPhone SE (1st generation)
 - iPhone 7
 - iPhone 7 Plus
 - iPhone 8
 - iPhone 8 Plus
+- iPhone SE (1st generation)
+- iPhone SE (2nd generation)
 - iPhone X
 - iPhone Xs
 - iPhone Xs Max
 - iPhone Xʀ
-- iPhone 11
-- iPhone 11 Pro
-- iPhone 11 Pro Max
-- iPhone SE (2nd generation)
-- iPhone 12 mini
-- iPhone 12
-- iPhone 12 Pro
-- iPhone 12 Pro Max
 - iPod touch (7th generation)
-- iPad 2
-- iPad Retina
-- iPad Air
-- iPad mini 2
-- iPad mini 3
-- iPad mini 4
-- iPad Air 2
-- iPad Pro (9.7-inch)
-- iPad Pro (12.9-inch) (1st generation)
-- iPad (5th generation)
-- iPad Pro (12.9-inch) (2nd generation)
-- iPad Pro (10.5-inch)
-- iPad (6th generation)
-- iPad (7th generation)
-- iPad Pro (11-inch) (1st generation)
-- iPad Pro (12.9-inch) (3rd generation)
-- iPad Pro (11-inch) (2nd generation)
-- iPad Pro (12.9-inch) (4th generation)
-- iPad mini (5th generation)
-- iPad Air (3rd generation)
-- iPad (8th generation)
-- iPad Air (4th generation)
-- Apple TV
-- Apple TV 4K
-- Apple TV 4K (at 1080p)
-- Apple Watch - 38mm
-- Apple Watch - 42mm
-- Apple Watch Series 2 - 38mm
-- Apple Watch Series 2 - 42mm
-- Apple Watch Series 3 - 38mm
-- Apple Watch Series 3 - 42mm
-- Apple Watch Series 4 - 40mm
-- Apple Watch Series 4 - 44mm
-- Apple Watch Series 5 - 40mm
-- Apple Watch Series 5 - 44mm
-- Apple Watch SE - 40mm
-- Apple Watch SE - 44mm
-- Apple Watch Series 6 - 40mm
-- Apple Watch Series 6 - 44mm
 
 ## Other Xcode versions
 
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index d9b9bab..7cb6854 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -15,7 +15,7 @@ weight: 2
 
 - System version `macOS 11.2 (20D64)`
 - Kernel version `Darwin 20.3.0`
-- Disk `322GB (Free Space: 90GB)`
+- Disk `322GB (Free Space: 93GB)`
 
 ## Pre-installed tools
 
@@ -98,74 +98,33 @@ With Xcode `12.5` build version `12E262` the following runtimes and devices are
 
 ### Devices
 
-- iPhone 4s
-- iPhone 5
-- iPhone 5s
-- iPhone 6 Plus
-- iPhone 6
-- iPhone 6s
-- iPhone 6s Plus
-- iPhone SE (1st generation)
-- iPhone 7
-- iPhone 7 Plus
-- iPhone 8
-- iPhone 8 Plus
-- iPhone X
-- iPhone Xs
-- iPhone Xs Max
-- iPhone Xʀ
-- iPhone 11
-- iPhone 11 Pro
-- iPhone 11 Pro Max
-- iPhone SE (2nd generation)
-- iPhone 12 mini
-- iPhone 12
-- iPhone 12 Pro
-- iPhone 12 Pro Max
-- iPod touch (7th generation)
-- iPad 2
-- iPad Retina
-- iPad Air
-- iPad mini 2
-- iPad mini 3
-- iPad mini 4
-- iPad Air 2
-- iPad Pro (9.7-inch)
-- iPad Pro (12.9-inch) (1st generation)
-- iPad (5th generation)
-- iPad Pro (12.9-inch) (2nd generation)
-- iPad Pro (10.5-inch)
-- iPad (6th generation)
-- iPad (7th generation)
-- iPad Pro (11-inch) (1st generation)
-- iPad Pro (12.9-inch) (3rd generation)
-- iPad Pro (11-inch) (2nd generation)
-- iPad Pro (12.9-inch) (4th generation)
-- iPad mini (5th generation)
-- iPad Air (3rd generation)
-- iPad (8th generation)
-- iPad Air (4th generation)
-- iPad Pro (11-inch) (3rd generation)
-- iPad Pro (12.9-inch) (5th generation)
 - Apple TV
 - Apple TV 4K
-- Apple TV 4K (at 1080p)
 - Apple TV 4K (2nd generation)
+- Apple TV 4K (at 1080p)
 - Apple TV 4K (at 1080p) (2nd generation)
-- Apple Watch - 38mm
-- Apple Watch - 42mm
-- Apple Watch Series 2 - 38mm
-- Apple Watch Series 2 - 42mm
-- Apple Watch Series 3 - 38mm
-- Apple Watch Series 3 - 42mm
-- Apple Watch Series 4 - 40mm
-- Apple Watch Series 4 - 44mm
 - Apple Watch Series 5 - 40mm
 - Apple Watch Series 5 - 44mm
-- Apple Watch SE - 40mm
-- Apple Watch SE - 44mm
 - Apple Watch Series 6 - 40mm
 - Apple Watch Series 6 - 44mm
+- iPad (8th generation)
+- iPad Air (4th generation)
+- iPad Pro (11-inch) (2nd generation)
+- iPad Pro (11-inch) (3rd generation)
+- iPad Pro (12.9-inch) (4th generation)
+- iPad Pro (12.9-inch) (5th generation)
+- iPad Pro (9.7-inch)
+- iPhone 11
+- iPhone 11 Pro
+- iPhone 11 Pro Max
+- iPhone 12
+- iPhone 12 Pro
+- iPhone 12 Pro Max
+- iPhone 12 mini
+- iPhone 8
+- iPhone 8 Plus
+- iPhone SE (2nd generation)
+- iPod touch (7th generation)
 
 ## Other Xcode versions
 

commit 4859a14fe756d8378a33d997753a0c2c822e88b4
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Wed May 12 16:58:30 2021 +0300

    remove legacy github releases info (#340)
    
    * remove legacy github releases info
    
    * update header

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 2ffd7a0..dc98ad1 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -290,7 +290,7 @@ There are several things to keep in mind about patterns:
 
 ### Publishing
 
-This is the section where you can set up publishing to external services. Codemagic has a number of integrations (e.g. email, Slack, Google Play, App Store Connect, GitHub releases) for publishing but you can also use custom scripts to publish elsewhere (e.g. Firebase App Distribution). See the examples [here](../publishing-yaml/distribution).
+This is the section where you can set up publishing to external services. Codemagic has a number of integrations (e.g. email, Slack, Google Play, App Store Connect) for publishing but you can also use custom scripts to publish elsewhere (e.g. Firebase App Distribution). See the examples [here](../publishing-yaml/distribution).
 
 ```yaml
 publishing:
diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 2819c7a..e5cf6a6 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -115,12 +115,12 @@ publishing:
     password: Encrypted(...)          # App-specific password
 ```
 
-### GitHub releases
+## GitHub releases
 
 Publishing GitHub releases is available for GitHub repositories only.
 
 {{<notebox>}}
-As of deprecating the GitHub OAuth integration, Codemagic no longer has write access to the repositories. Setting up a personal access token is needed to publish releases to GitHub.
+As of deprecating the GitHub OAuth integration, Codemagic no longer has write access to the repositories. Setting up a personal access token is needed to publish releases to GitHub. Please follow the instructions below.
 {{</notebox>}}
 
 Publishing happens only for successful builds triggered on tag creation and is unavailable for manual builds.
@@ -135,16 +135,29 @@ Publishing happens only for successful builds triggered on tag creation and is u
       - tag
   ```
 
-4. Set up publishing to GitHub releases in the `publishing` section and specify the artifacts to publish. If this is a prerelease build, set `prerelease` to true.  Note that using the `*` wildcard in the beginning of the pattern requires quotation marks around the pattern, otherwise it will violate the `yaml` syntax.
+4. Add the following script after the build or to publishing scripts that publishes the artifacts with tag builds. Edit the placeholders like your application name and the path to build artifacts to match your setup.
 
-  ```yaml
-  publishing:
-    github_releases:
-      prerelease: false
-      artifact_patterns:
-        - app-release.apk
-        - '*.aab'
-  ```
+    ```bash
+    #!/usr/bin/env zsh
+
+    # Publish only for tag builds
+    if [ -z ${FCI_TAG} ]; then
+    echo "Not a tag build will not publish GitHub release"
+    exit 0
+    fi
+
+    # See more options about `gh release create` usage from GitHub CLI
+    # official docs at https://cli.github.com/manual/gh_release_create
+
+    gh release create "${FCI_TAG}" \
+        --title "<Your Application Name> ${FCI_TAG}" \
+        --notes-file changelog.md \
+        path/to/build-artifact.ipa \
+        path/to/build-artifact.apk
+
+    # Note that you don't need to include title and changelog if you do not want to.
+    # Any number of artifacts can be included with the release.
+    ```
 
 ## Publishing a Flutter package to pub.dev
 
diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index 18c4f5b..17f90bd 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -10,7 +10,6 @@ Release notes can be published to:
 
 * **email**. The release notes will be included in the publishing email of a successful build if you have the publishing configured in **App settings > Publish > Email**.
 * **Slack**. The release notes will be included in the Slack notification of a successful build if you have the publishing configured in **App settings > Publish > Slack**.
-* **GitHub Releases**. The release notes will be published to a release if you have the publishing configured in **App settings > Publish > GitHub releases**.
 * **Google Play**. The release notes will be published to Google Play Console if you have the publishing configured in **App settings > Publish > Google Play**.
 
 ## Setting up release notes
@@ -18,7 +17,7 @@ Release notes can be published to:
 There are three supported options to set up release notes:
 
 1. Create a `release_notes.txt` file and add it to the root of your project. When it's present, Codemagic will fetch the content of that file and publish it with the build.
-    * For email, Slack and GitHub releases, it will be published as is.
+    * For email and Slack it will be published as is.
     * For Google Play it will be published under `en-US` language localization code.
 
 {{<notebox>}}
@@ -26,7 +25,7 @@ Language localization code is referred to a BCP-47 language tag as used in Googl
 {{</notebox>}}
 
 2. Create a `release_notes_<language_localization_code>.txt` file for every language used, e.g. `release_notes_en-GB.txt`, `release_notes_it.txt`, and add them to the root of your project.
-    * Release notes with `en-US` language code will be published to email, Slack and GitHub releases in case file with `en-US` language code exists. If not, the first found release notes will be published.
+    * Release notes with `en-US` language code will be published to email and Slack in case file with `en-US` language code exists. If not, the first found release notes will be published.
     * For Google Play, all the release notes will be published with corresponding language codes.
 
 3. Create a `release_notes.json` file with the following content:
@@ -43,5 +42,5 @@ Language localization code is referred to a BCP-47 language tag as used in Googl
 
     Add this file to the root of your project. Notes with missing `language` or `text` fields will not be taken into account. Please refer to the [list of supported languages](https://support.google.com/googleplay/android-developer/table/4419860?hl=en).
 
-    * Release notes with `en-US` language code will be published to email, Slack and GitHub releases, given that a file with `en-US` language code exists. If not, the first release notes will be published.
+    * Release notes with `en-US` language code will be published to email and Slack, given that a file with `en-US` language code exists. If not, the first release notes will be published.
     * For Google Play, all the found release notes will be published with corresponding language codes.

commit 7ba9e8465fb1cc1d6879a1ac482018d079811726
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Wed May 12 16:39:08 2021 +0300

    Improvement: prohibit disabling billing if there are unpaid invoices in subscription (#338)
    
    * Improvement: prohibit disabling billing if there are unpaid invoices in subscription
    
    * Details
    
    * Retry payment
    
    * Grammar
    
    * Overdue invoices note
    
    * Add failed
    
    * Subscription could not be disabeld
    
    * Improvements
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>

diff --git a/content/billing/billing.md b/content/billing/billing.md
index e6a01a5..6bd2964 100644
--- a/content/billing/billing.md
+++ b/content/billing/billing.md
@@ -35,6 +35,8 @@ To change the card used for payments, click **Edit** in the credit card section
 
 To disable billing, click **Disable billing** in the Billing details section. On disabling billing, you will be immediately charged for the used paid features.
 
+Note that you may only disable billing if there are no unpaid invoices. In case you have unpaid invoices, please verify or update your card information. Then navigate to Billing history and find any invoice that is not in paid status. Finally, open up each unpaid invoice and click **Pay invoice** to retry the payment.
+
 ## Billing per team user
 
 For pay-as-you-go team plans, each team user is billed at the rate on the [pricing page](https://codemagic.io/pricing/). See the [counting team users](../teams/users) guide for details on how we count team users.
@@ -43,8 +45,12 @@ For pay-as-you-go team plans, each team user is billed at the rate on the [prici
 
 For pay-as-you-go team and user plans, each build minute is billed at the rate on our [pricing page](https://codemagic.io/pricing/) based on the build [machine type](../specs/machine-type) used for the build. Builds that time out or fail because of a Codemagic service error will not count towards billing usage. Builds that fail for any other reason will count towards billing usage.
 
-## Overdue invoices
+## Overdue and failed invoice payments
+
+Invoices that have not been paid on the due date are shown as "Overdue" or "Failed" on the [Billing](https://codemagic.io/billing/) page. This usually happens when there are problems with charging the card, of which team or account owners are notified by email. Codemagic will then attempt to retry the payment in 3, 5 or 7 days.
 
-Invoices that have not been paid on the due date are shown as "Overdue" on the [Billing](https://codemagic.io/billing/) page. This usually happens when there are problems with charging the card, of which team or account owners are notified by email. Codemagic will then attempt to retry the payment in 3, 5 or 7 days. If all retries for a payment fail, the subscription is cancelled.
+As soon as there is a failed invoice payment, your subscription will be put on hold and running builds will be disabled. In order to continue building all invoices should be paid.
 
 Team or account owners can manually retry the payment by clicking on the overdue invoice in **Billing history** and selecting **Pay invoice** on the popup with invoice details.
+
+Note that overdue invoices should be paid before subscription can be disabled. Please refer to the [Disable billing](/billing/billing/#disabling-billing) section for further info.

commit 8c8e2d12c01085d615488698dc9cd6f5b599d4c7
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Wed May 12 12:52:36 2021 +0300

    Update macOS code signing with bundle ID listing (#337)
    
    * Update bundle ID info
    
    * update macos code signing
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/code-signing/macos-code-signing.md b/content/code-signing/macos-code-signing.md
index 5196973..e516b8b 100644
--- a/content/code-signing/macos-code-signing.md
+++ b/content/code-signing/macos-code-signing.md
@@ -86,9 +86,7 @@ Once the Apple Developer Portal has been enabled for the account or team the app
 2. Select **Automatic** as the code signing method. If you haven't enabled the Apple Developer Portal integration yet, you will be asked to enable it before you can continue configuration.
 3. If you have several keys available, select the right key in the **App Store Connect API key** field.
 4. Mark the checkbox **Project type setting > is Mac Catalyst** if you need a Mac Catalyst profile.
-7. Enter your app's **bundle identifier** (optional). By default, Codemagic looks for it from your `project.pbxproj` file.
-
-{{< figure size="medium" src="../uploads/automatic_code_signing_macos.png" caption="Automatic macOS code signing setup" >}}
+7. Select your app's **bundle identifier**. Codemagic lists all the bundle IDs available for the selected App Store Connect API key. If you can't see your app's bundle identifier listed, create one in [Apple Developer Portal](https://developer.apple.com/account/resources/identifiers/add/bundleId).
 
 As the next step, you can [configure publishing to App Store Connect](../publishing/publishing-to-app-store) to submit the app to App Store Connect and distribute it via Mac App Store.
 

commit 0780a5bf6cc8e4b8385a827658d02768c226ca6a
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Wed May 12 11:18:24 2021 +0300

    Update bundle ID info (#334)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index edd1954..508d2d9 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -88,7 +88,7 @@ Once the Apple Developer Portal has been enabled for the account or team the app
 2. Select **Automatic** as the code signing method. If you haven't enabled the Apple Developer Portal integration yet, you will be asked to enable it before you can continue configuration.
 3. If you have several keys available, select the right key in the **App Store Connect API key** field.
 4. Select the **provisioning profile type** used for provisioning the build. Codemagic will automatically select or generate a matching certificate for code signing. The provisioning profiles (except for Distribution) will include all the devices you have registered on your Apple Developer account at the time of creating the profile.
-7. Enter your app's **bundle identifier** (optional). By default, Codemagic looks for it from your `project.pbxproj` file. 
+7. Select your app's **bundle identifier**. Codemagic lists all the bundle IDs available for the selected App Store Connect API key. If you can't see your app's bundle identifier listed, create one in [Apple Developer Portal](https://developer.apple.com/account/resources/identifiers/add/bundleId).
 
     >Note that if your app contains app extensions, an additional provisioning profile is required for each extension. Codemagic will use the bundle identifier to find the relevant provisioning profiles. If your bundle identifier is `com.example.app`, the matching profiles are the ones with `com.example.app` and `com.example.app.*` as bundle identifier.
 

commit 0c281afb6249d66c084aa46d81bc0d5338f5de38
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Tue May 11 17:32:35 2021 +0300

    Remove comments that break command from macOS code signing

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index ec628de..35d2367 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -87,9 +87,10 @@ scripts:
     script: keychain initialize
   - name: Fetch signing files
     script: |
-      app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
-        --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
-        --create  # Allow creating resources if existing are not found.
+      # You can allow creating resources if existing are not found with `--create` flag
+      app-store-connect fetch-signing-files "io.codemagic.app" \
+        --type IOS_APP_DEVELOPMENT \
+        --create
   - name: Set up signing certificate
     script: keychain add-certificates
   - name: Set up code signing settings on Xcode project
@@ -97,6 +98,8 @@ scripts:
   ... your build commands
 ```
 
+Instead of specifying the exact bundle-id, you can use `"$(xcode-project detect-bundle-id)"`.
+
 Based on the specified bundle ID and [provisioning profile type](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store), Codemagic will fetch or create the relevant provisioning profile and certificate to code sign the build.
 
 ## Manual code signing
diff --git a/content/code-signing-yaml/signing-macos.md b/content/code-signing-yaml/signing-macos.md
index 238579b..5dd60d8 100644
--- a/content/code-signing-yaml/signing-macos.md
+++ b/content/code-signing-yaml/signing-macos.md
@@ -102,14 +102,16 @@ scripts:
     script: keychain initialize
   - name: Fetch Mac App Distribution certificate and Mac App Store profile
     script: |
+      # Allow creating resources if existing are not found with `--create` flag. You may omit this flag if you already have the required certificate and profile and provided the corresponding private key
       app-store-connect fetch-signing-files \
-        "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
+        "io.codemagic.app" \
         --platform MAC_OS \
-        --type MAC_APP_STORE \  # Specify provisioning profile type *
-        --create  # Allow creating resources if existing are not found. You may omit this flag if you already have the required certificate and profile and provided the corresponding private key
+        --type MAC_APP_STORE \
+        --create
   - name: Fetch Mac Installer Distribution certificates
     script: |
-      app-store-connect create-certificate --type MAC_INSTALLER_DISTRIBUTION --save || \   # You may omit this command if you already have the installer certificate and provided the corresponding private key
+      # You may omit the first command if you already have the installer certificate and provided the corresponding private key
+      app-store-connect create-certificate --type MAC_INSTALLER_DISTRIBUTION --save || \
         app-store-connect list-certificates --type MAC_INSTALLER_DISTRIBUTION --save
   - name: Set up signing certificate
     script: keychain add-certificates
@@ -118,6 +120,8 @@ scripts:
   ... your build commands
 ```
 
+Instead of specifying the exact bundle-id, you can use `"$(xcode-project detect-bundle-id)"`.
+
 \* Based on the specified bundle ID and [provisioning profile type](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store), Codemagic will fetch or create the relevant provisioning profile and certificate to code sign the build.
 
 ## Provide signing files manually
@@ -185,7 +189,9 @@ To package your application into an `.pkg` Installer package and sign it with th
       cd $(dirname "$APP_NAME")
       PACKAGE_NAME=$(basename "$APP_NAME" .app).pkg
       xcrun productbuild --component "$APP_NAME" /Applications/ unsigned.pkg  # Create and unsigned package
-      INSTALLER_CERT_NAME=$(keychain list-certificates \                      # Find the installer certificate commmon name in keychain
+
+      # Find the installer certificate commmon name in keychain
+      INSTALLER_CERT_NAME=$(keychain list-certificates \
         | jq '.[] \
           | select(.common_name \
           | contains("Mac Developer Installer")) \

commit e5fc1fcd6d47f9e1c2d5fd89d150b42e2b434cd4
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon May 10 17:45:29 2021 +0300

    init (#333)

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 02fab46..2819c7a 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -83,8 +83,19 @@ publishing:
     track: alpha                      # Name of the track: internal, alpha, beta, production, internal app sharing, or your custom track name
     in_app_update_priority: 3         # Priority of the release (only set if in-app updates are supported): integer in range [0, 5]
     rollout_fraction: 0.25            # Rollout fraction (set only if releasing to a fraction of users): value between (0, 1)
+    changes_not_sent_for_review: True # To be used ONLY if your app cannot be sent for review automatically *
 ```
 
+{{<notebox>}}
+\* The field `changes_not_sent_for_review` is required if you are getting the next error:
+
+`Changes cannot be sent for review automatically. Please set the query parameter changesNotSentForReview to true. Once committed, the changes in this edit can be sent for review from the Google Play Console UI.`
+
+If your changes are sent to review automatically, but the field is still set to `True`, you will get the next error:
+
+`Changes are sent for review automatically. The query parameter changesNotSentForReview must not be set.`
+{{</notebox>}}
+
 If you are getting a 400 error related to app being in draft status it means you need to promote your draft build to the next level up of testing tracks. Play Console will show you how to do this. You'll need to go through the steps, fill out questionnaires, upload various screen shots and then after approval you can move to the Alpha testing track and Codemagic will publish (publishing builds on Draft status is not supported).
 
 If you are getting an error related to permissions then it is likely an issue related to the service account that has been created. Go through the steps of creating a service account once more carefully see how to [set up a service account](../knowledge-base/google-play-api/).
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index f68da09..e57bf98 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -38,5 +38,9 @@ The very first version of the app must be added to Google Play manually. You can
 5. If you want to publish to a custom track, enter the custom track name.
 6. If your application supports [in-app updates](https://developer.android.com/guide/playcore/in-app-updates), set the desired priority. If not, select **Default**.
 7. In case you want to release a [staged version](https://support.google.com/googleplay/android-developer/answer/6346149?hl=en) of your application, which reaches only a fraction of users, set **Rollout fraction** to a value between 0 and 1. To release to everyone, leave the value empty.
-8. If you want to publish the .apk even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
-9. Select **Enable Google Play publishing** at the top of the section to enable publishing.
+8. If you are getting the next error `Changes cannot be sent for review automatically. Please set the query parameter changesNotSentForReview to true`, mark the checkbox **Do not send changes for review**.
+
+    But if the checkbox is marked and the app is sent for review automatically, you will get the error `Changes are sent for review automatically. The query parameter changesNotSentForReview must not be set.`
+
+9. If you want to publish the .apk even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
+10. Select **Enable Google Play publishing** at the top of the section to enable publishing.

commit 3869ae7279461f3716babc947f13391e91d2c844
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon May 10 16:03:41 2021 +0300

    Update _index.md
    
    change "Flutter developers" to "mobile app developers"

diff --git a/content/_index.md b/content/_index.md
index 338d2ef..3d64835 100644
--- a/content/_index.md
+++ b/content/_index.md
@@ -19,8 +19,8 @@ To contribute, fork the repository, make your changes and start a pull request.
 
 ## Codemagic Slack workspace
 
-If you have problems with setting up Codemagic CI/CD or want to talk to fellow Flutter developers, you are welcome to join our [Slack workspace](https://slack.codemagic.io 'Slack community for CI/CD and Flutter'). 
+If you have problems with setting up Codemagic CI/CD or want to talk to fellow mobile app developers, you are welcome to join our [Slack workspace](https://slack.codemagic.io 'Slack community for CI/CD and Flutter'). 
 
 ## Codemagic status page
 
-We post information about maintenances and issues with the service on our [status page](https://twitter.com/CodemagicStatus).
\ No newline at end of file
+We post information about maintenances and issues with the service on our [status page](https://twitter.com/CodemagicStatus).

commit d29373ff83d0dc363f0418f926893ed4c2def49d
Author: Chris Raastad <craastad@gmail.com>
Date:   Mon May 10 12:03:40 2021 +0300

    Update release notes (#332)
    
    Update release notes for Mar - May 2021

diff --git a/content/notes/release-notes.md b/content/notes/release-notes.md
index e6bb4fa..ffae0a6 100644
--- a/content/notes/release-notes.md
+++ b/content/notes/release-notes.md
@@ -6,6 +6,24 @@ aliases:
 weight: 1
 ---
 
+## May 2021
+
+### Conditional build triggers and build steps
+
+In codemagic.yaml configured workflows, you can now specify [conditional build triggers](../getting-started/yaml/#conditional-build-triggers) and [conditional build steps](../getting-started/yaml/#conditional-build-step-execution) depending on which files were changed in the last commit. For example, you can skip builds for commits that only have changes in markdown files or only run an Android workflow only when files changed in an android directory. Skipped builds will be marked skipped in the builds list.
+
+### Flutter macOS and Linux desktop publishing
+
+You can now build and publish Flutter apps to the macOS App Store. This can be configured in [codemagic.yaml](../publishing-yaml/distribution/#app-store-connect) or [Flutter workflow editor](../publishing/publishing-to-app-store/). See the step-by-step macOS code signing guide for [codemagic.yaml](../code-signing-yaml/signing-macos/) and [Flutter workflow editor](../code-signing/macos-code-signing/). macOS publishing is limited to [macOS build machines](../specs/machine-type/#mac-mini-and-mac-pro).
+
+You can now build and publish Flutter apps to the Linux [Snapcraft Snap Store](https://snapcraft.io/snap-store). This can be configured in [codemagic.yaml](../getting-started/building-a-snap-package/) or [Flutter workflow editor](../publishing/snap-store/). Linux publishing is limited to [Linux build machines](../specs/machine-type/#linux-standard-and-linux-premium).
+
+## April 2021
+
+### codemagic.yaml inline editing and validation
+
+You can edit your [codemagic.yaml](../getting-started/yaml/) configuration and see validation errors right from the Codemagic UI. Validation is also automatically supported in all IDEs that implement the [JSON Schema Store](https://www.schemastore.org/json/) standard (such as IntelliJ and VS Code).
+
 ## March 2021
 
 ### Auto-increment build numbers

commit bc265166079bfff731233de62d208afe6b076926
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Thu May 6 13:43:09 2021 +0300

    Feature: conditional execution (#328)
    
    Add conditional build triggers and conditional build steps docs
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 1d7a048..2ffd7a0 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -245,11 +245,6 @@ triggering:
 ```
 
 {{<notebox>}}For information about using API calls to trigger builds, look [here](../rest-api/overview/).{{</notebox>}}
-
-#### Skipping builds
-
-If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.
-
 ### Scripts
 
 Scripts specify what kind of application is built. This is where you can specify the commands to [test](../testing-yaml/testing/), build and code sign your project (see our documentation for [iOS code signing](../code-signing-yaml/signing-ios) and [Android code signing](../code-signing-yaml/signing-android)). You can also run shell (`sh`) scripts directly in your `.yaml` file, or run scripts in other languages by defining the language with a shebang line or by launching a script file present in your repository.
@@ -307,3 +302,73 @@ scripts:
     echo 'This is a Post-publish script'
     echo 'This script is multiline'
 ```
+
+## Conditional build triggers
+
+You can skip building particular commits or watch for changes in specific files to trigger builds. It's possible to define build conditions per workflow or specific build steps.
+### Skip building a commit
+
+If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.
+
+### Watch for changes in files
+
+You can avoid unnecessary builds when functional components of your repository were not modified. Use conditional workflow triggering to skip building the workflow if the watched files were not updated since the last successful build.
+
+You should specify the files to watch in `changeset` by using the `includes` and `excludes` keys.
+
+```yaml
+workflows:
+  build-app:
+    name: Build App
+    triggering:
+      events:
+        - push
+    when:
+      changeset:
+        includes:
+          - '.'
+        excludes:
+          - '**/*.md'
+```
+
+In this case, build would be skipped if there were changes only to Markdown files `.md`.
+
+Note that `codemagic.yaml` is always included in the changeset by default.
+
+Both keys `includes` and `excludes` in `changeset` are *optional*. If the `includes` key is not specified, its value would defalut to `'.'`. The `excludes` key defaults to no exlusions.
+
+If you use a monorepo, each workflow could be responsible for building a part of your application. Use conditional workflow triggering and specify the path to the application in the changeset as in the example below.
+
+```yaml
+workflows:
+  build-android:
+    name: Build Android
+    triggering:
+      events:
+        - push
+    when:
+      changeset:
+        includes:
+          - 'android/'
+```
+
+As a result, commits with changes outside of the android folder will not trigger a build.
+
+## Conditional build step execution
+
+You may also want to skip some specific steps when building your application. Use the same approach with scripts
+
+```yaml
+workflows:
+  build-android:
+    name: Build All
+    scripts:
+      - name: Build Android
+        script: ./gradlew assembleDebug
+        when:
+          changeset:
+            includes:
+              - 'android/'
+            excludes:
+              - '**/*.md'
+```

commit eb2e0c0f09f6e50ba63899584cd2eb8f9f4d0604
Author: Chris Raastad <craastad@gmail.com>
Date:   Wed May 5 20:36:21 2021 +0300

    Android sdk path updates (#329)
    
    * Added ANDROID_SDK_ROOT env variable
    * Updated codemagic.yaml references to point to Android SDK root env variable
    * Update machine specs page with links to each mac machine.

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index a94ce5f..c2e5c77 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -4,12 +4,12 @@ title: Environment variables
 weight: 2
 ---
 
-Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds. 
+Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
 
 {{<notebox>}}
-You can add evironment variables in the [environment](../getting-started/yaml/#environment) section of the `codemagic.yaml` confguration file or in the [Environment variables](../flutter/env-variables/) section in the Flutter workflow editor. 
+You can add evironment variables in the [environment](../getting-started/yaml/#environment) section of the `codemagic.yaml` confguration file or in the [Environment variables](../flutter/env-variables/) section in the Flutter workflow editor.
 
-See how to [encrypt sensitive information](./encrypting) in Codemagic. 
+See how to [encrypt sensitive information](./encrypting) in Codemagic.
 {{</notebox>}}
 
 ## Codemagic read-only environment variables
@@ -26,6 +26,7 @@ Here you'll find some of the read-only environment variables explained.
 
 | **Environment variable** | **Value**                                                                                                                                                       |
 | ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |
+| ANDROID_SDK_ROOT         | Absolute path to Android SDK and tools                                                                                                                          |
 | CI                       | true                                                                                                                                                            |
 | CONTINUOUS_INTEGRATION   | true                                                                                                                                                            |
 | BUILD_NUMBER             | Number of the build for this project in Codemagic for the given workflow                                                                                        |
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index 80bf3ab..65389b6 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -74,7 +74,7 @@ workflows:
           source: true
     scripts:
       - name: Set up local properties
-        script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/local.properties"
+        script: echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/local.properties"
       - name: Set up key.properties file for code signing
         script: |
           echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index cb15843..c601514 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -35,7 +35,7 @@ You can find an up-to-date codemagic.yaml React Native Android workflow in [Code
 Set up local properties
 
 ```yaml
-- echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+- echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
 ```
 
 Building an Android application:
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index 1824608..5ba66c1 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -70,7 +70,7 @@ workflows:
           npm install
       - name: Set Android SDK location
         script: |
-          echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
       - name: Set up keystore
         script: |
           echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
diff --git a/content/getting-started/building_a_native_app_with_flutter_module.md b/content/getting-started/building_a_native_app_with_flutter_module.md
index cfe884c..4a931cb 100644
--- a/content/getting-started/building_a_native_app_with_flutter_module.md
+++ b/content/getting-started/building_a_native_app_with_flutter_module.md
@@ -20,7 +20,7 @@ Using a Flutter module as a library means that it will be built from the source
 
 ```yaml
 scripts:
-  - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/my_host_app/local.properties"
+  - echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/my_host_app/local.properties"
   - cd my_flutter_module && flutter pub get
   - cd my_host_app && ./gradlew assembleDebug
 ```
@@ -61,7 +61,7 @@ Using a prebuilt module means that you don't need to build it every time the hos
 ```yaml
 scripts:
   - echo 'previous step'
-  - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/my_host_app/local.properties"
+  - echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/my_host_app/local.properties"
   - name: Precompile the Flutter module
     script: |
       cd my_flutter_module
diff --git a/content/specs/machine-type.md b/content/specs/machine-type.md
index fc2f7bd..f9fcf75 100644
--- a/content/specs/machine-type.md
+++ b/content/specs/machine-type.md
@@ -14,7 +14,7 @@ For Flutter projects configured via the Flutter workflow editor, the build machi
 
 ## Mac Mini and Mac Pro
 
-Codemagic offers two types of macOS machines for running builds: Mac mini (macOS standard VM, default) and Mac Pro (macOS premium VM). Specifications for these machines are available [here](../specs/versions2/#hardware). 
+Codemagic offers two types of macOS machines for running builds: Mac mini (macOS standard VM, default) and Mac Pro (macOS premium VM). Specifications for these machines are available for [Xcode 11.x](../specs/versions/#hardware), [Xcode 12.0 - 12.4](../specs/versions2/#hardware), and [Xcode 12.5](../specs/versions3/#hardware). 
 
 {{<notebox>}}
 Mac Pro machines are only available for teams and users that have [billing enabled](../billing/billing). See the [pricing page](https://codemagic.io/pricing/) for the per minute rate.

commit 41c695f3150cf6b80908fb2327471dafc0c32e36
Author: Felix Gabler <felix.gabler98@gmail.com>
Date:   Wed May 5 00:09:21 2021 -0700

    Add a missing backslash (#327)

diff --git a/content/publishing/github-release.md b/content/publishing/github-release.md
index 5d5ad6e..5c91a01 100644
--- a/content/publishing/github-release.md
+++ b/content/publishing/github-release.md
@@ -33,7 +33,7 @@ The UI section for setting up publishing GitHub releases is deprecated in Flutte
 
     gh release create "${FCI_TAG}" \
         --title "<Your Application Name> ${FCI_TAG}" \
-        --notes-file changelog.md
+        --notes-file changelog.md \
         path/to/build-artifact.ipa \
         path/to/build-artifact.apk
 

commit 52f9896035008ad07e0de8faa0846a54741e5edc
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Tue May 4 16:02:35 2021 +0300

    android ndk versions (#325)

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index ef6f895..9adf0fc 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -20,6 +20,7 @@ weight: 5
 ## Pre-installed tools
 
 - Android tools `/usr/local/share/android-sdk`
+- Android NDK `22.0.7026061`
 - aws `1.18.69`
 - curl `7.68.0`
 - docker `20.10.2`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index c2a3787..bafb84d 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -20,6 +20,7 @@ weight: 4
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
+- Android NDK `21.3.6528147`
 - aws `1.18.105`
 - cocoapods `1.10.1`
 - cordova `8.1.2`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index b119db5..ebbe640 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -20,6 +20,7 @@ weight: 3
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
+- Android NDK `22.0.7026061`
 - aws `2.0.50`
 - cocoapods `1.10.1`
 - cordova `10.0.0`
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 7b388a6..d9b9bab 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -20,6 +20,7 @@ weight: 2
 ## Pre-installed tools
 
 - Android tools `/usr/local/share/android-sdk`
+- Android NDK `22.1.7171670`
 - aws `2.1.39`
 - cocoapods `1.10.1`
 - cordova `10.0.0`

commit fac68eccf694e3d72d584448b8f74403cba8c823
Author: Chris Raastad <craastad@gmail.com>
Date:   Tue May 4 11:54:28 2021 +0300

    Add cordova getting started guide (#318)
    
    * Add a Getting Started Building a Cordova app page.
    * Reorder sections based on customer framework interest.
    * Simplified Ionic app page

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index b1bef37..ec628de 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -83,7 +83,7 @@ To code sign the app, add the following commands in the [`scripts`](../getting-s
 ```yaml
 scripts:
   ... your dependencies installation
-  - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+  - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
     script: keychain initialize
   - name: Fetch signing files
     script: |
@@ -116,7 +116,7 @@ Then add the code signing configuration and the commands to code sign the build
 ```yaml
 scripts:
   ... your dependencies installation
-  - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+  - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
     script: keychain initialize
   - name: Set up Provisioning profiles from environment variables
     script: |
diff --git a/content/getting-started/building-a-cordova-app.md b/content/getting-started/building-a-cordova-app.md
new file mode 100644
index 0000000..54a7db3
--- /dev/null
+++ b/content/getting-started/building-a-cordova-app.md
@@ -0,0 +1,206 @@
+---
+title: Building a Cordova app 
+description: How to build a Cordova app with codemagic.yaml
+weight: 9
+---
+
+## Setting up a Cordova project
+
+The apps you have available on Codemagic are listed on the Applications page. See how to add additional apps [here](./adding-apps-from-custom-sources).
+
+1. On the [Applications page](https://codemagic.io/apps), click **Set up build** next to the app you want to start building. 
+2. On the popup, select **Cordova** as the project type and click **Continue**.
+3. Create a [`codemagic.yaml`](./yaml) file and add in it the commands to build, test and publish your project. See the full workflow examples below.
+4. Commit the configuration file to the root of your repository.
+5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
+6. If a `codemagic.yaml` file is found in that branch, you can click **Start your first build** and select the **branch** and **workflow** to build.
+7. Finally, click **Start new build** to build the app.
+
+{{<notebox>}}
+**Automatic build triggers**
+
+Note that you need to set up a [webhook](../building/webhooks) for automatic build triggers. Click the **Create webhook** button on the right sidebar in app settings to add a webhook (not available for apps added via SSH/HTTP/HTTPS).
+
+{{</notebox>}}
+
+## Code signing and publishing Cordova Android and iOS apps
+
+To build, code sign, and publish Cordova Android and iOS apps:
+
+* All Android apps need to be signed before release. See the [Android code signing docs](../code-signing/android-code-signing/) or the sample workflow below for more details.
+* All iOS apps need to be signed before release. See the [iOS code signing docs](../code-signing/ios-code-signing/) or the sample workflow below for more details.
+* All generated artifacts can be published to external services, such as email, Slack, and Google Play. The list of available integrations and script examples can be found in [publishing and deployment](../publishing-yaml/distribution/).
+
+
+## Cordova iOS workflow example
+
+{{<notebox>}}
+You can find an up-to-date codemagic.yaml Cordova iOS workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/cordova/cordova-demo-project/codemagic.yaml#L2).
+{{</notebox>}}
+
+The following example workflow shows how to build your **Cordova** iOS app and publish to App Store Connect.
+
+```yaml
+workflows:
+  ios-workflow:
+    name: iOS workflow
+    environment:
+      vars:
+        XCODE_WORKSPACE: "platforms/ios/HelloCordova.xcworkspace" # <-- Put the name of your workspace here.
+        XCODE_SCHEME: "HelloCordova" # <-- Put the name of your scheme here.
+        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...) # <-- Put your encrypted App Store Connect Issuer Id here 
+        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...) # <-- Put your encrypted App Store Connect Key Identifier here 
+        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your encrypted App Store Connect Private Key here 
+        CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your encrypted Certificate Private Key here         
+        APPLE_ID: Encrypted(...) # <-- Put your encrypted Apple Id Email here 
+        APPLE_APP_SPECIFIC_PASSWORD: Encrypted(...) # <-- Put your encrypted App Specific Password Key here 
+        BUNDLE_ID: "io.codemagic.cordova" # <-- Put your Bundle Id here.
+      xcode: 12.4
+      node: 12
+      npm: 6
+    cache:
+      cache_paths:
+        - $FCI_BUILD_DIR/node_modules
+    scripts:
+      - name: Install dependencies
+        script: |
+          npm install
+          npm ci
+          cvm install 9.0.0
+          cvm use 9.0.0
+      - name: Setup iOS
+        script: |
+          cordova platform remove ios --nosave
+          cordova platform add ios --confirm --no-interactive --noresources --save  
+      - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
+        script: |
+          keychain initialize
+      - name: Fetch signing files
+        script: |
+          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
+      - name: Add certificates to keychain
+        script: |
+          keychain add-certificates         
+      - name: Set up code signing settings on Xcode project
+        script: |
+          xcode-project use-profiles
+      - name: Build iOS
+        script: |
+          package_type=$(defaults read ~/export_options.plist method)
+          identity=$(defaults read ~/export_options.plist signingCertificate)
+          team=$(defaults read ~/export_options.plist teamID)
+          profile=$(find '/Users/builder/Library/MobileDevice/Provisioning Profiles' -name "*.mobileprovision")
+          profile_uuid=$(grep UUID -A1 -a "$profile" | grep -io "[-A-F0-9]\{36\}")
+
+          cat <<EOF > build.json
+              {
+                "ios": {
+                  "release": {
+                    "codeSignIdentity": "$identity",
+                    "developmentTeam": "$team",
+                    "packageType": "$package_type",
+                    "provisioningProfile": "$profile_uuid"
+                  }
+                }
+              }
+          EOF
+          cordova build ios --release --device --buildConfig='build.json' 
+    artifacts:
+      - /Users/builder/clone/platforms/ios/build/device/*.ipa
+      - /tmp/xcodebuild_logs/*.log
+    publishing:
+      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
+      email:
+        recipients:
+          - user_1@example.com
+          - user_2@example.com
+        notify:
+          success: true     # To receive a notification when a build succeeds
+          failure: false    # To not receive a notification when a build fails
+      slack:
+        # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
+        channel: '#channel-name'
+        notify_on_build_start: true   # To receive a notification when a build starts
+        notify:
+          success: true               # To receive a notification when a build succeeds
+          failure: false              # To not receive a notification when a build fails
+      app_store_connect:
+        apple_id: $APPLE_ID
+        password: $APP_SPECIFIC_PASSWORD     
+```
+
+{{<notebox>}}
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) CLI command to prepare iOS application code signing properties for build.
+{{</notebox>}}
+
+## Android Cordova workflow example
+
+{{<notebox>}}
+You can find an up-to-date codemagic.yaml Cordova Android workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/cordova/cordova-demo-project/codemagic.yaml#L87).
+{{</notebox>}}
+
+The following example workflow shows how to build your **Cordova** Android app and publish to a Google Play alpha track.
+
+```yaml
+workflows:
+  android-workflow:
+    name: Android Cordova workflow
+    environment:
+      vars:
+        KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
+        KEYSTORE_PATH: '/tmp/keystore.keystore'
+        KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
+        KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
+        KEY_ALIAS: Encrypted(...) # <-- Put your encrypted alias password here
+      xcode: 12.4
+      node: 12
+      npm: 6
+    cache:
+      cache_paths:
+        - $FCI_BUILD_DIR/node_modules
+    scripts:
+      - name: Install dependencies
+        script: |
+          npm install
+          npm ci
+          cvm install 9.0.0
+          cvm use 9.0.0        
+      - name: Add Android platform
+        script: |
+          set -x
+          cordova platform remove android --nosave
+          cordova platform add android --confirm --no-interactive --noresources
+      - name: Build Android
+        script: |
+          set -x
+          set -e
+          cordova build android --release --no-interactive --prod --device
+          echo $KEYSTORE | base64 --decode > $KEYSTORE_PATH
+          UNSIGNED_APK_PATH=$(find platforms/android/app/build/outputs -name "*.apk" | head -1)
+          jarsigner -sigalg SHA1withRSA -digestalg SHA1 -keystore "${KEYSTORE_PATH}" -storepass "${KEYSTORE_PASSWORD}" -keypass "${KEY_ALIAS_PASSWORD}" "${UNSIGNED_APK_PATH}" "${KEY_ALIAS}"
+          mv $UNSIGNED_APK_PATH $(echo $UNSIGNED_APK_PATH | sed 's/-unsigned//')
+    artifacts:
+      - platforms/android/app/build/outputs/**/*.apk
+      - platforms/android/app/build/outputs/**/mapping.txt
+    publishing:
+      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
+      email:
+        recipients:
+          - user_1@example.com
+          - user_2@example.com
+        notify:
+          success: true     # To receive a notification when a build succeeds
+          failure: false    # To not receive a notification when a build fails
+      slack:
+        # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
+        channel: '#channel-name'
+        notify_on_build_start: true   # To receive a notification when a build starts
+        notify:
+          success: true               # To receive a notification when a build succeeds
+          failure: false              # To not receive a notification when a build fails
+      google_play:
+        # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
+        credentials: Encrypted(...) # <-- Put your encrypted google-services.json here
+        track: alpha
+```
+
diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index e6c3a86..dd5131d 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -1,7 +1,7 @@
 ---
 title: Building a Flutter app
 description: How to build a Flutter app with codemagic.yaml
-weight: 6
+weight: 4
 aliases:	
   - '../yaml/building-a-flutter-app'
 startLineBreak: true
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index b936ed4..80bf3ab 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -1,7 +1,7 @@
 ---
 title: Building a native Android app
 description: How to build an Android app with codemagic.yaml
-weight: 4
+weight: 7
 aliases:
   - '../yaml/building-a-native-android-app'
 ---
diff --git a/content/getting-started/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
index 924459f..c14360a 100644
--- a/content/getting-started/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -1,7 +1,7 @@
 ---
 title: Building a native iOS app
 description: How to build an iOS app with codemagic.yaml
-weight: 5
+weight: 6
 aliases:
   - '../yaml/building-a-native-ios-app'
 ---
@@ -114,7 +114,7 @@ workflows:
           include: true
           source: true
     scripts:
-      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+      - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
         script: keychain initialize
       - name: Set up Provisioning profiles from environment variables
         script: |
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index c8df94f..cb15843 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -1,7 +1,7 @@
 ---
 title: Building a React Native app
 description: How to build a React Native app with codemagic.yaml
-weight: 8
+weight: 5
 aliases: 
   - '../yaml/building-a-react-native-app'
 ---
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index 3cdb355..1824608 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -1,16 +1,16 @@
 ---
 title: Building an Ionic app 
-description: How to build an Ionic app with codemagic.yaml
-weight: 7
+description: How to build an Ionic Capacitor or Ionic Cordova app with codemagic.yaml
+weight: 8
 aliases:
   - '../yaml/building-an-ionic-app'
 ---
 
-## Setting up an Ionic Capacitor/Cordova project
+## Setting up an Ionic project
 
 The apps you have available on Codemagic are listed on the Applications page. See how to add additional apps [here](./adding-apps-from-custom-sources).
 
-1. On the Applications page, click **Set up build** next to the app you want to start building. 
+1. On the [Applications page](https://codemagic.io/apps), click **Set up build** next to the app you want to start building. 
 2. On the popup, select **Ionic App** as the project type and click **Continue**.
 3. Create a [`codemagic.yaml`](./yaml) file and add in it the commands to build, test and publish your project. See the full workflow examples below.
 4. Commit the configuration file to the root of your repository.
@@ -19,20 +19,19 @@ The apps you have available on Codemagic are listed on the Applications page. Se
 7. Finally, click **Start new build** to build the app.
 
 {{<notebox>}}
-**Tip**
+**Automatic build triggers**
 
 Note that you need to set up a [webhook](../building/webhooks) for automatic build triggering. Click the **Create webhook** button on the right sidebar in app settings to add a webhook (not available for apps added via SSH/HTTP/HTTPS).
-
 {{</notebox>}}
 
-## Testing, code signing and publishing Ionic Android and iOS apps
+## Testing, code signing, and publishing Ionic Android and iOS apps
 
-To test, code sign and publish Ionic Android and iOS apps:
+To test, code sign, and publish Ionic Android and iOS apps:
 
 * The code for testing an Ionic Android app also goes under `scripts`. A few examples of testing can be found [here](../testing-yaml/testing).
-* All Android applications need to be signed before release. For Gradle code signing configuration for **Ionic Capacitor** apps refer to the [documentation](../code-signing/android-code-signing/). More information about code signing with YAML in general is [here](../code-signing-yaml/signing). If you are building **Ionic Cordova** Android apps see the workflow sample below.
-* All iOS applications need to be signed before release. For iOS code signing configuration refer to the iOS code signing documentation [here](../code-signing/ios-code-signing/)
-* All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/).
+* All Android apps need to be signed before release. See the [Android code signing docs](../code-signing/android-code-signing/) or the sample workflow below for more details.
+* All iOS apps need to be signed before release. See the [iOS code signing docs](../code-signing/ios-code-signing/) or the sample workflow below for more details.
+* All generated artifacts can be published to external services, such as email, Slack, and Google Play. The list of available integrations and script examples can be found in [publishing and deployment](../publishing-yaml/distribution/).
 
 ## Android Ionic Capacitor workflow example
 
@@ -238,7 +237,7 @@ workflows:
         script: |
           # npx cap copy # <- use this is you don't need to update native dependencies
           npx cap sync # <- update native dependencies and copy web assets to native project
-      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+      - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
         script: |
           keychain initialize
       # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
@@ -340,7 +339,7 @@ workflows:
       - name: Cocoapods installation
         script: |
           cd platforms/ios && pod install
-      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+      - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
         script: |
           keychain initialize
       # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
diff --git a/content/getting-started/building_a_native_app_with_flutter_module.md b/content/getting-started/building_a_native_app_with_flutter_module.md
index f753c6e..cfe884c 100644
--- a/content/getting-started/building_a_native_app_with_flutter_module.md
+++ b/content/getting-started/building_a_native_app_with_flutter_module.md
@@ -1,7 +1,7 @@
 ---
 title: Building a native app with a Flutter module
 description: How to build a native iOS or Android app with a Flutter module using codemagic.yaml
-weight: 9
+weight: 10
 aliases:
   - '../yaml/building_a_native_app_with_flutter_module'
 ---
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index de4a9e1..5ef05c2 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -78,7 +78,7 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
 == Building for iOS ==
 
 == /usr/local/bin/flutter build ios --release --no-codesign ==
-Warning: Building for device with codesigning disabled. You will have to manually codesign before deploying to device.
+Warning: Building for device with code signing disabled. You will have to manually codesign before deploying to device.
 Building net.butterflyapp.trainer for device (ios-release)...
 Running pod install...                                              3.7s
 Running Xcode build...

commit 7dc2413a6b6ea87129c65f8f02aacf8e48db9fba
Author: Priit Lätt <priit@nevercode.io>
Date:   Tue May 4 11:50:48 2021 +0300

    Base image update @ 04-05-2021 (#324)
    
    * Base image update @ 04-05-2021
    
    * Update content/specs/versions3.md

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index a17973a..ef6f895 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -24,7 +24,7 @@ weight: 5
 - curl `7.68.0`
 - docker `20.10.2`
 - firebase `9.1.0`
-- flutter `2.0.5 ($HOME/programs/flutter)`
+- flutter `2.0.6 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.25.1`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index d12616a..c2a3787 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -27,7 +27,7 @@ weight: 4
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `2.0.5 ($HOME/programs/flutter)`
+- flutter `2.0.6 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - gh `1.8.1`
 - git `2.28.0`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index f3759ef..b119db5 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -27,7 +27,7 @@ weight: 3
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `2.0.5 ($HOME/programs/flutter)`
+- flutter `2.0.6 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.30.0`
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 97df2a7..7b388a6 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -27,7 +27,7 @@ weight: 2
 - docker `20.10.2`
 - fastlane `2.181.0`
 - firebase `9.3.0`
-- flutter `2.0.5 ($HOME/programs/flutter_2_0_5)`
+- flutter `2.0.6 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.9.2`
 - git `2.31.1`
@@ -169,4 +169,3 @@ With Xcode `12.5` build version `12E262` the following runtimes and devices are
 ## Other Xcode versions
 
 - 12.4 (12D4e) `/Applications/Xcode-12.4.app`
-

commit fa395d810b1016818f02d25d70d16c1546cdf158
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon May 3 17:11:05 2021 +0300

    Improvement/macos signing (#320)
    
    * init commit macos yaml app store
    
    * add UI macos signing doc
    
    * refactoring
    
    * fix comments
    
    * editing
    
    * this localhost is unrelated, but needs to be fixed
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/code-signing-yaml/signing-android.md b/content/code-signing-yaml/signing-android.md
index 8d22a86..ee9426e 100644
--- a/content/code-signing-yaml/signing-android.md
+++ b/content/code-signing-yaml/signing-android.md
@@ -1,7 +1,7 @@
 ---
 title: Signing Android apps
 description: How to set up Android code signing in codemagic.yaml
-weight: 2
+weight: 3
 ---
 
 All Android applications have to be digitally signed before they are made available to the public to confirm their author and guarantee that the code has not been altered or corrupted since it was signed. There are several ways to set up code signing for Android apps.
diff --git a/content/code-signing-yaml/signing-macos.md b/content/code-signing-yaml/signing-macos.md
new file mode 100644
index 0000000..238579b
--- /dev/null
+++ b/content/code-signing-yaml/signing-macos.md
@@ -0,0 +1,198 @@
+---
+title: Signing macOS apps
+description: How to set up macOS code signing in codemagic.yaml
+weight: 2
+---
+
+All macOS applications have to be digitally signed before they can be installed on devices or made available to the public via Mac App Store or outside of Mac App Store.
+
+{{<notebox>}}
+This guide only applies to workflows configured with the **codemagic.yaml**. If your workflow is configured with **Flutter workflow editor** please go to [Signing macOS apps using the Flutter workflow editor](../code-signing/macos-code-signing).
+{{</notebox>}}
+
+## Prerequisites
+
+
+Signing macOS applications requires [Apple Developer Program](https://developer.apple.com/programs/enroll/) membership. 
+
+Note that in order to publish to Mac App Store, the application must be signed with a `Mac App Distribution` certificate using a `Mac App Store` provisioning profile. Additionally, the application must be packaged into a `.pkg` Installer package which should be signed with a `Mac Installer Distribution` certificate.
+
+Notarization for distributing the app outside the Mac App Store is not yet available.
+
+You can upload your signing certificate and distribution profile to Codemagic to manage code signing yourself or use the automatic code signing option where Codemagic takes care of code signing and signing files management on your behalf. Read more about the two options below.
+
+
+To set up publishing the code-signed application to App Store Connect, refer [here](../publishing-yaml/distribution/#app-store-connect).
+
+{{<notebox>}}
+Under the hood, we use [Codemagic CLI tools](https://github.com/codemagic-ci-cd/cli-tools) to perform macOS code signing ⏤ these tools are open source and can also be [used locally](../building/running-locally/) or in other environments. More specifically, we use the [xcode-project utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md) for preparing the code signing properties for the build, the [keychain utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md) for managing macOS keychains and certificates, and the [app-store-connect utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md) for creating and downloading code signing certificates and provisioning profiles. The latter makes use of the App Store Connect API for authenticating with Apple Developer Portal.
+{{</notebox>}}
+
+## Automatic code signing
+
+In order to use automatic code signing and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect.
+
+### Creating the App Store Connect API key
+
+It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api). To do so:
+
+1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
+2. Click on the + sign to generate a new API key.
+3. Enter the name for the key and select an access level. We recommend choosing either `Developer` or `App Manager`, read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
+4. Click **Generate**.
+5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+
+{{<notebox >}}
+Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in the Codemagic UI.
+{{</notebox>}}
+
+### Saving the API key to environment variables
+
+Save the API key and the related information as [environment](../getting-started/yaml#environment) variables. Make sure to [encrypt](../building/encrypting/#encrypting-sensitive-data) the values of the variables before adding them to the configuration file.
+
+```yaml
+environment:
+  vars:
+    APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
+    APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
+    APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
+    CERTIFICATE_PRIVATE_KEY: Encrypted(...)
+```
+
+- `APP_STORE_CONNECT_KEY_IDENTIFIER`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Key ID** of the key.
+
+- `APP_STORE_CONNECT_ISSUER_ID`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Issuer ID** displayed above the table of active keys.
+
+- `APP_STORE_CONNECT_PRIVATE_KEY`
+
+  This is the private API key downloaded from App Store Connect. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build. Alternatively, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
+
+- `CERTIFICATE_PRIVATE_KEY`
+
+  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic fetches or creates.
+
+  App Developer Portal has a limitation of maximum 2 macOS distribution certificates per team. This means that if you already have 2 `Mac Installer Distribution` or `Developer ID Application` certificates, you won't be able to create new ones. If any of those are not used, you may revoke them, which will make it possible to create new certificates with the specified new certificate private key. You can create a new 2048 bit RSA key by running the following command in your terminal:
+
+  ```bash
+  ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
+  ```
+
+   If you wish to use existing certificates and don't have the private key used to create them available, or those certificates were created via a Certificate Authority request or via Xcode, you can [export](https://help.apple.com/xcode/mac/current/#/dev154b28f09) the existing certificate(s) into `.p12` container(s) and get the used private key so as to be able to fetch these certificates from another machine. You can export the private key and convert it using the following command:
+
+    ```bash
+    openssl pkcs12 -in <your_certificate_name>.p12 -nodes -nocerts | openssl rsa -out <your_private_key_name>.key
+    ```
+
+{{<notebox>}}
+Alternatively, each property can be specified in the `scripts` section of the YAML file as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
+{{</notebox>}}
+
+### Adding steps to code sign the app
+
+To code sign the app, add the following commands in the [`scripts`](../getting-started/yaml#scripts) section of the configuration file, after all the dependencies are installed, right before the build commands.
+
+```yaml
+scripts:
+  ... your dependencies installation
+  - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+    script: keychain initialize
+  - name: Fetch Mac App Distribution certificate and Mac App Store profile
+    script: |
+      app-store-connect fetch-signing-files \
+        "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
+        --platform MAC_OS \
+        --type MAC_APP_STORE \  # Specify provisioning profile type *
+        --create  # Allow creating resources if existing are not found. You may omit this flag if you already have the required certificate and profile and provided the corresponding private key
+  - name: Fetch Mac Installer Distribution certificates
+    script: |
+      app-store-connect create-certificate --type MAC_INSTALLER_DISTRIBUTION --save || \   # You may omit this command if you already have the installer certificate and provided the corresponding private key
+        app-store-connect list-certificates --type MAC_INSTALLER_DISTRIBUTION --save
+  - name: Set up signing certificate
+    script: keychain add-certificates
+  - name: Set up code signing settings on Xcode project
+    script: xcode-project use-profiles
+  ... your build commands
+```
+
+\* Based on the specified bundle ID and [provisioning profile type](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store), Codemagic will fetch or create the relevant provisioning profile and certificate to code sign the build.
+
+## Provide signing files manually
+
+In order to use manual code signing, [encrypt](../building/encrypting/#encrypting-sensitive-data) your **signing certificate**, the **certificate password** (if the certificate is password-protected) and the **provisioning profile**, and set the encrypted values to the following environment variables. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build.
+
+```yaml
+environment:
+  vars:
+    APP_CERTIFICATE: Encrypted(...)
+    APP_CERTIFICATE_PASSWORD: Encrypted(...)
+    INSTALLER_CERTIFICATE: Encrypted(...)
+    INSTALLER_CERTIFICATE_PASSWORD: Encrypted(...)
+    PROVISIONING_PROFILE: Encrypted(...)
+```
+
+Then add the code signing configuration and the commands to code sign the build in the scripts section, after all the dependencies are installed, right before the build commands.
+
+```yaml
+scripts:
+  ... your dependencies installation
+  - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+    script: keychain initialize
+  - name: Set up Provisioning profiles from environment variables
+    script: |
+      PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+      mkdir -p "$PROFILES_HOME"
+      PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+      echo ${PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
+      echo "Saved provisioning profile $PROFILE_PATH"
+  - name: Set up signing certificates
+    script: |
+      echo $APP_CERTIFICATE | base64 --decode > /tmp/app_certificate.p12
+      if [ -z ${APP_CERTIFICATE_PASSWORD+x} ]; then
+        # when using a certificate that is not password-protected
+        keychain add-certificates --certificate /tmp/app_certificate.p12
+      else
+        # when using a password-protected certificate
+        keychain add-certificates --certificate /tmp/app_certificate.p12 --certificate-password $APP_CERTIFICATE_PASSWORD
+      fi
+
+      echo $INSTALLER_CERTIFICATE | base64 --decode > /tmp/installer_certificate.p12
+      if [ -z ${INSTALLER_CERTIFICATE_PASSWORD+x} ]; then
+        # when using a certificate that is not password-protected
+        keychain add-certificates --certificate /tmp/installer_certificate.p12
+      else
+        # when using a password-protected certificate
+        keychain add-certificates --certificate /tmp/installer_certificate.p12 --certificate-password $INSTALLER_CERTIFICATE_PASSWORD
+      fi
+  - name: Set up code signing settings on Xcode projects
+    script: xcode-project use-profiles
+  ... your build commands
+```
+
+### Packaging the application
+
+To package your application into an `.pkg` Installer package and sign it with the `Mac Installer Distribution` certificate, use the following script:
+
+```yaml
+  - name: Package application
+    script: |
+      set -x
+
+      APP_NAME=$(find . -name "*.app")                                        # Command to find the path to your generated app, may be different
+      cd $(dirname "$APP_NAME")
+      PACKAGE_NAME=$(basename "$APP_NAME" .app).pkg
+      xcrun productbuild --component "$APP_NAME" /Applications/ unsigned.pkg  # Create and unsigned package
+      INSTALLER_CERT_NAME=$(keychain list-certificates \                      # Find the installer certificate commmon name in keychain
+        | jq '.[] \
+          | select(.common_name \
+          | contains("Mac Developer Installer")) \
+          | .common_name' \
+        | xargs)
+      xcrun productsign --sign "$INSTALLER_CERT_NAME" unsigned.pkg "$PACKAGE_NAME" # Sign the package
+      rm -f unsigned.pkg                                                       # Optionally remove the not needed unsigned package
+```
+
+Don't forget to specify the path to your generated package in the [artifacts section](../getting-started/yaml/#artifacts).
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index d90fe6c..a082aec 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -1,7 +1,7 @@
 ---
 description: How to set up Android code signing in the Flutter workflow editor
 title: Android code signing
-weight: 2
+weight: 3
 ---
 
 Code signing is required for distributing your Android app to Google Play store. It enables to identify who developed the app and ensure that all updates to the app come from you.
diff --git a/content/code-signing/macos-code-signing.md b/content/code-signing/macos-code-signing.md
new file mode 100644
index 0000000..5196973
--- /dev/null
+++ b/content/code-signing/macos-code-signing.md
@@ -0,0 +1,130 @@
+---
+description: How to set up macOS code signing in the Flutter workflow editor
+title: macOS code signing
+weight: 2
+---
+
+Code signing is required by Apple for integrating app services, installing your macOS app on another machine or for uploading it to distribute it through the Mac App Store or outside of Mac App Store. It enables to identify who developed the app and ensure that all the changes to the app come from you or your team.
+
+To create an application package which can be published to Mac App Store on Codemagic, you need to set up code signing.
+
+{{<notebox>}}
+This guide only applies to workflows configured with the **Flutter workflow editor**. If your workflow is configured with **codemagic.yaml** please go to [Signing macOS apps using codemagic.yaml](../code-signing-yaml/signing-macos).
+{{</notebox>}}
+
+## Prerequisites
+
+Before you can start signing or distributing your app, there are a few things you need.
+
+* [Apple Developer Program](https://developer.apple.com/programs/enroll/) membership
+* An [app ID](https://developer.apple.com/account/resources/identifiers/bundleId/add/) for your macOS app in Apple Developer portal
+* **signing certificates** (`Personal Information Exchange, .p12`)
+* A **provisioning profile** (`.provisionprofile`)
+
+The signing certificates — development or distribution — help to identify who built the code.
+
+A provisioning profile — development or distribution — contains information about the app ID, the devices on which the app can be installed and the certificates that can be used for signing the app. Note that if your app contains app extensions, you need an additional provisioning profile for each app extension.
+
+{{<notebox >}}
+With **automatic code signing**, Codemagic will create both the certificate and the provisioning profile for you on your behalf without requiring a Mac.
+
+With **manual code signing**, you need to upload the signing files manually.
+{{</notebox>}}
+
+Signing an application with a development certificate and profile requires the UUID of the machine which builds the appliction to be present in the profile. Therefore, using a development certificate is not possible on Codemagic since the build machine won't be listed in the used profile.
+
+Distibution is possible to Mac App Store (using `Mac App Distribution` and `Mac Installer Distribution` certificates and `Mac App Store` profile) and outside of Mac App Store (using `Developer ID Application` certificate and `Developer ID` profile). 
+
+**Note**: Currently, Codemagic only supports code signing the app for publishing to the Mac App Store.
+
+## Automatic code signing
+
+Codemagic makes automatic code signing possible by connecting to [App Store Connect via its API](https://developer.apple.com/app-store-connect/api/) for creating and managing your code signing certificates and provisioning profiles. It is possible to set up several code signing identities and use different code signing settings per workflow.
+
+The following sections describe how to set up automatic code signing for builds configured in the UI. If you're building with `codemagic.yaml`, please refer [here](../code-signing-yaml/signing-macos).
+
+Note that Apple Developer Portal has a limitation of maximum 2 macOS distribution certificates per team. This means that if you already have 2 `Mac Installer Distribution` certificates, Codemagic won't be able to create new ones. Using existing certificates won't be possible because the private key required to install them is only stored on your machine.
+
+You may revoke an existing certifiate to allow Codemagic create a new one using a Codemagic team specific private key which is only stored on Codemagic. Alternatively, you can use [manual code signing](#manual-code-signing-to-publish-to-mac-app-store).
+
+### Step 1. Creating an App Store API key for Codemagic
+
+It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api). To do so:
+
+1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
+2. Click on the + sign to generate a new API key.
+3. Enter the name for the key and select an access level. We recommend choosing either `Developer` or `App Manager`, read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
+4. Click **Generate**.
+5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+
+{{<notebox >}}
+Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in Codemagic UI.
+{{</notebox>}}
+
+### Step 2. Connecting the Apple Developer Portal integration for your team/account
+
+The Apple Developer Portal integration can be enabled in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to conveniently use the same credentials for automatic code signing across different apps and workflows.
+
+{{<notebox >}}
+Note that users who had previously set up the session-based integration have been automatically migrated to use the API-key based setup.
+{{</notebox>}}
+
+1. In the list of available integrations, click the **Connect** button for **Developer Portal**.
+2. In the **App Store Connect API key name**, provide a name for the key you are going to set up the integration with. This is for identifying the key in Codemagic.
+3. Enter the **Issuer ID** related to your Apple Developer account. You can find it above the table of active keys on the Keys tab of the [Users and Access](https://appstoreconnect.apple.com/access/api) page.
+4. Enter the **Key ID** of the key to be used for code signing.
+5. In the **API key** field, upload the private API key downloaded from App Store Connect.
+6. Click **Save** to finish the setup.
+
+If you work with multiple Apple Developer teams, you can add additional keys by clicking **Add another key** right after adding the first key and repeating the steps described above. You can delete existing keys or add new ones when you click **Manage keys** next to the Developer Portal integration in user or team settings.
+
+### Step 3. Enabling automatic code signing for workflow
+
+Once the Apple Developer Portal has been enabled for the account or team the app belongs to, you can easily enable automatic code signing per workflow.
+
+1. Go to **App settings > Publish > macOS code signing**.
+2. Select **Automatic** as the code signing method. If you haven't enabled the Apple Developer Portal integration yet, you will be asked to enable it before you can continue configuration.
+3. If you have several keys available, select the right key in the **App Store Connect API key** field.
+4. Mark the checkbox **Project type setting > is Mac Catalyst** if you need a Mac Catalyst profile.
+7. Enter your app's **bundle identifier** (optional). By default, Codemagic looks for it from your `project.pbxproj` file.
+
+{{< figure size="medium" src="../uploads/automatic_code_signing_macos.png" caption="Automatic macOS code signing setup" >}}
+
+As the next step, you can [configure publishing to App Store Connect](../publishing/publishing-to-app-store) to submit the app to App Store Connect and distribute it via Mac App Store.
+
+## Manual code signing
+
+With the manual code signing method, you are required to upload the `Mac App Distribution` and `Mac Installer Distribution` certificates and the `Mac App Store` profile. You can also upload additional profiles if required.
+>See how to [export certificates and provisioning profiles](#exporting-certificates-and-provisioning-profiles).
+
+### Setting up manual code signing
+
+1. Go to **App settings > Publish > iOS code signing**.
+2. Select **Manual** as the code signing method.
+3. Upload your `Mac App Distribution` signing certificate (in `.p12` format). If your certificate is password-protected, enter the **Certificate password**.
+3. Upload your `Mac Installer Distribution` signing certificate (in `.p12` format). If your certificate is password-protected, enter the **Certificate password**.
+4. Upload your provisioning profile (`.provisionprofile`). Note that if your app contains app extensions, you are required to upload an additional provisioning profile for each extension.
+
+{{< figure size="medium" src="../uploads/manual_code_signing_macos.png" caption="Manual macOS code signing setup" >}}
+
+Codemagic will now create a signed `.pkg` file with every build. Note that you must also [set up publishing to App Store Connect](../publishing/publishing-to-app-store) to submit the app to App Store Connect and distribute it via Mac App Store.
+
+#### Exporting certificates and provisioning profiles
+
+>If you don't have an existing certificate, you will have to first [generate the signing certificate](https://help.apple.com/xcode/mac/current/#/dev154b28f09) using Xcode.
+
+To export the signing certificate:
+
+1. Open **Keychain Access** by searching for it in Spotlight.
+2. Select **My Certificates** in the **Category** submenu on the left sidebar.
+3. Locate your certificate. The name of the certificate should start with **3rd Party Mac Developer Application** or **3rd Party Mac Developer Installer**.
+3. Click on the certificate and select **File > Export Items** from the OSX menu bar.
+4. You are then prompted to save the certificate. Be sure to leave the file format field filled as `Personal Information Exchange (.p12)` because saving the certificate with the `.cer` extension will not include your private key.
+5. Enter the certificate export password when prompted (optional).
+
+To export the provisioning profile:
+
+1. Log in to Apple Developer portal.
+2. Navigate to **Certificates, Identifiers & Profiles > Profiles**.
+3. Select the provisioning profile you would like to export and click **Download**.
+4. Save it to have it ready.
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 35956ed..1d7a048 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -283,6 +283,7 @@ artifacts:
   - build/**/outputs/**/*.aab
   - build/**/outputs/**/mapping.txt
   - build/ios/ipa/*.ipa
+  - build/macos/**/*.pkg
   - /tmp/xcodebuild_logs/*.log
   - flutter_drive.log
 ```
@@ -290,7 +291,7 @@ artifacts:
 There are several things to keep in mind about patterns:
 * The pattern can match several files or folders. If it picks up files or folders with the same name, the top level file or folder name will be suffixed with `_{number}`.
 * If one of the patterns includes another pattern, duplicate artifacts are not created.
-* `apk`, `aab`, `aar`, `ipa`, `app`, proguard mapping (`mapping.txt`), `flutter_drive.log`, `jar`, `zip`, `xarchive` and `dSYM.zip` files will be available as separate items in the Artifacts section on the build page. The rest of the artifacts will be included in an archive with the following name pattern: `{project-name}_{version}_artifacts.zip`.
+* `apk`, `aab`, `aar`, `ipa`, `app`, `pkg`, proguard mapping (`mapping.txt`), `flutter_drive.log`, `jar`, `zip`, `xarchive` and `dSYM.zip` files will be available as separate items in the Artifacts section on the build page. The rest of the artifacts will be included in an archive with the following name pattern: `{project-name}_{version}_artifacts.zip`.
 
 ### Publishing
 
diff --git a/content/integrations/jira-integration.md b/content/integrations/jira-integration.md
index 1ab811f..5e4e018 100644
--- a/content/integrations/jira-integration.md
+++ b/content/integrations/jira-integration.md
@@ -74,7 +74,7 @@ The script section for publishing to Jira contains several actions which set env
 
 First, it uses **jq** (a command-line tool for parsing JSON) to parse the contents of the Codemagic environment variable `$FCI_ARTIFACT_LINKS` to find information such as the articact url, filename, bundle id and version name and store the values in environment varaibles.
 
-See this link about the JSON data that [$FCI_ARTIFACT_LINKS](http://localhost:1313/building/environment-variables/#codemagic-read-only-environment-variables) contains.
+See this link about the JSON data that [$FCI_ARTIFACT_LINKS](../building/environment-variables/#codemagic-read-only-environment-variables) contains.
 
 ### Setting additional environment variables
 
@@ -84,5 +84,5 @@ Addtional environment variables are then set such as the build number, build dat
 
 1. The script performs a request to add a comment to Jira issue specified using the jira.json as the payload.
 2. Another request is used to transition the issue to a different status.
-3. The script checks to see if XML test results have been generated. See [here](http://localhost:1313/testing-yaml/testing/) for information about using `test_report` to generate a test report .xml output. If **xml test results** are available then they will be uploaded  to the Jira issue.
+3. The script checks to see if XML test results have been generated. See [here](../testing-yaml/testing/) for information about using `test_report` to generate a test report .xml output. If **xml test results** are available then they will be uploaded  to the Jira issue.
 4. If **release notes** have been created then these are uploaded to the Jira issue.
diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index c514c34..02fab46 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -95,11 +95,11 @@ You can override the publishing track specified in the configuration file using
 
 ### App Store Connect
 
-Codemagic enables you to automatically publish your iOS app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store.
+Codemagic enables you to automatically publish your iOS or macOS app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store.
 
 ```yaml
 publishing:
-  app_store_connect:                  # For iOS app
+  app_store_connect:                  # For iOS or macOS app
     apple_id: name@example.com        # Email address used for login
     password: Encrypted(...)          # App-specific password
 ```
diff --git a/content/uploads/automatic_code_signing_macos.png b/content/uploads/automatic_code_signing_macos.png
new file mode 100644
index 0000000..18786a3
Binary files /dev/null and b/content/uploads/automatic_code_signing_macos.png differ
diff --git a/content/uploads/manual_code_signing_macos.png b/content/uploads/manual_code_signing_macos.png
new file mode 100644
index 0000000..3976a4e
Binary files /dev/null and b/content/uploads/manual_code_signing_macos.png differ

commit ae4e32a635a6f922246139c71bcbfc0d51242f2d
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Mon May 3 17:10:37 2021 +0300

    WIP: Feature: Snapcraft (#319)
    
    * Feature: Snapcraft
    
    * editing
    
    * Add Snapcraft publishing
    
    * address comments
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/getting-started/building-a-snap-package.md b/content/getting-started/building-a-snap-package.md
new file mode 100644
index 0000000..7cad1e5
--- /dev/null
+++ b/content/getting-started/building-a-snap-package.md
@@ -0,0 +1,79 @@
+---
+title: Building a snap package
+description: How to build and release a snap package with codemagic.yaml
+weight: 11
+aliases:
+  - '../yaml/building-a-snap-package'
+---
+
+## Setting up snap packaging
+
+To set up snap packaging, create a `snapcraft.yaml` file with the necessary configurations according to [Snapcraft guide for Flutter](https://snapcraft.io/docs/flutter-applications) or follow the general [`snapcraft.yaml` guide](https://snapcraft.io/docs/creating-snapcraft-yaml).
+
+Optionally, run the `snapcraft snap` command locally to ensure that everything is set up.
+
+You should store the `snapcraft.yaml` file in the repository root. Another option is to store `snapcraft.yaml` in the `.snap` folder that is located in repository root.
+
+{{<notebox>}}
+See a sample application along with a `codemagic.yaml` configuration file that builds and releases a snap package in [GitHub](https://github.com/codemagic-ci-cd/flutter-snapcraft-example/).
+{{</notebox>}}
+
+## Building snap packages
+
+Include the `snapcraft snap` command in the `scripts` section of your `codemagic.yaml` file as in the example below. The output of this command is a `.snap` artifact. It can later be used for [publishing to the Snapcraft Snap Store](#publishing-snap-packages).
+
+```yaml
+workflows:
+  snap-build:
+    name: Snapcraft Build
+    instance_type: linux
+    environment:
+        SNAPCRAFT_BUILD_ENVIRONMENT: host
+    scripts:
+      - name: Create a snap
+        script: snapcraft snap --output flutter-codemagic-example.snap
+    artifacts:
+        - '**/*.snap'
+```
+
+Additionally, you may want to install the generated `.snap` package onto your machine for testing. The package will not be code signed unless you publish it to Snapcraft, so you would need to use the `--dangerous` flag to install the package without code signing:
+
+    snap install your-package.snap --dangerous
+
+In case you are packaging a **Flutter application**, be sure to set `SNAPCRAFT_BUILD_ENVIRONMENT` environment variable to `host`. It is required to avoid virtualization. Read more about virtualization options [here](https://flutter.dev/docs/deployment/linux). Additionally, Snapcraft manages all the dependencies according to `snapcraft.yaml` configuration. There is no need to include Flutter version in `codemagic.yaml`.
+
+{{<notebox>}}
+**Note**: Snap is only available on Linux instances. Make sure to have `instance_type: linux` or `instance_type: linux_x2` in your `codemagic.yaml`. See the build machine specification [here](../specs/versions-linux/).
+{{</notebox>}}
+
+## Publishing snap packages
+
+Snap packages can be published to the [Snapcraft Snap Store](https://snapcraft.io/).
+
+1. Generate your Snapcraft credentials file by running the following command locally.
+
+```
+snapcraft export-login snapcraft-login-credentials
+```
+
+  You will be asked to enter your Snapcraft account username and password.
+
+2. Drag and drop the credentials file to the encryption interface in Codemagic. This is available via the lock icon next to the yaml editor in your app settings. Read more about encrypting sensitive info in Codemagic [here](../building/encrypting/). 
+3. Add the encrypted value to `codemagic.yaml` as an environment variable with the name `SNAPCRAFT_LOGIN_CREDENTIALS`.
+
+```yaml
+SNAPCRAFT_LOGIN_CREDENTIALS: Encrypted(...)
+```
+4. In the `scripts` section, add steps to log in to Snapcraft via CLI, build the snap package and release it to the desired channel.
+
+```yaml
+scripts:
+  - name: Authenticate
+    script: |
+      echo $SNAPCRAFT_LOGIN_CREDENTIALS | base64 --decode > /home/builder/snapcraft-login-credentials
+      snapcraft login --with /home/builder/snapcraft-login-credentials
+  - name: Create a snap
+    script: snapcraft snap --output flutter-codemagic-example.snap
+  - name: Upload and release
+    script: snapcraft upload flutter-codemagic-example.snap --release stable
+```

commit 2a6d0bd388ba667d799cb79dde2e4a7f3f9026e5
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Mon May 3 17:09:55 2021 +0300

    Desktop workflows (#321)
    
    * Restructure
    
    * Editing
    
    * add missing commits
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/flutter/flutter-projects.md b/content/flutter/flutter-projects.md
index a30ed8e..ca2afa5 100644
--- a/content/flutter/flutter-projects.md
+++ b/content/flutter/flutter-projects.md
@@ -14,21 +14,28 @@ With Codemagic, you can build and test Flutter apps for Android, iOS, web, macOS
 If you're interested in building Flutter/Dart packages and publishing them to [pub.dev](https://pub.dev/), you can do so with [`codemagic.yaml`](../getting-started/yaml), see an example [here](../publishing-yaml/distribution/#publishing-a-flutter-package-to-pubdev).
 {{</notebox>}}
 
-## Selecting build platforms and versions
+## Selecting build platforms and build machines
 
-You can select the platforms to build for and specify the **Flutter version**, **Xcode version** and **CocoaPods version** to be used for building in **App settings > Build**.
+At the beginning of the workflow, first select the platforms to build and then specify a build machine type to run the build on. While Android, iOS and web builds can be run in the same workflow, macOS and Linux platforms are each built in a separate workflow and on different build instances. Note that the availability of build machine instances depends on the selected build platforms and whether you have billing enabled or not.
 
-When you're building for **Android**, make sure to also specify the **Android build format** to determine which build artifacts to generate.
+* iOS and macOS builds can be run on macOS build machines
+* Android and Web builds can be run on macOS or Linux build machines
+* Linux builds can be run on Linux build machines
+* a Run tests only workflow can be run on macOS or Linux build machines
 
-This is also where you can selet the build **Mode** (**Debug**, **Release** or **Profile**) and specify additional build arguments, e.g. for [build versioning](../building/build-versioning) or verbose logging.
+## Building Android apps
 
-### Building Android app bundles
+In your app settings, select **Android** under **Build for platforms** and an available build machine type.
 
-You can build your app in [Android App Bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app  .apk(s) will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
+Then scroll down to the **Build** section to specify the **Flutter** version, select the build **Mode** (**Debug**, **Release** or **Profile**) or add additional build arguments, e.g. for [build versioning](../building/build-versioning) or verbose logging.
+
+Make sure to also select the **Android build format** to determine which build artifacts to generate.
 
-In **App settings > Build > Build for platforms**, select **Android** and then choose **Android app bundle (AAB)** as the **Android build format**.
+When you're building for release, you will need to build the app in Release mode and set up [code signing](../code-signing/android-code-signing/).
 
-#### Prepare the app bundle for uploading to Google Play
+### Building Android app bundles
+
+You can build your app in [Android App Bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app  .apk(s) will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
 
 In order to upload your Android App Bundle to Google Play, you will need to:
 
@@ -39,46 +46,60 @@ In order to upload your Android App Bundle to Google Play, you will need to:
 
 When you enroll an app into app signing by Google Play, Google will manage your app's signing key for you and use it to sign the .apk for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
 
-### Building iOS apps
+## Building iOS apps
 
-To build for iOS, select **iOS** as the build platform in **App settings > Build > Build for platforms**. To build a release archive, you also need to set up [code signing](../code-signing/ios-code-signing/).
+In your app settings, select **iOS** under **Build for platforms** and an available build machine type.
+
+Then scroll down to the **Build** section to specify the **Flutter**, **Xcode** and **Cocoapods** versions, select the build **Mode** (**Debug**, **Release** or **Profile**) or add additional build arguments, e.g. for [build versioning](../building/build-versioning) or verbose logging. 
+
+When you're building for release, you will need to build the app in Release mode and set up [code signing](../code-signing/ios-code-signing/).
 
 {{<notebox>}}
 **Using `flutter build ipa`**
 
-As of Flutter version 1.24.0-6.0, it is possible to use the `flutter build ipa` command to build an .ipa. Using this command can reduce build time.
-
-To use the `flutter build ipa` command in Codemagic, you need to enable code signing and select the **Use `flutter build ipa`** checkbox in **App settings > Build > iOS build command**.
+The `flutter build ipa` command is available as of Flutter version 1.24.0-6.0 and is the recommended option to build an .ipa archive. To use this build command, 
+enable code signing and select the **Use flutter build ipa** checkbox in build settings.
 {{</notebox>}}
 
-### Building for the web
+## Building web apps
 
-Codemagic can detect your Flutter web project if it contains a `web` folder. To build for the web, select **Web** as the build platform in **App settings > Build > Build for platforms**.
+Codemagic can detect your Flutter web project if it contains a `web` folder. 
 
-{{<notebox>}}
-Flutter for web is currently in beta. Make sure to select channel Beta or a later Flutter version to build for web.
-{{</notebox>}}
+Then scroll down to the **Build** section to specify the **Flutter** version, select the build **Mode** (**Debug**, **Release** or **Profile**) or add additional build arguments, e.g. for [build versioning](../building/build-versioning) or verbose logging. 
 
-At the end of a successful build, Codemagic generates a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](../publishing/publishing-to-codemagic-static-pages/). You can also use custom scripts to publish to third-party hosting sites.
+At the end of a successful build, Codemagic outputs a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](../publishing/publishing-to-codemagic-static-pages/). You can also use custom scripts to publish to third-party hosting sites.
 
-### Building for desktop
+## Building macOS apps
 
-You can use Codemagic to build Flutter desktop apps for macOS and Linux. Building Windows apps is not yet supported. 
+Codemagic can detect your Flutter macOS project if it contains a `macos` folder for the macOS application.
 
-{{<notebox>}}
-Read more about Flutter's desktop support and the required settings for enabling it in Flutter's wiki about [desktop shells](https://github.com/flutter/flutter/wiki/Desktop-shells).
-{{</notebox>}}
+In your app settings, select **macOS** under **Build for platforms** and an available build machine type.
+
+Then scroll down to the **Build** section to specify the **Flutter**, **Xcode** and **CocoaPods** version, select the build **Mode** (**Debug**, **Release** or **Profile**) or add additional build arguments, e.g. for [build versioning](../building/build-versioning) or verbose logging. 
+
+At the end of a successful build, Codemagic outputs a downloadable `.zip` file containing an `.app` archive. If you build for releasing to the App Store, you need to also set up [code signing](../code-signing/macos-code-signing/) to receive a `.pkg` file.
+
+## Building Linux apps
+
+Codemagic can detect your Flutter Linux project if it contains a `linux` folder for the Linux application.
+
+In your app settings, select **Linux** under **Build for platforms** and an available build machine type.
+
+Then scroll down to the **Build** section to specify the **Flutter** version, select the build **Mode** (**Debug**, **Release** or **Profile**) or add additional build arguments, e.g. for [build versioning](../building/build-versioning) or verbose logging. 
+
+At the end of a successful build, Codemagic outputs a downloadable `.zip` file. 
+
+### Building snap packages
 
-Codemagic can detect your Flutter desktop project if it meets the following conditions:
+Snaps are packaged apps that can be published to and installed from the [Spancraft Snap Store](https://snapcraft.io/store). Building a snap package requires having a `snapcraft.yaml` configuration file in the root of the repository, read more about how to [create a `snapcraft.yaml` file for a Flutter app](https://snapcraft.io/docs/flutter-applications). 
 
-- The project contains a `macos` folder for the macOS application
-- The project contains a `linux` folder for the Linux application
+To build a snap package, select the **Build Snap package** checkbox in the **Build** section of your Linux workflow. When building a snap, the build configuration comes from the `snapcraft.yaml` file and the Flutter version, build mode and build arguments selected in Codemagic have no effect. To publish the snap to the Snap Store, set up [publishing to the Snap Store](../publishing/snap-store).
 
-To build for the **macOS** or **Linux**, select the respective option in **App settings > Build > Build for platforms**. Make sure to also select a Flutter version that has desktop support available.
+Additionally, you may want to install the generated `.snap` package onto your machine. The package will not be code signed unless you publish it to Snapcraft. You would need to use the `--dangerous` flag to install the package without code signing:
 
-At the end of a successful build, Codemagic generates a downloadable `.zip` file for each desktop platform. The application can be installed on your machine, but since it is built without code signing, you may have to allow installating applications from unidentified developers.
+    snap install your-package.snap --dangerous
 
-### Running tests only
+## Running tests only
 
 In some cases you may want to run only tests and not build the entire project, e.g. when you're triggering a build on pull request update. To do so, [enable testing](../testing/running-automated-tests), and then in **App settings > Build > Build for platforms**, select **Run tests only**. Codemagic will then build the workflow until the testing step and skip building the app.
 
diff --git a/content/publishing/github-release.md b/content/publishing/github-release.md
index 3b35d6f..5d5ad6e 100644
--- a/content/publishing/github-release.md
+++ b/content/publishing/github-release.md
@@ -1,7 +1,7 @@
 ---
 description: How to create a GitHub release with artifacts using the Flutter workflow editor
 title: GitHub releases
-weight: 9
+weight: 10
 ---
 
 Codemagic enables you to automatically create a GitHub release and upload generated artifacts when your build is triggered on tag creation. Read more about GitHub releases in [GitHub's documentation](https://docs.github.com/en/github/administering-a-repository/about-releases).
diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index d78c642..18c4f5b 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -1,7 +1,7 @@
 ---
 description: How to publish build release notes using the Flutter workflow editor
 title: Publish release notes
-weight: 4
+weight: 9
 ---
 
 Create custom release notes file(s) to notify users of the changes as you publish a new version of your app.
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index 54323ba..23322f3 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -1,7 +1,7 @@
 ---
 description: How to publish a web app to a custom subdomain using the Flutter workflow editor
 title: Codemagic Static Pages
-weight: 3
+weight: 4
 ---
 
 You can publish your web app to a custom subdomain of `codemagic.app` for easy access.
diff --git a/content/publishing/snap-store.md b/content/publishing/snap-store.md
new file mode 100644
index 0000000..04ad090
--- /dev/null
+++ b/content/publishing/snap-store.md
@@ -0,0 +1,19 @@
+---
+description: How to publish a snap to the Snap Store using the Flutter workflow editor
+title: Snapcraft Snap Store
+weight: 3
+---
+
+The [snap packages](../flutter/flutter-projects/#building-snap-packages) you build in Codemagic can be published straight to the [Snapcraft Snap Store](https://snapcraft.io/) as part of the build workflow.
+
+1. Go to **App settings > Publish > Snapcraft** to configure publishing to the Snapcraft Snap Store.  
+2. Upload your Snapcraft login credentials file. This can be created by running the following command locally.
+
+```
+snapcraft export-login snapcraft-login-credentials
+```
+
+3. Select a channel for publishing the snap package.
+4. Select the **Enable Snapcraft publishing** checkbox to enable publishing to the Snapcraft Snap Store.
+
+Now each time you run the workflow on Codemagic, the snap package artifact will be published to the selected channel on Snapcraft.

commit 0746cdbd102a09f59768157c6ce984b1e63d6a9d
Author: Priit Lätt <priit@nevercode.io>
Date:   Mon May 3 14:08:03 2021 +0300

    Base image update @ 03-05-2021 (#322)
    
    * Base image update @ 03-05-2021
    
    * Revert changes to linux report
    
    * Restore snapcraft version in linux reports

diff --git a/content/specs/versions.md b/content/specs/versions.md
index 5057eac..d12616a 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -70,7 +70,9 @@ weight: 4
 
 ## Xcode 11.7 (11E801a)
 
-This is the Xcode version used by default when you select `11.7` in build settings in the workflow editor for Flutter apps or set Xcode version to `11.7` in your codemagic.yaml file. Other available versions are listed [here](#other-xcode-versions).
+This is the Xcode version used by default when you select `11.7` in build settings in the workflow 
+editor for Flutter apps or set Xcode version to `11.7` in your codemagic.yaml file. 
+Other available versions are listed [here](#other-xcode-versions).
 
 Xcode path: `/Applications/Xcode-11.7.app`
 
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 96f3c19..f3759ef 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -70,7 +70,9 @@ weight: 3
 
 ## Xcode 12.4 (12D4e)
 
-This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
+This is the Xcode version used by default when you select `12.4` in build settings in the workflow 
+editor for Flutter apps or set Xcode version to `12.4` in your codemagic.yaml file. 
+Other available versions are listed [here](#other-xcode-versions).
 
 Xcode path: `/Applications/Xcode-12.4.app`
 
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index f8951d1..97df2a7 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -69,7 +69,9 @@ weight: 2
 
 ## Xcode 12.5 (12E262)
 
-This is the Xcode version used by default when you select `edge` in build settings in the workflow editor for Flutter apps or set Xcode version to `edge` in your codemagic.yaml file. Other available versions are listed [here](#other-xcode-versions).
+This is the Xcode version used by default when you select `12.5`, `latest` or `edge` in build settings in the workflow 
+editor for Flutter apps or set Xcode version to `12.5`, `latest` or `edge` in your codemagic.yaml file. 
+Other available versions are listed [here](#other-xcode-versions).
 
 Xcode path: `/Applications/Xcode-12.5.app`
 

commit f07a442f6668ac753bc0428ed2c6936cd9c10df0
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Fri Apr 30 12:41:41 2021 +0300

    add cordova and ionic to header menu

diff --git a/layouts/partials/header.html b/layouts/partials/header.html
index 8d10bdd..9bb2b61 100644
--- a/layouts/partials/header.html
+++ b/layouts/partials/header.html
@@ -56,6 +56,24 @@
                                     {{ readFile "/assets/svg/platforms/android.svg" | safeHTML }} Native Android</a
                                 >
                             </li>
+                            <li>
+                                <a
+                                    href='{{ site.Param "landingURL" }}/cordova-continuous-integration'
+                                    class="menu-block__link"
+                                    onclick="sendGtag('Cordova_clicked', 'CodemagicMenu')"
+                                >
+                                    {{ readFile "/assets/svg/platforms/cordova.svg" | safeHTML }} Cordova</a
+                                >
+                            </li>
+                            <li>
+                                <a
+                                    href='{{ site.Param "landingURL" }}/ionic-continuous-integration'
+                                    class="menu-block__link"
+                                    onclick="sendGtag('Ionic_clicked', 'CodemagicMenu')"
+                                >
+                                    {{ readFile "/assets/svg/platforms/ionic.svg" | safeHTML }} Ionic</a
+                                >
+                            </li>
                         </ul>
                     </div>
                     <div class="menu-block">

commit ec78a74325a7a69e299857ba1e5ca3fd4f11b4bc
Author: Priit Lätt <priit@nevercode.io>
Date:   Wed Apr 28 11:16:13 2021 +0300

    Base image update @ 28-04-2021 (#317)
    
    * Base image update @ 28-04-2021
    
    * Revert invalid changes to Linux report
    
    * Revert invalid changes

diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 369d731..f8951d1 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -15,28 +15,28 @@ weight: 2
 
 - System version `macOS 11.2 (20D64)`
 - Kernel version `Darwin 20.3.0`
-- Disk `322GB (Free Space: 98GB)`
+- Disk `322GB (Free Space: 90GB)`
 
 ## Pre-installed tools
 
 - Android tools `/usr/local/share/android-sdk`
-- aws `2.1.29`
+- aws `2.1.39`
 - cocoapods `1.10.1`
 - cordova `10.0.0`
 - curl
 - docker `20.10.2`
-- fastlane `2.176.0`
+- fastlane `2.181.0`
 - firebase `9.3.0`
-- flutter `2.0.5 ($HOME/programs/flutter)`
+- flutter `2.0.5 ($HOME/programs/flutter_2_0_5)`
 - gem `3.1.4`
-- gh `1.8.1`
-- git `2.30.1`
+- gh `1.9.2`
+- git `2.31.1`
 - gradle `6.1.1`
-- homebrew `3.1.0`
+- homebrew `3.1.3`
 - ionic `6.12.4`
 - jq
 - node `14.15.5`
-- npm `7.5.3`
+- npm `7.10.0`
 - python `3.8.7`
 - python3 `3.8.7`
 - ruby `2.7.2p137`
@@ -63,17 +63,17 @@ weight: 2
 
 ## Java versions
 
-- **15**: version `15.0.2`, JVM `Zulu 15.29.15`
-- **11**: version `11.0.10`, JVM `Zulu 11.45.27`
-- **1.8**: version `1.8.0_282`, JVM `Zulu 8.52.0.23`
+- **16**: version `16`, JVM `Zulu 16.28.11`
+- **11**: version `11.0.11`, JVM `Zulu 11.48.21`
+- **1.8**: version `1.8.0_292`, JVM `Zulu 8.54.0.21`
 
-## Xcode 12.5 (12E5244e)
+## Xcode 12.5 (12E262)
 
-This is the Xcode version used when you select `12.5` in build settings. Other available versions are listed [here](#other-xcode-versions).
+This is the Xcode version used by default when you select `edge` in build settings in the workflow editor for Flutter apps or set Xcode version to `edge` in your codemagic.yaml file. Other available versions are listed [here](#other-xcode-versions).
 
 Xcode path: `/Applications/Xcode-12.5.app`
 
-With Xcode `12.5` build version `12E5244e` the following runtimes and devices are installed:
+With Xcode `12.5` build version `12E262` the following runtimes and devices are installed:
 
 ### Runtimes
 
@@ -142,9 +142,13 @@ With Xcode `12.5` build version `12E5244e` the following runtimes and devices ar
 - iPad Air (3rd generation)
 - iPad (8th generation)
 - iPad Air (4th generation)
+- iPad Pro (11-inch) (3rd generation)
+- iPad Pro (12.9-inch) (5th generation)
 - Apple TV
 - Apple TV 4K
 - Apple TV 4K (at 1080p)
+- Apple TV 4K (2nd generation)
+- Apple TV 4K (at 1080p) (2nd generation)
 - Apple Watch - 38mm
 - Apple Watch - 42mm
 - Apple Watch Series 2 - 38mm
@@ -163,3 +167,4 @@ With Xcode `12.5` build version `12E5244e` the following runtimes and devices ar
 ## Other Xcode versions
 
 - 12.4 (12D4e) `/Applications/Xcode-12.4.app`
+

commit f394af4473bab80736f32fc5b5ea19b2209f4669
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Mon Apr 26 16:36:08 2021 +0200

    update yq for linux base image specs (#316)

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index e1cf2ca..a17973a 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -42,7 +42,7 @@ weight: 5
 - unzip
 - wget
 - yarn `1.22.5`
-- yq `3.3.2`
+- yq `4.6.1`
 - zip
 
 ## Android emulators

commit 7808413ba3eccf998e65c0e8ced646aece7dc26d
Author: Sneh Pandya <sneh.pandya1@gmail.com>
Date:   Mon Apr 26 16:23:33 2021 +0530

    Add documentation for React Native tests (#315)
    
    * Add documentation for React Native tests
    
    * Fix: MacOS instance types in codemagic.yaml
    
    * Fix: minor spelling typos
    
    Co-authored-by: Sneh Pandya <sneh@blingg.club>

diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index fa80191..a7e5794 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -11,12 +11,171 @@ Test scripts are added under `scripts` in the [overall architecture](../getting-
 You can display test results visually in the build overview if you use expanded form of the script in `codemagic.yaml`.
 Just include the `test_report` field with a glob pattern matching the test result file location. Supported test report formats are [Junit XML](https://llg.cubic.org/docs/junit/) `.JSON` for Flutter's `--machine` report.
 
-## React Native unit tests
+## React Native Unit Tests using Jest
 
-This is a basic example with jest, given that jest tests are defined in the `package.json` file.
+This is a basic example with Jest, given that Jest tests are defined in the `package.json` file as below.
+
+```json
+// package.json
+"scripts": {
+  "test": "jest"
+},
+"jest": {
+  "preset": "jest-expo",
+  "setupFiles": ["<rootDir>/testing/jest-setup.js"]
+}
+```
+
+In the root directory of the project, add a new file and name it `jest.config.js`. Within `jest.config.js`, add the below code:
+
+```javascript
+module.exports = {
+  preset: 'react-native',
+  setupFilesAfterEnv: ['@testing-library/jest-native/extend-expect'],
+};
+```
+
+`preset` is a preset that is used as a base for Jest’s configuration. A preset should point to an npm module that has a `jest-preset.json` or `jest-preset.js` file at the root.
+
+`setUpFilesAfterEnv` specifies a list of paths to modules that run some code to configure or set up the testing framework before each test file in the suite is executed.
+
+To execute the tests, the command is:
 
 ```bash
 npm test
+
+# OR
+
+yarn test
+```
+
+In React Native, 3rd party modules are oftentimes published as **untranspiled**. Since all files inside `node_modules` are not transformed by default, Jest will not understand the code in these modules, resulting in syntax errors. To overcome this, you need to use `transformIgnorePatterns` to allow transpiling such modules.
+
+Below is a configuration for the same which needs to be specficied in `package.json`:
+
+```json
+"jest": {
+  "preset": "jest-expo",
+  "transformIgnorePatterns": [
+    "node_modules/(?!(jest-)?react-native|react-clone-referenced-element|@react-native-community|expo(nent)?|@expo(nent)?/.*|react-navigation|@react-navigation/.*|@unimodules/.*|unimodules|sentry-expo|native-base|@sentry/.*)"
+  ]
+}
+```
+
+Once the project setup is done on Codemagic, you need to add the testing configuration in the `codemagic.yaml` file as shown below for the tests to be executed:
+
+```yaml
+workflows:
+  
+  my-workflow:
+    name: <your workflow name>
+      instance_type: linux                # specify linux or linux_2 for Linux instances; mac_mini or mac_pro for macOS instances
+      max_build_duration: 60
+  ...
+
+    scripts:
+      - name: Install npm dependencies
+        script: npm install
+        
+        ...
+
+      - name: Tests                       # Insert before the build command
+        script: npm test
+
+        ...
+
+      - name: Build ipa for distribution
+        script: xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme $XCODE_SCHEME
+      
+      - name: Build Android app
+        script: cd android && ./gradlew assembleRelease
+    
+  ...
+```
+
+## React Native Integration Tests using Appium and Emulator
+
+[Appium](https://appium.io/) is an open-source testing automation framework for testing cross-platform applications and mobile applications. You can use Appium and WebDriverIO with React Native thanks to its out-of-the-box support.
+
+You need to install and setup WebDriverIO in your project root directory before running CI or tests on Codemagic. On your local machine, run the below command and provide input to a series of questions:
+
+```bash
+npx wdio config
+```
+Once it's done, `wdio.conf` file will be generated inside the `tests` directory.
+
+Perform the following changes to configure WebDriverIO to work with Appium and run tests on Android Emulator:
+
+```javascript
+exports.config = {
+  services: ['appium'],
+  port: 4723,
+  runner: 'local',
+  specs: [
+    './tests/specs/**/*.js'
+  ],
+  capabilities: [{
+     maxInstances: 1,
+     browserName: '',
+     appiumVersion: '1.13.0',
+     platformName: 'Android',
+     platformVersion: '<emulator platform version>',    // Specify your emualator details
+     deviceName: '<emulator name>',
+     app: '<path to APK>',
+     automationName: 'UiAutomator2'
+  }],
+  
+  logLevel: 'trace',
+  bail: 0,
+  waitforTimeout: 10000,
+  connectionRetryTimeout: 90000,
+  connectionRetryCount: 3,
+  framework: 'mocha',
+  reporters: ['spec'],
+  mochaOpts: {
+    ui: 'bdd'
+    timeout: 60000
+  }
+}
+```
+
+Once the project setup is done on Codemagic, you need to add the testing configuration in the `codemagic.yaml` file as shown below for the tests to be executed:
+
+```yaml
+workflows:
+  
+  my-workflow:
+    name: <your workflow name>
+      instance_type: linux                # specify linux or linux_2 for Linux instances; mac_mini or mac_pro for macOS instances
+      max_build_duration: 60
+  ...
+
+    scripts:
+      - name: Install npm dependencies    # Add Appium and WebDriverIO dependencies
+        script: npm install && npm install -g appium && npm install --save webdriverio @wdio/cli
+        
+        ...
+
+      - name: Launch emulator             # Insert before the build command
+        script: |                         
+        react-native run-android  &
+        adb wait-for-device               
+      
+      - name: Launch Appium
+        script: appium
+
+      - name: Run WebDriver test suite
+        script: npx wdio ./wdio.conf.js
+
+        ...
+
+      - name: Build ipa for distribution
+        script: xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme $XCODE_SCHEME
+      
+      - name: Build Android app
+        script: cd android && ./gradlew assembleRelease
+    
+  ...
 ```
 
 ## Native Android

commit 485a6fe2f73a4e7ba9d9be8e76f30b1c492a7de9
Author: Helina Ariva <helina@nevercode.io>
Date:   Mon Apr 26 10:55:15 2021 +0300

    fix link

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index b30e284..c514c34 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -292,7 +292,7 @@ Publishing web applications to Firebase Hosting With Codemagic publishing to Fir
 
 1. To get started with adding Firebase Hosting to Codemagic, you will need to obtain your Firebase token. In order to do that, run `firebase login:ci` in your local terminal. 
 2. After running the command, your default browser should prompt for authorization to your Firebase project - when access is granted, the necessary token will appear in your terminal.
-3. Copy and [encrypt](https://github.com/codemagic-ci-cd/codemagic-docs/blob/master/content/building/encrypting) the token using the Codemagic UI.
+3. Copy and [encrypt](../building/encrypting/) the token using the Codemagic UI.
 4. Add your encrypted token to your .yaml file by setting it under your environment variables with the name `FIREBASE_TOKEN`.
 5. Create a new script for publishing to Firebase Hosting in your scripts section of the .yaml file and add it right after the build step
 

commit d11c5173c789145a558de75576cd3e6aba908376
Author: Helina Ariva <helina@nevercode.io>
Date:   Mon Apr 26 10:05:28 2021 +0300

    Editing

diff --git a/content/flutter/automatic-build-triggering.md b/content/flutter/automatic-build-triggering.md
index ab185a2..4718330 100644
--- a/content/flutter/automatic-build-triggering.md
+++ b/content/flutter/automatic-build-triggering.md
@@ -46,7 +46,7 @@ If you have a `codemagic.yaml` in the repository, it is automatically used for c
 
 **Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
 
-If enabled, you would be able to specify tag patterns to trigger builds. Similarly to **Watched branch patterns**, the first pattern in the list is applied first and each pattern will limit the set of tag labels further. In the case of conflicting patterns, the latter one will prevail. You could use wildcard symbols, click **Show pattern examples** for more information.
+If enabled, you would be able to specify tag patterns to trigger builds. Similarly to **Watched branch patterns**, the first pattern in the list is applied first and each pattern will limit the set of tag labels further. In the case of conflicting patterns, the latter one will prevail. Using wildcard symbols is supported, click **Show pattern examples** for more information.
 
 **Cancel outdated webhook builds**. When checked, Codemagic will automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch. We recommend enabling this feature when you're making several commits, each of which triggers a build.
 

commit a988c94464798a3fed4842795f35444bb72ae0b1
Author: Chris Raastad <craastad@gmail.com>
Date:   Fri Apr 23 15:49:43 2021 +0300

    Add links to sample projects in codemagic.yaml getting started guides. (#314)

diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index 0ec318a..e6c3a86 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -47,6 +47,10 @@ The YAML feature currently has the following **limitations**:
 
 ## Android builds
 
+{{<notebox>}}
+You can find an up-to-date codemagic.yaml Flutter Android workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/flutter/flutter-yaml-demo-project/codemagic.yaml#L2).
+{{</notebox>}}
+
 Set up local properties
 
 ```yaml
@@ -81,6 +85,10 @@ Codemagic uses the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-t
 
 ## iOS builds
 
+{{<notebox>}}
+You can find an up-to-date codemagic.yaml Flutter iOS workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/flutter/flutter-yaml-demo-project/codemagic.yaml#L72).
+{{</notebox>}}
+
 ### Building an unsigned application .app
 
 ```yaml
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index 3d7b185..b936ed4 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -43,6 +43,10 @@ To test, code sign and publish an Android app:
 
 ## Android workflow example
 
+{{<notebox>}}
+You can find an up-to-date codemagic.yaml Android workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/android/android-espresso-demo-project/codemagic.yaml).
+{{</notebox>}}
+
 The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
 
 ```yaml
diff --git a/content/getting-started/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
index e77b11e..924459f 100644
--- a/content/getting-started/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -87,6 +87,10 @@ To test, code sign and publish an iOS app:
 
 ## iOS workflow example
 
+{{<notebox>}}
+You can find an up-to-date codemagic.yaml iOS workflow in Codemagic Sample Projects for [automatic code signing](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/ios/ios-automatic-code-signing-demo-project/codemagic.yaml) and [manual code signing](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/ios/ios-manual-code-signing-demo-project/codemagic.yaml).
+{{</notebox>}}
+
 The following example shows a workflow that can be used to publish your iOS app to App Store Connect.
 
 ```yaml
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index fb203cc..c8df94f 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -28,6 +28,10 @@ Note that you need to set up a [webhook](../building/webhooks) for automatic bui
 
 ## Android
 
+{{<notebox>}}
+You can find an up-to-date codemagic.yaml React Native Android workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/react-native/react-native-demo-project/codemagic.yaml#L5).
+{{</notebox>}}
+
 Set up local properties
 
 ```yaml
@@ -43,16 +47,18 @@ Building an Android application:
 ## iOS
 
 {{<notebox>}}
-Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
+You can find an up-to-date codemagic.yaml React Native iOS workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/react-native/react-native-demo-project/codemagic.yaml#L72).
 {{</notebox>}}
 
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
+
 Script for building an iOS application:
 
 ```yaml
 - xcode-project build-ipa --workspace "ios/MyReact.xcworkspace" --scheme "MyReact"
 ```
 
-{{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}} 
+Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46). 
 
 ## Testing, code signing and publishing
 
@@ -62,16 +68,6 @@ To test and publish a React Native app:
 * All iOS and Android applications need to be signed before release. See how to set up [iOS code signing](../code-signing-yaml/signing-ios) and [Android code signing](../code-signing-yaml/signing-android).
 * All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/#publishing).
 
-## iOS and Android workflow examples
-
-Please refer to the React Native demo project on GitHub:
-
-[https://github.com/codemagic-ci-cd/react-native-demo-project](https://github.com/codemagic-ci-cd/react-native-demo-project)
-
-This shows how to configure the **codemagic.yaml** so you can build and publish your **iOS** app to **App Store Connect**.
-
-It also contains a workflow that shows how to build and publish your **Android** app to a **Google Play** internal track.
-
 ## Build versioning your React Native app
 
 ### Android versioning
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index bc41086..3cdb355 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -36,6 +36,10 @@ To test, code sign and publish Ionic Android and iOS apps:
 
 ## Android Ionic Capacitor workflow example
 
+{{<notebox>}}
+You can find an up-to-date codemagic.yaml Ionic Android workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/ionic/ionic-capacitor-demo-project/codemagic.yaml#L95).
+{{</notebox>}}
+
 The following example shows how to set up a workflow that builds your **Ionic Capacitor** Android app and publishes to a Google Play internal track.
 
 ```yaml
@@ -184,6 +188,10 @@ workflows:
 
 ## iOS Ionic Capacitor workflow example
 
+{{<notebox>}}
+You can find an up-to-date codemagic.yaml Ionic iOS workflow in [Codemagic Sample Projects](https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/ionic/ionic-capacitor-demo-project/codemagic.yaml#L2).
+{{</notebox>}}
+
 The following example shows a workflow that can be used to publish your **Ionic Capacitor** iOS app to App Store Connect.
 
 ```yaml

commit 13879632023c880b79a1eaf02c194464d5a791c1
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Wed Apr 21 17:05:13 2021 +0300

    Create example of uploading dsym to Firebase Crashlytics (#306)

diff --git a/content/knowledge-base/Firebase Crashlytics dsym uploading b/content/knowledge-base/Firebase Crashlytics dsym uploading
new file mode 100644
index 0000000..bee0a6d
--- /dev/null
+++ b/content/knowledge-base/Firebase Crashlytics dsym uploading	
@@ -0,0 +1,24 @@
+---
+description: How to upload dsym artifacts to Firebase Crashlytics
+title: Firebase Crashlytics dsym uploading
+weight: 4
+aliases:
+  - '../custom-scripts/firebase-crashlytics-dsym-uploading'
+---
+
+Here is how you can upload Xcode debugging symbols file to Firebase Crashlytics
+
+  ```bash
+  echo "Find build artifacts"
+  dsymPath=$(find ~/build.xcarchive -name "*.dSYM.zip" | head -1)
+  if [[ -z ${dsymPath} ]]
+  then
+    echo "No debug symbols were found, skip publishing to Firebase Crashlytics"
+  else
+    echo "Publishing debug symbols from $dsymPath to Firebase Crashlytics"
+    ls -d -- ios/Pods/*
+    $FCI_BUILD_DIR/ios/Pods/Crashlytics/iOS/Crashlytics.framework/upload-symbols -gsp ios/Runner/GoogleService-Info.plist -p ios $dsymPath
+  fi
+  ```
+
+Add this script to either your configuration file or in your post-publish script in the Flutter workflow editor to locate and upload dsym files to Firebase Crashlytics.

commit 232a8b7222887e0ab04fcccb4e27ac4f147bfa9c
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Wed Apr 21 16:59:35 2021 +0300

    Feature/automatic build triggering UI (#310)
    
    Update automatic build triggering docs.

diff --git a/content/flutter/automatic-build-triggering.md b/content/flutter/automatic-build-triggering.md
index 164a23b..ab185a2 100644
--- a/content/flutter/automatic-build-triggering.md
+++ b/content/flutter/automatic-build-triggering.md
@@ -46,6 +46,8 @@ If you have a `codemagic.yaml` in the repository, it is automatically used for c
 
 **Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
 
+If enabled, you would be able to specify tag patterns to trigger builds. Similarly to **Watched branch patterns**, the first pattern in the list is applied first and each pattern will limit the set of tag labels further. In the case of conflicting patterns, the latter one will prevail. You could use wildcard symbols, click **Show pattern examples** for more information.
+
 **Cancel outdated webhook builds**. When checked, Codemagic will automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch. We recommend enabling this feature when you're making several commits, each of which triggers a build.
 
 If you don't enable any automatic build triggers, you can start builds only manually for this workflow.

commit 73b3d76062c1e6e62b7216eb3af6e1f3032132e0
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Wed Apr 21 16:56:36 2021 +0300

    update github app docs (#312)
    
    Add hyperlink template for Organization Github apps installations, since https://github.com/organizations/codemagic-ci-cd/settings/installations was taking people to a 404.

diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 238200a..b6a8f9f 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -53,7 +53,7 @@ Here are some tips on what to check if you can't see your repository listed in C
 
 * If you chose to grant access to **select repositories only** as opposed to all repositories when setting up the GitHub App, make sure you have also granted access to the repository in question. Click **Manage integration > Configure** in team or user integrations to configure repository access settings.
 * Your personal Codemagic account and each team have separate integrations. Make sure you have connected the GitHub App integration in the right team or in your user settings.
-* If you build apps from different GitHub accounts or organizations, make sure that you have installed the GitHub App on the account that has the repository available. Click **Manage integration > Configure** to see which accounts have been connected. You can also visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or [https://github.com/organizations/codemagic-ci-cd/settings/installations](https://github.com/organizations/codemagic-ci-cd/settings/installations) for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
+* If you build apps from different GitHub accounts or organizations, make sure that you have installed the GitHub App on the account that has the repository available. Click **Manage integration > Configure** to see which accounts have been connected. You can also visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or github(dot)com/organizations/your-organization/settings/installations for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
 * Private GitHub repositories can be shared with Codemagic only when the GitHub App is installed on the account that owns the repository. If you are a collaborator to a private repository, please ask the repository owner to install Codemagic GitHub App in GitHub: [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd)
 
 ## Sign up via Bitbucket or GitLab
@@ -79,4 +79,4 @@ Once you have connected another account to your Codemagic account, you can log i
 
 {{<notebox>}}
 Note that if you have connected both GitHub and GitHub App, the GitHub App integration will prevail.
-{{</notebox>}}
\ No newline at end of file
+{{</notebox>}}

commit 8de820e20c33fc34e5794f035c8f3eec2b48bee5
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Wed Apr 21 11:06:34 2021 +0300

    Feature: Automatic build triggering YAML (#309)
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 5408d02..35956ed 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -234,6 +234,13 @@ triggering:
     - pattern: included-source
       include: true
       source: true
+  tag_patterns:                 # Include or exlude watched tag labels
+    - pattern: '*'
+      include: true
+    - pattern: exluded-tag
+      include: false
+    - pattern: included-tag
+      include: true
   cancel_previous_builds: false  # Set to `true` to automatically cancel outdated webhook builds
 ```
 

commit 3dec81a2c9161489c44c1a9a0f6441d4f224cee5
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Apr 20 15:31:29 2021 +0300

    GitHub integration changes (#311)
    
    * GH OAuth to GH App migration guide
    
    * Editing
    
    * remove wrong alias
    
    * Update singup page
    
    * Update disconnection info
    
    * Editing
    
    * Add example script for creating GitHub releases
    
    * Formatting
    
    * updates
    
    * Update GitHub release docs
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>
    Co-authored-by: Priit Lätt <lattpriit@gmail.com>

diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 8a2b33b..238200a 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -1,80 +1,60 @@
 ---
-title: Signing up to Codemagic
+title: Signup and repository integrations
 weight: 1
 aliases:
   - '../getting-started/codemagic-github-app'
   - '../getting-started/github-organization-accounts'
 ---
 
-You can sign up to Codemagic using a [GitHub](https://github.com/), [Bitbucket](https://bitbucket.org/) or [GitLab](https://about.gitlab.com/) account or a regular email address. After signup, you can add apps from any self-hosted or cloud-based Git repository, see [Adding repositories](./adding-apps-from-custom-sources).
+You can sign up to Codemagic using a [GitHub](https://github.com/), [Bitbucket](https://bitbucket.org/) or [GitLab](https://about.gitlab.com/) account or an email address. After signup, you can connect different repository providers and add apps from any self-hosted or cloud-based Git repository, see [Adding repositories](./adding-apps-from-custom-sources).
+## GitHub
 
-## Sign up via GitHub
-
-Codemagic offers two types of integration with GitHub.
-
-* Select **All repositories** to sign up via OAuth. This integration requires read/write access to your repositories and is the preferred integration method if you're looking to publish GitHub releases or push tags to the repository.
-
-* Select **Selected repositories only** to sign up using Codemagic GitHub app. This integration requires read access to your code and you can grant access to selected repositories only. Note that you will also need to [install the Codemagic CI/CD GitHub app](https://github.com/apps/codemagic-ci-cd) to share repositories. This is the preferred integration method if you want to use GitHub Checks. Read more about the integration [here](#selected-repositories-github-app).
-
-### All repositories (OAuth)
-
-When authenticating via OAuth, Codemagic asks for **read/write** permission to access your GitHub repositories and create webhooks for automatic building. Write permission is also required for pushing tags to the repository. 
-
-You will need to authorize Codemagic to connect the GitHub account to your Codemagic account. Once you log in to Codemagic, you will see all your GitHub repositories listed.
+On signup, you will be asked to authorize Codemagic to authenticate yourself without granting access to any repositories. To have your GitHub repositories available in Codemagic, connect the GitHub App integration.
 
 {{<notebox>}}
-**Can't see your GitHub organization repositories?**
-
-Organizations can restrict access to third-party OAuth applications. As a member, you can request that organization admins authorize the application for use in that organization.
-
-1. In your GitHub settings, navigate to **Organization settings** > **Third-party access**.
-2. If you don't see Codemagic listed there, go to **Personal settings** > **Applications** > **Authorized OAuth Apps**.
-3. Click on the Codemagic app.
-4. Under **Organization access**, click **Request access** > **Request approval from owners**.
-
-Read more about [GitHub organizations and OAuth app restrictions](https://help.github.com/en/articles/authorizing-oauth-apps#oauth-apps-and-organizations).
+The GitHub OAuth integration has been deprecated as of April 19, 2021. Codemagic now uses the GitHub App to integrate with GitHub, see the [migration guide](../knowledge-base/migrate-to-github-app/).
 {{</notebox>}}
+### Connecting the GitHub App integration
 
-### Selected repositories (GitHub app)
-
-With the GitHub app integration, you have more control over the repositories you share with Codemagic, and instead of write access, only **read** access to your code is required.
+Codemagic uses the [Codemagic CI/CD GitHub App](https://github.com/apps/codemagic-ci-cd) to integrate with GitHub. To share your GitHub repositories with Codemagic, Codemagic GitHub App will have to be installed on the account or organization in GitHub from which you would like to build applications.
 
 {{<notebox>}}
-If you already have a Codemagic account, you can enable the GitHub app integration in your **User settings > Integrations** for your personal account or in **Team settings > Team integrations** for your team.
+Note that the GitHub App integration can be connected separately for your personal account and each team. The integrations configured for your personal account apply to the apps that are not part of a team in Codemagic. While teams inherit the integrations from team owner's personal account, it is highly recommended to set up repository integrations separately in team settings.
 {{</notebox>}}
 
-1. Click **GitHub** at [codemagic.io/signup](https://codemagic.io/signup) and select **Selected repositories only** to sign up via Codemagic GitHub app. 
-2. Click **Authorize Codemagic** to verify your identity. You will be authenticated via GitHub without granting access to any of your repositories.
-3. In Codemagic, click **Install GitHub App** on the Applications page. If you already have another repository integration enabled for your personal account, you can find the installation button in **User settings > Integrations > Install GitHub App**. 
-4. Click **Finish installation** and then **Install app**. You will be then redirected to GitHub to proceed with installation.
-5. Next, select the GitHub account or organization where you want to install the app.
-6. Select whether to grant access to **All repositories** or select the repositories to share by choosing **Only select repositories**.
-7. Click **Install & Authorize** (you may be asked to confirm that action by entering your password). After successful installation, you will be redirected back to Codemagic and you can see the status for the GitHub app integration as connected. If you do not have the permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation of the app.
+1. In your user or team settings in Codemagic, navigate to the Integrations section and locate the GitHub App integration. The next steps may vary slightly depending on whether you have already authorized Codemagic or have the Codemagic GitHub App installed.
+2. Click **Connect** next to the GitHub App integration, and when redirected to GitHub, click **Authorize Codemagic**.
+3. Back in the Integrations section, click **Finish installation** and then **Install app**. Note that at this stage you can also revoke your authorization of the app by clicking **Disconnect**.
+4. A popup window opens for you to select the organization or account where to install the app. Pick the installation location. You can later install the app to additional accounts.
+5. Then choose whether to share **All repositories** from the account or select the repositories to share by choosing **Select repositories only**.
+6. Click **Install & Authorize** to finish installation (you may be asked to confirm that action by entering your password). If you do not have the permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation.
 
-#### Configuring accounts and repositories
+### Managing connected GitHub accounts and organizations
 
-If you want to install Codemagic GitHub app to another GitHub account/organization or change repository access settings, e.g. add new repositories, navigate to the integrations section and click **Manage integration > Configure**. Then select an account to configure. Make the necessary changes and click **Save**.
+In the Integrations section in your user or team settings, click **Manage integration > Configure**. You can then select an account to configure or install Codemagic GitHub App to additional accounts. The accounts that already have Codemagic GitHub App hinstalled are marked with "Configure". 
 
-You can access the same settings in GitHub by navigating to **GitHub > Settings > Applications > Installed GitHub Apps > Codemagic CI/CD** or going directly to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd) and clicking **Configure**. Note that the settings you configure in Codemagic CI/CD GitHub app prevail over the GitHub OAuth integration settings.
+![Integrations > GitHub App > Manage integration > Configure](../uploads/gh-app-conf.png)
 
-If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter.
+You can also access the same settings in GitHub by going directly to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd) and clicking **Configure**.
 
-#### Team apps
+These settings allow you to revisit your repository access configuration should you want to share access to additional repositories or revoke access to a previously shared repository. In addition, you can disconnect an account by clicking **Uninstall** in the danger zone.
 
-The repository access settings configured in Codemagic GitHub app apply to the repositories you share in your Codemagic team only if:
+If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter.
 
-* GitHub App integration is connected in **Team settings > Team integrations**.
-* The primary team owner has connected the GitHub App integration for their personal account in **User settings > Integrations** and the team has not enabled the GitHub (OAuth) integration. If the regular GitHub integration is enabled for the team, the connected account makes use of OAuth permissions and the restrictions you configure in GitHub App do not apply.
+### Disconnecting Codemagic GitHub app integration
 
-{{<notebox>}}
-Currently, Codemagic has no way of knowing whether it has access to team apps before the build is started. Due to this, team apps to which you have revoked access in the GitHub app may not appear grayed out in the UI.
-{{</notebox>}}
+The Codemagic CI/CD GitHub App integration can be disabled by clicking **Manage integration > Disconnect** in **User settings > Integrations > GitHub App** for your personal account or in **Team settings > Team Integrations > GitHub App** to disconnect it from the team. This annuls all settings configured for the Codemagic app in GitHub but won't delete your buid history. 
 
-#### Diconnecting Codemagic GitHub app integration
+The GitHub app integration is also disabled when you **uninstall** the Codemagic CI/CD app in GitHub. You can still log in to Codemagic with the GitHub App and see your build history if Codemagic CI/CD remains an **authorized GitHub app** in GitHub. 
 
-The Codemagic CI/CD GitHub App integration can be disabled by clicking **Manage integration > Disconnect** in **User settings > Integrations > GitHub App** for your personal account or in **Team settings > Team Integrations > GitHub App** to disconnect it from the team. This annuls all settings configured for the Codemagic app in GitHub but won't delete your buid history. 
+### Repository is unavailable
 
-The GitHub app integration is also disabled when you **uninstall** the Codemagic CI/CD app in GitHub. You can still log in to Codemagic with the GitHub app and see your build history if Codemagic CI/CD remains an **authorized GitHub app** in GitHub. Please note that unless you have other active integrations (e.g. GitHub, Bitbucket or GitLab OAuth integration), your Codemagic account will be deleted in two weeks. You can cancel account deletion by navigating to **User settings > Delete account** and clicking **Cancel deletion** before the two weeks are up.
+Here are some tips on what to check if you can't see your repository listed in Codemagic or it's shown as unavailable.
+
+* If you chose to grant access to **select repositories only** as opposed to all repositories when setting up the GitHub App, make sure you have also granted access to the repository in question. Click **Manage integration > Configure** in team or user integrations to configure repository access settings.
+* Your personal Codemagic account and each team have separate integrations. Make sure you have connected the GitHub App integration in the right team or in your user settings.
+* If you build apps from different GitHub accounts or organizations, make sure that you have installed the GitHub App on the account that has the repository available. Click **Manage integration > Configure** to see which accounts have been connected. You can also visit [https://github.com/settings/installations](https://github.com/settings/installations) for personal accounts or [https://github.com/organizations/codemagic-ci-cd/settings/installations](https://github.com/organizations/codemagic-ci-cd/settings/installations) for organization accounts to check whether Codemagic CI/CD is listed both under installed and authorized GitHub Apps.
+* Private GitHub repositories can be shared with Codemagic only when the GitHub App is installed on the account that owns the repository. If you are a collaborator to a private repository, please ask the repository owner to install Codemagic GitHub App in GitHub: [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd)
 
 ## Sign up via Bitbucket or GitLab
 
@@ -87,10 +67,9 @@ You will need to authorize Codemagic to connect the Bitbucket/GitLab account to
 Enter your email address and name and click **Create account** to get started. Codemagic will then send a six-character authentication key on the provided email address. Enter the authentication key and click **Continue** to verify the email address and finish signup. Note that an unused key expires in 10 minutes. 
 
 You will be sent a new authentication key every time you need to log in again.
-
 ## Connecting several repository integrations
 
-You can connect several repository accounts (GitHub, GitHub app, GitLab, Bitbucket) with one Codemagic account or Codemagic team (read more about managing team integrations [here](../teams/teams/#managing-team-integrations)).
+Private repositories. You can connect several repository accounts (GitHub, GitHub app, GitLab, Bitbucket) with one Codemagic account or Codemagic team (read more about managing team integrations [here](../teams/teams/#managing-team-integrations)).
 
 1. Log in to Codemagic with the account you signed up.
 2. Click on your account avatar at the bottom left and open **User settings**.
diff --git a/content/knowledge-base/migrate-to-github-app.md b/content/knowledge-base/migrate-to-github-app.md
index 274f8a7..c7bbb9f 100644
--- a/content/knowledge-base/migrate-to-github-app.md
+++ b/content/knowledge-base/migrate-to-github-app.md
@@ -3,74 +3,34 @@ title: Migrating from GitHub OAuth to GitHub App
 weight: 1
 ---
 
-On April 19, 2021, Codemagic will deprecate the GitHub OAuth integration due to GitHub ending support for OAuth App integrations, you can read more about it [here](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/). We are asking everyone currently logging in and accessing their GitHub repositories in Codemagic via the GitHub OAuth integration to switch to the GitHub App to continue building their GitHub repositories after the deprecation date.
+On April 19, 2021, Codemagic deprecated the GitHub OAuth integration due to GitHub ending support for OAuth App integrations, you can read more about it [here](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/). If you used the GitHub OAuth integration, please switch to the GitHub App to continue building your GitHub repositories.
 
 ## Who needs to migrate?
 
-If you signed up or log in to Codemagic via GitHub (All repositories, OAuth), then this means we are using the OAuth integration to access the repositories on your GitHub account. In the Integrations section in your user or team settings, you can see the GitHub OAuth integration enabled.
-
-GitHub repositories accessed via OAuth are marked with a yellow warning icon in your list of applications. A warning is also displayed in the team settings if any of the apps shared in a team is accessed via the OAuth integration. Once the OAuth integration is removed, such repositories will no longer be accessible unless you switch to GitHub App.
+If you signed up or used to log in to Codemagic via GitHub (All repositories, OAuth), then this means we were using the OAuth integration to access the repositories on your GitHub account. A warning is displayed on the Applicactions page and also in the team settings if any of the apps shared in a team or on your personal account used the OAuth integration. Unless you switch to GitHub App and share access to these repositories, they will remain unavailable.
 
 Deprecating OAuth does not affect GitHub repositories that are added over SSH or HTTPS.
 
 ## GitHub OAuth vs GitHub App
 
-The key difference between OAuth and GitHub App integrations is the scope of permissions. While OAuth requires you to grant Codemagic **write access** to all your repositories, the GitHub App integration requests only **read access** to your code and you can select which repositories you share with Codemagic.
+The key difference between OAuth and GitHub App integrations is the scope of permissions. While OAuth requires you to grant Codemagic a very broad scope of permissions which included **write access** to all your repositories, the GitHub App integration requests only **read access** to your code and you can select which repositories you share with Codemagic.
 
 In addition, the GitHub App integration will also make it possible to use [GitHub Checks](../building/github-checks).
 
-### Deprecting GitHub releases in Flutter workflow editor
-
-Without write access to the repository, Codemagic will no longer be able to push GitHub releases without additional configuration. Therefore, we will be removing the GitHub releases section from Flutter workflow editor. You can continue to publish GitHub releases by setting up a personal access token and using a custom script in the **Pre-publish** step.
-
-1. Create a personal access token in GitHub as described [here](https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token).
-2. Save it as an environment variable with the name `GITHUB_TOKEN`.
-3. Add the following custom script in the **pre-publish** step that publishes the artifacts with tag builds.
-
-```bash
-#!/usr/bin/env zsh
-
-# Publish only for tag builds
-if [ -z ${FCI_TAG} ]; then
-   echo "Not a tag build will not publish GitHub release"
-   exit 0
-fi
+### Changes related to publishing GitHub releases
 
-# See more options about `gh release create` usage from GitHub CLI
-# official docs at https://cli.github.com/manual/gh_release_create
+Without write access to the repository, Codemagic will no longer be able to push GitHub releases without additional configuration. Publishing GitHub releases now requires setting up a [personal access token](https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token) in GitHub and saving it as an environment variable in Codemagic.
 
-gh release create "${FCI_TAG}" \
-    --title "<Your Application Name> ${FCI_TAG}" \
-    --notes-file changelog.md
-    path/to/build-artifact.ipa \
-    path/to/build-artifact.apk
+Due to these changes, **we will be removing the GitHub releases section from Flutter workflow editor**. You can continue to publish GitHub releases by setting up a personal access token and using a custom script in the **Pre-publish** step. See the instructions [here](../publishing/github-release/).
 
-# Note that you don't need to include title and changelog if you do not want to.
-# Any number of artifacts can be included with the release.
-```
+For builds configured in `codemagic.yaml`, update your configuration by saving the personal access token to the `environment` section, see more details [here](../publishing-yaml/distribution/#github-releases). 
 
 ## Switching to GitHub App
 
 From April 19 onwards, users logging in to Codemagic with their GitHub account will be prompted to authorize and install the GitHub App if they do not already have it installed.
 
-If you log in via email, Bitbucket or GitLab but have repositories that are accessed via the GitHub OAuth integration, you should enable the GitHub App integration in your user or team settings.
-
-### Enabling the GitHub App intgeration in Codemagic
-
-GitHub App can be enabled separately for your **personal account** in Codemagic user settings or for a **team** in team settings. The steps may vary slightly depending on whether the app has been already authorized or installed on your GitHub account or not.
+If you log in via email, Bitbucket or GitLab but have repositories that are accessed via the GitHub OAuth integration, you should enable the GitHub App integration in your user or team settings. Note that GitHub App must be enabled separately for your **personal account** in Codemagic user settings and each **team** in team settings. 
 
 {{<notebox>}}
-Note that teams use team owner's integrations configured in their user settings if no integrations are connected in Team integrations. We recommend setting up the integrations for teams in Team integrations.
+See how to connect the GitHub App integration, manage access to accounts and repositories and troubleshoot issues with repository access [here](../getting-started/signup/#connecting-the-github-app-integration).
 {{</notebox>}}
-
-1. In your team or user settings, navigate to the integrations section.
-2. Click **Connect** next to the GitHub App integration.
-3. You will be redirected to GitHub to authorize Codemagic, click **Authorize Codemagic**.
-4. Back in the Integrations section, click **Finish installation** and then **Install app**. Note that at this stage you can also revoke your authorization of the app by clicking **Disconnect**.
-5. A popup window opens for you to select the organization or account where to install the app. Pick the installation location.
-6. Then choose whether to share **All repositories** from the account or configure the repositories to share by choosing **Select repositories only**.
-7. Click **Install & Authorize** to finish installation (you may be asked to confirm that action by entering your password).
-
-    If you do not have the permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation of the app.
-
-Once you have successfully enabled the GitHub App integration, you can click **Manage integration** in Integrations to install the app to another account, configure the shared repositories or disconnect the integration.
diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index a276f9b..b30e284 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -108,23 +108,33 @@ publishing:
 
 Publishing GitHub releases is available for GitHub repositories only.
 
-Publishing happens only for successful builds triggered on tag creation and is unavailable for manual builds.
-
-Note that using `*` wildcard in the beginning of the pattern requires quotation marks around the pattern, otherwise it will violate the `yaml` syntax.
-
-```yaml
-publishing:
-  github_releases:
-    prerelease: false
-    artifact_patterns:
-      - app-release.apk
-      - '*.aab'
-```
-
 {{<notebox>}}
-Note that Codemagic needs **write** permission to be able to publish a GitHub release. If you have signed up via Codemagic GitHub app or have enabled the GitHub app integration, publishing to GitHub is not possible as Codemagic only has **read** access to the repository. If you wish to publish GitHub releases, we recommend you authenticate via OAuth and remove the GitHub app integration in user or team settings as otherwise the GitHub app limitations will prevail. Read more about the signup options [here](../getting-started/signup).
+As of deprecating the GitHub OAuth integration, Codemagic no longer has write access to the repositories. Setting up a personal access token is needed to publish releases to GitHub.
 {{</notebox>}}
 
+Publishing happens only for successful builds triggered on tag creation and is unavailable for manual builds.
+
+1. Create a personal access token in GitHub as described [here](https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token).
+2. Add the personal access token as an environment variable with the name `GITHUB_TOKEN` in the `environment` section.
+3. In the `triggering` section, configure triggering on tag creation. Don't forget to add a branch pattern and ensure the webhook exists.
+
+  ```yaml
+  triggering:
+    events:
+      - tag
+  ```
+
+4. Set up publishing to GitHub releases in the `publishing` section and specify the artifacts to publish. If this is a prerelease build, set `prerelease` to true.  Note that using the `*` wildcard in the beginning of the pattern requires quotation marks around the pattern, otherwise it will violate the `yaml` syntax.
+
+  ```yaml
+  publishing:
+    github_releases:
+      prerelease: false
+      artifact_patterns:
+        - app-release.apk
+        - '*.aab'
+  ```
+
 ## Publishing a Flutter package to pub.dev
 
 In order to get publishing permissions, first you will need to log in to pub.dev locally. It can be done with running `pub publish --dry-run`.
diff --git a/content/publishing/github-release.md b/content/publishing/github-release.md
index d2212e9..3b35d6f 100644
--- a/content/publishing/github-release.md
+++ b/content/publishing/github-release.md
@@ -8,31 +8,36 @@ Codemagic enables you to automatically create a GitHub release and upload genera
 
 ## Requirements
 
-1. The setting is only available for GitHub repositories. 
-2. You need to enable automatic build triggering on tag creation. This setting can be found in **App settings > Build triggers > Trigger on tag creation**. Don't forget to add a branch pattern and ensure the webhook exists.
-
-## Setting up GitHub release publishing
-
-The setting can be found in **App settings > Publish > GitHub releases**. To enable it, check the **Create a release and publish artifacts** checkbox. To notify users that the release is not ready for production and may be unstable, mark it as **pre-release** by enabling checkbox **Mark build as pre-release**.
+Publishing GitHub releases is available for GitHub repositories only. Publishing to GitHub happens only for successful builds triggered on tag creation and is unavailable for manual builds. 
 
 {{<notebox>}}
-
-Publishing to GitHub happens only for successful builds triggered on tag creation and is unavailable for manual builds. 
-
+The UI section for setting up publishing GitHub releases is deprecated in Flutter workflow editor. To continue to publish GitHub releases, please follow the instructions below.
 {{</notebox>}}
 
-You can control which of the generated artifacts will be uploaded to the created release by defining artifact name glob patterns. You can use a specific name, e.g. `app-release.apk` or use glob patterns. Two patterns, `*.apk` and `*.ipa`, are added by default. To add a new pattern, enter the pattern and click **Add**. Don't forget to click **Save** when you are done. Note that you can delete added patterns anytime.
+1. Create a personal access token in GitHub as described [here](https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token).
+2. In the Environment section in Codemagic, save the personal access token as an environment variable with the name `GITHUB_TOKEN`.
+3. In the Build triggers section, select **Trigger on tag creation**. Don't forget to add a branch pattern and ensure the webhook exists.
+4. Add the following custom script in the **pre-publish step** that publishes the artifacts with tag builds. Edit the placeholders like your application name and the path to build artifacts to match your setup.
 
-{{<notebox>}}
-
-The following pattern wildcards are supported:
+    ```bash
+    #!/usr/bin/env zsh
 
-`*`      matches everything
+    # Publish only for tag builds
+    if [ -z ${FCI_TAG} ]; then
+    echo "Not a tag build will not publish GitHub release"
+    exit 0
+    fi
 
-`?`       matches any single character
+    # See more options about `gh release create` usage from GitHub CLI
+    # official docs at https://cli.github.com/manual/gh_release_create
 
-`[seq]`   matches any character in seq
+    gh release create "${FCI_TAG}" \
+        --title "<Your Application Name> ${FCI_TAG}" \
+        --notes-file changelog.md
+        path/to/build-artifact.ipa \
+        path/to/build-artifact.apk
 
-`[!seq]`  matches any character not in seq
+    # Note that you don't need to include title and changelog if you do not want to.
+    # Any number of artifacts can be included with the release.
+    ```
 
-{{</notebox>}}
diff --git a/content/uploads/gh-app-conf.png b/content/uploads/gh-app-conf.png
new file mode 100644
index 0000000..1cb0c85
Binary files /dev/null and b/content/uploads/gh-app-conf.png differ

commit e39a7dcd09094af4016b32f9ed043b120116315f
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Sat Apr 17 10:55:16 2021 +0200

    update flutter version, fix free space report for xcode-12 instances (#308)

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index f7a0fc1..e1cf2ca 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -24,7 +24,7 @@ weight: 5
 - curl `7.68.0`
 - docker `20.10.2`
 - firebase `9.1.0`
-- flutter `2.0.4 ($HOME/programs/flutter)`
+- flutter `2.0.5 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.25.1`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index 2f4828d..5057eac 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -27,7 +27,7 @@ weight: 4
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `2.0.4 ($HOME/programs/flutter)`
+- flutter `2.0.5 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - gh `1.8.1`
 - git `2.28.0`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 15cbc6a..96f3c19 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -15,7 +15,7 @@ weight: 3
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 86GB)`
+- Disk `322GB (Free Space: 28GB)`
 
 ## Pre-installed tools
 
@@ -27,7 +27,7 @@ weight: 3
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `2.0.4 ($HOME/programs/flutter)`
+- flutter `2.0.5 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.30.0`
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 1891fb4..369d731 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -27,7 +27,7 @@ weight: 2
 - docker `20.10.2`
 - fastlane `2.176.0`
 - firebase `9.3.0`
-- flutter `2.0.4 ($HOME/programs/flutter)`
+- flutter `2.0.5 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - gh `1.8.1`
 - git `2.30.1`

commit 940cdc599e2a28f483ae3ecf0a85196a2218c688
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Thu Apr 15 11:30:43 2021 +0200

    remove dart, add snapcraft to linux and update free space report (#307)

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index f00ef03..f7a0fc1 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -15,14 +15,13 @@ weight: 5
 
 - System version `Ubuntu 20.04.1 LTS`
 - Kernel version `5.4.0-1036-gcp`
-- Disk `97GB (Free Space: 60GB)`
+- Disk `97GB (Free Space: 62GB)`
 
 ## Pre-installed tools
 
 - Android tools `/usr/local/share/android-sdk`
 - aws `1.18.69`
 - curl `7.68.0`
-- dart `2.10.5`
 - docker `20.10.2`
 - firebase `9.1.0`
 - flutter `2.0.4 ($HOME/programs/flutter)`
@@ -37,6 +36,7 @@ weight: 5
 - python `3.8.5`
 - ruby `2.7.2p137`
 - ssh
+- snapcraft `4.6.2`
 - sudo
 - tar
 - unzip
diff --git a/content/specs/versions.md b/content/specs/versions.md
index 94eedf9..2f4828d 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -15,7 +15,7 @@ weight: 4
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 61GB)`
+- Disk `322GB (Free Space: 60GB)`
 
 ## Pre-installed tools
 
@@ -24,7 +24,6 @@ weight: 4
 - cocoapods `1.10.1`
 - cordova `8.1.2`
 - curl
-- dart `2.9.2`
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index ff3943d..15cbc6a 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -15,7 +15,7 @@ weight: 3
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 29GB)`
+- Disk `322GB (Free Space: 86GB)`
 
 ## Pre-installed tools
 
@@ -24,7 +24,6 @@ weight: 3
 - cocoapods `1.10.1`
 - cordova `10.0.0`
 - curl
-- dart `2.10.5`
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 20d3056..1891fb4 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -15,7 +15,7 @@ weight: 2
 
 - System version `macOS 11.2 (20D64)`
 - Kernel version `Darwin 20.3.0`
-- Disk `322GB (Free Space: 99GB)`
+- Disk `322GB (Free Space: 98GB)`
 
 ## Pre-installed tools
 
@@ -24,7 +24,6 @@ weight: 2
 - cocoapods `1.10.1`
 - cordova `10.0.0`
 - curl
-- dart `2.10.5`
 - docker `20.10.2`
 - fastlane `2.176.0`
 - firebase `9.3.0`

commit 75ac27c1c2a2e0260ca7051dcb95bce37c067061
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Wed Apr 14 12:39:19 2021 +0300

    remove example (#305)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/knowledge-base/validate-yaml.md b/content/knowledge-base/validate-yaml.md
index 17b124b..3034908 100644
--- a/content/knowledge-base/validate-yaml.md
+++ b/content/knowledge-base/validate-yaml.md
@@ -8,43 +8,9 @@ Using the Codemagic JSON schema, you can validate your `codemagic.yaml` for stru
 
 The JSON schema does not validate the maximum build duration value, software version values, credentials, environment variable values or whether you have access to any paid features.
 
-Codemagic JSON schema is available out of the box in the IDEs that are integrated with [schemastore.org](http://schemastore.org/).
+Codemagic JSON schema is available out of the box in the IDEs that are integrated with [schemastore.org](http://schemastore.org/), e.g. Android Studio and Visual Studio Code.
 
-To set up validation manually, you need:
+If your IDE does not have the Codemagic JSON schema available by default, you can set up validation manually. To do so:
 
-* YAML language support in the IDE
-* To configure the IDE to use the Codemagic JSON schema for validation available at [https://static.codemagic.io/codemagic-schema.json](https://static.codemagic.io/codemagic-schema.json)
-
-## How to set up validation in Visual Studio Code
-
-This is an example of using the Codemagic JSON schema for validating codemagic.yaml in Visual Studio Code.
-
-1. In VS Code, make sure you have installed and enabled an extension for YAML language support, e.g. **redhat.vscode-yaml**.
-2. Then navigate to **Code > Preferences > Settings > Extensions > YAML**.
-3. Scroll to the **Yaml: Schemas** section and click **Edit in settings.json**.
-4. Append the follwing snippet to the end of the file:
-
-```json
-    "yaml.schemas": {
-        "https://static.codemagic.io/codemagic-schema.json": "codemagic.yaml"
-    }
-```
-
-The full contents of the `settings.json` file should look something like this:
-
-```json
-{
-    "git.confirmSync": false,
-    "git.autofetch": true,
-    "git.enableSmartCommit": true,
-    "workbench.sideBar.location": "left",
-    "editor.renderWhitespace": "none",
-    "diffEditor.ignoreTrimWhitespace": false,
-    "workbench.colorTheme": "Visual Studio Dark",
-    "yaml.schemas": {
-        "https://static.codemagic.io/codemagic-schema.json": "codemagic.yaml"
-    }
-}
-```
-
-5. Save the changes and reload the window or restart VS Code. Now, whenever you open a `codemagic.yaml`, any detected problems in the file will be underlined and the error message will be displayed on hover.
\ No newline at end of file
+* make sure you have YAML language support in the IDE
+* configure the IDE to use the Codemagic JSON schema for validation available at [https://static.codemagic.io/codemagic-schema.json](https://static.codemagic.io/codemagic-schema.json)

commit 4a7808913f449a9aa8a55ff18051e320c8d358ec
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Wed Apr 14 12:07:00 2021 +0300

    Add page about yaml validation (#303)
    
    * Add pge about yaml validation
    
    * Link to validation from yaml guide
    
    * updates
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 31bb776..5408d02 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -21,6 +21,10 @@ Builds can be also started manually by clicking **Start new build** in Codemagic
 
 `codemagic.yaml` follows the traditional [YAML syntax](https://yaml.org/). Here are a few tips and tricks on how to better structure the file.
 
+{{<notebox>}}
+Use the Codemagic JSON schema to validate `codemagic.yaml` in your IDE, see how to set it up [here](../knowledge-base/validate-yaml/).
+{{</notebox>}}
+
 ### Section names
 
 For easier reading of the configuration file and build logs, you can divide the scripts into meaningful sections with descriptive names.
diff --git a/content/knowledge-base/validate-yaml.md b/content/knowledge-base/validate-yaml.md
new file mode 100644
index 0000000..17b124b
--- /dev/null
+++ b/content/knowledge-base/validate-yaml.md
@@ -0,0 +1,50 @@
+---
+title: Validating codemagic.yaml locally
+description:
+weight: 7
+---
+
+Using the Codemagic JSON schema, you can validate your `codemagic.yaml` for structure and syntax errors right in your IDE. The same level of validation is carried out on the frontend in the YAML editor in your project settings. 
+
+The JSON schema does not validate the maximum build duration value, software version values, credentials, environment variable values or whether you have access to any paid features.
+
+Codemagic JSON schema is available out of the box in the IDEs that are integrated with [schemastore.org](http://schemastore.org/).
+
+To set up validation manually, you need:
+
+* YAML language support in the IDE
+* To configure the IDE to use the Codemagic JSON schema for validation available at [https://static.codemagic.io/codemagic-schema.json](https://static.codemagic.io/codemagic-schema.json)
+
+## How to set up validation in Visual Studio Code
+
+This is an example of using the Codemagic JSON schema for validating codemagic.yaml in Visual Studio Code.
+
+1. In VS Code, make sure you have installed and enabled an extension for YAML language support, e.g. **redhat.vscode-yaml**.
+2. Then navigate to **Code > Preferences > Settings > Extensions > YAML**.
+3. Scroll to the **Yaml: Schemas** section and click **Edit in settings.json**.
+4. Append the follwing snippet to the end of the file:
+
+```json
+    "yaml.schemas": {
+        "https://static.codemagic.io/codemagic-schema.json": "codemagic.yaml"
+    }
+```
+
+The full contents of the `settings.json` file should look something like this:
+
+```json
+{
+    "git.confirmSync": false,
+    "git.autofetch": true,
+    "git.enableSmartCommit": true,
+    "workbench.sideBar.location": "left",
+    "editor.renderWhitespace": "none",
+    "diffEditor.ignoreTrimWhitespace": false,
+    "workbench.colorTheme": "Visual Studio Dark",
+    "yaml.schemas": {
+        "https://static.codemagic.io/codemagic-schema.json": "codemagic.yaml"
+    }
+}
+```
+
+5. Save the changes and reload the window or restart VS Code. Now, whenever you open a `codemagic.yaml`, any detected problems in the file will be underlined and the error message will be displayed on hover.
\ No newline at end of file

commit 32d8b00f0cc50693c8c58ea368b13626a664d3fd
Author: Priit Lätt <priit@nevercode.io>
Date:   Tue Apr 13 17:07:50 2021 +0300

    Base image update @ 13-04-2021 (#304)
    
    * Base image update @ 13-04-2021
    
    * Update content/specs/versions3.md

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index 0247c61..f00ef03 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -27,6 +27,7 @@ weight: 5
 - firebase `9.1.0`
 - flutter `2.0.4 ($HOME/programs/flutter)`
 - gem `3.1.4`
+- gh `1.8.1`
 - git `2.25.1`
 - ionic `5.4.16`
 - jq `jq-1.6`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index c66a3e0..94eedf9 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -1,5 +1,5 @@
 ---
-description: A list of tools available out-of-the-box on Codemagic build machines
+description: A list of tools available out-of-the-box on Codemagic build machines.
 title: macOS build machine specification (Xcode 11.x)
 aliases:
   - '../releases-and-versions/versions'
@@ -15,7 +15,7 @@ weight: 4
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 57GB)`
+- Disk `322GB (Free Space: 61GB)`
 
 ## Pre-installed tools
 
@@ -30,9 +30,10 @@ weight: 4
 - firebase `7.6.2`
 - flutter `2.0.4 ($HOME/programs/flutter)`
 - gem `3.0.3`
+- gh `1.8.1`
 - git `2.28.0`
 - gradle `6.1.1`
-- homebrew `3.0.4`
+- homebrew `3.1.0`
 - ionic `4.11.0`
 - jq
 - node `12.14.0`
@@ -60,6 +61,7 @@ weight: 4
     - Tag/API: `google_apis/x86`
     - Skin: `pixel_2`
     - Sdcard: `512M`
+
 ## Java versions
 
 - **14**: version `14.0.2`, JVM `OpenJDK 14.0.2`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 1499018..ff3943d 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -1,5 +1,5 @@
 ---
-description: A list of tools available out-of-the-box on Codemagic build machines
+description: A list of tools available out-of-the-box on Codemagic build machines.
 title: macOS build machine specification (Xcode 12.0 - 12.4)
 aliases:
   - '../releases-and-versions/versions2'
@@ -15,7 +15,7 @@ weight: 3
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 26GB)`
+- Disk `322GB (Free Space: 29GB)`
 
 ## Pre-installed tools
 
@@ -30,9 +30,10 @@ weight: 3
 - firebase `8.10.0`
 - flutter `2.0.4 ($HOME/programs/flutter)`
 - gem `3.1.4`
+- gh `1.8.1`
 - git `2.30.0`
 - gradle `6.1.1`
-- homebrew `3.0.4`
+- homebrew `3.1.0`
 - ionic `5.4.16`
 - jq
 - node `12.18.4`
@@ -60,6 +61,7 @@ weight: 3
     - Tag/API: `google_apis/x86`
     - Skin: `pixel_2`
     - Sdcard: `512M`
+
 ## Java versions
 
 - **15**: version `15.0.1`, JVM `Zulu 15.28.51`
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 29ab3f9..20d3056 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -1,166 +1,166 @@
----
-description: A list of tools available out-of-the-box on Codemagic build machines.
-title: macOS build machine specification (Xcode 12.5+)
-aliases:
-  - '../releases-and-versions/versions3'
-weight: 2
----
-
-## Hardware
-
-- Standard VM on Mac mini `2.3GHz Quad Core / 8GB`
-- Premium VM on Mac Pro `3.7GHz Quad Core / 32GB`
-
-## System
-
-- System version `macOS 11.2 (20D64)`
-- Kernel version `Darwin 20.3.0`
-- Disk `322GB (Free Space: 94GB)`
-
-## Pre-installed tools
-
-- Android tools `/usr/local/share/android-sdk`
-- aws `2.1.29`
-- cocoapods `1.10.1`
-- cordova `10.0.0`
-- curl
-- dart `2.10.5`
-- docker `20.10.2`
-- fastlane `2.176.0`
-- firebase `9.3.0`
-- flutter `2.0.4 ($HOME/programs/flutter)`
-- gem `3.1.4`
-- git `2.30.1`
-- gradle `6.1.1`
-- homebrew `3.0.4`
-- ionic `6.12.4`
-- jq
-- node `14.15.5`
-- npm `7.5.3`
-- python `3.8.7`
-- python3 `3.8.7`
-- ruby `2.7.2p137`
-- ssh
-- sudo
-- tar
-- unzip
-- wget
-- yarn `1.22.10`
-- yq
-- zip
-
-## Android emulators
-
-- **emulator**
-
-    - Device: `pixel_3a (Google)`
-    - Path: `/Users/builder/.android/avd/emulator.avd`
-    - Target: `Google Play (Google Inc.)`
-    - Based on: `Android 10.0 (Q)`
-    - Tag/API: `google_apis_playstore/x86`
-    - Skin: `pixel_3a`
-    - Sdcard: `512M`
-
-## Java versions
-
-- **15**: version `15.0.2`, JVM `Zulu 15.29.15`
-- **11**: version `11.0.10`, JVM `Zulu 11.45.27`
-- **1.8**: version `1.8.0_282`, JVM `Zulu 8.52.0.23`
-
-## Xcode 12.5 (12E5244e)
-
-This is the Xcode version used when you select `12.5` in build settings. Other available versions are listed [here](#other-xcode-versions).
-
-Xcode path: `/Applications/Xcode-12.5.app`
-
-With Xcode `12.5` build version `12E5244e` the following runtimes and devices are installed:
-
-### Runtimes
-
-- iOS 14.0
-- iOS 14.1
-- iOS 14.2
-- iOS 14.3
-- iOS 14.4
-- iOS 14.5
-- tvOS 14.0
-- tvOS 14.2
-- tvOS 14.3
-- tvOS 14.4
-- tvOS 14.5
-- watchOS 7.0
-- watchOS 7.1
-- watchOS 7.2
-- watchOS 7.4
-
-### Devices
-
-- iPhone 4s
-- iPhone 5
-- iPhone 5s
-- iPhone 6 Plus
-- iPhone 6
-- iPhone 6s
-- iPhone 6s Plus
-- iPhone SE (1st generation)
-- iPhone 7
-- iPhone 7 Plus
-- iPhone 8
-- iPhone 8 Plus
-- iPhone X
-- iPhone Xs
-- iPhone Xs Max
-- iPhone Xʀ
-- iPhone 11
-- iPhone 11 Pro
-- iPhone 11 Pro Max
-- iPhone SE (2nd generation)
-- iPhone 12 mini
-- iPhone 12
-- iPhone 12 Pro
-- iPhone 12 Pro Max
-- iPod touch (7th generation)
-- iPad 2
-- iPad Retina
-- iPad Air
-- iPad mini 2
-- iPad mini 3
-- iPad mini 4
-- iPad Air 2
-- iPad Pro (9.7-inch)
-- iPad Pro (12.9-inch) (1st generation)
-- iPad (5th generation)
-- iPad Pro (12.9-inch) (2nd generation)
-- iPad Pro (10.5-inch)
-- iPad (6th generation)
-- iPad (7th generation)
-- iPad Pro (11-inch) (1st generation)
-- iPad Pro (12.9-inch) (3rd generation)
-- iPad Pro (11-inch) (2nd generation)
-- iPad Pro (12.9-inch) (4th generation)
-- iPad mini (5th generation)
-- iPad Air (3rd generation)
-- iPad (8th generation)
-- iPad Air (4th generation)
-- Apple TV
-- Apple TV 4K
-- Apple TV 4K (at 1080p)
-- Apple Watch - 38mm
-- Apple Watch - 42mm
-- Apple Watch Series 2 - 38mm
-- Apple Watch Series 2 - 42mm
-- Apple Watch Series 3 - 38mm
-- Apple Watch Series 3 - 42mm
-- Apple Watch Series 4 - 40mm
-- Apple Watch Series 4 - 44mm
-- Apple Watch Series 5 - 40mm
-- Apple Watch Series 5 - 44mm
-- Apple Watch SE - 40mm
-- Apple Watch SE - 44mm
-- Apple Watch Series 6 - 40mm
-- Apple Watch Series 6 - 44mm
-
-## Other Xcode versions
-
-- 12.4 (12D4e) `/Applications/Xcode-12.4.app`
-
+---
+description: A list of tools available out-of-the-box on Codemagic build machines.
+title: macOS build machine specification (Xcode 12.5+)
+aliases:
+  - '../releases-and-versions/versions3'
+weight: 2
+---
+
+## Hardware
+
+- Standard VM on Mac mini `2.3GHz Quad Core / 8GB`
+- Premium VM on Mac Pro `3.7GHz Quad Core / 32GB`
+
+## System
+
+- System version `macOS 11.2 (20D64)`
+- Kernel version `Darwin 20.3.0`
+- Disk `322GB (Free Space: 99GB)`
+
+## Pre-installed tools
+
+- Android tools `/usr/local/share/android-sdk`
+- aws `2.1.29`
+- cocoapods `1.10.1`
+- cordova `10.0.0`
+- curl
+- dart `2.10.5`
+- docker `20.10.2`
+- fastlane `2.176.0`
+- firebase `9.3.0`
+- flutter `2.0.4 ($HOME/programs/flutter)`
+- gem `3.1.4`
+- gh `1.8.1`
+- git `2.30.1`
+- gradle `6.1.1`
+- homebrew `3.1.0`
+- ionic `6.12.4`
+- jq
+- node `14.15.5`
+- npm `7.5.3`
+- python `3.8.7`
+- python3 `3.8.7`
+- ruby `2.7.2p137`
+- ssh
+- sudo
+- tar
+- unzip
+- wget
+- yarn `1.22.10`
+- yq
+- zip
+
+## Android emulators
+
+- **emulator**
+
+    - Device: `pixel_3a (Google)`
+    - Path: `/Users/builder/.android/avd/emulator.avd`
+    - Target: `Google Play (Google Inc.)`
+    - Based on: `Android 10.0 (Q)`
+    - Tag/API: `google_apis_playstore/x86`
+    - Skin: `pixel_3a`
+    - Sdcard: `512M`
+
+## Java versions
+
+- **15**: version `15.0.2`, JVM `Zulu 15.29.15`
+- **11**: version `11.0.10`, JVM `Zulu 11.45.27`
+- **1.8**: version `1.8.0_282`, JVM `Zulu 8.52.0.23`
+
+## Xcode 12.5 (12E5244e)
+
+This is the Xcode version used when you select `12.5` in build settings. Other available versions are listed [here](#other-xcode-versions).
+
+Xcode path: `/Applications/Xcode-12.5.app`
+
+With Xcode `12.5` build version `12E5244e` the following runtimes and devices are installed:
+
+### Runtimes
+
+- iOS 14.0
+- iOS 14.1
+- iOS 14.2
+- iOS 14.3
+- iOS 14.4
+- iOS 14.5
+- tvOS 14.0
+- tvOS 14.2
+- tvOS 14.3
+- tvOS 14.4
+- tvOS 14.5
+- watchOS 7.0
+- watchOS 7.1
+- watchOS 7.2
+- watchOS 7.4
+
+### Devices
+
+- iPhone 4s
+- iPhone 5
+- iPhone 5s
+- iPhone 6 Plus
+- iPhone 6
+- iPhone 6s
+- iPhone 6s Plus
+- iPhone SE (1st generation)
+- iPhone 7
+- iPhone 7 Plus
+- iPhone 8
+- iPhone 8 Plus
+- iPhone X
+- iPhone Xs
+- iPhone Xs Max
+- iPhone Xʀ
+- iPhone 11
+- iPhone 11 Pro
+- iPhone 11 Pro Max
+- iPhone SE (2nd generation)
+- iPhone 12 mini
+- iPhone 12
+- iPhone 12 Pro
+- iPhone 12 Pro Max
+- iPod touch (7th generation)
+- iPad 2
+- iPad Retina
+- iPad Air
+- iPad mini 2
+- iPad mini 3
+- iPad mini 4
+- iPad Air 2
+- iPad Pro (9.7-inch)
+- iPad Pro (12.9-inch) (1st generation)
+- iPad (5th generation)
+- iPad Pro (12.9-inch) (2nd generation)
+- iPad Pro (10.5-inch)
+- iPad (6th generation)
+- iPad (7th generation)
+- iPad Pro (11-inch) (1st generation)
+- iPad Pro (12.9-inch) (3rd generation)
+- iPad Pro (11-inch) (2nd generation)
+- iPad Pro (12.9-inch) (4th generation)
+- iPad mini (5th generation)
+- iPad Air (3rd generation)
+- iPad (8th generation)
+- iPad Air (4th generation)
+- Apple TV
+- Apple TV 4K
+- Apple TV 4K (at 1080p)
+- Apple Watch - 38mm
+- Apple Watch - 42mm
+- Apple Watch Series 2 - 38mm
+- Apple Watch Series 2 - 42mm
+- Apple Watch Series 3 - 38mm
+- Apple Watch Series 3 - 42mm
+- Apple Watch Series 4 - 40mm
+- Apple Watch Series 4 - 44mm
+- Apple Watch Series 5 - 40mm
+- Apple Watch Series 5 - 44mm
+- Apple Watch SE - 40mm
+- Apple Watch SE - 44mm
+- Apple Watch Series 6 - 40mm
+- Apple Watch Series 6 - 44mm
+
+## Other Xcode versions
+
+- 12.4 (12D4e) `/Applications/Xcode-12.4.app`

commit aa2bff71b694dbced013b5ed54a975dfb3ec4b65
Author: Chris Raastad <craastad@gmail.com>
Date:   Mon Apr 12 08:50:52 2021 -0700

    Add Flutter workflow editor code signing video (#298)

diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index b961f52..d90fe6c 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -96,3 +96,6 @@ You are required to upload your keystore file and provide details about your key
 3. Upload your release keystore file.
 4. Enter the **keystore password**, **key alias** and **key password**.
 5. Select **Enable Android code signing** at the top of the section to enable code signing.
+
+
+{{< youtube lYp9MAfouXE >}}

commit 22f1b67b7b56d7d073f50bc6f9b565f5bbb5e369
Author: Helina Ariva <helina@nevercode.io>
Date:   Mon Apr 12 18:46:41 2021 +0300

    editing

diff --git a/content/knowledge-base/migrate-to-github-app.md b/content/knowledge-base/migrate-to-github-app.md
index 2c07843..274f8a7 100644
--- a/content/knowledge-base/migrate-to-github-app.md
+++ b/content/knowledge-base/migrate-to-github-app.md
@@ -57,7 +57,7 @@ If you log in via email, Bitbucket or GitLab but have repositories that are acce
 
 ### Enabling the GitHub App intgeration in Codemagic
 
-GitHub App can be enabled separately for your **personal account** in Codemagic user settings or for a **team** in team settings.
+GitHub App can be enabled separately for your **personal account** in Codemagic user settings or for a **team** in team settings. The steps may vary slightly depending on whether the app has been already authorized or installed on your GitHub account or not.
 
 {{<notebox>}}
 Note that teams use team owner's integrations configured in their user settings if no integrations are connected in Team integrations. We recommend setting up the integrations for teams in Team integrations.

commit 8ebe2838fae866d7f689aa403d9634611328d4b0
Author: Helina Ariva <helina@nevercode.io>
Date:   Mon Apr 12 18:33:55 2021 +0300

    editing

diff --git a/content/knowledge-base/migrate-to-github-app.md b/content/knowledge-base/migrate-to-github-app.md
index 06d8f9c..2c07843 100644
--- a/content/knowledge-base/migrate-to-github-app.md
+++ b/content/knowledge-base/migrate-to-github-app.md
@@ -5,7 +5,7 @@ weight: 1
 
 On April 19, 2021, Codemagic will deprecate the GitHub OAuth integration due to GitHub ending support for OAuth App integrations, you can read more about it [here](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/). We are asking everyone currently logging in and accessing their GitHub repositories in Codemagic via the GitHub OAuth integration to switch to the GitHub App to continue building their GitHub repositories after the deprecation date.
 
-## Who are affected?
+## Who needs to migrate?
 
 If you signed up or log in to Codemagic via GitHub (All repositories, OAuth), then this means we are using the OAuth integration to access the repositories on your GitHub account. In the Integrations section in your user or team settings, you can see the GitHub OAuth integration enabled.
 

commit 125fd992b29f32412555ab241ca4e1eb9cd26ce7
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Mon Apr 12 18:30:24 2021 +0300

    Migrating from GH OAuth to GH App (#300)
    
    * GH OAuth to GH App migration guide
    
    * Editing
    
    * remove wrong alias
    
    * Update singup page
    
    * Update disconnection info
    
    * Editing
    
    * Add example script for creating GitHub releases
    
    * Formatting
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>
    Co-authored-by: Priit Lätt <lattpriit@gmail.com>

diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 04b6d17..8a2b33b 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -46,14 +46,16 @@ If you already have a Codemagic account, you can enable the GitHub app integrati
 1. Click **GitHub** at [codemagic.io/signup](https://codemagic.io/signup) and select **Selected repositories only** to sign up via Codemagic GitHub app. 
 2. Click **Authorize Codemagic** to verify your identity. You will be authenticated via GitHub without granting access to any of your repositories.
 3. In Codemagic, click **Install GitHub App** on the Applications page. If you already have another repository integration enabled for your personal account, you can find the installation button in **User settings > Integrations > Install GitHub App**. 
-4. You will be then redirected to GitHub to proceed with installation. Click **Install**.
+4. Click **Finish installation** and then **Install app**. You will be then redirected to GitHub to proceed with installation.
 5. Next, select the GitHub account or organization where you want to install the app.
 6. Select whether to grant access to **All repositories** or select the repositories to share by choosing **Only select repositories**.
-7. Click **Install & Authorize** (you may be asked to confirm that action by entering your password). After successful installation, you will be redirected back to Codemagic and you can see the status for the GitHub app integration as connected.
+7. Click **Install & Authorize** (you may be asked to confirm that action by entering your password). After successful installation, you will be redirected back to Codemagic and you can see the status for the GitHub app integration as connected. If you do not have the permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation of the app.
 
-#### Configuring accounts and repository access settings
+#### Configuring accounts and repositories
 
-If you want to install Codemagic GitHub app to another GitHub account/organization or change repository access settings, navigate to **GitHub > Settings > Applications > Installed GitHub Apps > Codemagic CI/CD** or go directly to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd) and click **Configure**. If there are issues with the integration, try disconnecting and connecting the integration in Codemagic. Note that the settings you configure in Codemagic CI/CD GitHub app prevail over the GitHub OAuth integration settings.
+If you want to install Codemagic GitHub app to another GitHub account/organization or change repository access settings, e.g. add new repositories, navigate to the integrations section and click **Manage integration > Configure**. Then select an account to configure. Make the necessary changes and click **Save**.
+
+You can access the same settings in GitHub by navigating to **GitHub > Settings > Applications > Installed GitHub Apps > Codemagic CI/CD** or going directly to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd) and clicking **Configure**. Note that the settings you configure in Codemagic CI/CD GitHub app prevail over the GitHub OAuth integration settings.
 
 If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter.
 
@@ -61,16 +63,16 @@ If you revoke access to previously shared repositories, you will still see all y
 
 The repository access settings configured in Codemagic GitHub app apply to the repositories you share in your Codemagic team only if:
 
-* GitHub app integration is connected in **Team settings > Team integrations**.
-* The primary team owner has connected the GitHub app integration for their personal account in **User settings > Integrations** and the team has not enabled the GitHub integration. If the regular GitHub integration is enabled for the team, the connected account makes use of OAuth permissions and the restrictions you configure in GitHub app do not apply.
+* GitHub App integration is connected in **Team settings > Team integrations**.
+* The primary team owner has connected the GitHub App integration for their personal account in **User settings > Integrations** and the team has not enabled the GitHub (OAuth) integration. If the regular GitHub integration is enabled for the team, the connected account makes use of OAuth permissions and the restrictions you configure in GitHub App do not apply.
 
 {{<notebox>}}
 Currently, Codemagic has no way of knowing whether it has access to team apps before the build is started. Due to this, team apps to which you have revoked access in the GitHub app may not appear grayed out in the UI.
 {{</notebox>}}
 
-#### Disabling Codemagic GitHub app integration
+#### Diconnecting Codemagic GitHub app integration
 
-The Codemagic CI/CD GitHub app integration can be disabled by clicking **Disconnect** in **User settings > Integrations > GitHub App** for your personal account or in **Team settings > Team Integrations > GitHub App** to disconnect it from the team. This annuls all settings configured for the Codemagic app in GitHub but won't delete your buid history.
+The Codemagic CI/CD GitHub App integration can be disabled by clicking **Manage integration > Disconnect** in **User settings > Integrations > GitHub App** for your personal account or in **Team settings > Team Integrations > GitHub App** to disconnect it from the team. This annuls all settings configured for the Codemagic app in GitHub but won't delete your buid history. 
 
 The GitHub app integration is also disabled when you **uninstall** the Codemagic CI/CD app in GitHub. You can still log in to Codemagic with the GitHub app and see your build history if Codemagic CI/CD remains an **authorized GitHub app** in GitHub. Please note that unless you have other active integrations (e.g. GitHub, Bitbucket or GitLab OAuth integration), your Codemagic account will be deleted in two weeks. You can cancel account deletion by navigating to **User settings > Delete account** and clicking **Cancel deletion** before the two weeks are up.
 
diff --git a/content/knowledge-base/add-a-git-tag-with-app-version.md b/content/knowledge-base/add-a-git-tag-with-app-version.md
index 3df105b..d4dc92d 100644
--- a/content/knowledge-base/add-a-git-tag-with-app-version.md
+++ b/content/knowledge-base/add-a-git-tag-with-app-version.md
@@ -1,6 +1,6 @@
 ---
 title: Adding a Git tag with app version
-weight: 2
+weight: 3
 aliases:
   - '../custom-scripts/add-a-git-tag-with-app-version'
 ---
diff --git a/content/knowledge-base/generating-an-ssh-key.md b/content/knowledge-base/generating-an-ssh-key.md
index 9f7b477..85bf966 100644
--- a/content/knowledge-base/generating-an-ssh-key.md
+++ b/content/knowledge-base/generating-an-ssh-key.md
@@ -1,7 +1,7 @@
 ---
 description: How to create a secure SSH key pair in terminal
 title: Generating an SSH key
-weight: 1
+weight: 2
 ---
 
 Different repository hosting services have different minimum requirements for the length of the SSH key, varying from 2048 bits to 4096 bits. We recommend creating a 4096 bit key for increased security. Run the command below in your terminal to create a 4096 bit SSH key:
diff --git a/content/knowledge-base/google-play-api.md b/content/knowledge-base/google-play-api.md
index 2a9f14e..4f40497 100644
--- a/content/knowledge-base/google-play-api.md
+++ b/content/knowledge-base/google-play-api.md
@@ -1,7 +1,7 @@
 ---
 title: Configuring Google Play API access
 description: How to set up a Google Play service account for Codemagic
-weight: 5
+weight: 6
 ---
 
 In order to allow Codemagic publish applications to Google Play, it is necessary to set up access using Google Play API. 
diff --git a/content/knowledge-base/load-firebase-configuration.md b/content/knowledge-base/load-firebase-configuration.md
index d856318..f690026 100644
--- a/content/knowledge-base/load-firebase-configuration.md
+++ b/content/knowledge-base/load-firebase-configuration.md
@@ -1,7 +1,7 @@
 ---
 description: How to load Firebase configuration files into environment variables in a Flutter workflow editor pre-build script
 title: Loading Firebase configuration
-weight: 3
+weight: 4
 aliases:
   - '../custom-scripts/load-firebase-configuration'
 ---
diff --git a/content/knowledge-base/migrate-to-github-app.md b/content/knowledge-base/migrate-to-github-app.md
new file mode 100644
index 0000000..06d8f9c
--- /dev/null
+++ b/content/knowledge-base/migrate-to-github-app.md
@@ -0,0 +1,76 @@
+---
+title: Migrating from GitHub OAuth to GitHub App
+weight: 1
+---
+
+On April 19, 2021, Codemagic will deprecate the GitHub OAuth integration due to GitHub ending support for OAuth App integrations, you can read more about it [here](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/). We are asking everyone currently logging in and accessing their GitHub repositories in Codemagic via the GitHub OAuth integration to switch to the GitHub App to continue building their GitHub repositories after the deprecation date.
+
+## Who are affected?
+
+If you signed up or log in to Codemagic via GitHub (All repositories, OAuth), then this means we are using the OAuth integration to access the repositories on your GitHub account. In the Integrations section in your user or team settings, you can see the GitHub OAuth integration enabled.
+
+GitHub repositories accessed via OAuth are marked with a yellow warning icon in your list of applications. A warning is also displayed in the team settings if any of the apps shared in a team is accessed via the OAuth integration. Once the OAuth integration is removed, such repositories will no longer be accessible unless you switch to GitHub App.
+
+Deprecating OAuth does not affect GitHub repositories that are added over SSH or HTTPS.
+
+## GitHub OAuth vs GitHub App
+
+The key difference between OAuth and GitHub App integrations is the scope of permissions. While OAuth requires you to grant Codemagic **write access** to all your repositories, the GitHub App integration requests only **read access** to your code and you can select which repositories you share with Codemagic.
+
+In addition, the GitHub App integration will also make it possible to use [GitHub Checks](../building/github-checks).
+
+### Deprecting GitHub releases in Flutter workflow editor
+
+Without write access to the repository, Codemagic will no longer be able to push GitHub releases without additional configuration. Therefore, we will be removing the GitHub releases section from Flutter workflow editor. You can continue to publish GitHub releases by setting up a personal access token and using a custom script in the **Pre-publish** step.
+
+1. Create a personal access token in GitHub as described [here](https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token).
+2. Save it as an environment variable with the name `GITHUB_TOKEN`.
+3. Add the following custom script in the **pre-publish** step that publishes the artifacts with tag builds.
+
+```bash
+#!/usr/bin/env zsh
+
+# Publish only for tag builds
+if [ -z ${FCI_TAG} ]; then
+   echo "Not a tag build will not publish GitHub release"
+   exit 0
+fi
+
+# See more options about `gh release create` usage from GitHub CLI
+# official docs at https://cli.github.com/manual/gh_release_create
+
+gh release create "${FCI_TAG}" \
+    --title "<Your Application Name> ${FCI_TAG}" \
+    --notes-file changelog.md
+    path/to/build-artifact.ipa \
+    path/to/build-artifact.apk
+
+# Note that you don't need to include title and changelog if you do not want to.
+# Any number of artifacts can be included with the release.
+```
+
+## Switching to GitHub App
+
+From April 19 onwards, users logging in to Codemagic with their GitHub account will be prompted to authorize and install the GitHub App if they do not already have it installed.
+
+If you log in via email, Bitbucket or GitLab but have repositories that are accessed via the GitHub OAuth integration, you should enable the GitHub App integration in your user or team settings.
+
+### Enabling the GitHub App intgeration in Codemagic
+
+GitHub App can be enabled separately for your **personal account** in Codemagic user settings or for a **team** in team settings.
+
+{{<notebox>}}
+Note that teams use team owner's integrations configured in their user settings if no integrations are connected in Team integrations. We recommend setting up the integrations for teams in Team integrations.
+{{</notebox>}}
+
+1. In your team or user settings, navigate to the integrations section.
+2. Click **Connect** next to the GitHub App integration.
+3. You will be redirected to GitHub to authorize Codemagic, click **Authorize Codemagic**.
+4. Back in the Integrations section, click **Finish installation** and then **Install app**. Note that at this stage you can also revoke your authorization of the app by clicking **Disconnect**.
+5. A popup window opens for you to select the organization or account where to install the app. Pick the installation location.
+6. Then choose whether to share **All repositories** from the account or configure the repositories to share by choosing **Select repositories only**.
+7. Click **Install & Authorize** to finish installation (you may be asked to confirm that action by entering your password).
+
+    If you do not have the permission to install the app under an organization, you will see the button **Authorize & Request** instead. An approval from the organization owner or app manager is needed to authorize the installation of the app.
+
+Once you have successfully enabled the GitHub App integration, you can click **Manage integration** in Integrations to install the app to another account, configure the shared repositories or disconnect the integration.
diff --git a/content/knowledge-base/upload-custom-artifacts.md b/content/knowledge-base/upload-custom-artifacts.md
index c0a6f0b..a99e84d 100644
--- a/content/knowledge-base/upload-custom-artifacts.md
+++ b/content/knowledge-base/upload-custom-artifacts.md
@@ -1,7 +1,7 @@
 ---
 description: How to upload files to be included in your build artifacts ZIP file
 title: Uploading custom artifacts
-weight: 4
+weight: 5
 aliases:
   - '../custom-scripts/upload-custom-artifacts'
 ---

commit 7e6eb68a56662f260d96c3b0821ca2c86105c861
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Mon Apr 12 11:33:30 2021 +0300

    FIx typo (#297)

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index 46ec14f..b1bef37 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -62,7 +62,7 @@ environment:
 
 - `APP_STORE_CONNECT_PRIVATE_KEY`
 
-  This is the private API key downloaded from App Store Connect. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build. Alternativey, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
+  This is the private API key downloaded from App Store Connect. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build. Alternatively, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
 
 - `CERTIFICATE_PRIVATE_KEY`
 

commit e8738b31f5a268fd67e102bf0e533e7fc1cf06cc
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Wed Apr 7 19:44:23 2021 +0300

    update docs (#296)
    
    Update information about Google Play app being in draft status and service account error

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 456c209..a276f9b 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -85,6 +85,10 @@ publishing:
     rollout_fraction: 0.25            # Rollout fraction (set only if releasing to a fraction of users): value between (0, 1)
 ```
 
+If you are getting a 400 error related to app being in draft status it means you need to promote your draft build to the next level up of testing tracks. Play Console will show you how to do this. You'll need to go through the steps, fill out questionnaires, upload various screen shots and then after approval you can move to the Alpha testing track and Codemagic will publish (publishing builds on Draft status is not supported).
+
+If you are getting an error related to permissions then it is likely an issue related to the service account that has been created. Go through the steps of creating a service account once more carefully see how to [set up a service account](../knowledge-base/google-play-api/).
+
 {{<notebox>}}
 You can override the publishing track specified in the configuration file using the environment variable `GOOGLE_PLAY_TRACK`. This is useful if you're starting your builds via [Codemagic API](../rest-api/overview/) and want to build different configurations without editing the configuration file.
 {{</notebox>}}

commit 233f1403c32c3d7e2a455d212265534566523f89
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Sat Apr 3 18:56:23 2021 +0200

    update flutter version to 2.0.4 (#295)

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index c47290c..0247c61 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -25,7 +25,7 @@ weight: 5
 - dart `2.10.5`
 - docker `20.10.2`
 - firebase `9.1.0`
-- flutter `2.0.3 ($HOME/programs/flutter)`
+- flutter `2.0.4 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.25.1`
 - ionic `5.4.16`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index 8087b38..c66a3e0 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -28,7 +28,7 @@ weight: 4
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `2.0.3 ($HOME/programs/flutter)`
+- flutter `2.0.4 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 8c7ae0d..1499018 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -28,7 +28,7 @@ weight: 3
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `2.0.3 ($HOME/programs/flutter)`
+- flutter `2.0.4 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.30.0`
 - gradle `6.1.1`
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index bba765b..29ab3f9 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -28,7 +28,7 @@ weight: 2
 - docker `20.10.2`
 - fastlane `2.176.0`
 - firebase `9.3.0`
-- flutter `2.0.3 ($HOME/programs/flutter)`
+- flutter `2.0.4 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.30.1`
 - gradle `6.1.1`

commit 7842130fc9239c9424549561062e142c3b407c48
Author: Mart Laub <martlaub@yahoo.com>
Date:   Fri Apr 2 20:31:10 2021 +0300

    Do not search UTM parameters

diff --git a/assets/js/search.js b/assets/js/search.js
index ad0e9de..d7d5dbc 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -78,8 +78,10 @@ const updateFromInput = (query) => {
 
 const updateFromUrl = () => {
     const query = decodeURIComponent((window.location.search || '').slice(3)) || null
-    updateInputs(query)
-    window.setTimeout(() => updateResults(query))
+    if (window.location.search.indexOf('utm_') < 0) {
+        updateInputs(query)
+        window.setTimeout(() => updateResults(query))
+    }
 }
 
 const updateUrl = (query) =>

commit 8ca87a2064def36fe5911d63ea10889b99c06948
Author: nevercode-kevin <68225534+nevercode-kevin@users.noreply.github.com>
Date:   Thu Apr 1 17:49:41 2021 +0200

    React Native link to GitHub project (#293)
    
    * React Native link to GitHub project
    
    * Delete github.html

diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index e9cc281..fb203cc 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -62,135 +62,28 @@ To test and publish a React Native app:
 * All iOS and Android applications need to be signed before release. See how to set up [iOS code signing](../code-signing-yaml/signing-ios) and [Android code signing](../code-signing-yaml/signing-android).
 * All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/#publishing).
 
-## iOS workflow example
+## iOS and Android workflow examples
 
-The following example shows a workflow that can be used to publish your iOS app to App Store Connect.
+Please refer to the React Native demo project on GitHub:
 
-```yaml
-workflows:
-  ios-workflow:
-    name: iOS Workflow
-    max_build_duration: 60
-    instance_type: mac_pro
-    environment:
-      vars:
-        XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # YOUR WORKSPACE NAME HERE
-        XCODE_SCHEME: "YOUR_SCHEME_NAME" # THE NAME OF YOUR SCHEME HERE
-        FCI_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
-        FCI_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
-        FCI_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
-      node: latest
-      xcode: latest
-      cocoapods: default
-    triggering:
-      events:
-        - push
-        - tag
-        - pull_request
-      branch_patterns:
-        - pattern: develop
-          include: true
-          source: true
-    scripts:
-      - name: Install npm dependencies
-        script: npm install
-      - name: Install CocoaPods dependencies
-        script: |
-            cd ios 
-            pod repo update
-            pod install
-      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
-        script: keychain initialize
-      - name: Set up Provisioning profiles from environment variables
-        script: |
-          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-          mkdir -p "$PROFILES_HOME"
-          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-          echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
-          echo "Saved provisioning profile $PROFILE_PATH"
-      - name: Set up signing certificate
-        script: |
-          echo $FCI_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $FCI_CERTIFICATE_PASSWORD
-      - name: Increment build number
-        script: cd ios && agvtool new-version -all $(($BUILD_NUMBER +1))
-      - name: Set up code signing settings on Xcode project
-        script: xcode-project use-profiles
-      - name: Build ipa for distribution
-        script: xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme $XCODE_SCHEME
-    artifacts:
-      - build/ios/ipa/*.ipa
-      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
-    publishing:
-      app_store_connect:
-        apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE
-        password: Encrypted(...) # THE ENCRYPTED APP-SPECIFIC PASSWORD GOES HERE
-```
+[https://github.com/codemagic-ci-cd/react-native-demo-project](https://github.com/codemagic-ci-cd/react-native-demo-project)
 
-## Android workflow example
+This shows how to configure the **codemagic.yaml** so you can build and publish your **iOS** app to **App Store Connect**.
 
-The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
+It also contains a workflow that shows how to build and publish your **Android** app to a **Google Play** internal track.
 
-```yaml
-workflows:
-  android-workflow:
-    name: Android Workflow
-    max_build_duration: 60
-    instance_type: mac_pro
-    environment:
-      vars:
-        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
-        FCI_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
-        FCI_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
-        FCI_KEY_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
-        FCI_KEY_ALIAS: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE ALIAS HERE
-      node: latest
-    triggering:
-      events:
-        - push
-        - tag
-        - pull_request
-      branch_patterns:
-        - pattern: release
-          include: true
-          source: true
-    scripts:
-      - name: Install npm dependencies
-        script: npm install
-      - name: Set up local properties
-        script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
-      - name: Set up key.properties file for code signing
-        script: |
-          echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
-          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
-          storePassword=$FCI_KEYSTORE_PASSWORD
-          keyPassword=$FCI_KEY_PASSWORD
-          keyAlias=$FCI_KEY_ALIAS
-          storeFile=$FCI_KEYSTORE_PATH
-          EOF
-      - name: Build Android app
-        script: cd android && ./gradlew assembleRelease
-    artifacts:
-      - android/app/build/outputs/**/**/*.apk
-    publishing:
-      google_play:
-        credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
-        track: internal
-```
+## Build versioning your React Native app
 
-{{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle` {{</notebox>}}
-
-Incrementing the version code can be done as follows:
-
-```gradle
-    android {
-        ...
-        
-        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 1)
-        defaultConfig {
-            ...
-            versionCode appVersionCode
-            ...
-        }
-    }
-```
+### Android versioning
+
+{{<notebox>}}When using automatic build versioning in **codemagic.yaml** please note that configuration changes still need to be made in `android/app/build.gradle` {{</notebox>}}
+
+In the [build.gradle](https://github.com/codemagic-ci-cd/react-native-demo-project/blob/master/android/app/build.gradle) note how the versionCode is set in the `defaultConfig{}`.
+
+Additionally, pay attention to how `signingConfigs{}` and `buildTypes{}` are configured for debug and release.
+
+### iOS versioning
+
+{{<notebox>}}Build versioning for iOS projects is performed as a script step in the codemagic.yaml{{</notebox>}}
+ 
+See the **Increment build number** script in the [codemagic.yaml](https://github.com/codemagic-ci-cd/react-native-demo-project/blob/master/codemagic.yaml) in the React Native demo project on GitHub.
\ No newline at end of file

commit 5b9e8c4529671892ac97a13cd10333f0618f6185
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Wed Mar 31 19:50:07 2021 +0300

    Improvement/speed optimization (#281)
    
    * load search asynchronously, use fuse.js search library instead of lunr.js
    
    * hugo-native images lazy-loading

diff --git a/assets/js/lunr.js b/assets/js/lunr.js
deleted file mode 100644
index afbeb56..0000000
--- a/assets/js/lunr.js
+++ /dev/null
@@ -1,3485 +0,0 @@
-/**
- * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.5
- * Copyright (C) 2018 Oliver Nightingale
- * @license MIT
- */
-
-;(function(){
-
-  /**
-   * A convenience function for configuring and constructing
-   * a new lunr Index.
-   *
-   * A lunr.Builder instance is created and the pipeline setup
-   * with a trimmer, stop word filter and stemmer.
-   *
-   * This builder object is yielded to the configuration function
-   * that is passed as a parameter, allowing the list of fields
-   * and other builder parameters to be customised.
-   *
-   * All documents _must_ be added within the passed config function.
-   *
-   * @example
-   * var idx = lunr(function () {
-   *   this.field('title')
-   *   this.field('body')
-   *   this.ref('id')
-   *
-   *   documents.forEach(function (doc) {
-   *     this.add(doc)
-   *   }, this)
-   * })
-   *
-   * @see {@link lunr.Builder}
-   * @see {@link lunr.Pipeline}
-   * @see {@link lunr.trimmer}
-   * @see {@link lunr.stopWordFilter}
-   * @see {@link lunr.stemmer}
-   * @namespace {function} lunr
-   */
-  var lunr = function (config) {
-    var builder = new lunr.Builder
-  
-    builder.pipeline.add(
-      lunr.trimmer,
-      lunr.stopWordFilter,
-      lunr.stemmer
-    )
-  
-    builder.searchPipeline.add(
-      lunr.stemmer
-    )
-  
-    config.call(builder, builder)
-    return builder.build()
-  }
-  
-  lunr.version = "2.3.5"
-  /*!
-   * lunr.utils
-   * Copyright (C) 2018 Oliver Nightingale
-   */
-  
-  /**
-   * A namespace containing utils for the rest of the lunr library
-   * @namespace lunr.utils
-   */
-  lunr.utils = {}
-  
-  /**
-   * Print a warning message to the console.
-   *
-   * @param {String} message The message to be printed.
-   * @memberOf lunr.utils
-   * @function
-   */
-  lunr.utils.warn = (function (global) {
-    /* eslint-disable no-console */
-    return function (message) {
-      if (global.console && console.warn) {
-        console.warn(message)
-      }
-    }
-    /* eslint-enable no-console */
-  })(this)
-  
-  /**
-   * Convert an object to a string.
-   *
-   * In the case of `null` and `undefined` the function returns
-   * the empty string, in all other cases the result of calling
-   * `toString` on the passed object is returned.
-   *
-   * @param {Any} obj The object to convert to a string.
-   * @return {String} string representation of the passed object.
-   * @memberOf lunr.utils
-   */
-  lunr.utils.asString = function (obj) {
-    if (obj === void 0 || obj === null) {
-      return ""
-    } else {
-      return obj.toString()
-    }
-  }
-  
-  /**
-   * Clones an object.
-   *
-   * Will create a copy of an existing object such that any mutations
-   * on the copy cannot affect the original.
-   *
-   * Only shallow objects are supported, passing a nested object to this
-   * function will cause a TypeError.
-   *
-   * Objects with primitives, and arrays of primitives are supported.
-   *
-   * @param {Object} obj The object to clone.
-   * @return {Object} a clone of the passed object.
-   * @throws {TypeError} when a nested object is passed.
-   * @memberOf Utils
-   */
-  lunr.utils.clone = function (obj) {
-    if (obj === null || obj === undefined) {
-      return obj
-    }
-  
-    var clone = Object.create(null),
-        keys = Object.keys(obj)
-  
-    for (var i = 0; i < keys.length; i++) {
-      var key = keys[i],
-          val = obj[key]
-  
-      if (Array.isArray(val)) {
-        clone[key] = val.slice()
-        continue
-      }
-  
-      if (typeof val === 'string' ||
-          typeof val === 'number' ||
-          typeof val === 'boolean') {
-        clone[key] = val
-        continue
-      }
-  
-      throw new TypeError("clone is not deep and does not support nested objects")
-    }
-  
-    return clone
-  }
-  lunr.FieldRef = function (docRef, fieldName, stringValue) {
-    this.docRef = docRef
-    this.fieldName = fieldName
-    this._stringValue = stringValue
-  }
-  
-  lunr.FieldRef.joiner = "/"
-  
-  lunr.FieldRef.fromString = function (s) {
-    var n = s.indexOf(lunr.FieldRef.joiner)
-  
-    if (n === -1) {
-      throw "malformed field ref string"
-    }
-  
-    var fieldRef = s.slice(0, n),
-        docRef = s.slice(n + 1)
-  
-    return new lunr.FieldRef (docRef, fieldRef, s)
-  }
-  
-  lunr.FieldRef.prototype.toString = function () {
-    if (this._stringValue == undefined) {
-      this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef
-    }
-  
-    return this._stringValue
-  }
-  /*!
-   * lunr.Set
-   * Copyright (C) 2018 Oliver Nightingale
-   */
-  
-  /**
-   * A lunr set.
-   *
-   * @constructor
-   */
-  lunr.Set = function (elements) {
-    this.elements = Object.create(null)
-  
-    if (elements) {
-      this.length = elements.length
-  
-      for (var i = 0; i < this.length; i++) {
-        this.elements[elements[i]] = true
-      }
-    } else {
-      this.length = 0
-    }
-  }
-  
-  /**
-   * A complete set that contains all elements.
-   *
-   * @static
-   * @readonly
-   * @type {lunr.Set}
-   */
-  lunr.Set.complete = {
-    intersect: function (other) {
-      return other
-    },
-  
-    union: function (other) {
-      return other
-    },
-  
-    contains: function () {
-      return true
-    }
-  }
-  
-  /**
-   * An empty set that contains no elements.
-   *
-   * @static
-   * @readonly
-   * @type {lunr.Set}
-   */
-  lunr.Set.empty = {
-    intersect: function () {
-      return this
-    },
-  
-    union: function (other) {
-      return other
-    },
-  
-    contains: function () {
-      return false
-    }
-  }
-  
-  /**
-   * Returns true if this set contains the specified object.
-   *
-   * @param {object} object - Object whose presence in this set is to be tested.
-   * @returns {boolean} - True if this set contains the specified object.
-   */
-  lunr.Set.prototype.contains = function (object) {
-    return !!this.elements[object]
-  }
-  
-  /**
-   * Returns a new set containing only the elements that are present in both
-   * this set and the specified set.
-   *
-   * @param {lunr.Set} other - set to intersect with this set.
-   * @returns {lunr.Set} a new set that is the intersection of this and the specified set.
-   */
-  
-  lunr.Set.prototype.intersect = function (other) {
-    var a, b, elements, intersection = []
-  
-    if (other === lunr.Set.complete) {
-      return this
-    }
-  
-    if (other === lunr.Set.empty) {
-      return other
-    }
-  
-    if (this.length < other.length) {
-      a = this
-      b = other
-    } else {
-      a = other
-      b = this
-    }
-  
-    elements = Object.keys(a.elements)
-  
-    for (var i = 0; i < elements.length; i++) {
-      var element = elements[i]
-      if (element in b.elements) {
-        intersection.push(element)
-      }
-    }
-  
-    return new lunr.Set (intersection)
-  }
-  
-  /**
-   * Returns a new set combining the elements of this and the specified set.
-   *
-   * @param {lunr.Set} other - set to union with this set.
-   * @return {lunr.Set} a new set that is the union of this and the specified set.
-   */
-  
-  lunr.Set.prototype.union = function (other) {
-    if (other === lunr.Set.complete) {
-      return lunr.Set.complete
-    }
-  
-    if (other === lunr.Set.empty) {
-      return this
-    }
-  
-    return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))
-  }
-  /**
-   * A function to calculate the inverse document frequency for
-   * a posting. This is shared between the builder and the index
-   *
-   * @private
-   * @param {object} posting - The posting for a given term
-   * @param {number} documentCount - The total number of documents.
-   */
-  lunr.idf = function (posting, documentCount) {
-    var documentsWithTerm = 0
-  
-    for (var fieldName in posting) {
-      if (fieldName == '_index') continue // Ignore the term index, its not a field
-      documentsWithTerm += Object.keys(posting[fieldName]).length
-    }
-  
-    var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)
-  
-    return Math.log(1 + Math.abs(x))
-  }
-  
-  /**
-   * A token wraps a string representation of a token
-   * as it is passed through the text processing pipeline.
-   *
-   * @constructor
-   * @param {string} [str=''] - The string token being wrapped.
-   * @param {object} [metadata={}] - Metadata associated with this token.
-   */
-  lunr.Token = function (str, metadata) {
-    this.str = str || ""
-    this.metadata = metadata || {}
-  }
-  
-  /**
-   * Returns the token string that is being wrapped by this object.
-   *
-   * @returns {string}
-   */
-  lunr.Token.prototype.toString = function () {
-    return this.str
-  }
-  
-  /**
-   * A token update function is used when updating or optionally
-   * when cloning a token.
-   *
-   * @callback lunr.Token~updateFunction
-   * @param {string} str - The string representation of the token.
-   * @param {Object} metadata - All metadata associated with this token.
-   */
-  
-  /**
-   * Applies the given function to the wrapped string token.
-   *
-   * @example
-   * token.update(function (str, metadata) {
-   *   return str.toUpperCase()
-   * })
-   *
-   * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.
-   * @returns {lunr.Token}
-   */
-  lunr.Token.prototype.update = function (fn) {
-    this.str = fn(this.str, this.metadata)
-    return this
-  }
-  
-  /**
-   * Creates a clone of this token. Optionally a function can be
-   * applied to the cloned token.
-   *
-   * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.
-   * @returns {lunr.Token}
-   */
-  lunr.Token.prototype.clone = function (fn) {
-    fn = fn || function (s) { return s }
-    return new lunr.Token (fn(this.str, this.metadata), this.metadata)
-  }
-  /*!
-   * lunr.tokenizer
-   * Copyright (C) 2018 Oliver Nightingale
-   */
-  
-  /**
-   * A function for splitting a string into tokens ready to be inserted into
-   * the search index. Uses `lunr.tokenizer.separator` to split strings, change
-   * the value of this property to change how strings are split into tokens.
-   *
-   * This tokenizer will convert its parameter to a string by calling `toString` and
-   * then will split this string on the character in `lunr.tokenizer.separator`.
-   * Arrays will have their elements converted to strings and wrapped in a lunr.Token.
-   *
-   * Optional metadata can be passed to the tokenizer, this metadata will be cloned and
-   * added as metadata to every token that is created from the object to be tokenized.
-   *
-   * @static
-   * @param {?(string|object|object[])} obj - The object to convert into tokens
-   * @param {?object} metadata - Optional metadata to associate with every token
-   * @returns {lunr.Token[]}
-   * @see {@link lunr.Pipeline}
-   */
-  lunr.tokenizer = function (obj, metadata) {
-    if (obj == null || obj == undefined) {
-      return []
-    }
-  
-    if (Array.isArray(obj)) {
-      return obj.map(function (t) {
-        return new lunr.Token(
-          lunr.utils.asString(t).toLowerCase(),
-          lunr.utils.clone(metadata)
-        )
-      })
-    }
-  
-    var str = obj.toString().trim().toLowerCase(),
-        len = str.length,
-        tokens = []
-  
-    for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {
-      var char = str.charAt(sliceEnd),
-          sliceLength = sliceEnd - sliceStart
-  
-      if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {
-  
-        if (sliceLength > 0) {
-          var tokenMetadata = lunr.utils.clone(metadata) || {}
-          tokenMetadata["position"] = [sliceStart, sliceLength]
-          tokenMetadata["index"] = tokens.length
-  
-          tokens.push(
-            new lunr.Token (
-              str.slice(sliceStart, sliceEnd),
-              tokenMetadata
-            )
-          )
-        }
-  
-        sliceStart = sliceEnd + 1
-      }
-  
-    }
-  
-    return tokens
-  }
-  
-  /**
-   * The separator used to split a string into tokens. Override this property to change the behaviour of
-   * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.
-   *
-   * @static
-   * @see lunr.tokenizer
-   */
-  lunr.tokenizer.separator = /[\s\-]+/
-  /*!
-   * lunr.Pipeline
-   * Copyright (C) 2018 Oliver Nightingale
-   */
-  
-  /**
-   * lunr.Pipelines maintain an ordered list of functions to be applied to all
-   * tokens in documents entering the search index and queries being ran against
-   * the index.
-   *
-   * An instance of lunr.Index created with the lunr shortcut will contain a
-   * pipeline with a stop word filter and an English language stemmer. Extra
-   * functions can be added before or after either of these functions or these
-   * default functions can be removed.
-   *
-   * When run the pipeline will call each function in turn, passing a token, the
-   * index of that token in the original list of all tokens and finally a list of
-   * all the original tokens.
-   *
-   * The output of functions in the pipeline will be passed to the next function
-   * in the pipeline. To exclude a token from entering the index the function
-   * should return undefined, the rest of the pipeline will not be called with
-   * this token.
-   *
-   * For serialisation of pipelines to work, all functions used in an instance of
-   * a pipeline should be registered with lunr.Pipeline. Registered functions can
-   * then be loaded. If trying to load a serialised pipeline that uses functions
-   * that are not registered an error will be thrown.
-   *
-   * If not planning on serialising the pipeline then registering pipeline functions
-   * is not necessary.
-   *
-   * @constructor
-   */
-  lunr.Pipeline = function () {
-    this._stack = []
-  }
-  
-  lunr.Pipeline.registeredFunctions = Object.create(null)
-  
-  /**
-   * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token
-   * string as well as all known metadata. A pipeline function can mutate the token string
-   * or mutate (or add) metadata for a given token.
-   *
-   * A pipeline function can indicate that the passed token should be discarded by returning
-   * null. This token will not be passed to any downstream pipeline functions and will not be
-   * added to the index.
-   *
-   * Multiple tokens can be returned by returning an array of tokens. Each token will be passed
-   * to any downstream pipeline functions and all will returned tokens will be added to the index.
-   *
-   * Any number of pipeline functions may be chained together using a lunr.Pipeline.
-   *
-   * @interface lunr.PipelineFunction
-   * @param {lunr.Token} token - A token from the document being processed.
-   * @param {number} i - The index of this token in the complete list of tokens for this document/field.
-   * @param {lunr.Token[]} tokens - All tokens for this document/field.
-   * @returns {(?lunr.Token|lunr.Token[])}
-   */
-  
-  /**
-   * Register a function with the pipeline.
-   *
-   * Functions that are used in the pipeline should be registered if the pipeline
-   * needs to be serialised, or a serialised pipeline needs to be loaded.
-   *
-   * Registering a function does not add it to a pipeline, functions must still be
-   * added to instances of the pipeline for them to be used when running a pipeline.
-   *
-   * @param {lunr.PipelineFunction} fn - The function to check for.
-   * @param {String} label - The label to register this function with
-   */
-  lunr.Pipeline.registerFunction = function (fn, label) {
-    if (label in this.registeredFunctions) {
-      lunr.utils.warn('Overwriting existing registered function: ' + label)
-    }
-  
-    fn.label = label
-    lunr.Pipeline.registeredFunctions[fn.label] = fn
-  }
-  
-  /**
-   * Warns if the function is not registered as a Pipeline function.
-   *
-   * @param {lunr.PipelineFunction} fn - The function to check for.
-   * @private
-   */
-  lunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {
-    var isRegistered = fn.label && (fn.label in this.registeredFunctions)
-  
-    if (!isRegistered) {
-      lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\n', fn)
-    }
-  }
-  
-  /**
-   * Loads a previously serialised pipeline.
-   *
-   * All functions to be loaded must already be registered with lunr.Pipeline.
-   * If any function from the serialised data has not been registered then an
-   * error will be thrown.
-   *
-   * @param {Object} serialised - The serialised pipeline to load.
-   * @returns {lunr.Pipeline}
-   */
-  lunr.Pipeline.load = function (serialised) {
-    var pipeline = new lunr.Pipeline
-  
-    serialised.forEach(function (fnName) {
-      var fn = lunr.Pipeline.registeredFunctions[fnName]
-  
-      if (fn) {
-        pipeline.add(fn)
-      } else {
-        throw new Error('Cannot load unregistered function: ' + fnName)
-      }
-    })
-  
-    return pipeline
-  }
-  
-  /**
-   * Adds new functions to the end of the pipeline.
-   *
-   * Logs a warning if the function has not been registered.
-   *
-   * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.
-   */
-  lunr.Pipeline.prototype.add = function () {
-    var fns = Array.prototype.slice.call(arguments)
-  
-    fns.forEach(function (fn) {
-      lunr.Pipeline.warnIfFunctionNotRegistered(fn)
-      this._stack.push(fn)
-    }, this)
-  }
-  
-  /**
-   * Adds a single function after a function that already exists in the
-   * pipeline.
-   *
-   * Logs a warning if the function has not been registered.
-   *
-   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.
-   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.
-   */
-  lunr.Pipeline.prototype.after = function (existingFn, newFn) {
-    lunr.Pipeline.warnIfFunctionNotRegistered(newFn)
-  
-    var pos = this._stack.indexOf(existingFn)
-    if (pos == -1) {
-      throw new Error('Cannot find existingFn')
-    }
-  
-    pos = pos + 1
-    this._stack.splice(pos, 0, newFn)
-  }
-  
-  /**
-   * Adds a single function before a function that already exists in the
-   * pipeline.
-   *
-   * Logs a warning if the function has not been registered.
-   *
-   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.
-   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.
-   */
-  lunr.Pipeline.prototype.before = function (existingFn, newFn) {
-    lunr.Pipeline.warnIfFunctionNotRegistered(newFn)
-  
-    var pos = this._stack.indexOf(existingFn)
-    if (pos == -1) {
-      throw new Error('Cannot find existingFn')
-    }
-  
-    this._stack.splice(pos, 0, newFn)
-  }
-  
-  /**
-   * Removes a function from the pipeline.
-   *
-   * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.
-   */
-  lunr.Pipeline.prototype.remove = function (fn) {
-    var pos = this._stack.indexOf(fn)
-    if (pos == -1) {
-      return
-    }
-  
-    this._stack.splice(pos, 1)
-  }
-  
-  /**
-   * Runs the current list of functions that make up the pipeline against the
-   * passed tokens.
-   *
-   * @param {Array} tokens The tokens to run through the pipeline.
-   * @returns {Array}
-   */
-  lunr.Pipeline.prototype.run = function (tokens) {
-    var stackLength = this._stack.length
-  
-    for (var i = 0; i < stackLength; i++) {
-      var fn = this._stack[i]
-      var memo = []
-  
-      for (var j = 0; j < tokens.length; j++) {
-        var result = fn(tokens[j], j, tokens)
-  
-        if (result === void 0 || result === '') continue
-  
-        if (Array.isArray(result)) {
-          for (var k = 0; k < result.length; k++) {
-            memo.push(result[k])
-          }
-        } else {
-          memo.push(result)
-        }
-      }
-  
-      tokens = memo
-    }
-  
-    return tokens
-  }
-  
-  /**
-   * Convenience method for passing a string through a pipeline and getting
-   * strings out. This method takes care of wrapping the passed string in a
-   * token and mapping the resulting tokens back to strings.
-   *
-   * @param {string} str - The string to pass through the pipeline.
-   * @param {?object} metadata - Optional metadata to associate with the token
-   * passed to the pipeline.
-   * @returns {string[]}
-   */
-  lunr.Pipeline.prototype.runString = function (str, metadata) {
-    var token = new lunr.Token (str, metadata)
-  
-    return this.run([token]).map(function (t) {
-      return t.toString()
-    })
-  }
-  
-  /**
-   * Resets the pipeline by removing any existing processors.
-   *
-   */
-  lunr.Pipeline.prototype.reset = function () {
-    this._stack = []
-  }
-  
-  /**
-   * Returns a representation of the pipeline ready for serialisation.
-   *
-   * Logs a warning if the function has not been registered.
-   *
-   * @returns {Array}
-   */
-  lunr.Pipeline.prototype.toJSON = function () {
-    return this._stack.map(function (fn) {
-      lunr.Pipeline.warnIfFunctionNotRegistered(fn)
-  
-      return fn.label
-    })
-  }
-  /*!
-   * lunr.Vector
-   * Copyright (C) 2018 Oliver Nightingale
-   */
-  
-  /**
-   * A vector is used to construct the vector space of documents and queries. These
-   * vectors support operations to determine the similarity between two documents or
-   * a document and a query.
-   *
-   * Normally no parameters are required for initializing a vector, but in the case of
-   * loading a previously dumped vector the raw elements can be provided to the constructor.
-   *
-   * For performance reasons vectors are implemented with a flat array, where an elements
-   * index is immediately followed by its value. E.g. [index, value, index, value]. This
-   * allows the underlying array to be as sparse as possible and still offer decent
-   * performance when being used for vector calculations.
-   *
-   * @constructor
-   * @param {Number[]} [elements] - The flat list of element index and element value pairs.
-   */
-  lunr.Vector = function (elements) {
-    this._magnitude = 0
-    this.elements = elements || []
-  }
-  
-  
-  /**
-   * Calculates the position within the vector to insert a given index.
-   *
-   * This is used internally by insert and upsert. If there are duplicate indexes then
-   * the position is returned as if the value for that index were to be updated, but it
-   * is the callers responsibility to check whether there is a duplicate at that index
-   *
-   * @param {Number} insertIdx - The index at which the element should be inserted.
-   * @returns {Number}
-   */
-  lunr.Vector.prototype.positionForIndex = function (index) {
-    // For an empty vector the tuple can be inserted at the beginning
-    if (this.elements.length == 0) {
-      return 0
-    }
-  
-    var start = 0,
-        end = this.elements.length / 2,
-        sliceLength = end - start,
-        pivotPoint = Math.floor(sliceLength / 2),
-        pivotIndex = this.elements[pivotPoint * 2]
-  
-    while (sliceLength > 1) {
-      if (pivotIndex < index) {
-        start = pivotPoint
-      }
-  
-      if (pivotIndex > index) {
-        end = pivotPoint
-      }
-  
-      if (pivotIndex == index) {
-        break
-      }
-  
-      sliceLength = end - start
-      pivotPoint = start + Math.floor(sliceLength / 2)
-      pivotIndex = this.elements[pivotPoint * 2]
-    }
-  
-    if (pivotIndex == index) {
-      return pivotPoint * 2
-    }
-  
-    if (pivotIndex > index) {
-      return pivotPoint * 2
-    }
-  
-    if (pivotIndex < index) {
-      return (pivotPoint + 1) * 2
-    }
-  }
-  
-  /**
-   * Inserts an element at an index within the vector.
-   *
-   * Does not allow duplicates, will throw an error if there is already an entry
-   * for this index.
-   *
-   * @param {Number} insertIdx - The index at which the element should be inserted.
-   * @param {Number} val - The value to be inserted into the vector.
-   */
-  lunr.Vector.prototype.insert = function (insertIdx, val) {
-    this.upsert(insertIdx, val, function () {
-      throw "duplicate index"
-    })
-  }
-  
-  /**
-   * Inserts or updates an existing index within the vector.
-   *
-   * @param {Number} insertIdx - The index at which the element should be inserted.
-   * @param {Number} val - The value to be inserted into the vector.
-   * @param {function} fn - A function that is called for updates, the existing value and the
-   * requested value are passed as arguments
-   */
-  lunr.Vector.prototype.upsert = function (insertIdx, val, fn) {
-    this._magnitude = 0
-    var position = this.positionForIndex(insertIdx)
-  
-    if (this.elements[position] == insertIdx) {
-      this.elements[position + 1] = fn(this.elements[position + 1], val)
-    } else {
-      this.elements.splice(position, 0, insertIdx, val)
-    }
-  }
-  
-  /**
-   * Calculates the magnitude of this vector.
-   *
-   * @returns {Number}
-   */
-  lunr.Vector.prototype.magnitude = function () {
-    if (this._magnitude) return this._magnitude
-  
-    var sumOfSquares = 0,
-        elementsLength = this.elements.length
-  
-    for (var i = 1; i < elementsLength; i += 2) {
-      var val = this.elements[i]
-      sumOfSquares += val * val
-    }
-  
-    return this._magnitude = Math.sqrt(sumOfSquares)
-  }
-  
-  /**
-   * Calculates the dot product of this vector and another vector.
-   *
-   * @param {lunr.Vector} otherVector - The vector to compute the dot product with.
-   * @returns {Number}
-   */
-  lunr.Vector.prototype.dot = function (otherVector) {
-    var dotProduct = 0,
-        a = this.elements, b = otherVector.elements,
-        aLen = a.length, bLen = b.length,
-        aVal = 0, bVal = 0,
-        i = 0, j = 0
-  
-    while (i < aLen && j < bLen) {
-      aVal = a[i], bVal = b[j]
-      if (aVal < bVal) {
-        i += 2
-      } else if (aVal > bVal) {
-        j += 2
-      } else if (aVal == bVal) {
-        dotProduct += a[i + 1] * b[j + 1]
-        i += 2
-        j += 2
-      }
-    }
-  
-    return dotProduct
-  }
-  
-  /**
-   * Calculates the similarity between this vector and another vector.
-   *
-   * @param {lunr.Vector} otherVector - The other vector to calculate the
-   * similarity with.
-   * @returns {Number}
-   */
-  lunr.Vector.prototype.similarity = function (otherVector) {
-    return this.dot(otherVector) / this.magnitude() || 0
-  }
-  
-  /**
-   * Converts the vector to an array of the elements within the vector.
-   *
-   * @returns {Number[]}
-   */
-  lunr.Vector.prototype.toArray = function () {
-    var output = new Array (this.elements.length / 2)
-  
-    for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {
-      output[j] = this.elements[i]
-    }
-  
-    return output
-  }
-  
-  /**
-   * A JSON serializable representation of the vector.
-   *
-   * @returns {Number[]}
-   */
-  lunr.Vector.prototype.toJSON = function () {
-    return this.elements
-  }
-  /* eslint-disable */
-  /*!
-   * lunr.stemmer
-   * Copyright (C) 2018 Oliver Nightingale
-   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt
-   */
-  
-  /**
-   * lunr.stemmer is an english language stemmer, this is a JavaScript
-   * implementation of the PorterStemmer taken from http://tartarus.org/~martin
-   *
-   * @static
-   * @implements {lunr.PipelineFunction}
-   * @param {lunr.Token} token - The string to stem
-   * @returns {lunr.Token}
-   * @see {@link lunr.Pipeline}
-   * @function
-   */
-  lunr.stemmer = (function(){
-    var step2list = {
-        "ational" : "ate",
-        "tional" : "tion",
-        "enci" : "ence",
-        "anci" : "ance",
-        "izer" : "ize",
-        "bli" : "ble",
-        "alli" : "al",
-        "entli" : "ent",
-        "eli" : "e",
-        "ousli" : "ous",
-        "ization" : "ize",
-        "ation" : "ate",
-        "ator" : "ate",
-        "alism" : "al",
-        "iveness" : "ive",
-        "fulness" : "ful",
-        "ousness" : "ous",
-        "aliti" : "al",
-        "iviti" : "ive",
-        "biliti" : "ble",
-        "logi" : "log"
-      },
-  
-      step3list = {
-        "icate" : "ic",
-        "ative" : "",
-        "alize" : "al",
-        "iciti" : "ic",
-        "ical" : "ic",
-        "ful" : "",
-        "ness" : ""
-      },
-  
-      c = "[^aeiou]",          // consonant
-      v = "[aeiouy]",          // vowel
-      C = c + "[^aeiouy]*",    // consonant sequence
-      V = v + "[aeiou]*",      // vowel sequence
-  
-      mgr0 = "^(" + C + ")?" + V + C,               // [C]VC... is m>0
-      meq1 = "^(" + C + ")?" + V + C + "(" + V + ")?$",  // [C]VC[V] is m=1
-      mgr1 = "^(" + C + ")?" + V + C + V + C,       // [C]VCVC... is m>1
-      s_v = "^(" + C + ")?" + v;                   // vowel in stem
-  
-    var re_mgr0 = new RegExp(mgr0);
-    var re_mgr1 = new RegExp(mgr1);
-    var re_meq1 = new RegExp(meq1);
-    var re_s_v = new RegExp(s_v);
-  
-    var re_1a = /^(.+?)(ss|i)es$/;
-    var re2_1a = /^(.+?)([^s])s$/;
-    var re_1b = /^(.+?)eed$/;
-    var re2_1b = /^(.+?)(ed|ing)$/;
-    var re_1b_2 = /.$/;
-    var re2_1b_2 = /(at|bl|iz)$/;
-    var re3_1b_2 = new RegExp("([^aeiouylsz])\\1$");
-    var re4_1b_2 = new RegExp("^" + C + v + "[^aeiouwxy]$");
-  
-    var re_1c = /^(.+?[^aeiou])y$/;
-    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;
-  
-    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;
-  
-    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;
-    var re2_4 = /^(.+?)(s|t)(ion)$/;
-  
-    var re_5 = /^(.+?)e$/;
-    var re_5_1 = /ll$/;
-    var re3_5 = new RegExp("^" + C + v + "[^aeiouwxy]$");
-  
-    var porterStemmer = function porterStemmer(w) {
-      var stem,
-        suffix,
-        firstch,
-        re,
-        re2,
-        re3,
-        re4;
-  
-      if (w.length < 3) { return w; }
-  
-      firstch = w.substr(0,1);
-      if (firstch == "y") {
-        w = firstch.toUpperCase() + w.substr(1);
-      }
-  
-      // Step 1a
-      re = re_1a
-      re2 = re2_1a;
-  
-      if (re.test(w)) { w = w.replace(re,"$1$2"); }
-      else if (re2.test(w)) { w = w.replace(re2,"$1$2"); }
-  
-      // Step 1b
-      re = re_1b;
-      re2 = re2_1b;
-      if (re.test(w)) {
-        var fp = re.exec(w);
-        re = re_mgr0;
-        if (re.test(fp[1])) {
-          re = re_1b_2;
-          w = w.replace(re,"");
-        }
-      } else if (re2.test(w)) {
-        var fp = re2.exec(w);
-        stem = fp[1];
-        re2 = re_s_v;
-        if (re2.test(stem)) {
-          w = stem;
-          re2 = re2_1b_2;
-          re3 = re3_1b_2;
-          re4 = re4_1b_2;
-          if (re2.test(w)) { w = w + "e"; }
-          else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,""); }
-          else if (re4.test(w)) { w = w + "e"; }
-        }
-      }
-  
-      // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)
-      re = re_1c;
-      if (re.test(w)) {
-        var fp = re.exec(w);
-        stem = fp[1];
-        w = stem + "i";
-      }
-  
-      // Step 2
-      re = re_2;
-      if (re.test(w)) {
-        var fp = re.exec(w);
-        stem = fp[1];
-        suffix = fp[2];
-        re = re_mgr0;
-        if (re.test(stem)) {
-          w = stem + step2list[suffix];
-        }
-      }
-  
-      // Step 3
-      re = re_3;
-      if (re.test(w)) {
-        var fp = re.exec(w);
-        stem = fp[1];
-        suffix = fp[2];
-        re = re_mgr0;
-        if (re.test(stem)) {
-          w = stem + step3list[suffix];
-        }
-      }
-  
-      // Step 4
-      re = re_4;
-      re2 = re2_4;
-      if (re.test(w)) {
-        var fp = re.exec(w);
-        stem = fp[1];
-        re = re_mgr1;
-        if (re.test(stem)) {
-          w = stem;
-        }
-      } else if (re2.test(w)) {
-        var fp = re2.exec(w);
-        stem = fp[1] + fp[2];
-        re2 = re_mgr1;
-        if (re2.test(stem)) {
-          w = stem;
-        }
-      }
-  
-      // Step 5
-      re = re_5;
-      if (re.test(w)) {
-        var fp = re.exec(w);
-        stem = fp[1];
-        re = re_mgr1;
-        re2 = re_meq1;
-        re3 = re3_5;
-        if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {
-          w = stem;
-        }
-      }
-  
-      re = re_5_1;
-      re2 = re_mgr1;
-      if (re.test(w) && re2.test(w)) {
-        re = re_1b_2;
-        w = w.replace(re,"");
-      }
-  
-      // and turn initial Y back to y
-  
-      if (firstch == "y") {
-        w = firstch.toLowerCase() + w.substr(1);
-      }
-  
-      return w;
-    };
-  
-    return function (token) {
-      return token.update(porterStemmer);
-    }
-  })();
-  
-  lunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')
-  /*!
-   * lunr.stopWordFilter
-   * Copyright (C) 2018 Oliver Nightingale
-   */
-  
-  /**
-   * lunr.generateStopWordFilter builds a stopWordFilter function from the provided
-   * list of stop words.
-   *
-   * The built in lunr.stopWordFilter is built using this generator and can be used
-   * to generate custom stopWordFilters for applications or non English languages.
-   *
-   * @function
-   * @param {Array} token The token to pass through the filter
-   * @returns {lunr.PipelineFunction}
-   * @see lunr.Pipeline
-   * @see lunr.stopWordFilter
-   */
-  lunr.generateStopWordFilter = function (stopWords) {
-    var words = stopWords.reduce(function (memo, stopWord) {
-      memo[stopWord] = stopWord
-      return memo
-    }, {})
-  
-    return function (token) {
-      if (token && words[token.toString()] !== token.toString()) return token
-    }
-  }
-  
-  /**
-   * lunr.stopWordFilter is an English language stop word list filter, any words
-   * contained in the list will not be passed through the filter.
-   *
-   * This is intended to be used in the Pipeline. If the token does not pass the
-   * filter then undefined will be returned.
-   *
-   * @function
-   * @implements {lunr.PipelineFunction}
-   * @params {lunr.Token} token - A token to check for being a stop word.
-   * @returns {lunr.Token}
-   * @see {@link lunr.Pipeline}
-   */
-  lunr.stopWordFilter = lunr.generateStopWordFilter([
-    'a',
-    'able',
-    'about',
-    'across',
-    'after',
-    'all',
-    'almost',
-    'also',
-    'am',
-    'among',
-    'an',
-    'and',
-    'any',
-    'are',
-    'as',
-    'at',
-    'be',
-    'because',
-    'been',
-    'but',
-    'by',
-    'can',
-    'cannot',
-    'could',
-    'dear',
-    'did',
-    'do',
-    'does',
-    'either',
-    'else',
-    'ever',
-    'every',
-    'for',
-    'from',
-    'get',
-    'got',
-    'had',
-    'has',
-    'have',
-    'he',
-    'her',
-    'hers',
-    'him',
-    'his',
-    'how',
-    'however',
-    'i',
-    'if',
-    'in',
-    'into',
-    'is',
-    'it',
-    'its',
-    'just',
-    'least',
-    'let',
-    'like',
-    'likely',
-    'may',
-    'me',
-    'might',
-    'most',
-    'must',
-    'my',
-    'neither',
-    'no',
-    'nor',
-    'not',
-    'of',
-    'off',
-    'often',
-    'on',
-    'only',
-    'or',
-    'other',
-    'our',
-    'own',
-    'rather',
-    'said',
-    'say',
-    'says',
-    'she',
-    'should',
-    'since',
-    'so',
-    'some',
-    'than',
-    'that',
-    'the',
-    'their',
-    'them',
-    'then',
-    'there',
-    'these',
-    'they',
-    'this',
-    'tis',
-    'to',
-    'too',
-    'twas',
-    'us',
-    'wants',
-    'was',
-    'we',
-    'were',
-    'what',
-    'when',
-    'where',
-    'which',
-    'while',
-    'who',
-    'whom',
-    'why',
-    'will',
-    'with',
-    'would',
-    'yet',
-    'you',
-    'your'
-  ])
-  
-  lunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')
-  /*!
-   * lunr.trimmer
-   * Copyright (C) 2018 Oliver Nightingale
-   */
-  
-  /**
-   * lunr.trimmer is a pipeline function for trimming non word
-   * characters from the beginning and end of tokens before they
-   * enter the index.
-   *
-   * This implementation may not work correctly for non latin
-   * characters and should either be removed or adapted for use
-   * with languages with non-latin characters.
-   *
-   * @static
-   * @implements {lunr.PipelineFunction}
-   * @param {lunr.Token} token The token to pass through the filter
-   * @returns {lunr.Token}
-   * @see lunr.Pipeline
-   */
-  lunr.trimmer = function (token) {
-    return token.update(function (s) {
-      return s.replace(/^\W+/, '').replace(/\W+$/, '')
-    })
-  }
-  
-  lunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')
-  /*!
-   * lunr.TokenSet
-   * Copyright (C) 2018 Oliver Nightingale
-   */
-  
-  /**
-   * A token set is used to store the unique list of all tokens
-   * within an index. Token sets are also used to represent an
-   * incoming query to the index, this query token set and index
-   * token set are then intersected to find which tokens to look
-   * up in the inverted index.
-   *
-   * A token set can hold multiple tokens, as in the case of the
-   * index token set, or it can hold a single token as in the
-   * case of a simple query token set.
-   *
-   * Additionally token sets are used to perform wildcard matching.
-   * Leading, contained and trailing wildcards are supported, and
-   * from this edit distance matching can also be provided.
-   *
-   * Token sets are implemented as a minimal finite state automata,
-   * where both common prefixes and suffixes are shared between tokens.
-   * This helps to reduce the space used for storing the token set.
-   *
-   * @constructor
-   */
-  lunr.TokenSet = function () {
-    this.final = false
-    this.edges = {}
-    this.id = lunr.TokenSet._nextId
-    lunr.TokenSet._nextId += 1
-  }
-  
-  /**
-   * Keeps track of the next, auto increment, identifier to assign
-   * to a new tokenSet.
-   *
-   * TokenSets require a unique identifier to be correctly minimised.
-   *
-   * @private
-   */
-  lunr.TokenSet._nextId = 1
-  
-  /**
-   * Creates a TokenSet instance from the given sorted array of words.
-   *
-   * @param {String[]} arr - A sorted array of strings to create the set from.
-   * @returns {lunr.TokenSet}
-   * @throws Will throw an error if the input array is not sorted.
-   */
-  lunr.TokenSet.fromArray = function (arr) {
-    var builder = new lunr.TokenSet.Builder
-  
-    for (var i = 0, len = arr.length; i < len; i++) {
-      builder.insert(arr[i])
-    }
-  
-    builder.finish()
-    return builder.root
-  }
-  
-  /**
-   * Creates a token set from a query clause.
-   *
-   * @private
-   * @param {Object} clause - A single clause from lunr.Query.
-   * @param {string} clause.term - The query clause term.
-   * @param {number} [clause.editDistance] - The optional edit distance for the term.
-   * @returns {lunr.TokenSet}
-   */
-  lunr.TokenSet.fromClause = function (clause) {
-    if ('editDistance' in clause) {
-      return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)
-    } else {
-      return lunr.TokenSet.fromString(clause.term)
-    }
-  }
-  
-  /**
-   * Creates a token set representing a single string with a specified
-   * edit distance.
-   *
-   * Insertions, deletions, substitutions and transpositions are each
-   * treated as an edit distance of 1.
-   *
-   * Increasing the allowed edit distance will have a dramatic impact
-   * on the performance of both creating and intersecting these TokenSets.
-   * It is advised to keep the edit distance less than 3.
-   *
-   * @param {string} str - The string to create the token set from.
-   * @param {number} editDistance - The allowed edit distance to match.
-   * @returns {lunr.Vector}
-   */
-  lunr.TokenSet.fromFuzzyString = function (str, editDistance) {
-    var root = new lunr.TokenSet
-  
-    var stack = [{
-      node: root,
-      editsRemaining: editDistance,
-      str: str
-    }]
-  
-    while (stack.length) {
-      var frame = stack.pop()
-  
-      // no edit
-      if (frame.str.length > 0) {
-        var char = frame.str.charAt(0),
-            noEditNode
-  
-        if (char in frame.node.edges) {
-          noEditNode = frame.node.edges[char]
-        } else {
-          noEditNode = new lunr.TokenSet
-          frame.node.edges[char] = noEditNode
-        }
-  
-        if (frame.str.length == 1) {
-          noEditNode.final = true
-        }
-  
-        stack.push({
-          node: noEditNode,
-          editsRemaining: frame.editsRemaining,
-          str: frame.str.slice(1)
-        })
-      }
-  
-      // deletion
-      // can only do a deletion if we have enough edits remaining
-      // and if there are characters left to delete in the string
-      if (frame.editsRemaining > 0 && frame.str.length > 1) {
-        var char = frame.str.charAt(1),
-            deletionNode
-  
-        if (char in frame.node.edges) {
-          deletionNode = frame.node.edges[char]
-        } else {
-          deletionNode = new lunr.TokenSet
-          frame.node.edges[char] = deletionNode
-        }
-  
-        if (frame.str.length <= 2) {
-          deletionNode.final = true
-        } else {
-          stack.push({
-            node: deletionNode,
-            editsRemaining: frame.editsRemaining - 1,
-            str: frame.str.slice(2)
-          })
-        }
-      }
-  
-      // deletion
-      // just removing the last character from the str
-      if (frame.editsRemaining > 0 && frame.str.length == 1) {
-        frame.node.final = true
-      }
-  
-      // substitution
-      // can only do a substitution if we have enough edits remaining
-      // and if there are characters left to substitute
-      if (frame.editsRemaining > 0 && frame.str.length >= 1) {
-        if ("*" in frame.node.edges) {
-          var substitutionNode = frame.node.edges["*"]
-        } else {
-          var substitutionNode = new lunr.TokenSet
-          frame.node.edges["*"] = substitutionNode
-        }
-  
-        if (frame.str.length == 1) {
-          substitutionNode.final = true
-        } else {
-          stack.push({
-            node: substitutionNode,
-            editsRemaining: frame.editsRemaining - 1,
-            str: frame.str.slice(1)
-          })
-        }
-      }
-  
-      // insertion
-      // can only do insertion if there are edits remaining
-      if (frame.editsRemaining > 0) {
-        if ("*" in frame.node.edges) {
-          var insertionNode = frame.node.edges["*"]
-        } else {
-          var insertionNode = new lunr.TokenSet
-          frame.node.edges["*"] = insertionNode
-        }
-  
-        if (frame.str.length == 0) {
-          insertionNode.final = true
-        } else {
-          stack.push({
-            node: insertionNode,
-            editsRemaining: frame.editsRemaining - 1,
-            str: frame.str
-          })
-        }
-      }
-  
-      // transposition
-      // can only do a transposition if there are edits remaining
-      // and there are enough characters to transpose
-      if (frame.editsRemaining > 0 && frame.str.length > 1) {
-        var charA = frame.str.charAt(0),
-            charB = frame.str.charAt(1),
-            transposeNode
-  
-        if (charB in frame.node.edges) {
-          transposeNode = frame.node.edges[charB]
-        } else {
-          transposeNode = new lunr.TokenSet
-          frame.node.edges[charB] = transposeNode
-        }
-  
-        if (frame.str.length == 1) {
-          transposeNode.final = true
-        } else {
-          stack.push({
-            node: transposeNode,
-            editsRemaining: frame.editsRemaining - 1,
-            str: charA + frame.str.slice(2)
-          })
-        }
-      }
-    }
-  
-    return root
-  }
-  
-  /**
-   * Creates a TokenSet from a string.
-   *
-   * The string may contain one or more wildcard characters (*)
-   * that will allow wildcard matching when intersecting with
-   * another TokenSet.
-   *
-   * @param {string} str - The string to create a TokenSet from.
-   * @returns {lunr.TokenSet}
-   */
-  lunr.TokenSet.fromString = function (str) {
-    var node = new lunr.TokenSet,
-        root = node
-  
-    /*
-     * Iterates through all characters within the passed string
-     * appending a node for each character.
-     *
-     * When a wildcard character is found then a self
-     * referencing edge is introduced to continually match
-     * any number of any characters.
-     */
-    for (var i = 0, len = str.length; i < len; i++) {
-      var char = str[i],
-          final = (i == len - 1)
-  
-      if (char == "*") {
-        node.edges[char] = node
-        node.final = final
-  
-      } else {
-        var next = new lunr.TokenSet
-        next.final = final
-  
-        node.edges[char] = next
-        node = next
-      }
-    }
-  
-    return root
-  }
-  
-  /**
-   * Converts this TokenSet into an array of strings
-   * contained within the TokenSet.
-   *
-   * @returns {string[]}
-   */
-  lunr.TokenSet.prototype.toArray = function () {
-    var words = []
-  
-    var stack = [{
-      prefix: "",
-      node: this
-    }]
-  
-    while (stack.length) {
-      var frame = stack.pop(),
-          edges = Object.keys(frame.node.edges),
-          len = edges.length
-  
-      if (frame.node.final) {
-        /* In Safari, at this point the prefix is sometimes corrupted, see:
-         * https://github.com/olivernn/lunr.js/issues/279 Calling any
-         * String.prototype method forces Safari to "cast" this string to what
-         * it's supposed to be, fixing the bug. */
-        frame.prefix.charAt(0)
-        words.push(frame.prefix)
-      }
-  
-      for (var i = 0; i < len; i++) {
-        var edge = edges[i]
-  
-        stack.push({
-          prefix: frame.prefix.concat(edge),
-          node: frame.node.edges[edge]
-        })
-      }
-    }
-  
-    return words
-  }
-  
-  /**
-   * Generates a string representation of a TokenSet.
-   *
-   * This is intended to allow TokenSets to be used as keys
-   * in objects, largely to aid the construction and minimisation
-   * of a TokenSet. As such it is not designed to be a human
-   * friendly representation of the TokenSet.
-   *
-   * @returns {string}
-   */
-  lunr.TokenSet.prototype.toString = function () {
-    // NOTE: Using Object.keys here as this.edges is very likely
-    // to enter 'hash-mode' with many keys being added
-    //
-    // avoiding a for-in loop here as it leads to the function
-    // being de-optimised (at least in V8). From some simple
-    // benchmarks the performance is comparable, but allowing
-    // V8 to optimize may mean easy performance wins in the future.
-  
-    if (this._str) {
-      return this._str
-    }
-  
-    var str = this.final ? '1' : '0',
-        labels = Object.keys(this.edges).sort(),
-        len = labels.length
-  
-    for (var i = 0; i < len; i++) {
-      var label = labels[i],
-          node = this.edges[label]
-  
-      str = str + label + node.id
-    }
-  
-    return str
-  }
-  
-  /**
-   * Returns a new TokenSet that is the intersection of
-   * this TokenSet and the passed TokenSet.
-   *
-   * This intersection will take into account any wildcards
-   * contained within the TokenSet.
-   *
-   * @param {lunr.TokenSet} b - An other TokenSet to intersect with.
-   * @returns {lunr.TokenSet}
-   */
-  lunr.TokenSet.prototype.intersect = function (b) {
-    var output = new lunr.TokenSet,
-        frame = undefined
-  
-    var stack = [{
-      qNode: b,
-      output: output,
-      node: this
-    }]
-  
-    while (stack.length) {
-      frame = stack.pop()
-  
-      // NOTE: As with the #toString method, we are using
-      // Object.keys and a for loop instead of a for-in loop
-      // as both of these objects enter 'hash' mode, causing
-      // the function to be de-optimised in V8
-      var qEdges = Object.keys(frame.qNode.edges),
-          qLen = qEdges.length,
-          nEdges = Object.keys(frame.node.edges),
-          nLen = nEdges.length
-  
-      for (var q = 0; q < qLen; q++) {
-        var qEdge = qEdges[q]
-  
-        for (var n = 0; n < nLen; n++) {
-          var nEdge = nEdges[n]
-  
-          if (nEdge == qEdge || qEdge == '*') {
-            var node = frame.node.edges[nEdge],
-                qNode = frame.qNode.edges[qEdge],
-                final = node.final && qNode.final,
-                next = undefined
-  
-            if (nEdge in frame.output.edges) {
-              // an edge already exists for this character
-              // no need to create a new node, just set the finality
-              // bit unless this node is already final
-              next = frame.output.edges[nEdge]
-              next.final = next.final || final
-  
-            } else {
-              // no edge exists yet, must create one
-              // set the finality bit and insert it
-              // into the output
-              next = new lunr.TokenSet
-              next.final = final
-              frame.output.edges[nEdge] = next
-            }
-  
-            stack.push({
-              qNode: qNode,
-              output: next,
-              node: node
-            })
-          }
-        }
-      }
-    }
-  
-    return output
-  }
-  lunr.TokenSet.Builder = function () {
-    this.previousWord = ""
-    this.root = new lunr.TokenSet
-    this.uncheckedNodes = []
-    this.minimizedNodes = {}
-  }
-  
-  lunr.TokenSet.Builder.prototype.insert = function (word) {
-    var node,
-        commonPrefix = 0
-  
-    if (word < this.previousWord) {
-      throw new Error ("Out of order word insertion")
-    }
-  
-    for (var i = 0; i < word.length && i < this.previousWord.length; i++) {
-      if (word[i] != this.previousWord[i]) break
-      commonPrefix++
-    }
-  
-    this.minimize(commonPrefix)
-  
-    if (this.uncheckedNodes.length == 0) {
-      node = this.root
-    } else {
-      node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child
-    }
-  
-    for (var i = commonPrefix; i < word.length; i++) {
-      var nextNode = new lunr.TokenSet,
-          char = word[i]
-  
-      node.edges[char] = nextNode
-  
-      this.uncheckedNodes.push({
-        parent: node,
-        char: char,
-        child: nextNode
-      })
-  
-      node = nextNode
-    }
-  
-    node.final = true
-    this.previousWord = word
-  }
-  
-  lunr.TokenSet.Builder.prototype.finish = function () {
-    this.minimize(0)
-  }
-  
-  lunr.TokenSet.Builder.prototype.minimize = function (downTo) {
-    for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {
-      var node = this.uncheckedNodes[i],
-          childKey = node.child.toString()
-  
-      if (childKey in this.minimizedNodes) {
-        node.parent.edges[node.char] = this.minimizedNodes[childKey]
-      } else {
-        // Cache the key for this node since
-        // we know it can't change anymore
-        node.child._str = childKey
-  
-        this.minimizedNodes[childKey] = node.child
-      }
-  
-      this.uncheckedNodes.pop()
-    }
-  }
-  /*!
-   * lunr.Index
-   * Copyright (C) 2018 Oliver Nightingale
-   */
-  
-  /**
-   * An index contains the built index of all documents and provides a query interface
-   * to the index.
-   *
-   * Usually instances of lunr.Index will not be created using this constructor, instead
-   * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be
-   * used to load previously built and serialized indexes.
-   *
-   * @constructor
-   * @param {Object} attrs - The attributes of the built search index.
-   * @param {Object} attrs.invertedIndex - An index of term/field to document reference.
-   * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors
-   * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.
-   * @param {string[]} attrs.fields - The names of indexed document fields.
-   * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.
-   */
-  lunr.Index = function (attrs) {
-    this.invertedIndex = attrs.invertedIndex
-    this.fieldVectors = attrs.fieldVectors
-    this.tokenSet = attrs.tokenSet
-    this.fields = attrs.fields
-    this.pipeline = attrs.pipeline
-  }
-  
-  /**
-   * A result contains details of a document matching a search query.
-   * @typedef {Object} lunr.Index~Result
-   * @property {string} ref - The reference of the document this result represents.
-   * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.
-   * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.
-   */
-  
-  /**
-   * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple
-   * query language which itself is parsed into an instance of lunr.Query.
-   *
-   * For programmatically building queries it is advised to directly use lunr.Query, the query language
-   * is best used for human entered text rather than program generated text.
-   *
-   * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported
-   * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'
-   * or 'world', though those that contain both will rank higher in the results.
-   *
-   * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can
-   * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding
-   * wildcards will increase the number of documents that will be found but can also have a negative
-   * impact on query performance, especially with wildcards at the beginning of a term.
-   *
-   * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term
-   * hello in the title field will match this query. Using a field not present in the index will lead
-   * to an error being thrown.
-   *
-   * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term
-   * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported
-   * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.
-   * Avoid large values for edit distance to improve query performance.
-   *
-   * Each term also supports a presence modifier. By default a term's presence in document is optional, however
-   * this can be changed to either required or prohibited. For a term's presence to be required in a document the
-   * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and
-   * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not
-   * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.
-   *
-   * To escape special characters the backslash character '\' can be used, this allows searches to include
-   * characters that would normally be considered modifiers, e.g. `foo\~2` will search for a term "foo~2" instead
-   * of attempting to apply a boost of 2 to the search term "foo".
-   *
-   * @typedef {string} lunr.Index~QueryString
-   * @example <caption>Simple single term query</caption>
-   * hello
-   * @example <caption>Multiple term query</caption>
-   * hello world
-   * @example <caption>term scoped to a field</caption>
-   * title:hello
-   * @example <caption>term with a boost of 10</caption>
-   * hello^10
-   * @example <caption>term with an edit distance of 2</caption>
-   * hello~2
-   * @example <caption>terms with presence modifiers</caption>
-   * -foo +bar baz
-   */
-  
-  /**
-   * Performs a search against the index using lunr query syntax.
-   *
-   * Results will be returned sorted by their score, the most relevant results
-   * will be returned first.  For details on how the score is calculated, please see
-   * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.
-   *
-   * For more programmatic querying use lunr.Index#query.
-   *
-   * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.
-   * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.
-   * @returns {lunr.Index~Result[]}
-   */
-  lunr.Index.prototype.search = function (queryString) {
-    return this.query(function (query) {
-      var parser = new lunr.QueryParser(queryString, query)
-      parser.parse()
-    })
-  }
-  
-  /**
-   * A query builder callback provides a query object to be used to express
-   * the query to perform on the index.
-   *
-   * @callback lunr.Index~queryBuilder
-   * @param {lunr.Query} query - The query object to build up.
-   * @this lunr.Query
-   */
-  
-  /**
-   * Performs a query against the index using the yielded lunr.Query object.
-   *
-   * If performing programmatic queries against the index, this method is preferred
-   * over lunr.Index#search so as to avoid the additional query parsing overhead.
-   *
-   * A query object is yielded to the supplied function which should be used to
-   * express the query to be run against the index.
-   *
-   * Note that although this function takes a callback parameter it is _not_ an
-   * asynchronous operation, the callback is just yielded a query object to be
-   * customized.
-   *
-   * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.
-   * @returns {lunr.Index~Result[]}
-   */
-  lunr.Index.prototype.query = function (fn) {
-    // for each query clause
-    // * process terms
-    // * expand terms from token set
-    // * find matching documents and metadata
-    // * get document vectors
-    // * score documents
-  
-    var query = new lunr.Query(this.fields),
-        matchingFields = Object.create(null),
-        queryVectors = Object.create(null),
-        termFieldCache = Object.create(null),
-        requiredMatches = Object.create(null),
-        prohibitedMatches = Object.create(null)
-  
-    /*
-     * To support field level boosts a query vector is created per
-     * field. An empty vector is eagerly created to support negated
-     * queries.
-     */
-    for (var i = 0; i < this.fields.length; i++) {
-      queryVectors[this.fields[i]] = new lunr.Vector
-    }
-  
-    fn.call(query, query)
-  
-    for (var i = 0; i < query.clauses.length; i++) {
-      /*
-       * Unless the pipeline has been disabled for this term, which is
-       * the case for terms with wildcards, we need to pass the clause
-       * term through the search pipeline. A pipeline returns an array
-       * of processed terms. Pipeline functions may expand the passed
-       * term, which means we may end up performing multiple index lookups
-       * for a single query term.
-       */
-      var clause = query.clauses[i],
-          terms = null,
-          clauseMatches = lunr.Set.complete
-  
-      if (clause.usePipeline) {
-        terms = this.pipeline.runString(clause.term, {
-          fields: clause.fields
-        })
-      } else {
-        terms = [clause.term]
-      }
-  
-      for (var m = 0; m < terms.length; m++) {
-        var term = terms[m]
-  
-        /*
-         * Each term returned from the pipeline needs to use the same query
-         * clause object, e.g. the same boost and or edit distance. The
-         * simplest way to do this is to re-use the clause object but mutate
-         * its term property.
-         */
-        clause.term = term
-  
-        /*
-         * From the term in the clause we create a token set which will then
-         * be used to intersect the indexes token set to get a list of terms
-         * to lookup in the inverted index
-         */
-        var termTokenSet = lunr.TokenSet.fromClause(clause),
-            expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()
-  
-        /*
-         * If a term marked as required does not exist in the tokenSet it is
-         * impossible for the search to return any matches. We set all the field
-         * scoped required matches set to empty and stop examining any further
-         * clauses.
-         */
-        if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {
-          for (var k = 0; k < clause.fields.length; k++) {
-            var field = clause.fields[k]
-            requiredMatches[field] = lunr.Set.empty
-          }
-  
-          break
-        }
-  
-        for (var j = 0; j < expandedTerms.length; j++) {
-          /*
-           * For each term get the posting and termIndex, this is required for
-           * building the query vector.
-           */
-          var expandedTerm = expandedTerms[j],
-              posting = this.invertedIndex[expandedTerm],
-              termIndex = posting._index
-  
-          for (var k = 0; k < clause.fields.length; k++) {
-            /*
-             * For each field that this query term is scoped by (by default
-             * all fields are in scope) we need to get all the document refs
-             * that have this term in that field.
-             *
-             * The posting is the entry in the invertedIndex for the matching
-             * term from above.
-             */
-            var field = clause.fields[k],
-                fieldPosting = posting[field],
-                matchingDocumentRefs = Object.keys(fieldPosting),
-                termField = expandedTerm + "/" + field,
-                matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)
-  
-            /*
-             * if the presence of this term is required ensure that the matching
-             * documents are added to the set of required matches for this clause.
-             *
-             */
-            if (clause.presence == lunr.Query.presence.REQUIRED) {
-              clauseMatches = clauseMatches.union(matchingDocumentsSet)
-  
-              if (requiredMatches[field] === undefined) {
-                requiredMatches[field] = lunr.Set.complete
-              }
-            }
-  
-            /*
-             * if the presence of this term is prohibited ensure that the matching
-             * documents are added to the set of prohibited matches for this field,
-             * creating that set if it does not yet exist.
-             */
-            if (clause.presence == lunr.Query.presence.PROHIBITED) {
-              if (prohibitedMatches[field] === undefined) {
-                prohibitedMatches[field] = lunr.Set.empty
-              }
-  
-              prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)
-  
-              /*
-               * Prohibited matches should not be part of the query vector used for
-               * similarity scoring and no metadata should be extracted so we continue
-               * to the next field
-               */
-              continue
-            }
-  
-            /*
-             * The query field vector is populated using the termIndex found for
-             * the term and a unit value with the appropriate boost applied.
-             * Using upsert because there could already be an entry in the vector
-             * for the term we are working with. In that case we just add the scores
-             * together.
-             */
-            queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })
-  
-            /**
-             * If we've already seen this term, field combo then we've already collected
-             * the matching documents and metadata, no need to go through all that again
-             */
-            if (termFieldCache[termField]) {
-              continue
-            }
-  
-            for (var l = 0; l < matchingDocumentRefs.length; l++) {
-              /*
-               * All metadata for this term/field/document triple
-               * are then extracted and collected into an instance
-               * of lunr.MatchData ready to be returned in the query
-               * results
-               */
-              var matchingDocumentRef = matchingDocumentRefs[l],
-                  matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),
-                  metadata = fieldPosting[matchingDocumentRef],
-                  fieldMatch
-  
-              if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {
-                matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)
-              } else {
-                fieldMatch.add(expandedTerm, field, metadata)
-              }
-  
-            }
-  
-            termFieldCache[termField] = true
-          }
-        }
-      }
-  
-      /**
-       * If the presence was required we need to update the requiredMatches field sets.
-       * We do this after all fields for the term have collected their matches because
-       * the clause terms presence is required in _any_ of the fields not _all_ of the
-       * fields.
-       */
-      if (clause.presence === lunr.Query.presence.REQUIRED) {
-        for (var k = 0; k < clause.fields.length; k++) {
-          var field = clause.fields[k]
-          requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)
-        }
-      }
-    }
-  
-    /**
-     * Need to combine the field scoped required and prohibited
-     * matching documents into a global set of required and prohibited
-     * matches
-     */
-    var allRequiredMatches = lunr.Set.complete,
-        allProhibitedMatches = lunr.Set.empty
-  
-    for (var i = 0; i < this.fields.length; i++) {
-      var field = this.fields[i]
-  
-      if (requiredMatches[field]) {
-        allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])
-      }
-  
-      if (prohibitedMatches[field]) {
-        allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])
-      }
-    }
-  
-    var matchingFieldRefs = Object.keys(matchingFields),
-        results = [],
-        matches = Object.create(null)
-  
-    /*
-     * If the query is negated (contains only prohibited terms)
-     * we need to get _all_ fieldRefs currently existing in the
-     * index. This is only done when we know that the query is
-     * entirely prohibited terms to avoid any cost of getting all
-     * fieldRefs unnecessarily.
-     *
-     * Additionally, blank MatchData must be created to correctly
-     * populate the results.
-     */
-    if (query.isNegated()) {
-      matchingFieldRefs = Object.keys(this.fieldVectors)
-  
-      for (var i = 0; i < matchingFieldRefs.length; i++) {
-        var matchingFieldRef = matchingFieldRefs[i]
-        var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)
-        matchingFields[matchingFieldRef] = new lunr.MatchData
-      }
-    }
-  
-    for (var i = 0; i < matchingFieldRefs.length; i++) {
-      /*
-       * Currently we have document fields that match the query, but we
-       * need to return documents. The matchData and scores are combined
-       * from multiple fields belonging to the same document.
-       *
-       * Scores are calculated by field, using the query vectors created
-       * above, and combined into a final document score using addition.
-       */
-      var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),
-          docRef = fieldRef.docRef
-  
-      if (!allRequiredMatches.contains(docRef)) {
-        continue
-      }
-  
-      if (allProhibitedMatches.contains(docRef)) {
-        continue
-      }
-  
-      var fieldVector = this.fieldVectors[fieldRef],
-          score = queryVectors[fieldRef.fieldName].similarity(fieldVector),
-          docMatch
-  
-      if ((docMatch = matches[docRef]) !== undefined) {
-        docMatch.score += score
-        docMatch.matchData.combine(matchingFields[fieldRef])
-      } else {
-        var match = {
-          ref: docRef,
-          score: score,
-          matchData: matchingFields[fieldRef]
-        }
-        matches[docRef] = match
-        results.push(match)
-      }
-    }
-  
-    /*
-     * Sort the results objects by score, highest first.
-     */
-    return results.sort(function (a, b) {
-      return b.score - a.score
-    })
-  }
-  
-  /**
-   * Prepares the index for JSON serialization.
-   *
-   * The schema for this JSON blob will be described in a
-   * separate JSON schema file.
-   *
-   * @returns {Object}
-   */
-  lunr.Index.prototype.toJSON = function () {
-    var invertedIndex = Object.keys(this.invertedIndex)
-      .sort()
-      .map(function (term) {
-        return [term, this.invertedIndex[term]]
-      }, this)
-  
-    var fieldVectors = Object.keys(this.fieldVectors)
-      .map(function (ref) {
-        return [ref, this.fieldVectors[ref].toJSON()]
-      }, this)
-  
-    return {
-      version: lunr.version,
-      fields: this.fields,
-      fieldVectors: fieldVectors,
-      invertedIndex: invertedIndex,
-      pipeline: this.pipeline.toJSON()
-    }
-  }
-  
-  /**
-   * Loads a previously serialized lunr.Index
-   *
-   * @param {Object} serializedIndex - A previously serialized lunr.Index
-   * @returns {lunr.Index}
-   */
-  lunr.Index.load = function (serializedIndex) {
-    var attrs = {},
-        fieldVectors = {},
-        serializedVectors = serializedIndex.fieldVectors,
-        invertedIndex = Object.create(null),
-        serializedInvertedIndex = serializedIndex.invertedIndex,
-        tokenSetBuilder = new lunr.TokenSet.Builder,
-        pipeline = lunr.Pipeline.load(serializedIndex.pipeline)
-  
-    if (serializedIndex.version != lunr.version) {
-      lunr.utils.warn("Version mismatch when loading serialised index. Current version of lunr '" + lunr.version + "' does not match serialized index '" + serializedIndex.version + "'")
-    }
-  
-    for (var i = 0; i < serializedVectors.length; i++) {
-      var tuple = serializedVectors[i],
-          ref = tuple[0],
-          elements = tuple[1]
-  
-      fieldVectors[ref] = new lunr.Vector(elements)
-    }
-  
-    for (var i = 0; i < serializedInvertedIndex.length; i++) {
-      var tuple = serializedInvertedIndex[i],
-          term = tuple[0],
-          posting = tuple[1]
-  
-      tokenSetBuilder.insert(term)
-      invertedIndex[term] = posting
-    }
-  
-    tokenSetBuilder.finish()
-  
-    attrs.fields = serializedIndex.fields
-  
-    attrs.fieldVectors = fieldVectors
-    attrs.invertedIndex = invertedIndex
-    attrs.tokenSet = tokenSetBuilder.root
-    attrs.pipeline = pipeline
-  
-    return new lunr.Index(attrs)
-  }
-  /*!
-   * lunr.Builder
-   * Copyright (C) 2018 Oliver Nightingale
-   */
-  
-  /**
-   * lunr.Builder performs indexing on a set of documents and
-   * returns instances of lunr.Index ready for querying.
-   *
-   * All configuration of the index is done via the builder, the
-   * fields to index, the document reference, the text processing
-   * pipeline and document scoring parameters are all set on the
-   * builder before indexing.
-   *
-   * @constructor
-   * @property {string} _ref - Internal reference to the document reference field.
-   * @property {string[]} _fields - Internal reference to the document fields to index.
-   * @property {object} invertedIndex - The inverted index maps terms to document fields.
-   * @property {object} documentTermFrequencies - Keeps track of document term frequencies.
-   * @property {object} documentLengths - Keeps track of the length of documents added to the index.
-   * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.
-   * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.
-   * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.
-   * @property {number} documentCount - Keeps track of the total number of documents indexed.
-   * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.
-   * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.
-   * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.
-   * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.
-   */
-  lunr.Builder = function () {
-    this._ref = "id"
-    this._fields = Object.create(null)
-    this._documents = Object.create(null)
-    this.invertedIndex = Object.create(null)
-    this.fieldTermFrequencies = {}
-    this.fieldLengths = {}
-    this.tokenizer = lunr.tokenizer
-    this.pipeline = new lunr.Pipeline
-    this.searchPipeline = new lunr.Pipeline
-    this.documentCount = 0
-    this._b = 0.75
-    this._k1 = 1.2
-    this.termIndex = 0
-    this.metadataWhitelist = []
-  }
-  
-  /**
-   * Sets the document field used as the document reference. Every document must have this field.
-   * The type of this field in the document should be a string, if it is not a string it will be
-   * coerced into a string by calling toString.
-   *
-   * The default ref is 'id'.
-   *
-   * The ref should _not_ be changed during indexing, it should be set before any documents are
-   * added to the index. Changing it during indexing can lead to inconsistent results.
-   *
-   * @param {string} ref - The name of the reference field in the document.
-   */
-  lunr.Builder.prototype.ref = function (ref) {
-    this._ref = ref
-  }
-  
-  /**
-   * A function that is used to extract a field from a document.
-   *
-   * Lunr expects a field to be at the top level of a document, if however the field
-   * is deeply nested within a document an extractor function can be used to extract
-   * the right field for indexing.
-   *
-   * @callback fieldExtractor
-   * @param {object} doc - The document being added to the index.
-   * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.
-   * @example <caption>Extracting a nested field</caption>
-   * function (doc) { return doc.nested.field }
-   */
-  
-  /**
-   * Adds a field to the list of document fields that will be indexed. Every document being
-   * indexed should have this field. Null values for this field in indexed documents will
-   * not cause errors but will limit the chance of that document being retrieved by searches.
-   *
-   * All fields should be added before adding documents to the index. Adding fields after
-   * a document has been indexed will have no effect on already indexed documents.
-   *
-   * Fields can be boosted at build time. This allows terms within that field to have more
-   * importance when ranking search results. Use a field boost to specify that matches within
-   * one field are more important than other fields.
-   *
-   * @param {string} fieldName - The name of a field to index in all documents.
-   * @param {object} attributes - Optional attributes associated with this field.
-   * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.
-   * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.
-   * @throws {RangeError} fieldName cannot contain unsupported characters '/'
-   */
-  lunr.Builder.prototype.field = function (fieldName, attributes) {
-    if (/\//.test(fieldName)) {
-      throw new RangeError ("Field '" + fieldName + "' contains illegal character '/'")
-    }
-  
-    this._fields[fieldName] = attributes || {}
-  }
-  
-  /**
-   * A parameter to tune the amount of field length normalisation that is applied when
-   * calculating relevance scores. A value of 0 will completely disable any normalisation
-   * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b
-   * will be clamped to the range 0 - 1.
-   *
-   * @param {number} number - The value to set for this tuning parameter.
-   */
-  lunr.Builder.prototype.b = function (number) {
-    if (number < 0) {
-      this._b = 0
-    } else if (number > 1) {
-      this._b = 1
-    } else {
-      this._b = number
-    }
-  }
-  
-  /**
-   * A parameter that controls the speed at which a rise in term frequency results in term
-   * frequency saturation. The default value is 1.2. Setting this to a higher value will give
-   * slower saturation levels, a lower value will result in quicker saturation.
-   *
-   * @param {number} number - The value to set for this tuning parameter.
-   */
-  lunr.Builder.prototype.k1 = function (number) {
-    this._k1 = number
-  }
-  
-  /**
-   * Adds a document to the index.
-   *
-   * Before adding fields to the index the index should have been fully setup, with the document
-   * ref and all fields to index already having been specified.
-   *
-   * The document must have a field name as specified by the ref (by default this is 'id') and
-   * it should have all fields defined for indexing, though null or undefined values will not
-   * cause errors.
-   *
-   * Entire documents can be boosted at build time. Applying a boost to a document indicates that
-   * this document should rank higher in search results than other documents.
-   *
-   * @param {object} doc - The document to add to the index.
-   * @param {object} attributes - Optional attributes associated with this document.
-   * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.
-   */
-  lunr.Builder.prototype.add = function (doc, attributes) {
-    var docRef = doc[this._ref],
-        fields = Object.keys(this._fields)
-  
-    this._documents[docRef] = attributes || {}
-    this.documentCount += 1
-  
-    for (var i = 0; i < fields.length; i++) {
-      var fieldName = fields[i],
-          extractor = this._fields[fieldName].extractor,
-          field = extractor ? extractor(doc) : doc[fieldName],
-          tokens = this.tokenizer(field, {
-            fields: [fieldName]
-          }),
-          terms = this.pipeline.run(tokens),
-          fieldRef = new lunr.FieldRef (docRef, fieldName),
-          fieldTerms = Object.create(null)
-  
-      this.fieldTermFrequencies[fieldRef] = fieldTerms
-      this.fieldLengths[fieldRef] = 0
-  
-      // store the length of this field for this document
-      this.fieldLengths[fieldRef] += terms.length
-  
-      // calculate term frequencies for this field
-      for (var j = 0; j < terms.length; j++) {
-        var term = terms[j]
-  
-        if (fieldTerms[term] == undefined) {
-          fieldTerms[term] = 0
-        }
-  
-        fieldTerms[term] += 1
-  
-        // add to inverted index
-        // create an initial posting if one doesn't exist
-        if (this.invertedIndex[term] == undefined) {
-          var posting = Object.create(null)
-          posting["_index"] = this.termIndex
-          this.termIndex += 1
-  
-          for (var k = 0; k < fields.length; k++) {
-            posting[fields[k]] = Object.create(null)
-          }
-  
-          this.invertedIndex[term] = posting
-        }
-  
-        // add an entry for this term/fieldName/docRef to the invertedIndex
-        if (this.invertedIndex[term][fieldName][docRef] == undefined) {
-          this.invertedIndex[term][fieldName][docRef] = Object.create(null)
-        }
-  
-        // store all whitelisted metadata about this token in the
-        // inverted index
-        for (var l = 0; l < this.metadataWhitelist.length; l++) {
-          var metadataKey = this.metadataWhitelist[l],
-              metadata = term.metadata[metadataKey]
-  
-          if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {
-            this.invertedIndex[term][fieldName][docRef][metadataKey] = []
-          }
-  
-          this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)
-        }
-      }
-  
-    }
-  }
-  
-  /**
-   * Calculates the average document length for this index
-   *
-   * @private
-   */
-  lunr.Builder.prototype.calculateAverageFieldLengths = function () {
-  
-    var fieldRefs = Object.keys(this.fieldLengths),
-        numberOfFields = fieldRefs.length,
-        accumulator = {},
-        documentsWithField = {}
-  
-    for (var i = 0; i < numberOfFields; i++) {
-      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),
-          field = fieldRef.fieldName
-  
-      documentsWithField[field] || (documentsWithField[field] = 0)
-      documentsWithField[field] += 1
-  
-      accumulator[field] || (accumulator[field] = 0)
-      accumulator[field] += this.fieldLengths[fieldRef]
-    }
-  
-    var fields = Object.keys(this._fields)
-  
-    for (var i = 0; i < fields.length; i++) {
-      var fieldName = fields[i]
-      accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]
-    }
-  
-    this.averageFieldLength = accumulator
-  }
-  
-  /**
-   * Builds a vector space model of every document using lunr.Vector
-   *
-   * @private
-   */
-  lunr.Builder.prototype.createFieldVectors = function () {
-    var fieldVectors = {},
-        fieldRefs = Object.keys(this.fieldTermFrequencies),
-        fieldRefsLength = fieldRefs.length,
-        termIdfCache = Object.create(null)
-  
-    for (var i = 0; i < fieldRefsLength; i++) {
-      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),
-          fieldName = fieldRef.fieldName,
-          fieldLength = this.fieldLengths[fieldRef],
-          fieldVector = new lunr.Vector,
-          termFrequencies = this.fieldTermFrequencies[fieldRef],
-          terms = Object.keys(termFrequencies),
-          termsLength = terms.length
-  
-  
-      var fieldBoost = this._fields[fieldName].boost || 1,
-          docBoost = this._documents[fieldRef.docRef].boost || 1
-  
-      for (var j = 0; j < termsLength; j++) {
-        var term = terms[j],
-            tf = termFrequencies[term],
-            termIndex = this.invertedIndex[term]._index,
-            idf, score, scoreWithPrecision
-  
-        if (termIdfCache[term] === undefined) {
-          idf = lunr.idf(this.invertedIndex[term], this.documentCount)
-          termIdfCache[term] = idf
-        } else {
-          idf = termIdfCache[term]
-        }
-  
-        score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)
-        score *= fieldBoost
-        score *= docBoost
-        scoreWithPrecision = Math.round(score * 1000) / 1000
-        // Converts 1.23456789 to 1.234.
-        // Reducing the precision so that the vectors take up less
-        // space when serialised. Doing it now so that they behave
-        // the same before and after serialisation. Also, this is
-        // the fastest approach to reducing a number's precision in
-        // JavaScript.
-  
-        fieldVector.insert(termIndex, scoreWithPrecision)
-      }
-  
-      fieldVectors[fieldRef] = fieldVector
-    }
-  
-    this.fieldVectors = fieldVectors
-  }
-  
-  /**
-   * Creates a token set of all tokens in the index using lunr.TokenSet
-   *
-   * @private
-   */
-  lunr.Builder.prototype.createTokenSet = function () {
-    this.tokenSet = lunr.TokenSet.fromArray(
-      Object.keys(this.invertedIndex).sort()
-    )
-  }
-  
-  /**
-   * Builds the index, creating an instance of lunr.Index.
-   *
-   * This completes the indexing process and should only be called
-   * once all documents have been added to the index.
-   *
-   * @returns {lunr.Index}
-   */
-  lunr.Builder.prototype.build = function () {
-    this.calculateAverageFieldLengths()
-    this.createFieldVectors()
-    this.createTokenSet()
-  
-    return new lunr.Index({
-      invertedIndex: this.invertedIndex,
-      fieldVectors: this.fieldVectors,
-      tokenSet: this.tokenSet,
-      fields: Object.keys(this._fields),
-      pipeline: this.searchPipeline
-    })
-  }
-  
-  /**
-   * Applies a plugin to the index builder.
-   *
-   * A plugin is a function that is called with the index builder as its context.
-   * Plugins can be used to customise or extend the behaviour of the index
-   * in some way. A plugin is just a function, that encapsulated the custom
-   * behaviour that should be applied when building the index.
-   *
-   * The plugin function will be called with the index builder as its argument, additional
-   * arguments can also be passed when calling use. The function will be called
-   * with the index builder as its context.
-   *
-   * @param {Function} plugin The plugin to apply.
-   */
-  lunr.Builder.prototype.use = function (fn) {
-    var args = Array.prototype.slice.call(arguments, 1)
-    args.unshift(this)
-    fn.apply(this, args)
-  }
-  /**
-   * Contains and collects metadata about a matching document.
-   * A single instance of lunr.MatchData is returned as part of every
-   * lunr.Index~Result.
-   *
-   * @constructor
-   * @param {string} term - The term this match data is associated with
-   * @param {string} field - The field in which the term was found
-   * @param {object} metadata - The metadata recorded about this term in this field
-   * @property {object} metadata - A cloned collection of metadata associated with this document.
-   * @see {@link lunr.Index~Result}
-   */
-  lunr.MatchData = function (term, field, metadata) {
-    var clonedMetadata = Object.create(null),
-        metadataKeys = Object.keys(metadata || {})
-  
-    // Cloning the metadata to prevent the original
-    // being mutated during match data combination.
-    // Metadata is kept in an array within the inverted
-    // index so cloning the data can be done with
-    // Array#slice
-    for (var i = 0; i < metadataKeys.length; i++) {
-      var key = metadataKeys[i]
-      clonedMetadata[key] = metadata[key].slice()
-    }
-  
-    this.metadata = Object.create(null)
-  
-    if (term !== undefined) {
-      this.metadata[term] = Object.create(null)
-      this.metadata[term][field] = clonedMetadata
-    }
-  }
-  
-  /**
-   * An instance of lunr.MatchData will be created for every term that matches a
-   * document. However only one instance is required in a lunr.Index~Result. This
-   * method combines metadata from another instance of lunr.MatchData with this
-   * objects metadata.
-   *
-   * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.
-   * @see {@link lunr.Index~Result}
-   */
-  lunr.MatchData.prototype.combine = function (otherMatchData) {
-    var terms = Object.keys(otherMatchData.metadata)
-  
-    for (var i = 0; i < terms.length; i++) {
-      var term = terms[i],
-          fields = Object.keys(otherMatchData.metadata[term])
-  
-      if (this.metadata[term] == undefined) {
-        this.metadata[term] = Object.create(null)
-      }
-  
-      for (var j = 0; j < fields.length; j++) {
-        var field = fields[j],
-            keys = Object.keys(otherMatchData.metadata[term][field])
-  
-        if (this.metadata[term][field] == undefined) {
-          this.metadata[term][field] = Object.create(null)
-        }
-  
-        for (var k = 0; k < keys.length; k++) {
-          var key = keys[k]
-  
-          if (this.metadata[term][field][key] == undefined) {
-            this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]
-          } else {
-            this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])
-          }
-  
-        }
-      }
-    }
-  }
-  
-  /**
-   * Add metadata for a term/field pair to this instance of match data.
-   *
-   * @param {string} term - The term this match data is associated with
-   * @param {string} field - The field in which the term was found
-   * @param {object} metadata - The metadata recorded about this term in this field
-   */
-  lunr.MatchData.prototype.add = function (term, field, metadata) {
-    if (!(term in this.metadata)) {
-      this.metadata[term] = Object.create(null)
-      this.metadata[term][field] = metadata
-      return
-    }
-  
-    if (!(field in this.metadata[term])) {
-      this.metadata[term][field] = metadata
-      return
-    }
-  
-    var metadataKeys = Object.keys(metadata)
-  
-    for (var i = 0; i < metadataKeys.length; i++) {
-      var key = metadataKeys[i]
-  
-      if (key in this.metadata[term][field]) {
-        this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])
-      } else {
-        this.metadata[term][field][key] = metadata[key]
-      }
-    }
-  }
-  /**
-   * A lunr.Query provides a programmatic way of defining queries to be performed
-   * against a {@link lunr.Index}.
-   *
-   * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method
-   * so the query object is pre-initialized with the right index fields.
-   *
-   * @constructor
-   * @property {lunr.Query~Clause[]} clauses - An array of query clauses.
-   * @property {string[]} allFields - An array of all available fields in a lunr.Index.
-   */
-  lunr.Query = function (allFields) {
-    this.clauses = []
-    this.allFields = allFields
-  }
-  
-  /**
-   * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.
-   *
-   * This allows wildcards to be added to the beginning and end of a term without having to manually do any string
-   * concatenation.
-   *
-   * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.
-   *
-   * @constant
-   * @default
-   * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour
-   * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists
-   * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists
-   * @see lunr.Query~Clause
-   * @see lunr.Query#clause
-   * @see lunr.Query#term
-   * @example <caption>query term with trailing wildcard</caption>
-   * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })
-   * @example <caption>query term with leading and trailing wildcard</caption>
-   * query.term('foo', {
-   *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING
-   * })
-   */
-  
-  lunr.Query.wildcard = new String ("*")
-  lunr.Query.wildcard.NONE = 0
-  lunr.Query.wildcard.LEADING = 1
-  lunr.Query.wildcard.TRAILING = 2
-  
-  /**
-   * Constants for indicating what kind of presence a term must have in matching documents.
-   *
-   * @constant
-   * @enum {number}
-   * @see lunr.Query~Clause
-   * @see lunr.Query#clause
-   * @see lunr.Query#term
-   * @example <caption>query term with required presence</caption>
-   * query.term('foo', { presence: lunr.Query.presence.REQUIRED })
-   */
-  lunr.Query.presence = {
-    /**
-     * Term's presence in a document is optional, this is the default value.
-     */
-    OPTIONAL: 1,
-  
-    /**
-     * Term's presence in a document is required, documents that do not contain
-     * this term will not be returned.
-     */
-    REQUIRED: 2,
-  
-    /**
-     * Term's presence in a document is prohibited, documents that do contain
-     * this term will not be returned.
-     */
-    PROHIBITED: 3
-  }
-  
-  /**
-   * A single clause in a {@link lunr.Query} contains a term and details on how to
-   * match that term against a {@link lunr.Index}.
-   *
-   * @typedef {Object} lunr.Query~Clause
-   * @property {string[]} fields - The fields in an index this clause should be matched against.
-   * @property {number} [boost=1] - Any boost that should be applied when matching this clause.
-   * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.
-   * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.
-   * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.
-   * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.
-   */
-  
-  /**
-   * Adds a {@link lunr.Query~Clause} to this query.
-   *
-   * Unless the clause contains the fields to be matched all fields will be matched. In addition
-   * a default boost of 1 is applied to the clause.
-   *
-   * @param {lunr.Query~Clause} clause - The clause to add to this query.
-   * @see lunr.Query~Clause
-   * @returns {lunr.Query}
-   */
-  lunr.Query.prototype.clause = function (clause) {
-    if (!('fields' in clause)) {
-      clause.fields = this.allFields
-    }
-  
-    if (!('boost' in clause)) {
-      clause.boost = 1
-    }
-  
-    if (!('usePipeline' in clause)) {
-      clause.usePipeline = true
-    }
-  
-    if (!('wildcard' in clause)) {
-      clause.wildcard = lunr.Query.wildcard.NONE
-    }
-  
-    if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {
-      clause.term = "*" + clause.term
-    }
-  
-    if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {
-      clause.term = "" + clause.term + "*"
-    }
-  
-    if (!('presence' in clause)) {
-      clause.presence = lunr.Query.presence.OPTIONAL
-    }
-  
-    this.clauses.push(clause)
-  
-    return this
-  }
-  
-  /**
-   * A negated query is one in which every clause has a presence of
-   * prohibited. These queries require some special processing to return
-   * the expected results.
-   *
-   * @returns boolean
-   */
-  lunr.Query.prototype.isNegated = function () {
-    for (var i = 0; i < this.clauses.length; i++) {
-      if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {
-        return false
-      }
-    }
-  
-    return true
-  }
-  
-  /**
-   * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}
-   * to the list of clauses that make up this query.
-   *
-   * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion
-   * to a token or token-like string should be done before calling this method.
-   *
-   * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an
-   * array, each term in the array will share the same options.
-   *
-   * @param {object|object[]} term - The term(s) to add to the query.
-   * @param {object} [options] - Any additional properties to add to the query clause.
-   * @returns {lunr.Query}
-   * @see lunr.Query#clause
-   * @see lunr.Query~Clause
-   * @example <caption>adding a single term to a query</caption>
-   * query.term("foo")
-   * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>
-   * query.term("foo", {
-   *   fields: ["title"],
-   *   boost: 10,
-   *   wildcard: lunr.Query.wildcard.TRAILING
-   * })
-   * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>
-   * query.term(lunr.tokenizer("foo bar"))
-   */
-  lunr.Query.prototype.term = function (term, options) {
-    if (Array.isArray(term)) {
-      term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)
-      return this
-    }
-  
-    var clause = options || {}
-    clause.term = term.toString()
-  
-    this.clause(clause)
-  
-    return this
-  }
-  lunr.QueryParseError = function (message, start, end) {
-    this.name = "QueryParseError"
-    this.message = message
-    this.start = start
-    this.end = end
-  }
-  
-  lunr.QueryParseError.prototype = new Error
-  lunr.QueryLexer = function (str) {
-    this.lexemes = []
-    this.str = str
-    this.length = str.length
-    this.pos = 0
-    this.start = 0
-    this.escapeCharPositions = []
-  }
-  
-  lunr.QueryLexer.prototype.run = function () {
-    var state = lunr.QueryLexer.lexText
-  
-    while (state) {
-      state = state(this)
-    }
-  }
-  
-  lunr.QueryLexer.prototype.sliceString = function () {
-    var subSlices = [],
-        sliceStart = this.start,
-        sliceEnd = this.pos
-  
-    for (var i = 0; i < this.escapeCharPositions.length; i++) {
-      sliceEnd = this.escapeCharPositions[i]
-      subSlices.push(this.str.slice(sliceStart, sliceEnd))
-      sliceStart = sliceEnd + 1
-    }
-  
-    subSlices.push(this.str.slice(sliceStart, this.pos))
-    this.escapeCharPositions.length = 0
-  
-    return subSlices.join('')
-  }
-  
-  lunr.QueryLexer.prototype.emit = function (type) {
-    this.lexemes.push({
-      type: type,
-      str: this.sliceString(),
-      start: this.start,
-      end: this.pos
-    })
-  
-    this.start = this.pos
-  }
-  
-  lunr.QueryLexer.prototype.escapeCharacter = function () {
-    this.escapeCharPositions.push(this.pos - 1)
-    this.pos += 1
-  }
-  
-  lunr.QueryLexer.prototype.next = function () {
-    if (this.pos >= this.length) {
-      return lunr.QueryLexer.EOS
-    }
-  
-    var char = this.str.charAt(this.pos)
-    this.pos += 1
-    return char
-  }
-  
-  lunr.QueryLexer.prototype.width = function () {
-    return this.pos - this.start
-  }
-  
-  lunr.QueryLexer.prototype.ignore = function () {
-    if (this.start == this.pos) {
-      this.pos += 1
-    }
-  
-    this.start = this.pos
-  }
-  
-  lunr.QueryLexer.prototype.backup = function () {
-    this.pos -= 1
-  }
-  
-  lunr.QueryLexer.prototype.acceptDigitRun = function () {
-    var char, charCode
-  
-    do {
-      char = this.next()
-      charCode = char.charCodeAt(0)
-    } while (charCode > 47 && charCode < 58)
-  
-    if (char != lunr.QueryLexer.EOS) {
-      this.backup()
-    }
-  }
-  
-  lunr.QueryLexer.prototype.more = function () {
-    return this.pos < this.length
-  }
-  
-  lunr.QueryLexer.EOS = 'EOS'
-  lunr.QueryLexer.FIELD = 'FIELD'
-  lunr.QueryLexer.TERM = 'TERM'
-  lunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'
-  lunr.QueryLexer.BOOST = 'BOOST'
-  lunr.QueryLexer.PRESENCE = 'PRESENCE'
-  
-  lunr.QueryLexer.lexField = function (lexer) {
-    lexer.backup()
-    lexer.emit(lunr.QueryLexer.FIELD)
-    lexer.ignore()
-    return lunr.QueryLexer.lexText
-  }
-  
-  lunr.QueryLexer.lexTerm = function (lexer) {
-    if (lexer.width() > 1) {
-      lexer.backup()
-      lexer.emit(lunr.QueryLexer.TERM)
-    }
-  
-    lexer.ignore()
-  
-    if (lexer.more()) {
-      return lunr.QueryLexer.lexText
-    }
-  }
-  
-  lunr.QueryLexer.lexEditDistance = function (lexer) {
-    lexer.ignore()
-    lexer.acceptDigitRun()
-    lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)
-    return lunr.QueryLexer.lexText
-  }
-  
-  lunr.QueryLexer.lexBoost = function (lexer) {
-    lexer.ignore()
-    lexer.acceptDigitRun()
-    lexer.emit(lunr.QueryLexer.BOOST)
-    return lunr.QueryLexer.lexText
-  }
-  
-  lunr.QueryLexer.lexEOS = function (lexer) {
-    if (lexer.width() > 0) {
-      lexer.emit(lunr.QueryLexer.TERM)
-    }
-  }
-  
-  // This matches the separator used when tokenising fields
-  // within a document. These should match otherwise it is
-  // not possible to search for some tokens within a document.
-  //
-  // It is possible for the user to change the separator on the
-  // tokenizer so it _might_ clash with any other of the special
-  // characters already used within the search string, e.g. :.
-  //
-  // This means that it is possible to change the separator in
-  // such a way that makes some words unsearchable using a search
-  // string.
-  lunr.QueryLexer.termSeparator = lunr.tokenizer.separator
-  
-  lunr.QueryLexer.lexText = function (lexer) {
-    while (true) {
-      var char = lexer.next()
-  
-      if (char == lunr.QueryLexer.EOS) {
-        return lunr.QueryLexer.lexEOS
-      }
-  
-      // Escape character is '\'
-      if (char.charCodeAt(0) == 92) {
-        lexer.escapeCharacter()
-        continue
-      }
-  
-      if (char == ":") {
-        return lunr.QueryLexer.lexField
-      }
-  
-      if (char == "~") {
-        lexer.backup()
-        if (lexer.width() > 0) {
-          lexer.emit(lunr.QueryLexer.TERM)
-        }
-        return lunr.QueryLexer.lexEditDistance
-      }
-  
-      if (char == "^") {
-        lexer.backup()
-        if (lexer.width() > 0) {
-          lexer.emit(lunr.QueryLexer.TERM)
-        }
-        return lunr.QueryLexer.lexBoost
-      }
-  
-      // "+" indicates term presence is required
-      // checking for length to ensure that only
-      // leading "+" are considered
-      if (char == "+" && lexer.width() === 1) {
-        lexer.emit(lunr.QueryLexer.PRESENCE)
-        return lunr.QueryLexer.lexText
-      }
-  
-      // "-" indicates term presence is prohibited
-      // checking for length to ensure that only
-      // leading "-" are considered
-      if (char == "-" && lexer.width() === 1) {
-        lexer.emit(lunr.QueryLexer.PRESENCE)
-        return lunr.QueryLexer.lexText
-      }
-  
-      if (char.match(lunr.QueryLexer.termSeparator)) {
-        return lunr.QueryLexer.lexTerm
-      }
-    }
-  }
-  
-  lunr.QueryParser = function (str, query) {
-    this.lexer = new lunr.QueryLexer (str)
-    this.query = query
-    this.currentClause = {}
-    this.lexemeIdx = 0
-  }
-  
-  lunr.QueryParser.prototype.parse = function () {
-    this.lexer.run()
-    this.lexemes = this.lexer.lexemes
-  
-    var state = lunr.QueryParser.parseClause
-  
-    while (state) {
-      state = state(this)
-    }
-  
-    return this.query
-  }
-  
-  lunr.QueryParser.prototype.peekLexeme = function () {
-    return this.lexemes[this.lexemeIdx]
-  }
-  
-  lunr.QueryParser.prototype.consumeLexeme = function () {
-    var lexeme = this.peekLexeme()
-    this.lexemeIdx += 1
-    return lexeme
-  }
-  
-  lunr.QueryParser.prototype.nextClause = function () {
-    var completedClause = this.currentClause
-    this.query.clause(completedClause)
-    this.currentClause = {}
-  }
-  
-  lunr.QueryParser.parseClause = function (parser) {
-    var lexeme = parser.peekLexeme()
-  
-    if (lexeme == undefined) {
-      return
-    }
-  
-    switch (lexeme.type) {
-      case lunr.QueryLexer.PRESENCE:
-        return lunr.QueryParser.parsePresence
-      case lunr.QueryLexer.FIELD:
-        return lunr.QueryParser.parseField
-      case lunr.QueryLexer.TERM:
-        return lunr.QueryParser.parseTerm
-      default:
-        var errorMessage = "expected either a field or a term, found " + lexeme.type
-  
-        if (lexeme.str.length >= 1) {
-          errorMessage += " with value '" + lexeme.str + "'"
-        }
-  
-        throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
-    }
-  }
-  
-  lunr.QueryParser.parsePresence = function (parser) {
-    var lexeme = parser.consumeLexeme()
-  
-    if (lexeme == undefined) {
-      return
-    }
-  
-    switch (lexeme.str) {
-      case "-":
-        parser.currentClause.presence = lunr.Query.presence.PROHIBITED
-        break
-      case "+":
-        parser.currentClause.presence = lunr.Query.presence.REQUIRED
-        break
-      default:
-        var errorMessage = "unrecognised presence operator'" + lexeme.str + "'"
-        throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
-    }
-  
-    var nextLexeme = parser.peekLexeme()
-  
-    if (nextLexeme == undefined) {
-      var errorMessage = "expecting term or field, found nothing"
-      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
-    }
-  
-    switch (nextLexeme.type) {
-      case lunr.QueryLexer.FIELD:
-        return lunr.QueryParser.parseField
-      case lunr.QueryLexer.TERM:
-        return lunr.QueryParser.parseTerm
-      default:
-        var errorMessage = "expecting term or field, found '" + nextLexeme.type + "'"
-        throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)
-    }
-  }
-  
-  lunr.QueryParser.parseField = function (parser) {
-    var lexeme = parser.consumeLexeme()
-  
-    if (lexeme == undefined) {
-      return
-    }
-  
-    if (parser.query.allFields.indexOf(lexeme.str) == -1) {
-      var possibleFields = parser.query.allFields.map(function (f) { return "'" + f + "'" }).join(', '),
-          errorMessage = "unrecognised field '" + lexeme.str + "', possible fields: " + possibleFields
-  
-      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
-    }
-  
-    parser.currentClause.fields = [lexeme.str]
-  
-    var nextLexeme = parser.peekLexeme()
-  
-    if (nextLexeme == undefined) {
-      var errorMessage = "expecting term, found nothing"
-      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
-    }
-  
-    switch (nextLexeme.type) {
-      case lunr.QueryLexer.TERM:
-        return lunr.QueryParser.parseTerm
-      default:
-        var errorMessage = "expecting term, found '" + nextLexeme.type + "'"
-        throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)
-    }
-  }
-  
-  lunr.QueryParser.parseTerm = function (parser) {
-    var lexeme = parser.consumeLexeme()
-  
-    if (lexeme == undefined) {
-      return
-    }
-  
-    parser.currentClause.term = lexeme.str.toLowerCase()
-  
-    if (lexeme.str.indexOf("*") != -1) {
-      parser.currentClause.usePipeline = false
-    }
-  
-    var nextLexeme = parser.peekLexeme()
-  
-    if (nextLexeme == undefined) {
-      parser.nextClause()
-      return
-    }
-  
-    switch (nextLexeme.type) {
-      case lunr.QueryLexer.TERM:
-        parser.nextClause()
-        return lunr.QueryParser.parseTerm
-      case lunr.QueryLexer.FIELD:
-        parser.nextClause()
-        return lunr.QueryParser.parseField
-      case lunr.QueryLexer.EDIT_DISTANCE:
-        return lunr.QueryParser.parseEditDistance
-      case lunr.QueryLexer.BOOST:
-        return lunr.QueryParser.parseBoost
-      case lunr.QueryLexer.PRESENCE:
-        parser.nextClause()
-        return lunr.QueryParser.parsePresence
-      default:
-        var errorMessage = "Unexpected lexeme type '" + nextLexeme.type + "'"
-        throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)
-    }
-  }
-  
-  lunr.QueryParser.parseEditDistance = function (parser) {
-    var lexeme = parser.consumeLexeme()
-  
-    if (lexeme == undefined) {
-      return
-    }
-  
-    var editDistance = parseInt(lexeme.str, 10)
-  
-    if (isNaN(editDistance)) {
-      var errorMessage = "edit distance must be numeric"
-      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
-    }
-  
-    parser.currentClause.editDistance = editDistance
-  
-    var nextLexeme = parser.peekLexeme()
-  
-    if (nextLexeme == undefined) {
-      parser.nextClause()
-      return
-    }
-  
-    switch (nextLexeme.type) {
-      case lunr.QueryLexer.TERM:
-        parser.nextClause()
-        return lunr.QueryParser.parseTerm
-      case lunr.QueryLexer.FIELD:
-        parser.nextClause()
-        return lunr.QueryParser.parseField
-      case lunr.QueryLexer.EDIT_DISTANCE:
-        return lunr.QueryParser.parseEditDistance
-      case lunr.QueryLexer.BOOST:
-        return lunr.QueryParser.parseBoost
-      case lunr.QueryLexer.PRESENCE:
-        parser.nextClause()
-        return lunr.QueryParser.parsePresence
-      default:
-        var errorMessage = "Unexpected lexeme type '" + nextLexeme.type + "'"
-        throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)
-    }
-  }
-  
-  lunr.QueryParser.parseBoost = function (parser) {
-    var lexeme = parser.consumeLexeme()
-  
-    if (lexeme == undefined) {
-      return
-    }
-  
-    var boost = parseInt(lexeme.str, 10)
-  
-    if (isNaN(boost)) {
-      var errorMessage = "boost must be numeric"
-      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
-    }
-  
-    parser.currentClause.boost = boost
-  
-    var nextLexeme = parser.peekLexeme()
-  
-    if (nextLexeme == undefined) {
-      parser.nextClause()
-      return
-    }
-  
-    switch (nextLexeme.type) {
-      case lunr.QueryLexer.TERM:
-        parser.nextClause()
-        return lunr.QueryParser.parseTerm
-      case lunr.QueryLexer.FIELD:
-        parser.nextClause()
-        return lunr.QueryParser.parseField
-      case lunr.QueryLexer.EDIT_DISTANCE:
-        return lunr.QueryParser.parseEditDistance
-      case lunr.QueryLexer.BOOST:
-        return lunr.QueryParser.parseBoost
-      case lunr.QueryLexer.PRESENCE:
-        parser.nextClause()
-        return lunr.QueryParser.parsePresence
-      default:
-        var errorMessage = "Unexpected lexeme type '" + nextLexeme.type + "'"
-        throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)
-    }
-  }
-  
-    /**
-     * export the module via AMD, CommonJS or as a browser global
-     * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js
-     */
-    ;(function (root, factory) {
-      if (typeof define === 'function' && define.amd) {
-        // AMD. Register as an anonymous module.
-        define(factory)
-      } else if (typeof exports === 'object') {
-        /**
-         * Node. Does not work with strict CommonJS, but
-         * only CommonJS-like enviroments that support module.exports,
-         * like Node.
-         */
-        module.exports = factory()
-      } else {
-        // Browser globals (root is window)
-        root.lunr = factory()
-      }
-    }(this, function () {
-      /**
-       * Just return a value to define the module export.
-       * This example returns an object, but the module
-       * can return a function as the exported value.
-       */
-      return lunr
-    }))
-  })();
-
diff --git a/assets/js/search.js b/assets/js/search.js
index 47e8db9..ad0e9de 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -1,383 +1,269 @@
-function initSearch(indexURL) {
-  $.getJSON(indexURL)
-    .then(getSearchIndex)
-    .then(initSearchEvents)
+let fuse
+
+const fuseOptions = {
+    includeMatches: true,
+    findAllMatches: true,
+    includeScore: true,
+    threshold: 0,
+    ignoreLocation: true,
+    maxPatternLength: 32,
+    minMatchCharLength: 3,
+    useExtendedSearch: true,
+    keys: [
+        {
+            name: 'title',
+            weight: 15,
+        },
+        {
+            name: 'subtitle',
+            weight: 10,
+        },
+        {
+            name: 'content',
+            weight: 5,
+        },
+    ],
 }
 
-function initSearchEvents(index) {
-  $('.search__icon--search').on('click', function() {
-    $(this)
-      .closest('.search')
-      .find('.search__input')
-      .trigger('focus')
-  })
-  $('.search__icon--clear').on('mousedown', function() {
-    // mousedown is before blur, 'click' wouldn't work because after blur the icon disappears
-    updateFromInput(index, null)
-  })
-
-  $('.search__input')
-    .bind('focus focusin', function() {
-      $('.search').addClass('search--active')
+$(document).ready(() => {
+    $.getJSON('/index.json', (data) => {
+        fuse = new Fuse(data, fuseOptions)
+        initSearchEvents()
     })
-    .bind('blur focusout', function(event) {
-      if (event.target.value) {
-        return
-      }
-      $('.search').removeClass('search--active')
+})
+
+const initSearchEvents = () => {
+    $('.search__icon--search').on('click', () => {
+        $(this).closest('.search').find('.search__input').trigger('focus')
     })
-    .on('keyup', function(event) {
-      if (event.keyCode === 27) {
-        // ESC
-        updateFromInput(index, null)
-        event.stopImmediatePropagation()
-      }
+    $('.search__icon--clear').on('mousedown', () => {
+        // mousedown is before blur, 'click' wouldn't work because after blur the icon disappears
+        updateFromInput(null)
     })
-    .on(
-      'keyup',
-      debounce(function(event) {
-        updateFromInput(index, event.target.value)
-      }, 250)
-    )
-
-  updateFromUrl(index)
 
-  window.addEventListener('popstate', function() {
-    updateFromUrl(index)
-  })
-}
+    $('.search__input')
+        .bind('focus focusin', () => {
+            $('.search').addClass('search--active')
+        })
+        .bind('blur focusout', (event) => {
+            if (event.target.value) {
+                return
+            }
+            $('.search').removeClass('search--active')
+        })
+        .on('keyup', (event) => {
+            if (event.keyCode === 27) {
+                // ESC
+                updateFromInput(null)
+                event.stopImmediatePropagation()
+            }
+        })
+        .on(
+            'keyup',
+            debounce((event) => {
+                updateFromInput(event.target.value)
+            }, 250),
+        )
 
-function updateFromInput(index, query) {
-  updateUrl(query)
-  updateInputs(query)
-  window.setTimeout(function() {
-    updateResults(index, query)
-  })
-}
+    updateFromUrl()
 
-function updateFromUrl(index) {
-  var query =
-    decodeURIComponent((window.location.search || '').slice(3)) || null
-  updateInputs(query)
-  window.setTimeout(function() {
-    updateResults(index, query)
-  })
+    window.addEventListener('popstate', () => updateFromUrl())
 }
 
-function updateUrl(query) {
-  window.history.pushState(
-    '',
-    document.title,
-    window.location
-      .toString()
-      .substring(0, window.location.toString().indexOf('?')) +
-      (query ? '?q=' + encodeURIComponent(query) : '')
-  )
+const updateFromInput = (query) => {
+    updateUrl(query)
+    updateInputs(query)
+    window.setTimeout(() => updateResults(query))
 }
 
-function updateResults(index, query) {
-  var result
-  try {
-    result = getResults(index, query)
-  } catch (error) {
-    result = error
-  }
-
-  $('#search-results').html(getResultHtml(result, query))
+const updateFromUrl = () => {
+    const query = decodeURIComponent((window.location.search || '').slice(3)) || null
+    updateInputs(query)
+    window.setTimeout(() => updateResults(query))
 }
 
-function updateInputs(query) {
-  var $inputs = $('.search__input')
+const updateUrl = (query) =>
+    window.history.pushState(
+        '',
+        document.title,
+        window.location.toString().substring(0, window.location.toString().indexOf('?')) +
+            (query ? '?q=' + encodeURIComponent(query) : ''),
+    )
 
-  $inputs.val(query)
-  if (query === null) {
-    $inputs.trigger('blur')
-  } else {
-    if (query) {
-      $('.search').addClass('search--active')
+const updateResults = (query) => {
+    let result
+    try {
+        result = getResults(query)
+    } catch (error) {
+        result = error
     }
-  }
-}
-
-function prunePlugins (builder) {
-  builder.pipeline.remove(lunr.stemmer)
-  builder.pipeline.remove(lunr.trimmer)
-  builder.pipeline.remove(lunr.stopWordFilter)
-  builder.searchPipeline.remove(lunr.stemmer)
-}
-
-function trimmerDashSupport (builder) {
-  var pipelineFunction = function(token) {
-    return token.update(function (str) {
-      return str.replace(/^[^A-Za-z0-9_\-\$#!\/]+/, '').replace(/[^A-Za-z0-9_]+$/, '')
-    })
-  }
-  lunr.Pipeline.registerFunction(pipelineFunction, 'trimmer-dash-support')
-  builder.pipeline.add(pipelineFunction)
-}
-
-function addPositionMetadata(builder) {
-  var pipelineFunction = function(token) {
-    var p = token.metadata.position
-    token.metadata.positionObject = { start: p[0], length: p[1] }
-    return token
-  }
-  lunr.Pipeline.registerFunction(pipelineFunction, 'position-metadata')
-  builder.pipeline.add(pipelineFunction)
-  builder.metadataWhitelist.push('positionObject')
-}
-
-function splitSearchWords(builder) {
-  var pipelineFunction = function (token) {
-    words = token.toString().split(' ')
-    tokens = Array(words.length).fill().map(function(x, i) {
-      return token.clone(function (str) {
-        return words[i]
-      })
-    })
-    return tokens
-  }
-  lunr.Pipeline.registerFunction(pipelineFunction, 'split-search-words')
-  builder.searchPipeline.add(pipelineFunction)
-}
-
-function lowerCaseSearchPipeline (builder) {
-  var pipelineFunction = function (token) {
-    return token.update(function (str) {
-      return str.toLowerCase()
-    })
-  }
-  lunr.Pipeline.registerFunction(pipelineFunction, 'lower-case-search-pipeline')
-  builder.searchPipeline.add(pipelineFunction)
-}
-
-function formatSearchWord(builder) {
-  var pipelineFunction = function(query) {
-    query.str = query.str.replace(/^[\.<]+/, '').replace(/>/, '')
-    return query
-  }
-  lunr.Pipeline.registerFunction(pipelineFunction, 'format-search-word')
-  builder.searchPipeline.add(pipelineFunction)
+    $('#search-results').html(getResultHtml(result, query))
 }
 
-function edgeNgramTokenizer(builder) {
-  var pipelineFunction = function(token) {
-    tokens = Array(token.toString().length).fill().map(function(x, i) {
-      return token.clone(function(str) {
-        return str.slice(0, i + 1)
-      })
-    })
-    return tokens
-  }
-  lunr.Pipeline.registerFunction(pipelineFunction, 'edge-ngram-tokenizer')
-  builder.pipeline.add(pipelineFunction)
-}
-
-function getSearchIndex(pages) {
-  lunr.tokenizer.separator = /[\s;\&=]+/
-  var lunrIndex = lunr(function() {
-    this.ref('uri')
-    this.field('title', { boost: 15 })
-    this.field('subtitle', { boost: 10 })
-    this.field('content', { boost: 5 })
-
-    this.use(prunePlugins)
-    this.use(trimmerDashSupport)
-    this.use(edgeNgramTokenizer)
-    this.use(addPositionMetadata)
-
-    this.use(splitSearchWords)
-    this.use(lowerCaseSearchPipeline)
-    this.use(formatSearchWord)
-
-    this.k1(0.5)
-
-    pages.forEach(this.add, this)
-  })
-  var pageIndex = pages.reduce(function(all, page) {
-    all[page.uri] = page
-    return all
-  }, {})
-  return { pageIndex: pageIndex, lunrIndex: lunrIndex }
+const updateInputs = (query) => {
+    var $inputs = $('.search__input')
+    $inputs.val(query)
+    query === null ? $inputs.trigger('blur') : query && $('.search').addClass('search--active')
 }
 
-function getResultHtml(resultList, query) {
-  if (!resultList) {
-    return null
-  }
-
-  if (resultList instanceof Error) {
-    return $('<div>', {
-      class: 'no-results-message',
-      text: 'Invalid search query: ' + resultList.message
-    })
-  }
-
-  if (!resultList.length) {
-    return $('<div>', {
-      class: 'no-results-message',
-      text: 'No results matching "' + query + '"'
-    })
-  }
+const getResultHtml = (resultList, query) => {
+    if (!resultList) return null
 
-  function orderByStartPosition(a, b) {
-    return a.start - b.start
-  }
+    if (resultList instanceof Error) {
+        return $('<div>', {
+            class: 'no-results-message',
+            text: 'Invalid search query: ' + resultList.message,
+        })
+    }
 
-  function collectSnippetPositions(contentLength, all, p) {
-    var charsBefore = 30
-    var charsAfter = 30
-    var maxSnippetLength = 200
+    if (!resultList.length) {
+        return $('<div>', {
+            class: 'no-results-message',
+            text: 'No results matching "' + query + '"',
+        })
+    }
 
-    var start = Math.max(p.start - charsBefore, 0)
-    var end = Math.min(p.start + p.length + charsAfter, contentLength)
+    const orderByStartPosition = (a, b) => a.start - b.start
+
+    const collectSnippetPositions = (contentLength, all, p) => {
+        const charsBefore = 30
+        const charsAfter = 30
+        const maxSnippetLength = 200
+
+        const start = Math.max(p.start - charsBefore, 0)
+        const end = Math.min(p.start + p.length + charsAfter, contentLength)
+
+        const prev = all[all.length - 1]
+        const isOverlappingWithPrevious = prev && prev.start + prev.length > start
+        if (isOverlappingWithPrevious) {
+            const newLength = end - prev.start
+            if (newLength > maxSnippetLength) {
+                return all
+            }
+            prev.length = newLength
+            prev.keywords.push({ start: p.start - prev.start, length: p.length })
+        } else {
+            all.push({
+                start: start,
+                length: end - start,
+                keywords: [{ start: p.start - start, length: p.length }],
+            })
+        }
 
-    var prev = all[all.length - 1]
-    var isOverlappingWithPrevious = prev && prev.start + prev.length > start
-    if (isOverlappingWithPrevious) {
-      var newLength = end - prev.start
-      if (newLength > maxSnippetLength) {
         return all
-      }
-      prev.length = newLength
-      prev.keywords.push({ start: p.start - prev.start, length: p.length })
-    } else {
-      all.push({
-        start: start,
-        length: end - start,
-        keywords: [{ start: p.start - start, length: p.length }]
-      })
     }
 
-    return all
-  }
-
-  function getSnippet(content, s) {
-    var c = content.substr(s.start, s.length + 1)
-    var m = c.match(new RegExp(lunr.tokenizer.separator, 'g'))
-
-    var isStartOfContent = s.start === 0
-    var firstKw = s.keywords[0]
-    var start = isStartOfContent
-      ? 0
-      : Math.min(firstKw.start, m ? c.indexOf(m[0]) + m[0].length : 0)
-    var lastKw = s.keywords[s.keywords.length - 1]
-
-    var isEndOfContent = s.start + s.length === content.length
-    var end = isEndOfContent
-      ? c.length + 1
-      : Math.max(
-          lastKw.start + lastKw.length,
-          m ? c.lastIndexOf(m[m.length - 1]) : c.length + 1
-        )
-
-    c = c.substring(start, end)
-
-    return Object.assign({}, s, {
-      content: c,
-      isStart: isStartOfContent,
-      isEnd: isEndOfContent,
-      keywords: s.keywords.map(function(k) {
-        return { start: k.start - start, length: k.length }
-      })
-    })
-  }
-
-  function getContentSnippets(contentPositions, content) {
-    var content = (content || '').trim()
-
-    if (contentPositions) {
-      return contentPositions
-        .sort(orderByStartPosition)
-        .reduce(collectSnippetPositions.bind(null, content.length), [])
-        .map(getSnippet.bind(null, content))
-        .slice(0, 3)
-    } else {
-      return [
-        {
-          isFirst: true,
-          isLast: false,
-          content: content.substring(0, 100),
-          keywords: contentPositions
-        }
-      ]
+    const getSnippet = (content, s) => {
+        let c = content.substr(s.start, s.length + 1)
+        const m = c.match(new RegExp('|', 'g'))
+
+        const isStartOfContent = s.start === 0
+        const firstKw = s.keywords[0]
+        const start = isStartOfContent ? 0 : Math.min(firstKw.start, m ? c.indexOf(m[0]) + m[0].length : 0)
+        const lastKw = s.keywords[s.keywords.length - 1]
+
+        const isEndOfContent = s.start + s.length === content.length
+        const end = isEndOfContent
+            ? c.length + 1
+            : Math.max(lastKw.start + lastKw.length, m ? c.lastIndexOf(m[m.length - 1]) : c.length + 1)
+
+        c = c.substring(start, end)
+
+        return Object.assign({}, s, {
+            content: c,
+            isStart: isStartOfContent,
+            isEnd: isEndOfContent,
+            keywords: s.keywords.map((k) => {
+                return { start: k.start - start, length: k.length }
+            }),
+        })
     }
-  }
-
-  return $('<ul>', {
-    html: resultList.map(function(result) {
-      var snippets = getContentSnippets(
-        result.positions.content,
-        result.content
-      )
-
-      return $('<li>', {
-        html: [
-          $('<a>', { text: result.title, href: result.uri }).markRanges(
-            result.positions.title
-          ),
-          $('<p>', { text: result.subtitle }),
-          snippets
-            ? $('<p>', {
-                html: snippets.map(function(s) {
-                  return $('<span>', {
-                    class: [
-                      s.isStart ? 'start' : '',
-                      s.isEnd ? 'end' : ''
-                    ].join(' '),
-                    text: s.content
-                  }).markRanges(s.keywords)
-                })
-              })
-            : null
-        ]
-      })
-    })
-  })
-}
 
-function getResults(index, query) {
-  if (!query) {
-    return null
-  }
+    const getContentSnippets = (contentPositions, content) => {
+        content = (content || '').trim()
+
+        return contentPositions
+            ? contentPositions
+                  .sort(orderByStartPosition)
+                  .reduce(collectSnippetPositions.bind(null, content.length), [])
+                  .map(getSnippet.bind(null, content))
+                  .slice(0, 3)
+            : [
+                  {
+                      isFirst: true,
+                      isLast: false,
+                      content: content.substring(0, 100),
+                      keywords: contentPositions,
+                  },
+              ]
+    }
 
-  return index.lunrIndex
-    .query(function (lunrQuery) {
-      lunrQuery.term(query)
-    })
-    .slice(0, 16)
-    .map(function(result) {
-      var positions = { title: [], subtitle: [], content: [] }
-      $.each(result.matchData.metadata, function(_, termMetaData) {
-        $.each(termMetaData, function(field, data) {
-          positions[field].push.apply(positions[field], data.positionObject)
-        })
-      })
-      return Object.assign({}, index.pageIndex[result.ref], {
-        positions: positions
-      })
+    return $('<ul>', {
+        html: resultList.map((result) => {
+            const snippets = getContentSnippets(result.positions.content, result.item.content)
+
+            return $('<li>', {
+                html: [
+                    $('<a>', { text: result.item.title, href: result.item.uri }).markRanges(result.positions.title),
+                    $('<p>', { text: result.item.subtitle }),
+                    snippets
+                        ? $('<p>', {
+                              html: snippets.map((s) => {
+                                  return $('<span>', {
+                                      class: [s.isStart ? 'start' : '', s.isEnd ? 'end' : ''].join(' '),
+                                      text: s.content,
+                                  }).markRanges(s.keywords)
+                              }),
+                          })
+                        : null,
+                ],
+            })
+        }),
     })
 }
 
-function debounce(func, wait, immediate) {
-  var timeout
-
-  return function() {
-    var context = this
-    var args = arguments
+const getResults = (query) =>
+    query
+        ? fuse
+              // ' is a token for extended search needed to find items that include the value
+              // it prevents fuzzy search
+              .search(`'${query}`, {
+                  limit: 16,
+              })
+              .map((result) => {
+                  let positions = { title: [], subtitle: [], content: [] }
+                  result.matches.map((match) => {
+                      match.indices.map((index) => {
+                          positions[match.key].push({
+                              length: index[1] - index[0] + 1,
+                              start: index[0],
+                          })
+                      })
+                  })
+                  return {
+                      ...result,
+                      positions,
+                  }
+              })
+        : null
 
-    var callNow = immediate && !timeout
+const debounce = (func, wait, immediate) => {
+    let timeout
 
-    clearTimeout(timeout)
+    return function () {
+        const context = this
+        const args = arguments
+        const callNow = immediate && !timeout
 
-    timeout = setTimeout(function() {
-      timeout = null
+        clearTimeout(timeout)
 
-      if (!immediate) {
-        func.apply(context, args)
-      }
-    }, wait)
+        timeout = setTimeout(() => {
+            timeout = null
+            if (!immediate) {
+                func.apply(context, args)
+            }
+        }, wait)
 
-    if (callNow) func.apply(context, args)
-  }
+        if (callNow) func.apply(context, args)
+    }
 }
diff --git a/layouts/_default/_markup/render-image.html b/layouts/_default/_markup/render-image.html
new file mode 100644
index 0000000..659125c
--- /dev/null
+++ b/layouts/_default/_markup/render-image.html
@@ -0,0 +1 @@
+<img loading="lazy" src="{{ .Destination }}" alt="{{ .Text }}" {{ with .Title}} title="{{ . }}" {{ end }} />
diff --git a/layouts/partials/search.html b/layouts/partials/search.html
index 9e22ef4..ef6593a 100644
--- a/layouts/partials/search.html
+++ b/layouts/partials/search.html
@@ -1,12 +1,9 @@
-<script src="https://cdnjs.cloudflare.com/ajax/libs/lunr.js/2.3.6/lunr.min.js" integrity="sha384-YdPYeaxM24+H15hfctQFgRYpwaquoibf+6a8fpgW6ZW6urvEZaYICEzGPAql4qQm" crossorigin="anonymous"></script>
-<script src="https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.min.js" integrity="sha384-iqnguDoMujGknA4B5Jk7pbSn7sb7M8Tc0zVsTNQXm629Xx00jGEpD9TsZXbfNjKO" crossorigin="anonymous"></script>
+<script defer src="https://cdn.jsdelivr.net/npm/fuse.js@6.4.6/dist/fuse.min.js"></script>
+<script
+    src="https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.min.js"
+    integrity="sha384-iqnguDoMujGknA4B5Jk7pbSn7sb7M8Tc0zVsTNQXm629Xx00jGEpD9TsZXbfNjKO"
+    crossorigin="anonymous"
+></script>
 
-{{ $script := resources.Get "js/search.js" | minify | fingerprint }}
-<script src="{{ $script.RelPermalink }}" integrity="{{ $script.Data.Integrity }}" ></script>
-
-{{ $index := (site.Home.OutputFormats.Get "json").RelPermalink }}
-
-<script type="text/javascript">
-  window.initSearch('{{ $index }}')
-</script>
-  
+{{ $searchScript := resources.Get "js/search.js" | minify | fingerprint }}
+<script defer src="{{ $searchScript.RelPermalink }}" integrity="{{ $searchScript.Data.Integrity }}"></script>

commit fbf24326cc7fb4857a6e7212387cbd2d9daf8bae
Author: Priit Lätt <priit@nevercode.io>
Date:   Wed Mar 31 11:47:06 2021 +0300

    Google Play Publishing to custom track (#291)
    
    * Update yaml publishing
    
    * Update publishing from workflow editor
    
    * Update copy
    
    * Fix copy as per suggestion
    
    * Revert "Fix copy as per suggestion"
    
    This reverts commit 4151b4e4a5f9f612659b126c151a4afe57f8944e.
    
    * Fix copy as per suggestion

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index da95b40..456c209 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -70,7 +70,7 @@ publishing:
 
 ### Google Play
 
-Codemagic enables you to automatically publish your app to the `internal`, `alpha`, `beta` and `production` tracks on Google Play. In order to do so, you will need to set up a service account in Google Play Console and add the `JSON` key file to your Codemagic configuration file, see how to [set up a service account](../knowledge-base/google-play-api/). The proper way to add your keys to `codemagic.yaml` is to [encrypt](../building/encrypting) the contents of the key file and add the encrypted value into the configuration file.
+Codemagic enables you to automatically publish your app either to one of the predefined tracks (`internal`, `alpha`, `beta` and `production`) on Google Play, or to your custom closed testing tracks. In order to do so, you will need to set up a service account in Google Play Console and add the `JSON` key file to your Codemagic configuration file, see how to [set up a service account](../knowledge-base/google-play-api/). The proper way to add your keys to `codemagic.yaml` is to [encrypt](../building/encrypting) the contents of the key file and add the encrypted value into the configuration file.
 
 If your application supports [in-app updates](https://developer.android.com/guide/playcore/in-app-updates) Codemagic allows setting the update priority. Otherwise, `in_app_update_priority` can be omitted or set to `0`.
 
@@ -80,7 +80,7 @@ In addition, Codemagic supports [staged releases](https://support.google.com/goo
 publishing:
   google_play:                        # For Android app
     credentials: Encrypted(...)       # JSON key file for Google Play service account
-    track: alpha                      # Name of the track: internal, alpha, beta, production, internal app sharing
+    track: alpha                      # Name of the track: internal, alpha, beta, production, internal app sharing, or your custom track name
     in_app_update_priority: 3         # Priority of the release (only set if in-app updates are supported): integer in range [0, 5]
     rollout_fraction: 0.25            # Rollout fraction (set only if releasing to a fraction of users): value between (0, 1)
 ```
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index dcb9843..f68da09 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -34,7 +34,9 @@ The very first version of the app must be added to Google Play manually. You can
    - Alpha --- publish for testing with a small group of trusted users
    - Beta --- publish for testing to a wider set of users
    - Production --- release the app to production
-5. If your application supports [in-app updates](https://developer.android.com/guide/playcore/in-app-updates), set the desired priority. If not, select **Default**.
-6. In case you want to release a [staged version](https://support.google.com/googleplay/android-developer/answer/6346149?hl=en) of your application, which reaches only a fraction of users, set **Rollout fraction** to a value between 0 and 1. To release to everyone, leave the value empty.
-7. If you want to publish the .apk even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
-8. Select **Enable Google Play publishing** at the top of the section to enable publishing.
+   - Custom --- release the app to a custom closed testing track
+5. If you want to publish to a custom track, enter the custom track name.
+6. If your application supports [in-app updates](https://developer.android.com/guide/playcore/in-app-updates), set the desired priority. If not, select **Default**.
+7. In case you want to release a [staged version](https://support.google.com/googleplay/android-developer/answer/6346149?hl=en) of your application, which reaches only a fraction of users, set **Rollout fraction** to a value between 0 and 1. To release to everyone, leave the value empty.
+8. If you want to publish the .apk even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
+9. Select **Enable Google Play publishing** at the top of the section to enable publishing.

commit 0fb714a5c9595be917a248ca4ab4666448e73543
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Mar 30 15:38:44 2021 +0300

    Changes related to yaml settings improvements (#290)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index 8a64c68..88a3392 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -7,10 +7,10 @@ weight: 3
 If you wish to store sensitive information, such as login details or API keys, in environment variables or in your configuration file, it is important to encrypt the data so as to not expose it. You can easily encrypt values and files using the encryption interface in Codemagic.
 
 1. Click open your app in Codemagic.
-2. Click **Encrypt environment variables** at the bottom of the page (or on the right sidebar in the **Configuration as code** section if it's a Flutter app).
+2. Click **Secret variables** on the sidebar next to the YAML window (or click **Encrypt environment variables** on the right sidebar in the **Configuration as code** section if you are using the Flutter workflow editor).
 3. Paste the value of the variable in the field or upload it as a file.
 4. Click **Encrypt**. 
-5. Copy the encrypted value and paste it to the configuration file.
+5. Copy the encrypted value and paste it as the value of the variable.
 
 The encrypted value will look something like this:
 
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 088e1a8..a94ce5f 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -4,7 +4,13 @@ title: Environment variables
 weight: 2
 ---
 
-Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
+Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds. 
+
+{{<notebox>}}
+You can add evironment variables in the [environment](../getting-started/yaml/#environment) section of the `codemagic.yaml` confguration file or in the [Environment variables](../flutter/env-variables/) section in the Flutter workflow editor. 
+
+See how to [encrypt sensitive information](./encrypting) in Codemagic. 
+{{</notebox>}}
 
 ## Codemagic read-only environment variables
 
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index 35d2c2e..3d7b185 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -12,11 +12,8 @@ The apps you have available on Codemagic are listed on the Applications page. Se
 
 1. On the Applications page, click **Set up build** next to the app you want to start building. 
 2. On the popup, select **Android App** as the project type and click **Continue**.
-3. Download the example configuration for Android App or copy it to clipboard.
-4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
-    * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
-    * Read more about adding configuration for [testing](../testing-yaml/testing), [code signing](../code-signing-yaml/signing-android) and [publishing](../publishing-yaml/distribution).
-    * See the full Android workflow example [below](#android-workflow-example).
+3. Create a [`codemagic.yaml`](./yaml) file and add in it the commands to build, test and publish your project. See the full Android workflow example [below](#android-workflow-example).
+4. Commit the configuration file to the root of your repository.
 5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
 6. If a `codemagic.yaml` file is found in that branch, you can click **Start your first build** and select the **branch** and **workflow** to build.
 7. Finally, click **Start new build** to build the app.
diff --git a/content/getting-started/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
index ce34367..e77b11e 100644
--- a/content/getting-started/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -12,11 +12,8 @@ The apps you have available on Codemagic are listed on the Applications page. Se
 
 1. On the Applications page, click **Set up build** next to the app you want to start building. 
 2. On the popup, select **iOS App** as the project type and click **Continue**.
-3. Download the example configuration for iOS App or copy it to clipboard.
-4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
-    * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
-    * Read more about adding configuration for [testing](../testing-yaml/testing), [code signing](../code-signing-yaml/signing-ios) and [publishing](../publishing-yaml/distribution).
-    * See the full iOS workflow example [below](#ios-workflow-example).
+3. Create a [`codemagic.yaml`](./yaml) file and add in it the commands to build, test and publish your project. See the full iOS workflow example [below](#ios-workflow-example).
+4. Commit the configuration file to the root of your repository.
 5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
 6. If a `codemagic.yaml` file is found in that branch, you can click **Start your first build** and select the **branch** and **workflow** to build.
 7. Finally, click **Start new build** to build the app.
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index d935c8f..e9cc281 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -14,11 +14,8 @@ The apps you have available on Codemagic are listed on the Applications page. Se
 
 1. On the Applications page, click **Set up build** next to the app you want to start building. 
 2. On the popup, select **React Native App** as the project type and click **Continue**.
-3. Download the example configuration for React Native or copy it to clipboard.
-4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
-    * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
-    * Read more about adding configuration for [testing](../testing-yaml/testing), [iOS code signing](../code-signing-yaml/signing-ios), [Android code signing](../code-signing-yaml/signing-android) and [publishing](../publishing-yaml/distribution).
-    * See the full workflow examples below.
+3. Create a [`codemagic.yaml`](./yaml) file and add in it the commands to build, test and publish your project. See the full Android and iOS workflow examples below.
+4. Commit the configuration file to the root of your repository.
 5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
 6. If a `codemagic.yaml` file is found in that branch, you can click **Start your first build** and select the **branch** and **workflow** to build.
 7. Finally, click **Start new build** to build the app.
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index a037f60..bc41086 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -12,11 +12,8 @@ The apps you have available on Codemagic are listed on the Applications page. Se
 
 1. On the Applications page, click **Set up build** next to the app you want to start building. 
 2. On the popup, select **Ionic App** as the project type and click **Continue**.
-3. Download the example configuration for Ionic App or copy it to clipboard.
-4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
-    * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
-    * Read more about adding configuration for [testing](../testing-yaml/testing), [iOS code signing](../code-signing-yaml/signing-ios), [Android code signing](../code-signing-yaml/signing-android) and [publishing](../publishing-yaml/distribution).
-    * See the full workflow examples below.
+3. Create a [`codemagic.yaml`](./yaml) file and add in it the commands to build, test and publish your project. See the full workflow examples below.
+4. Commit the configuration file to the root of your repository.
 5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
 6. If a `codemagic.yaml` file is found in that branch, you can click **Start your first build** and select the **branch** and **workflow** to build.
 7. Finally, click **Start new build** to build the app.

commit 16c6b49e819037fc62d7c03e8f000e2286d4c1ae
Author: Frederic Barthelemy <git@fbartho.com>
Date:   Thu Mar 25 09:10:40 2021 -0700

    Tweak example for FCI_CERTIFICATE decoding (#287)
    
    * Tweak example for FCI_CERTIFICATE decoding
    
    This makes the code snippet slightly more flexible / ready to execute, such that people can have some certs with passphrases, and some without.
    
    * Update content/code-signing-yaml/signing-ios.md
    
    Co-authored-by: Frederic Barthelemy <git@fbartho.com>
    
    Co-authored-by: Priit Lätt <lattpriit@gmail.com>

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index 0c5da5c..46ec14f 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -128,10 +128,13 @@ scripts:
   - name: Set up signing certificate
     script: |
       echo $FCI_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-      # when using a password-protected certificate
-      keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $FCI_CERTIFICATE_PASSWORD
-      # when using a certificate that is not password-protected
-      keychain add-certificates --certificate /tmp/certificate.p12
+      if [ -z ${FCI_CERTIFICATE_PASSWORD+x} ]; then
+        # when using a certificate that is not password-protected
+        keychain add-certificates --certificate /tmp/certificate.p12
+      else
+        # when using a password-protected certificate
+        keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $FCI_CERTIFICATE_PASSWORD
+      fi
   - name: Set up code signing settings on Xcode project
     script: xcode-project use-profiles
   ... your build commands

commit e1d4265d6c965a558bef0d2ae4ef61858d771888
Author: Chris Raastad <craastad@gmail.com>
Date:   Thu Mar 25 16:54:21 2021 +0100

    Update get ios build number with platform argument (#288)

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 16b06d3..06c19ee 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -126,7 +126,12 @@ agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
 ```
 
 {{<notebox>}}
-You can specify an optional argument `--app-store-version=APP_STORE_VERSION` to get the latest build number for a particular version of your application (`CFBundleShortVersionString`). Check the details for [get-latest-app-store-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md#optional-arguments-for-action-get-latest-app-store-build-number) or for [get-latest-testflight-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md#optional-arguments-for-action-get-latest-testflight-build-number).
+Helpful optional arguments:
+
+* `--app-store-version=APP_STORE_VERSION` to get the latest build number for a particular version of your application (`CFBundleShortVersionString`)
+* `--platform=IOS | MAC_OS | TV_OS` to specify which platform to get the latest build number
+
+Check the details for [get-latest-app-store-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md#optional-arguments-for-action-get-latest-app-store-build-number) or for [get-latest-testflight-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md#optional-arguments-for-action-get-latest-testflight-build-number).
 {{</notebox>}}
 
 Alternatively, if you use `YAML` configuration, you may just export the value to an environment variable and use it under your `CFBundleVersion` in `Info.plist`.

commit 48948b229809b61d3b435f5121885e9929ae62b7
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Mar 25 15:39:06 2021 +0200

    Add info about overdue invoices (#289)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/billing/billing.md b/content/billing/billing.md
index 49fc39e..e6a01a5 100644
--- a/content/billing/billing.md
+++ b/content/billing/billing.md
@@ -35,10 +35,16 @@ To change the card used for payments, click **Edit** in the credit card section
 
 To disable billing, click **Disable billing** in the Billing details section. On disabling billing, you will be immediately charged for the used paid features.
 
-## Billing per Team User
+## Billing per team user
 
 For pay-as-you-go team plans, each team user is billed at the rate on the [pricing page](https://codemagic.io/pricing/). See the [counting team users](../teams/users) guide for details on how we count team users.
 
 ## Billing per build minute
 
 For pay-as-you-go team and user plans, each build minute is billed at the rate on our [pricing page](https://codemagic.io/pricing/) based on the build [machine type](../specs/machine-type) used for the build. Builds that time out or fail because of a Codemagic service error will not count towards billing usage. Builds that fail for any other reason will count towards billing usage.
+
+## Overdue invoices
+
+Invoices that have not been paid on the due date are shown as "Overdue" on the [Billing](https://codemagic.io/billing/) page. This usually happens when there are problems with charging the card, of which team or account owners are notified by email. Codemagic will then attempt to retry the payment in 3, 5 or 7 days. If all retries for a payment fail, the subscription is cancelled.
+
+Team or account owners can manually retry the payment by clicking on the overdue invoice in **Billing history** and selecting **Pay invoice** on the popup with invoice details.

commit 0167a4b35cce04bbc3088622e659734deea75031
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon Mar 22 17:08:39 2021 +0200

    update machine specifications with java and emulators, and allow to choose java (#286)
    
    * add java versions to linux machine specs
    
    * update specs list
    
    * add emulators info

diff --git a/content/flutter/custom-scripts.md b/content/flutter/custom-scripts.md
index 6119dc5..865a267 100644
--- a/content/flutter/custom-scripts.md
+++ b/content/flutter/custom-scripts.md
@@ -8,7 +8,7 @@ aliases:
 
 You can customize the Codemagic workflow by running custom scripts before and after the default build steps.
 
-In the Flutter workflow editor, the spots for injecting custom scripts are marked by **'+'** signs between the sections. Click on **'+'** to expand the section and add your script in the appropriate section. You can run custom scripts in post-clone, pre-test, post-test, pre-build, post-build, pre-publish and post-publish phases. The scripts can be run in any language, simply define the language with a shebang line. For example, `#!/usr/bin/env python`.
+In the Flutter workflow editor, the spots for injecting custom scripts are marked by **'+'** signs between the sections. Click on **'+'** to expand the section and add your script in the appropriate section. You can run custom scripts in post-clone, pre-test, post-test, pre-build, post-build, pre-publish and post-publish phases. The scripts can be run in any language, simply define the language with a shebang line. For example, `#!/usr/bin/env python3`.
 
 {{<notebox>}}
 Please note that custom scripts are always executed from the absolute path to the cloned repository which is located at `/Users/builder/clone` and can also be accessed using the environment variable `FCI_BUILD_DIR`. If your project is not in the repository root and you want to access it from a script, you will need to move to the needed directory inside the script.
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 0ac00e7..31bb776 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -134,13 +134,13 @@ environment:
   vars:             # Define your environment variables here
     PUBLIC_ENV_VAR: "value here"
     SECRET_ENV_VAR: Encrypted(...)
-    
+
     # Android code signing
     FCI_KEYSTORE: Encrypted(...)
     FCI_KEYSTORE_PASSWORD: Encrypted(...)
     FCI_KEY_PASSWORD: Encrypted(...)
     FCI_KEY_ALIAS: Encrypted(...)
-    
+
     # iOS automatic code signing
     APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
     APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
@@ -166,10 +166,15 @@ environment:
   node: 12.14.0     # Define default, latest, current, lts, carbon (or another stream), nightly or version
   npm: 6.13.7       # Define default, latest, next, lts or version
   ndk: r21d         # Define default or revision (e.g. r19c)
+  java: 1.8         # Define default, or platform version (e.g. 11). The default platform version is 1.8
 ```
 
 {{<notebox>}}
-See the default software versions on Codemagic build machines [here](../releases-and-versions/versions/).
+See the default software versions on Codemagic build machines:
+- [macOS build machine specification (Xcode 11.x)](../releases-and-versions/versions/)
+- [macOS build machine specification (Xcode 12.0-12.4)](../releases-and-versions/versions2/)
+- [macOS build machine specification (Xcode 12.5+)](../releases-and-versions/versions3/)
+- [Linux build machine specification](../releases-and-versions/versions-linux/)
 {{</notebox>}}
 
 ### Cache
diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index e1f10a5..c47290c 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -44,6 +44,24 @@ weight: 5
 - yq `3.3.2`
 - zip
 
+## Android emulators
+
+- **emulator**
+
+    - Device: `pixel_4 (Google)`
+    - Path: `/home/builder/.android/avd/emulator.avd`
+    - Target: `Google Play (Google Inc.)`
+    - Based on: `Android 10.0 (Q)`
+    - Tag/API: `google_apis_playstore/x86`
+    - Skin: `pixel_4`
+    - Sdcard: `512M`
+
+## Java versions
+
+- **15**: version `15-ea (2020-09-15)`, OpenJDK Runtime Environment
+- **11**: version `11.0.10 (2021-01-19)`, OpenJDK Runtime Environment
+- **1.8**: version `1.8.0_282`, OpenJDK Runtime Environment
+
 ## Android Studio 4.1.2 (201.8743.12.41.7042882)
 
 Android Studio path: `~/programs/android-studio`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index e41cfde..8087b38 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -49,6 +49,24 @@ weight: 4
 - yq
 - zip
 
+## Android emulators
+
+- **emulator**
+
+    - Device: `pixel_2 (Google)`
+    - Path: `/Users/builder/.android/avd/emulator.avd`
+    - Target: `Google APIs (Google Inc.)`
+    - Based on: `Android 9.0 (Pie)`
+    - Tag/API: `google_apis/x86`
+    - Skin: `pixel_2`
+    - Sdcard: `512M`
+## Java versions
+
+- **14**: version `14.0.2`, JVM `OpenJDK 14.0.2`
+- **9**: version `9.0.4`, JVM `OpenJDK 9.0.4`
+- **1.8**: version `1.8.0_202`, JVM `Java SE 8`
+- **1.7**: version `1.7.0_272`, JVM `Zulu 7.40.0.15`
+
 ## Xcode 11.7 (11E801a)
 
 This is the Xcode version used by default when you select `11.7` in build settings in the workflow editor for Flutter apps or set Xcode version to `11.7` in your codemagic.yaml file. Other available versions are listed [here](#other-xcode-versions).
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index a72a943..8c7ae0d 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -1,6 +1,6 @@
 ---
 description: A list of tools available out-of-the-box on Codemagic build machines
-title: macOS build machine specification (Xcode 12+)
+title: macOS build machine specification (Xcode 12.0 - 12.4)
 aliases:
   - '../releases-and-versions/versions2'
 weight: 3
@@ -49,6 +49,24 @@ weight: 3
 - yq
 - zip
 
+## Android emulators
+
+- **emulator**
+
+    - Device: `pixel_2 (Google)`
+    - Path: `/Users/builder/.android/avd/emulator.avd`
+    - Target: `Google APIs (Google Inc.)`
+    - Based on: `Android 10.0 (Q)`
+    - Tag/API: `google_apis/x86`
+    - Skin: `pixel_2`
+    - Sdcard: `512M`
+## Java versions
+
+- **15**: version `15.0.1`, JVM `Zulu 15.28.51`
+- **11**: version `11.0.9.1`, JVM `Zulu 11.43.55`
+- **1.8**: version `1.8.0_275`, JVM `Zulu 8.50.0.51`
+- **1.7**: version `1.7.0_285`, JVM `Zulu 7.42.0.51`
+
 ## Xcode 12.4 (12D4e)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 3cc867e..bba765b 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -49,6 +49,24 @@ weight: 2
 - yq
 - zip
 
+## Android emulators
+
+- **emulator**
+
+    - Device: `pixel_3a (Google)`
+    - Path: `/Users/builder/.android/avd/emulator.avd`
+    - Target: `Google Play (Google Inc.)`
+    - Based on: `Android 10.0 (Q)`
+    - Tag/API: `google_apis_playstore/x86`
+    - Skin: `pixel_3a`
+    - Sdcard: `512M`
+
+## Java versions
+
+- **15**: version `15.0.2`, JVM `Zulu 15.29.15`
+- **11**: version `11.0.10`, JVM `Zulu 11.45.27`
+- **1.8**: version `1.8.0_282`, JVM `Zulu 8.52.0.23`
+
 ## Xcode 12.5 (12E5244e)
 
 This is the Xcode version used when you select `12.5` in build settings. Other available versions are listed [here](#other-xcode-versions).

commit a95bc18549550f60a52edf2e782b82940678701f
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Mon Mar 22 15:57:17 2021 +0100

    update flutter version to 2.0.3 (#285)

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index 7f03c38..e1f10a5 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -25,7 +25,7 @@ weight: 5
 - dart `2.10.5`
 - docker `20.10.2`
 - firebase `9.1.0`
-- flutter `2.0.2 ($HOME/programs/flutter)`
+- flutter `2.0.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.25.1`
 - ionic `5.4.16`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index b975333..e41cfde 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -28,7 +28,7 @@ weight: 4
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `2.0.2 ($HOME/programs/flutter)`
+- flutter `2.0.3 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 324e703..a72a943 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -28,7 +28,7 @@ weight: 3
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `2.0.2 ($HOME/programs/flutter)`
+- flutter `2.0.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.30.0`
 - gradle `6.1.1`
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 5c738c8..3cc867e 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -28,7 +28,7 @@ weight: 2
 - docker `20.10.2`
 - fastlane `2.176.0`
 - firebase `9.3.0`
-- flutter `2.0.2 ($HOME/programs/flutter)`
+- flutter `2.0.3 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.30.1`
 - gradle `6.1.1`

commit d6cb310d096c882627c948a232f178e0702c231d
Author: Chris Raastad <craastad@gmail.com>
Date:   Fri Mar 19 16:05:39 2021 +0200

    Updated billing with how we charge for team users and build minuets (#284)

diff --git a/content/billing/billing.md b/content/billing/billing.md
index 8a0460f..49fc39e 100644
--- a/content/billing/billing.md
+++ b/content/billing/billing.md
@@ -34,3 +34,11 @@ To change the card used for payments, click **Edit** in the credit card section
 ### Disabling billing
 
 To disable billing, click **Disable billing** in the Billing details section. On disabling billing, you will be immediately charged for the used paid features.
+
+## Billing per Team User
+
+For pay-as-you-go team plans, each team user is billed at the rate on the [pricing page](https://codemagic.io/pricing/). See the [counting team users](../teams/users) guide for details on how we count team users.
+
+## Billing per build minute
+
+For pay-as-you-go team and user plans, each build minute is billed at the rate on our [pricing page](https://codemagic.io/pricing/) based on the build [machine type](../specs/machine-type) used for the build. Builds that time out or fail because of a Codemagic service error will not count towards billing usage. Builds that fail for any other reason will count towards billing usage.

commit 89e94f0f4d4d89b1a6c6e244fbdfaa15684bd6c4
Author: Chris Raastad <craastad@gmail.com>
Date:   Fri Mar 19 15:30:17 2021 +0200

    Update releases with linux build machines (#282)

diff --git a/content/notes/release-notes.md b/content/notes/release-notes.md
index ecc1800..e6bb4fa 100644
--- a/content/notes/release-notes.md
+++ b/content/notes/release-notes.md
@@ -12,6 +12,10 @@ weight: 1
 
 Using [Codemagic CLI Tools](https://github.com/codemagic-ci-cd/cli-tools), you can now set your build number based on the currently published build number in the [Google Play](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/README.md), [App Store](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md), or [Test Flight](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md). See the [build versioning docs](../building/build-versioning) for all the details on how to set up the [Apple App Store](../building/build-versioning/#use-codemagic-cli-tools-to-get-the-latest-build-number-from-app-store-or-testflight) and [Google Play](../building/build-versioning/#use-codemagic-cli-tools-to-get-the-latest-build-number-from-google-play) credentials and script commands to enable auto-versioning in codemagic.yaml or the Flutter workflow editor. See the [Android Versioning Sample Application](https://github.com/codemagic-ci-cd/android-versioning-example/tree/master) for an example of using various versioning methods in Android.
 
+### Linux Build Machines
+
+Linux [build machines](../specs/versions-linux/) are available to run builds for [billing enabled](../billing/billing/) users and teams. These are only available in  workflows configured with [codemagic.yaml](../getting-started/yaml/#instance-type). See the [pricing page](https://codemagic.io/pricing/) for the build minute rate.
+
 ## January 2021
 
 ### Scheduled builds

commit da24a4657067f8231f87d47f6a149019b0825e89
Author: Chris Raastad <craastad@gmail.com>
Date:   Fri Mar 19 15:30:08 2021 +0200

    Updated instance type to be a table (#283)

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 410d714..0ac00e7 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -113,11 +113,13 @@ The main sections in each workflow are described below.
 
 ### Instance Type
 
-`instance_type: ` specifies the [build machine type](../specs/machine-type) to use for the build. The supported build machines are:
-* `mac_mini`
-* `mac_pro`
-* `linux`
-* `linux_x2`
+`instance_type:` specifies the [build machine type](../specs/machine-type) to use for the build. The supported build machines are:
+| **Instance Type** | **Build Machine** |
+| ------------- | ----------------- |
+| `mac_mini`    | macOS standard VM |
+| `mac_pro`     | macOS premium VM  |
+| `linux`       | Linux standard VM |
+| `linux_x2`    | Linux premium VM  |
 
 {{<notebox>}}
 Note that `mac_pro`, `linux`, and `linux_x2` are only available for teams and users with [billing enabled](../billing/billing/).

commit 1ba4db4ce9c88a0741d870d4ba05f6556d5660e9
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Fri Mar 19 12:34:25 2021 +0200

    New build setup flow (#280)
    
    * Updated getting started
    
    * Fix numbering
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/flutter/automatic-build-triggering.md b/content/flutter/automatic-build-triggering.md
index 88f3a62..164a23b 100644
--- a/content/flutter/automatic-build-triggering.md
+++ b/content/flutter/automatic-build-triggering.md
@@ -30,8 +30,10 @@ To add a new branch pattern:
 
 Under **Automatic build triggering**, you can select when to trigger builds.
 
-{{<notebox>}}
 Codemagic automatically adds webhooks to the repositories added via GitHub app or from GitHub, GitLab or Bitbucket via the OAuth integration after you have enabled any of the triggers in this section. For repositories added via SSH or HTTP/HTTPS, you would have to [set up webhooks manually](../building/webhooks). Note that webhook triggers might not be supported for all repository providers.
+
+{{<notebox>}}
+If you have a `codemagic.yaml` in the repository, it is automatically used for configuring builds that are triggered in response to the events defined in the file and any configuration in the Flutter workflow editor is ignored.
 {{</notebox>}}
 
 **Trigger on push**. When checked, a build will be started every time you commit code to any of the tracked branches.
diff --git a/content/flutter/flutter-projects.md b/content/flutter/flutter-projects.md
index 6f5bd78..a30ed8e 100644
--- a/content/flutter/flutter-projects.md
+++ b/content/flutter/flutter-projects.md
@@ -88,7 +88,7 @@ If tests fail, the status of the build will be “failed” and you'll receive a
 
 Builds can be started manually from Codemagic or automatically in response to events in the repository, see more about [automatic build triggering](./automatic-build-triggering) here. 
 
-You can start builds manually by clicking **Start new build** in app settings or build overview. On clicking the button, the **Specify build configuration** popup is displayed where you can select the branch and the [workflow](./creating-workflows) to build. If you also have the `codemagic.yaml` file available in the repository, you can click **Select workflow from codemagic.yaml** in the popup to select a YAML workflow to build.
+You can start builds manually by clicking **Start new build** in app settings or build overview. On clicking the button, the **Specify build configuration** popup is displayed where you can select the branch and the [workflow](./creating-workflows) to build.
 
 For information about using API calls to trigger builds, look [here](../rest-api/overview/).
 
diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index 8c97587..0ec318a 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -7,12 +7,22 @@ aliases:
 startLineBreak: true
 ---
 
+## Setting up a Flutter project
+
+The apps you have available in Codemagic are listed on the Applications page. See how to add additional apps [here](./adding-apps-from-custom-sources).
+
+1. On the Applications page, click **Set up build** next to the app you want to start building. 
+2. On the popup, select **Flutter App** as the project type and click **Continue**.
+3. Then you can choose to either set up your builds in the **codemagic.yaml** file or select the **Workflow Editor** tab to configure the builds in the UI.
+
+`codemagic.yaml` is a highly customizable configuration file that you can use to build, test and publish Flutter apps, widgets, and Flutter or Dart packages. The Workflow Editor is a quick way to get started building standard Flutter applications.
+
+You can simultaneously set up workflows both in `codemagic.yaml` and the Workflow Editor. However, when a `codemagic.yaml` is detected in the repository, it is automatically used for configuring builds that are triggered in response to the events defined in the file and any configuration in the Flutter workflow editor is ignored.
+
 {{<notebox>}}
 For documentation on building Flutter projects using the workflow editor, please refer to [**Building Flutter apps via the workflow editor**](../flutter/flutter-projects).
 {{</notebox>}}
 
-With `codemagic.yaml`, you can use Codemagic to build, test and publish Flutter apps, widgets, Flutter or Dart packages. The necessary build commands go under `scripts` in the [overall architecture](../getting-started/yaml#template) of the `codemagic.yaml` file. You can find some examples for building the most common types of Flutter projects below.
-
 ## Exporting configuration from the Flutter workflow editor
 
 You can get started with YAML easily if you have an existing project set up in Codemagic UI. 
@@ -21,25 +31,19 @@ You can get started with YAML easily if you have an existing project set up in C
 2. In the **Configuration as code** section on the right sidebar, click **Download configuration**.
 
 {{<notebox>}}
-
 The YAML feature currently has the following **limitations**:
 
 * Exporting configuration from the workflow editor is supported for Flutter-based Android, iOS and web apps.
 * The exported configuration is not identical to the settings in the workflow editor and lacks the configuration for some features, such as **Stop build if tests fail** and publishing to Codemagic Static Pages.
-
 {{</notebox>}}
 
 ## Building with YAML
 
-In order to use `codemagic.yaml` for build configuration in Codemagic, it has to be committed to your repository. The file must be located in the root directory of the repository. When detected in the repository, `codemagic.yaml` is automatically used for configuring builds that are triggered in response to the events defined in the file. Any configuration in the Flutter workflow editor is ignored.
-
-In order to use `codemagic.yaml` for manual builds, you must select the workflow to build from `codemagic.yaml`:
-
-1. Navigate to your app settings and click **Start new build**. 
-3. In the **specify build configuration** popup, select the branch where your `codemagic.yaml` file is located.
-4. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml**.
-5. Then select the workflow to build from the **Select workflow from codemagic.yaml** dropdown.
-6. Finally, click **Start new build** to start the build.
+1. In order to use `codemagic.yaml` for build configuration in Codemagic, commit the file to the root directory of your repository.
+2. Back in app settings in Codemagic, select the **`codemagic.yaml`** tab.
+3. Scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
+4. If a `codemagic.yaml` file is found in that branch, you can click **Start your first build** and select the **branch** and **workflow** to build.
+5. Finally, click **Start new build** to build the app.
 
 ## Android builds
 
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index 38c67ae..35d2c2e 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -11,14 +11,14 @@ aliases:
 The apps you have available on Codemagic are listed on the Applications page. See how to add additional apps [here](./adding-apps-from-custom-sources).
 
 1. On the Applications page, click **Set up build** next to the app you want to start building. 
-2. Select **Android App** as the starter workflow.
+2. On the popup, select **Android App** as the project type and click **Continue**.
 3. Download the example configuration for Android App or copy it to clipboard.
 4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
     * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
     * Read more about adding configuration for [testing](../testing-yaml/testing), [code signing](../code-signing-yaml/signing-android) and [publishing](../publishing-yaml/distribution).
     * See the full Android workflow example [below](#android-workflow-example).
 5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
-6. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml** and select the **workflow** to build.
+6. If a `codemagic.yaml` file is found in that branch, you can click **Start your first build** and select the **branch** and **workflow** to build.
 7. Finally, click **Start new build** to build the app.
 
 {{<notebox>}}
diff --git a/content/getting-started/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
index 710aae9..ce34367 100644
--- a/content/getting-started/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -6,10 +6,26 @@ aliases:
   - '../yaml/building-a-native-ios-app'
 ---
 
-With `codemagic.yaml`, you can use Codemagic to build, test and publish native iOS apps. You can read more about how to use `codemagic.yaml` and see the structure of the file [here](../getting-started/yaml).
+## Setting up an iOS project
+
+The apps you have available on Codemagic are listed on the Applications page. See how to add additional apps [here](./adding-apps-from-custom-sources).
+
+1. On the Applications page, click **Set up build** next to the app you want to start building. 
+2. On the popup, select **iOS App** as the project type and click **Continue**.
+3. Download the example configuration for iOS App or copy it to clipboard.
+4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
+    * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
+    * Read more about adding configuration for [testing](../testing-yaml/testing), [code signing](../code-signing-yaml/signing-ios) and [publishing](../publishing-yaml/distribution).
+    * See the full iOS workflow example [below](#ios-workflow-example).
+5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
+6. If a `codemagic.yaml` file is found in that branch, you can click **Start your first build** and select the **branch** and **workflow** to build.
+7. Finally, click **Start new build** to build the app.
 
 {{<notebox>}}
-Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
+**Tip**
+
+Note that you need to set up a [webhook](../building/webhooks) for automatic build triggering. Click the **Create webhook** button on the right sidebar in app settings to add a webhook (not available for apps added via SSH/HTTP/HTTPS).
+
 {{</notebox>}}
 
 ## Building an unsigned native iOS app (.app)
@@ -35,6 +51,10 @@ $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
 
 ## Building a native iOS app archive (.ipa)
 
+{{<notebox>}}
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
+{{</notebox>}}
+
 For building an archived iOS app (.ipa) from your Xcode project, you need to run the following command in the scripts section:
 
 ```yaml
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index 53d59f7..d935c8f 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -8,6 +8,27 @@ aliases:
 
 React Native is a cross-platform solution that allows you to build apps for both iOS and Android faster using a single language. When working with YAML, the basics are still the same, the build scripts are added to the `scripts` section in the [overall architecture](../getting-started/yaml#template).
 
+## Setting up a React Native project
+
+The apps you have available on Codemagic are listed on the Applications page. See how to add additional apps [here](./adding-apps-from-custom-sources).
+
+1. On the Applications page, click **Set up build** next to the app you want to start building. 
+2. On the popup, select **React Native App** as the project type and click **Continue**.
+3. Download the example configuration for React Native or copy it to clipboard.
+4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
+    * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
+    * Read more about adding configuration for [testing](../testing-yaml/testing), [iOS code signing](../code-signing-yaml/signing-ios), [Android code signing](../code-signing-yaml/signing-android) and [publishing](../publishing-yaml/distribution).
+    * See the full workflow examples below.
+5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
+6. If a `codemagic.yaml` file is found in that branch, you can click **Start your first build** and select the **branch** and **workflow** to build.
+7. Finally, click **Start new build** to build the app.
+
+{{<notebox>}}
+**Tip**
+
+Note that you need to set up a [webhook](../building/webhooks) for automatic build triggering. Click the **Create webhook** button on the right sidebar in app settings to add a webhook (not available for apps added via SSH/HTTP/HTTPS).
+{{</notebox>}}
+
 ## Android
 
 Set up local properties
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index 9ad2945..a037f60 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -11,14 +11,14 @@ aliases:
 The apps you have available on Codemagic are listed on the Applications page. See how to add additional apps [here](./adding-apps-from-custom-sources).
 
 1. On the Applications page, click **Set up build** next to the app you want to start building. 
-2. Select **Ionic App** as the starter workflow.
+2. On the popup, select **Ionic App** as the project type and click **Continue**.
 3. Download the example configuration for Ionic App or copy it to clipboard.
 4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
     * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
-    * Read more about adding configuration for [testing](../testing-yaml/testing), [code signing](../code-signing-yaml/signing) and [publishing](../publishing-yaml/distribution).
+    * Read more about adding configuration for [testing](../testing-yaml/testing), [iOS code signing](../code-signing-yaml/signing-ios), [Android code signing](../code-signing-yaml/signing-android) and [publishing](../publishing-yaml/distribution).
     * See the full workflow examples below.
 5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
-6. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml** and select the **workflow** to build.
+6. If a `codemagic.yaml` file is found in that branch, you can click **Start your first build** and select the **branch** and **workflow** to build.
 7. Finally, click **Start new build** to build the app.
 
 {{<notebox>}}

commit 19ec152de4177215be2cf47ecab0db8a4d16a236
Author: Chris Raastad <craastad@gmail.com>
Date:   Thu Mar 18 11:59:01 2021 +0200

    Add automatic ios code signing youtube video (#279)
    
    * Add automatic ios code signing youtube video
    
    * Add workflow editor automatic ios code signing youtube video

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index 78c330d..0c5da5c 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -21,6 +21,8 @@ Under the hood, we use [Codemagic CLI tools](https://github.com/codemagic-ci-cd/
 
 ## Automatic code signing
 
+{{< youtube 2kLi7Fe7q-0 >}}
+
 In order to use automatic code signing and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect.
 
 ### Creating the App Store Connect API key
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 7455bb6..edd1954 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -43,6 +43,8 @@ In short, the purpose of the different provisioning profiles is the following:
 
 ## Automatic code signing
 
+{{< youtube aBDx6BKFXIA >}}
+
 Codemagic makes automatic code signing possible by connecting to [App Store Connect via its API](https://developer.apple.com/app-store-connect/api/) for creating and managing your code signing certificates and provisioning profiles. It is possible to set up several code signing identities and use different code signing settings per workflow.
 
 The following sections describe how to set up automatic code signing for builds configured in the UI. If you're building with `codemagic.yaml`, please refer [here](../code-signing-yaml/signing-ios).

commit 6a55facc9ad9e1587930316c6331862a04b1f263
Author: Chris Raastad <craastad@gmail.com>
Date:   Tue Mar 16 14:32:51 2021 +0200

    Update machine specs to make them more clear for linux build machines (#278)
    
    * Moved machine specs from configuration to build machine specs subsection
    * Added instance type section to codemagic.yaml docs
    * Updated machine type page with linux
    * Updated linux build specs
    * Removed beta

diff --git a/content/building/machine-type.md b/content/building/machine-type.md
deleted file mode 100644
index 6ea19f2..0000000
--- a/content/building/machine-type.md
+++ /dev/null
@@ -1,14 +0,0 @@
----
-description: Choose between Mac Mini or Mac Pro
-title: Build machine type
-weight: 6
----
-
-Codemagic currently offers two types of machines for running builds: Mac mini (macOS standard VM, default) and Mac Pro (macOS premium VM). Specifications for these machines are available [here](../releases-and-versions/versions/#hardware). 
-
-{{<notebox>}}
-Mac Pro machines are available for teams and users that have enabled [billing](../billing/billing) in team or user settings respectively.
-{{</notebox>}}
-
-* In `codemagic.yaml`, the build machine type can be specified in [workflow section](../getting-started/yaml#workflows). 
-* For Flutter projects configured via the Flutter workflow editor, the build machine type can be selected in **App settings > Workflow settings > Machine**.
\ No newline at end of file
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 12d99bb..410d714 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -99,7 +99,7 @@ You can use `codemagic.yaml` to define several workflows for building a project.
 workflows:
   my-workflow:                # workflow ID
     name: My workflow name    # workflow name displayed in Codemagic UI
-    instance_type: mac_mini   # machine type to use (currently supported: `mac_mini` and `mac_pro`)
+    instance_type: mac_mini   # machine instance type
     max_build_duration: 60    # build duration in minutes (min 1, max 120)
     environment:
     cache:
@@ -111,6 +111,18 @@ workflows:
 
 The main sections in each workflow are described below.
 
+### Instance Type
+
+`instance_type: ` specifies the [build machine type](../specs/machine-type) to use for the build. The supported build machines are:
+* `mac_mini`
+* `mac_pro`
+* `linux`
+* `linux_x2`
+
+{{<notebox>}}
+Note that `mac_pro`, `linux`, and `linux_x2` are only available for teams and users with [billing enabled](../billing/billing/).
+{{</notebox>}}
+
 ### Environment
 
 `environment:` contains all the environment variables and enables to specify the version of Flutter, Xcode, CocoaPods, Node and npm used for building. This is also where you can add credentials and API keys required for [code signing](../code-signing-yaml/signing). Make sure to [encrypt the values](../building/encrypting) of variables that hold sensitive data. 
diff --git a/content/specs/machine-type.md b/content/specs/machine-type.md
new file mode 100644
index 0000000..fc2f7bd
--- /dev/null
+++ b/content/specs/machine-type.md
@@ -0,0 +1,29 @@
+---
+description: How to configure build machine type
+title: Build machine type
+weight: 1
+aliases:
+    - '../building/machine-type/'
+---
+
+## Configuring build machine type
+
+In `codemagic.yaml`, the build machine type can be specified with [Instance type](../getting-started/yaml#instance-type).
+
+For Flutter projects configured via the Flutter workflow editor, the build machine type can be selected in **App settings > Workflow settings > Machine**.
+
+## Mac Mini and Mac Pro
+
+Codemagic offers two types of macOS machines for running builds: Mac mini (macOS standard VM, default) and Mac Pro (macOS premium VM). Specifications for these machines are available [here](../specs/versions2/#hardware). 
+
+{{<notebox>}}
+Mac Pro machines are only available for teams and users that have [billing enabled](../billing/billing). See the [pricing page](https://codemagic.io/pricing/) for the per minute rate.
+{{</notebox>}}
+
+## Linux Standard and Linux Premium
+
+Codemagic offers two types of Linux machines for running builds: Linux standard VM and Linux premium VM. Linux machines support nested virtualisation, including Android emulator support with hardware acceleration. Linux machines do not support macOS specific software, such as brew and Xcode, and cannot be used to build iOS artifacts. Specifications for these machines are available [here](../specs/versions-linux/#hardware).
+
+{{<notebox>}}
+Linux Standard and Premium machines are only available for teams and users that have [enabled billing](../billing/billing) for builds configured with [codemagic.yaml](../getting-started/yaml/). See the [pricing page](https://codemagic.io/pricing/) for the per minute rate.
+{{</notebox>}}
\ No newline at end of file
diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index 7d49e90..7f03c38 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -1,15 +1,15 @@
 ---
 description: A list of tools available out-of-the-box on Codemagic build machines.
-title: Linux (beta) build machine specification
+title: Linux build machine specification
 aliases:
   - '../releases-and-versions/versions-linux'
-weight: 4
+weight: 5
 ---
 
 ## Hardware
 
-- Standard VM with Linux `4 vCPUs, 16 GB memory`
-- Premium VM with Linux `coming soon`
+- Standard VM on Linux `4 vCPUs, 16 GB memory`
+- Premium VM on Linux `8 vCPUs, 32 GB memory`
 
 ## System
 
diff --git a/content/specs/versions.md b/content/specs/versions.md
index ddcc89e..b975333 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -3,7 +3,7 @@ description: A list of tools available out-of-the-box on Codemagic build machine
 title: macOS build machine specification (Xcode 11.x)
 aliases:
   - '../releases-and-versions/versions'
-weight: 3
+weight: 4
 ---
 
 ## Hardware
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 9441310..324e703 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -3,7 +3,7 @@ description: A list of tools available out-of-the-box on Codemagic build machine
 title: macOS build machine specification (Xcode 12+)
 aliases:
   - '../releases-and-versions/versions2'
-weight: 2
+weight: 3
 ---
 
 ## Hardware
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index bd34368..5c738c8 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -3,7 +3,7 @@ description: A list of tools available out-of-the-box on Codemagic build machine
 title: macOS build machine specification (Xcode 12.5+)
 aliases:
   - '../releases-and-versions/versions3'
-weight: 1
+weight: 2
 ---
 
 ## Hardware

commit 86a9322dff373a8dcb157565f2b199fa417ce0e1
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon Mar 15 15:31:37 2021 +0100

    add tag query (#277)

diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index 0c8acb1..062672b 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -66,11 +66,12 @@ Returns information about builds from the Codemagic build history. Filters are a
 | `appId`       | `string` | **Optional.** The application identifier. |
 | `workflowId`  | `string` | **Optional.** The workflow identifier as specified in YAML file. |
 | `branch`      | `string` | **Optional.** The branch name. |
+| `tag`         | `string` | **Optional.** The tag name. |
 
 ### Curl request
 
 ```bash
-curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request GET https://api.codemagic.io/builds?appId=<app_id>&workflowId=<workflow_id>&branch=<branch_name>
+curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request GET https://api.codemagic.io/builds?appId=<app_id>&workflowId=<workflow_id>&branch=<branch_name>&tag=<tag_name>
 ```
 
 ### Response
@@ -90,6 +91,7 @@ curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --reques
       "appId": "5d85eaa0e941e00019e81bc2",
       "workflowId": "5d85f242e941e00019e81bd2",
       "branch": "develop",
+      "tag": null,
       "status": "finished",
       "startedAt": "2020-09-08T07:18:02.203+0000",
       "finishedAt": "2020-09-08T07:20:13.040+0000",

commit a80d43618b645483bcb765acea20bd950885e4ed
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Mon Mar 15 12:28:46 2021 +0200

    update versioning (#276)
    
    Rename sections to have App Store, TestFlight and Google Play were at the beginning of section name

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index a886c0f..16b06d3 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -44,7 +44,7 @@ cd $FCI_BUILD_DIR/ios
 agvtool new-version -all $(($BUILD_NUMBER + 1))
 ```
 
-## Use Codemagic CLI Tools to get the latest build number from App Store or TestFlight
+## App Store or TestFlight latest build number using Codemagic CLI Tools
 
 Use [get-latest-app-store-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md#get-latest-app-store-build-number) or [get-latest-testflight-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md#get-latest-testflight-build-number) actions from [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/app-store-connect#app-store-connect) Codemagic CLI Tool to get the latest build numbers.
 
@@ -131,7 +131,7 @@ You can specify an optional argument `--app-store-version=APP_STORE_VERSION` to
 
 Alternatively, if you use `YAML` configuration, you may just export the value to an environment variable and use it under your `CFBundleVersion` in `Info.plist`.
 
-## Use Codemagic CLI Tools to get the latest build number from Google Play
+## Google Play latest build number using Codemagic CLI Tools 
 
 Use [get-latest-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/get-latest-build-number.md#get-latest-build-number) action from [google-play](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/google-play#google-play) Codemagic CLI Tool to get the latest build number from Google Play.
 
@@ -188,4 +188,4 @@ If you encrypted the content (not the file) of your gcloud service account crede
 --build-number=$(($(google-play get-latest-build-number --package-name 'com.google.example') + 1))  # use your own package name
 ```
 
-Alternatively you can add a custom [Pre-build script](https://docs.codemagic.io/flutter/custom-scripts/) and write the build number to a file, which will be read from your `android/app/build.gradle` during the build (See details [here](https://github.com/codemagic-ci-cd/android-versioning-example/tree/autoversioning_through_file)).
\ No newline at end of file
+Alternatively you can add a custom [Pre-build script](https://docs.codemagic.io/flutter/custom-scripts/) and write the build number to a file, which will be read from your `android/app/build.gradle` during the build (See details [here](https://github.com/codemagic-ci-cd/android-versioning-example/tree/autoversioning_through_file)).

commit 7b939f6aa6b709fa43e2a6dd0123b9de04d4b976
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Sun Mar 14 18:34:46 2021 +0100

    update versions (#275)

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index 845b0f7..7d49e90 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -20,11 +20,12 @@ weight: 4
 ## Pre-installed tools
 
 - Android tools `/usr/local/share/android-sdk`
+- aws `1.18.69`
 - curl `7.68.0`
 - dart `2.10.5`
 - docker `20.10.2`
 - firebase `9.1.0`
-- flutter `2.0.1 ($HOME/programs/flutter)`
+- flutter `2.0.2 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.25.1`
 - ionic `5.4.16`
@@ -41,6 +42,7 @@ weight: 4
 - wget
 - yarn `1.22.5`
 - yq `3.3.2`
+- zip
 
 ## Android Studio 4.1.2 (201.8743.12.41.7042882)
 
diff --git a/content/specs/versions.md b/content/specs/versions.md
index f54a900..ddcc89e 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -28,7 +28,7 @@ weight: 3
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `2.0.1 ($HOME/programs/flutter)`
+- flutter `2.0.2 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index fac5213..9441310 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -28,7 +28,7 @@ weight: 2
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `2.0.1 ($HOME/programs/flutter)`
+- flutter `2.0.2 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.30.0`
 - gradle `6.1.1`
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
index 0ff5958..bd34368 100644
--- a/content/specs/versions3.md
+++ b/content/specs/versions3.md
@@ -28,7 +28,7 @@ weight: 1
 - docker `20.10.2`
 - fastlane `2.176.0`
 - firebase `9.3.0`
-- flutter `2.0.1 ($HOME/programs/flutter)`
+- flutter `2.0.2 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.30.1`
 - gradle `6.1.1`

commit 3096af084b308ebcf638faaba6a4aed24ef089c1
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Sat Mar 13 14:32:15 2021 +0100

    remove outdated yq installation script. It's not need since all the base images have yq preinstalled

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 29cd0d0..a886c0f 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -22,18 +22,14 @@ Here are some examples how you can increment the app version using Codemagic's r
 
 ## Fetching build number from pubsec.yaml
 
-Add a pre-build script that installs [yq](https://github.com/mikefarah/yq), a lightweight and portable command-line YAML processor:
+Add the following build argument:
 
 ```bash
-#!/usr/bin/env sh
-HOMEBREW_NO_AUTO_UPDATE=1 brew install yq
+--build-number=$(yq e .version pubspec.yaml)
 ```
 
-Then add the following build arguments:
+It uses [yq](https://github.com/mikefarah/yq), a lightweight and portable command-line YAML processor.
 
-```bash
---build-number=$(yq e .version pubspec.yaml)
-```
 
 ## Set Xcode project build number via command line
 

commit 2f57bf488a75f8fb6f500bad1b9db85964eead5e
Author: Chris Raastad <craastad@gmail.com>
Date:   Fri Mar 12 15:08:04 2021 +0200

    Flutter UI vs. Yaml docs improvements (#273)
    
    * Remove separator under title.
    
    * Render description as a subtitle.
    
    * Updated, added, or deleted descriptions for all docs. Drive by corrected punctuation and small issues.
    
    * Hack to add space after subtitle when first content of markdown is a notebox.
    
    * Add page description subtitle to search results
    
    * Add warning boxes with links between flutter and yaml code signing pages
    
    * Add warning boxes with links from flutter google play and app store connect publishing to yaml publishing
    
    * Updated all occurrences of Flutter UI to Flutter workflow editor. Clarified usages of UI when appropriate.

diff --git a/assets/js/search.js b/assets/js/search.js
index 49e8f8b..47e8db9 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -178,6 +178,7 @@ function getSearchIndex(pages) {
   var lunrIndex = lunr(function() {
     this.ref('uri')
     this.field('title', { boost: 15 })
+    this.field('subtitle', { boost: 10 })
     this.field('content', { boost: 5 })
 
     this.use(prunePlugins)
@@ -315,6 +316,7 @@ function getResultHtml(resultList, query) {
           $('<a>', { text: result.title, href: result.uri }).markRanges(
             result.positions.title
           ),
+          $('<p>', { text: result.subtitle }),
           snippets
             ? $('<p>', {
                 html: snippets.map(function(s) {
@@ -345,7 +347,7 @@ function getResults(index, query) {
     })
     .slice(0, 16)
     .map(function(result) {
-      var positions = { title: [], content: [] }
+      var positions = { title: [], subtitle: [], content: [] }
       $.each(result.matchData.metadata, function(_, termMetaData) {
         $.each(termMetaData, function(field, data) {
           positions[field].push.apply(positions[field], data.positionObject)
diff --git a/assets/scss/_search.scss b/assets/scss/_search.scss
index 9f50547..7ee966a 100644
--- a/assets/scss/_search.scss
+++ b/assets/scss/_search.scss
@@ -124,7 +124,7 @@
   p {
     font-size: 14px;
     line-height: 16px;
-    margin-top: 10px;
+    margin-top: 5px;
     color: #666;
   }
 
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index a2a4168..8466af2 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -298,19 +298,9 @@ body {
             h1 {
                 font-size: 48px;
                 position: relative;
-                padding-bottom: 40px;
+                padding-bottom: 10px;
                 margin-top: 0;
-                margin-bottom: 40px;
-
-                &::after {
-                    content: "";
-                    width: 150px;
-                    height: 10px;
-                    background: $grey-bg;
-                    position: absolute;
-                    bottom: 0;
-                    left: 0;
-                }
+                margin-bottom: 10px;
             }
             h2 { font-size: 36px; }
             h3 { font-size: 26px; }
@@ -418,6 +408,11 @@ body {
                 line-height: 22px;
               }
             }
+            .description {
+              font-size: 26px;
+              margin: 0;
+              padding: 0;
+            }
 
             blockquote {
               overflow: auto;
diff --git a/config.yml b/config.yml
index 53f0307..977e8fb 100644
--- a/config.yml
+++ b/config.yml
@@ -54,7 +54,7 @@ menu:
       name: Integrations
       weight: 6
     - identifier: setup-flutter
-      name: Flutter projects via UI
+      name: Flutter workflow editor
       weight: 7
     - identifier: flutter
       name: Build configuration
diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index e81f48d..fb8e935 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -1,5 +1,4 @@
 ---
-description: If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully.
 title: Accessing private dependencies and Git submodules
 weight: 1
 ---
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 1dc3e62..29cd0d0 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,5 +1,6 @@
 ---
 title: Build versioning
+description: How to set a new build number to push to app stores
 weight: 5
 ---
 
@@ -100,7 +101,7 @@ environment:
 Alternatively, each property can be specified in the `scripts` section of the YAML file as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
 {{</notebox>}}
 
-#### Saving to environment variables in UI (for Flutter projects)
+#### Saving to environment variables in the Flutter workflow editor
 
 Add the following environment variables to your Flutter project in **App settings > Environment variables** (See the details [here](https://docs.codemagic.io/flutter/env-variables/)):
 
@@ -112,7 +113,7 @@ Add the following environment variables to your Flutter project in **App setting
 
 Once you have the App Store Connect API access set with mentioned above environment variables, you can get the build number using the tool and set your incremented project version.
 
-Add the following script under your `scripts` field for `codemagic.yaml`, or as a custom [Pre-build script](https://docs.codemagic.io/flutter/custom-scripts/) in UI settings (for Flutter projects):
+Add the following script under your `scripts` field for `codemagic.yaml`, or as a custom [Pre-build script](https://docs.codemagic.io/flutter/custom-scripts/) in the Flutter workflow editor:
 
 ```bash
 export APP_STORE_CONNECT_PRIVATE_KEY=$(echo $APP_STORE_CONNECT_PRIVATE_KEY | base64 --decode) # if you encrypted the file itself, not its content
@@ -164,7 +165,7 @@ environment:
 Alternatively, credentials can be specified as a command argument with the dedicated flag, see the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/get-latest-build-number.md#--credentialsgcloud_service_account_credentials). But anyway you should have them in environment variables so that they can be decrypted. In that case, the environment variable will be fallback for missing value in the script.
 {{</notebox>}}
 
-### Saving the API access argument to environment variables in UI (for Flutter projects)
+### Saving the API access argument to environment variables in the Flutter workflow editor
 
 Add the `GCLOUD_SERVICE_ACCOUNT_CREDENTIALS` environment variable to your Flutter project in **App settings > Environment variables** (See the details [here](https://docs.codemagic.io/flutter/env-variables/)).
 
@@ -183,7 +184,7 @@ By default, the action will try to get the latest build number as the maximum bu
 
 There are number of ways how you can pass the obtained build number to an Android project (through environment variables, `gradlew` argument properties, file, or a call from `build.gradle`). Check the [android-versioning-example repository](https://github.com/codemagic-ci-cd/android-versioning-example/tree/master) for more details.
 
-#### Get the build number in UI settings (for Flutter projects)
+#### Get the build number in the Flutter workflow editor
 
 If you encrypted the content (not the file) of your gcloud service account credentials and added it as the environment variable `GCLOUD_SERVICE_ACCOUNT_CREDENTIALS`, you can call it immideately as a build argument to your android build command to increment the build number:
 
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 2927676..088e1a8 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -1,8 +1,5 @@
 ---
-description:
-  Environment variables are useful for storing information that you do
-  not want to store in the repository. You can also use Codemagic read-only environment
-  variables to customize your builds.
+description: How to work with environment variables in Codemagic builds
 title: Environment variables
 weight: 2
 ---
diff --git a/content/building/github-checks.md b/content/building/github-checks.md
index 2c63c5e..73baa15 100644
--- a/content/building/github-checks.md
+++ b/content/building/github-checks.md
@@ -1,7 +1,8 @@
 ---
 title: GitHub Checks
-description: Report PR build statuses to GitHub as checks
+description: How to report PR build statuses to GitHub as checks
 weight: 9
+startLineBreak: true
 ---
 
 {{<notebox>}}
diff --git a/content/building/machine-type.md b/content/building/machine-type.md
index cbc3a0f..6ea19f2 100644
--- a/content/building/machine-type.md
+++ b/content/building/machine-type.md
@@ -11,4 +11,4 @@ Mac Pro machines are available for teams and users that have enabled [billing](.
 {{</notebox>}}
 
 * In `codemagic.yaml`, the build machine type can be specified in [workflow section](../getting-started/yaml#workflows). 
-* For Flutter projects configured via UI, the build machine type can be selected in **App settings > Workflow settings > Machine**.
\ No newline at end of file
+* For Flutter projects configured via the Flutter workflow editor, the build machine type can be selected in **App settings > Workflow settings > Machine**.
\ No newline at end of file
diff --git a/content/building/running-locally.md b/content/building/running-locally.md
index 2b90e46..85c1f91 100644
--- a/content/building/running-locally.md
+++ b/content/building/running-locally.md
@@ -1,6 +1,6 @@
 ---
-title: Using Codemagic CLI tools locally
-description: Using Codemagic CLI tools locally or in other environments.
+title: Codemagic CLI tools
+description: How to use Codemagic CLI tools locally or in other environments
 weight: 10
 aliases: 
     - '../yaml/runninglocally'
diff --git a/content/building/scheduling.md b/content/building/scheduling.md
index 4147baa..5bf7755 100644
--- a/content/building/scheduling.md
+++ b/content/building/scheduling.md
@@ -2,6 +2,7 @@
 title: Scheduling builds
 description: Create schedules to run builds at regular intervals
 weight: 8
+startLineBreak: true
 ---
 
 {{<notebox>}}
diff --git a/content/building/timeout.md b/content/building/timeout.md
index c1521c8..d44a2d0 100644
--- a/content/building/timeout.md
+++ b/content/building/timeout.md
@@ -7,7 +7,7 @@ weight: 7
 By default, Codemagic builds are set to time out after 60 minutes. You can decrease or increase the maximum build duration **per workflow**.
 
 * In `codemagic.yaml`, build timeout limit can be defined in the [workflow section](../getting-started/yaml#workflows). 
-* For Flutter projects configured via UI, you can adjust the maximum build duration in **App settings > Workflow settings > Max build duration**. Move the slider right or left to increase or decrease the maximum build duration. The minimum build duration is 30 min and the maximum is 120 min.
+* For Flutter projects configured via the workflow editor, you can adjust the maximum build duration in **App settings > Workflow settings > Max build duration**. Move the slider right or left to increase or decrease the maximum build duration. The minimum build duration is 30 min and the maximum is 120 min.
 
 {{<notebox>}}
 Note that builds that end with a timeout do not consume any build minutes.
diff --git a/content/code-signing-yaml/signing-android.md b/content/code-signing-yaml/signing-android.md
index 91e50e2..8d22a86 100644
--- a/content/code-signing-yaml/signing-android.md
+++ b/content/code-signing-yaml/signing-android.md
@@ -1,11 +1,15 @@
 ---
 title: Signing Android apps
-description: How to set up code signing in codemagic.yaml
+description: How to set up Android code signing in codemagic.yaml
 weight: 2
 ---
 
 All Android applications have to be digitally signed before they are made available to the public to confirm their author and guarantee that the code has not been altered or corrupted since it was signed. There are several ways to set up code signing for Android apps.
 
+{{<notebox>}}
+This guide only applies to workflows configured with the **codemagic.yaml**. If your workflow is configured with **Flutter workflow editor** please go to [Signing Android apps using the Flutter workflow editor](../code-signing/android-code-signing).
+{{</notebox>}}
+
 ## Signing Android apps using Gradle
 
 This example shows how to set up code signing using Gradle.
@@ -43,7 +47,7 @@ This example shows how to set up code signing using Gradle.
   }
   ...
 ```
-2. Add your keystore and keystore details in the [`environment`](../getting-started/yaml#environment) section of the configuration file. [Encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password-protected), key alias and key alias password (if key alias is password-protected) and set the encrypted values to the following environment variables. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build.
+2. Add your keystore and keystore details in the [`environment`](../getting-started/yaml#environment) section of the configuration file. [Encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password-protected), key alias and key alias password (if key alias is password-protected) and set the encrypted values to the following environment variables. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build.
 
 ```yaml
 environment:
diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index f9d8818..78c330d 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -1,12 +1,18 @@
 ---
 title: Signing iOS apps
-description: How to set up code signing in codemagic.yaml
+description: How to set up iOS code signing in codemagic.yaml
 weight: 1
 aliases: '../code-signing-yaml/signing'
 ---
 
 All iOS applications have to be digitally signed before they can be installed on real devices or made available to the public.
 
+{{<notebox>}}
+This guide only applies to workflows configured with the **codemagic.yaml**. If your workflow is configured with **Flutter workflow editor** please go to [Signing iOS apps using the Flutter workflow editor](../code-signing/ios-code-signing).
+{{</notebox>}}
+
+## Prerequisites
+
 Signing iOS applications requires [Apple Developer Program](https://developer.apple.com/programs/enroll/) membership. You can upload your signing certificate and distribution profile to Codemagic to manage code signing yourself or use the automatic code signing option where Codemagic takes care of code signing and signing files management on your behalf. Read more about the two options below.
 
 {{<notebox>}}
@@ -28,7 +34,7 @@ It is recommended to create a dedicated App Store Connect API key for Codemagic
 5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
 
 {{<notebox >}} 
-Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in Codemagic UI.
+Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in the Codemagic UI.
 {{</notebox>}}
 
 ### Saving the API key to environment variables
@@ -54,7 +60,7 @@ environment:
 
 - `APP_STORE_CONNECT_PRIVATE_KEY`
 
-  This is the private API key downloaded from App Store Connect. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build. Alternativey, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
+  This is the private API key downloaded from App Store Connect. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build. Alternativey, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
 
 - `CERTIFICATE_PRIVATE_KEY`
 
@@ -93,7 +99,7 @@ Based on the specified bundle ID and [provisioning profile type](https://github.
 
 ## Manual code signing
 
-In order to use manual code signing, [encrypt](../building/encrypting/#encrypting-sensitive-data) your **signing certificate**, the **certificate password** (if the certificate is password-protected) and the **provisioning profile**, and set the encrypted values to the following environment variables. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build.
+In order to use manual code signing, [encrypt](../building/encrypting/#encrypting-sensitive-data) your **signing certificate**, the **certificate password** (if the certificate is password-protected) and the **provisioning profile**, and set the encrypted values to the following environment variables. Note that when encrypting files via the UI, they will be base64 encoded and would have to be decoded during the build.
 
 ```yaml
 environment:
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index c5841c0..b961f52 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -1,18 +1,22 @@
 ---
-description: Sign your Android app for publishing to Google Play Store
+description: How to set up Android code signing in the Flutter workflow editor
 title: Android code signing
 weight: 2
 ---
 
 Code signing is required for distributing your Android app to Google Play store. It enables to identify who developed the app and ensure that all updates to the app come from you.
 
+{{<notebox>}}
+This guide only applies to workflows configured with the **Flutter workflow editor**. If your workflow is configured with **codemagic.yaml** please go to [Signing Android apps using codemagic.yaml](../code-signing-yaml/signing-android).
+{{</notebox>}}
+
 ## Requirements
 
 To receive a signed release .apk of your app on Codemagic, you will have to:
 
 1. [Prepare your Flutter project for code signing](#preparing-your-flutter-project-for-code-signing)
 
-2. [Set up Android code signing in Codemagic UI](#setting-up-android-code-signing-on-codemagic)
+2. [Set up Android code signing in the Flutter workflow editor](#setting-up-android-code-signing-on-codemagic)
 
 For code signing, you need to upload the **keystore** containing your **certificate** and **key**. See the instructions for generating the keystore [here](#generating-a-keystore).
 
@@ -39,11 +43,11 @@ You need to upload the keystore and provide the keystore password, key alias and
 
 ## Preparing your Flutter project for code signing
 
-There are several approaches you can use to prepare your Flutter project for code signing, we have described two of these in this section. Note that whichever approach you use, you still need to [set up Android code signing](#setting-up-android-code-signing-on-codemagic) in the Codemagic UI.
+There are several approaches you can use to prepare your Flutter project for code signing, we have described two of these in this section. Note that whichever approach you use, you still need to [set up Android code signing](#setting-up-android-code-signing-on-codemagic) in the Flutter workflow editor.
 
 ### Option 1. Configure signing following Flutter's documentation
 
-You can follow the instructions in [Flutter's documentation](https://flutter.dev/docs/deployment/android#signing-the-app) to configure code signing in Gradle. It's vital that you use the variable names suggested in Flutter documentation as Codemagic will reference them during the build. However, make sure to not commit your `key.properties` file to the repository, Codemagic will generate and populate the `key.properties` file during the build based on the input you provide in the UI.
+You can follow the instructions in [Flutter's documentation](https://flutter.dev/docs/deployment/android#signing-the-app) to configure code signing in Gradle. It's vital that you use the variable names suggested in Flutter documentation as Codemagic will reference them during the build. However, make sure to not commit your `key.properties` file to the repository, Codemagic will generate and populate the `key.properties` file during the build based on the input you provide in the workflow editor.
 
 ### Option 2. Configure signing using environment variables
 
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index be7c4fa..7455bb6 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -1,5 +1,5 @@
 ---
-description: Sign Flutter app for iOS
+description: How to set up iOS code signing in the Flutter workflow editor
 title: iOS code signing
 weight: 1
 ---
@@ -8,6 +8,10 @@ Code signing is required by Apple for integrating app services, installing your
 
 To receive a signed `.ipa` file of your app on Codemagic, you need to set up code signing.
 
+{{<notebox>}}
+This guide only applies to workflows configured with the **Flutter workflow editor**. If your workflow is configured with **codemagic.yaml** please go to [Signing iOS apps using codemagic.yaml](../code-signing-yaml/signing-ios).
+{{</notebox>}}
+
 ## Prerequisites
 
 Before you can start signing or distributing your app, there are a few things you need.
diff --git a/content/flutter/automatic-build-triggering.md b/content/flutter/automatic-build-triggering.md
index b19ce27..88f3a62 100644
--- a/content/flutter/automatic-build-triggering.md
+++ b/content/flutter/automatic-build-triggering.md
@@ -1,6 +1,6 @@
 ---
 title: Build triggers
-description: How to enable automatic builds
+description: How to enable automatic builds in the Flutter workflow editor
 weight: 3
 aliases:
     - '../building/automatic-build-triggering'
diff --git a/content/flutter/creating-workflows.md b/content/flutter/creating-workflows.md
index 7b70fb1..19dc3c5 100644
--- a/content/flutter/creating-workflows.md
+++ b/content/flutter/creating-workflows.md
@@ -1,5 +1,5 @@
 ---
-description: Have full control over your CI/CD pipeline with workflows. A workflow is a set of settings that determines how your app is to be built, tested and published. 
+description: How to configure workflows in the Flutter workflow editor
 title: Workflows
 weight: 2
 aliases:
diff --git a/content/flutter/custom-scripts.md b/content/flutter/custom-scripts.md
index 9e57022..6119dc5 100644
--- a/content/flutter/custom-scripts.md
+++ b/content/flutter/custom-scripts.md
@@ -1,5 +1,6 @@
 ---
 title: Custom build steps
+description: How to execute custom scripts in builds configured with the Flutter workflow editor
 weight: 5
 aliases: 
   - '../building/custom-scripts'
@@ -7,7 +8,7 @@ aliases:
 
 You can customize the Codemagic workflow by running custom scripts before and after the default build steps.
 
-In the UI, the spots for injecting custom scripts are marked by **'+'** signs between the sections. Click on **'+'** to expand the section and add your script in the appropriate section. You can run custom scripts in post-clone, pre-test, post-test, pre-build, post-build, pre-publish and post-publish phases. The scripts can be run in any language, simply define the language with a shebang line. For example, `#!/usr/bin/env python`.
+In the Flutter workflow editor, the spots for injecting custom scripts are marked by **'+'** signs between the sections. Click on **'+'** to expand the section and add your script in the appropriate section. You can run custom scripts in post-clone, pre-test, post-test, pre-build, post-build, pre-publish and post-publish phases. The scripts can be run in any language, simply define the language with a shebang line. For example, `#!/usr/bin/env python`.
 
 {{<notebox>}}
 Please note that custom scripts are always executed from the absolute path to the cloned repository which is located at `/Users/builder/clone` and can also be accessed using the environment variable `FCI_BUILD_DIR`. If your project is not in the repository root and you want to access it from a script, you will need to move to the needed directory inside the script.
diff --git a/content/flutter/dependency-caching.md b/content/flutter/dependency-caching.md
index 4e44be7..ea8b1d6 100644
--- a/content/flutter/dependency-caching.md
+++ b/content/flutter/dependency-caching.md
@@ -1,5 +1,5 @@
 ---
-description: Speed up your builds by storing dependencies on Codemagic.
+description: How to cache dependencies for builds configured with the Flutter workflow editor
 title: Dependency caching
 weight: 6
 aliases: 
diff --git a/content/flutter/env-variables.md b/content/flutter/env-variables.md
index 236c514..83e43f8 100644
--- a/content/flutter/env-variables.md
+++ b/content/flutter/env-variables.md
@@ -1,6 +1,6 @@
 ---
 title: Adding environment variables
-description: How to add environment variables in Codemagic UI
+description: How to add environment variables in the Flutter workflow editor
 weight: 4
 aliases:
 ---
diff --git a/content/flutter/flutter-projects.md b/content/flutter/flutter-projects.md
index 9679ea3..6f5bd78 100644
--- a/content/flutter/flutter-projects.md
+++ b/content/flutter/flutter-projects.md
@@ -1,6 +1,6 @@
 ---
 title: Building Flutter projects
-description: Configuring Flutter projects in the UI.
+description: How to configure Flutter app builds using the Flutter workflow editor
 weight: 1
 aliases:
     - '../building/building-android-app-bundles'
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 50fa645..cfbb8a2 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -1,5 +1,5 @@
 ---
-description: Add your mobile app from any private or public repository
+description: How to add an app to Codemagic from any private or public repository
 title: Adding repositories
 weight: 2
 ---
@@ -7,9 +7,8 @@ weight: 2
 When you sign up via OAuth, Codemagic already has access to the repositories you have available on your Git provider account. However, you can add apps from public or private as well as from cloud-based or self-hosted Git repositories.
 
 {{<notebox>}}
-
-- Note that webhooks for automatic build triggering need to be [created manually](../building/webhooks).
-  {{</notebox>}}
+Note that webhooks for automatic build triggering need to be [created manually](../building/webhooks).
+{{</notebox>}}
 
 ## Connecting repository via SSH
 
diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index f687cac..8c97587 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -1,36 +1,37 @@
 ---
 title: Building a Flutter app
-description: Building a Flutter app with YAML.
+description: How to build a Flutter app with codemagic.yaml
 weight: 6
 aliases:	
   - '../yaml/building-a-flutter-app'
+startLineBreak: true
 ---
 
 {{<notebox>}}
-For documentation on building Flutter projects using the settings in Codemagic UI, please refer to [**Building Flutter apps via UI**](../flutter/flutter-projects).
+For documentation on building Flutter projects using the workflow editor, please refer to [**Building Flutter apps via the workflow editor**](../flutter/flutter-projects).
 {{</notebox>}}
 
 With `codemagic.yaml`, you can use Codemagic to build, test and publish Flutter apps, widgets, Flutter or Dart packages. The necessary build commands go under `scripts` in the [overall architecture](../getting-started/yaml#template) of the `codemagic.yaml` file. You can find some examples for building the most common types of Flutter projects below.
 
-## Exporting configuration from UI
+## Exporting configuration from the Flutter workflow editor
 
 You can get started with YAML easily if you have an existing project set up in Codemagic UI. 
 
-1. Navigate to your app settings.
+1. Navigate to your app workflow settings.
 2. In the **Configuration as code** section on the right sidebar, click **Download configuration**.
 
 {{<notebox>}}
 
 The YAML feature currently has the following **limitations**:
 
-* Exporting configuration from UI is supported for Flutter-based Android, iOS and web apps.
-* The exported configuration is not identical to the settings in the UI and lacks the configuration for some features, such as **Stop build if tests fail** and publishing to Codemagic Static Pages.
+* Exporting configuration from the workflow editor is supported for Flutter-based Android, iOS and web apps.
+* The exported configuration is not identical to the settings in the workflow editor and lacks the configuration for some features, such as **Stop build if tests fail** and publishing to Codemagic Static Pages.
 
 {{</notebox>}}
 
 ## Building with YAML
 
-In order to use `codemagic.yaml` for build configuration in Codemagic, it has to be committed to your repository. The file must be located in the root directory of the repository. When detected in the repository, `codemagic.yaml` is automatically used for configuring builds that are triggered in response to the events defined in the file. Any configuration in the UI is ignored.
+In order to use `codemagic.yaml` for build configuration in Codemagic, it has to be committed to your repository. The file must be located in the root directory of the repository. When detected in the repository, `codemagic.yaml` is automatically used for configuring builds that are triggered in response to the events defined in the file. Any configuration in the Flutter workflow editor is ignored.
 
 In order to use `codemagic.yaml` for manual builds, you must select the workflow to build from `codemagic.yaml`:
 
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index eaf7ae8..38c67ae 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -1,6 +1,6 @@
 ---
 title: Building a native Android app
-description: Building an Android app with YAML.
+description: How to build an Android app with codemagic.yaml
 weight: 4
 aliases:
   - '../yaml/building-a-native-android-app'
diff --git a/content/getting-started/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
index 7bc65bb..710aae9 100644
--- a/content/getting-started/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -1,6 +1,6 @@
 ---
 title: Building a native iOS app
-description: Building an iOS app with YAML.
+description: How to build an iOS app with codemagic.yaml
 weight: 5
 aliases:
   - '../yaml/building-a-native-ios-app'
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index a6257e4..53d59f7 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -1,6 +1,6 @@
 ---
 title: Building a React Native app
-description: Building a React Native app with YAML.
+description: How to build a React Native app with codemagic.yaml
 weight: 8
 aliases: 
   - '../yaml/building-a-react-native-app'
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index 87a472f..9ad2945 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -1,6 +1,6 @@
 ---
 title: Building an Ionic app 
-description: Building an Ionic app with YAML.
+description: How to build an Ionic app with codemagic.yaml
 weight: 7
 aliases:
   - '../yaml/building-an-ionic-app'
diff --git a/content/getting-started/building_a_native_app_with_flutter_module.md b/content/getting-started/building_a_native_app_with_flutter_module.md
index 3c695ab..f753c6e 100644
--- a/content/getting-started/building_a_native_app_with_flutter_module.md
+++ b/content/getting-started/building_a_native_app_with_flutter_module.md
@@ -1,6 +1,6 @@
 ---
 title: Building a native app with a Flutter module
-description: Building a native iOS or Android app with a Flutter module
+description: How to build a native iOS or Android app with a Flutter module using codemagic.yaml
 weight: 9
 aliases:
   - '../yaml/building_a_native_app_with_flutter_module'
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 09d4bea..04b6d17 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -1,5 +1,4 @@
 ---
-description: Sign up to Codemagic CI/CD
 title: Signing up to Codemagic
 weight: 1
 aliases:
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index d3bf157..12d99bb 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -1,6 +1,6 @@
 ---
 title: Using codemagic.yaml
-description: Customize the build and configure all your workflows in a single file.
+description: Configure all your workflows in a single file
 weight: 3
 aliases:
   - '../building/yaml'
@@ -98,7 +98,7 @@ You can use `codemagic.yaml` to define several workflows for building a project.
 ```yaml
 workflows:
   my-workflow:                # workflow ID
-    name: My workflow name    # workflow name displayed in UI
+    name: My workflow name    # workflow name displayed in Codemagic UI
     instance_type: mac_mini   # machine type to use (currently supported: `mac_mini` and `mac_pro`)
     max_build_duration: 60    # build duration in minutes (min 1, max 120)
     environment:
diff --git a/content/integrations/jira-integration.md b/content/integrations/jira-integration.md
index 638650b..1ab811f 100644
--- a/content/integrations/jira-integration.md
+++ b/content/integrations/jira-integration.md
@@ -1,6 +1,6 @@
 ---
 title: Jira integration
-description: Integrate your workflows with Jira
+description: How to integrate your workflows with Jira using codemagic.yaml
 weight: 1
 ---
 
diff --git a/content/knowledge-base/add-a-git-tag-with-app-version.md b/content/knowledge-base/add-a-git-tag-with-app-version.md
index 795eb04..3df105b 100644
--- a/content/knowledge-base/add-a-git-tag-with-app-version.md
+++ b/content/knowledge-base/add-a-git-tag-with-app-version.md
@@ -1,5 +1,4 @@
 ---
-description: Create a Git tag referencing your app version
 title: Adding a Git tag with app version
 weight: 2
 aliases:
diff --git a/content/knowledge-base/generating-an-ssh-key.md b/content/knowledge-base/generating-an-ssh-key.md
index 29428ca..9f7b477 100644
--- a/content/knowledge-base/generating-an-ssh-key.md
+++ b/content/knowledge-base/generating-an-ssh-key.md
@@ -1,5 +1,5 @@
 ---
-description: Create a secure SSH key pair in your terminal
+description: How to create a secure SSH key pair in terminal
 title: Generating an SSH key
 weight: 1
 ---
diff --git a/content/knowledge-base/google-play-api.md b/content/knowledge-base/google-play-api.md
index 408c19d..2a9f14e 100644
--- a/content/knowledge-base/google-play-api.md
+++ b/content/knowledge-base/google-play-api.md
@@ -64,6 +64,6 @@ workflows:
 ```
 
 
-## Using the service account with Flutter UI projects
+## Using the service account with projects configured with the Flutter workflow editor
 
-When configuring Flutter projects through the UI, the service account `JSON` key file must be uploaded to Codemagic in Google Play publishing settings. Follow the instructions [here](../publishing/publishing-to-google-play).
+When configuring Flutter projects through the workflow editor, the service account `JSON` key file must be uploaded to Codemagic in Google Play publishing settings. Follow the instructions [here](../publishing/publishing-to-google-play).
diff --git a/content/knowledge-base/load-firebase-configuration.md b/content/knowledge-base/load-firebase-configuration.md
index 6f54424..d856318 100644
--- a/content/knowledge-base/load-firebase-configuration.md
+++ b/content/knowledge-base/load-firebase-configuration.md
@@ -1,5 +1,5 @@
 ---
-description: Load your Firebase configuration files to Codemagic
+description: How to load Firebase configuration files into environment variables in a Flutter workflow editor pre-build script
 title: Loading Firebase configuration
 weight: 3
 aliases:
diff --git a/content/knowledge-base/upload-custom-artifacts.md b/content/knowledge-base/upload-custom-artifacts.md
index 4c63493..c0a6f0b 100644
--- a/content/knowledge-base/upload-custom-artifacts.md
+++ b/content/knowledge-base/upload-custom-artifacts.md
@@ -1,14 +1,14 @@
 ---
-description: Upload files to be included in your build artifacts ZIP file
+description: How to upload files to be included in your build artifacts ZIP file
 title: Uploading custom artifacts
 weight: 4
 aliases:
   - '../custom-scripts/upload-custom-artifacts'
 ---
 
-You can use a custom script to upload custom artifacts, such as screenshots, to `$FCI_EXPORT_DIR` and include them in the build artifacts ZIP file generated by Codemagic.
+You can use a script to upload custom artifacts, such as screenshots, to `$FCI_EXPORT_DIR` and include them in the build artifacts ZIP file generated by Codemagic.
 
-For example, add this **post-test** script to copy screenshots to `$FCI_EXPORT_DIR`.
+For example, in a [codemagic.yaml script](../getting-started/yaml/#scripts) step or Flutter workflow editor **post-test** script, use this command to copy build screenshots to `$FCI_EXPORT_DIR` to be exported:
 
 ```bash
 #!/usr/bin/env sh
diff --git a/content/notes/release-notes.md b/content/notes/release-notes.md
index f98b6cc..ecc1800 100644
--- a/content/notes/release-notes.md
+++ b/content/notes/release-notes.md
@@ -1,5 +1,5 @@
 ---
-description: Information about Codemagic feature releases
+description: Codemagic release log for key features
 title: Codemagic feature releases
 aliases:  
   - '../releases-and-versions/release-notes'
@@ -10,17 +10,17 @@ weight: 1
 
 ### Auto-increment build numbers
 
-Using [Codemagic CLI Tools](https://github.com/codemagic-ci-cd/cli-tools), you can now set your build number based on the currently published build number in the [Google Play](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/README.md), [App Store](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md), or [Test Flight](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md). See the [build versioning docs](../building/build-versioning) for all the details on how to set up the [Apple App Store](../building/build-versioning/#use-codemagic-cli-tools-to-get-the-latest-build-number-from-app-store-or-testflight) and [Google Play](../building/build-versioning/#use-codemagic-cli-tools-to-get-the-latest-build-number-from-google-play) credentials and script commands to enable auto-versioning in yaml or Flutter UI configuration. See the [Android Versioning Sample Application](https://github.com/codemagic-ci-cd/android-versioning-example/tree/master) for an example of using various versioning methods in Android.
+Using [Codemagic CLI Tools](https://github.com/codemagic-ci-cd/cli-tools), you can now set your build number based on the currently published build number in the [Google Play](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/README.md), [App Store](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md), or [Test Flight](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md). See the [build versioning docs](../building/build-versioning) for all the details on how to set up the [Apple App Store](../building/build-versioning/#use-codemagic-cli-tools-to-get-the-latest-build-number-from-app-store-or-testflight) and [Google Play](../building/build-versioning/#use-codemagic-cli-tools-to-get-the-latest-build-number-from-google-play) credentials and script commands to enable auto-versioning in codemagic.yaml or the Flutter workflow editor. See the [Android Versioning Sample Application](https://github.com/codemagic-ci-cd/android-versioning-example/tree/master) for an example of using various versioning methods in Android.
 
 ## January 2021
 
 ### Scheduled builds
 
-Whether you configure your builds in the UI or use the codemagic.yaml configuration file, you can now schedule your workflows to run on days and time that suits you the best. See how to [create build schedules](../building/scheduling).  
+Whether you configure your builds in the Flutter workflow editor or codemagic.yaml configuration file, you can now schedule your workflows to run on days and time that suits you the best. See how to [create build schedules](../building/scheduling).
 
 ### Support for `flutter build ipa`
 
-You can now use the `flutter build ipa` command to generate an .ipa file from the Flutter source. To use this build command with Flutter builds configured in the UI, select the **Use flutter build ipa** checkbox in **App settings > Build > iOS build command**. You can also use it in your codemagic.yaml configuration, see an example [here](../getting-started/building-a-flutter-app/#building-a-signed-ios-application-archive-ipa).
+You can now use the `flutter build ipa` command to generate an .ipa file from the Flutter source. To use this build command with Flutter builds configured in the workflow editor, select the **Use flutter build ipa** checkbox in **App settings > Build > iOS build command**. You can also use it in your codemagic.yaml configuration, see an example [here](../getting-started/building-a-flutter-app/#building-a-signed-ios-application-archive-ipa).
 
 Note that:
 * This command is available from Flutter version `1.24.0-6.0`.
@@ -36,7 +36,7 @@ In addition, it is now possible to connect the GitHub app integration in team se
 
 ### In-app priority and rollout fraction for Android releases
 
-Using both the UI and `codemagic.yaml`, you can now set two additional parameters for your Android builds that you publish to users through Google Play.
+Using both the Flutter workflow editor and `codemagic.yaml`, you can now set two additional parameters for your Android builds that you publish to users through Google Play.
 
 * **In-app priority** determines how strongly your app update will be recommended to existing users. The priority ranges from `0` (default) to `5` (high-priority update). Note that this feature is available only via Google Play API and for apps that support in-app updates.
 * **Rollout fraction** enables you to roll out the release to a percentage of users. Rollout fraction is a value between `0` and `1`, e.g. `0.25` to release to 25% of users.
@@ -78,7 +78,7 @@ Instead of having to save your settings in each section, there is now one global
 
 ### Using App Store Connect API for Apple Developer Portal integration
 
-Instead of creating a session with Apple Developer Portal, we are now using App Store Connect API keys for authentication. This means there will be no more expiring sessions or hassle with two-factor authentication when using automatic code signing. It is possible to set up several keys for code signing and select the right key in workflow settings. See how to [set up the Apple Developer Portal in Codemagic app](../code-signing/ios-code-signing/#automatic-code-signing) for builds that are configured in the UI. When building with `codemagic.yaml`, the API keys are added in the configuration file, see the instructions [here](../code-signing-yaml/signing-ios).
+Instead of creating a session with Apple Developer Portal, we are now using App Store Connect API keys for authentication. This means there will be no more expiring sessions or hassle with two-factor authentication when using automatic code signing. It is possible to set up several keys for code signing and select the right key in workflow settings. See how to [set up the Apple Developer Portal in Codemagic app](../code-signing/ios-code-signing/#automatic-code-signing) for builds that are configured in the Flutter workflow editor. When building with `codemagic.yaml`, the API keys are added in the configuration file, see the instructions [here](../code-signing-yaml/signing-ios).
 
 ### Support for multiple team owners
 
@@ -98,7 +98,7 @@ If you are not building a Flutter project, you still need to use the `codemagic.
 
 We have added a much-requested feature to cancel ongoing and queued webhook-triggered builds on push and pull request commit when a new build has been triggered for the same branch. This is convenient when you’re making several commits and don’t want to wait for the previous builds to finish while you’re only interested in the build for the most recent commit. 
 
-You can enable this feature in the UI by navigating to **App settings > Build triggers > Automatic build triggering** and selecting **Cancel outdated webhook builds**, or by setting `cancel_previous_builds: true` in the [triggering section](../getting-started/yaml/#triggering) of the YAML file.
+You can enable this feature in the Flutter workflow editor by navigating to **App settings > Build triggers > Automatic build triggering** and selecting **Cancel outdated webhook builds**, or by setting `cancel_previous_builds: true` in the [triggering section](../getting-started/yaml/#triggering) of the `codemagic.yaml` file.
 
 > If you’re interested in running builds in parallel, get in touch with our sales team through the [Codemagic business page](https://codemagic.io/enterprise/).
 
@@ -127,7 +127,7 @@ Note that timeouts do not consume any build minutes. See the relevant documentat
 
 ### Dynamic workflows with Codemagic API
 
-You can now configure your build and Flutter/Xcode/Cocoapods versions dynamically using API. If you have several similar workflows, you can now combine them into one and create parametrized API calls. This way you can run your workflows without having to change the settings in UI or in `codemagic.yaml`.
+You can now configure your build and Flutter/Xcode/Cocoapods versions dynamically using API. If you have several similar workflows, you can now combine them into one and create parametrized API calls. This way you can run your workflows without having to change the settings in the Flutter workflow editor or in the `codemagic.yaml` file.
 
 See [our documentation](../rest-api/builds/) or the <a href="https://blog.codemagic.io/dynamic-workflows-with-codemagic-api/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','dynamic-workflows-with-codemagic-api')">article about dynamic workflows</a> for more information.
 
@@ -135,7 +135,7 @@ See [our documentation](../rest-api/builds/) or the <a href="https://blog.codema
 
 ### More options to configure your build environment
 
-We recently updated the UI in the Build section of app settings with a dropdown field for `CocoaPods` version selection to make it easier to build with the versions required by your app. With `codemagic.yaml`, you have even more options available and can define which `Flutter`, `Xcode`, `CocoaPods`, `Node` and `npm` version to use for the build. See how to define software versions in YAML file [here](../building/yaml#environment).
+We recently updated the Flutter workflow editor in the Build section of app settings with a dropdown field for `CocoaPods` version selection to make it easier to build with the versions required by your app. With `codemagic.yaml`, you have even more options available and can define which `Flutter`, `Xcode`, `CocoaPods`, `Node` and `npm` version to use for the build. See how to define software versions in YAML file [here](../building/yaml#environment).
 
 ### Remote access to build machine via VNC
 
@@ -153,7 +153,7 @@ Your project is already available on the machine, so it’s easy to run your iOS
 
 ### Toggles for enabling/disabling publishing options
 
-We have improved Codemagic UI for publishing options and added the **Enabled** checkbox to the settings that allows to easily enable or disable an option. This way you no longer have to delete the configuration in order to turn off the feature for a workflow. In addition, the enabled/disabled status is displayed for each publishing option when you open the Publish section, so you can have a better overview of what the workflow is configured to do.
+We have improved the Flutter workflow editor for publishing options and added the **Enabled** checkbox to the settings that allows to easily enable or disable an option. This way you no longer have to delete the configuration in order to turn off the feature for a workflow. In addition, the enabled/disabled status is displayed for each publishing option when you open the Publish section, so you can have a better overview of what the workflow is configured to do.
 
 ## February 2020
 
@@ -177,7 +177,7 @@ The Publish section in app settings now contains an integration with GitHub for
 
 ### Codemagic API key
 
-We have made Codemagic API key available from the UI, which will make integrating Codemagic to your workflows even easier. The key is available in **User settings > Integrations > Codemagic API**. Currently, the API key can be used to set up custom build triggers, read more about it [here](../building/automatic-build-triggering/#custom-build-triggers).
+We have made Codemagic API key available from the user settings UI, which will make integrating Codemagic to your workflows even easier. The key is available in **User settings > Integrations > Codemagic API**. Currently, the API key can be used to set up custom build triggers, read more about it [here](../building/automatic-build-triggering/#custom-build-triggers).
 
 ### Transfer personal paid minutes to team
 
diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 59e1d9a..da95b40 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -1,6 +1,6 @@
 ---
 title: Publishing and deployment
-description: How to set up publishing and build status notifications
+description: How to set up publishing and build status notifications in codemagic.yaml
 weight: 1
 aliases:
     - '../yaml/distribution'
@@ -48,7 +48,7 @@ After you have successfully authorized Codemagic and connected your workspace, y
 
 #### Configuring Slack publishing
 
-The Slack channel for publishing is configured separately for each workflow in the `publishing` section of `codemagic.yaml` (refer [here](../publishing/email-and-slack-notifications/#slack) if you're configuring app settings in the UI).
+The Slack channel for publishing is configured separately for each workflow in the `publishing` section of `codemagic.yaml` (refer [here](../publishing/email-and-slack-notifications/#slack) if you're configuring app settings in the Flutter workflow editor).
 
 {{<notebox>}}
 In order to publish to **private channels**, you need to invite Codemagic app to the channels, otherwise the app does not have access to private channels. To invite Codemagic app to private channels, write `@codemagic` in the channel.
diff --git a/content/publishing-yaml/public-dashboards.md b/content/publishing-yaml/public-dashboards.md
index 760dd7e..9fe6aef 100644
--- a/content/publishing-yaml/public-dashboards.md
+++ b/content/publishing-yaml/public-dashboards.md
@@ -1,6 +1,6 @@
 ---
 title: Public dashboards
-description: Use public links to distribute builds and artifacts
+description: Use public links to distribute builds and artifacts in codemagic.yaml
 weight: 2
 aliases:
 ---
diff --git a/content/publishing-yaml/status-badges.md b/content/publishing-yaml/status-badges.md
index d435cdf..696e39b 100644
--- a/content/publishing-yaml/status-badges.md
+++ b/content/publishing-yaml/status-badges.md
@@ -1,6 +1,6 @@
 ---
 title: Build status badges
-description: Use Codemagic status badges to display the status of the build
+description: How to add build status badges using codemagic.yaml
 weight: 3
 aliases:
 ---
diff --git a/content/publishing/beta-deployment-with-fastlane.md b/content/publishing/beta-deployment-with-fastlane.md
index e9c826b..13e41df 100644
--- a/content/publishing/beta-deployment-with-fastlane.md
+++ b/content/publishing/beta-deployment-with-fastlane.md
@@ -1,5 +1,5 @@
 ---
-description: Run fastlane scripts to deploy to beta distribution services 
+description: How to deploy to fastlane beta in the Flutter workflow editor pre-publish script
 title: Run fastlane for beta deployment
 weight: 7
 ---
diff --git a/content/publishing/email-and-slack-notifications.md b/content/publishing/email-and-slack-notifications.md
index 5942a7a..a0adfe4 100644
--- a/content/publishing/email-and-slack-notifications.md
+++ b/content/publishing/email-and-slack-notifications.md
@@ -1,5 +1,5 @@
 ---
-description: Receive artifacts of successful builds and build status updates with email or Slack.
+description: How to configure build status updates with links to artifacts in the Flutter workflow editor
 title: Email and Slack notifications
 weight: 8
 ---
@@ -12,7 +12,7 @@ Email publishing is the only publishing option that is enabled by default. Codem
 
 If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the provided email.
 
-If the build fails, you will be sent a link to the build logs. Check the **Publish artifacts even if tests fail** option in the UI to publish artifacts even when one or more tests fail. If that option is unchecked, generated artifacts (if there are any) will be attached only to successful builds.
+If the build fails, you will be sent a link to the build logs. Check the **Publish artifacts even if tests fail** option in the workflow editor to publish artifacts even when one or more tests fail. If that option is unchecked, generated artifacts (if there are any) will be attached only to successful builds.
 
 ### MS Teams
 
@@ -24,7 +24,7 @@ Use only the part in angle brackets from the whole address line (e.g. `My awesom
 
 In order to set up publishing to Slack, you first need to connect the Slack workspace in **User settings > Integrations > Slack** for your personal apps and in **Teams > Your_team > Team integrations > Slack** for the team apps. 
 
-Once your Slack workspace is connected, you can enable Slack publishing and select a channel for publishing in **App settings > Publish > Slack** when using the UI configuration.
+Once your Slack workspace is connected, you can enable Slack publishing and select a channel for publishing in **App settings > Publish > Slack** when using the workflow editor.
 
 In order to publish to **private channels**, you need to invite Codemagic app to the channels, otherwise the app does not have access to private channels. To invite Codemagic app to private channels, write `@codemagic` in the channel. If you are in the Codemagic web app, refresh the page and the new channel will become available in the dropdown menu.
 
diff --git a/content/publishing/github-release.md b/content/publishing/github-release.md
index 2800540..d2212e9 100644
--- a/content/publishing/github-release.md
+++ b/content/publishing/github-release.md
@@ -1,10 +1,10 @@
 ---
-description: Create GitHub release and upload generated artifacts when build was triggered on tag creation.
+description: How to create a GitHub release with artifacts using the Flutter workflow editor
 title: GitHub releases
 weight: 9
 ---
 
-Codemagic enables you to automatically create a GitHub release and upload generated artifacts when your build is triggered on tag creation. Read more about GitHub releases here: https://help.github.com/en/github/administering-a-repository/about-releases.
+Codemagic enables you to automatically create a GitHub release and upload generated artifacts when your build is triggered on tag creation. Read more about GitHub releases in [GitHub's documentation](https://docs.github.com/en/github/administering-a-repository/about-releases).
 
 ## Requirements
 
diff --git a/content/publishing/publish-app-artifacts-to-app-center.md b/content/publishing/publish-app-artifacts-to-app-center.md
index 10f112d..51c1038 100644
--- a/content/publishing/publish-app-artifacts-to-app-center.md
+++ b/content/publishing/publish-app-artifacts-to-app-center.md
@@ -1,5 +1,5 @@
 ---
-description: Upload your apk or ipa file to App Center
+description: How to upload an apk or ipa file to App Center in a Flutter workflow editor post-build script
 title: Publish app artifacts to App Center
 weight: 6
 ---
diff --git a/content/publishing/publish-build-artifacts-to-amazon-s3.md b/content/publishing/publish-build-artifacts-to-amazon-s3.md
index 8254a16..ec33f2d 100644
--- a/content/publishing/publish-build-artifacts-to-amazon-s3.md
+++ b/content/publishing/publish-build-artifacts-to-amazon-s3.md
@@ -1,5 +1,5 @@
 ---
-description: You can use custom scripts to publish app artifacts to external services.
+description: How to use Flutter workflow editor custom scripts to publish app artifacts to external services
 title: Publish build artifacts to Amazon S3
 weight: 5
 ---
diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index d53be32..d78c642 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -1,5 +1,5 @@
 ---
-description: Publish release notes with the build.
+description: How to publish build release notes using the Flutter workflow editor
 title: Publish release notes
 weight: 4
 ---
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 1361c73..66e9bb1 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -1,11 +1,15 @@
 ---
-description: Deploy the Flutter app to App Store and TestFlight
+description: How to deploy a Flutter app to App Store and TestFlight using the Flutter workflow editor
 title: App Store Connect
 weight: 1
 ---
 
 Codemagic enables you to automatically publish your app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store. To do so, you must first set up [iOS code signing](../code-signing/ios-code-signing/) and then configure publishing to App Store Connect.
 
+{{<notebox>}}
+This guide only applies to workflows configured with the **Flutter workflow editor**. If your workflow is configured with **codemagic.yaml** please go to [Publishing to App Store Connect using codemagic.yaml](../publishing-yaml/distribution/#app-store-connect).
+{{</notebox>}}
+
 ## Requirements
 
 Codemagic needs your **Apple ID** and [**app-specific password**](https://support.apple.com/en-us/HT204397) to perform publishing to App Store Connect on your behalf. Publishing to App Store Connect requires that the app be signed with App Store **distribution certificate**.
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index 7d9a3bb..54323ba 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -1,5 +1,5 @@
 ---
-description: Publish each new version of your web app to a custom subdomain.
+description: How to publish a web app to a custom subdomain using the Flutter workflow editor
 title: Codemagic Static Pages
 weight: 3
 ---
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index c60ead2..dcb9843 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -1,11 +1,15 @@
 ---
-description: Deploy the Flutter app to Google Play
+description: Deploy a Flutter app to Google Play using the Flutter workflow editor
 title: Google Play
 weight: 2
 ---
 
 Codemagic enables you to automatically publish your app to the **internal**, **alpha**, **beta** and **production** tracks on Google Play. To do so, you must first [set up Android code signing](../code-signing/android-code-signing/ 'Android code signing') and then configure publishing to Google Play.
 
+{{<notebox>}}
+This guide only applies to workflows configured with the **Flutter workflow editor**. If your workflow is configured with **codemagic.yaml** please go to [Publishing to Google Play using codemagic.yaml](../publishing-yaml/distribution/#google-play).
+{{</notebox>}}
+
 ## Requirements
 
 You will need a **service account in Google Play Console** to obtain the **JSON credentials file**. See how to do that [here](../knowledge-base/google-play-api/). In addition, you must build the app in **release mode** and set up **Android code signing**.
diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index 7399174..0c8acb1 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -10,7 +10,7 @@ APIs for managing builds are currently available for developers to preview. Duri
 `POST /builds`
 
 {{<notebox>}}
-Note that when starting builds from an API request, the workflow and branch information is passed with the curl request and any configuration related to triggers or branches in UI settings or in codemagic.yaml is ignored.
+Note that when starting builds from an API request, the workflow and branch information is passed with the curl request and any configuration related to triggers or branches in Flutter workflow editor or in codemagic.yaml is ignored.
 {{</notebox>}}
 
 ### Parameters
diff --git a/content/rest-api/overview.md b/content/rest-api/overview.md
index 98254a0..e678c6f 100644
--- a/content/rest-api/overview.md
+++ b/content/rest-api/overview.md
@@ -1,6 +1,5 @@
 ---
 title: Overview
-description: Overview of Codemagic API.
 weight: 1
 ---
 
@@ -14,4 +13,4 @@ When making calls to REST API methods, an access token must be included as an HT
 x-auth-token: my-secret-token
 ```
 
-The access token is available via UI in **User settings > Integrations > Codemagic API > Show**.
\ No newline at end of file
+The access token is available via the Codemagic UI in **User settings > Integrations > Codemagic API > Show**.
\ No newline at end of file
diff --git a/content/specs/versions.md b/content/specs/versions.md
index c245b52..f54a900 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -1,5 +1,5 @@
 ---
-description: A list of tools available out-of-the-box on Codemagic build machines.
+description: A list of tools available out-of-the-box on Codemagic build machines
 title: macOS build machine specification (Xcode 11.x)
 aliases:
   - '../releases-and-versions/versions'
@@ -51,7 +51,7 @@ weight: 3
 
 ## Xcode 11.7 (11E801a)
 
-This is the Xcode version used by default when you select `11.7` in build settings in the UI for Flutter apps or set Xcode version to `11.7` in your codemagic.yaml file. Other available versions are listed [here](#other-xcode-versions).
+This is the Xcode version used by default when you select `11.7` in build settings in the workflow editor for Flutter apps or set Xcode version to `11.7` in your codemagic.yaml file. Other available versions are listed [here](#other-xcode-versions).
 
 Xcode path: `/Applications/Xcode-11.7.app`
 
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 8ce79b5..fac5213 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -1,5 +1,5 @@
 ---
-description: A list of tools available out-of-the-box on Codemagic build machines.
+description: A list of tools available out-of-the-box on Codemagic build machines
 title: macOS build machine specification (Xcode 12+)
 aliases:
   - '../releases-and-versions/versions2'
diff --git a/content/teams/users.md b/content/teams/users.md
index fa995eb..641d7b4 100644
--- a/content/teams/users.md
+++ b/content/teams/users.md
@@ -7,7 +7,7 @@ You can invite your team members to join the team in Codemagic free of charge. W
 
 ## Active users
 
-An active user is anyone who triggers a build manually from the UI or via the API, or automaticlly from a webhook in response to events in the repository. Active users are marked with a green badge with the build count on it. The number of active users for the ongoing subscription period is shown on the right sidebar in team settings. 
+An active user is anyone who triggers a build manually from the Codemagic UI or via the API, or automaticlly from a webhook in response to events in the repository. Active users are marked with a green badge with the build count on it. The number of active users for the ongoing subscription period is shown on the right sidebar in team settings.
 
 The active users count is reset at the beginning of every month. To see the active users of previous subscription periods, check the Billing history on the [Billing](../billing/billing) page.
 
diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index efb74b1..fa80191 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -1,6 +1,6 @@
 ---
 title: Testing
-description: Testing with YAML.
+description: How to run tests with codemagic.yaml
 weight: 1
 aliases:
   - '../yaml/testing'
@@ -11,7 +11,7 @@ Test scripts are added under `scripts` in the [overall architecture](../getting-
 You can display test results visually in the build overview if you use expanded form of the script in `codemagic.yaml`.
 Just include the `test_report` field with a glob pattern matching the test result file location. Supported test report formats are [Junit XML](https://llg.cubic.org/docs/junit/) `.JSON` for Flutter's `--machine` report.
 
-## React Native unit test
+## React Native unit tests
 
 This is a basic example with jest, given that jest tests are defined in the `package.json` file.
 
@@ -21,7 +21,7 @@ npm test
 
 ## Native Android
 
-For non-UI tests or unit testing:
+For non-UI tests or unit tests:
 
 ```bash
 - name: Test
@@ -29,7 +29,7 @@ For non-UI tests or unit testing:
   test_report: app/build/test-results/**/*.xml
 ```
 
-UI tests (also known as instrumented tests):
+For UI tests (also known as instrumented tests):
 
 ```bash
 - name: Launch emulator
@@ -61,7 +61,7 @@ UI tests (also known as instrumented tests):
 
 Please check [Codemagic CLI tools documentation](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/run-tests.md#run-tests) to learn more about more optional arguments to `xcode-project run-tests`.
 
-## Flutter test
+## Flutter unit tests
 
     flutter test
 
@@ -117,5 +117,5 @@ scripts:
 ```
 
 {{<notebox>}}
-Make sure to use Flutter channel **Beta** or higher since Flutter for web is not yet available on **Stable**.
+Flutter for web is available in Flutter version **2.0.0** or higher on the **stable** channel.
 {{</notebox>}}
\ No newline at end of file
diff --git a/content/testing/aws.md b/content/testing/aws.md
index e94396b..3642584 100644
--- a/content/testing/aws.md
+++ b/content/testing/aws.md
@@ -1,6 +1,5 @@
 ---
-description:
-  Run Flutter Driver tests on physical Android and iOS devices.
+description: How to configure Flutter Driver tests in the Flutter workflow editor
 title: Testing on AWS Device Farm
 weight: 5
 ---
diff --git a/content/testing/beta-testing-with-testmagic.md b/content/testing/beta-testing-with-testmagic.md
index a393c04..54b3455 100644
--- a/content/testing/beta-testing-with-testmagic.md
+++ b/content/testing/beta-testing-with-testmagic.md
@@ -1,5 +1,5 @@
 ---
-description: View, test and distribute your Codemagic builds with Testmagic
+description: How to configure Testmagic distribution in the Flutter workflow editor
 title: Beta testing with Testmagic
 weight: 6
 draft: true
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index 2c809d1..5a41619 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -1,7 +1,5 @@
 ---
-description:
-  Automatically run unit, widget and integration tests every time you build
-  your Flutter app.
+description: How to run automated tests in builds configured with the Flutter workflow editor
 title: Running automated tests
 weight: 1
 ---
diff --git a/content/testing/static-code-analysis.md b/content/testing/static-code-analysis.md
index 5eba130..5f8fe65 100644
--- a/content/testing/static-code-analysis.md
+++ b/content/testing/static-code-analysis.md
@@ -1,5 +1,5 @@
 ---
-description: Test your code with flutter analyze.
+description: How to run Flutter analyze in Flutter workflow editor configured builds
 title: Static code analysis
 weight: 2
 ---
diff --git a/content/testing/testing-widgets.md b/content/testing/testing-widgets.md
index 1a4a8de..7781861 100644
--- a/content/testing/testing-widgets.md
+++ b/content/testing/testing-widgets.md
@@ -1,7 +1,5 @@
 ---
-description:
-  Instead of building the entire app, you can run tests on your widgets
-  only.
+description: How to configure running only widget tests
 title: Testing widgets
 weight: 3
 ---
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 9c3211f..59f56f5 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -1,6 +1,5 @@
 ---
-description:
-  'Establish SSH or VNC access to the virtual build machine'
+description: How to connect to build machine with SSH or VNC
 title: Remote access to build machine
 weight: 2
 ---
diff --git a/content/troubleshooting/codemagic-status-page.md b/content/troubleshooting/codemagic-status-page.md
index 8060e42..fe495e6 100644
--- a/content/troubleshooting/codemagic-status-page.md
+++ b/content/troubleshooting/codemagic-status-page.md
@@ -1,5 +1,5 @@
 ---
-description: Get latest information about the status of Codemagic CI/CD.
+description: How to get the latest information about uptime status of Codemagic
 title: Codemagic status page
 weight: 3
 ---
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 5708c8e..de4a9e1 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -1,5 +1,5 @@
 ---
-description: Find out how to overcome frequent issues with building your Flutter app on Codemagic. 
+description: How to overcome common issues building mobile apps on Codemagic 
 title: Common issues
 weight: 4
 ---
@@ -15,7 +15,7 @@ altool[xxx:xxx] *** Error: code -22020 (Unable to validate your application. We
 
 The most common reason for the occurrence of this error message is using Apple ID password instead of [app-specific password](https://support.apple.com/en-us/HT204397) in App Store Connect publishing settings. 
 
-To generate an app-specific password, sign in to your [Apple ID account page](https://appleid.apple.com/account/manage), navigate to the **Security** section and click **Generate Password...** below **App-Specific Passwords**. The generated app-specific password will be in this format: `abcd-efgh-ijkl-mnop`. Insert this value into the Codemagic UI or as a password in `codemagic.yaml` when setting up publishing to App Store Connect. Note that the password should be generated with the same Apple account that you are using for publishing.
+To generate an app-specific password, sign in to your [Apple ID account page](https://appleid.apple.com/account/manage), navigate to the **Security** section and click **Generate Password...** below **App-Specific Passwords**. The generated app-specific password will be in this format: `abcd-efgh-ijkl-mnop`. Insert this value into the Flutter workflow editor or as a password in `codemagic.yaml` when setting up publishing to App Store Connect. Note that the password should be generated with the same Apple account that you are using for publishing.
 
 ## iOS code signing troubleshooting
 
@@ -122,4 +122,4 @@ In such cases, you will often see an error message similar to this one:
 
 **Solution**:
 * Confirm that you have set the correct bundle identifiers for all targets in Xcode.
-* Verify that the bundle identifier set in Xcode matches the bundle identifier set in the UI under code signing.
+* Verify that the bundle identifier set in Xcode matches the bundle identifier set in the Flutter workflow editor under code signing.
diff --git a/layouts/_default/index.json b/layouts/_default/index.json
index 64d5b2c..2e7c517 100644
--- a/layouts/_default/index.json
+++ b/layouts/_default/index.json
@@ -4,6 +4,11 @@
     {{- with .Title }}
     "title": "{{ htmlEscape . }}",
     {{- end }}
+    {{- if .Description }}
+    "subtitle": "{{ htmlEscape .Description }}",
+    {{- else }}
+    "subtitle": "",
+    {{- end }}
     {{- with .Plain }}
     "content": {{ jsonify . }},
     {{- end }}
diff --git a/layouts/_default/single.html b/layouts/_default/single.html
index 79cde3a..9653dd4 100644
--- a/layouts/_default/single.html
+++ b/layouts/_default/single.html
@@ -1,5 +1,11 @@
 {{ define "main" }}
   <h1>{{ .Title }}</h1>
+  {{ with .Description }}
+    <p class="description">{{.}}</p>
+  {{ end }}
+  {{ with .Params.StartLineBreak }}
+    <br/>
+  {{ end }}
   {{ partial "content" . }}
   {{ with .TableOfContents }}
     <aside id="toc" data-js-toc>

commit 90c262d46c29588ae4176de480e6d9ae1d86b80f
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Wed Mar 10 19:14:24 2021 +0100

    remove zip from linux specs (#274)

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
index 5f3ca25..845b0f7 100644
--- a/content/specs/versions-linux.md
+++ b/content/specs/versions-linux.md
@@ -41,7 +41,6 @@ weight: 4
 - wget
 - yarn `1.22.5`
 - yq `3.3.2`
-- zip
 
 ## Android Studio 4.1.2 (201.8743.12.41.7042882)
 

commit 2b74383c5ca5a9c8ce3c69a1a508fa753c4fb627
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Wed Mar 10 18:44:16 2021 +0100

    Feature/big sur and linux versions (#272)
    
    * versions report for big sur image
    
    * manually specify flutter version
    
    * versions report for linux image
    
    * fix `stable` > `edge` for xcode 12.5
    
    * change weight for linux specs
    
    * add beta for linux title
    
    * adjust weight
    
    * Update versions3.md
    
    Removed reference to "edge"
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/specs/versions-linux.md b/content/specs/versions-linux.md
new file mode 100644
index 0000000..5f3ca25
--- /dev/null
+++ b/content/specs/versions-linux.md
@@ -0,0 +1,48 @@
+---
+description: A list of tools available out-of-the-box on Codemagic build machines.
+title: Linux (beta) build machine specification
+aliases:
+  - '../releases-and-versions/versions-linux'
+weight: 4
+---
+
+## Hardware
+
+- Standard VM with Linux `4 vCPUs, 16 GB memory`
+- Premium VM with Linux `coming soon`
+
+## System
+
+- System version `Ubuntu 20.04.1 LTS`
+- Kernel version `5.4.0-1036-gcp`
+- Disk `97GB (Free Space: 60GB)`
+
+## Pre-installed tools
+
+- Android tools `/usr/local/share/android-sdk`
+- curl `7.68.0`
+- dart `2.10.5`
+- docker `20.10.2`
+- firebase `9.1.0`
+- flutter `2.0.1 ($HOME/programs/flutter)`
+- gem `3.1.4`
+- git `2.25.1`
+- ionic `5.4.16`
+- jq `jq-1.6`
+- node `14.15.3`
+- npm `6.14.9`
+- python2 `2.7.18`
+- python `3.8.5`
+- ruby `2.7.2p137`
+- ssh
+- sudo
+- tar
+- unzip
+- wget
+- yarn `1.22.5`
+- yq `3.3.2`
+- zip
+
+## Android Studio 4.1.2 (201.8743.12.41.7042882)
+
+Android Studio path: `~/programs/android-studio`
diff --git a/content/specs/versions.md b/content/specs/versions.md
index 4ddbd65..c245b52 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -3,7 +3,7 @@ description: A list of tools available out-of-the-box on Codemagic build machine
 title: macOS build machine specification (Xcode 11.x)
 aliases:
   - '../releases-and-versions/versions'
-weight: 2
+weight: 3
 ---
 
 ## Hardware
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index b20744a..8ce79b5 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -3,7 +3,7 @@ description: A list of tools available out-of-the-box on Codemagic build machine
 title: macOS build machine specification (Xcode 12+)
 aliases:
   - '../releases-and-versions/versions2'
-weight: 1
+weight: 2
 ---
 
 ## Hardware
diff --git a/content/specs/versions3.md b/content/specs/versions3.md
new file mode 100644
index 0000000..0ff5958
--- /dev/null
+++ b/content/specs/versions3.md
@@ -0,0 +1,148 @@
+---
+description: A list of tools available out-of-the-box on Codemagic build machines.
+title: macOS build machine specification (Xcode 12.5+)
+aliases:
+  - '../releases-and-versions/versions3'
+weight: 1
+---
+
+## Hardware
+
+- Standard VM on Mac mini `2.3GHz Quad Core / 8GB`
+- Premium VM on Mac Pro `3.7GHz Quad Core / 32GB`
+
+## System
+
+- System version `macOS 11.2 (20D64)`
+- Kernel version `Darwin 20.3.0`
+- Disk `322GB (Free Space: 94GB)`
+
+## Pre-installed tools
+
+- Android tools `/usr/local/share/android-sdk`
+- aws `2.1.29`
+- cocoapods `1.10.1`
+- cordova `10.0.0`
+- curl
+- dart `2.10.5`
+- docker `20.10.2`
+- fastlane `2.176.0`
+- firebase `9.3.0`
+- flutter `2.0.1 ($HOME/programs/flutter)`
+- gem `3.1.4`
+- git `2.30.1`
+- gradle `6.1.1`
+- homebrew `3.0.4`
+- ionic `6.12.4`
+- jq
+- node `14.15.5`
+- npm `7.5.3`
+- python `3.8.7`
+- python3 `3.8.7`
+- ruby `2.7.2p137`
+- ssh
+- sudo
+- tar
+- unzip
+- wget
+- yarn `1.22.10`
+- yq
+- zip
+
+## Xcode 12.5 (12E5244e)
+
+This is the Xcode version used when you select `12.5` in build settings. Other available versions are listed [here](#other-xcode-versions).
+
+Xcode path: `/Applications/Xcode-12.5.app`
+
+With Xcode `12.5` build version `12E5244e` the following runtimes and devices are installed:
+
+### Runtimes
+
+- iOS 14.0
+- iOS 14.1
+- iOS 14.2
+- iOS 14.3
+- iOS 14.4
+- iOS 14.5
+- tvOS 14.0
+- tvOS 14.2
+- tvOS 14.3
+- tvOS 14.4
+- tvOS 14.5
+- watchOS 7.0
+- watchOS 7.1
+- watchOS 7.2
+- watchOS 7.4
+
+### Devices
+
+- iPhone 4s
+- iPhone 5
+- iPhone 5s
+- iPhone 6 Plus
+- iPhone 6
+- iPhone 6s
+- iPhone 6s Plus
+- iPhone SE (1st generation)
+- iPhone 7
+- iPhone 7 Plus
+- iPhone 8
+- iPhone 8 Plus
+- iPhone X
+- iPhone Xs
+- iPhone Xs Max
+- iPhone Xʀ
+- iPhone 11
+- iPhone 11 Pro
+- iPhone 11 Pro Max
+- iPhone SE (2nd generation)
+- iPhone 12 mini
+- iPhone 12
+- iPhone 12 Pro
+- iPhone 12 Pro Max
+- iPod touch (7th generation)
+- iPad 2
+- iPad Retina
+- iPad Air
+- iPad mini 2
+- iPad mini 3
+- iPad mini 4
+- iPad Air 2
+- iPad Pro (9.7-inch)
+- iPad Pro (12.9-inch) (1st generation)
+- iPad (5th generation)
+- iPad Pro (12.9-inch) (2nd generation)
+- iPad Pro (10.5-inch)
+- iPad (6th generation)
+- iPad (7th generation)
+- iPad Pro (11-inch) (1st generation)
+- iPad Pro (12.9-inch) (3rd generation)
+- iPad Pro (11-inch) (2nd generation)
+- iPad Pro (12.9-inch) (4th generation)
+- iPad mini (5th generation)
+- iPad Air (3rd generation)
+- iPad (8th generation)
+- iPad Air (4th generation)
+- Apple TV
+- Apple TV 4K
+- Apple TV 4K (at 1080p)
+- Apple Watch - 38mm
+- Apple Watch - 42mm
+- Apple Watch Series 2 - 38mm
+- Apple Watch Series 2 - 42mm
+- Apple Watch Series 3 - 38mm
+- Apple Watch Series 3 - 42mm
+- Apple Watch Series 4 - 40mm
+- Apple Watch Series 4 - 44mm
+- Apple Watch Series 5 - 40mm
+- Apple Watch Series 5 - 44mm
+- Apple Watch SE - 40mm
+- Apple Watch SE - 44mm
+- Apple Watch Series 6 - 40mm
+- Apple Watch Series 6 - 44mm
+
+## Other Xcode versions
+
+- 12.4 (12D4e) `/Applications/Xcode-12.4.app`
+

commit 893ed062b30f729cc670b23ef617659e0db4b13d
Author: Chris Raastad <craastad@gmail.com>
Date:   Tue Mar 9 15:57:27 2021 +0200

    Update release-notes to include auto-versioning

diff --git a/content/notes/release-notes.md b/content/notes/release-notes.md
index 565e51e..f98b6cc 100644
--- a/content/notes/release-notes.md
+++ b/content/notes/release-notes.md
@@ -6,6 +6,12 @@ aliases:
 weight: 1
 ---
 
+## March 2021
+
+### Auto-increment build numbers
+
+Using [Codemagic CLI Tools](https://github.com/codemagic-ci-cd/cli-tools), you can now set your build number based on the currently published build number in the [Google Play](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/README.md), [App Store](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md), or [Test Flight](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md). See the [build versioning docs](../building/build-versioning) for all the details on how to set up the [Apple App Store](../building/build-versioning/#use-codemagic-cli-tools-to-get-the-latest-build-number-from-app-store-or-testflight) and [Google Play](../building/build-versioning/#use-codemagic-cli-tools-to-get-the-latest-build-number-from-google-play) credentials and script commands to enable auto-versioning in yaml or Flutter UI configuration. See the [Android Versioning Sample Application](https://github.com/codemagic-ci-cd/android-versioning-example/tree/master) for an example of using various versioning methods in Android.
+
 ## January 2021
 
 ### Scheduled builds

commit d07c0125bde39ca91f5c083cf34f5686ae276e82
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon Mar 8 17:30:07 2021 +0100

    Document how to get version from Google Play/App Store/Testflight via CLI tools (#267)
    
    * draft
    
    * refactoring
    
    * refactoring
    
    * refactoring
    
    * refactoring
    
    * Added missing word and punctuation.
    
    * fix headers and note about publishing and signing
    
    * fix
    
    Co-authored-by: craastad <craastad@gmail.com>

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 8ce3e01..1dc3e62 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -21,7 +21,7 @@ Here are some examples how you can increment the app version using Codemagic's r
 
 ## Fetching build number from pubsec.yaml
 
-Add a pre-build script that installs [yq](https://github.com/mikefarah/yq), a lightweight and portable command-line YAML processor: 
+Add a pre-build script that installs [yq](https://github.com/mikefarah/yq), a lightweight and portable command-line YAML processor:
 
 ```bash
 #!/usr/bin/env sh
@@ -36,7 +36,7 @@ Then add the following build arguments:
 
 ## Set Xcode project build number via command line
 
-Calling agvtool is another way of forcing Xcode to set the build version for your next build. 
+Calling agvtool is another way of forcing Xcode to set the build version for your next build.
 
 ```bash
 #!/bin/sh
@@ -46,3 +46,149 @@ set -x
 cd $FCI_BUILD_DIR/ios
 agvtool new-version -all $(($BUILD_NUMBER + 1))
 ```
+
+## Use Codemagic CLI Tools to get the latest build number from App Store or TestFlight
+
+Use [get-latest-app-store-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md#get-latest-app-store-build-number) or [get-latest-testflight-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md#get-latest-testflight-build-number) actions from [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/app-store-connect#app-store-connect) Codemagic CLI Tool to get the latest build numbers.
+
+In order to do that, you need to provide API access to App Store Connect API by providing `ISSUER_ID`, `KEY_IDENTIFIER` and `PRIVATE_KEY` as arguments to the action, as defined below.
+
+Additionally, you will need to provide the Application Apple ID (an automatically generated ID assigned to your app, e.g. `1234567890`).
+It can be found under **General > App Information > Apple ID** under your application in App Store Connect.
+
+{{<notebox>}}
+If you use `codemagic.yaml` config and you have [Automatic code signing](https://docs.codemagic.io/code-signing-yaml/signing-ios/#automatic-code-signing) setup, you are good to go directly to [Set the build number with `agvtool`](#set-the-build-number-with-agvtool)
+{{</notebox>}}
+
+### Creating the App Store Connect API key
+
+It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api). To do so:
+
+1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
+2. Click on the + sign to generate a new API key.
+3. Enter the name for the key and select an access level. We recommend choosing either `Developer` or `App Manager`, read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
+4. Click **Generate**.
+5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+
+### Saving the API access arguments to environment variables
+
+- `APP_STORE_CONNECT_KEY_IDENTIFIER`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Key ID** of the key.
+
+- `APP_STORE_CONNECT_ISSUER_ID`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Issuer ID** displayed above the table of active keys.
+
+- `APP_STORE_CONNECT_PRIVATE_KEY`
+
+  This is the private API key downloaded from App Store Connect. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build. Alternativey, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
+
+#### Saving to `codemagic.yaml` config
+
+Save the API key and the related information as [environment](../getting-started/yaml#environment) variables. Make sure to [encrypt](./encrypting/#encrypting-sensitive-data) the values of the variables before adding them to the configuration file.
+
+```yaml
+environment:
+  vars:
+    APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
+    APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
+    APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
+```
+
+{{<notebox>}}
+Alternatively, each property can be specified in the `scripts` section of the YAML file as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
+{{</notebox>}}
+
+#### Saving to environment variables in UI (for Flutter projects)
+
+Add the following environment variables to your Flutter project in **App settings > Environment variables** (See the details [here](https://docs.codemagic.io/flutter/env-variables/)):
+
+- `APP_STORE_CONNECT_ISSUER_ID`
+- `APP_STORE_CONNECT_KEY_IDENTIFIER`
+- `APP_STORE_CONNECT_PRIVATE_KEY`
+
+### Set the build number with `agvtool`
+
+Once you have the App Store Connect API access set with mentioned above environment variables, you can get the build number using the tool and set your incremented project version.
+
+Add the following script under your `scripts` field for `codemagic.yaml`, or as a custom [Pre-build script](https://docs.codemagic.io/flutter/custom-scripts/) in UI settings (for Flutter projects):
+
+```bash
+export APP_STORE_CONNECT_PRIVATE_KEY=$(echo $APP_STORE_CONNECT_PRIVATE_KEY | base64 --decode) # if you encrypted the file itself, not its content
+LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number '1234567890') # The argument is your application's Apple ID
+agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
+```
+
+To use the latest build number from Testflight use a similar script:
+
+```bash
+export APP_STORE_CONNECT_PRIVATE_KEY=$(echo $APP_STORE_CONNECT_PRIVATE_KEY | base64 --decode) # if you encrypted the file itself, not its content
+LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number '1234567890') # The argument is your application's Apple ID
+agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
+```
+
+{{<notebox>}}
+You can specify an optional argument `--app-store-version=APP_STORE_VERSION` to get the latest build number for a particular version of your application (`CFBundleShortVersionString`). Check the details for [get-latest-app-store-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-app-store-build-number.md#optional-arguments-for-action-get-latest-app-store-build-number) or for [get-latest-testflight-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/get-latest-testflight-build-number.md#optional-arguments-for-action-get-latest-testflight-build-number).
+{{</notebox>}}
+
+Alternatively, if you use `YAML` configuration, you may just export the value to an environment variable and use it under your `CFBundleVersion` in `Info.plist`.
+
+## Use Codemagic CLI Tools to get the latest build number from Google Play
+
+Use [get-latest-build-number](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/get-latest-build-number.md#get-latest-build-number) action from [google-play](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/google-play#google-play) Codemagic CLI Tool to get the latest build number from Google Play.
+
+In order to do that, you need to provide API access to Google Play Developer API by providing `GCLOUD_SERVICE_ACCOUNT_CREDENTIALS` as arguments to the action, as defined below.
+
+Additionally, you will need to provide the package name of the app in Google Play Console (Ex. `com.google.example`).
+
+{{<notebox>}}
+If you use `codemagic.yaml` config and you have [Google Play publishing](https://docs.codemagic.io/publishing-yaml/distribution/#google-play) setup, you can reuse the existing service account credentials and go directly to [Get the build number](#get-the-build-number). Only make sure they are specified under the`GCLOUD_SERVICE_ACCOUNT_CREDENTIALS` environment variable.
+{{</notebox>}}
+
+### Creating Google service account credentials
+
+You will need to set up a service account in Google Play Console and create a JSON key with credentials. See how to [set up a service account and create a key](../knowledge-base/google-play-api/#setting-up-the-service-account-on-google-play-and-google-cloud-platform).
+
+### Saving the API access argument to environment variables in `codemagic.yaml` config
+
+Save the API key as an [environment](../getting-started/yaml#environment) variable. Make sure to [encrypt](./encrypting/#encrypting-sensitive-data) the values of the variable before adding it to the configuration file.
+
+```yaml
+environment:
+  vars:
+    GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...)
+```
+
+{{<notebox>}}
+Alternatively, credentials can be specified as a command argument with the dedicated flag, see the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/get-latest-build-number.md#--credentialsgcloud_service_account_credentials). But anyway you should have them in environment variables so that they can be decrypted. In that case, the environment variable will be fallback for missing value in the script.
+{{</notebox>}}
+
+### Saving the API access argument to environment variables in UI (for Flutter projects)
+
+Add the `GCLOUD_SERVICE_ACCOUNT_CREDENTIALS` environment variable to your Flutter project in **App settings > Environment variables** (See the details [here](https://docs.codemagic.io/flutter/env-variables/)).
+
+### Get the build number
+
+Once you have the Google Play Developer API access set with the mentioned above environment variable, you can get the build number using the tool:
+
+```bash
+export GCLOUD_SERVICE_ACCOUNT_CREDENTIALS=$(echo $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS | base64 --decode) # if you encrypted the file itself, not its content
+LATEST_BUILD_NUMBER=$(google-play get-latest-build-number --package-name 'com.google.example') # use your own package name
+```
+
+{{<notebox>}}
+By default, the action will try to get the latest build number as the maximum build number across all tracks (`internal`, `alpha`, `beta`, `production`). If you want to limit the search, you can specify a particular track(s) with the optional argument `--tracks` described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/google-play/get-latest-build-number.md#--tracksinternal--alpha--beta--production).
+{{</notebox>}}
+
+There are number of ways how you can pass the obtained build number to an Android project (through environment variables, `gradlew` argument properties, file, or a call from `build.gradle`). Check the [android-versioning-example repository](https://github.com/codemagic-ci-cd/android-versioning-example/tree/master) for more details.
+
+#### Get the build number in UI settings (for Flutter projects)
+
+If you encrypted the content (not the file) of your gcloud service account credentials and added it as the environment variable `GCLOUD_SERVICE_ACCOUNT_CREDENTIALS`, you can call it immideately as a build argument to your android build command to increment the build number:
+
+```bash
+--build-number=$(($(google-play get-latest-build-number --package-name 'com.google.example') + 1))  # use your own package name
+```
+
+Alternatively you can add a custom [Pre-build script](https://docs.codemagic.io/flutter/custom-scripts/) and write the build number to a file, which will be read from your `android/app/build.gradle` during the build (See details [here](https://github.com/codemagic-ci-cd/android-versioning-example/tree/autoversioning_through_file)).
\ No newline at end of file

commit d7c66b8fd9de0729a29a98b167a7f4670919715e
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Mon Mar 8 12:19:00 2021 +0100

    update versions reports (#269)

diff --git a/content/specs/versions.md b/content/specs/versions.md
index e1cd170..4ddbd65 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -15,24 +15,24 @@ weight: 2
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 62GB)`
+- Disk `322GB (Free Space: 57GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
 - aws `1.18.105`
-- cocoapods `1.9.3`
+- cocoapods `1.10.1`
 - cordova `8.1.2`
 - curl
 - dart `2.9.2`
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `1.22.6 ($HOME/programs/flutter)`
+- flutter `2.0.1 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
-- homebrew `2.4.16`
+- homebrew `3.0.4`
 - ionic `4.11.0`
 - jq
 - node `12.14.0`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index 0f3cb8e..b20744a 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -15,24 +15,24 @@ weight: 1
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 31GB)`
+- Disk `322GB (Free Space: 26GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
 - aws `2.0.50`
-- cocoapods `1.10.0`
+- cocoapods `1.10.1`
 - cordova `10.0.0`
 - curl
 - dart `2.10.5`
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `1.22.6 ($HOME/programs/flutter)`
+- flutter `2.0.1 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.30.0`
 - gradle `6.1.1`
-- homebrew `2.7.5`
+- homebrew `3.0.4`
 - ionic `5.4.16`
 - jq
 - node `12.18.4`

commit 65efbf5a6ff937f784ff59014ab6204032656059
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Mar 4 17:07:27 2021 +0200

    Update webhook and triggers information (#266)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/building/webhooks.md b/content/building/webhooks.md
index 04cb696..2387b61 100644
--- a/content/building/webhooks.md
+++ b/content/building/webhooks.md
@@ -6,7 +6,7 @@ weight: 4
 
 Webhooks are necessary in order to be able to trigger builds automatically in response to events in the repository.
 
-* **GitHub**: Open your project and navigate to **Settings** > **Webhooks** > **Add webhook**, paste the **payload URL** from below, make sure **Content type** is `application/json` and select the following events: **Branch or tag creation**, **Pull requests**, **Pushes**.
+* **GitHub**: Open your project and navigate to **Settings** > **Webhooks** > **Add webhook**, paste the **payload URL** from below (both `application/json` or `application/x-www-form-urlencoded` are supported as the **Content type**), and select the following events: **Branch or tag creation**, **Pull requests**, **Pushes**.
 
 * **GitLab**: Navigate to **Settings** > **Webhooks**, paste the **payload URL** and check the following boxes in the **Trigger** section: **Push events**, **Tag push events**, **Merge request events**. Also, be sure to enable **SSL verification**.
 
diff --git a/content/flutter/automatic-build-triggering.md b/content/flutter/automatic-build-triggering.md
index d6a978c..b19ce27 100644
--- a/content/flutter/automatic-build-triggering.md
+++ b/content/flutter/automatic-build-triggering.md
@@ -30,9 +30,13 @@ To add a new branch pattern:
 
 Under **Automatic build triggering**, you can select when to trigger builds.
 
+{{<notebox>}}
+Codemagic automatically adds webhooks to the repositories added via GitHub app or from GitHub, GitLab or Bitbucket via the OAuth integration after you have enabled any of the triggers in this section. For repositories added via SSH or HTTP/HTTPS, you would have to [set up webhooks manually](../building/webhooks). Note that webhook triggers might not be supported for all repository providers.
+{{</notebox>}}
+
 **Trigger on push**. When checked, a build will be started every time you commit code to any of the tracked branches.
 
-**Trigger on pull request update** (not supported for apps from custom sources). When checked, your workflow is run when a pull request is opened or updated to verify the resulting merge commit. 
+**Trigger on pull request update**. When checked, your workflow is run when a pull request is opened or updated to verify the resulting merge commit. 
 
 * For triggering pull requests, you can specify whether each branch pattern matches the **source** or the **target** branch of the pull request.
 
@@ -43,5 +47,3 @@ Under **Automatic build triggering**, you can select when to trigger builds.
 **Cancel outdated webhook builds**. When checked, Codemagic will automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch. We recommend enabling this feature when you're making several commits, each of which triggers a build.
 
 If you don't enable any automatic build triggers, you can start builds only manually for this workflow.
-
-Codemagic automatically adds webhooks to GitHub, GitLab, and Bitbucket after you have enabled any of the triggers in **App settings > Build triggers > Automatic build triggering**. In the case Codemagic is unable to create a webhook, you would have to [set up webhooks manually](../building/webhooks).

commit 1027dcc75c22250376d21c8ab8f7a45df95b7a32
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu Mar 4 14:10:29 2021 +0100

    using multiple ssh keys (#265)
    
    * using multiple ssh keys
    
    * update
    
    * update

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index f9dfd06..e81f48d 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -21,9 +21,22 @@ All environment variables whose name has the suffix `_SSH_KEY` will be automatic
 If you wish to use a **custom** environment variable name without the suffix `_SSH_KEY`, add the following **post-clone** script to add the key to the SSH agent.
 
 ```bash
-#!/usr/bin/env sh
+#!/usr/bin/env bash
 echo "${CUSTOM_KEY_NAME}" > /tmp/ssh_key
 chmod 600 /tmp/ssh_key
 eval `ssh-agent -s`
 ssh-add /tmp/ssh_key
 ```
+
+### Using multiple SSH keys
+
+When you add multiple SSH keys, git will by default attempt to use the first key available, which may cause problems when installing private dependencies. As a workaround, you can change the order of your environment variables in a way that the required SSH key comes first. A more robust solution would be to explicitly add the key to the SSH agent before invoking a command which requires it, as in the example below.
+
+```bash
+#!/usr/bin/env bash
+echo "${MY_SSH_KEY}" > /tmp/ssh_key
+chmod 600 /tmp/ssh_key
+eval `ssh-agent -s`
+ssh-add /tmp/ssh_key
+... # enter the commands that require the key
+```

commit f247ea3f7b29392935bd1ea5777f2e5f7cdc3b60
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Fri Feb 26 16:06:41 2021 +0200

    Update versions.md (#261)
    
    using latest version does not point to 11.7, because it is not the latest and .yaml users cannot select the version in build settings. You need to fix the version in order to use 11.7. Changes to docs are made accordingly.

diff --git a/content/specs/versions.md b/content/specs/versions.md
index 3721331..e1cd170 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -51,7 +51,7 @@ weight: 2
 
 ## Xcode 11.7 (11E801a)
 
-This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
+This is the Xcode version used by default when you select `11.7` in build settings in the UI for Flutter apps or set Xcode version to `11.7` in your codemagic.yaml file. Other available versions are listed [here](#other-xcode-versions).
 
 Xcode path: `/Applications/Xcode-11.7.app`
 

commit bfcc34479bacae3993768de12d2072df30b17452
Author: Chris Raastad <craastad@gmail.com>
Date:   Fri Feb 26 15:48:17 2021 +0200

    Updated google play api key docs with latest play store UI. (#262)

diff --git a/content/knowledge-base/google-play-api.md b/content/knowledge-base/google-play-api.md
index 6fe313f..408c19d 100644
--- a/content/knowledge-base/google-play-api.md
+++ b/content/knowledge-base/google-play-api.md
@@ -16,15 +16,15 @@ In order to allow Codemagic publish applications to Google Play, it is necessary
 
 3. In step 1, fill in the **Service account details** and click **Create**. The name of the service account will allow you to identify it among other service accounts you may have created.
 
-4. In step 2, click the **Select a role** dropdown menu and choose **Project > Editor** as the role.<br><br>
+4. In step 2, click the **Select a role** dropdown menu and choose **Basic > Editor** as the role.<br><br>
 ![Google cloud editor](../uploads/google_cloud_two.png)
 
 5. In step 3, you can leave the fields blank and click **Done**.
 
-6. In the list of created service accounts, identify the account you have just created and click on the menu in the **Actions** column, then click **Create key**.<br><br>
+6. In the list of created service accounts, identify the account you have just created and click on the menu in the **Actions** column, then click **Manage keys**.<br><br>
 ![Google cloud key](../uploads/google_cloud_three.png)
 
-7. Make sure that the key type is set to `JSON` and click **Create**. Save the key file in a secure location to have it available.<br><br>
+7. In the Keys section, click **Add Key > Create new key**. Make sure that the key type is set to `JSON` and click **Create**. Save the key file in a secure location to have it available.<br><br>
 ![Google cloud json](../uploads/google_cloud_four.png)
 
 8. Navigate back to **Google Play Console > Settings > API access** and click **Grant access** next to the created account.<br><br>
@@ -33,7 +33,7 @@ In order to allow Codemagic publish applications to Google Play, it is necessary
 9. On the **App permissions** tab, add the applications you wish to grant access to.<br><br>
 ![Google play selected](../uploads/google_play_four.png)
 
-10. Go with the default settings for app permissions and click **Apply**.<br><br> 
+10. Go with the default settings for app permissions and click **Apply** (Financial data permissions can be left blank).<br><br> 
 ![Google play apply](../uploads/google_play_five.png)
 
 11. On the **Account permissions** tab, leave everything as is (there is no need to grant the service account **Admin** access).<br><br>
diff --git a/content/uploads/google_cloud_four.png b/content/uploads/google_cloud_four.png
index 92ce51e..e1c8704 100644
Binary files a/content/uploads/google_cloud_four.png and b/content/uploads/google_cloud_four.png differ
diff --git a/content/uploads/google_cloud_three.png b/content/uploads/google_cloud_three.png
index 9092b11..02a4230 100644
Binary files a/content/uploads/google_cloud_three.png and b/content/uploads/google_cloud_three.png differ
diff --git a/content/uploads/google_cloud_two.png b/content/uploads/google_cloud_two.png
index 5a68064..110c8ab 100644
Binary files a/content/uploads/google_cloud_two.png and b/content/uploads/google_cloud_two.png differ

commit 40b900520c0faef76765de8028a8bcf0f6648162
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Feb 23 12:50:55 2021 +0200

    remove /customers from main menu

diff --git a/layouts/partials/header.html b/layouts/partials/header.html
index 8229c7d..8d10bdd 100644
--- a/layouts/partials/header.html
+++ b/layouts/partials/header.html
@@ -96,12 +96,6 @@
                 <a class="menu-link" href="/" onclick="sendGtag('Documentation_clicked', 'CodemagicMenu')"
                     >Documentation</a
                 >
-                <a
-                    class="menu-link" 
-                    href='{{ site.Param "landingURL" }}/customers'
-                    onclick="sendGtag('Customers_clicked', 'CodemagicMenu')"
-                    >Customers</a
-                >
             </nav>
             <aside id="header-authentication" data-js-header-authentication>
                 <div id="header-auth-visitor" data-js-header-auth-visitor>

commit 09ab0d2c9c354b1acf7b6ee8bd79239cf56222ff
Author: Chris Raastad <craastad@gmail.com>
Date:   Wed Feb 17 14:46:36 2021 +0200

    Fixed incorrect reference to .templates directory (#260)

diff --git a/content/integrations/jira-integration.md b/content/integrations/jira-integration.md
index a7ddd6f..638650b 100644
--- a/content/integrations/jira-integration.md
+++ b/content/integrations/jira-integration.md
@@ -58,7 +58,7 @@ If you want to transition your issue to another status you will need to know wha
 
 ## Adding formatted comments to a Jira issue
 
-Copy the **.scripts** folder to the root of your project. This folder contains a template file called **jira.json** which is used to add formatted comments to a Jira issue. 
+Copy the **.templates** folder to the root of your project. This folder contains a template file called **jira.json** which is used to add formatted comments to a Jira issue. 
 
 The Atlassasion Document Format (ADF) is used to format the comment layout and style. Click [here](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/) for more information about ADF and how to modify this template. 
 
@@ -85,4 +85,4 @@ Addtional environment variables are then set such as the build number, build dat
 1. The script performs a request to add a comment to Jira issue specified using the jira.json as the payload.
 2. Another request is used to transition the issue to a different status.
 3. The script checks to see if XML test results have been generated. See [here](http://localhost:1313/testing-yaml/testing/) for information about using `test_report` to generate a test report .xml output. If **xml test results** are available then they will be uploaded  to the Jira issue.
-4. If **release notes** have been created then these are uploaded to the Jira issue.
\ No newline at end of file
+4. If **release notes** have been created then these are uploaded to the Jira issue.

commit 6efea31b232457a4a23b19e3c64b77e31e5feca1
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Feb 16 11:17:39 2021 +0200

    add customers page link to header, fit header links (#259)

diff --git a/assets/scss/_header.scss b/assets/scss/_header.scss
index b3ae504..9eacc42 100644
--- a/assets/scss/_header.scss
+++ b/assets/scss/_header.scss
@@ -79,7 +79,7 @@
             transform: rotate(-45deg);
         }
     }
-    @media (max-width: 840px) {
+    @media (max-width: 900px) {
         display: block;
     }
 }
@@ -167,7 +167,7 @@
     justify-content: space-between;
     align-items: center;
 
-    @media (min-width: 841px) {
+    @media (min-width: 901px) {
         .menu-link,
         #login-link,
         .label {
@@ -194,7 +194,7 @@
     color: $black;
 }
 
-@media (max-width: 1024px) {
+@media (max-width: 1065px) {
     #header-logo {
         margin-right: 20px;
     }
@@ -204,7 +204,7 @@
         padding: 0 10px;
     }
 }
-@media (min-width: 841px) {
+@media (min-width: 901px) {
     #signup-btn {
         background-color: $blue;
         color: white;
@@ -329,7 +329,7 @@
         }
     }
 }
-@media (max-width: 840px) {
+@media (max-width: 900px) {
     #header-menu-wrap {
         display: none;
         position: fixed;
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 00c655f..a2a4168 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -253,7 +253,7 @@ body {
                 }
             }
         }
-        @media (max-width: 840px) {
+        @media (max-width: 900px) {
           top: 70px;
           #docs-menu {
             top: 140px;
diff --git a/layouts/partials/header.html b/layouts/partials/header.html
index 8d10bdd..8229c7d 100644
--- a/layouts/partials/header.html
+++ b/layouts/partials/header.html
@@ -96,6 +96,12 @@
                 <a class="menu-link" href="/" onclick="sendGtag('Documentation_clicked', 'CodemagicMenu')"
                     >Documentation</a
                 >
+                <a
+                    class="menu-link" 
+                    href='{{ site.Param "landingURL" }}/customers'
+                    onclick="sendGtag('Customers_clicked', 'CodemagicMenu')"
+                    >Customers</a
+                >
             </nav>
             <aside id="header-authentication" data-js-header-authentication>
                 <div id="header-auth-visitor" data-js-header-auth-visitor>

commit 3fcc8a016b6f098de305aeb98e8cb541ae4e0bef
Author: nevercode-kevin <68225534+nevercode-kevin@users.noreply.github.com>
Date:   Mon Feb 15 17:26:30 2021 +0100

    Add Jira Integration documentation (#256)
    
    * Add Jira Integration documentation
    
    * Changes as per PR review

diff --git a/config.yml b/config.yml
index 1964d1d..53f0307 100644
--- a/config.yml
+++ b/config.yml
@@ -50,9 +50,12 @@ menu:
     - identifier: publishing-yaml
       name: Publishing
       weight: 5
+    - identifier: integrations
+      name: Integrations
+      weight: 6
     - identifier: setup-flutter
       name: Flutter projects via UI
-      weight: 6
+      weight: 7
     - identifier: flutter
       name: Build configuration
       weight: 1
@@ -87,9 +90,6 @@ menu:
     - identifier: specs
       name: Build machine specs
       weight: 12
-    - identifier: notes
-      name: Release notes
-      weight: 13
 
 mediaTypes:
   video/mp4:
diff --git a/content/integrations/jira-integration.md b/content/integrations/jira-integration.md
new file mode 100644
index 0000000..a7ddd6f
--- /dev/null
+++ b/content/integrations/jira-integration.md
@@ -0,0 +1,88 @@
+---
+title: Jira integration
+description: Integrate your workflows with Jira
+weight: 1
+---
+
+**Jira** is a an issue tracking and project management product developed by Atlassian. Many software development teams use it to maintain visibility of their projects. 
+
+It offers a REST API which can be used used in conjunction with your **Codemagic** workflows in order to add comments, upload attachments or transition the status of an issue, story or epic.
+
+The following example shows how to set up integration with Jira using the **codemagic.yaml** configuration with a **native iOS project** but the approach is the same for **Flutter**, **React Native** and **native Android** projects.
+
+## Getting started
+
+1. Clone the [Jira integratrion starter project](https://github.com/codemagic-ci-cd/jira_integration_demo_project) from the Codemagic GitHub page.
+
+2. You will need access to a Jira account and can [sign up](https://www.atlassian.com/software/jira) for free.
+
+3. Create a [Jira API Token](https://id.atlassian.com/manage-profile/security/api-tokens) once you have access to Jira.
+
+## Add the codemagic.yaml to your project
+
+Copy the **codemagic.yaml** from the starter project into the root of your repository. Update the environment variables as indicated and use the documentation links where required for the values related to building your app, code signing and app publishing. 
+
+## Update the Jira environment variables
+
+There are four **environment variables** that need to be updated for the Jira integration: `JIRA_AUTH`, `JIRA_BASE_URL`, `JIRA_ISSUE` and `JIRA_TRANSITION_ID`
+
+
+#### Updating the JIRA_AUTH environment variable
+
+The `JIRA_AUTH` environment variable is a base64 encoded string which consists of the email address you log into Jira with and the Jira API token you created: 
+
+`email@example.com:<api_token>`
+
+You can encode these credentials in the **macOS Terminal** using:
+
+```
+echo -n 'email@example.com:<api_token>' | openssl base64
+```
+
+Alternatively use an online tool to base64 encode this string. 
+
+This value is used in the Authorization header used in cURL requests to the Jira API.
+
+#### Adding the JIRA_BASE_URL environment variable
+
+This is the subdomain you chose when you set up your Jira account e.g. "YOUR_SUBDOMAIN.atlassian.net". Put the subdomain including "atalassian.net" in the `JIRA_BASE_URL` environment variable. 
+
+
+#### Specifying the  the JIRA_ISSUE environment variable
+
+Issues, epics and stories have a unique id which is usually in the format **'XXXX-N'** and is visible on your issues either in the bottom right or top left when looking at an issue. Put this value in the `JIRA_ISSUE` environment variable. 
+
+#### Finding and updating the JIRA_TRANSITION_ID environment variable
+
+If you want to transition your issue to another status you will need to know what transition ids are available. You can obtain the available transition ids using a cURL request as documented in the [Jira API documentation](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issues/#api-rest-api-3-issue-issueidorkey-transitions-get). Once you know the transition id then put this value in the `JIRA_TRANSITION_ID` environment variable.
+
+## Adding formatted comments to a Jira issue
+
+Copy the **.scripts** folder to the root of your project. This folder contains a template file called **jira.json** which is used to add formatted comments to a Jira issue. 
+
+The Atlassasion Document Format (ADF) is used to format the comment layout and style. Click [here](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/) for more information about ADF and how to modify this template. 
+
+![A formatted Jira issue comment](../uploads/jira_issue_comment.png)
+
+**Note** that it contains strings beginning with `$` which the scripts use to replace values in the JSON using `sed` before it is added as JSON payload to the `cURL` requests.
+
+## Understanding the 'Post to Jira' script
+
+The script section for publishing to Jira contains several actions which set environment variables, update the comment template and then uses cURL requests to add a comment and upload files to a specific Jira issue.
+
+### Using jq to parse $FCI_ARTIFACT_LINKS
+
+First, it uses **jq** (a command-line tool for parsing JSON) to parse the contents of the Codemagic environment variable `$FCI_ARTIFACT_LINKS` to find information such as the articact url, filename, bundle id and version name and store the values in environment varaibles.
+
+See this link about the JSON data that [$FCI_ARTIFACT_LINKS](http://localhost:1313/building/environment-variables/#codemagic-read-only-environment-variables) contains.
+
+### Setting additional environment variables
+
+Addtional environment variables are then set such as the build number, build date and commit number. These environment variables are used to replace values in the **jira.json** comment template using **sed** which is a stream editor for parsing and transforming text.
+
+### Making cURL requests to the Jira API 
+
+1. The script performs a request to add a comment to Jira issue specified using the jira.json as the payload.
+2. Another request is used to transition the issue to a different status.
+3. The script checks to see if XML test results have been generated. See [here](http://localhost:1313/testing-yaml/testing/) for information about using `test_report` to generate a test report .xml output. If **xml test results** are available then they will be uploaded  to the Jira issue.
+4. If **release notes** have been created then these are uploaded to the Jira issue.
\ No newline at end of file
diff --git a/content/uploads/jira_issue_comment.png b/content/uploads/jira_issue_comment.png
new file mode 100644
index 0000000..a703883
Binary files /dev/null and b/content/uploads/jira_issue_comment.png differ

commit 26708e8644b1701ddda1a5858c00186e2e7de1a6
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Mon Feb 15 16:58:08 2021 +0200

    initial commit (#258)
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>

diff --git a/content/building/github-checks.md b/content/building/github-checks.md
index 3dba3f5..2c63c5e 100644
--- a/content/building/github-checks.md
+++ b/content/building/github-checks.md
@@ -8,7 +8,7 @@ weight: 9
 Reporting to GitHub Checks is available for repositories connected via [Codemagic GitHub App](../getting-started/signup/#selected-repositories-github-app) integration.
 {{</notebox>}}
 
-If you have set up [checks](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-status-checks#checks) in GitHub, your workflow build summary will appear in the Checks tab of the pull request in GitHub. For every build on the branch to be merged, Codemagic will report the build summary along with the status and logs of individual build steps to GitHub. Failed checks will block merging the pull request.
+If you have set up [checks](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-status-checks#checks) in GitHub, your workflow build summary will appear in the Checks tab of the pull request in GitHub. For every build on the branch to be merged, Codemagic will report the build summary along with the status and logs of individual build steps to GitHub. Failed checks will block merging the pull request. In case reporting commit check failed, Codemagic attempts to report commit status.
 
 Checks can be set up in GitHub when configuring [branch protection rules](https://docs.github.com/en/github/administering-a-repository/managing-a-branch-protection-rule) for a repository. 
 

commit a770701ff8c2b5485c00ad105ab3fc3124f73764
Author: mrk-nvr <78795086+mrk-nvr@users.noreply.github.com>
Date:   Fri Feb 12 12:56:23 2021 +0200

    Update signing-ios.md (#257)

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index 3e1d020..f9d8818 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -97,9 +97,10 @@ In order to use manual code signing, [encrypt](../building/encrypting/#encryptin
 
 ```yaml
 environment:
-  FCI_CERTIFICATE: Encrypted(...)
-  FCI_CERTIFICATE_PASSWORD: Encrypted(...)
-  FCI_PROVISIONING_PROFILE: Encrypted(...)
+  vars:
+    FCI_CERTIFICATE: Encrypted(...)
+    FCI_CERTIFICATE_PASSWORD: Encrypted(...)
+    FCI_PROVISIONING_PROFILE: Encrypted(...)
 ```
 
 Then add the code signing configuration and the commands to code sign the build in the scripts section, after all the dependencies are installed, right before the build commands.

commit d32082421ab18fe530bf6994a00c9a156eb53116
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Feb 12 10:05:42 2021 +0200

    fix link

diff --git a/content/building/github-checks.md b/content/building/github-checks.md
index 0221e07..3dba3f5 100644
--- a/content/building/github-checks.md
+++ b/content/building/github-checks.md
@@ -10,7 +10,7 @@ Reporting to GitHub Checks is available for repositories connected via [Codemagi
 
 If you have set up [checks](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-status-checks#checks) in GitHub, your workflow build summary will appear in the Checks tab of the pull request in GitHub. For every build on the branch to be merged, Codemagic will report the build summary along with the status and logs of individual build steps to GitHub. Failed checks will block merging the pull request.
 
-Checks can be set up in GitHub when configuring [branch protection rules](https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/configuring-protected-branches) for a repository. 
+Checks can be set up in GitHub when configuring [branch protection rules](https://docs.github.com/en/github/administering-a-repository/managing-a-branch-protection-rule) for a repository. 
 
 1. In Github, open the **Settings** of your repository.
 2. In the left menu, click **Branches**.

commit 0695eca1f8c16364d56767f153e70be564d3d989
Author: Mart <martlaub@yahoo.com>
Date:   Tue Feb 9 12:09:11 2021 +0200

    Update logo (#254)

diff --git a/layouts/partials/codemagic-logo.html b/layouts/partials/codemagic-logo.html
index 1554bee..245fc69 100644
--- a/layouts/partials/codemagic-logo.html
+++ b/layouts/partials/codemagic-logo.html
@@ -1,119 +1,101 @@
-<svg class="cm-logo" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 564.3 116.4" style="enable-background:new 0 0 564.3 116.4;" xml:space="preserve">
+<svg class="cm-logo" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 564.3 133" xml:space="preserve">
 	<g class="cm-logo__name">
-		<path class="letter" d="M20.8,34.9c3-1.6,6.4-2.5,9.9-2.4c3,0,6,0.7,8.7,2c1.6,0.8,3,1.9,4.2,3.1c2.1,2.1,5.4,2.1,7.5,0
-			c0.8-0.8,1.4-1.9,1.5-3.1c0.2-1.6-0.4-3.2-1.5-4.4c-1.8-1.8-3.9-3.4-6.1-4.5c-4.4-2.2-9.2-3.3-14.1-3.2c-5.5-0.1-11,1.2-15.9,3.8
-			C10.4,28.6,6.6,32.3,4,36.8c-2.7,4.7-4.1,10-4,15.3c-0.1,5.4,1.3,10.7,4,15.3c2.6,4.5,6.4,8.2,11,10.6c4.9,2.6,10.3,3.9,15.9,3.8
-			c4.9,0.1,9.8-1,14.1-3.2c2.3-1.2,4.4-2.7,6.2-4.6c1.1-1.2,1.6-2.7,1.5-4.3c-0.4-2.9-3-4.9-5.9-4.6c-1.2,0.1-2.2,0.7-3,1.5
-			c-1.2,1.3-2.7,2.4-4.3,3.2c-2.7,1.4-5.6,2-8.6,2c-3.4,0.1-6.8-0.8-9.9-2.4c-2.9-1.6-5.3-4-6.9-6.9c-1.7-3.2-2.6-6.8-2.5-10.4
-			c-0.1-3.6,0.8-7.1,2.5-10.3C15.6,38.9,17.9,36.5,20.8,34.9z"></path>
-		<path class="letter" d="M184.1,0c-3.1,0-5.7,2.5-5.7,5.7c0,0,0,0,0,0v25c-2.1-2.5-4.8-4.6-7.8-5.9c-3.5-1.6-7.3-2.4-11.1-2.4
-			c-5.2-0.1-10.4,1.2-14.9,3.7c-4.4,2.4-8,6.1-10.4,10.4c-2.7,4.7-4.2,10.1-4.3,15.5c0,5.5,1.5,10.8,4.3,15.6
-			c2.4,4.4,6,8.1,10.4,10.5c4.6,2.5,9.7,3.8,14.9,3.7c4,0,7.9-0.8,11.4-2.5c3.1-1.4,5.8-3.6,7.9-6.2v2.6c0,3,2.5,5.5,5.5,5.5
-			s5.5-2.5,5.5-5.5V5.7C189.8,2.5,187.3,0,184.1,0C184.1,0,184.1,0,184.1,0z M169.5,69.4c-2.8,1.7-5.9,2.5-9.1,2.5
-			c-3.3,0-6.5-0.8-9.4-2.5c-2.8-1.7-5.1-4.1-6.6-7c-1.7-3.2-2.5-6.7-2.5-10.3c-0.1-3.6,0.8-7.1,2.5-10.3c1.5-2.9,3.8-5.2,6.6-6.8
-			c2.9-1.6,6.1-2.5,9.4-2.4c3.2,0,6.4,0.8,9.1,2.4c2.8,1.6,5.1,4,6.6,6.9c1.7,3.2,2.5,6.7,2.4,10.3c0.1,3.6-0.8,7.1-2.4,10.3
-			C174.7,65.3,172.4,67.8,169.5,69.4L169.5,69.4z"></path>
-		<path class="letter" d="M240.7,26.2c-4.5-2.6-9.7-3.9-14.9-3.8c-5.2-0.1-10.4,1.2-15,3.8c-4.4,2.5-8,6.2-10.5,10.6
-			c-2.6,4.7-3.9,9.9-3.8,15.3c-0.1,5.4,1.3,10.7,3.9,15.4c2.6,4.5,6.4,8.2,11.1,10.6c9.2,4.5,19.9,5,29.4,1.4
-			c2.3-0.9,4.5-2.2,6.4-3.8c2.2-1.7,2.5-4.9,0.8-7c0,0-0.1-0.1-0.1-0.1c-1.7-2-4.7-2.3-6.8-0.8c-3.8,2.7-8.4,4.1-13.1,4
-			c-5,0.2-9.9-1.4-13.8-4.5c-3.5-2.8-5.8-6.8-6.4-11.2l0.1-0.1H251c2,0,3.6-1.6,3.6-3.6c0,0,0,0,0,0c0.1-5.4-1.1-10.8-3.6-15.6
-			C248.6,32.4,245.1,28.7,240.7,26.2z M244.1,47.4l-0.6,0.2h-35.4l-0.1-0.1c0.5-4.2,2.5-8,5.6-10.9c7-5.9,17.3-5.9,24.3,0
-			c3.1,2.8,5.1,6.7,5.6,10.8L244.1,47.4L244.1,47.4z"></path>
-		<path class="letter" d="M333.6,22.4c-4.6-0.1-9.1,0.9-13.2,2.9c-3.5,1.6-6.5,4.2-8.8,7.3c-1.9-3.2-4.6-5.7-7.8-7.4
-			c-3.8-1.9-7.9-2.8-12.1-2.8c-4.1-0.1-8.1,0.7-11.8,2.4c-2.9,1.3-5.5,3.3-7.5,5.7v-2.1c0-3-2.5-5.5-5.5-5.5s-5.5,2.5-5.5,5.5v47.4
-			c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5V51.2c0-6,1.5-10.6,4.5-13.8s7.1-4.8,12.2-4.8c4.6,0,8.2,1.4,10.6,4s3.7,6.8,3.7,12.2
-			v26.9c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5V51.2c0-6,1.5-10.6,4.5-13.8s7.1-4.8,12.2-4.8c4.6,0,8.2,1.4,10.6,4
-			s3.7,6.8,3.7,12.2v26.9c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5v-28c0-8.3-2.2-14.7-6.5-19S340.9,22.4,333.6,22.4z"></path>
-		<path class="letter" d="M389.8,22.4c-4.5,0-8.9,0.6-13.2,1.9c-2.5,0.7-4.8,1.7-7.1,3c-2.3,1.5-2.9,4.7-1.3,6.9c1.4,2,4,2.8,6.2,1.7
-			c1.4-0.8,2.9-1.5,4.4-2c3.1-1.1,6.5-1.6,9.8-1.7c4.9,0,8.6,1.2,11.1,3.4s3.7,5.6,3.7,9.9v1.4c0,0.1-0.1,0.1-0.1,0.1h-15.8
-			c-8.1,0-14.1,1.6-17.8,4.7c-3.8,3.1-5.9,7.7-5.7,12.6c-0.1,4.9,2.1,9.6,6,12.6c3.9,3.2,9.2,4.8,15.7,4.8c4,0.1,7.9-0.6,11.6-2.2
-			c2.6-1.1,4.9-2.8,6.7-5v1.1c0,3,2.4,5.4,5.4,5.4c3,0,5.4-2.4,5.4-5.4c0,0,0,0,0,0V46.2c0-7.8-2.2-13.8-6.5-17.8
-			S397.9,22.4,389.8,22.4z M403.5,55.9v7.3c-1.2,3-3.3,5.5-6,7.2c-3,1.8-6.5,2.7-10,2.6c-3.9,0-6.9-0.8-9-2.4
-			c-2.1-1.5-3.3-3.9-3.1-6.4c0-5.6,4.1-8.4,12.7-8.4h15.4C403.5,55.8,403.5,55.8,403.5,55.9z"></path>
-		<path class="letter" d="M476.2,22.9c-3,0-5.4,2.4-5.4,5.4c0,0,0,0,0,0v2.5c-2.2-2.6-5-4.7-8.2-6.1c-3.7-1.6-7.7-2.5-11.7-2.4
-			c-5.1-0.1-10.1,1.1-14.6,3.5c-4.3,2.3-8,5.7-10.4,10c-2.6,4.5-3.9,9.5-3.8,14.7c-0.1,5.2,1.3,10.2,3.9,14.7
-			c2.5,4.2,6.1,7.7,10.4,10c4.5,2.4,9.5,3.6,14.6,3.6c3.9,0,7.7-0.7,11.3-2.2c3.1-1.3,5.9-3.3,8.1-5.8V74c0,6.3-1.6,11.1-4.7,14.1
-			s-8,4.6-14.5,4.6c-4.1,0-8.1-0.7-12-2c-1.7-0.6-3.4-1.3-5-2.1c-2.5-1.4-5.6-0.6-7.1,1.8c-0.7,1.2-1,2.6-0.6,4
-			c0.3,1.3,1.1,2.5,2.3,3.2c2.2,1.3,4.6,2.3,7.1,2.9c5.1,1.5,10.3,2.3,15.6,2.2c10,0,17.6-2.5,22.6-7.3s7.6-12.5,7.6-22.6V28.4
-			C481.6,25.4,479.2,22.9,476.2,22.9C476.2,22.9,476.2,22.9,476.2,22.9z M470.4,50.6c0.1,3.3-0.8,6.6-2.4,9.4c-1.5,2.7-3.8,5-6.6,6.5
-			c-2.9,1.6-6.1,2.4-9.4,2.3c-3.3,0.1-6.6-0.7-9.5-2.3c-2.8-1.5-5.1-3.7-6.6-6.5c-1.7-2.9-2.5-6.1-2.5-9.4c0-5.6,1.7-9.9,5.1-13.1
-			c3.7-3.5,7.9-5,13.4-5c4.9-0.2,9.6,1.6,13.1,5C468.7,40.9,470.6,45.6,470.4,50.6z"></path>
-		<path class="letter" d="M497.5,22.9c-3.1,0-5.7,2.5-5.7,5.7v0v47c0,3.1,2.5,5.7,5.7,5.7s5.7-2.5,5.7-5.7v-47
-			C503.2,25.5,500.6,22.9,497.5,22.9L497.5,22.9z"></path>
-		<path class="letter" d="M561.9,66c-2.1-1.3-4.8-1-6.5,0.7c-1.2,1.3-2.7,2.4-4.3,3.2c-2.7,1.4-5.6,2-8.6,2c-3.4,0.1-6.8-0.8-9.9-2.4
-			c-2.9-1.6-5.3-4-6.8-6.9c-1.7-3.2-2.6-6.8-2.5-10.4c-0.1-3.6,0.8-7.1,2.5-10.3c1.6-2.9,3.9-5.3,6.8-6.9c3-1.6,6.4-2.5,9.9-2.4
-			c3,0,6,0.7,8.6,2c1.6,0.8,3,1.9,4.2,3.1c2.1,2.1,5.4,2.1,7.5,0c0.8-0.8,1.4-1.9,1.5-3.1c0.2-1.6-0.4-3.2-1.5-4.4
-			c-1.8-1.8-3.9-3.4-6.1-4.5c-4.4-2.2-9.2-3.3-14.1-3.2c-5.5-0.1-11,1.2-15.9,3.8c-4.6,2.4-8.3,6.1-11,10.6c-2.7,4.7-4.1,10-4,15.3
-			c-0.1,5.4,1.3,10.7,4,15.3c2.6,4.5,6.4,8.1,11,10.6c4.9,2.6,10.3,3.9,15.9,3.8c4.9,0.1,9.8-1,14.1-3.2c2.3-1.2,4.4-2.7,6.2-4.6
-			c1.1-1.1,1.6-2.7,1.5-4.3C564.1,68.2,563.2,66.8,561.9,66z"></path>
+		<path class="letter" d="M20.7,34.9c3.1-1.6,6.5-2.4,10-2.4c3-0.1,6,0.5,8.7,1.8l4.2,3.1c1.7,1.8,4.5,2.1,6.6,0.8c1.4-0.8,2.3-2.3,2.4-3.9
+			c0.3-1.5-0.2-3.1-1.3-4.2c-1.8-1.9-3.9-3.4-6.3-4.5c-4.3-2.4-9.2-3.6-14.2-3.4c-5.5-0.1-10.9,1.3-15.7,3.9c-4.6,2.3-8.4,6-11,10.5
+			c-2.7,4.7-4,10.1-3.9,15.5c-0.1,5.3,1.3,10.6,3.9,15.2c2.6,4.5,6.4,8.2,11,10.8c4.9,2.4,10.3,3.7,15.7,3.7c4.9,0.1,9.8-1,14.2-3.1
+			c2.3-1.3,4.4-2.9,6.3-4.7c1.1-1.1,1.6-2.7,1.3-4.2c-0.1-1.6-1-3.1-2.4-3.9c-2.1-1.2-4.8-0.9-6.6,0.8C42.4,68,41,69,39.4,69.8
+			c-2.7,1.4-5.6,2.1-8.7,2.1c-3.5,0.1-6.9-0.8-10-2.4c-2.9-1.7-5.3-4.1-6.8-7.1c-1.6-3.2-2.5-6.7-2.4-10.2c-0.1-3.6,0.7-7.2,2.4-10.5
+			C15.6,38.9,17.9,36.5,20.7,34.9z"/>
+		<path class="letter" d="M184.1,0c-3.2,0-5.8,2.6-5.8,5.8v24.9c-2.1-2.6-4.8-4.6-7.9-6c-3.5-1.6-7.2-2.4-11-2.4c-5.2-0.1-10.4,1.3-15,3.9
+			c-4.4,2.4-8,6-10.2,10.5c-2.9,4.7-4.4,10-4.5,15.5c0.1,5.5,1.6,10.8,4.5,15.5c2.3,4.5,5.8,8.1,10.2,10.5c4.6,2.6,9.7,3.8,15,3.7
+			c4,0,7.9-0.8,11.5-2.4c3-1.6,5.6-3.8,7.9-6.3v2.6c0,3,2.5,5.5,5.5,5.5l0,0c3-0.1,5.4-2.5,5.5-5.5v-70C189.9,2.6,187.3,0,184.1,0
+			L184.1,0z M169.5,69.2c-2.7,1.8-5.9,2.7-9.2,2.6c-3.3,0-6.6-0.9-9.4-2.6c-2.7-1.7-5-4-6.6-6.8c-1.6-3.2-2.4-6.7-2.4-10.2
+			c-0.1-3.6,0.7-7.2,2.4-10.5c1.6-2.8,3.9-5.1,6.6-6.8c2.9-1.5,6.1-2.4,9.4-2.4c3.2,0,6.4,0.8,9.2,2.4c2.8,1.6,5.1,4,6.6,6.8
+			c1.7,3.2,2.6,6.8,2.6,10.5c0,3.6-0.9,7.1-2.6,10.2C174.6,65.4,172.3,67.7,169.5,69.2z"/>
+		<path class="letter" d="M240.8,26.2c-9.3-5.2-20.6-5.2-29.9,0c-4.5,2.4-8.1,6-10.5,10.5c-2.6,4.7-4,10.1-3.9,15.5c-0.1,5.3,1.3,10.6,3.9,15.2
+			c2.6,4.6,6.4,8.3,11,10.8c5.2,2.4,10.8,3.7,16.5,3.7c4.5,0.1,8.9-0.8,13.1-2.4c2.3-0.9,4.4-2.1,6.3-3.7c1.1-0.8,1.8-2.1,2.1-3.4
+			c0-1.4-0.5-2.8-1.3-3.9c-1.8-1.8-4.7-2.1-6.8-0.5c-3.8,2.7-8.4,4.1-13.1,3.9c-5,0.1-9.9-1.4-13.9-4.5c-3.4-2.9-5.7-6.9-6.3-11.3h43
+			c2,0,3.7-1.6,3.7-3.7l0,0c0-5.5-1.2-10.9-3.7-15.7C248.7,32.3,245.1,28.7,240.8,26.2z M244.2,47.5H208c0.6-4.2,2.7-8.1,5.8-11
+			c3.3-2.9,7.7-4.4,12.1-4.2c4.5-0.2,8.8,1.4,12.1,4.5c3.2,2.8,5.2,6.6,5.8,10.8L244.2,47.5L244.2,47.5z"/>
+		<path class="letter" d="M333.7,22.3c-4.6,0-9.2,0.9-13.4,2.9c-3.5,1.6-6.5,4.2-8.7,7.3c-1.8-3.2-4.6-5.8-7.9-7.3c-3.7-1.9-7.9-2.9-12.1-2.9
+			c-4.1-0.1-8.1,0.7-11.8,2.4c-2.9,1.4-5.5,3.4-7.6,5.8v-2.1c0-3-2.5-5.5-5.5-5.5c-3,0.1-5.4,2.5-5.5,5.5v47.5c0.1,3,2.5,5.4,5.5,5.5
+			h0.5c3-0.1,5.4-2.5,5.5-5.5V51.1c-0.3-4.9,1.3-9.8,4.5-13.6c3.2-3.2,7.6-5,12.1-4.7c4-0.3,7.9,1.1,10.8,3.9c2.7,3.5,4,7.9,3.7,12.3
+			v26.8c0,3,2.5,5.5,5.5,5.5h0.5c2.9-0.1,5.2-2.6,5.2-5.5V51.1c-0.3-5,1.4-9.9,4.7-13.6c3.2-3.2,7.6-5,12.1-4.7
+			c4-0.3,7.9,1.2,10.8,3.9c2.7,3.5,4,7.9,3.7,12.3v26.8c0,3,2.5,5.5,5.5,5.5l0,0h0.3c3,0,5.5-2.5,5.5-5.5l0,0V47.7
+			c0-8.4-2.1-14.7-6.6-18.9C346.3,24.4,340.1,22,333.7,22.3z"/>
+		<path class="letter" d="M389.8,22.3c-7,0.1-13.9,1.8-20.2,5c-2.4,1.4-3.2,4.4-1.8,6.8l0,0c1.2,2.3,4.1,3.2,6.4,1.9c0.1,0,0.1-0.1,0.2-0.1l4.5-1.8
+			c3.2-1.1,6.6-1.8,10-1.8c4-0.3,8,1.1,11,3.7c2.7,2.5,4,6.1,3.7,9.7v1.6h-15.7c-8.1,0-14.2,1.6-17.8,4.7c-3.8,3-6,7.7-5.8,12.6
+			c-0.2,4.9,2,9.7,6,12.6c4.5,3.3,10.1,5,15.7,4.7c4,0.2,7.9-0.6,11.5-2.1c2.6-1,4.9-2.8,6.6-5v1c0,3,2.5,5.5,5.5,5.5
+			s5.5-2.5,5.5-5.5l0,0V46.2c0.4-6.6-2-13.1-6.6-17.8C404.2,24.4,397.9,22.3,389.8,22.3z M403.4,55.9v7.3c-1,3.1-3.2,5.6-6,7.1
+			c-3,1.9-6.5,2.8-10,2.6c-3.1,0.2-6.3-0.7-8.9-2.4c-2.1-1.5-3.3-4-3.1-6.6c0-5.5,4.2-8.1,12.6-8.1L403.4,55.9L403.4,55.9z"/>
+		<path class="letter" d="M476.1,22.8c-2.9,0.1-5.2,2.6-5.2,5.5V31c-2.2-2.7-5.1-4.8-8.4-6c-3.6-1.8-7.5-2.7-11.5-2.6c-5.1,0-10.2,1.3-14.7,3.7
+			c-4.3,2.3-8,5.8-10.5,10c-2.5,4.5-3.7,9.6-3.7,14.7c-0.1,5.1,1.2,10.2,3.7,14.7c2.6,4.2,6.2,7.6,10.5,10c4.5,2.5,9.6,3.8,14.7,3.7
+			c3.9,0,7.7-0.8,11.3-2.4c3.1-1.3,5.8-3.3,8.1-5.8v3c0,6.3-1.6,11.3-4.7,14.2s-8.1,4.7-14.7,4.7c-4,0-8-0.7-11.8-2.1
+			c-1.8-0.5-3.4-1.2-5-2.1c-2.5-1.4-5.6-0.6-7.1,1.8c-1.6,2.4-0.9,5.7,1.5,7.3c0,0,0.1,0,0.1,0.1c2.2,1.2,4.6,2.2,7.1,2.9
+			c5.1,1.4,10.4,2.1,15.7,2.1c10,0,17.6-2.4,22.6-7.3c5-5,7.6-12.3,7.6-22.6V28.3C481.6,25.3,479.1,22.8,476.1,22.8L476.1,22.8z
+			M470.3,50.6c0,3.3-0.8,6.5-2.4,9.4c-1.6,2.7-3.8,4.8-6.6,6.3c-2.8,1.7-6.1,2.5-9.4,2.4c-3.3,0.1-6.6-0.7-9.4-2.4
+			c-2.7-1.5-5-3.6-6.6-6.3c-1.6-2.9-2.4-6.1-2.4-9.4c-0.3-4.9,1.5-9.7,5-13.1c3.6-3.4,8.4-5.2,13.4-5c4.9-0.2,9.6,1.6,13.1,5
+			C468.7,40.9,470.6,45.7,470.3,50.6z"/>
+		<path class="letter" d="M497.6,22.8c-3.2,0-5.8,2.6-5.8,5.8v47c0,3.2,2.6,5.8,5.8,5.8c3,0,5.5-2.5,5.5-5.5c0-0.1,0-0.2,0-0.3v-47
+			c0.1-3-2.2-5.6-5.2-5.8C497.8,22.8,497.7,22.8,497.6,22.8z"/>
+		<path class="letter" d="M561.9,65.8c-2.1-1.2-4.8-0.9-6.6,0.8c-1.2,1.3-2.6,2.3-4.2,3.1c-2.7,1.4-5.6,2.1-8.7,2.1c-3.5,0.1-6.9-0.8-10-2.4
+			c-2.9-1.7-5.3-4.1-6.8-7.1c-1.6-3.2-2.5-6.7-2.4-10.2c-0.1-3.6,0.7-7.2,2.4-10.5c1.6-2.8,4-5.2,6.8-6.8c3.1-1.6,6.5-2.4,10-2.4
+			c3-0.1,6,0.5,8.7,1.8l4.2,3.1c1.7,1.8,4.5,2.1,6.6,0.8c1.4-0.8,2.3-2.3,2.4-3.9c0.3-1.5-0.2-3.1-1.3-4.2c-1.8-1.9-3.9-3.4-6.3-4.5
+			c-4.3-2.4-9.2-3.6-14.2-3.4c-5.5-0.1-10.9,1.3-15.7,3.9c-4.6,2.3-8.4,6-11,10.5c-2.7,4.7-4,10.1-3.9,15.5
+			c-0.1,5.3,1.3,10.6,3.9,15.2c2.6,4.5,6.4,8.2,11,10.8c4.9,2.4,10.3,3.7,15.7,3.7c4.9,0.1,9.8-1,14.2-3.1c2.3-1.3,4.4-2.9,6.3-4.7
+			c1.1-1.1,1.6-2.7,1.3-4.2C564.1,68.2,563.2,66.7,561.9,65.8z"/>
 	</g>
 	<g class="cm-logo__star">
-		<path class="base" d="M121.7,46.8l-16.6-8.1c-0.2-0.1-0.3-0.3-0.4-0.5l-8.2-16.6c-1.4-2.9-5-4.1-7.9-2.7
-			c-1.2,0.6-2.1,1.5-2.7,2.7l-8.2,16.6c-0.1,0.2-0.3,0.4-0.4,0.5l-16.6,8.2c-2.9,1.4-4.1,5-2.7,7.9c0.6,1.2,1.5,2.1,2.7,2.7l16.6,8.1
-			c0.2,0.1,0.3,0.3,0.4,0.4L86,82.6c1.4,2.9,5,4.1,7.9,2.7c1.2-0.6,2.1-1.5,2.7-2.7l8.1-16.6c0.1-0.2,0.3-0.4,0.4-0.4l16.6-8.2
-			c2.9-1.4,4.1-5,2.7-7.9C123.9,48.3,122.9,47.4,121.7,46.8z M109.4,48l-7.7,6.7c-1.5,1.4-2.6,3.2-3,5.2l-2,10
-			c-0.1,0.4-0.5,0.7-0.9,0.6c-0.2,0-0.3-0.1-0.4-0.3l-6.7-7.7c-1.4-1.5-3.2-2.6-5.2-3l-10-2c-0.4-0.1-0.7-0.5-0.6-0.9
-			c0-0.2,0.1-0.3,0.3-0.4l7.7-6.7c1.5-1.4,2.6-3.2,3-5.2l2-10c0.1-0.4,0.5-0.7,0.9-0.6c0.1,0,0.3,0.1,0.4,0.2l6.7,7.7
-			c1.4,1.5,3.2,2.6,5.2,3l10,2c0.4,0.1,0.7,0.5,0.6,0.9C109.6,47.8,109.5,47.9,109.4,48z"></path>
-		<path class="gradient" d="M121.7,46.8l-16.6-8.1c-0.2-0.1-0.3-0.3-0.4-0.5l-8.2-16.6c-1.4-2.9-5-4.1-7.9-2.7
-			c-1.2,0.6-2.1,1.5-2.7,2.7l-8.2,16.6c-0.1,0.2-0.3,0.4-0.4,0.5l-16.6,8.2c-2.9,1.4-4.1,5-2.7,7.9c0.6,1.2,1.5,2.1,2.7,2.7l16.6,8.1
-			c0.2,0.1,0.3,0.3,0.4,0.4L86,82.6c1.4,2.9,5,4.1,7.9,2.7c1.2-0.6,2.1-1.5,2.7-2.7l8.1-16.6c0.1-0.2,0.3-0.4,0.4-0.4l16.6-8.2
-			c2.9-1.4,4.1-5,2.7-7.9C123.9,48.3,122.9,47.4,121.7,46.8z M109.4,48l-7.7,6.7c-1.5,1.4-2.6,3.2-3,5.2l-2,10
-			c-0.1,0.4-0.5,0.7-0.9,0.6c-0.2,0-0.3-0.1-0.4-0.3l-6.7-7.7c-1.4-1.5-3.2-2.6-5.2-3l-10-2c-0.4-0.1-0.7-0.5-0.6-0.9
-			c0-0.2,0.1-0.3,0.3-0.4l7.7-6.7c1.5-1.4,2.6-3.2,3-5.2l2-10c0.1-0.4,0.5-0.7,0.9-0.6c0.1,0,0.3,0.1,0.4,0.2l6.7,7.7
-			c1.4,1.5,3.2,2.6,5.2,3l10,2c0.4,0.1,0.7,0.5,0.6,0.9C109.6,47.8,109.5,47.9,109.4,48z"></path>
+		<path class="base" d="M122.2,46.4l-17.3-8.7c-0.3,0-0.5-0.2-0.5-0.5l0,0l-8.7-17.3c-1-2.2-3.1-3.5-5.5-3.4c-2.3,0-4.5,1.3-5.5,3.4
+			L76,37.5h-0.3l-17.6,8.7c-3,1.7-4.1,5.5-2.5,8.6c0.6,1,1.4,1.9,2.5,2.5L75.7,66h0.5l8.4,18.1c1.1,2.1,3.2,3.4,5.5,3.4
+			s4.5-1.3,5.5-3.4l8.7-17.6h0.5l17.3-8.7c3.1-1.5,4.4-5.3,2.8-8.4C124.5,48,123.5,47,122.2,46.4z M109.4,47.5l-8.1,7.1
+			c-1.5,1.5-2.6,3.4-3.1,5.5L96,70.6c0,0.5-1,0.8-1.3,0.3L87.6,63c-1.4-1.7-3.4-2.8-5.5-3.1l-10.5-2.1c-0.5-0.3-0.7-0.9-0.4-1.4
+			l0.1-0.1l7.9-6.8c1.7-1.4,2.8-3.3,3.1-5.5l2.1-10.5c0.3-0.5,0.9-0.7,1.4-0.4l0.1,0.1l6.8,7.9c1.4,1.6,3.4,2.7,5.5,3.1l10.5,2.1
+			c0.4,0,0.8,0.4,0.7,0.8C109.6,47.2,109.5,47.3,109.4,47.5z"/>
+		<path class="gradient" d="M122.2,46.4l-17.3-8.7c-0.3,0-0.5-0.2-0.5-0.5l0,0l-8.7-17.3c-1-2.2-3.1-3.5-5.5-3.4c-2.3,0-4.5,1.3-5.5,3.4
+			L76,37.5h-0.3l-17.6,8.7c-3,1.7-4.1,5.5-2.5,8.6c0.6,1,1.4,1.9,2.5,2.5L75.7,66h0.5l8.4,18.1c1.1,2.1,3.2,3.4,5.5,3.4
+			s4.5-1.3,5.5-3.4l8.7-17.6h0.5l17.3-8.7c3.1-1.5,4.4-5.3,2.8-8.4C124.5,48,123.5,47,122.2,46.4z M109.4,47.5l-8.1,7.1
+			c-1.5,1.5-2.6,3.4-3.1,5.5L96,70.6c0,0.5-1,0.8-1.3,0.3L87.6,63c-1.4-1.7-3.4-2.8-5.5-3.1l-10.5-2.1c-0.5-0.3-0.7-0.9-0.4-1.4
+			l0.1-0.1l7.9-6.8c1.7-1.4,2.8-3.3,3.1-5.5l2.1-10.5c0.3-0.5,0.9-0.7,1.4-0.4l0.1,0.1l6.8,7.9c1.4,1.6,3.4,2.7,5.5,3.1l10.5,2.1
+			c0.4,0,0.8,0.4,0.7,0.8C109.6,47.2,109.5,47.3,109.4,47.5z"/>
 	</g>
 	<g class="cm-logo__slogan">
-		<path class="letter" d="M10.5,95.2h2.6v6.2c0.9-1.2,2.3-1.9,3.8-1.9c3,0,5.3,2.4,5.3,6.2s-2.2,6.2-5.3,6.2c-1.5,0-2.9-0.7-3.8-1.9v1.6
-			h-2.6V95.2z M16.1,109.6c2.1,0,3.4-1.6,3.4-3.9s-1.3-4-3.4-4c-1.2,0-2.3,0.6-3,1.6v4.8C13.8,109,14.9,109.5,16.1,109.6z"></path>
-		<path class="letter" d="M25.6,114.1c0.7,0.1,1.4-0.3,1.7-1l0.6-1.3l-4.9-12h2.8l3.5,8.9l3.5-8.9h2.8l-5.7,14c-0.6,1.7-2.3,2.8-4.1,2.7
-			c-0.5,0-1-0.1-1.5-0.2l0.4-2.3C25,114,25.3,114.1,25.6,114.1z"></path>
-		<path class="letter" d="M46.4,99.6v12h-2.9V95.2h3l8.4,11.6V95.2h2.9v16.4H55L46.4,99.6z"></path>
-		<path class="letter" d="M66.4,99.4c3.6,0,5.8,2.7,5.8,6.5v0.6h-9.2c0.2,1.9,1.8,3.4,3.8,3.3c1.2,0,2.4-0.5,3.4-1.3l1.2,1.7
-			c-1.3,1.2-3.1,1.8-4.8,1.7c-3.4,0.1-6.3-2.7-6.3-6.1C60.3,102.3,63,99.4,66.4,99.4z M63.1,104.6h6.7c0-1.8-1.5-3.2-3.2-3.1
-			c0,0-0.1,0-0.1,0C64.7,101.5,63.2,102.9,63.1,104.6z"></path>
-		<path class="letter" d="M73.1,99.7h2.8l3.5,8.9l3.5-8.9h2.8l-4.8,11.9H78L73.1,99.7z"></path>
-		<path class="letter" d="M92.5,99.4c3.6,0,5.8,2.7,5.8,6.5v0.6h-9.2c0.2,1.9,1.9,3.4,3.8,3.3c1.2,0,2.4-0.5,3.4-1.3l1.2,1.7
-			c-1.3,1.2-3.1,1.8-4.8,1.7c-3.4,0.1-6.3-2.7-6.3-6.1C86.4,102.3,89.1,99.4,92.5,99.4L92.5,99.4L92.5,99.4z M89.2,104.6h6.7
-			c0-1.8-1.4-3.2-3.2-3.1c0,0-0.1,0-0.1,0C90.7,101.5,89.2,102.9,89.2,104.6z"></path>
-		<path class="letter" d="M100.9,99.7h2.6v1.7c0.9-1.2,2.3-1.9,3.9-2v2.6c-0.3-0.1-0.5-0.1-0.8-0.1c-1.2,0.1-2.3,0.6-3,1.6v8.1H101
-			L100.9,99.7z"></path>
-		<path class="letter" d="M114.9,99.4c1.8,0,3.5,0.7,4.5,2.1l-1.7,1.6c-0.6-0.9-1.6-1.4-2.7-1.4c-2.2,0-3.6,1.6-3.6,3.9s1.4,4,3.6,4
-			c1.1,0,2.1-0.5,2.7-1.4l1.7,1.6c-1.1,1.4-2.8,2.2-4.5,2.1c-3.4,0-6.2-2.8-6.2-6.2C108.6,102.2,111.4,99.4,114.9,99.4L114.9,99.4z"></path>
-		<path class="letter" d="M120.9,105.6c0.1-3.4,2.9-6.1,6.2-6s6.1,2.9,6,6.2c-0.1,3.3-2.8,6-6.1,6c-3.3,0.1-6-2.5-6.1-5.8
-			C120.9,105.9,120.9,105.8,120.9,105.6z M130.5,105.6c0-2.1-1.2-3.9-3.4-3.9s-3.4,1.8-3.4,3.9s1.2,4,3.4,4
-			C129.2,109.6,130.5,107.7,130.5,105.6z"></path>
-		<path class="letter" d="M144.1,109.9c-0.9,1.2-2.3,1.9-3.8,1.9c-3.1,0-5.3-2.3-5.3-6.2s2.2-6.2,5.3-6.2c1.5,0,2.9,0.7,3.8,1.9v-6.2
-			h2.6v16.4h-2.6V109.9z M144.1,103.3c-0.7-1-1.9-1.6-3.1-1.6c-2,0-3.3,1.6-3.3,4s1.3,3.9,3.3,3.9c1.2,0,2.4-0.6,3.1-1.6V103.3z"></path>
-		<path class="letter" d="M161.2,105.8c0-3.7-2.3-6.5-5.8-6.5h0c-3.4,0.1-6.2,2.9-6.1,6.3c0.1,3.4,2.9,6.2,6.3,6.1
-			c1.8,0.1,3.5-0.6,4.8-1.7l-1.2-1.7c-0.9,0.8-2.1,1.3-3.4,1.3c-1.9,0.1-3.6-1.3-3.8-3.3h9.2V105.8z M152,104.6
-			c0.1-1.8,1.6-3.2,3.4-3.1c0,0,0.1,0,0.1,0c1.8,0,3.2,1.4,3.2,3.1H152z"></path>
+		<path class="letter" d="M28.1,106.4c1.4,0.9,2.5,2.2,3.3,3.8c0.8,1.6,1.2,3.4,1.2,5.5c0,2-0.4,3.9-1.2,5.5s-1.9,2.9-3.3,3.8s-3,1.4-4.8,1.4
+			c-1.5,0-2.8-0.3-4.1-1c-1.2-0.6-2.2-1.6-3-2.7v3.2h-4.8V98.4h4.8v10.4c0.8-1.2,1.8-2.1,3-2.7s2.6-1,4.1-1
+			C25.1,105.1,26.7,105.5,28.1,106.4z M26.2,120.4c1.1-1.2,1.7-2.8,1.7-4.7c0-1.9-0.6-3.5-1.7-4.7s-2.5-1.8-4.2-1.8
+			s-3.1,0.6-4.1,1.8c-1.1,1.2-1.6,2.8-1.6,4.7c0,1.9,0.5,3.5,1.6,4.7s2.5,1.8,4.1,1.8C23.7,122.3,25.1,121.7,26.2,120.4z"/>
+		<path class="letter" d="M36.2,132.7c-0.8-0.2-1.5-0.4-2.1-0.8l1-3.5c0.9,0.5,1.8,0.7,2.6,0.7c1.2,0,2.1-0.4,2.6-1.3l0.9-1.8l-8.6-20.5h5.1
+			l5.9,15.2l5.6-15.2h5l-8.6,21.8c-1.5,3.7-3.8,5.6-7,5.7C37.8,133,37,132.9,36.2,132.7z"/>
+		<path class="letter" d="M69.6,98.9h4.9l14.3,19v-19h4.9v27h-4.9l-14.3-19v19h-4.9V98.9z"/>
+		<path class="letter" d="M110.5,121.5c1-0.4,1.8-0.9,2.4-1.5l3,3.1c-0.9,0.9-2.1,1.7-3.7,2.3c-1.6,0.6-3.1,0.9-4.6,0.9c-1.9,0-3.7-0.5-5.3-1.4
+			c-1.6-0.9-2.9-2.2-3.9-3.8c-1-1.6-1.4-3.5-1.4-5.5s0.5-3.8,1.4-5.4s2.2-2.9,3.7-3.8c1.6-0.9,3.3-1.4,5.2-1.4
+			c2.1,0,3.9,0.5,5.4,1.5s2.6,2.4,3.4,4.3c0.8,1.8,1.2,4,1.2,6.5H102c0.3,1.4,0.9,2.6,1.9,3.4c1,0.9,2.2,1.3,3.7,1.3
+			C108.5,122.1,109.5,121.9,110.5,121.5z M104,110.5c-1,0.8-1.7,1.8-2,3.2h10.7c-0.3-1.3-0.9-2.4-1.8-3.2c-0.9-0.8-2-1.2-3.4-1.2
+			C106.2,109.3,105.1,109.7,104,110.5z"/>
+		<path class="letter" d="M117.7,105.6h5.1l5.9,14.8l5.8-14.8h5.1l-8.6,20.3h-4.5L117.7,105.6z"/>
+		<path class="letter" d="M154.6,121.5c1-0.4,1.8-0.9,2.4-1.5l3,3.1c-0.9,0.9-2.1,1.7-3.7,2.3c-1.6,0.6-3.1,0.9-4.6,0.9c-1.9,0-3.7-0.5-5.3-1.4
+			s-2.9-2.2-3.9-3.8c-1-1.6-1.4-3.5-1.4-5.5s0.5-3.8,1.4-5.4s2.2-2.9,3.7-3.8c1.6-0.9,3.3-1.4,5.2-1.4c2.1,0,3.9,0.5,5.4,1.5
+			s2.6,2.4,3.4,4.3c0.8,1.8,1.2,4,1.2,6.5H146c0.3,1.4,0.9,2.6,1.9,3.4c1,0.9,2.2,1.3,3.7,1.3C152.6,122.1,153.6,121.9,154.6,121.5z
+				M148.1,110.5c-1,0.8-1.7,1.8-2,3.2h10.7c-0.3-1.3-0.9-2.4-1.8-3.2c-0.9-0.8-2-1.2-3.4-1.2C150.3,109.3,149.1,109.7,148.1,110.5z"
+			/>
+		<path class="letter" d="M172.6,106.3c1.3-0.8,2.7-1.2,4.4-1.2v4.1c-2.2,0-3.9,0.6-5.3,1.8c-1.3,1.2-2,2.7-2,4.7V126h-4.8v-20.3h4.8v3.9
+			C170.3,108.1,171.3,107.1,172.6,106.3z"/>
+		<path class="letter" d="M183.6,124.9c-1.7-1-3-2.3-4-3.9s-1.5-3.4-1.5-5.3s0.5-3.6,1.5-5.3s2.3-2.9,4-3.9s3.5-1.5,5.4-1.5c1.5,0,2.9,0.3,4.2,0.9
+			s2.5,1.4,3.5,2.4l-3.2,2.8c-0.6-0.6-1.2-1.1-2-1.5s-1.6-0.6-2.5-0.6c-1.1,0-2.1,0.3-3.1,0.9c-0.9,0.6-1.7,1.4-2.2,2.4
+			c-0.6,1-0.8,2.1-0.8,3.2c0,1.2,0.3,2.3,0.8,3.3c0.6,1,1.3,1.8,2.2,2.4s2,0.9,3.1,0.9c0.9,0,1.7-0.2,2.5-0.6s1.5-0.9,2.1-1.6
+			l3.2,2.8c-1,1.1-2.2,1.9-3.5,2.5s-2.8,0.9-4.4,0.9C187.1,126.4,185.3,125.9,183.6,124.9z"/>
+		<path class="letter" d="M204.6,124.9c-1.7-1-3-2.3-4-3.9s-1.5-3.4-1.5-5.3s0.5-3.6,1.5-5.3s2.3-2.9,4-3.9s3.5-1.5,5.4-1.5s3.7,0.5,5.4,1.5
+			s3,2.3,4,3.9s1.5,3.4,1.5,5.3s-0.5,3.7-1.5,5.3c-1,1.6-2.3,2.9-4,3.9s-3.5,1.5-5.4,1.5S206.3,125.9,204.6,124.9z M213.1,121.4
+			c0.9-0.6,1.7-1.4,2.3-2.4s0.8-2.1,0.8-3.3c0-1.2-0.3-2.2-0.8-3.2c-0.6-1-1.3-1.8-2.3-2.4c-0.9-0.6-2-0.9-3.1-0.9s-2.1,0.3-3.1,0.9
+			s-1.7,1.4-2.3,2.4s-0.8,2.1-0.8,3.2c0,1.2,0.3,2.3,0.8,3.3c0.6,1,1.3,1.8,2.3,2.4s2,0.9,3.1,0.9S212.2,122,213.1,121.4z"/>
+		<path class="letter" d="M245.4,98.4v27.5h-4.8v-3.1c-0.8,1.2-1.8,2-3,2.7c-1.2,0.6-2.5,0.9-4,0.9c-1.8,0-3.4-0.5-4.8-1.4c-1.4-0.9-2.5-2.2-3.3-3.8
+			c-0.8-1.6-1.2-3.5-1.2-5.5s0.4-3.9,1.2-5.5s1.9-2.9,3.3-3.8c1.4-0.9,3-1.4,4.8-1.4c1.5,0,2.8,0.3,4,0.9s2.2,1.5,3,2.7V98.4H245.4z
+			M239,120.4c1.1-1.2,1.6-2.8,1.6-4.7c0-1.9-0.5-3.5-1.6-4.7s-2.5-1.8-4.1-1.8c-1.7,0-3.1,0.6-4.2,1.8c-1.1,1.2-1.7,2.8-1.7,4.7
+			c0,1.9,0.6,3.5,1.7,4.7s2.5,1.8,4.2,1.8C236.5,122.3,237.9,121.7,239,120.4z"/>
+		<path class="letter" d="M263.2,121.5c1-0.4,1.8-0.9,2.4-1.5l3,3.1c-0.9,0.9-2.1,1.7-3.7,2.3c-1.6,0.6-3.1,0.9-4.6,0.9c-1.9,0-3.7-0.5-5.3-1.4
+			c-1.6-0.9-2.9-2.2-3.9-3.8c-1-1.6-1.4-3.5-1.4-5.5s0.5-3.8,1.4-5.4s2.2-2.9,3.7-3.8c1.6-0.9,3.3-1.4,5.2-1.4c2.1,0,3.9,0.5,5.4,1.5
+			s2.6,2.4,3.4,4.3c0.8,1.8,1.2,4,1.2,6.5h-15.3c0.3,1.4,0.9,2.6,1.9,3.4c1,0.9,2.2,1.3,3.7,1.3C261.2,122.1,262.2,121.9,263.2,121.5
+			z M256.7,110.5c-1,0.8-1.7,1.8-2,3.2h10.7c-0.3-1.3-0.9-2.4-1.8-3.2c-0.9-0.8-2-1.2-3.4-1.2C258.9,109.3,257.7,109.7,256.7,110.5z"
+			/>
 	</g>
-</svg>
-<svg id="vector-styles" style="height: 0; position: absolute">
-	<defs>
-		<linearGradient
-			id="cm_logo_star"
-			gradientUnits="userSpaceOnUse"
-			x1="57.4512"
-			y1="65.8962"
-			x2="125.0438"
-			y2="65.8962"
-			gradientTransform="matrix(1 0 0 -1 0 118)"
-		>
-			<stop offset="0" style="stop-color:#EC0C43"></stop>
-			<stop offset="1" style="stop-color:#FBB03B"></stop>
-		</linearGradient>
-		</defs>
-		<filter id="dropshadow" height="150%">
-			<feGaussianBlur in="SourceAlpha" stdDeviation="5"/>
-			<feOffset dx="0" dy="4" result="offsetblur"/>
-			<feComponentTransfer>
-				<feFuncA type="linear" slope="0.1"/>
-			</feComponentTransfer>
-			<feMerge> 
-				<feMergeNode/>
-				<feMergeNode in="SourceGraphic"/>
-			</feMerge>
-		</filter>
-	</svg>
\ No newline at end of file
+</svg>
\ No newline at end of file

commit 96c34a0c3ff08a7a32a0cc0879aa229aeef6b223
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Fri Feb 5 12:56:41 2021 +0200

    add google play track env var (#253)
    
    * track
    
    * Update distribution.md
    
    Editing
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 92e2033..59e1d9a 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -70,7 +70,7 @@ publishing:
 
 ### Google Play
 
-Codemagic enables you to automatically publish your app to the `internal`, `alpha`, `beta` and `production` tracks on Google Play. In order to do so, you will need to set up a service account in Google Play Console and add the `JSON` key file to your Codemagic configuration file, see how to [set up a service account](../knowledge-base/google-play-api/).
+Codemagic enables you to automatically publish your app to the `internal`, `alpha`, `beta` and `production` tracks on Google Play. In order to do so, you will need to set up a service account in Google Play Console and add the `JSON` key file to your Codemagic configuration file, see how to [set up a service account](../knowledge-base/google-play-api/). The proper way to add your keys to `codemagic.yaml` is to [encrypt](../building/encrypting) the contents of the key file and add the encrypted value into the configuration file.
 
 If your application supports [in-app updates](https://developer.android.com/guide/playcore/in-app-updates) Codemagic allows setting the update priority. Otherwise, `in_app_update_priority` can be omitted or set to `0`.
 
@@ -86,7 +86,7 @@ publishing:
 ```
 
 {{<notebox>}}
-The proper way to add your keys in `codemagic.yaml` is to copy the contents of the key file and [encrypt](../building/encrypting) it. Then add the encrypted value into the configuration file.
+You can override the publishing track specified in the configuration file using the environment variable `GOOGLE_PLAY_TRACK`. This is useful if you're starting your builds via [Codemagic API](../rest-api/overview/) and want to build different configurations without editing the configuration file.
 {{</notebox>}}
 
 ### App Store Connect

commit baf62b117e6f64164bb3d19d08be650047499d0a
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Feb 5 12:21:25 2021 +0200

    add status filter to builds page

diff --git a/content/publishing-yaml/public-dashboards.md b/content/publishing-yaml/public-dashboards.md
index 7a61acc..760dd7e 100644
--- a/content/publishing-yaml/public-dashboards.md
+++ b/content/publishing-yaml/public-dashboards.md
@@ -21,7 +21,7 @@ Public dashboards can be disabled anytime by clicking **Disable sharing**.
 
 ## Creating and sharing a build dashboard
 
-Open the **Builds** page via the navigation bar and use the **team**, **application**, **workflow** and **branch** filters on the left sidebar to create a build dashboard. Then click **Share dashboard** at the top of the page to generate a public link to it. A popup with the generated link will appear and you can copy the link to clipboard. The generated link will be also saved to the **Public dashboards** section in team settings.
+Open the **Builds** page via the navigation bar and use the **team**, **application**, **workflow**, **branch** and **status** filters on the left sidebar to create a build dashboard. Then click **Share dashboard** at the top of the page to generate a public link to it. A popup with the generated link will appear and you can copy the link to clipboard. The generated link will be also saved to the **Public dashboards** section in team settings.
 
 {{<notebox>}}
 Please note that anyone with the public link can access the build dashboard and download build artifacts.

commit 792c9de705084ec37386299bbf542f1fdeffd47d
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Wed Feb 3 15:25:35 2021 +0200

    Update readme.md (#252)
    
    * Update readme.md

diff --git a/readme.md b/readme.md
index 59b55c2..0fb9f08 100644
--- a/readme.md
+++ b/readme.md
@@ -19,12 +19,14 @@ Please follow the format of existing issues for consistency.
 
 ## Development
 
-Development requires [Hugo static site generator](https://gohugo.io) v077.0 from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew for Linux and macOS users.
-
+Development requires [Hugo static site generator](https://gohugo.io). It can be installed with Homebrew for Linux and macOS users
+ 
 ```
-brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/79894aee20a146d6cf7db7b4a362e7d491f499a1/Formula/hugo.rb
+brew install hugo
 ```
 
+Note that Hugo extended v0.77.0 is used in production. This Hugo version can be downloaded from [releases page](https://github.com/gohugoio/hugo/releases/tag/v0.77.0).
+
 Windows users can install [Chocolatey](https://chocolatey.org/install). After that Hugo can be installed with
 
 ```

commit afe0a22e9a955dd33d7944793b4fd8f0400ce8be
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Tue Feb 2 20:21:40 2021 +0200

    Profile path variable patch (#251)
    
    * Update signing-ios.md
    
    * Update building-a-native-ios-app.md
    
    * Update building-a-react-native-app.md
    
    * Update building-an-ionic-app.md

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index c5bc6d2..3e1d020 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -114,7 +114,7 @@ scripts:
       PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
       mkdir -p "$PROFILES_HOME"
       PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-      echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+      echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
       echo "Saved provisioning profile $PROFILE_PATH"
   - name: Set up signing certificate
     script: |
diff --git a/content/getting-started/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
index f97d9f4..7bc65bb 100644
--- a/content/getting-started/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -100,7 +100,7 @@ workflows:
           PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
           mkdir -p "$PROFILES_HOME"
           PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-          echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+          echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
           echo "Saved provisioning profile $PROFILE_PATH"
       - name: Set up signing certificate
         script: |
@@ -120,4 +120,4 @@ workflows:
       app_store_connect:
         apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE
         password: Encrypted(...) # PUT YOUR APP-SPECIFIC-PASSWORD HERE https://support.apple.com/en-us/HT204397
-```
\ No newline at end of file
+```
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index c0b8ccb..a6257e4 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -88,7 +88,7 @@ workflows:
           PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
           mkdir -p "$PROFILES_HOME"
           PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-          echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+          echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
           echo "Saved provisioning profile $PROFILE_PATH"
       - name: Set up signing certificate
         script: |
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index 4847a4f..87a472f 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -241,7 +241,7 @@ workflows:
       #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
       #     mkdir -p "$PROFILES_HOME"
       #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-      #     echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+      #     echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
       #     echo "Saved provisioning profile $PROFILE_PATH"
       - name: Fetch signing files
         script: |
@@ -343,7 +343,7 @@ workflows:
       #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
       #     mkdir -p "$PROFILES_HOME"
       #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-      #     echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+      #     echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
       #     echo "Saved provisioning profile $PROFILE_PATH"
       - name: Fetch signing files
         script: |

commit 71ed9cd6d720fc5533788cee93c791bada8eced3
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon Feb 1 15:51:27 2021 +0200

    base image update (#250)

diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index f8ca85c..0f3cb8e 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -49,13 +49,13 @@ weight: 1
 - yq
 - zip
 
-## Xcode 12.3 (12C33)
+## Xcode 12.4 (12D4e)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
 
-Xcode path: `/Applications/Xcode-12.3.app`
+Xcode path: `/Applications/Xcode-12.4.app`
 
-With Xcode `12.3` build version `12C33` the following runtimes and devices are installed:
+With Xcode `12.4` build version `12D4e` the following runtimes and devices are installed:
 
 ### Runtimes
 
@@ -69,7 +69,7 @@ With Xcode `12.3` build version `12C33` the following runtimes and devices are i
 - iOS 13.5
 - iOS 13.6
 - iOS 13.7
-- iOS 14.3
+- iOS 14.4
 - tvOS 11.3
 - tvOS 11.4
 - tvOS 12.0
@@ -151,7 +151,8 @@ With Xcode `12.3` build version `12C33` the following runtimes and devices are i
 
 ## Other Xcode versions
 
-- 12.4 (12D4e) `/Applications/Xcode-12.4.app`
+- 12.3 (12C33) `/Applications/Xcode-12.3.app`
 - 12.2 (12B45b) `/Applications/Xcode-12.2.app`
 - 12.1.1 (12A7605b) `/Applications/Xcode-12.1.1.app`
 - 12.0.1 (12A7300) `/Applications/Xcode-12.app`
+

commit 7351c304c7b8782721100837a50d4ae8d70ea193
Author: Mart <martlaub@yahoo.com>
Date:   Fri Jan 29 14:08:35 2021 +0200

    Update copy and screenshot for custom repository (#249)

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index c3d1e96..50fa645 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -4,22 +4,24 @@ title: Adding repositories
 weight: 2
 ---
 
-When you sign up via OAuth, Codemagic already has access to the repositories you have available on your Git provider account. However, you can add apps from public or private as well as from cloud-based or self-hosted Git repositories. 
+When you sign up via OAuth, Codemagic already has access to the repositories you have available on your Git provider account. However, you can add apps from public or private as well as from cloud-based or self-hosted Git repositories.
 
 {{<notebox>}}
-* Note that webhooks for automatic build triggering need to be [created manually](../building/webhooks).
-{{</notebox>}}
+
+- Note that webhooks for automatic build triggering need to be [created manually](../building/webhooks).
+  {{</notebox>}}
 
 ## Connecting repository via SSH
 
-1. Click **Add app from custom source** on the Applications page.
+1. Click **Add repository** on the Applications page.
+
+   {{< figure size="medium" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
 
-    {{< figure size="medium" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
+2. Enter the **Repository URL** for **cloning** the repository. Usually, the URL is in this format: `git@example.com:username/repo.git`.
+3. Upload the **SSH private key** file. If your key is password-protected, enter the **Private key passphrase**.
 
-2. Enter the **Repository URL** for **cloning** the repository. Usually, the URL is in this format: ` git@example.com:username/repo.git `.
-3. Upload the **SSH private key** file. If your key is password-protected, enter the **Private key passphrase**. 
+   **Alternatively**, you can click **Generate key pair** and have Codemagic create an SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
 
-    **Alternatively**, you can click **Generate key pair** and have Codemagic create an SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
 4. Click **Add application**.
 
 You can then continue configuring your project by selecting a starter workflow.
@@ -30,19 +32,19 @@ You can then continue configuring your project by selecting a starter workflow.
 
 On clicking **Generate key pair**, Codemagic creates a secure 4096 bit SSH key pair. The private key will be used in Codemagic and the public key must be added to your repository settings. Click **Copy to clipboard** to copy the public key.
 
-* If your repository is hosted on [GitHub](https://developer.github.com/v3/guides/managing-deploy-keys/#setup-2), [GitLab](https://www.deployhq.com/support/projects/updating-your-project-repository/uploading-your-public-key-to-gitlab-manually) or [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), add the public key to your repository's access/deployment keys.
-* For self-hosted repositories, request your git server admins to allow access for the provided public key.
+- If your repository is hosted on [GitHub](https://developer.github.com/v3/guides/managing-deploy-keys/#setup-2), [GitLab](https://www.deployhq.com/support/projects/updating-your-project-repository/uploading-your-public-key-to-gitlab-manually) or [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), add the public key to your repository's access/deployment keys.
+- For self-hosted repositories, request your git server admins to allow access for the provided public key.
 
-After you have added the public key to your repository settings, finish adding the app by clicking **Add application**.
+After you have added the public key to your repository settings, finish adding the app by clicking **Add repository**.
 
-{{<notebox>}}Don't close the **Add application from custom source** module before you have finished adding the app, otherwise you'll need to start over and generate a new SSH key.{{</notebox>}}
+{{<notebox>}}Don't close the **Add repository** module before you have finished adding the app, otherwise you'll need to start over and generate a new SSH key.{{</notebox>}}
 
 ## Connecting repository via HTTP/HTTPS
 
 1. Click **Add repository** on the Applications page.
 2. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
 3. If your repository is private, then enter your **Username** and **Password**. In the case of a public repository, check **Public repository**.
-4. Click **Add application**.
+4. Click **Add repository**.
 
 Your app will be then listed on the Applications page and you can then continue configuring your project by clicking on **Configure for building**.
 
diff --git a/content/uploads/add-app-from-custom-source1.png b/content/uploads/add-app-from-custom-source1.png
index 47bd1fe..85c0500 100644
Binary files a/content/uploads/add-app-from-custom-source1.png and b/content/uploads/add-app-from-custom-source1.png differ

commit 90dd221b2e7ee888516d18bc0420548e87206f91
Author: Priit Lätt <priit@nevercode.io>
Date:   Wed Jan 27 16:23:31 2021 +0200

    Update Flutter version in VM spec to 1.22.6 (#248)
    
    * Update versions2.md
    
    * Update versions.md

diff --git a/content/specs/versions.md b/content/specs/versions.md
index 18b7fec..3721331 100644
--- a/content/specs/versions.md
+++ b/content/specs/versions.md
@@ -28,7 +28,7 @@ weight: 2
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `1.22.5 ($HOME/programs/flutter)`
+- flutter `1.22.6 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index d9941ff..f8ca85c 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -28,7 +28,7 @@ weight: 1
 - docker `20.10.2`
 - fastlane `2.172.0`
 - firebase `8.10.0`
-- flutter `1.22.5 ($HOME/programs/flutter)`
+- flutter `1.22.6 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.30.0`
 - gradle `6.1.1`

commit a712187987eb3eb732fd5f8b775bd93a219d2c4a
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Tue Jan 26 15:17:52 2021 +0200

    base image update (#247)

diff --git a/content/specs/versions2.md b/content/specs/versions2.md
index d4c3116..d9941ff 100644
--- a/content/specs/versions2.md
+++ b/content/specs/versions2.md
@@ -15,7 +15,7 @@ weight: 1
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 33GB)`
+- Disk `322GB (Free Space: 31GB)`
 
 ## Pre-installed tools
 
@@ -24,21 +24,21 @@ weight: 1
 - cocoapods `1.10.0`
 - cordova `10.0.0`
 - curl
-- dart `2.10.4`
-- docker `20.10.0`
-- fastlane `2.170.0`
+- dart `2.10.5`
+- docker `20.10.2`
+- fastlane `2.172.0`
 - firebase `8.10.0`
 - flutter `1.22.5 ($HOME/programs/flutter)`
 - gem `3.1.4`
-- git `2.29.2`
+- git `2.30.0`
 - gradle `6.1.1`
-- homebrew `2.6.2`
+- homebrew `2.7.5`
 - ionic `5.4.16`
 - jq
 - node `12.18.4`
-- npm `6.14.8`
+- npm `7.4.0`
 - python `2.7.16`
-- python3 `3.8.6`
+- python3 `3.8.7`
 - ruby `2.7.1p83`
 - ssh
 - sudo
@@ -151,8 +151,7 @@ With Xcode `12.3` build version `12C33` the following runtimes and devices are i
 
 ## Other Xcode versions
 
+- 12.4 (12D4e) `/Applications/Xcode-12.4.app`
 - 12.2 (12B45b) `/Applications/Xcode-12.2.app`
 - 12.1.1 (12A7605b) `/Applications/Xcode-12.1.1.app`
-- 12.1 (12A7403) `/Applications/Xcode-12.1.app`
 - 12.0.1 (12A7300) `/Applications/Xcode-12.app`
-

commit 6dec3f53ec12c3887e40c963bd5f5984d9995948
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Jan 22 12:08:50 2021 +0200

    Add note about private Slack channels

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 976778f..92e2033 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -48,7 +48,11 @@ After you have successfully authorized Codemagic and connected your workspace, y
 
 #### Configuring Slack publishing
 
-The Slack channel for publishing is configured separately for each workflow in the `publishing` section of `codemagic.yaml` (refer [here](../publishing/email-and-slack-notifications/#slack) if you're configuring app settings in the UI). 
+The Slack channel for publishing is configured separately for each workflow in the `publishing` section of `codemagic.yaml` (refer [here](../publishing/email-and-slack-notifications/#slack) if you're configuring app settings in the UI).
+
+{{<notebox>}}
+In order to publish to **private channels**, you need to invite Codemagic app to the channels, otherwise the app does not have access to private channels. To invite Codemagic app to private channels, write `@codemagic` in the channel.
+{{</notebox>}}
 
 If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the specified channel. If the build fails, a link to the build logs is published. When you set `notify_on_build_start` to `true`, the channel will be notified when a build starts.
 

commit 2167f1a223dd51226e84f4340da5bbd31ca2df1e
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Fri Jan 22 12:02:27 2021 +0200

    Update how to publish to private channels in Slack (#243)
    
    * Update how to publish to private channels in Slack
    
    * Update email-and-slack-notifications.md
    
    Editing
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/publishing/email-and-slack-notifications.md b/content/publishing/email-and-slack-notifications.md
index f04ef04..5942a7a 100644
--- a/content/publishing/email-and-slack-notifications.md
+++ b/content/publishing/email-and-slack-notifications.md
@@ -26,6 +26,8 @@ In order to set up publishing to Slack, you first need to connect the Slack work
 
 Once your Slack workspace is connected, you can enable Slack publishing and select a channel for publishing in **App settings > Publish > Slack** when using the UI configuration.
 
+In order to publish to **private channels**, you need to invite Codemagic app to the channels, otherwise the app does not have access to private channels. To invite Codemagic app to private channels, write `@codemagic` in the channel. If you are in the Codemagic web app, refresh the page and the new channel will become available in the dropdown menu.
+
 If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the specified channel.
 
 If the build fails, a link to the build logs is published. Check **Publish artifacts even if tests fail** to publish artifacts even when one or more tests fail. If the option is unchecked, generated artifacts (if any) will be attached to successful builds only.

commit 07fb2592ee1566a00a4ead043f072c8708943650
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Thu Jan 21 16:34:22 2021 +0200

    fix sidebar column width

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 33369bc..00c655f 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -120,6 +120,8 @@ body {
             bottom: 0;
             right: 0;
             padding: 10px 40px;
+            width: 100%;
+            box-sizing: border-box;
 
             & > ul > li {
               & > .category-name {

commit 5023be8a1672368ccd7b34f29ea2be24c8edf4fe
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Jan 21 16:19:24 2021 +0200

    New category for release notes (#241)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/config.yml b/config.yml
index 43aa809..1964d1d 100644
--- a/config.yml
+++ b/config.yml
@@ -69,24 +69,27 @@ menu:
       name: Publishing
       weight: 4
       parent: setup-flutter
-    - identifier: rest-api
-      name: Codemagic API
-      weight: 7
     - identifier: teams
       name: Teams
-      weight: 8
+      weight: 7
+    - identifier: billing
+      name: Billing
+      weight: 8  
     - identifier: knowledge-base
       name: Knowledge base
       weight: 9
-    - identifier: billing
-      name: Billing
-      weight: 10    
-    - identifier: releases-and-versions
-      name: Codemagic releases and build machines
-      weight: 11
+    - identifier: rest-api
+      name: Codemagic API
+      weight: 10 
     - identifier: troubleshooting
       name: Troubleshooting
+      weight: 11
+    - identifier: specs
+      name: Build machine specs
       weight: 12
+    - identifier: notes
+      name: Release notes
+      weight: 13
 
 mediaTypes:
   video/mp4:
diff --git a/content/releases-and-versions/release-notes.md b/content/notes/release-notes.md
similarity index 99%
rename from content/releases-and-versions/release-notes.md
rename to content/notes/release-notes.md
index f5f8e6a..565e51e 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/notes/release-notes.md
@@ -1,6 +1,8 @@
 ---
 description: Information about Codemagic feature releases
-title: Release notes
+title: Codemagic feature releases
+aliases:  
+  - '../releases-and-versions/release-notes'
 weight: 1
 ---
 
diff --git a/content/releases-and-versions/versions.md b/content/specs/versions.md
similarity index 93%
rename from content/releases-and-versions/versions.md
rename to content/specs/versions.md
index 67ed9b7..18b7fec 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/specs/versions.md
@@ -1,7 +1,9 @@
 ---
 description: A list of tools available out-of-the-box on Codemagic build machines.
 title: macOS build machine specification (Xcode 11.x)
-weight: 3
+aliases:
+  - '../releases-and-versions/versions'
+weight: 2
 ---
 
 ## Hardware
diff --git a/content/releases-and-versions/versions2.md b/content/specs/versions2.md
similarity index 93%
rename from content/releases-and-versions/versions2.md
rename to content/specs/versions2.md
index e74f1d5..d4c3116 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/specs/versions2.md
@@ -1,7 +1,9 @@
 ---
 description: A list of tools available out-of-the-box on Codemagic build machines.
 title: macOS build machine specification (Xcode 12+)
-weight: 2
+aliases:
+  - '../releases-and-versions/versions2'
+weight: 1
 ---
 
 ## Hardware

commit d01ce48fc7558bac19bbd4a8f1e3b149d5c5ac34
Author: Helina Ariva <helina@nevercode.io>
Date:   Tue Jan 19 15:57:48 2021 +0200

    Update release notes

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index f12c94d..f5f8e6a 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,7 +4,27 @@ title: Release notes
 weight: 1
 ---
 
-## November 2020
+## January 2021
+
+### Scheduled builds
+
+Whether you configure your builds in the UI or use the codemagic.yaml configuration file, you can now schedule your workflows to run on days and time that suits you the best. See how to [create build schedules](../building/scheduling).  
+
+### Support for `flutter build ipa`
+
+You can now use the `flutter build ipa` command to generate an .ipa file from the Flutter source. To use this build command with Flutter builds configured in the UI, select the **Use flutter build ipa** checkbox in **App settings > Build > iOS build command**. You can also use it in your codemagic.yaml configuration, see an example [here](../getting-started/building-a-flutter-app/#building-a-signed-ios-application-archive-ipa).
+
+Note that:
+* This command is available from Flutter version `1.24.0-6.0`.
+* You still need to set up code singing in your Codemagic configuration.
+
+## December 2020
+
+### GitHub Checks and GitHub app integration for teams
+
+For repositories added via [Codemagic GitHub app](https://github.com/apps/codemagic-ci-cd), Codemagic now supports reporting the build summary of PR builds to GitHub Checks. Your Codemagic workflow will appear as a check and you will see the status and logs of individual build steps on the Checks tab of the PR. See how to set up GitHub Checks [here](../building/github-checks/).
+
+In addition, it is now possible to connect the GitHub app integration in team settings as a team integration. Learn more about the GitHub app integration [here](../getting-started/signup/#selected-repositories-github-app).
 
 ### In-app priority and rollout fraction for Android releases
 
@@ -13,6 +33,8 @@ Using both the UI and `codemagic.yaml`, you can now set two additional parameter
 * **In-app priority** determines how strongly your app update will be recommended to existing users. The priority ranges from `0` (default) to `5` (high-priority update). Note that this feature is available only via Google Play API and for apps that support in-app updates.
 * **Rollout fraction** enables you to roll out the release to a percentage of users. Rollout fraction is a value between `0` and `1`, e.g. `0.25` to release to 25% of users.
 
+## November 2020
+
 ### Filtering on Builds page and Public dashboards
 
 We have added filtering on the Builds page so you can filter builds based on team, application, workflow and branch.

commit e54dfeea2d66d3149a40a570780938341a3d189e
Author: Helina Ariva <helina@nevercode.io>
Date:   Tue Jan 19 14:39:03 2021 +0200

    Active users of previous periods

diff --git a/content/teams/users.md b/content/teams/users.md
index f51d80d..fa995eb 100644
--- a/content/teams/users.md
+++ b/content/teams/users.md
@@ -7,7 +7,9 @@ You can invite your team members to join the team in Codemagic free of charge. W
 
 ## Active users
 
-An active user is anyone who triggers a build manually from the UI or via the API, or automaticlly from a webhook in response to events in the repository. The number of active users for the ongoing subscription period is shown on the right sidebar in team settings. The active users count is reset at the beginning of every month.
+An active user is anyone who triggers a build manually from the UI or via the API, or automaticlly from a webhook in response to events in the repository. Active users are marked with a green badge with the build count on it. The number of active users for the ongoing subscription period is shown on the right sidebar in team settings. 
+
+The active users count is reset at the beginning of every month. To see the active users of previous subscription periods, check the Billing history on the [Billing](../billing/billing) page.
 
 ## Identifying users
 

commit 50914c2de605b4f5d72cfa38068dca953a74eecc
Author: Hugo Heneault <hugo.heneault@gmail.com>
Date:   Mon Jan 18 15:26:06 2021 +0100

    Fix build number fetching instruction with yq v4 (#240)

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index f693ce8..8ce3e01 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -31,7 +31,7 @@ HOMEBREW_NO_AUTO_UPDATE=1 brew install yq
 Then add the following build arguments:
 
 ```bash
---build-number=$(cat ./pubspec.yaml | yq r - version)
+--build-number=$(yq e .version pubspec.yaml)
 ```
 
 ## Set Xcode project build number via command line

commit 5cc934f840993974ab82fcdc47fcfa6890f057bf
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Jan 14 11:51:37 2021 +0200

    Document scheduled builds (#239)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/building/github-checks.md b/content/building/github-checks.md
index 701a351..0221e07 100644
--- a/content/building/github-checks.md
+++ b/content/building/github-checks.md
@@ -1,7 +1,7 @@
 ---
 title: GitHub Checks
 description: Report PR build statuses to GitHub as checks
-weight: 8
+weight: 9
 ---
 
 {{<notebox>}}
diff --git a/content/building/running-locally.md b/content/building/running-locally.md
index 987ff34..2b90e46 100644
--- a/content/building/running-locally.md
+++ b/content/building/running-locally.md
@@ -1,7 +1,7 @@
 ---
 title: Using Codemagic CLI tools locally
 description: Using Codemagic CLI tools locally or in other environments.
-weight: 9
+weight: 10
 aliases: 
     - '../yaml/runninglocally'
 ---
diff --git a/content/building/scheduling.md b/content/building/scheduling.md
new file mode 100644
index 0000000..4147baa
--- /dev/null
+++ b/content/building/scheduling.md
@@ -0,0 +1,26 @@
+---
+title: Scheduling builds
+description: Create schedules to run builds at regular intervals
+weight: 8
+---
+
+{{<notebox>}}
+This feature is available for [teams](../teams/teams) only.
+{{</notebox>}}
+
+You can schedule Codemagic to automatically build your app on certain days and time. This way, your QA can start the day with the latest version of the app, or you can configure a workflow to run the long test suits at a convenient time and only run fast tests with builds triggered by commits to the repo.
+
+## Setting up scheduled builds
+
+1. Open your project in Codemagic.
+2. On the right sidebar under **Scheduled builds**, click **Add new schedule**.
+3. Select the **Branch** and the **Workflow** to run.
+4. In the **Schedule for** field, select the days you want to run the build. 
+5. Specify the start time (UTC) of the build by selecting a value from the **At** field. Note that the build may be delayed up to 15 minutes during peak hours.
+6. Click **Add schedule** to save the schedule.
+
+Saved schedules for each app are displayed in the **Scheduled builds** section on the right sidebar in app settings. If you no longer need the schedule, you can delete it by hovering on the schedule and clicking the trash bin icon.
+
+Builds that are triggered from a schedule are marked with "scheduled" on the **Builds** page and have "Schedule" as the trigger in build overview.
+
+Note that the user who is the author of the commit that is built is counted as an active user. Read more about [how we count active users](../teams/users).

commit c2b36af873cd61ae3df123d4197398eeaae77b4c
Author: Jake Cronin <jake.cronin4@gmail.com>
Date:   Fri Jan 8 11:18:35 2021 -0500

    Change default build number to 1 instead of 0 (#236)
    
    Building my android project locally caused a failure that the versionCode must be a positive integer greater than 0.

diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index 451d76f..c0b8ccb 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -168,7 +168,7 @@ Incrementing the version code can be done as follows:
     android {
         ...
         
-        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
+        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 1)
         defaultConfig {
             ...
             versionCode appVersionCode

commit 49a30af33f793a75140e4f17cecded534777b0e2
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Fri Jan 8 18:03:38 2021 +0200

    change note code background color

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 6df50bd..33369bc 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -405,7 +405,7 @@ body {
               }
 
               code {
-                background: $grey-bg;
+                background: transparentize($blue, 0.95);
               }
               pre {
                 background: $grey-bg !important;

commit d36eed2d9d31aaf8aff1b92941740112fee640b2
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Fri Jan 8 17:56:06 2021 +0200

    change note background color

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index d5b6b93..6df50bd 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -388,7 +388,7 @@ body {
                 }
             }
             .notebox {
-              background: $grey-bg-light;
+              background: transparentize($blue, 0.95);
               border-left: 10px solid $blue;
               padding: 30px 40px;
               text-align: left;

commit fabb292bd000b2cf720b103475fc14522cab096b
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Jan 8 17:45:12 2021 +0200

    Add missing command to example

diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index b93d44e..f687cac 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -98,6 +98,7 @@ Read more about the different schemes in [Apple's documentation](https://help.ap
 **Note:** If you are using Flutter version 1.24.0-6.0 or higher, the recommended command for building an .ipa archive is `flutter build ipa` as shown below. Read more about it in [Flutter's documentation](https://flutter.dev/docs/deployment/ios#create-a-build-archive).
 
 ```yaml
+- xcode-project use-profiles
 - flutter build ipa --export-options-plist=/Users/builder/export_options.plist
 ```
 

commit 8f1b1d9d7399962ebeefccfa8c9788da3ff4a442
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Fri Jan 8 16:53:37 2021 +0200

    Feature/flutter ipa builds (#237)
    
    * initial commit
    
    * release is the default
    
    * Editing
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/flutter/flutter-projects.md b/content/flutter/flutter-projects.md
index 6ebfab5..9679ea3 100644
--- a/content/flutter/flutter-projects.md
+++ b/content/flutter/flutter-projects.md
@@ -39,6 +39,18 @@ In order to upload your Android App Bundle to Google Play, you will need to:
 
 When you enroll an app into app signing by Google Play, Google will manage your app's signing key for you and use it to sign the .apk for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
 
+### Building iOS apps
+
+To build for iOS, select **iOS** as the build platform in **App settings > Build > Build for platforms**. To build a release archive, you also need to set up [code signing](../code-signing/ios-code-signing/).
+
+{{<notebox>}}
+**Using `flutter build ipa`**
+
+As of Flutter version 1.24.0-6.0, it is possible to use the `flutter build ipa` command to build an .ipa. Using this command can reduce build time.
+
+To use the `flutter build ipa` command in Codemagic, you need to enable code signing and select the **Use `flutter build ipa`** checkbox in **App settings > Build > iOS build command**.
+{{</notebox>}}
+
 ### Building for the web
 
 Codemagic can detect your Flutter web project if it contains a `web` folder. To build for the web, select **Web** as the build platform in **App settings > Build > Build for platforms**.
diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index 88063bc..b93d44e 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -93,7 +93,13 @@ Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/
 - xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
 ```
 
-{{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}}
+Read more about the different schemes in [Apple's documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).
+
+**Note:** If you are using Flutter version 1.24.0-6.0 or higher, the recommended command for building an .ipa archive is `flutter build ipa` as shown below. Read more about it in [Flutter's documentation](https://flutter.dev/docs/deployment/ios#create-a-build-archive).
+
+```yaml
+- flutter build ipa --export-options-plist=/Users/builder/export_options.plist
+```
 
 ## Web builds
 

commit 04cf9232ec9521b6013c3f73745f60e69ee90ded
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Thu Dec 31 12:32:12 2020 +0200

    edit flutter link in header

diff --git a/layouts/partials/header.html b/layouts/partials/header.html
index ea0929d..8d10bdd 100644
--- a/layouts/partials/header.html
+++ b/layouts/partials/header.html
@@ -22,7 +22,7 @@
                         <ul class="menu-block__links">
                             <li>
                                 <a
-                                    href='{{ site.Param "blogURL" }}/getting-started-with-codemagic/'
+                                    href="https://flutterci.com"
                                     class="menu-block__link"
                                     onclick="sendGtag('Flutter_clicked', 'CodemagicMenu')"
                                     target="_blank"

commit a5d2032046cc9f1e69b2f0d4ae54640d52d362d5
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Wed Dec 23 20:07:06 2020 +0200

    remove Ionic from header menu

diff --git a/layouts/partials/header.html b/layouts/partials/header.html
index f5a4af1..ea0929d 100644
--- a/layouts/partials/header.html
+++ b/layouts/partials/header.html
@@ -56,14 +56,6 @@
                                     {{ readFile "/assets/svg/platforms/android.svg" | safeHTML }} Native Android</a
                                 >
                             </li>
-                            <li>
-                                <a
-                                    href='{{ site.Param "landingURL" }}/continuous-integration-and-delivery-for-ionic-apps-codemagic'
-                                    class="menu-block__link"
-                                    onclick="sendGtag('Ionic_clicked', 'CodemagicMenu')"
-                                    >{{ readFile "/assets/svg/platforms/ionic.svg" | safeHTML }} Ionic</a
-                                >
-                            </li>
                         </ul>
                     </div>
                     <div class="menu-block">

commit 75d139309467e8f87f178f7a0dfb94213a8e1c85
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Wed Dec 23 13:49:18 2020 +0200

    edit header in accordance with the main site (#235)
    
    * edit header in accordance with the main site
    
    * replace fa icons with svg
    
    * remove logos from mobile menu

diff --git a/.prettierrc b/.prettierrc
new file mode 100644
index 0000000..f9f50f5
--- /dev/null
+++ b/.prettierrc
@@ -0,0 +1,14 @@
+{
+    "printWidth": 120,
+    "bracketSpacing": true,
+    "semi": false,
+    "singleQuote": true,
+    "tabWidth": 4,
+    "trailingComma": "all",
+    "overrides": [
+        {
+            "files": ["*.md", "*.markdown"],
+            "options": { "tabWidth": 2 }
+        }
+    ]
+}
diff --git a/assets/js/main.js b/assets/js/main.js
index d172b35..b52fd99 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -83,6 +83,7 @@ $('h1, h2, h3, h4, h5, h6').on('click', 'i.ctc', function() {
 })
 
 $(document).ready(function() {
+  addMenuListeners()
   createTableOfContents()
   // Wrap tables for responsiveness
   var contentTable = $('#main-content main table')
@@ -320,3 +321,17 @@ $(window).ready(function () {
         observer.observe(header);
     });
 });
+
+const addMenuListeners = () => {
+    $('[data-js-toggle-menu-product-dropdown]').on('click', function () {
+        $(this).toggleClass('open')
+        $('[data-js-menu-product-dropdown]').toggleClass('open')
+    })
+    window.addEventListener('click', function (e) {
+        const select = document.querySelector('[data-js-menu-product-dropdown], [data-js-toggle-menu-product-dropdown]')
+        if (!select.contains(e.target)) {
+            select.classList.remove('open')
+            $('[data-js-menu-product-dropdown]').removeClass('open')
+        }
+    })
+}
diff --git a/assets/scss/_header.scss b/assets/scss/_header.scss
index 9749cc3..b3ae504 100644
--- a/assets/scss/_header.scss
+++ b/assets/scss/_header.scss
@@ -83,6 +83,84 @@
         display: block;
     }
 }
+.menu-dropdown {
+    display: none;
+    position: absolute;
+    box-shadow: 0px 3px 60px #06225d29;
+    background: white;
+    top: 100%;
+    border-radius: 20px;
+    padding: 30px;
+    &.open {
+        display: block;
+    }
+}
+.menu-link.toggle-dropdown-button {
+    position: relative;
+    &::after {
+        content: '\f078';
+        font-family: 'Font Awesome 5 Free';
+        transition: all 160ms linear;
+        display: inline-block;
+        font-weight: 600;
+        font-size: 9px;
+        margin-left: 10px;
+        vertical-align: middle;
+    }
+    &.open {
+        &::after {
+            transform: rotate(180deg);
+        }
+    }
+}
+.menu-block {
+    &__header {
+        color: $black-l;
+        font-size: 12px;
+        margin-bottom: 10px;
+        text-transform: uppercase;
+    }
+    &__links {
+        display: grid;
+        grid-template-columns: 1fr 1fr;
+        gap: 10px 20px;
+    }
+    &__link {
+        font-size: 13px;
+        display: flex;
+        height: 56px;
+        align-items: center;
+        padding: 0 20px;
+        border-radius: 10px;
+        color: $black-l;
+        box-shadow: 0px 3px 46px $shadow-blue;
+        svg {
+            width: 20px;
+            height: 20px;
+            margin-right: 10px;
+            vertical-align: middle;
+            * {
+                transition: fill 200ms linear;
+                stroke: none;
+                fill: $black-l;
+                opacity: 1;
+            }
+            &.ios {
+                position: relative;
+                bottom: 3px;
+            }
+        }
+        &:hover {
+            color: $blue;
+            svg * {
+                fill: $blue;
+            }
+        }
+    }
+    &:not(:last-child) {
+        margin-bottom: 30px;
+    }
+}
 #header-menu-wrap {
     flex: 1;
     display: flex;
@@ -230,7 +308,7 @@
         transition: color 300ms linear;
 
         &:hover {
-            color: $red;
+            color: $blue;
         }
         @at-root #header-authentication.loading & {
             display: none;
@@ -264,7 +342,8 @@
         height: 100vh;
         overflow: auto;
 
-        .menu-link {
+        .menu-link,
+        .menu-block__link {
             position: relative;
             display: block;
             color: $black;
@@ -273,9 +352,11 @@
             padding: 0 50px;
             border-bottom: 1px solid $grey-l;
 
-            &::after {
+            &:not(.toggle-dropdown-button)::after {
                 content: '\f061';
                 font-family: 'Font Awesome 5 Free';
+            }
+            &::after {
                 position: absolute;
                 right: 50px;
                 transition: right 300ms ease-in-out;
@@ -284,10 +365,40 @@
             &:focus {
                 background-color: $grey-xl;
                 color: $blue;
-                &::after {
-                    right: 46px;
+            }
+            &:not(.toggle-dropdown-button) {
+                &:hover,
+                &:focus {
+                    &::after {
+                        right: 46px;
+                    }
+                }
+            }
+        }
+        .menu-dropdown {
+            position: static;
+            box-shadow: none;
+            border-radius: 0;
+            padding: 0;
+        }
+        .menu-block {
+            &__links {
+                display: block;
+            }
+            &__link {
+                box-shadow: none;
+                border-radius: 0;
+                padding: 0 80px;
+                svg {
+                    display: none;
                 }
             }
+            &__header {
+                display: none;
+            }
+            &:not(:last-child) {
+                margin: 0;
+            }
         }
     }
     #header-main-menu {
@@ -408,14 +519,21 @@
     }
 }
 @media (max-width: 420px) {
-    #header-menu-wrap .menu-link {
-        padding: 0 20px;
-
-        &::after {
-            right: 20px;
+    #header-menu-wrap {
+        .menu-link {
+            padding: 0 20px;
         }
-        &:hover::after {
-            right: 16px;
+        .menu-block__link {
+            padding: 0 50px;
+        }
+        .menu-link,
+        .menu-block__link {
+            &::after {
+                right: 20px;
+            }
+            &:not(.toggle-dropdown-button):hover::after {
+                right: 16px;
+            }
         }
     }
 }
@@ -456,7 +574,7 @@
     height: 48px;
     line-height: 48px;
     padding: 0 40px;
-    border-radius: 50px;
+    border-radius: 10px;
     text-align: center;
     cursor: pointer;
     transition: all 160ms linear;
@@ -468,4 +586,4 @@
 button:not(:disabled),
 button:not(:disabled) * {
     cursor: pointer;
-}
\ No newline at end of file
+}
diff --git a/assets/scss/_variables.scss b/assets/scss/_variables.scss
index 284ce0a..3a5ad1a 100644
--- a/assets/scss/_variables.scss
+++ b/assets/scss/_variables.scss
@@ -6,6 +6,7 @@ $yellow: #FBB03B;
 $magenta: #E944FF;
 $cyan: #33CCFF;
 $black: #151515;
+$black-l: #06225d;
 $blue-gradient: linear-gradient(20deg, $blue-hover 0%, $blue 100%);
 $magenta-gradient: linear-gradient(20deg, $magenta 0%, $yellow 100%);
 $cyan-gradient: linear-gradient(20deg, $magenta 0%, $cyan 100%);
@@ -21,6 +22,7 @@ $grey-bg: #eaeaea;
 $grey-l: #eeeeee;
 $grey-xl: #f8f8f8;
 $grey-m: #cccccc;
+$shadow-blue: #e4e8f7;
 
 // Fonts
 $font-family-default: 'ProximaNova-Regular';
diff --git a/assets/svg/book.svg b/assets/svg/book.svg
new file mode 100644
index 0000000..d92bc04
--- /dev/null
+++ b/assets/svg/book.svg
@@ -0,0 +1,3 @@
+<svg xmlns="http://www.w3.org/2000/svg" width="17.501" height="20" viewBox="0 0 17.501 20">
+  <path id="book" d="M17.5,14.063V.938A.935.935,0,0,0,16.562,0H3.75A3.751,3.751,0,0,0,0,3.75v12.5A3.751,3.751,0,0,0,3.75,20H16.563a.935.935,0,0,0,.938-.938v-.625a.945.945,0,0,0-.348-.731,8.719,8.719,0,0,1,0-2.918.93.93,0,0,0,.348-.727ZM5,5.234A.235.235,0,0,1,5.234,5h8.281a.235.235,0,0,1,.234.234v.781a.235.235,0,0,1-.234.234H5.234A.235.235,0,0,1,5,6.016Zm0,2.5A.235.235,0,0,1,5.234,7.5h8.281a.235.235,0,0,1,.234.234v.781a.235.235,0,0,1-.234.234H5.234A.235.235,0,0,1,5,8.516ZM14.9,17.5H3.75a1.25,1.25,0,1,1,0-2.5H14.9A14.02,14.02,0,0,0,14.9,17.5Z" fill="#06225d"/>
+</svg>
diff --git a/assets/svg/platforms/android.svg b/assets/svg/platforms/android.svg
new file mode 100644
index 0000000..06305ff
--- /dev/null
+++ b/assets/svg/platforms/android.svg
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<svg version="1.1" id="android" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 viewBox="0 0 35 35" style="enable-background:new 0 0 35 35;" xml:space="preserve">
+<style type="text/css">
+	.st0{fill:#C6CBDE;}
+</style>
+<path class="st0" d="M24.9,22c-0.7,0-1.3-0.6-1.3-1.3c0-0.7,0.6-1.3,1.3-1.3c0.7,0,1.3,0.6,1.3,1.3C26.2,21.4,25.6,22,24.9,22
+	 M10.1,22c-0.7,0-1.3-0.6-1.3-1.3c0-0.7,0.6-1.3,1.3-1.3c0.7,0,1.3,0.6,1.3,1.3C11.5,21.4,10.9,22,10.1,22 M25.3,13.9L28,9.3
+	c0.2-0.3,0.1-0.6-0.2-0.8c-0.3-0.2-0.6-0.1-0.8,0.2l-2.7,4.7C22.3,12.5,20,12,17.5,12c-2.5,0-4.8,0.5-6.8,1.5L8,8.8
+	C7.8,8.5,7.5,8.4,7.2,8.6C6.9,8.7,6.8,9.1,7,9.3l2.7,4.6C5.1,16.4,2,21,1.5,26.5h32C33,21,29.9,16.4,25.3,13.9"/>
+</svg>
diff --git a/assets/svg/platforms/cordova.svg b/assets/svg/platforms/cordova.svg
new file mode 100644
index 0000000..0357830
--- /dev/null
+++ b/assets/svg/platforms/cordova.svg
@@ -0,0 +1,10 @@
+<svg id="cordova" xmlns="http://www.w3.org/2000/svg" width="30" height="28.626" viewBox="0 0 30 28.626">
+  <defs>
+    <style>
+      .cls-1 {
+        fill: #c6cbde;
+      }
+    </style>
+  </defs>
+  <path id="Path_114" data-name="Path 114" class="cls-1" d="M27.252,28.626H22.385l.344-4.094H20.353l-.344,4.094H9.962l-.344-4.094H7.242l.344,4.094H2.719L0,10.906,6.813,0H23.187L30,10.906ZM21.813,5.439h-4.38l.286,2.032H12.281l.286-2.032H8.187L5.468,10.878,6.842,21.784H23.187l1.374-10.906ZM19.437,18.177c-.372,0-.687-1.145-.687-2.548s.315-2.548.687-2.548.687,1.145.687,2.548C20.1,17.061,19.809,18.177,19.437,18.177Zm-8.616.229c-.372,0-.687-1.145-.687-2.548s.315-2.548.687-2.548.687,1.145.687,2.548S11.193,18.406,10.821,18.406Z"/>
+</svg>
diff --git a/assets/svg/platforms/flutter.svg b/assets/svg/platforms/flutter.svg
new file mode 100644
index 0000000..f4e8c06
--- /dev/null
+++ b/assets/svg/platforms/flutter.svg
@@ -0,0 +1,34 @@
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24.735" height="30.63" viewBox="0 0 24.735 30.63">
+  <defs>
+    <style>
+      .cls-1 {
+        fill: #c6cbde;
+      }
+
+      .cls-2 {
+        clip-path: url(#clip-path);
+      }
+    </style>
+    <clipPath id="clip-path">
+      <path id="Path_102" data-name="Path 102" class="cls-1" d="M32.166,15.409,23.92,23.657l8.245,8.248H22.744L14.5,23.657l8.248-8.248ZM22.744,1.275,7.43,16.589,12.143,21.3,32.166,1.275Z" transform="translate(-7.43 -1.275)"/>
+    </clipPath>
+  </defs>
+  <g id="flutterio-icon" transform="translate(-7.43 -1.275)">
+    <g id="Group_98" data-name="Group 98" class="cls-2" transform="translate(7.43 1.275)">
+      <path id="Path_101" data-name="Path 101" class="cls-1" d="M22.2,39.053l4.709,4.712L39.865,30.8H30.443Z" transform="translate(-15.13 -16.671)"/>
+    </g>
+    <g id="Group_99" data-name="Group 99" class="cls-2" transform="translate(7.43 1.275)">
+      <path id="Path_103" data-name="Path 103" class="cls-1" d="M22.744,1.275h9.422L12.143,21.3,7.43,16.589Z" transform="translate(-7.43 -1.275)"/>
+    </g>
+    <g id="Group_100" data-name="Group 100" class="cls-2" transform="translate(7.43 1.275)">
+      <path id="Path_105" data-name="Path 105" class="cls-1" d="M32.037,52.75l3.536,3.533h9.422L36.75,48.037Z" transform="translate(-20.259 -25.655)"/>
+    </g>
+    <g id="Group_101" data-name="Group 101" class="cls-2" transform="translate(7.43 1.275)">
+      <path id="Path_107" data-name="Path 107" class="cls-1" d="M39.026,50.329,36.75,48.037,32.037,52.75Z" transform="translate(-20.259 -25.655)"/>
+    </g>
+    <g id="Group_102" data-name="Group 102" class="cls-2" transform="translate(7.43 1.275)">
+      <path id="Path_109" data-name="Path 109" class="cls-1" d="M22.2,42.9l4.712-4.712L31.622,42.9l-4.713,4.712Z" transform="translate(-15.129 -20.52)"/>
+    </g>
+    <path id="Path_111" data-name="Path 111" class="cls-1" d="M32.166,15.409,23.92,23.657l8.245,8.248H22.744L14.5,23.657l8.248-8.248ZM22.744,1.275,7.43,16.589,12.143,21.3,32.166,1.275Z"/>
+  </g>
+</svg>
diff --git a/assets/svg/platforms/ionic.svg b/assets/svg/platforms/ionic.svg
new file mode 100644
index 0000000..6a6554e
--- /dev/null
+++ b/assets/svg/platforms/ionic.svg
@@ -0,0 +1,12 @@
+<svg id="ionic" xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">
+  <defs>
+    <style>
+      .cls-1 {
+        fill: #c6cbde;
+      }
+    </style>
+  </defs>
+  <path id="Path_112" data-name="Path 112" class="cls-1" d="M34.04,27.2a6.84,6.84,0,1,0,6.84,6.84h0A6.837,6.837,0,0,0,34.04,27.2Z" transform="translate(-19.04 -19.04)"/>
+  <circle id="Ellipse_6" data-name="Ellipse 6" class="cls-1" cx="3.12" cy="3.12" r="3.12" transform="translate(21.69 2.55)"/>
+  <path id="Path_113" data-name="Path 113" class="cls-1" d="M28.65,8.79l-.12-.3-.21.24a4.835,4.835,0,0,1-1.89,1.29l-.21.06.09.21a12.317,12.317,0,1,1-6.06-6.33l.18.09.09-.21a4.536,4.536,0,0,1,1.38-1.8l.24-.21-.27-.15A14.809,14.809,0,0,0,15,0,15,15,0,1,0,30,15a14.742,14.742,0,0,0-1.35-6.21Z" transform="translate(0 0)"/>
+</svg>
diff --git a/assets/svg/platforms/ios.svg b/assets/svg/platforms/ios.svg
new file mode 100644
index 0000000..f8ccbeb
--- /dev/null
+++ b/assets/svg/platforms/ios.svg
@@ -0,0 +1,10 @@
+<svg xmlns="http://www.w3.org/2000/svg" width="25.73" height="30.62" viewBox="0 0 25.73 30.62">
+  <defs>
+    <style>
+      .cls-1 {
+        fill: #c6cbde;
+      }
+    </style>
+  </defs>
+  <path id="Path_115" data-name="Path 115" class="cls-1" d="M21.513-12.257a6.382,6.382,0,0,1,3.418-5.8,7.345,7.345,0,0,0-5.79-3.049c-2.427-.191-5.079,1.415-6.05,1.415-1.025,0-3.377-1.347-5.223-1.347C4.054-20.973,0-17.992,0-11.929A17.027,17.027,0,0,0,.984-6.378c.875,2.509,4.033,8.661,7.328,8.559C10.035,2.14,11.252.957,13.494.957c2.174,0,3.3,1.224,5.223,1.224,3.322-.048,6.18-5.64,7.014-8.155A6.776,6.776,0,0,1,21.513-12.257ZM17.643-23.481a6.438,6.438,0,0,0,1.641-4.956,7.249,7.249,0,0,0-4.642,2.386,6.539,6.539,0,0,0-1.75,4.915A5.741,5.741,0,0,0,17.643-23.481Z" transform="translate(0 28.438)"/>
+</svg>
diff --git a/assets/svg/platforms/react.svg b/assets/svg/platforms/react.svg
new file mode 100644
index 0000000..1a2ab2b
--- /dev/null
+++ b/assets/svg/platforms/react.svg
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<svg version="1.1" id="react-native" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px"
+	 y="0px" viewBox="0 0 35 35" style="enable-background:new 0 0 35 35;" xml:space="preserve">
+<style type="text/css">
+	.st0{fill:#C6CBDE;}
+</style>
+<path class="st0" d="M35,17.5c0,2.2-2.9,4.3-6.8,5.6c-0.2,0.1-0.4,0.1-0.6,0.2c0.1,0.3,0.1,0.6,0.2,0.9c0.8,3.9,0.2,7.2-1.7,8.2
+	c-1.8,1-4.7,0-7.6-2.5c-0.3-0.3-0.6-0.6-0.9-0.8c-0.2,0.2-0.5,0.5-0.7,0.7c-3,2.6-6.1,3.7-8,2.7c-1.8-1-2.4-4-1.6-7.8
+	c0.1-0.4,0.2-0.8,0.3-1.2c-0.3-0.1-0.6-0.2-0.9-0.3C2.8,21.8,0,19.7,0,17.5c0-2.1,2.6-4.1,6.3-5.3c0.4-0.1,0.8-0.3,1.3-0.4
+	c-0.1-0.4-0.2-0.8-0.3-1.1c-0.8-3.9-0.2-7,1.6-8c1.9-1.1,5,0.1,8.1,2.8c0.2,0.2,0.4,0.3,0.6,0.5c0.3-0.3,0.6-0.5,0.9-0.8
+	c3-2.6,5.9-3.7,7.7-2.6c1.9,1.1,2.4,4.4,1.6,8.4c-0.1,0.3-0.1,0.5-0.2,0.8c0.4,0.1,0.7,0.2,1.1,0.3C32.3,13.5,35,15.5,35,17.5z
+	 M9.6,17.6c-0.6-1.4-1.2-2.9-1.7-4.4c-0.4,0.1-0.8,0.2-1.2,0.4c-3.1,1.1-5.3,2.7-5.3,3.9c0.1,0.8,0.6,1.6,1.3,2
+	c1.2,1,2.9,1.7,4.3,2.1c0.3,0.1,0.6,0.2,0.8,0.3C8.4,20.5,8.9,19,9.6,17.6z M16.5,28.1c-1.1-1.1-2.1-2.4-3-3.7
+	c-1.6-0.1-3.1-0.3-4.6-0.7c-0.1,0.4-0.2,0.8-0.3,1.1C8,28,8.4,30.5,9.5,31.1c0.8,0.3,1.7,0.3,2.4-0.1c1.4-0.6,2.7-1.4,3.9-2.4
+	C16.1,28.5,16.3,28.3,16.5,28.1z M8.7,10.4c0.1,0.4,0.2,0.7,0.2,1.1c1.5-0.3,3-0.6,4.6-0.7c0.9-1.3,1.9-2.5,2.9-3.6
+	c-0.2-0.2-0.3-0.3-0.5-0.5C13.2,4.3,10.7,3.4,9.5,4C8.5,4.6,8.1,7.1,8.7,10.4z M10.5,19.3c-0.4,1-0.8,2.1-1.1,3
+	c1,0.2,2.1,0.4,3.2,0.5c-0.4-0.6-0.7-1.2-1.1-1.8C11.1,20.5,10.8,19.9,10.5,19.3z M10.5,15.9c0.3-0.6,0.6-1.2,1-1.8
+	c0.3-0.6,0.7-1.2,1.1-1.7c-1.1,0.1-2.1,0.3-3.1,0.5C9.7,13.8,10,14.8,10.5,15.9z M12.7,20.4c0.5,0.9,1.1,1.8,1.7,2.7
+	c1,0.1,2,0.1,3.1,0.1s2.1,0,3.2-0.1c0.6-0.9,1.1-1.8,1.7-2.7c0.5-0.9,1-1.8,1.5-2.8c-0.5-0.9-1-1.9-1.5-2.8s-1.1-1.8-1.7-2.6
+	c-1-0.1-2.1-0.1-3.1-0.1s-2.1,0-3.1,0.1c-0.6,0.9-1.1,1.8-1.7,2.7c-0.6,0.9-1,1.8-1.5,2.8C11.7,18.5,12.2,19.4,12.7,20.4z
+	 M14.4,17.6c0-1.7,1.4-3.1,3.1-3.1s3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1S14.4,19.3,14.4,17.6z M15.5,10.6c1.4-0.1,2.7-0.1,4.1,0
+	c-0.6-0.8-1.3-1.7-2-2.4C16.8,8.9,16.1,9.7,15.5,10.6z M19.6,24.5c-0.7,0-1.4,0-2.1,0s-1.4,0-2,0c0.7,0.9,1.4,1.7,2.1,2.5
+	C18.3,26.2,18.9,25.4,19.6,24.5z M18.5,7.1c1.1,1.1,2,2.4,2.9,3.6c1.5,0.1,3.1,0.4,4.6,0.7c0.1-0.2,0.1-0.5,0.2-0.7
+	c0.7-3.5,0.3-6.2-0.9-6.9c-1.1-0.6-3.5,0.2-6,2.5C19.1,6.6,18.8,6.9,18.5,7.1z M26.3,24.5c-0.1-0.3-0.1-0.6-0.2-0.8
+	c-1.5,0.3-3.1,0.6-4.7,0.7c-0.9,1.3-1.8,2.5-2.9,3.7c0.3,0.3,0.6,0.5,0.9,0.8c2.5,2.1,4.8,3,5.9,2.3c0.7-0.5,1.1-1.3,1.1-2.1
+	C26.7,27.6,26.7,26,26.3,24.5z M22.5,22.8c1.1-0.1,2.2-0.3,3.2-0.5c-0.3-1-0.7-2-1.2-3c-0.3,0.6-0.6,1.2-1,1.8
+	C23.2,21.7,22.9,22.3,22.5,22.8z M25.7,12.9c-1-0.2-2-0.4-3.1-0.5c0.4,0.6,0.7,1.1,1,1.7c0.3,0.6,0.7,1.2,1,1.8
+	C25,14.9,25.3,13.9,25.7,12.9z M33.5,17.5c0-1.2-2.2-2.9-5.4-4c-0.3-0.1-0.7-0.2-1-0.3c-0.5,1.5-1,2.9-1.7,4.3
+	c0.7,1.4,1.3,2.9,1.7,4.4c0.2-0.1,0.4-0.1,0.6-0.2C31.1,20.6,33.5,18.9,33.5,17.5z"/>
+</svg>
diff --git a/assets/svg/plug.svg b/assets/svg/plug.svg
new file mode 100644
index 0000000..1e6e374
--- /dev/null
+++ b/assets/svg/plug.svg
@@ -0,0 +1,3 @@
+<svg xmlns="http://www.w3.org/2000/svg" width="14.555" height="19.406" viewBox="0 0 14.555 19.406">
+  <path id="plug" d="M12.129,1.213a1.213,1.213,0,1,0-2.426,0V4.852h2.426Zm1.819,4.852H.606A.606.606,0,0,0,0,6.671V7.884a.606.606,0,0,0,.606.606h.606V9.7a6.067,6.067,0,0,0,4.851,5.943v3.76H8.49v-3.76A6.067,6.067,0,0,0,13.342,9.7V8.49h.606a.606.606,0,0,0,.606-.606V6.671A.606.606,0,0,0,13.948,6.064Zm-9.1-4.852a1.213,1.213,0,1,0-2.426,0V4.852H4.852Z" fill="#06225d"/>
+</svg>
diff --git a/layouts/partials/header.html b/layouts/partials/header.html
index 88e4f9e..f5a4af1 100644
--- a/layouts/partials/header.html
+++ b/layouts/partials/header.html
@@ -1,36 +1,132 @@
 <div id="nav-trigger"></div>
 <header id="header" data-js-header>
     <div class="inner">
-        <a href='{{ site.Param "landingURL" }}/start' id="header-logo" onclick="sendGtag('Logo_clicked', 'CodemagicMenu')" target="_blank">{{ partial "codemagic-logo" . }}</a>
+        <a
+            href='{{ site.Param "landingURL" }}/start'
+            id="header-logo"
+            onclick="sendGtag('Logo_clicked', 'CodemagicMenu')"
+            target="_blank"
+            >{{ partial "codemagic-logo" . }}</a
+        >
         <div id="menu-toggle" data-js-header-menu-toggle>
             <div class="bar"></div>
             <div class="bar"></div>
             <div class="bar"></div>
         </div>
         <div id="header-menu-wrap" data-js-header-menu-wrap>
-            <nav id="header-main-menu">
-                <a class="menu-link" href='{{ site.Param "landingURL" }}/pricing' onclick="sendGtag('Pricing_clicked', 'CodemagicMenu')" target="_blank">Pricing</a>
-                <a class="menu-link" href='{{ site.Param "landingURL" }}/enterprise'
-                    onclick="sendGtag('Enterprise_clicked', 'CodemagicMenu')" target="_blank">
-                    Enterprise
-                </a>
-                <a class="menu-link" href='/' onclick="sendGtag('Documentation_clicked', 'CodemagicMenu')">Documentation</a>
-                <a class="menu-link" href='{{ site.Param "blogURL" }}' onclick="sendGtag('Blog_clicked', 'CodemagicMenu')" target="_blank">Blog</a>
-                <a class="menu-link" href='{{ site.Param "landingURL" }}/integrations' onclick="sendGtag('Integrations_clicked', 'CodemagicMenu')" target="_blank">Integrations</a>
+            <nav id="header-menu">
+                <a class="menu-link toggle-dropdown-button" data-js-toggle-menu-product-dropdown>Product</a>
+                <div class="menu-dropdown" data-js-menu-product-dropdown>
+                    <div class="menu-block">
+                        <p class="menu-block__header">Use Codemagic CI/CD for</p>
+                        <ul class="menu-block__links">
+                            <li>
+                                <a
+                                    href='{{ site.Param "blogURL" }}/getting-started-with-codemagic/'
+                                    class="menu-block__link"
+                                    onclick="sendGtag('Flutter_clicked', 'CodemagicMenu')"
+                                    target="_blank"
+                                >
+                                    {{ readFile "/assets/svg/platforms/flutter.svg" | safeHTML }} Flutter</a
+                                >
+                            </li>
+                            <li>
+                                <a
+                                    href='{{ site.Param "landingURL" }}/react-native-continuous-integration'
+                                    class="menu-block__link"
+                                    onclick="sendGtag('React_native_clicked', 'CodemagicMenu')"
+                                >
+                                    {{ readFile "/assets/svg/platforms/react.svg" | safeHTML }} React Native</a
+                                >
+                            </li>
+                            <li>
+                                <a
+                                    href='{{ site.Param "landingURL" }}/ios-continuous-integration'
+                                    class="menu-block__link"
+                                    onclick="sendGtag('iOS_clicked', 'CodemagicMenu')"
+                                    >{{ readFile "/assets/svg/platforms/ios.svg" | safeHTML }} Native iOS</a
+                                >
+                            </li>
+                            <li>
+                                <a
+                                    href='{{ site.Param "landingURL" }}/android-continuous-integration'
+                                    class="menu-block__link"
+                                    onclick="sendGtag('Android_clicked', 'CodemagicMenu')"
+                                >
+                                    {{ readFile "/assets/svg/platforms/android.svg" | safeHTML }} Native Android</a
+                                >
+                            </li>
+                            <li>
+                                <a
+                                    href='{{ site.Param "landingURL" }}/continuous-integration-and-delivery-for-ionic-apps-codemagic'
+                                    class="menu-block__link"
+                                    onclick="sendGtag('Ionic_clicked', 'CodemagicMenu')"
+                                    >{{ readFile "/assets/svg/platforms/ionic.svg" | safeHTML }} Ionic</a
+                                >
+                            </li>
+                        </ul>
+                    </div>
+                    <div class="menu-block">
+                        <p class="menu-block__header">Discover more from</p>
+                        <ul class="menu-block__links">
+                            <li>
+                                <a
+                                    href='{{ site.Param "landingURL" }}/integrations'
+                                    class="menu-block__link"
+                                    onclick="sendGtag('Integrations_clicked', 'CodemagicMenu')"
+                                    >{{ readFile "/assets/svg/plug.svg" | safeHTML }} Integrations</a
+                                >
+                            </li>
+                            <li>
+                                <a
+                                    href='{{ site.Param "blogURL" }}'
+                                    class="menu-block__link"
+                                    onclick="sendGtag('Blog_clicked', 'CodemagicMenu')"
+                                    target="_blank"
+                                    >{{ readFile "/assets/svg/book.svg" | safeHTML }} Blog</a
+                                >
+                            </li>
+                        </ul>
+                    </div>
+                </div>
+                <a
+                    class="menu-link"
+                    href='{{ site.Param "landingURL" }}/pricing'
+                    onclick="sendGtag('Pricing_clicked', 'CodemagicMenu')"
+                    >Pricing</a
+                >
+                <a
+                    class="menu-link"
+                    href='{{ site.Param "landingURL" }}/enterprise'
+                    onclick="sendGtag('Enterprise_clicked', 'CodemagicMenu')"
+                    >Enterprise</a
+                >
+                <a class="menu-link" href="/" onclick="sendGtag('Documentation_clicked', 'CodemagicMenu')"
+                    >Documentation</a
+                >
             </nav>
             <aside id="header-authentication" data-js-header-authentication>
                 <div id="header-auth-visitor" data-js-header-auth-visitor>
-                    <a class="auth-link" href='{{ site.Param "landingURL" }}/login' id="login-link" onclick="sendGtag('Login_clicked', 'CodemagicMenu')">Login</a>
-                    <a href='{{ site.Param "landingURL" }}/signup' id="signup-btn" class="btn" onclick="sendGtag('Signup_clicked', 'CodemagicMenu')">Sign
-                        up</a>
+                    <a
+                        class="auth-link"
+                        href='{{ site.Param "appURL" }}/login'
+                        id="login-link"
+                        onclick="sendGtag('Login_clicked', 'CodemagicMenu')"
+                        >Login</a
+                    >
+                    <a
+                        href='{{ site.Param "appURL" }}/signup'
+                        id="signup-btn"
+                        class="btn"
+                        onclick="sendGtag('Signup_clicked', 'CodemagicMenu')"
+                        >Sign up</a
+                    >
                 </div>
-                <a id="header-auth-user" href='{{ site.Param "landingURL" }}/apps' data-js-header-auth-user>
+                <a id="header-auth-user" href='{{ site.Param "appURL" }}/apps' data-js-header-auth-user>
                     <div class="label">Return to app</div>
                     <div id="header-user-avatar" data-js-header-user-avatar></div>
                 </a>
-                <div id="header-auth-logout" data-js-header-auth-logout>
-                    Log out
-                </div>
+                <div id="header-auth-logout" data-js-header-auth-logout>Log out</div>
                 <div id="header-auth-loading" data-js-header-auth-loading>
                     <div class="grey-line" data-js-header-auth-loading-grey-line></div>
                     <div class="red-line"></div>
@@ -38,4 +134,4 @@
             </aside>
         </div>
     </div>
-</header>
\ No newline at end of file
+</header>

commit a2e8a2ae070c534ed67c6e071cb329c757defd44
Author: Helina Ariva <helina@nevercode.io>
Date:   Tue Dec 22 17:12:32 2020 +0200

    add note

diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 133933c..09d4bea 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -40,6 +40,10 @@ Read more about [GitHub organizations and OAuth app restrictions](https://help.g
 
 With the GitHub app integration, you have more control over the repositories you share with Codemagic, and instead of write access, only **read** access to your code is required.
 
+{{<notebox>}}
+If you already have a Codemagic account, you can enable the GitHub app integration in your **User settings > Integrations** for your personal account or in **Team settings > Team integrations** for your team.
+{{</notebox>}}
+
 1. Click **GitHub** at [codemagic.io/signup](https://codemagic.io/signup) and select **Selected repositories only** to sign up via Codemagic GitHub app. 
 2. Click **Authorize Codemagic** to verify your identity. You will be authenticated via GitHub without granting access to any of your repositories.
 3. In Codemagic, click **Install GitHub App** on the Applications page. If you already have another repository integration enabled for your personal account, you can find the installation button in **User settings > Integrations > Install GitHub App**. 

commit 671b4ed9a851f63b183be9052d6b76df6b46caa4
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Dec 22 16:52:08 2020 +0200

    Signup (#232)
    
    * Update signup page
    
    * restructure
    
    * update signup options
    
    * fix scss
    
    * fix scss
    
    * add note about disconnecting/reconnecting
    
    * fix link
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 51e4fa2..d5b6b93 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -410,7 +410,7 @@ body {
               pre {
                 background: $grey-bg !important;
               }
-              ol li, 
+              ol li,
               ul li {
                 font-size: .9em;
                 line-height: 22px;
diff --git a/content/building/github-checks.md b/content/building/github-checks.md
index a240bd8..701a351 100644
--- a/content/building/github-checks.md
+++ b/content/building/github-checks.md
@@ -5,7 +5,7 @@ weight: 8
 ---
 
 {{<notebox>}}
-Reporting to GitHub Checks is available for repositories connected via [Codemagic GitHub App](../getting-started/signup/#sign-up-via-codemagic-github-app) integration.
+Reporting to GitHub Checks is available for repositories connected via [Codemagic GitHub App](../getting-started/signup/#selected-repositories-github-app) integration.
 {{</notebox>}}
 
 If you have set up [checks](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-status-checks#checks) in GitHub, your workflow build summary will appear in the Checks tab of the pull request in GitHub. For every build on the branch to be merged, Codemagic will report the build summary along with the status and logs of individual build steps to GitHub. Failed checks will block merging the pull request.
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 4739592..133933c 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -7,13 +7,24 @@ aliases:
   - '../getting-started/github-organization-accounts'
 ---
 
-You can sign up to Codemagic using a GitHub, GitLab or Bitbucket account and then add apps from any self-hosted or cloud-based Git repository, see [Adding repositories](./adding-apps-from-custom-sources).
+You can sign up to Codemagic using a [GitHub](https://github.com/), [Bitbucket](https://bitbucket.org/) or [GitLab](https://about.gitlab.com/) account or a regular email address. After signup, you can add apps from any self-hosted or cloud-based Git repository, see [Adding repositories](./adding-apps-from-custom-sources).
 
-## Sign up via OAuth
+## Sign up via GitHub
 
-Instead of creating a separate account for Codemagic, you can use your [GitHub](https://github.com/), [GitLab](https://about.gitlab.com/) or [Bitbucket](https://bitbucket.org/) account to sign up via OAuth. On signup, Codemagic asks for **read/write** permission to access your repositories and create webhooks for automatic building. You will need to authorize Codemagic in order to connect your GitHub/GitLab/Bitbucket account to your Codemagic account.
+Codemagic offers two types of integration with GitHub.
 
-### GitHub organization accounts
+* Select **All repositories** to sign up via OAuth. This integration requires read/write access to your repositories and is the preferred integration method if you're looking to publish GitHub releases or push tags to the repository.
+
+* Select **Selected repositories only** to sign up using Codemagic GitHub app. This integration requires read access to your code and you can grant access to selected repositories only. Note that you will also need to [install the Codemagic CI/CD GitHub app](https://github.com/apps/codemagic-ci-cd) to share repositories. This is the preferred integration method if you want to use GitHub Checks. Read more about the integration [here](#selected-repositories-github-app).
+
+### All repositories (OAuth)
+
+When authenticating via OAuth, Codemagic asks for **read/write** permission to access your GitHub repositories and create webhooks for automatic building. Write permission is also required for pushing tags to the repository. 
+
+You will need to authorize Codemagic to connect the GitHub account to your Codemagic account. Once you log in to Codemagic, you will see all your GitHub repositories listed.
+
+{{<notebox>}}
+**Can't see your GitHub organization repositories?**
 
 Organizations can restrict access to third-party OAuth applications. As a member, you can request that organization admins authorize the application for use in that organization.
 
@@ -23,42 +34,65 @@ Organizations can restrict access to third-party OAuth applications. As a member
 4. Under **Organization access**, click **Request access** > **Request approval from owners**.
 
 Read more about [GitHub organizations and OAuth app restrictions](https://help.github.com/en/articles/authorizing-oauth-apps#oauth-apps-and-organizations).
+{{</notebox>}}
 
-## Sign up via Codemagic GitHub app
+### Selected repositories (GitHub app)
 
-The GitHub app integration has several advantages over the OAuth integration as you can grant Codemagic access to select repositories and only **read** access to your code is required.
+With the GitHub app integration, you have more control over the repositories you share with Codemagic, and instead of write access, only **read** access to your code is required.
 
-1. Click **Join using GitHub App** at [codemagic.io/signup](https://codemagic.io/signup). You will be authorized via GitHub without granting any access to your repositories. 
-2. In Codemagic, go to **User settings > Integrations** and click **Install GitHub App**. You will be redirected to GitHub to select the repositories you want to grant access to and finish the installation. 
+1. Click **GitHub** at [codemagic.io/signup](https://codemagic.io/signup) and select **Selected repositories only** to sign up via Codemagic GitHub app. 
+2. Click **Authorize Codemagic** to verify your identity. You will be authenticated via GitHub without granting access to any of your repositories.
+3. In Codemagic, click **Install GitHub App** on the Applications page. If you already have another repository integration enabled for your personal account, you can find the installation button in **User settings > Integrations > Install GitHub App**. 
+4. You will be then redirected to GitHub to proceed with installation. Click **Install**.
+5. Next, select the GitHub account or organization where you want to install the app.
+6. Select whether to grant access to **All repositories** or select the repositories to share by choosing **Only select repositories**.
+7. Click **Install & Authorize** (you may be asked to confirm that action by entering your password). After successful installation, you will be redirected back to Codemagic and you can see the status for the GitHub app integration as connected.
 
-You can change repository access settings in Codemagic CI/CD app on GitHub anytime by navigating to **Settings > Applications > Installed GitHub Apps > Codemagic CI/CD**, or by going to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd). Note that the settings you configure in Codemagic CI/CD GitHub app prevail over the GitHub OAuth integration settings.
+#### Configuring accounts and repository access settings
 
-### Revoking access to previously shared repositories
+If you want to install Codemagic GitHub app to another GitHub account/organization or change repository access settings, navigate to **GitHub > Settings > Applications > Installed GitHub Apps > Codemagic CI/CD** or go directly to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd) and click **Configure**. If there are issues with the integration, try disconnecting and connecting the integration in Codemagic. Note that the settings you configure in Codemagic CI/CD GitHub app prevail over the GitHub OAuth integration settings.
 
-If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter. Apps connected through your Bitbucket or GitLab account as well as apps added from custom sources will remain available as is.
+If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter.
 
-### Team apps
+#### Team apps
 
-The restrictions you configure in GitHub app apply to the repositories you share in your Codemagic team only if you don't have the GitHub integration enabled for your team in **Team settings > Team integrations**.
+The repository access settings configured in Codemagic GitHub app apply to the repositories you share in your Codemagic team only if:
 
-If you have enabled the GitHub integration for your team, the connected account makes use of OAuth permissions and the restrictions you configure in GitHub app do not apply.
+* GitHub app integration is connected in **Team settings > Team integrations**.
+* The primary team owner has connected the GitHub app integration for their personal account in **User settings > Integrations** and the team has not enabled the GitHub integration. If the regular GitHub integration is enabled for the team, the connected account makes use of OAuth permissions and the restrictions you configure in GitHub app do not apply.
 
 {{<notebox>}}
 Currently, Codemagic has no way of knowing whether it has access to team apps before the build is started. Due to this, team apps to which you have revoked access in the GitHub app may not appear grayed out in the UI.
 {{</notebox>}}
 
-### Disabling Codemagic CI/CD GitHub app integration
+#### Disabling Codemagic GitHub app integration
 
-You can disable the Codemagic CI/CD GitHub app integration in Codemagic by navigating to **User settings > Integrations > GitHub App** and clicking **Disconnect**. This annuls all settings configured for the Codemagic app in GitHub but won't delete your buid history.
+The Codemagic CI/CD GitHub app integration can be disabled by clicking **Disconnect** in **User settings > Integrations > GitHub App** for your personal account or in **Team settings > Team Integrations > GitHub App** to disconnect it from the team. This annuls all settings configured for the Codemagic app in GitHub but won't delete your buid history.
 
 The GitHub app integration is also disabled when you **uninstall** the Codemagic CI/CD app in GitHub. You can still log in to Codemagic with the GitHub app and see your build history if Codemagic CI/CD remains an **authorized GitHub app** in GitHub. Please note that unless you have other active integrations (e.g. GitHub, Bitbucket or GitLab OAuth integration), your Codemagic account will be deleted in two weeks. You can cancel account deletion by navigating to **User settings > Delete account** and clicking **Cancel deletion** before the two weeks are up.
 
+## Sign up via Bitbucket or GitLab
+
+When authenticating using a Bitbucket or GitLab account via OAuth, Codemagic asks for **read/write** permission to access your repositories and create webhooks for automatic building. Write permission is also required for pushing tags to the repository. 
+
+You will need to authorize Codemagic to connect the Bitbucket/GitLab account to your Codemagic account. Once you log in to Codemagic, you will see all your repositories listed.
+
+## Sign up via email
+
+Enter your email address and name and click **Create account** to get started. Codemagic will then send a six-character authentication key on the provided email address. Enter the authentication key and click **Continue** to verify the email address and finish signup. Note that an unused key expires in 10 minutes. 
+
+You will be sent a new authentication key every time you need to log in again.
+
 ## Connecting several repository integrations
 
-You can connect several repository accounts (GitHub, GitHub app, GitLab, Bitbucket) with one Codemagic account.
+You can connect several repository accounts (GitHub, GitHub app, GitLab, Bitbucket) with one Codemagic account or Codemagic team (read more about managing team integrations [here](../teams/teams/#managing-team-integrations)).
 
 1. Log in to Codemagic with the account you signed up.
 2. Click on your account avatar at the bottom left and open **User settings**.
 3. In the **Integrations** section, click **Connect** next to the account you would like to connect to Codemagic.
 
 Once you have connected another account to your Codemagic account, you can log in to Codemagic with either of these accounts. Email notifications with build status reports will be sent to the email address that's connected with the repository from which you build.
+
+{{<notebox>}}
+Note that if you have connected both GitHub and GitHub App, the GitHub App integration will prevail.
+{{</notebox>}}
\ No newline at end of file
diff --git a/content/teams/teams.md b/content/teams/teams.md
index 7ecc669..fbf4220 100644
--- a/content/teams/teams.md
+++ b/content/teams/teams.md
@@ -62,7 +62,7 @@ The public dashboards feature makes it possible to share team's builds and build
 
 In Team integrations, it is possible to set up integrations to be used with team apps.
 
-By default, team creator's credentials are used to access repository information. It is advisable to configure access to the shared repositories on the team level in the **Team integrations** section. Set up an integration with a service where your repositories are hosted by clicking **Connect** next to its name.
+Unless team owners have connected an integration in team settings, team creator's credentials are used to access repository information. It is advisable to configure access to the shared repositories on the team level in the **Team integrations** section. Set up an integration with a service where your repositories are hosted by clicking **Connect** next to its name.
 
 ## Managing billing
 

commit 3f417b49de60d3cd5f32467063c79cf77526384d
Author: Chris Raastad <craastad@gmail.com>
Date:   Sun Dec 20 17:19:58 2020 +0200

    Fixed misspelled word on iOS code signing page. (#234)

diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index af377bc..be7c4fa 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -62,7 +62,7 @@ Take note of the **Issuer ID** above the table of active keys as well as the **K
 The Apple Developer Portal integration can be enabled in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to conveniently use the same credentials for automatic code signing across different apps and workflows.
 
 {{<notebox >}} 
-Note that users who had previously set up the session-based intgeration have been automatically migrated to use the API-key based setup.
+Note that users who had previously set up the session-based integration have been automatically migrated to use the API-key based setup.
 {{</notebox>}}
 
 1. In the list of available integrations, click the **Connect** button for **Developer Portal**.

commit 70386d163b034015e22090270501acea3cc0c284
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Fri Dec 18 15:56:24 2020 +0200

    Base image update (#233)
    
    * base image update
    
    * Update versions.md
    
    Co-authored-by: Priit Lätt <priit@nevercode.io>

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 94378c1..67ed9b7 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -26,7 +26,7 @@ weight: 3
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `1.22.4 ($HOME/programs/flutter)`
+- flutter `1.22.5 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
index e4508bc..e74f1d5 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/releases-and-versions/versions2.md
@@ -13,7 +13,7 @@ weight: 2
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 37GB)`
+- Disk `322GB (Free Space: 33GB)`
 
 ## Pre-installed tools
 
@@ -22,15 +22,15 @@ weight: 2
 - cocoapods `1.10.0`
 - cordova `10.0.0`
 - curl
-- dart `2.10.3`
-- docker `19.03.13`
-- fastlane `2.167.0`
+- dart `2.10.4`
+- docker `20.10.0`
+- fastlane `2.170.0`
 - firebase `8.10.0`
-- flutter `1.22.4 ($HOME/programs/flutter)`
+- flutter `1.22.5 ($HOME/programs/flutter)`
 - gem `3.1.4`
 - git `2.29.2`
 - gradle `6.1.1`
-- homebrew `2.5.9`
+- homebrew `2.6.2`
 - ionic `5.4.16`
 - jq
 - node `12.18.4`
@@ -47,13 +47,13 @@ weight: 2
 - yq
 - zip
 
-## Xcode 12.2 (12B45b)
+## Xcode 12.3 (12C33)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
 
-Xcode path: `/Applications/Xcode-12.2.app`
+Xcode path: `/Applications/Xcode-12.3.app`
 
-With Xcode `12.2` build version `12B45b` the following runtimes and devices are installed:
+With Xcode `12.3` build version `12C33` the following runtimes and devices are installed:
 
 ### Runtimes
 
@@ -67,7 +67,7 @@ With Xcode `12.2` build version `12B45b` the following runtimes and devices are
 - iOS 13.5
 - iOS 13.6
 - iOS 13.7
-- iOS 14.2
+- iOS 14.3
 - tvOS 11.3
 - tvOS 11.4
 - tvOS 12.0
@@ -75,10 +75,10 @@ With Xcode `12.2` build version `12B45b` the following runtimes and devices are
 - tvOS 13.2
 - tvOS 13.3
 - tvOS 13.4
-- tvOS 14.2
+- tvOS 14.3
 - watchOS 6.2
 - watchOS 7.0
-- watchOS 7.1
+- watchOS 7.2
 
 ### Devices
 
@@ -149,7 +149,7 @@ With Xcode `12.2` build version `12B45b` the following runtimes and devices are
 
 ## Other Xcode versions
 
-- 12.3 (12C5020f) `/Applications/Xcode-12.3.app`
+- 12.2 (12B45b) `/Applications/Xcode-12.2.app`
 - 12.1.1 (12A7605b) `/Applications/Xcode-12.1.1.app`
 - 12.1 (12A7403) `/Applications/Xcode-12.1.app`
 - 12.0.1 (12A7300) `/Applications/Xcode-12.app`

commit 1975e4c84f6aa54e2f1c42ce9e879d05ade9ab08
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Dec 18 12:55:35 2020 +0200

    Update

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 47b3a43..f12c94d 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,6 +4,46 @@ title: Release notes
 weight: 1
 ---
 
+## November 2020
+
+### In-app priority and rollout fraction for Android releases
+
+Using both the UI and `codemagic.yaml`, you can now set two additional parameters for your Android builds that you publish to users through Google Play.
+
+* **In-app priority** determines how strongly your app update will be recommended to existing users. The priority ranges from `0` (default) to `5` (high-priority update). Note that this feature is available only via Google Play API and for apps that support in-app updates.
+* **Rollout fraction** enables you to roll out the release to a percentage of users. Rollout fraction is a value between `0` and `1`, e.g. `0.25` to release to 25% of users.
+
+### Filtering on Builds page and Public dashboards
+
+We have added filtering on the Builds page so you can filter builds based on team, application, workflow and branch.
+
+The Builds page also contains a new feature — **Public dashboards**. Public dashboards make it possible for teams to share the list of team’s builds, release notes (if passed) and build artifacts with people outside Codemagic using a public link (build logs will not be exposed). This is a convenient option for distributing builds to testers or sharing build artifacts with stakeholders.
+See the documentation [here](../publishing-yaml/public-dashboards/).
+
+### YAML file validation before starting a build
+
+We have improved the experience of using the `codemagic.yaml` file. Now you can see syntax errors in the UI before you start the build. We have included more information about the format, invalid keys or values in the error message to help you fix it without running builds. If there are issues with the YAML file, the build is not started.
+
+### Billing page
+
+There is now a Billing page for managing billing across teams and your personal account. This is where you can enable billing, see your usage, view your invoices and change the card used for payment. Read more about managing billing in Codemagic [here](../billing/billing).
+
+### Billing teams based on active users
+
+Starting from November 1, there are no more free minutes for teams and we count every user that triggers builds. Read more about this change on our [blog](https://blog.codemagic.io/pricing-changes-for-teams/). See how we count users in teams [here](../teams/users). 
+
+## October 2020
+
+### Email signup
+
+We have added the option to authenticate with Codemagic using email. Both on signup and on login, Codemagic sends users a temporary six-character authentication key that they are required to enter in the browser.
+
+## September 2020
+
+### Global Save button in Flutter app settings
+
+Instead of having to save your settings in each section, there is now one global **Save** button to save the changes you have made in your workflow. We’ll notify you if you have unsaved changes and point you to any errors there might be when saving the configuration. This helps to ensure that none of your changes remain unsaved by accident.
+
 ## August 2020
 
 ### Using App Store Connect API for Apple Developer Portal integration

commit 85caa84d0b97f0ee786d2cd54e1a3fc2100cf396
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Dec 15 16:19:07 2020 +0200

    the same font size for a list inside a notice as other notice content

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 0e50578..51e4fa2 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -410,6 +410,11 @@ body {
               pre {
                 background: $grey-bg !important;
               }
+              ol li, 
+              ul li {
+                font-size: .9em;
+                line-height: 22px;
+              }
             }
 
             blockquote {

commit 4eed10974446b7d73315e416297e658ab2bf9497
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Mon Dec 14 12:39:00 2020 +0200

    Document GitHub checks (#228)
    
    * change weights
    
    * change weights
    
    * Add docs about GitHub checks
    
    * editing
    
    * Editing
    
    * editing
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index 28d0927..f9dfd06 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -1,7 +1,7 @@
 ---
 description: If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully.
 title: Accessing private dependencies and Git submodules
-weight: 4
+weight: 1
 ---
 
 If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully.
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 21833d1..f693ce8 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,6 +1,6 @@
 ---
 title: Build versioning
-weight: 8
+weight: 5
 ---
 
 If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using the environment variables that Codemagic exports during the build. There are two environment variables that count the number of builds:
diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index 68280be..8a64c68 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -1,7 +1,7 @@
 ---
 title: Encrypting sensitive data
 description: Encrypt your credentials and key files
-weight: 6
+weight: 3
 ---
 
 If you wish to store sensitive information, such as login details or API keys, in environment variables or in your configuration file, it is important to encrypt the data so as to not expose it. You can easily encrypt values and files using the encryption interface in Codemagic.
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 43bebe2..2927676 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -4,7 +4,7 @@ description:
   not want to store in the repository. You can also use Codemagic read-only environment
   variables to customize your builds.
 title: Environment variables
-weight: 7
+weight: 2
 ---
 
 Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
diff --git a/content/building/github-checks.md b/content/building/github-checks.md
new file mode 100644
index 0000000..a240bd8
--- /dev/null
+++ b/content/building/github-checks.md
@@ -0,0 +1,23 @@
+---
+title: GitHub Checks
+description: Report PR build statuses to GitHub as checks
+weight: 8
+---
+
+{{<notebox>}}
+Reporting to GitHub Checks is available for repositories connected via [Codemagic GitHub App](../getting-started/signup/#sign-up-via-codemagic-github-app) integration.
+{{</notebox>}}
+
+If you have set up [checks](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-status-checks#checks) in GitHub, your workflow build summary will appear in the Checks tab of the pull request in GitHub. For every build on the branch to be merged, Codemagic will report the build summary along with the status and logs of individual build steps to GitHub. Failed checks will block merging the pull request.
+
+Checks can be set up in GitHub when configuring [branch protection rules](https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/configuring-protected-branches) for a repository. 
+
+1. In Github, open the **Settings** of your repository.
+2. In the left menu, click **Branches**.
+3. Click **Add rule** to add a new branch protection rule.
+4. Enter the name of the branch you want to protect in the **Branch name pattern** field. For example, if you want to require checks on pull requests to the master branch, enter `master`.
+5. Under **Protect matching branches**, check **Require status checks to pass before merging**.
+6. Select the name of the workflow to add it as a check. Note that the workflow name is listed only if you have already built this workflow in Codemagic.
+7. Click **Save changes**.
+
+Note that it's not currently possible to rerun failed checks (builds) from GitHub UI.
diff --git a/content/building/machine-type.md b/content/building/machine-type.md
index a1e0a99..cbc3a0f 100644
--- a/content/building/machine-type.md
+++ b/content/building/machine-type.md
@@ -1,7 +1,7 @@
 ---
 description: Choose between Mac Mini or Mac Pro
 title: Build machine type
-weight: 11
+weight: 6
 ---
 
 Codemagic currently offers two types of machines for running builds: Mac mini (macOS standard VM, default) and Mac Pro (macOS premium VM). Specifications for these machines are available [here](../releases-and-versions/versions/#hardware). 
diff --git a/content/building/running-locally.md b/content/building/running-locally.md
index 7fad65a..987ff34 100644
--- a/content/building/running-locally.md
+++ b/content/building/running-locally.md
@@ -1,7 +1,7 @@
 ---
 title: Using Codemagic CLI tools locally
 description: Using Codemagic CLI tools locally or in other environments.
-weight: 12
+weight: 9
 aliases: 
     - '../yaml/runninglocally'
 ---
diff --git a/content/building/timeout.md b/content/building/timeout.md
index 02c2985..c1521c8 100644
--- a/content/building/timeout.md
+++ b/content/building/timeout.md
@@ -1,7 +1,7 @@
 ---
 description: Limit the maximum duration of builds
 title: Build timeout settings
-weight: 9
+weight: 7
 ---
 
 By default, Codemagic builds are set to time out after 60 minutes. You can decrease or increase the maximum build duration **per workflow**.
diff --git a/content/building/webhooks.md b/content/building/webhooks.md
index 901df74..04cb696 100644
--- a/content/building/webhooks.md
+++ b/content/building/webhooks.md
@@ -1,7 +1,7 @@
 ---
 title: Webhooks
 description: Set up webhooks for automatic builds
-weight: 10
+weight: 4
 ---
 
 Webhooks are necessary in order to be able to trigger builds automatically in response to events in the repository.

commit 4d54e1f64428510298178719e9c9d17259853e92
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Fri Dec 11 22:17:47 2020 +0200

    Google play updates (#231)
    
    * Update publishing-to-google-play.md
    
    * Update distribution.md
    
    * Update distribution.md
    
    * Update distribution.md
    
    * Update publishing-to-google-play.md

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 49e6881..976778f 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -68,11 +68,17 @@ publishing:
 
 Codemagic enables you to automatically publish your app to the `internal`, `alpha`, `beta` and `production` tracks on Google Play. In order to do so, you will need to set up a service account in Google Play Console and add the `JSON` key file to your Codemagic configuration file, see how to [set up a service account](../knowledge-base/google-play-api/).
 
+If your application supports [in-app updates](https://developer.android.com/guide/playcore/in-app-updates) Codemagic allows setting the update priority. Otherwise, `in_app_update_priority` can be omitted or set to `0`.
+
+In addition, Codemagic supports [staged releases](https://support.google.com/googleplay/android-developer/answer/6346149?hl=en), allowing users to choose which fraction of the testers or users get access to the application. To release to everyone, omit `rollout_fraction` from codemagic.yaml. 
+
 ```yaml
 publishing:
   google_play:                        # For Android app
     credentials: Encrypted(...)       # JSON key file for Google Play service account
     track: alpha                      # Name of the track: internal, alpha, beta, production, internal app sharing
+    in_app_update_priority: 3         # Priority of the release (only set if in-app updates are supported): integer in range [0, 5]
+    rollout_fraction: 0.25            # Rollout fraction (set only if releasing to a fraction of users): value between (0, 1)
 ```
 
 {{<notebox>}}
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index 63c5bbb..c60ead2 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -30,5 +30,7 @@ The very first version of the app must be added to Google Play manually. You can
    - Alpha --- publish for testing with a small group of trusted users
    - Beta --- publish for testing to a wider set of users
    - Production --- release the app to production
-5. If you want to publish the .apk even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
-6. Select **Enable Google Play publishing** at the top of the section to enable publishing.
+5. If your application supports [in-app updates](https://developer.android.com/guide/playcore/in-app-updates), set the desired priority. If not, select **Default**.
+6. In case you want to release a [staged version](https://support.google.com/googleplay/android-developer/answer/6346149?hl=en) of your application, which reaches only a fraction of users, set **Rollout fraction** to a value between 0 and 1. To release to everyone, leave the value empty.
+7. If you want to publish the .apk even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
+8. Select **Enable Google Play publishing** at the top of the section to enable publishing.

commit 404f59caddc1dca51781c7ae6ac643710fea513b
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Fri Dec 11 12:21:39 2020 +0200

    fix multiline script (#230)
    
    * fix multiline script
    
    * replace with single line command
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/getting-started/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
index 5f86a28..f97d9f4 100644
--- a/content/getting-started/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -17,12 +17,7 @@ Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/
 For building an unsigned iOS app (.app), you need to run the following command in the scripts section:
 
 ```yaml
-scripts:
-  - xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" \
-    -scheme "MyScheme" \
-    CODE_SIGN_INDENTITY="" \
-    CODE_SIGNING_REQUIRED=NO \
-    CODE_SIGNING_ALLOWED=NO
+- xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" -scheme "MyScheme" CODE_SIGN_INDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
 ```
 
 If you don't have a workspace, use `-project "MyXcodeProject.xcodeproj"` instead of the `-workspace "MyXcodeWorkspace.xcworkspace"` option.

commit a79f9e06a1f711f200fb2ce3b65613107f6fbfe7
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu Dec 10 18:24:13 2020 +0200

    note is not needed anymore (#229)

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index 5490551..28d0927 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -16,10 +16,6 @@ If your project requires accessing any private Git submodules or dependencies, y
     -----END OPENSSH PRIVATE KEY-----
     ```
 
-    {{<notebox>}}
-Note that the `-----END OPENSSH PRIVATE KEY-----` line needs to be followed by an empty line for the key to be usable.
-{{</notebox>}}
-
 All environment variables whose name has the suffix `_SSH_KEY` will be automatically added to the SSH agent and will be ready for use during the whole build process. Check the `Preparing build machine` step in build logs to verify that the key has been successfully added to the SSH agent.
 
 If you wish to use a **custom** environment variable name without the suffix `_SSH_KEY`, add the following **post-clone** script to add the key to the SSH agent.
@@ -30,4 +26,4 @@ echo "${CUSTOM_KEY_NAME}" > /tmp/ssh_key
 chmod 600 /tmp/ssh_key
 eval `ssh-agent -s`
 ssh-add /tmp/ssh_key
-```
\ No newline at end of file
+```

commit 154dda2cc761eb8dd1cb8961608959e87cd3dd6d
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Dec 10 17:10:52 2020 +0200

    Create google_play_api.md (#227)
    
    * Create google_play_api.md
    
    * Update and rename google_play_api.md to google-play-api.md
    
    * service account images
    
    * Editing
    
    * Update google-play-api.md
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/knowledge-base/google-play-api.md b/content/knowledge-base/google-play-api.md
new file mode 100644
index 0000000..6fe313f
--- /dev/null
+++ b/content/knowledge-base/google-play-api.md
@@ -0,0 +1,69 @@
+---
+title: Configuring Google Play API access
+description: How to set up a Google Play service account for Codemagic
+weight: 5
+---
+
+In order to allow Codemagic publish applications to Google Play, it is necessary to set up access using Google Play API. 
+
+## Setting up the service account on Google Play and Google Cloud Platform
+
+1. In Google Play Console, navigate to **Settings > API access** and click **Create new service account**.<br><br>
+![Google play start](../uploads/google_play_start.png)
+
+2. This will lead you to the Google Cloud Platform where you can start creating your service account by clicking **+ Create service account** at the top of the page.<br><br>
+![Google cloud platform](../uploads/google_cloud_start.png)
+
+3. In step 1, fill in the **Service account details** and click **Create**. The name of the service account will allow you to identify it among other service accounts you may have created.
+
+4. In step 2, click the **Select a role** dropdown menu and choose **Project > Editor** as the role.<br><br>
+![Google cloud editor](../uploads/google_cloud_two.png)
+
+5. In step 3, you can leave the fields blank and click **Done**.
+
+6. In the list of created service accounts, identify the account you have just created and click on the menu in the **Actions** column, then click **Create key**.<br><br>
+![Google cloud key](../uploads/google_cloud_three.png)
+
+7. Make sure that the key type is set to `JSON` and click **Create**. Save the key file in a secure location to have it available.<br><br>
+![Google cloud json](../uploads/google_cloud_four.png)
+
+8. Navigate back to **Google Play Console > Settings > API access** and click **Grant access** next to the created account.<br><br>
+![Google play grant](../uploads/google_play_two.png)
+
+9. On the **App permissions** tab, add the applications you wish to grant access to.<br><br>
+![Google play selected](../uploads/google_play_four.png)
+
+10. Go with the default settings for app permissions and click **Apply**.<br><br> 
+![Google play apply](../uploads/google_play_five.png)
+
+11. On the **Account permissions** tab, leave everything as is (there is no need to grant the service account **Admin** access).<br><br>
+![Google play all](../uploads/google_play_three.png)
+
+12. Finally, click **Invite user** to finish setting up the service account on Google Play.
+
+## Using the service account with codemagic.yaml
+
+In order to set up publishing to Google Play, you need to encrypt the contents of the service account `JSON` key file and add the encrypted value to the Codemagic configuration file.
+
+1. Navigate to your app settings in the Codemagic UI and click **Encrypt environment variables** at the bottom of the screen.<br><br>
+![Service account encrypt yaml](../uploads/google_play_yaml_one.png)
+
+2. Upload or drop the `JSON` key file to the encryption interface and copy the encrypted value.
+![Service account encrypt copy](../uploads/google_play_yaml_two.png)
+
+3. In your configuration file, set the encrypted value to the `credentials` variable under `google_play` publishing and commit the changes.
+```yaml
+workflows:
+    publish-workflow:
+        name: Publish to Google Play
+        ...
+        publishing:
+            google_play:
+                credentials: Encrypted(...)
+                track: alpha # specify the Google Play destination track
+```
+
+
+## Using the service account with Flutter UI projects
+
+When configuring Flutter projects through the UI, the service account `JSON` key file must be uploaded to Codemagic in Google Play publishing settings. Follow the instructions [here](../publishing/publishing-to-google-play).
diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 3ac08e2..49e6881 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -66,7 +66,7 @@ publishing:
 
 ### Google Play
 
-Codemagic enables you to automatically publish your app to the `internal`, `alpha`, `beta` and `production` tracks on Google Play. In order to do so, you will need to set up a service account in Google Play Console and add the JSON key file to your Codemagic configuration file, see how to [create a service account](#creating-a-service-account-in-google-play-console).
+Codemagic enables you to automatically publish your app to the `internal`, `alpha`, `beta` and `production` tracks on Google Play. In order to do so, you will need to set up a service account in Google Play Console and add the `JSON` key file to your Codemagic configuration file, see how to [set up a service account](../knowledge-base/google-play-api/).
 
 ```yaml
 publishing:
@@ -79,26 +79,6 @@ publishing:
 The proper way to add your keys in `codemagic.yaml` is to copy the contents of the key file and [encrypt](../building/encrypting) it. Then add the encrypted value into the configuration file.
 {{</notebox>}}
 
-#### Creating a service account in Google Play Console
-
-1. In Google Play Console, navigate to **Settings > API access**.
-
-2. Click on the **Create Service Account** button and follow the link to **Google API Console**.
-
-3. In Google API Console, click on the **Create Service Account** button.
-
-4. In step 1, fill in the **Service account details** and click **Create**. The name of the service account will allow you to identify it among other service accounts you may have created.
-
-5. In step 2, click the **Select a role** dropdown menu and choose **Project > Editor** as the role.
-
-6. In step 3, you can leave the fields blank and click **Done**.
-
-7. In the list of created service accounts, identify the account you have just created and click on the menu in the **Actions** column.
-
-8. Click **Create key** and select **JSON** as the key type.
-
-9. Click **Create** and save the key file in a secure location to have it available.
-
 ### App Store Connect
 
 Codemagic enables you to automatically publish your iOS app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store.
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index 5b15d9a..63c5bbb 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -8,7 +8,7 @@ Codemagic enables you to automatically publish your app to the **internal**, **a
 
 ## Requirements
 
-You will need a **service account in Google Play Console** to obtain the **JSON credentials file**. See how to do that [here](../publishing-yaml/distribution#creating-a-service-account-in-google-play-console). In addition, you must build the app in **release mode** and set up **Android code signing**.
+You will need a **service account in Google Play Console** to obtain the **JSON credentials file**. See how to do that [here](../knowledge-base/google-play-api/). In addition, you must build the app in **release mode** and set up **Android code signing**.
 
 Before releasing the app to Google Play, make sure that it meets the [Google Play's best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
 
diff --git a/content/uploads/google_cloud_four.png b/content/uploads/google_cloud_four.png
new file mode 100644
index 0000000..92ce51e
Binary files /dev/null and b/content/uploads/google_cloud_four.png differ
diff --git a/content/uploads/google_cloud_start.png b/content/uploads/google_cloud_start.png
new file mode 100644
index 0000000..28c8251
Binary files /dev/null and b/content/uploads/google_cloud_start.png differ
diff --git a/content/uploads/google_cloud_three.png b/content/uploads/google_cloud_three.png
new file mode 100644
index 0000000..9092b11
Binary files /dev/null and b/content/uploads/google_cloud_three.png differ
diff --git a/content/uploads/google_cloud_two.png b/content/uploads/google_cloud_two.png
new file mode 100644
index 0000000..5a68064
Binary files /dev/null and b/content/uploads/google_cloud_two.png differ
diff --git a/content/uploads/google_play_finish.png b/content/uploads/google_play_finish.png
new file mode 100644
index 0000000..cd9163d
Binary files /dev/null and b/content/uploads/google_play_finish.png differ
diff --git a/content/uploads/google_play_five.png b/content/uploads/google_play_five.png
new file mode 100644
index 0000000..e6c5f67
Binary files /dev/null and b/content/uploads/google_play_five.png differ
diff --git a/content/uploads/google_play_four.png b/content/uploads/google_play_four.png
new file mode 100644
index 0000000..a9cb0e2
Binary files /dev/null and b/content/uploads/google_play_four.png differ
diff --git a/content/uploads/google_play_start.png b/content/uploads/google_play_start.png
new file mode 100644
index 0000000..b7bdfc7
Binary files /dev/null and b/content/uploads/google_play_start.png differ
diff --git a/content/uploads/google_play_three.png b/content/uploads/google_play_three.png
new file mode 100644
index 0000000..5ed697d
Binary files /dev/null and b/content/uploads/google_play_three.png differ
diff --git a/content/uploads/google_play_two.png b/content/uploads/google_play_two.png
new file mode 100644
index 0000000..d61ddb7
Binary files /dev/null and b/content/uploads/google_play_two.png differ
diff --git a/content/uploads/google_play_ui.png b/content/uploads/google_play_ui.png
new file mode 100644
index 0000000..3c5862c
Binary files /dev/null and b/content/uploads/google_play_ui.png differ
diff --git a/content/uploads/google_play_yaml_one.png b/content/uploads/google_play_yaml_one.png
new file mode 100644
index 0000000..904fd2c
Binary files /dev/null and b/content/uploads/google_play_yaml_one.png differ
diff --git a/content/uploads/google_play_yaml_three.png b/content/uploads/google_play_yaml_three.png
new file mode 100644
index 0000000..001d814
Binary files /dev/null and b/content/uploads/google_play_yaml_three.png differ
diff --git a/content/uploads/google_play_yaml_two.png b/content/uploads/google_play_yaml_two.png
new file mode 100644
index 0000000..d95d155
Binary files /dev/null and b/content/uploads/google_play_yaml_two.png differ

commit 2b275c696aac6febbf6aa7bd605760eba4de7e14
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Dec 10 17:02:51 2020 +0200

    Update signing-ios.md

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index 94b1e32..c5bc6d2 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -89,7 +89,7 @@ scripts:
   ... your build commands
 ```
 
-Based on the specified bundle ID and [provisioning profile type](<(https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store)>), Codemagic will fetch or create the relevant provisioning profile and certificate to code sign the build.
+Based on the specified bundle ID and [provisioning profile type](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store), Codemagic will fetch or create the relevant provisioning profile and certificate to code sign the build.
 
 ## Manual code signing
 

commit 844fdc7e796757b680e14eaa947a24e34c80a29b
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Thu Dec 10 16:59:56 2020 +0200

    Fix URL reference

diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index 2e0f9e5..94b1e32 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -89,7 +89,7 @@ scripts:
   ... your build commands
 ```
 
-Based on the specified bundle ID and [provisioning profile type](<(https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store)>), Codemagic will fetch or create the relevant provisioning profile and certificate to code sign the build.
+Based on the specified bundle ID and [provisioning profile type](<(https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store)>), Codemagic will fetch or create the relevant provisioning profile and certificate to code sign the build.
 
 ## Manual code signing
 

commit 8903e32e5a3ee2fbfa7007897f5eb647da4de810
Author: Helina Ariva <helina@nevercode.io>
Date:   Thu Dec 10 10:55:39 2020 +0200

    editing

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 6764d6b..3ac08e2 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -38,7 +38,7 @@ To set up publishing to Slack, you first need to connect your Slack workspace in
 
 ![List of integrations](../uploads/slack_connect.png)
 
-Click **Connect** next to the Slack integration. You will be then redirected to an authorization page. Review the requested permissions and click **Allow** to give Codemagic Slack app access to your Slack workspace and allow it post build status updates and build artifacts (see also Codemagic's [privacy policy](https://codemagic.io/privacy-policy/)).
+Click **Connect** next to the Slack integration. You will be then redirected to an authorization page. Review the requested permissions and click **Allow** to give Codemagic Slack app access to your Slack workspace and allow it post build status updates and build artifacts (see also our [privacy policy](https://codemagic.io/privacy-policy/)).
 
 ![Authorization page](../uploads/slack_allow.png)
 

commit a0f18fc02a31f44bf659ede86cb47dba924a2a06
Author: Helina Ariva <helina@nevercode.io>
Date:   Thu Dec 10 10:38:03 2020 +0200

    Add privacy policy link to Slack doc

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 4bcf007..6764d6b 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -38,7 +38,7 @@ To set up publishing to Slack, you first need to connect your Slack workspace in
 
 ![List of integrations](../uploads/slack_connect.png)
 
-Click **Connect** next to the Slack integration. You will be then redirected to an authorization page. Review the requested permissions and click **Allow** to give Codemagic Slack app access to your Slack workspace and allow it post build status updates and build artifacts.
+Click **Connect** next to the Slack integration. You will be then redirected to an authorization page. Review the requested permissions and click **Allow** to give Codemagic Slack app access to your Slack workspace and allow it post build status updates and build artifacts (see also Codemagic's [privacy policy](https://codemagic.io/privacy-policy/)).
 
 ![Authorization page](../uploads/slack_allow.png)
 

commit ff8b657dd370b7232efe6231e2a3099cfef85378
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Dec 9 16:23:36 2020 +0200

    Create status-badges.md (#225)
    
    * Create status-badges.md
    
    * Update status-badges.md
    
    * Update status-badges.md
    
    * Update status-badges.md
    
    editing
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/publishing-yaml/status-badges.md b/content/publishing-yaml/status-badges.md
new file mode 100644
index 0000000..d435cdf
--- /dev/null
+++ b/content/publishing-yaml/status-badges.md
@@ -0,0 +1,35 @@
+---
+title: Build status badges
+description: Use Codemagic status badges to display the status of the build
+weight: 3
+aliases:
+---
+
+Adding Codemagic status badges to repositories helps to keep the latest build status visible. The build status badge is workflow-specific, and displays whether the build passed or failed. 
+
+## Adding status badges to your repository
+
+The build status badge URL can be constructed as following: `https://api.codemagic.io/apps/<app-id>/<workflow-id>/status_badge.svg`
+
+1. To substitute `<app-id>`, navigate to your application in the Codemagic UI and copy the ID after `https://codemagic.io/app/`.
+2. In the URL, replace `<workflow-id>` with the ID of the workflow whose build status you want to display.
+
+Based on the following YAML example, the right substitute for `<workflow-id>` would be `release-workflow`.
+```yaml
+workflows:
+  release-workflow:
+    name: Release
+```
+
+Thus, the final URL should look something like `https://api.codemagic.io/apps/5fcd4dc959d78f8de3d0af97/release-workflow/status_badge.svg`.
+
+To use the build status badge with markdown, e.g. when adding it to a repository's README, it should be formatted in the following way:
+```
+[![Codemagic build status](https://api.codemagic.io/apps/<app-id>/<workflow-id>/status_badge.svg)](https://codemagic.io/apps/<app-id>/<workflow-id>/latest_build)
+```
+
+{{<notebox>}}
+
+If builds are set to public (or the user has logged in and has access to the build), then clicking on the link will open up the build page on Codemagic.
+
+{{</notebox>}}

commit 2f8e2770d89a3379a9648f8c454341316fcc46d7
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Dec 9 16:18:35 2020 +0200

    Add $FCI_KEYSTORE_PATH

diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index 60c382d..451d76f 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -121,6 +121,7 @@ workflows:
     instance_type: mac_pro
     environment:
       vars:
+        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
         FCI_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
         FCI_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
         FCI_KEY_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
@@ -142,12 +143,12 @@ workflows:
         script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
       - name: Set up key.properties file for code signing
         script: |
-          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+          echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
           cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
           storePassword=$FCI_KEYSTORE_PASSWORD
           keyPassword=$FCI_KEY_PASSWORD
           keyAlias=$FCI_KEY_ALIAS
-          storeFile=/tmp/keystore.keystore
+          storeFile=$FCI_KEYSTORE_PATH
           EOF
       - name: Build Android app
         script: cd android && ./gradlew assembleRelease

commit c72ddb3877e99f3fe389883fe18f6c07d31896da
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Dec 9 16:17:20 2020 +0200

    Add FCI_KEYSTORE_PATH to script

diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index 20cdab3..eaf7ae8 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -53,9 +53,10 @@ workflows:
   android-workflow:
     name: Android Workflow
     max_build_duration: 60
-    instance_type: mac_pro
+    instance_type: mac_mini
     environment:
       vars:
+        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
         FCI_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
         FCI_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
         FCI_KEY_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
@@ -75,12 +76,12 @@ workflows:
         script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/local.properties"
       - name: Set up key.properties file for code signing
         script: |
-          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+          echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
           cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
           storePassword=$FCI_KEYSTORE_PASSWORD
           keyPassword=$FCI_KEY_PASSWORD
           keyAlias=$FCI_KEY_ALIAS
-          storeFile=/tmp/keystore.keystore
+          storeFile=$FCI_KEYSTORE_PATH
           EOF
       - name: Build Android app
         script: ./gradlew assembleRelease

commit 7cedc17fbca4a7a7ad61b37244861863b8f9efc8
Author: Souvik Biswas <sbis1999@gmail.com>
Date:   Wed Dec 9 19:05:57 2020 +0530

    Remove branch_patterns as it is in different level (#224)

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index cebf1a0..d3bf157 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -104,7 +104,6 @@ workflows:
     environment:
     cache:
     triggering:
-    branch_patterns:
     scripts:
     artifacts:
     publishing:

commit 69aed94c228e3d90e5ef8f3d0d585bad18421fb2
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Tue Dec 8 16:55:57 2020 +0200

    Update signing-android.md

diff --git a/content/code-signing-yaml/signing-android.md b/content/code-signing-yaml/signing-android.md
index 7d97cbd..91e50e2 100644
--- a/content/code-signing-yaml/signing-android.md
+++ b/content/code-signing-yaml/signing-android.md
@@ -46,7 +46,8 @@ This example shows how to set up code signing using Gradle.
 2. Add your keystore and keystore details in the [`environment`](../getting-started/yaml#environment) section of the configuration file. [Encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password-protected), key alias and key alias password (if key alias is password-protected) and set the encrypted values to the following environment variables. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build.
 
 ```yaml
-environment:  
+environment:
+  FCI_KEYSTORE_PATH: /tmp/keystore.keystore
   FCI_KEYSTORE: Encrypted(...)
   FCI_KEYSTORE_PASSWORD: Encrypted(...)
   FCI_KEY_ALIAS: Encrypted(...)
@@ -59,30 +60,10 @@ environment:
 scripts:
   - name: Build Android
     script: |
-      export FCI_KEYSTORE_PATH="/tmp/keystore.keystore"
       echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
       cd android && ./gradlew assembleRelease
 ```
 
-Pay attention to the fact that scripts are executed as separate processes and environment variables defined inside one script won't be accessible in another script. Therefore, if you want to access your `FCI_KEYSTORE_PATH` variable from multiple scripts, it makes sense to define it in the `environment` section.
-
-```yaml
-environment:  
-  FCI_KEYSTORE_PATH: /tmp/keystore.keystore
-  FCI_KEYSTORE: Encrypted(...)
-  FCI_KEYSTORE_PASSWORD: Encrypted(...)
-  FCI_KEY_ALIAS: Encrypted(...)
-  FCI_KEY_PASSWORD: Encrypted(...)
-...
-scripts:
-  ...
-  - name: Export keystore
-    script: echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
-  - name: Build Android
-    script: cd android && ./gradlew assembleRelease
-  ...
-```
-
 ## Signing Android apps using key.properties
 
 The following templates show code signing using `key.properties`.
@@ -107,6 +88,7 @@ The following templates show code signing using `key.properties`.
 In order to do code signing [encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password protected), key alias and key alias password (if key alias is password protected) and set the encrypted values to the following environment variables:
 
 ```yaml
+FCI_KEYSTORE_PATH: /tmp/keystore.keystore
 FCI_KEYSTORE: Encrypted(...)
 FCI_KEYSTORE_PASSWORD: Encrypted(...)
 FCI_KEY_ALIAS: Encrypted(...)
@@ -118,11 +100,11 @@ Use the following script:
 ```yaml
 - name: Set up key.properties
   script: |
-    echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+    echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
     cat >> "$FCI_BUILD_DIR/project_directory/android/key.properties" <<EOF
     storePassword=$FCI_KEYSTORE_PASSWORD
     keyPassword=$FCI_KEY_PASSWORD
     keyAlias=$FCI_KEY_ALIAS
-    storeFile=/tmp/keystore.keystore
+    storeFile=$FCI_KEYSTORE_PATH
     EOF
 ```

commit 00b66e645528616b2e853b6d77e043f05cf379cd
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Dec 8 14:41:01 2020 +0200

    Slack (#226)
    
    * Update Slack integration
    
    * Update connecting Slack workspace
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 454cf61..4bcf007 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -34,7 +34,17 @@ Integrate Slack publishing into your Codemagic build pipeline to get notified wh
 
 #### Connecting your Slack workspace
 
-To set up publishing to Slack, you first need to connect your Slack workspace in **User settings > Integrations > Slack** for personal apps and in **Teams > Your_team > Team integrations > Slack** for team apps. Click **Connect** next to the Slack integration. You will be then redirected to an authorization page. Review the requested permissions and click **Allow** to give Codemagic Slack app access to your Slack workspace and allow it post build status updates and build artifacts.
+To set up publishing to Slack, you first need to connect your Slack workspace in **User settings > Integrations > Slack** for personal apps and in **Teams > Your_team > Team integrations > Slack** for team apps. 
+
+![List of integrations](../uploads/slack_connect.png)
+
+Click **Connect** next to the Slack integration. You will be then redirected to an authorization page. Review the requested permissions and click **Allow** to give Codemagic Slack app access to your Slack workspace and allow it post build status updates and build artifacts.
+
+![Authorization page](../uploads/slack_allow.png)
+
+After you have successfully authorized Codemagic and connected your workspace, you will be redirected back to Codemagic. You can disconnect your Slack workspace anytime by clicking **Disconnect**.
+
+![Slack integration is enabled](../uploads/slack_connected.png)
 
 #### Configuring Slack publishing
 
diff --git a/content/uploads/slack_allow.png b/content/uploads/slack_allow.png
new file mode 100644
index 0000000..7baf18a
Binary files /dev/null and b/content/uploads/slack_allow.png differ
diff --git a/content/uploads/slack_connect.png b/content/uploads/slack_connect.png
new file mode 100644
index 0000000..6e8dda4
Binary files /dev/null and b/content/uploads/slack_connect.png differ
diff --git a/content/uploads/slack_connected.png b/content/uploads/slack_connected.png
new file mode 100644
index 0000000..f187380
Binary files /dev/null and b/content/uploads/slack_connected.png differ

commit 25c3ad320add057ddcea9fd1f0bcc87a628afbfd
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Dec 3 17:18:15 2020 +0200

    Update Slack integration (#223)
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 4892f3a..454cf61 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -30,11 +30,19 @@ publishing:
 
 ### Slack
 
-In oder to set up publishing to Slack, you first need to connect the Slack workspace in **User settings > Integrations > Slack** for personal applications and in **Teams > Your_team > Team integrations > Slack** for team apps.
+Integrate Slack publishing into your Codemagic build pipeline to get notified when a build starts and receive build artifacts or logs when the build finishes.
 
-You can then define the channel where build notifications and artifacts will be sent to. If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the specified channel. If the build fails, a link to the build logs is published. When you set `notify_on_build_start` to `true`, the channel will be notified when a build starts.
+#### Connecting your Slack workspace
 
-If you don't want to receive a slack notification on build success or failure, you can set `success` to `false` or `failure` to `false` accordingly.
+To set up publishing to Slack, you first need to connect your Slack workspace in **User settings > Integrations > Slack** for personal apps and in **Teams > Your_team > Team integrations > Slack** for team apps. Click **Connect** next to the Slack integration. You will be then redirected to an authorization page. Review the requested permissions and click **Allow** to give Codemagic Slack app access to your Slack workspace and allow it post build status updates and build artifacts.
+
+#### Configuring Slack publishing
+
+The Slack channel for publishing is configured separately for each workflow in the `publishing` section of `codemagic.yaml` (refer [here](../publishing/email-and-slack-notifications/#slack) if you're configuring app settings in the UI). 
+
+If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the specified channel. If the build fails, a link to the build logs is published. When you set `notify_on_build_start` to `true`, the channel will be notified when a build starts.
+
+If you don't want to receive a Slack notification on build success or failure, you can set `success` to `false` or `failure` to `false` accordingly.
 
 ```yaml
 publishing:

commit 596ba794bdfa9f844a005d9f256de9a101d4de23
Author: Helina Ariva <helina@nevercode.io>
Date:   Tue Dec 1 11:25:18 2020 +0200

    Add internal app sharing as a Google Play track

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 08a97cf..4892f3a 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -54,7 +54,7 @@ Codemagic enables you to automatically publish your app to the `internal`, `alph
 publishing:
   google_play:                        # For Android app
     credentials: Encrypted(...)       # JSON key file for Google Play service account
-    track: alpha                      # Name of the track: internal, alpha, beta, production
+    track: alpha                      # Name of the track: internal, alpha, beta, production, internal app sharing
 ```
 
 {{<notebox>}}

commit c36c8352b8f3a318b99aced12f87a021b256e45e
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Nov 27 18:57:55 2020 +0200

    Fix link

diff --git a/content/teams/teams.md b/content/teams/teams.md
index c94444c..7ecc669 100644
--- a/content/teams/teams.md
+++ b/content/teams/teams.md
@@ -56,7 +56,7 @@ Users that have triggered builds can be invited to the team by clicking **Add to
 
 ## Public dashboards
 
-The public dashboards feature makes it possible to share team's builds and build artifacts via a public link. Read more about this feature [here](./public-dashboards).
+The public dashboards feature makes it possible to share team's builds and build artifacts via a public link. Read more about this feature [here](../publishing-yaml/public-dashboards).
 
 ## Managing team integrations
 

commit 1aeab70fafbb7841d00284e69851e17146fe845d
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Fri Nov 27 17:17:22 2020 +0200

    update env of deploy.yml

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index c887991..636e6b3 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -9,7 +9,7 @@ jobs:
   build:
     runs-on: ubuntu-latest
     env:
-      AWS_ACCESS_KEY_ID: AKIAVIULH47FJUBBUV5U
+      AWS_ACCESS_KEY_ID: AKIAVIULH47FMHXU2IXE
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     steps:
       - uses: actions/checkout@v2

commit 1b35da40936ae3612c37bd1ab8b1612de8052036
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Fri Nov 27 16:59:00 2020 +0200

    Document public dashboards (#222)
    
    * Document public dashboards
    
    * Editing
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 2de6ec6..08a97cf 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -1,7 +1,7 @@
 ---
-title: Publishing
+title: Publishing and deployment
 description: How to set up publishing and build status notifications
-weight: 3
+weight: 1
 aliases:
     - '../yaml/distribution'
 ---
diff --git a/content/publishing-yaml/public-dashboards.md b/content/publishing-yaml/public-dashboards.md
new file mode 100644
index 0000000..7a61acc
--- /dev/null
+++ b/content/publishing-yaml/public-dashboards.md
@@ -0,0 +1,34 @@
+---
+title: Public dashboards
+description: Use public links to distribute builds and artifacts
+weight: 2
+aliases:
+---
+
+Public dashboards make it possible for teams to share the list of team's builds, release notes (if passed) and build artifacts with people outside Codemagic using a public link (build logs will not be exposed). This is a convenient option for distributing builds to testers or sharing build artifacts with stakeholders. 
+
+{{<notebox>}}
+The public dashboards feature is available for teams only. It is not possible to create public dashboards for apps on personal accounts.
+{{</notebox>}}
+
+## Enabling public dashboards
+
+To use public dashboards, team owners will have to enable the feature in team settings. 
+
+In team settings, expand the **Public dashboards** section and click **Enable sharing**. This will allow any team member to create dashboards and generate public links to share them.
+
+Public dashboards can be disabled anytime by clicking **Disable sharing**.
+
+## Creating and sharing a build dashboard
+
+Open the **Builds** page via the navigation bar and use the **team**, **application**, **workflow** and **branch** filters on the left sidebar to create a build dashboard. Then click **Share dashboard** at the top of the page to generate a public link to it. A popup with the generated link will appear and you can copy the link to clipboard. The generated link will be also saved to the **Public dashboards** section in team settings.
+
+{{<notebox>}}
+Please note that anyone with the public link can access the build dashboard and download build artifacts.
+{{</notebox>}}
+
+## Managing links
+
+All generated links to public dashboards are listed in the **Public dashboards** section in team settings. 
+
+Links can be revoked by deleting them or when a team owner disables sharing by clicking **Disable sharing**. When sharing is re-enabled, the available links become active again.
diff --git a/content/teams/teams.md b/content/teams/teams.md
index d258b6f..c94444c 100644
--- a/content/teams/teams.md
+++ b/content/teams/teams.md
@@ -54,6 +54,10 @@ Owners can upgrade members to owners by clicking on the three dots next to their
 
 Users that have triggered builds can be invited to the team by clicking **Add to team** on the email address in the list of users.
 
+## Public dashboards
+
+The public dashboards feature makes it possible to share team's builds and build artifacts via a public link. Read more about this feature [here](./public-dashboards).
+
 ## Managing team integrations
 
 In Team integrations, it is possible to set up integrations to be used with team apps.

commit bc10b6548ce319573d0d630c615a48f62b2743a2
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Wed Nov 18 12:08:09 2020 +0200

    rename /business links to /enterprise (#220)

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 387dec7..47b3a43 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -30,7 +30,7 @@ We have added a much-requested feature to cancel ongoing and queued webhook-trig
 
 You can enable this feature in the UI by navigating to **App settings > Build triggers > Automatic build triggering** and selecting **Cancel outdated webhook builds**, or by setting `cancel_previous_builds: true` in the [triggering section](../getting-started/yaml/#triggering) of the YAML file.
 
-> If you’re interested in running builds in parallel, get in touch with our sales team through the [Codemagic business page](https://codemagic.io/business/).
+> If you’re interested in running builds in parallel, get in touch with our sales team through the [Codemagic business page](https://codemagic.io/enterprise/).
 
 ## June 2020
 
diff --git a/layouts/partials/header.html b/layouts/partials/header.html
index 8b1b0d0..88e4f9e 100644
--- a/layouts/partials/header.html
+++ b/layouts/partials/header.html
@@ -10,7 +10,10 @@
         <div id="header-menu-wrap" data-js-header-menu-wrap>
             <nav id="header-main-menu">
                 <a class="menu-link" href='{{ site.Param "landingURL" }}/pricing' onclick="sendGtag('Pricing_clicked', 'CodemagicMenu')" target="_blank">Pricing</a>
-                <a class="menu-link" href='{{ site.Param "landingURL" }}/business' onclick="sendGtag('Business_clicked', 'CodemagicMenu')" target="_blank">Business</a>
+                <a class="menu-link" href='{{ site.Param "landingURL" }}/enterprise'
+                    onclick="sendGtag('Enterprise_clicked', 'CodemagicMenu')" target="_blank">
+                    Enterprise
+                </a>
                 <a class="menu-link" href='/' onclick="sendGtag('Documentation_clicked', 'CodemagicMenu')">Documentation</a>
                 <a class="menu-link" href='{{ site.Param "blogURL" }}' onclick="sendGtag('Blog_clicked', 'CodemagicMenu')" target="_blank">Blog</a>
                 <a class="menu-link" href='{{ site.Param "landingURL" }}/integrations' onclick="sendGtag('Integrations_clicked', 'CodemagicMenu')" target="_blank">Integrations</a>

commit f1939c9cbde2944d2f4c726344bf95dde4a896ae
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Tue Nov 17 14:33:49 2020 +0200

    note on github app limitation (#214)
    
    * note on github app limitation
    
    * editing
    
    * editing
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 1dd4f10..2de6ec6 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -109,6 +109,10 @@ publishing:
       - '*.aab'
 ```
 
+{{<notebox>}}
+Note that Codemagic needs **write** permission to be able to publish a GitHub release. If you have signed up via Codemagic GitHub app or have enabled the GitHub app integration, publishing to GitHub is not possible as Codemagic only has **read** access to the repository. If you wish to publish GitHub releases, we recommend you authenticate via OAuth and remove the GitHub app integration in user or team settings as otherwise the GitHub app limitations will prevail. Read more about the signup options [here](../getting-started/signup).
+{{</notebox>}}
+
 ## Publishing a Flutter package to pub.dev
 
 In order to get publishing permissions, first you will need to log in to pub.dev locally. It can be done with running `pub publish --dry-run`.

commit 6f9e2f2b01ecc5822dd5d03a9c5b1f24941d99c8
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Tue Nov 17 14:11:42 2020 +0200

    Base image update (#218)
    
    * base image update
    
    * Update versions.md
    
    * Update versions.md
    
    Co-authored-by: Priit Lätt <priit@nevercode.io>

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 694915d..94378c1 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -26,7 +26,7 @@ weight: 3
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `1.22.3 ($HOME/programs/flutter)`
+- flutter `1.22.4 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
index 6b03c88..e4508bc 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/releases-and-versions/versions2.md
@@ -13,7 +13,7 @@ weight: 2
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 48GB)`
+- Disk `322GB (Free Space: 37GB)`
 
 ## Pre-installed tools
 
@@ -23,14 +23,14 @@ weight: 2
 - cordova `10.0.0`
 - curl
 - dart `2.10.3`
-- docker `19.03.12`
-- fastlane `2.166.0`
+- docker `19.03.13`
+- fastlane `2.167.0`
 - firebase `8.10.0`
-- flutter `1.22.3 ($HOME/programs/flutter)`
-- gem `3.1.2`
+- flutter `1.22.4 ($HOME/programs/flutter)`
+- gem `3.1.4`
 - git `2.29.2`
 - gradle `6.1.1`
-- homebrew `2.5.8`
+- homebrew `2.5.9`
 - ionic `5.4.16`
 - jq
 - node `12.18.4`
@@ -47,13 +47,13 @@ weight: 2
 - yq
 - zip
 
-## Xcode 12.1 (12A7403)
+## Xcode 12.2 (12B45b)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
 
-Xcode path: `/Applications/Xcode-12.1.app`
+Xcode path: `/Applications/Xcode-12.2.app`
 
-With Xcode `12.1` build version `12A7403` the following runtimes and devices are installed:
+With Xcode `12.2` build version `12B45b` the following runtimes and devices are installed:
 
 ### Runtimes
 
@@ -67,7 +67,7 @@ With Xcode `12.1` build version `12A7403` the following runtimes and devices are
 - iOS 13.5
 - iOS 13.6
 - iOS 13.7
-- iOS 14.1
+- iOS 14.2
 - tvOS 11.3
 - tvOS 11.4
 - tvOS 12.0
@@ -75,9 +75,10 @@ With Xcode `12.1` build version `12A7403` the following runtimes and devices are
 - tvOS 13.2
 - tvOS 13.3
 - tvOS 13.4
-- tvOS 14.0
+- tvOS 14.2
 - watchOS 6.2
 - watchOS 7.0
+- watchOS 7.1
 
 ### Devices
 
@@ -148,6 +149,8 @@ With Xcode `12.1` build version `12A7403` the following runtimes and devices are
 
 ## Other Xcode versions
 
-- 12.2 (12B5035g) `/Applications/Xcode-12.2.app`
+- 12.3 (12C5020f) `/Applications/Xcode-12.3.app`
 - 12.1.1 (12A7605b) `/Applications/Xcode-12.1.1.app`
+- 12.1 (12A7403) `/Applications/Xcode-12.1.app`
 - 12.0.1 (12A7300) `/Applications/Xcode-12.app`
+

commit 8051c8a0e2f1299140fe4305e77b96508bcf1dcc
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon Nov 16 18:20:51 2020 +0200

    tag env var (#217)

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 4364a2d..43bebe2 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -29,6 +29,7 @@ Here you'll find some of the read-only environment variables explained.
 | PROJECT_BUILD_NUMBER     | Number of the build for this project in Codemagic                                                                                                               |
 | FLUTTER_ROOT             | Absolute path to Flutter SDK                                                                                                                                    |
 | FCI_BRANCH               | The current branch being built, for pull requests it is the source branch                                                                                       |
+| FCI_TAG                  | The tag being built if started from a tag webhook, unset otherwise
 | FCI_REPO_SLUG            | The slug of the repository that is currently being built in the form `owner_name/repository_name`. Unset for repositories added from custom source              |
 | FCI_COMMIT               | Commit hash that is currently being built by Codemagic, for pull request builds it is the hash of the source commit                                             |
 | FCI_PREVIOUS_COMMIT      | Commit hash of the previous successful build, unset if there is no previous successful build                                                                    |

commit a67c4fe00d85b79469f8b24b6bdb33dc55ed67f8
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon Nov 16 16:43:40 2020 +0200

    update test docs (#216)
    
    * firebase test
    
    * comments
    
    * comments

diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index 5e443de..efb74b1 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -8,6 +8,9 @@ aliases:
 
 Test scripts are added under `scripts` in the [overall architecture](../getting-started/yaml#template), before the build commands.
 
+You can display test results visually in the build overview if you use expanded form of the script in `codemagic.yaml`.
+Just include the `test_report` field with a glob pattern matching the test result file location. Supported test report formats are [Junit XML](https://llg.cubic.org/docs/junit/) `.JSON` for Flutter's `--machine` report.
+
 ## React Native unit test
 
 This is a basic example with jest, given that jest tests are defined in the `package.json` file.
@@ -21,38 +24,42 @@ npm test
 For non-UI tests or unit testing:
 
 ```bash
-./gradlew test
+- name: Test
+  script: ./gradlew test
+  test_report: app/build/test-results/**/*.xml
 ```
 
 UI tests (also known as instrumented tests):
 
 ```bash
-./gradlew connectedAndroidTest
+- name: Launch emulator
+  script: |
+    cd $ANDROID_HOME/tools
+    emulator -avd emulator &
+    adb wait-for-device
+- name: Test
+  script: |
+    set -e
+    ./gradlew connectedAndroidTest
+    adb logcat -d > emulator.log
+  test_report: app/build/outputs/androidTest-results/connected/*.xml
 ```
 
+**Tip**: you can save the emulator log with the `adb logcat -d > emulator.log` command.
+
 ## Native iOS
 
 ```bash
-set -o pipefail
-xcodebuild \
-    -workspace MyAwesomeApp.xcworkspace \
-    -scheme MyAwesomeApp \
-    -sdk iphonesimulator \
-    -destination 'platform=iOS Simulator,name=iPhone 6,OS=8.1' \
-    test | xcpretty
+- name: iOS test
+    script: |
+    xcode-project run-tests \
+        --workspace MyAwesomeApp.xcworkspace \
+        --scheme MyAwesomeApp \
+        --device "iPhone 11"
+    test_report: build/ios/test/*.xml
 ```
 
-If may want to export the test log, you can do this by splitting the standard output to a file
-
-```bash
-set -o pipefail
-xcodebuild \
-    -workspace MyAwesomeApp.xcworkspace \
-    -scheme MyAwesomeApp \
-    -sdk iphonesimulator \
-    -destination 'platform=iOS Simulator,name=iPhone 6,OS=8.1' \
-    test | xcpretty |& tee "/tmp/xcodetest.log"
-```
+Please check [Codemagic CLI tools documentation](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/run-tests.md#run-tests) to learn more about more optional arguments to `xcode-project run-tests`.
 
 ## Flutter test
 

commit 95a9495b7bf0b762b487faecda02b790f7cf5517
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Nov 11 17:05:41 2020 +0200

    Update builds.md (#212)
    
    * Update builds.md
    
    * Update builds.md

diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index 88e671d..7399174 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -50,7 +50,8 @@ curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --data '
 
 ### Response
 
-The request is asynchronous. The started build is the most recent item in the list when you fetch the [list of builds](#get-list-of-builds).
+The request returns the ID of the started build in JSON as `{"buildId":"5fabc6414c483700143f4f92"}`.
+
 
 ## Get list of builds
 

commit 3954f0fa1b499103768019fa7952193d3d2c6951
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Nov 11 17:03:13 2020 +0200

    Harmonize documentation with .yaml export (#213)
    
    * Update signing-android.md
    
    * Update signing-android.md
    
    * Update building-a-flutter-app.md
    
    * Update building-a-native-android-app.md
    
    * Update building-a-react-native-app.md
    
    * Update building-an-ionic-app.md
    
    * Update yaml.md

diff --git a/content/code-signing-yaml/signing-android.md b/content/code-signing-yaml/signing-android.md
index 206bc15..7d97cbd 100644
--- a/content/code-signing-yaml/signing-android.md
+++ b/content/code-signing-yaml/signing-android.md
@@ -23,8 +23,8 @@ This example shows how to set up code signing using Gradle.
               if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
                   storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                   storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
-                  keyAlias System.getenv()["FCI_KEY_ALIAS_USERNAME"]
-                  keyPassword System.getenv()["FCI_KEY_ALIAS_PASSWORD"]
+                  keyAlias System.getenv()["FCI_KEY_ALIAS"]
+                  keyPassword System.getenv()["FCI_KEY_PASSWORD"]
               } else {
                   storeFile file("/path/to/local/myreleasekey.keystore")
                   storePassword "password"
@@ -49,8 +49,8 @@ This example shows how to set up code signing using Gradle.
 environment:  
   FCI_KEYSTORE: Encrypted(...)
   FCI_KEYSTORE_PASSWORD: Encrypted(...)
-  FCI_KEY_ALIAS_USERNAME: Encrypted(...)
-  FCI_KEY_ALIAS_PASSWORD: Encrypted(...)
+  FCI_KEY_ALIAS: Encrypted(...)
+  FCI_KEY_PASSWORD: Encrypted(...)
 ```
 
 3. In the [`scripts`](../getting-started/yaml#scripts) section of the configuration file, you will need to decode the keystore file and add it before the build command. You can choose any path to your keystore file. For example:
@@ -71,8 +71,8 @@ environment:
   FCI_KEYSTORE_PATH: /tmp/keystore.keystore
   FCI_KEYSTORE: Encrypted(...)
   FCI_KEYSTORE_PASSWORD: Encrypted(...)
-  FCI_KEY_ALIAS_USERNAME: Encrypted(...)
-  FCI_KEY_ALIAS_PASSWORD: Encrypted(...)
+  FCI_KEY_ALIAS: Encrypted(...)
+  FCI_KEY_PASSWORD: Encrypted(...)
 ...
 scripts:
   ...
@@ -109,8 +109,8 @@ In order to do code signing [encrypt](../building/encrypting/#encrypting-sensiti
 ```yaml
 FCI_KEYSTORE: Encrypted(...)
 FCI_KEYSTORE_PASSWORD: Encrypted(...)
-FCI_KEY_ALIAS_USERNAME: Encrypted(...)
-FCI_KEY_ALIAS_PASSWORD: Encrypted(...)
+FCI_KEY_ALIAS: Encrypted(...)
+FCI_KEY_PASSWORD: Encrypted(...)
 ```
 
 Use the following script:
@@ -121,8 +121,8 @@ Use the following script:
     echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
     cat >> "$FCI_BUILD_DIR/project_directory/android/key.properties" <<EOF
     storePassword=$FCI_KEYSTORE_PASSWORD
-    keyPassword=$FCI_KEY_ALIAS_PASSWORD
-    keyAlias=$FCI_KEY_ALIAS_USERNAME
+    keyPassword=$FCI_KEY_PASSWORD
+    keyAlias=$FCI_KEY_ALIAS
     storeFile=/tmp/keystore.keystore
     EOF
 ```
diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index 3dca4cf..88063bc 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -62,8 +62,8 @@ If your app settings in Codemagic have building Android App Bundles enabled, we
   --bundle 'project_directory/build/**/outputs/**/*.aab' \
   --ks /tmp/keystore.keystore \
   --ks-pass $FCI_KEYSTORE_PASSWORD \
-  --ks-key-alias $FCI_KEY_ALIAS_USERNAME \
-  --key-pass $FCI_KEY_ALIAS_PASSWORD
+  --ks-key-alias $FCI_KEY_ALIAS \
+  --key-pass $FCI_KEY_PASSWORD
 ```
 
 Please make sure to wrap the `--bundle` pattern in single quotes. If `--bundle` option is not specified, default glob pattern `**/*.aab` will be used.
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index 08a46df..20cdab3 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -58,8 +58,8 @@ workflows:
       vars:
         FCI_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
         FCI_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
-        FCI_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
-        FCI_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
+        FCI_KEY_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
+        FCI_KEY_ALIAS: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
       node: latest
     triggering:
       events:
@@ -78,8 +78,8 @@ workflows:
           echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
           cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
           storePassword=$FCI_KEYSTORE_PASSWORD
-          keyPassword=$FCI_KEY_ALIAS_PASSWORD
-          keyAlias=$FCI_KEY_ALIAS_USERNAME
+          keyPassword=$FCI_KEY_PASSWORD
+          keyAlias=$FCI_KEY_ALIAS
           storeFile=/tmp/keystore.keystore
           EOF
       - name: Build Android app
@@ -107,4 +107,4 @@ android {
         ...
     }
 }
-```
\ No newline at end of file
+```
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index 3f19309..60c382d 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -123,8 +123,8 @@ workflows:
       vars:
         FCI_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
         FCI_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
-        FCI_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
-        FCI_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
+        FCI_KEY_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
+        FCI_KEY_ALIAS: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE ALIAS HERE
       node: latest
     triggering:
       events:
@@ -145,8 +145,8 @@ workflows:
           echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
           cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
           storePassword=$FCI_KEYSTORE_PASSWORD
-          keyPassword=$FCI_KEY_ALIAS_PASSWORD
-          keyAlias=$FCI_KEY_ALIAS_USERNAME
+          keyPassword=$FCI_KEY_PASSWORD
+          keyAlias=$FCI_KEY_ALIAS
           storeFile=/tmp/keystore.keystore
           EOF
       - name: Build Android app
@@ -174,4 +174,4 @@ Incrementing the version code can be done as follows:
             ...
         }
     }
-```
\ No newline at end of file
+```
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index 5a58d3c..4847a4f 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -52,8 +52,8 @@ workflows:
         # Android Keystore environment variables
         FCI_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
         FCI_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
-        FCI_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
-        FCI_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
+        FCI_KEY_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
+        FCI_KEY_ALIAS: Encrypted(...) # <-- Put your encrypted keystore alias username here
       node: latest
     triggering:
       events:
@@ -76,8 +76,8 @@ workflows:
           echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
           cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
           storePassword=$FCI_KEYSTORE_PASSWORD
-          keyPassword=$FCI_KEY_ALIAS_PASSWORD
-          keyAlias=$FCI_KEY_ALIAS_USERNAME
+          keyPassword=$FCI_KEY_PASSWORD
+          keyAlias=$FCI_KEY_ALIAS
           storeFile=/tmp/keystore.keystore
           EOF
       - name: Update dependencies and copy web assets to native project
@@ -134,8 +134,8 @@ workflows:
         # Android Keystore environment variables
         FCI_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
         FCI_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
-        FCI_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
-        FCI_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
+        FCI_KEY_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
+        FCI_KEY_ALIAS: Encrypted(...) # <-- Put your encrypted keystore alias username here
         FCI_KEYSTORE_PATH: /tmp/keystore.keystore
       node: latest
     triggering:
@@ -168,8 +168,8 @@ workflows:
             -digestalg SHA1 \
             -keystore $FCI_KEYSTORE_PATH \
             -storepass $FCI_KEYSTORE_PASSWORD \
-            -keypass $FCI_KEY_ALIAS_PASSWORD \
-            $APK_PATH $FCI_KEY_ALIAS_USERNAME
+            -keypass $FCI_KEY_PASSWORD \
+            $APK_PATH $FCI_KEY_ALIAS
     artifacts:
       - platforms/android/app/build/outputs/**/*.apk
     publishing:
@@ -381,4 +381,4 @@ workflows:
         notify:
           success: false     # To not receive a notification when a build succeeds
           failure: false     # To not receive a notification when a build fails
-```
\ No newline at end of file
+```
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 8676b0d..cebf1a0 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -125,8 +125,8 @@ environment:
     # Android code signing
     FCI_KEYSTORE: Encrypted(...)
     FCI_KEYSTORE_PASSWORD: Encrypted(...)
-    FCI_KEY_ALIAS_PASSWORD: my_key_alias
-    FCI_KEY_ALIAS_USERNAME: Encrypted(...)
+    FCI_KEY_PASSWORD: Encrypted(...)
+    FCI_KEY_ALIAS: Encrypted(...)
     
     # iOS automatic code signing
     APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
@@ -276,4 +276,4 @@ scripts:
   - |
     echo 'This is a Post-publish script'
     echo 'This script is multiline'
-```
\ No newline at end of file
+```

commit 4ed91314a7a87dd40d833d334d21a23543f67e0e
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Wed Nov 11 13:43:44 2020 +0200

    change CM_ prefix to FCI_ prefix (#211)

diff --git a/content/code-signing-yaml/signing-android.md b/content/code-signing-yaml/signing-android.md
index 9126954..206bc15 100644
--- a/content/code-signing-yaml/signing-android.md
+++ b/content/code-signing-yaml/signing-android.md
@@ -21,10 +21,10 @@ This example shows how to set up code signing using Gradle.
       signingConfigs {
           release {
               if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
-                  storeFile file(System.getenv()["CM_KEYSTORE_PATH"])
-                  storePassword System.getenv()["CM_KEYSTORE_PASSWORD"]
-                  keyAlias System.getenv()["CM_KEY_ALIAS_USERNAME"]
-                  keyPassword System.getenv()["CM_KEY_ALIAS_PASSWORD"]
+                  storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
+                  storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
+                  keyAlias System.getenv()["FCI_KEY_ALIAS_USERNAME"]
+                  keyPassword System.getenv()["FCI_KEY_ALIAS_PASSWORD"]
               } else {
                   storeFile file("/path/to/local/myreleasekey.keystore")
                   storePassword "password"
@@ -47,10 +47,10 @@ This example shows how to set up code signing using Gradle.
 
 ```yaml
 environment:  
-  CM_KEYSTORE: Encrypted(...)
-  CM_KEYSTORE_PASSWORD: Encrypted(...)
-  CM_KEY_ALIAS_USERNAME: Encrypted(...)
-  CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+  FCI_KEYSTORE: Encrypted(...)
+  FCI_KEYSTORE_PASSWORD: Encrypted(...)
+  FCI_KEY_ALIAS_USERNAME: Encrypted(...)
+  FCI_KEY_ALIAS_PASSWORD: Encrypted(...)
 ```
 
 3. In the [`scripts`](../getting-started/yaml#scripts) section of the configuration file, you will need to decode the keystore file and add it before the build command. You can choose any path to your keystore file. For example:
@@ -59,25 +59,25 @@ environment:
 scripts:
   - name: Build Android
     script: |
-      export CM_KEYSTORE_PATH="/tmp/keystore.keystore"
-      echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
+      export FCI_KEYSTORE_PATH="/tmp/keystore.keystore"
+      echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
       cd android && ./gradlew assembleRelease
 ```
 
-Pay attention to the fact that scripts are executed as separate processes and environment variables defined inside one script won't be accessible in another script. Therefore, if you want to access your `CM_KEYSTORE_PATH` variable from multiple scripts, it makes sense to define it in the `environment` section.
+Pay attention to the fact that scripts are executed as separate processes and environment variables defined inside one script won't be accessible in another script. Therefore, if you want to access your `FCI_KEYSTORE_PATH` variable from multiple scripts, it makes sense to define it in the `environment` section.
 
 ```yaml
 environment:  
-  CM_KEYSTORE_PATH: /tmp/keystore.keystore
-  CM_KEYSTORE: Encrypted(...)
-  CM_KEYSTORE_PASSWORD: Encrypted(...)
-  CM_KEY_ALIAS_USERNAME: Encrypted(...)
-  CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+  FCI_KEYSTORE_PATH: /tmp/keystore.keystore
+  FCI_KEYSTORE: Encrypted(...)
+  FCI_KEYSTORE_PASSWORD: Encrypted(...)
+  FCI_KEY_ALIAS_USERNAME: Encrypted(...)
+  FCI_KEY_ALIAS_PASSWORD: Encrypted(...)
 ...
 scripts:
   ...
   - name: Export keystore
-    script: echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
+    script: echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
   - name: Build Android
     script: cd android && ./gradlew assembleRelease
   ...
@@ -107,10 +107,10 @@ The following templates show code signing using `key.properties`.
 In order to do code signing [encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password protected), key alias and key alias password (if key alias is password protected) and set the encrypted values to the following environment variables:
 
 ```yaml
-CM_KEYSTORE: Encrypted(...)
-CM_KEYSTORE_PASSWORD: Encrypted(...)
-CM_KEY_ALIAS_USERNAME: Encrypted(...)
-CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+FCI_KEYSTORE: Encrypted(...)
+FCI_KEYSTORE_PASSWORD: Encrypted(...)
+FCI_KEY_ALIAS_USERNAME: Encrypted(...)
+FCI_KEY_ALIAS_PASSWORD: Encrypted(...)
 ```
 
 Use the following script:
@@ -118,11 +118,11 @@ Use the following script:
 ```yaml
 - name: Set up key.properties
   script: |
-    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+    echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
     cat >> "$FCI_BUILD_DIR/project_directory/android/key.properties" <<EOF
-    storePassword=$CM_KEYSTORE_PASSWORD
-    keyPassword=$CM_KEY_ALIAS_PASSWORD
-    keyAlias=$CM_KEY_ALIAS_USERNAME
+    storePassword=$FCI_KEYSTORE_PASSWORD
+    keyPassword=$FCI_KEY_ALIAS_PASSWORD
+    keyAlias=$FCI_KEY_ALIAS_USERNAME
     storeFile=/tmp/keystore.keystore
     EOF
 ```
diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index 9e932f0..2e0f9e5 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -97,9 +97,9 @@ In order to use manual code signing, [encrypt](../building/encrypting/#encryptin
 
 ```yaml
 environment:
-  CM_CERTIFICATE: Encrypted(...)
-  CM_CERTIFICATE_PASSWORD: Encrypted(...)
-  CM_PROVISIONING_PROFILE: Encrypted(...)
+  FCI_CERTIFICATE: Encrypted(...)
+  FCI_CERTIFICATE_PASSWORD: Encrypted(...)
+  FCI_PROVISIONING_PROFILE: Encrypted(...)
 ```
 
 Then add the code signing configuration and the commands to code sign the build in the scripts section, after all the dependencies are installed, right before the build commands.
@@ -114,13 +114,13 @@ scripts:
       PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
       mkdir -p "$PROFILES_HOME"
       PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-      echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+      echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
       echo "Saved provisioning profile $PROFILE_PATH"
   - name: Set up signing certificate
     script: |
-      echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+      echo $FCI_CERTIFICATE | base64 --decode > /tmp/certificate.p12
       # when using a password-protected certificate
-      keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+      keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $FCI_CERTIFICATE_PASSWORD
       # when using a certificate that is not password-protected
       keychain add-certificates --certificate /tmp/certificate.p12
   - name: Set up code signing settings on Xcode project
diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index b8c7fc0..3dca4cf 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -61,9 +61,9 @@ If your app settings in Codemagic have building Android App Bundles enabled, we
 - android-app-bundle build-universal-apk \
   --bundle 'project_directory/build/**/outputs/**/*.aab' \
   --ks /tmp/keystore.keystore \
-  --ks-pass $CM_KEYSTORE_PASSWORD \
-  --ks-key-alias $CM_KEY_ALIAS_USERNAME \
-  --key-pass $CM_KEY_ALIAS_PASSWORD
+  --ks-pass $FCI_KEYSTORE_PASSWORD \
+  --ks-key-alias $FCI_KEY_ALIAS_USERNAME \
+  --key-pass $FCI_KEY_ALIAS_PASSWORD
 ```
 
 Please make sure to wrap the `--bundle` pattern in single quotes. If `--bundle` option is not specified, default glob pattern `**/*.aab` will be used.
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index 6e6c985..08a46df 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -56,10 +56,10 @@ workflows:
     instance_type: mac_pro
     environment:
       vars:
-        CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
-        CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
-        CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
-        CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
+        FCI_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
+        FCI_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
+        FCI_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
+        FCI_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
       node: latest
     triggering:
       events:
@@ -75,11 +75,11 @@ workflows:
         script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/local.properties"
       - name: Set up key.properties file for code signing
         script: |
-          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
           cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
-          storePassword=$CM_KEYSTORE_PASSWORD
-          keyPassword=$CM_KEY_ALIAS_PASSWORD
-          keyAlias=$CM_KEY_ALIAS_USERNAME
+          storePassword=$FCI_KEYSTORE_PASSWORD
+          keyPassword=$FCI_KEY_ALIAS_PASSWORD
+          keyAlias=$FCI_KEY_ALIAS_USERNAME
           storeFile=/tmp/keystore.keystore
           EOF
       - name: Build Android app
diff --git a/content/getting-started/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
index d27cf8a..5f86a28 100644
--- a/content/getting-started/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -85,9 +85,9 @@ workflows:
       vars:
         XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # PUT YOUR WORKSPACE NAME HERE
         XCODE_SCHEME: "YOUR_SCHEME_NAME" # PUT THE NAME OF YOUR SCHEME HERE
-        CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
-        CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
-        CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
+        FCI_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
+        FCI_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
+        FCI_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
       xcode: latest
       cocoapods: default
     triggering:
@@ -105,12 +105,12 @@ workflows:
           PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
           mkdir -p "$PROFILES_HOME"
           PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+          echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
           echo "Saved provisioning profile $PROFILE_PATH"
       - name: Set up signing certificate
         script: |
-          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+          echo $FCI_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $FCI_CERTIFICATE_PASSWORD
       - name: Increment build number
         script: agvtool new-version -all $(($BUILD_NUMBER +1))
       - name: Set up code signing settings on Xcode project
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index f617562..3f19309 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -58,9 +58,9 @@ workflows:
       vars:
         XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # YOUR WORKSPACE NAME HERE
         XCODE_SCHEME: "YOUR_SCHEME_NAME" # THE NAME OF YOUR SCHEME HERE
-        CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
-        CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
-        CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
+        FCI_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
+        FCI_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
+        FCI_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
       node: latest
       xcode: latest
       cocoapods: default
@@ -88,12 +88,12 @@ workflows:
           PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
           mkdir -p "$PROFILES_HOME"
           PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+          echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
           echo "Saved provisioning profile $PROFILE_PATH"
       - name: Set up signing certificate
         script: |
-          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+          echo $FCI_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $FCI_CERTIFICATE_PASSWORD
       - name: Increment build number
         script: cd ios && agvtool new-version -all $(($BUILD_NUMBER +1))
       - name: Set up code signing settings on Xcode project
@@ -121,10 +121,10 @@ workflows:
     instance_type: mac_pro
     environment:
       vars:
-        CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
-        CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
-        CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
-        CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
+        FCI_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
+        FCI_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
+        FCI_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
+        FCI_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
       node: latest
     triggering:
       events:
@@ -142,11 +142,11 @@ workflows:
         script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
       - name: Set up key.properties file for code signing
         script: |
-          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
           cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
-          storePassword=$CM_KEYSTORE_PASSWORD
-          keyPassword=$CM_KEY_ALIAS_PASSWORD
-          keyAlias=$CM_KEY_ALIAS_USERNAME
+          storePassword=$FCI_KEYSTORE_PASSWORD
+          keyPassword=$FCI_KEY_ALIAS_PASSWORD
+          keyAlias=$FCI_KEY_ALIAS_USERNAME
           storeFile=/tmp/keystore.keystore
           EOF
       - name: Build Android app
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index 8b25498..5a58d3c 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -50,10 +50,10 @@ workflows:
     environment:
       vars:
         # Android Keystore environment variables
-        CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
-        CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
-        CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
-        CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
+        FCI_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
+        FCI_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
+        FCI_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
+        FCI_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
       node: latest
     triggering:
       events:
@@ -73,11 +73,11 @@ workflows:
           echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
       - name: Set up keystore
         script: |
-          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
           cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
-          storePassword=$CM_KEYSTORE_PASSWORD
-          keyPassword=$CM_KEY_ALIAS_PASSWORD
-          keyAlias=$CM_KEY_ALIAS_USERNAME
+          storePassword=$FCI_KEYSTORE_PASSWORD
+          keyPassword=$FCI_KEY_ALIAS_PASSWORD
+          keyAlias=$FCI_KEY_ALIAS_USERNAME
           storeFile=/tmp/keystore.keystore
           EOF
       - name: Update dependencies and copy web assets to native project
@@ -132,11 +132,11 @@ workflows:
     environment:
       vars:
         # Android Keystore environment variables
-        CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
-        CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
-        CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
-        CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
-        CM_KEYSTORE_PATH: /tmp/keystore.keystore
+        FCI_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
+        FCI_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
+        FCI_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
+        FCI_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
+        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
       node: latest
     triggering:
       events:
@@ -161,15 +161,15 @@ workflows:
         script: ionic cordova build android --release --no-interactive --prod --device
       - name: Sign APK
         script: |
-          echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
+          echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
           APK_PATH=$(find platforms/android/app/build/outputs/apk/release -name "*.apk" | head -1)
           jarsigner \
             -sigalg SHA1withRSA \
             -digestalg SHA1 \
-            -keystore $CM_KEYSTORE_PATH \
-            -storepass $CM_KEYSTORE_PASSWORD \
-            -keypass $CM_KEY_ALIAS_PASSWORD \
-            $APK_PATH $CM_KEY_ALIAS_USERNAME
+            -keystore $FCI_KEYSTORE_PATH \
+            -storepass $FCI_KEYSTORE_PASSWORD \
+            -keypass $FCI_KEY_ALIAS_PASSWORD \
+            $APK_PATH $FCI_KEY_ALIAS_USERNAME
     artifacts:
       - platforms/android/app/build/outputs/**/*.apk
     publishing:
@@ -201,9 +201,9 @@ workflows:
         XCODE_WORKSPACE: "ios/App/App.xcworkspace"
         XCODE_SCHEME: "App"
         # Manual Code Signing
-        # CM_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
-        # CM_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
-        # CM_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
+        # FCI_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
+        # FCI_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
+        # FCI_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
         #
         # Automatic Code Signing 
         # https://docs.codemagic.io/yaml/distribution/
@@ -241,7 +241,7 @@ workflows:
       #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
       #     mkdir -p "$PROFILES_HOME"
       #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-      #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+      #     echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
       #     echo "Saved provisioning profile $PROFILE_PATH"
       - name: Fetch signing files
         script: |
@@ -301,9 +301,9 @@ workflows:
         XCODE_WORKSPACE: "platforms/ios/YOUR_APP.xcworkspace" # <- Update with your workspace name
         XCODE_SCHEME: "YOUR_SCHEME" # <- Update with your workspace scheme
         # Manual Code Signing
-        # CM_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
-        # CM_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
-        # CM_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
+        # FCI_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
+        # FCI_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
+        # FCI_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
         #
         # Automatic Code Signing 
         # https://docs.codemagic.io/yaml/distribution/
@@ -343,7 +343,7 @@ workflows:
       #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
       #     mkdir -p "$PROFILES_HOME"
       #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-      #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+      #     echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
       #     echo "Saved provisioning profile $PROFILE_PATH"
       - name: Fetch signing files
         script: |
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index 35c79cc..8676b0d 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -123,10 +123,10 @@ environment:
     SECRET_ENV_VAR: Encrypted(...)
     
     # Android code signing
-    CM_KEYSTORE: Encrypted(...)
-    CM_KEYSTORE_PASSWORD: Encrypted(...)
-    CM_KEY_ALIAS_PASSWORD: my_key_alias
-    CM_KEY_ALIAS_USERNAME: Encrypted(...)
+    FCI_KEYSTORE: Encrypted(...)
+    FCI_KEYSTORE_PASSWORD: Encrypted(...)
+    FCI_KEY_ALIAS_PASSWORD: my_key_alias
+    FCI_KEY_ALIAS_USERNAME: Encrypted(...)
     
     # iOS automatic code signing
     APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
@@ -135,9 +135,9 @@ environment:
     CERTIFICATE_PRIVATE_KEY: Encrypted(...)
 
     # iOS manual code signing
-    CM_CERTIFICATE: Encrypted(...)
-    CM_CERTIFICATE_PASSWORD: Encrypted(...)
-    CM_PROVISIONING_PROFILE: Encrypted(...)
+    FCI_CERTIFICATE: Encrypted(...)
+    FCI_CERTIFICATE_PASSWORD: Encrypted(...)
+    FCI_PROVISIONING_PROFILE: Encrypted(...)
 
     # Firebase secrets
     ANDROID_FIREBASE_SECRET: Encrypted(...)

commit 965ea1994fa3d3fa812b1d2598e5da1deb34bd58
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Nov 11 10:58:55 2020 +0200

    Update signing-android.md (#210)

diff --git a/content/code-signing-yaml/signing-android.md b/content/code-signing-yaml/signing-android.md
index 7b19810..9126954 100644
--- a/content/code-signing-yaml/signing-android.md
+++ b/content/code-signing-yaml/signing-android.md
@@ -23,7 +23,7 @@ This example shows how to set up code signing using Gradle.
               if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
                   storeFile file(System.getenv()["CM_KEYSTORE_PATH"])
                   storePassword System.getenv()["CM_KEYSTORE_PASSWORD"]
-                  keyAlias System.getenv()["CM_KEY_ALIAS"]
+                  keyAlias System.getenv()["CM_KEY_ALIAS_USERNAME"]
                   keyPassword System.getenv()["CM_KEY_ALIAS_PASSWORD"]
               } else {
                   storeFile file("/path/to/local/myreleasekey.keystore")

commit aaa45581035011d80c9c7d3ff3b811dfc434f66a
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Nov 10 11:57:34 2020 +0200

    Improvement/script syntax highlight (#203)
    
    * edit code style
    
    * add syntax annotations to scripts, format some scripts

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index e5b39d0..0e50578 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -365,15 +365,13 @@ body {
             code {
               font-family: monospace;
               background: $grey-bg-light;
-              color: #c71585;
               font-size: 0.9em;
               padding: 2px 4px;
               word-break: break-word;
               border-radius: 2px;
-              border: 1px solid $grey-bg;
             }
             pre {
-                background: $grey-bg;
+                background: $grey-bg-light !important;
                 padding: 40px;
                 font-family: monospace;
                 font-size: 14px;
@@ -382,7 +380,11 @@ body {
 
                 code {
                   background: transparent;
+                  font-size: 1em;
                   padding: 0;
+                  span {
+                    background: transparent !important;
+                  }
                 }
             }
             .notebox {
@@ -403,7 +405,10 @@ body {
               }
 
               code {
-                background: $grey-bg
+                background: $grey-bg;
+              }
+              pre {
+                background: $grey-bg !important;
               }
             }
 
@@ -479,6 +484,14 @@ body {
               }
             }
 
+            code {
+              color: inherit;
+              font-family: inherit;
+              background: inherit;
+              font-size: inherit;
+              padding: 0;
+            }
+
             .heading {
                 color: #aaaaaa;
                 text-transform: uppercase;
diff --git a/config.yml b/config.yml
index ee2319f..43aa809 100644
--- a/config.yml
+++ b/config.yml
@@ -2,7 +2,6 @@
 copyright:
   '©Nevercode Ltd | All Rights Reserved | Codemagic is pending trademark
   of Nevercode Ltd.'
-pygmentsUseClasses: true
 params:
   twitterShareHandle: codemagicio
   facebookAuthorHandle: codemagicio
@@ -134,3 +133,5 @@ markup:
     goldmark:
         renderer:
             unsafe: true
+    highlight:
+        style: github
diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index bd0eb02..5490551 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -10,9 +10,11 @@ If your project requires accessing any private Git submodules or dependencies, y
 2. Add the **public key** to your repository settings. See how to do that on [GitHub](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account), [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), [GitLab](https://docs.gitlab.com/ee/ssh/README.html#adding-an-ssh-key-to-your-gitlab-account).
 3. Encrypt the contents of the **private key** file and add it as an environment variable in your Codemagic configuration configuration file. . (../building/environment-variables/). Make sure to check **Secure**. For example:
 
-        SSH_KEY = -----BEGIN OPENSSH PRIVATE KEY-----
-        ...
-        -----END OPENSSH PRIVATE KEY-----
+    ```
+    SSH_KEY = -----BEGIN OPENSSH PRIVATE KEY-----
+    ...
+    -----END OPENSSH PRIVATE KEY-----
+    ```
 
     {{<notebox>}}
 Note that the `-----END OPENSSH PRIVATE KEY-----` line needs to be followed by an empty line for the key to be usable.
@@ -22,8 +24,10 @@ All environment variables whose name has the suffix `_SSH_KEY` will be automatic
 
 If you wish to use a **custom** environment variable name without the suffix `_SSH_KEY`, add the following **post-clone** script to add the key to the SSH agent.
 
-        #!/usr/bin/env sh
-        echo "${CUSTOM_KEY_NAME}" > /tmp/ssh_key
-        chmod 600 /tmp/ssh_key
-        eval `ssh-agent -s`
-        ssh-add /tmp/ssh_key
+```bash
+#!/usr/bin/env sh
+echo "${CUSTOM_KEY_NAME}" > /tmp/ssh_key
+chmod 600 /tmp/ssh_key
+eval `ssh-agent -s`
+ssh-add /tmp/ssh_key
+```
\ No newline at end of file
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 130c685..21833d1 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -13,30 +13,32 @@ If you are going to publish your app to App Store Connect or Google Play, each u
 
 Here are some examples how you can increment the app version using Codemagic's read-only environment variables in build arguments:
 
-`--build-name=2.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER + 100))`
-
-`--build-name=1.0.0 --build-number=$BUILD_NUMBER`
+```bash
+--build-name=2.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER + 100))
 
+--build-name=1.0.0 --build-number=$BUILD_NUMBER
+```
 
 ## Fetching build number from pubsec.yaml
 
 Add a pre-build script that installs [yq](https://github.com/mikefarah/yq), a lightweight and portable command-line YAML processor: 
 
-```
+```bash
 #!/usr/bin/env sh
 HOMEBREW_NO_AUTO_UPDATE=1 brew install yq
 ```
 
 Then add the following build arguments:
 
-`--build-number=$(cat ./pubspec.yaml | yq r - version)`  
-
+```bash
+--build-number=$(cat ./pubspec.yaml | yq r - version)
+```
 
 ## Set Xcode project build number via command line
 
 Calling agvtool is another way of forcing Xcode to set the build version for your next build. 
 
-```
+```bash
 #!/bin/sh
 set -e
 set -x
diff --git a/content/building/encrypting.md b/content/building/encrypting.md
index c02ad66..68280be 100644
--- a/content/building/encrypting.md
+++ b/content/building/encrypting.md
@@ -24,7 +24,7 @@ Note that when you upload a file for encryption, it is encoded to `base64` and w
 
 Writing the base64-encoded environment variable to a file can be done like this:
 
-```
+```yaml
 scripts:
   - echo $MY_FILE | base64 --decode > my-file.json
 ```
\ No newline at end of file
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 4c24503..4364a2d 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -13,54 +13,58 @@ Environment variables are useful for storing information that you do not want to
 
 Codemagic exports several read-only environment variables during the build that you can use in scripts to customize the build process. Environment variables added by user will override Codemagic defaults. You can check which environment variables are exported by inserting the following script before or after any of the default build steps:
 
-    #!/bin/sh
-    set -ex
-    printenv
+```bash
+#!/bin/sh
+set -ex
+printenv
+```
 
 Here you'll find some of the read-only environment variables explained.
 
-| **Environment variable** | **Value**                                                                                                       |
-|--------------------------|-----------------------------------------------------------------------------------------------------------------|
-| CI                       | true                                                                                                            |
-| CONTINUOUS_INTEGRATION   | true                                                                                                            |
-| BUILD_NUMBER             | Number of the build for this project in Codemagic for the given workflow                                        |
-| PROJECT_BUILD_NUMBER     | Number of the build for this project in Codemagic                                                               |
-| FLUTTER_ROOT             | Absolute path to Flutter SDK                                                                                    |
-| FCI_BRANCH               | The current branch being built, for pull requests it is the source branch                                       |
-| FCI_REPO_SLUG            | The slug of the repository that is currently being built in the form `owner_name/repository_name`. Unset for repositories added from custom source|
-| FCI_COMMIT               | Commit hash that is currently being built by Codemagic, for pull request builds it is the hash of the source commit |
-| FCI_PREVIOUS_COMMIT      | Commit hash of the previous successful build, unset if there is no previous successful build                    |
-| FCI_PULL_REQUEST         | `true`, if the current build is building a pull request, `false` otherwise                                      |
-| FCI_PULL_REQUEST_NUMBER  | Set to Integer ID of the pull request for the Git provider (Bitbucket, Github etc) if the current build is building a pull request, unset otherwise|
-| FCI_CLONE_UNSHALLOW      | If set to `true` performs a full clone of the repository instead of top 50 commits                             |
-| FCI_CLONE_DEPTH          | Specifies the number of commits to be fetched from the repository when cloning, default: 50. Specifying a smaller number can decrease the default fetching time|
-| FCI_PROJECT_ID           | UUID of the project that is being built                                                                         |
-| FCI_BUILD_ID             | UUID of the build                                                                                               |
-| FCI_TEST_STEP_STATUS     | Test step status, success or failure                                                                            |
-| FCI_BUILD_STEP_STATUS    | Build step status, success, failure or skipped                                                                  |
-| FCI_BUILD_DIR            | Absolute path to the cloned repository in Codemagic builders                                                    |
-| FCI_BUILD_OUTPUT_DIR     | Contains the artifact files generated during the build                                                          |
-| FCI_EXPORT_DIR           | The files added to this directory will be added to a zip file and made available as build artifacts             |
-| FCI_FLUTTER_SCHEME       | Name of the iOS scheme to be used                                                                               |
-| FCI_SYMROOT              | Directory path of files generated during Xcode build                                                            |
-| FCI_KEYSTORE_PASSWORD    | Password of Android keystore as configured in the UI                                                            |
-| FCI_KEY_PASSWORD         | Password of Android key as configured in the UI                                                                 |
-| FCI_KEY_ALIAS            | Alias of the key as configured in the UI                                                                        |
-| FCI_KEYSTORE_PATH        | Path of the file in our VM                                                                                      |
-| FCI_ARTIFACT_LINKS       | Information about generated build artifacts that is available in post-publishing step. Read more about it below. |
-
-`$FCI_ARTIFACT_LINKS` environment variable value is a JSON encoded list in the following form: 
-
-    [
-        {
-            "name": "Codemagic_Release.ipa",
-            "type": "ipa",
-            "url": "https://api.codemagic.io/artifacts/2e7564b2-9ffa-40c2-b9e0-8980436ac717/81c5a723-b162-488a-854e-3f5f7fdfb22f/Codemagic_Release.ipa",
-            "md5": "d2884be6985dad3ffc4d6f85b3a3642a",
-            "versionName": "1.0.2",
-            "bundleId": "io.codemagic.app"
-        }
-    ]                                                                                   
+| **Environment variable** | **Value**                                                                                                                                                       |
+| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |
+| CI                       | true                                                                                                                                                            |
+| CONTINUOUS_INTEGRATION   | true                                                                                                                                                            |
+| BUILD_NUMBER             | Number of the build for this project in Codemagic for the given workflow                                                                                        |
+| PROJECT_BUILD_NUMBER     | Number of the build for this project in Codemagic                                                                                                               |
+| FLUTTER_ROOT             | Absolute path to Flutter SDK                                                                                                                                    |
+| FCI_BRANCH               | The current branch being built, for pull requests it is the source branch                                                                                       |
+| FCI_REPO_SLUG            | The slug of the repository that is currently being built in the form `owner_name/repository_name`. Unset for repositories added from custom source              |
+| FCI_COMMIT               | Commit hash that is currently being built by Codemagic, for pull request builds it is the hash of the source commit                                             |
+| FCI_PREVIOUS_COMMIT      | Commit hash of the previous successful build, unset if there is no previous successful build                                                                    |
+| FCI_PULL_REQUEST         | `true`, if the current build is building a pull request, `false` otherwise                                                                                      |
+| FCI_PULL_REQUEST_NUMBER  | Set to Integer ID of the pull request for the Git provider (Bitbucket, Github etc) if the current build is building a pull request, unset otherwise             |
+| FCI_CLONE_UNSHALLOW      | If set to `true` performs a full clone of the repository instead of top 50 commits                                                                              |
+| FCI_CLONE_DEPTH          | Specifies the number of commits to be fetched from the repository when cloning, default: 50. Specifying a smaller number can decrease the default fetching time |
+| FCI_PROJECT_ID           | UUID of the project that is being built                                                                                                                         |
+| FCI_BUILD_ID             | UUID of the build                                                                                                                                               |
+| FCI_TEST_STEP_STATUS     | Test step status, success or failure                                                                                                                            |
+| FCI_BUILD_STEP_STATUS    | Build step status, success, failure or skipped                                                                                                                  |
+| FCI_BUILD_DIR            | Absolute path to the cloned repository in Codemagic builders                                                                                                    |
+| FCI_BUILD_OUTPUT_DIR     | Contains the artifact files generated during the build                                                                                                          |
+| FCI_EXPORT_DIR           | The files added to this directory will be added to a zip file and made available as build artifacts                                                             |
+| FCI_FLUTTER_SCHEME       | Name of the iOS scheme to be used                                                                                                                               |
+| FCI_SYMROOT              | Directory path of files generated during Xcode build                                                                                                            |
+| FCI_KEYSTORE_PASSWORD    | Password of Android keystore as configured in the UI                                                                                                            |
+| FCI_KEY_PASSWORD         | Password of Android key as configured in the UI                                                                                                                 |
+| FCI_KEY_ALIAS            | Alias of the key as configured in the UI                                                                                                                        |
+| FCI_KEYSTORE_PATH        | Path of the file in our VM                                                                                                                                      |
+| FCI_ARTIFACT_LINKS       | Information about generated build artifacts that is available in post-publishing step. Read more about it below.                                                |
+
+`$FCI_ARTIFACT_LINKS` environment variable value is a JSON encoded list in the following form:
+
+```json
+[
+  {
+    "name": "Codemagic_Release.ipa",
+    "type": "ipa",
+    "url": "https://api.codemagic.io/artifacts/2e7564b2-9ffa-40c2-b9e0-8980436ac717/81c5a723-b162-488a-854e-3f5f7fdfb22f/Codemagic_Release.ipa",
+    "md5": "d2884be6985dad3ffc4d6f85b3a3642a",
+    "versionName": "1.0.2",
+    "bundleId": "io.codemagic.app"
+  }
+]
+```
 
 ## Using environment variables
 
@@ -76,29 +80,41 @@ The following examples show how to place your Google Maps API key into an Androi
 
 2. Read the key from an environment variable to `build.gradle`
 
-        defaultConfig {
-            // Other values set here
-            resValue "string", "maps_api_key", "$System.env.MAPS_API_KEY"
-        }
+```gradle
+defaultConfig {
+    // Other values set here
+    resValue "string", "maps_api_key", "$System.env.MAPS_API_KEY"
+}
+```
 
 3. Read the key from the `build.gradle` value to `AndroidManifest.xml`
 
-        <meta-data android:name="com.google.android.geo.API_KEY"
-            android:value="@string/maps_api_key"/>
+```xml
+<meta-data
+    android:name="com.google.android.geo.API_KEY"
+    android:value="@string/maps_api_key"
+/>
+```
 
 ### iOS (Swift)
 
 2. Read the key from the environment variable to `Info.plist`
 
-        <key>MAPS_API_KEY</key>
-        <string>$(MAPS_API_KEY)</string>
+```xml
+<key>MAPS_API_KEY</key>
+<string>$(MAPS_API_KEY)</string>
+```
 
 3. Read the key from the `Info.plist` value to `AppDelegate.swift`
 
-        GMSServices.provideAPIKey(Bundle.main.object(forInfoDictionaryKey: "MAPS_API_KEY") as? String ?? "")
+```swift
+GMSServices.provideAPIKey(Bundle.main.object(forInfoDictionaryKey: "MAPS_API_KEY") as? String ?? "")
+```
 
 ### iOS (Objective-C)
 
 2.  Read your key from the environemnt variable to `AppDelegate.m` as in the [example](https://github.com/flutter/plugins/blob/master/packages/google_maps_flutter/google_maps_flutter/example/ios/Runner/AppDelegate.m).
 
-        [GMSServices provideAPIKey:[[NSProcessInfo processInfo] environment][@"MAPS_API_KEY"]];
+```objective-c
+[GMSServices provideAPIKey:[[NSProcessInfo processInfo] environment][@"MAPS_API_KEY"]];
+```
diff --git a/content/building/running-locally.md b/content/building/running-locally.md
index 9324a03..7fad65a 100644
--- a/content/building/running-locally.md
+++ b/content/building/running-locally.md
@@ -16,27 +16,32 @@ Requires: Python ≥ 3.7
 
 To fetch (or create and download) the provisioning profile(s) and certificate for `MY_BUNDLE_ID` app, use the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) tool.
 
-    app-store-connect fetch-signing-files \
-        --issuer-id ISSUER_ID \
-        --key-id KEY_IDENTIFIER \
-        --private-key PRIVATE_KEY \
-        --certificate-key PRIVATE_KEY \
-        MY_BUNDLE_ID
-
+```bash
+app-store-connect fetch-signing-files \
+    --issuer-id ISSUER_ID \
+    --key-id KEY_IDENTIFIER \
+    --private-key PRIVATE_KEY \
+    --certificate-key PRIVATE_KEY \
+    MY_BUNDLE_ID
+```
  By default, your certificate will be saved to `$HOME/Library/MobileDevice/Certificates` and the provisioning profile(s) will be saved to `$HOME/Library/MobileDevice/Provisioning Profiles`.
  Refer to [Signing iOS apps](../code-signing-yaml/signing-ios/) for more information about accessing App Store Connect.
 
 To initialize keychain at system default keychain path with empty keychain password and add your `certificate.p12` with certificate password, use the [keychain](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md#keychain) tool with the following command:
 
-    keychain initialize
-    keychain add-certificates --certificate /path/to/certificate.p12 --certificate-password CERTIFICATE_PASSWORD
+```bash
+keychain initialize
+keychain add-certificates --certificate /path/to/certificate.p12 --certificate-password CERTIFICATE_PASSWORD
+```
 
 Note that `--certificate` option can be either a path literal, or a glob pattern to match certificates.
 
 To use the provisioning profile from `/path/to/profile.mobileprovision` in your Xcode project `/path/to/MyProject.xcodeproj` and generate an .ipa archive using `MyScheme` scheme, use [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) with the following command:
 
-    xcode-project use-profiles --project /path/to/MyProject.xcodeproj --profile /path/to/profile.mobileprovision
-    xcode-project build-ipa --project /path/to/MyProject.xcodeproj --scheme MyScheme
+```bash
+xcode-project use-profiles --project /path/to/MyProject.xcodeproj --profile /path/to/profile.mobileprovision
+xcode-project build-ipa --project /path/to/MyProject.xcodeproj --scheme MyScheme
+```
 
 Note that `--project` option can be either a path literal, or a glob pattern to match projects in working directory (Default is `**/*.xcodeproj`).
 
@@ -46,12 +51,14 @@ Note that `--project` option can be either a path literal, or a glob pattern to
 
 To build .apk files(s) from the app bundle(s) found with `/path/to/**/*.aab` glob pattern with keystore `/path/to/keystore.keystore`, `KEYSTORE_PASSWORD`, `KEY_ALIAS` and `KEY_PASSWORD`, use the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) tool:
 
-    android-app-bundle build-universal-apk \
-        --bundle '/path/to/**/*.aab' \
-        --ks /path/to/keystore.keystore \
-        --ks-pass KEYSTORE_PASSWORD \
-        --ks-key-alias KEY_ALIAS \
-        --key-pass KEY_PASSWORD
+```bash
+android-app-bundle build-universal-apk \
+    --bundle '/path/to/**/*.aab' \
+    --ks /path/to/keystore.keystore \
+    --ks-pass KEYSTORE_PASSWORD \
+    --ks-key-alias KEY_ALIAS \
+    --key-pass KEY_PASSWORD
+```
 
 If `--bundle` option is not specified, default glob pattern `**/*.aab` will be used. Please make sure to wrap the pattern in single quotes.
 
@@ -65,4 +72,6 @@ Please refer to [documentation](https://github.com/codemagic-ci-cd/cli-tools/tre
 
 To generate a changelog text from Git history, use the [git-changelog](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/git-changelog#git-changelog) tool. For example, to generate a changelog to `CHANGELOG` file starting from the previous tag, use:
 
-    git-changelog generate --previous-commit `git rev-list --tags --skip=1  --max-count=1` > CHANGELOG
+```bash
+git-changelog generate --previous-commit `git rev-list --tags --skip=1  --max-count=1` > CHANGELOG
+```
\ No newline at end of file
diff --git a/content/code-signing-yaml/signing-android.md b/content/code-signing-yaml/signing-android.md
index 9aaa4bb..7b19810 100644
--- a/content/code-signing-yaml/signing-android.md
+++ b/content/code-signing-yaml/signing-android.md
@@ -12,7 +12,7 @@ This example shows how to set up code signing using Gradle.
 
 1. Set your signing configuration in `build.gradle` as follows:
 
-```
+```gradle
 ...
   android {
       ...
@@ -45,7 +45,7 @@ This example shows how to set up code signing using Gradle.
 ```
 2. Add your keystore and keystore details in the [`environment`](../getting-started/yaml#environment) section of the configuration file. [Encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password-protected), key alias and key alias password (if key alias is password-protected) and set the encrypted values to the following environment variables. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build.
 
-```  
+```yaml
 environment:  
   CM_KEYSTORE: Encrypted(...)
   CM_KEYSTORE_PASSWORD: Encrypted(...)
@@ -55,7 +55,7 @@ environment:
 
 3. In the [`scripts`](../getting-started/yaml#scripts) section of the configuration file, you will need to decode the keystore file and add it before the build command. You can choose any path to your keystore file. For example:
 
-```
+```yaml
 scripts:
   - name: Build Android
     script: |
@@ -66,7 +66,7 @@ scripts:
 
 Pay attention to the fact that scripts are executed as separate processes and environment variables defined inside one script won't be accessible in another script. Therefore, if you want to access your `CM_KEYSTORE_PATH` variable from multiple scripts, it makes sense to define it in the `environment` section.
 
-```
+```yaml
 environment:  
   CM_KEYSTORE_PATH: /tmp/keystore.keystore
   CM_KEYSTORE: Encrypted(...)
@@ -89,35 +89,40 @@ The following templates show code signing using `key.properties`.
 
 ### Set up default debug key.properties
 
-    - name: Set up debug key.properties
-      script: |
-        keytool -genkeypair \
-          -alias androiddebugkey \
-          -keypass android \
-          -keystore ~/.android/debug.keystore \
-          -storepass android \
-          -dname 'CN=Android Debug,O=Android,C=US' \
-          -keyalg 'RSA' \
-          -keysize 2048 \
-          -validity 10000
-
+```yaml
+- name: Set up debug key.properties
+  script: |
+    keytool -genkeypair \
+      -alias androiddebugkey \
+      -keypass android \
+      -keystore ~/.android/debug.keystore \
+      -storepass android \
+      -dname 'CN=Android Debug,O=Android,C=US' \
+      -keyalg 'RSA' \
+      -keysize 2048 \
+      -validity 10000
+```
 ### Set up code signing with user-specified keys
 
 In order to do code signing [encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password protected), key alias and key alias password (if key alias is password protected) and set the encrypted values to the following environment variables:
 
-    CM_KEYSTORE: Encrypted(...)
-    CM_KEYSTORE_PASSWORD: Encrypted(...)
-    CM_KEY_ALIAS_USERNAME: Encrypted(...)
-    CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+```yaml
+CM_KEYSTORE: Encrypted(...)
+CM_KEYSTORE_PASSWORD: Encrypted(...)
+CM_KEY_ALIAS_USERNAME: Encrypted(...)
+CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+```
 
 Use the following script:
 
-    - name: Set up key.properties
-      script: |
-        echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
-        cat >> "$FCI_BUILD_DIR/project_directory/android/key.properties" <<EOF
-        storePassword=$CM_KEYSTORE_PASSWORD
-        keyPassword=$CM_KEY_ALIAS_PASSWORD
-        keyAlias=$CM_KEY_ALIAS_USERNAME
-        storeFile=/tmp/keystore.keystore
-        EOF
+```yaml
+- name: Set up key.properties
+  script: |
+    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+    cat >> "$FCI_BUILD_DIR/project_directory/android/key.properties" <<EOF
+    storePassword=$CM_KEYSTORE_PASSWORD
+    keyPassword=$CM_KEY_ALIAS_PASSWORD
+    keyAlias=$CM_KEY_ALIAS_USERNAME
+    storeFile=/tmp/keystore.keystore
+    EOF
+```
diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
index 9959268..9e932f0 100644
--- a/content/code-signing-yaml/signing-ios.md
+++ b/content/code-signing-yaml/signing-ios.md
@@ -35,30 +35,34 @@ Take note of the **Issuer ID** above the table of active keys as well as the **K
 
 Save the API key and the related information as [environment](../getting-started/yaml#environment) variables. Make sure to [encrypt](../building/encrypting/#encrypting-sensitive-data) the values of the variables before adding them to the configuration file.
 
-    environment:
-      vars: 
-        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
-        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
-        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
-        CERTIFICATE_PRIVATE_KEY: Encrypted(...)
+```yaml
+environment:
+  vars:
+    APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
+    APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
+    APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
+    CERTIFICATE_PRIVATE_KEY: Encrypted(...)
+```
 
-* `APP_STORE_CONNECT_KEY_IDENTIFIER`
+- `APP_STORE_CONNECT_KEY_IDENTIFIER`
 
   In **App Store Connect > Users and Access > Keys**, this is the **Key ID** of the key.
 
-* `APP_STORE_CONNECT_ISSUER_ID`
+- `APP_STORE_CONNECT_ISSUER_ID`
 
   In **App Store Connect > Users and Access > Keys**, this is the **Issuer ID** displayed above the table of active keys.
 
-* `APP_STORE_CONNECT_PRIVATE_KEY`
+- `APP_STORE_CONNECT_PRIVATE_KEY`
 
   This is the private API key downloaded from App Store Connect. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build. Alternativey, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
 
-* `CERTIFICATE_PRIVATE_KEY`
+- `CERTIFICATE_PRIVATE_KEY`
 
   A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal:
 
-      ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
+```bash
+ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
+```
 
 {{<notebox>}}
 Alternatively, each property can be specified in the `scripts` section of the YAML file as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
@@ -68,53 +72,58 @@ Alternatively, each property can be specified in the `scripts` section of the YA
 
 To code sign the app, add the following commands in the [`scripts`](../getting-started/yaml#scripts) section of the configuration file, after all the dependencies are installed, right before the build commands. 
 
-    scripts:
-      ... your dependencies installation
-      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
-        script: keychain initialize
-      - name: Fetch signing files
-        script: |
-          app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
-            --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
-            --create  # Allow creating resources if existing are not found.
-      - name: Set up signing certificate
-        script: keychain add-certificates
-      - name: Set up code signing settings on Xcode project
-        script: xcode-project use-profiles
-      ... your build commands
-
-Based on the specified bundle ID and [provisioning profile type]((https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store)), Codemagic will fetch or create the relevant provisioning profile and certificate to code sign the build.
+```yaml
+scripts:
+  ... your dependencies installation
+  - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+    script: keychain initialize
+  - name: Fetch signing files
+    script: |
+      app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
+        --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
+        --create  # Allow creating resources if existing are not found.
+  - name: Set up signing certificate
+    script: keychain add-certificates
+  - name: Set up code signing settings on Xcode project
+    script: xcode-project use-profiles
+  ... your build commands
+```
+
+Based on the specified bundle ID and [provisioning profile type](<(https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store)>), Codemagic will fetch or create the relevant provisioning profile and certificate to code sign the build.
 
 ## Manual code signing
 
 In order to use manual code signing, [encrypt](../building/encrypting/#encrypting-sensitive-data) your **signing certificate**, the **certificate password** (if the certificate is password-protected) and the **provisioning profile**, and set the encrypted values to the following environment variables. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build.
 
-    environment:
-      CM_CERTIFICATE: Encrypted(...)
-      CM_CERTIFICATE_PASSWORD: Encrypted(...)
-      CM_PROVISIONING_PROFILE: Encrypted(...)
-
-Then add the code signing configuration and the commands to code sign the build in the scripts section, after all the dependencies are installed, right before the build commands. 
-
-    scripts:
-      ... your dependencies installation
-      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
-        script: keychain initialize
-      - name: Set up Provisioning profiles from environment variables
-        script: |
-          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-          mkdir -p "$PROFILES_HOME"
-          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
-          echo "Saved provisioning profile $PROFILE_PATH"
-      - name: Set up signing certificate
-        script: |
-          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-
-          # when using a password-protected certificate
-          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
-          # when using a certificate that is not password-protected
-          keychain add-certificates --certificate /tmp/certificate.p12
-      - name: Set up code signing settings on Xcode project
-        script: xcode-project use-profiles
-      ... your build commands
+```yaml
+environment:
+  CM_CERTIFICATE: Encrypted(...)
+  CM_CERTIFICATE_PASSWORD: Encrypted(...)
+  CM_PROVISIONING_PROFILE: Encrypted(...)
+```
+
+Then add the code signing configuration and the commands to code sign the build in the scripts section, after all the dependencies are installed, right before the build commands.
+
+```yaml
+scripts:
+  ... your dependencies installation
+  - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+    script: keychain initialize
+  - name: Set up Provisioning profiles from environment variables
+    script: |
+      PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+      mkdir -p "$PROFILES_HOME"
+      PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+      echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+      echo "Saved provisioning profile $PROFILE_PATH"
+  - name: Set up signing certificate
+    script: |
+      echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+      # when using a password-protected certificate
+      keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+      # when using a certificate that is not password-protected
+      keychain add-certificates --certificate /tmp/certificate.p12
+  - name: Set up code signing settings on Xcode project
+    script: xcode-project use-profiles
+  ... your build commands
+```
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 517f142..c5841c0 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -29,7 +29,9 @@ As a keystore can hold multiple keys, each key in it must have an **alias**. Bot
 
 You can create a keystore for signing your release builds with the Java Keytool utility by running the following command:
 
-    keytool -genkey -v -keystore keystore_name.jks -alias alias_name -keyalg RSA -keysize 2048 -validity 10000
+```bash
+keytool -genkey -v -keystore keystore_name.jks -alias alias_name -keyalg RSA -keysize 2048 -validity 10000
+```
 
 Keytool then prompts you to enter your personal details for creating the certificate, as well as provide passwords for the keystore and the key. It then generates the keystore as a file called **keystore_name.jks** in the directory you're in. The key is valid for 10,000 days.
 
@@ -49,36 +51,36 @@ Alternatively, you can use [environment variables](../building/environment-varia
 
 Set your signing configuration in `build.gradle` as follows:
 
-```
-      ...
-       android {
-           ...
-           defaultConfig { ... }
-
-           signingConfigs {
-               release {
-                   if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
-                       storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
-                       storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
-                       keyAlias System.getenv()["FCI_KEY_ALIAS"]
-                       keyPassword System.getenv()["FCI_KEY_PASSWORD"]
-                   } else {
-                       storeFile file("/path/to/local/myreleasekey.keystore")
-                       storePassword "password"
-                       keyAlias "MyReleaseKey"
-                       keyPassword "password"
-                   }
-               }
-           }
-
-           buildTypes {
-               release {
-                   ...
-                   signingConfig signingConfigs.release
-               }
-           }
-       }
-       ...
+```gradle
+...
+android {
+    ...
+    defaultConfig { ... }
+
+    signingConfigs {
+        release {
+            if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
+                storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
+                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
+                keyAlias System.getenv()["FCI_KEY_ALIAS"]
+                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
+            } else {
+                storeFile file("/path/to/local/myreleasekey.keystore")
+                storePassword "password"
+                keyAlias "MyReleaseKey"
+                keyPassword "password"
+            }
+        }
+    }
+
+    buildTypes {
+        release {
+            ...
+            signingConfig signingConfigs.release
+        }
+    }
+}
+...
 ```
 
 ## Setting up Android code signing on Codemagic
diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index 05d1472..b8c7fc0 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -44,22 +44,27 @@ In order to use `codemagic.yaml` for manual builds, you must select the workflow
 
 Set up local properties
 
-    - echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
-
+```yaml
+- echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
+```
 ### Building .apk
 
-    - flutter build apk --release
+```yaml
+- flutter build apk --release
+```
 
 ### Building universal .apk(s) from existing app bundle(s) with user-specified keys
 
 If your app settings in Codemagic have building Android App Bundles enabled, we will automatically include a script for generating a signed `app-universal.apk` during the YAML export. If you are creating a YAML file from a scratch, add the following script to receive the .apk file(s):
 
-    - android-app-bundle build-universal-apk \
-        --bundle 'project_directory/build/**/outputs/**/*.aab' \
-        --ks /tmp/keystore.keystore \
-        --ks-pass $CM_KEYSTORE_PASSWORD \
-        --ks-key-alias $CM_KEY_ALIAS_USERNAME \
-        --key-pass $CM_KEY_ALIAS_PASSWORD
+```yaml
+- android-app-bundle build-universal-apk \
+  --bundle 'project_directory/build/**/outputs/**/*.aab' \
+  --ks /tmp/keystore.keystore \
+  --ks-pass $CM_KEYSTORE_PASSWORD \
+  --ks-key-alias $CM_KEY_ALIAS_USERNAME \
+  --key-pass $CM_KEY_ALIAS_PASSWORD
+```
 
 Please make sure to wrap the `--bundle` pattern in single quotes. If `--bundle` option is not specified, default glob pattern `**/*.aab` will be used.
 
@@ -73,7 +78,9 @@ Codemagic uses the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-t
 
 ### Building an unsigned application .app
 
-      - flutter build ios --debug --no-codesign
+```yaml
+- flutter build ios --debug --no-codesign
+```
 
 ### Building a signed iOS application archive .ipa
 
@@ -81,19 +88,23 @@ Codemagic uses the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-t
 Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
 {{</notebox>}}
 
-      - xcode-project use-profiles
-      - xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
+```yaml
+- xcode-project use-profiles
+- xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
+```
 
 {{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}}
 
 ## Web builds
 
-    - name: Build web
-      script: |
-        flutter config --enable-web
-        flutter build web --release
-        cd build/web
-        7z a -r ../web.zip ./*
+```yaml
+- name: Build web
+  script: |
+    flutter config --enable-web
+    flutter build web --release
+    cd build/web
+    7z a -r ../web.zip ./*
+```
 
 ## Testing, code signing and publishing a Flutter app
 
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index 210f0d9..6e6c985 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -32,7 +32,9 @@ Note that you need to set up a [webhook](../building/webhooks) for automatic bui
 
 The necessary command for building native Android application goes under `scripts` in the [overall architecture](../getting-started/yaml/#template) in the `codemagic.yaml` file. For Android (built with gradle), the script looks like this:
 
-    - ./gradlew build
+```yaml
+- ./gradlew build
+```
 
 ## Testing, code signing and publishing an Android app
 
@@ -46,62 +48,63 @@ To test, code sign and publish an Android app:
 
 The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
 
-    workflows:
-      android-workflow:
-        name: Android Workflow
-        max_build_duration: 60
-        instance_type: mac_pro
-        environment:
-          vars:
-            CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
-            CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
-            CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
-            CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
-          node: latest
-        triggering:
-          events:
-            - push
-            - tag
-            - pull_request
-          branch_patterns:
-            - pattern: release
-              include: true
-              source: true
-        scripts:
-          - name: Set up local properties
-            script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/local.properties"
-          - name: Set up key.properties file for code signing
-            script: |
-              echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
-              cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
-              storePassword=$CM_KEYSTORE_PASSWORD
-              keyPassword=$CM_KEY_ALIAS_PASSWORD
-              keyAlias=$CM_KEY_ALIAS_USERNAME
-              storeFile=/tmp/keystore.keystore
-              EOF
-          - name: Build Android app
-            script: ./gradlew assembleRelease
-        artifacts:
-          - app/build/outputs/**/**/*.apk
-        publishing:
-          google_play:
-            credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
-            track: internal
-
+```yaml
+workflows:
+  android-workflow:
+    name: Android Workflow
+    max_build_duration: 60
+    instance_type: mac_pro
+    environment:
+      vars:
+        CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
+        CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
+        CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
+        CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
+      node: latest
+    triggering:
+      events:
+        - push
+        - tag
+        - pull_request
+      branch_patterns:
+        - pattern: release
+          include: true
+          source: true
+    scripts:
+      - name: Set up local properties
+        script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/local.properties"
+      - name: Set up key.properties file for code signing
+        script: |
+          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
+          storePassword=$CM_KEYSTORE_PASSWORD
+          keyPassword=$CM_KEY_ALIAS_PASSWORD
+          keyAlias=$CM_KEY_ALIAS_USERNAME
+          storeFile=/tmp/keystore.keystore
+          EOF
+      - name: Build Android app
+        script: ./gradlew assembleRelease
+    artifacts:
+      - app/build/outputs/**/**/*.apk
+    publishing:
+      google_play:
+        credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
+        track: internal
+```
 
 {{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle`. {{</notebox>}}
 
 Incrementing the version code can be done as follows:
 
-```
-    android {
+```gradle
+android {
+    ...
+    
+    def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
+    defaultConfig {
+        ...
+        versionCode appVersionCode
         ...
-        
-        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
-        defaultConfig {
-            ...
-            versionCode appVersionCode
-            ...
-        }
     }
+}
 ```
\ No newline at end of file
diff --git a/content/getting-started/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
index 38364fd..d27cf8a 100644
--- a/content/getting-started/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -16,41 +16,52 @@ Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/
 
 For building an unsigned iOS app (.app), you need to run the following command in the scripts section:
 
-    scripts:
-      - xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" \
-                         -scheme "MyScheme" \
-                         CODE_SIGN_INDENTITY="" \
-                         CODE_SIGNING_REQUIRED=NO \
-                         CODE_SIGNING_ALLOWED=NO
+```yaml
+scripts:
+  - xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" \
+    -scheme "MyScheme" \
+    CODE_SIGN_INDENTITY="" \
+    CODE_SIGNING_REQUIRED=NO \
+    CODE_SIGNING_ALLOWED=NO
+```
 
 If you don't have a workspace, use `-project "MyXcodeProject.xcodeproj"` instead of the `-workspace "MyXcodeWorkspace.xcworkspace"` option.
 
 Your artifact will be generated at the default Xcode path. You can access it by adding the following pattern in the `artifacts` section of `codemagic.yaml`:
 
-    $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
-
+```yaml
+$HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
+```
 If you have Xcode Debugging Symbols enabled, the dSYM file will be generated in the same directory as the app and can be accessed with the following artifact pattern:
 
-    $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+```yaml
+$HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+```
 
 ## Building a native iOS app archive (.ipa)
 
 For building an archived iOS app (.ipa) from your Xcode project, you need to run the following command in the scripts section:
 
-    - xcode-project build-ipa --project "MyXcodeProject.xcodeproj" --scheme "MyScheme"
+```yaml
+- xcode-project build-ipa --project "MyXcodeProject.xcodeproj" --scheme "MyScheme"
+```
 
 You can also build an archive from your Xcode workspace:
 
-    - xcode-project build-ipa --workspace "MyXcodeWorkspace.xcworkspace" --scheme "MyScheme"
+```yaml
+- xcode-project build-ipa --workspace "MyXcodeWorkspace.xcworkspace" --scheme "MyScheme"
+```
 
 Please check [Codemagic CLI tools documentation](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/build-ipa.md#build-ipa) to learn about more optional arguments to `xcode-project build-ipa`.
 
 By default, your artifacts will be generated into `build/ios/ipa` but you can specify a different location using the [`--ipa-directory`](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/build-ipa.md#--ipa-directoryipa_directory) option. The Xcode build log can be made available with the `/tmp/xcodebuild_logs/*.log` pattern and the dSYM file will be still available at the default Xcode path.
 
-    artifacts:
-      - build/ios/ipa/*.ipa
-      - /tmp/xcodebuild_logs/*.log
-      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+```yaml
+artifacts:
+  - build/ios/ipa/*.ipa
+  - /tmp/xcodebuild_logs/*.log
+  - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+```
 
 {{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}} 
 
@@ -66,50 +77,52 @@ To test, code sign and publish an iOS app:
 
 The following example shows a workflow that can be used to publish your iOS app to App Store Connect.
 
-    workflows:
-      ios-workflow:
-        name: ios_workflow
-        environment:
-          vars:
-            XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # PUT YOUR WORKSPACE NAME HERE
-            XCODE_SCHEME: "YOUR_SCHEME_NAME" # PUT THE NAME OF YOUR SCHEME HERE
-            CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
-            CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
-            CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
-          xcode: latest
-          cocoapods: default
-        triggering:
-          events:
-            - push
-          branch_patterns:
-            - pattern: master
-              include: true
-              source: true
-        scripts:
-          - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
-            script: keychain initialize
-          - name: Set up Provisioning profiles from environment variables
-            script: |
-              PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-              mkdir -p "$PROFILES_HOME"
-              PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-              echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
-              echo "Saved provisioning profile $PROFILE_PATH"
-          - name: Set up signing certificate
-            script: |
-              echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-              keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
-          - name: Increment build number
-            script: agvtool new-version -all $(($BUILD_NUMBER +1))
-          - name: Set up code signing settings on Xcode project
-            script: xcode-project use-profiles
-          - name: Build ipa for distribution
-            script: xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
-        artifacts:
-          - build/ios/ipa/*.ipa
-          - /tmp/xcodebuild_logs/*.log
-          - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
-        publishing:
-          app_store_connect:                 
-            apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE  
-            password: Encrypted(...) # PUT YOUR APP-SPECIFIC-PASSWORD HERE https://support.apple.com/en-us/HT204397
+```yaml
+workflows:
+  ios-workflow:
+    name: ios_workflow
+    environment:
+      vars:
+        XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # PUT YOUR WORKSPACE NAME HERE
+        XCODE_SCHEME: "YOUR_SCHEME_NAME" # PUT THE NAME OF YOUR SCHEME HERE
+        CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
+        CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
+        CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
+      xcode: latest
+      cocoapods: default
+    triggering:
+      events:
+        - push
+      branch_patterns:
+        - pattern: master
+          include: true
+          source: true
+    scripts:
+      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+        script: keychain initialize
+      - name: Set up Provisioning profiles from environment variables
+        script: |
+          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+          mkdir -p "$PROFILES_HOME"
+          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+          echo "Saved provisioning profile $PROFILE_PATH"
+      - name: Set up signing certificate
+        script: |
+          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+      - name: Increment build number
+        script: agvtool new-version -all $(($BUILD_NUMBER +1))
+      - name: Set up code signing settings on Xcode project
+        script: xcode-project use-profiles
+      - name: Build ipa for distribution
+        script: xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
+    artifacts:
+      - build/ios/ipa/*.ipa
+      - /tmp/xcodebuild_logs/*.log
+      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+    publishing:
+      app_store_connect:
+        apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE
+        password: Encrypted(...) # PUT YOUR APP-SPECIFIC-PASSWORD HERE https://support.apple.com/en-us/HT204397
+```
\ No newline at end of file
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index a0ece6b..f617562 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -12,11 +12,15 @@ React Native is a cross-platform solution that allows you to build apps for both
 
 Set up local properties
 
-    - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+```yaml
+- echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+```
 
 Building an Android application:
 
-    - cd android && ./gradlew build
+```yaml
+- cd android && ./gradlew build
+```
 
 ## iOS
 
@@ -26,7 +30,9 @@ Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/
 
 Script for building an iOS application:
 
-    - xcode-project build-ipa --workspace "ios/MyReact.xcworkspace" --scheme "MyReact"
+```yaml
+- xcode-project build-ipa --workspace "ios/MyReact.xcworkspace" --scheme "MyReact"
+```
 
 {{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}} 
 
@@ -42,118 +48,122 @@ To test and publish a React Native app:
 
 The following example shows a workflow that can be used to publish your iOS app to App Store Connect.
 
-    workflows:
-      ios-workflow:
-        name: iOS Workflow
-        max_build_duration: 60
-        instance_type: mac_pro
-        environment:
-          vars:
-            XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # YOUR WORKSPACE NAME HERE
-            XCODE_SCHEME: "YOUR_SCHEME_NAME" # THE NAME OF YOUR SCHEME HERE
-            CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
-            CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
-            CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
-          node: latest
-          xcode: latest
-          cocoapods: default
-        triggering:
-          events:
-            - push
-            - tag
-            - pull_request
-          branch_patterns:
-            - pattern: develop
-              include: true
-              source: true
-        scripts:
-          - name: Install npm dependencies
-            script: npm install
-          - name: Install CocoaPods dependencies
-            script: |
-                cd ios 
-                pod repo update
-                pod install
-          - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
-            script: keychain initialize
-          - name: Set up Provisioning profiles from environment variables
-            script: |
-              PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-              mkdir -p "$PROFILES_HOME"
-              PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-              echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
-              echo "Saved provisioning profile $PROFILE_PATH"
-          - name: Set up signing certificate
-            script: |
-              echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-              keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
-          - name: Increment build number
-            script: cd ios && agvtool new-version -all $(($BUILD_NUMBER +1))
-          - name: Set up code signing settings on Xcode project
-            script: xcode-project use-profiles
-          - name: Build ipa for distribution
-            script: xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme $XCODE_SCHEME
-        artifacts:
-          - build/ios/ipa/*.ipa
-          - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM            
-        publishing:
-          app_store_connect:                 
-            apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE
-            password: Encrypted(...) # THE ENCRYPTED APP-SPECIFIC PASSWORD GOES HERE
+```yaml
+workflows:
+  ios-workflow:
+    name: iOS Workflow
+    max_build_duration: 60
+    instance_type: mac_pro
+    environment:
+      vars:
+        XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # YOUR WORKSPACE NAME HERE
+        XCODE_SCHEME: "YOUR_SCHEME_NAME" # THE NAME OF YOUR SCHEME HERE
+        CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
+        CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
+        CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
+      node: latest
+      xcode: latest
+      cocoapods: default
+    triggering:
+      events:
+        - push
+        - tag
+        - pull_request
+      branch_patterns:
+        - pattern: develop
+          include: true
+          source: true
+    scripts:
+      - name: Install npm dependencies
+        script: npm install
+      - name: Install CocoaPods dependencies
+        script: |
+            cd ios 
+            pod repo update
+            pod install
+      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+        script: keychain initialize
+      - name: Set up Provisioning profiles from environment variables
+        script: |
+          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+          mkdir -p "$PROFILES_HOME"
+          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+          echo "Saved provisioning profile $PROFILE_PATH"
+      - name: Set up signing certificate
+        script: |
+          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+      - name: Increment build number
+        script: cd ios && agvtool new-version -all $(($BUILD_NUMBER +1))
+      - name: Set up code signing settings on Xcode project
+        script: xcode-project use-profiles
+      - name: Build ipa for distribution
+        script: xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme $XCODE_SCHEME
+    artifacts:
+      - build/ios/ipa/*.ipa
+      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+    publishing:
+      app_store_connect:
+        apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE
+        password: Encrypted(...) # THE ENCRYPTED APP-SPECIFIC PASSWORD GOES HERE
+```
 
 ## Android workflow example
 
 The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
 
-    workflows:
-      android-workflow:
-        name: Android Workflow
-        max_build_duration: 60
-        instance_type: mac_pro
-        environment:
-          vars:
-            CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
-            CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
-            CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
-            CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
-          node: latest
-        triggering:
-          events:
-            - push
-            - tag
-            - pull_request
-          branch_patterns:
-            - pattern: release
-              include: true
-              source: true
-        scripts:
-          - name: Install npm dependencies
-            script: npm install
-          - name: Set up local properties
-            script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
-          - name: Set up key.properties file for code signing
-            script: |
-              echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
-              cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
-              storePassword=$CM_KEYSTORE_PASSWORD
-              keyPassword=$CM_KEY_ALIAS_PASSWORD
-              keyAlias=$CM_KEY_ALIAS_USERNAME
-              storeFile=/tmp/keystore.keystore
-              EOF
-          - name: Build Android app
-            script: cd android && ./gradlew assembleRelease
-        artifacts:
-          - android/app/build/outputs/**/**/*.apk
-        publishing:
-          google_play:
-            credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
-            track: internal
-    
+```yaml
+workflows:
+  android-workflow:
+    name: Android Workflow
+    max_build_duration: 60
+    instance_type: mac_pro
+    environment:
+      vars:
+        CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
+        CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
+        CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
+        CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
+      node: latest
+    triggering:
+      events:
+        - push
+        - tag
+        - pull_request
+      branch_patterns:
+        - pattern: release
+          include: true
+          source: true
+    scripts:
+      - name: Install npm dependencies
+        script: npm install
+      - name: Set up local properties
+        script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+      - name: Set up key.properties file for code signing
+        script: |
+          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
+          storePassword=$CM_KEYSTORE_PASSWORD
+          keyPassword=$CM_KEY_ALIAS_PASSWORD
+          keyAlias=$CM_KEY_ALIAS_USERNAME
+          storeFile=/tmp/keystore.keystore
+          EOF
+      - name: Build Android app
+        script: cd android && ./gradlew assembleRelease
+    artifacts:
+      - android/app/build/outputs/**/**/*.apk
+    publishing:
+      google_play:
+        credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
+        track: internal
+```
+
 {{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle` {{</notebox>}}
 
 Incrementing the version code can be done as follows:
 
-```
+```gradle
     android {
         ...
         
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
index 96606c6..8b25498 100644
--- a/content/getting-started/building-an-ionic-app.md
+++ b/content/getting-started/building-an-ionic-app.md
@@ -41,242 +41,244 @@ To test, code sign and publish Ionic Android and iOS apps:
 
 The following example shows how to set up a workflow that builds your **Ionic Capacitor** Android app and publishes to a Google Play internal track.
 
-    workflows:
-      ionic-capacitor-android-workflow:
-          name: Ionic Capacitor Android Workflow
-          max_build_duration: 120
-          instance_type: mac_mini
-          environment:
-              vars:
-                # Android Keystore environment variables
-                CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
-                CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
-                CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
-                CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
-              node: latest
-          triggering:
-              events:
-                  - push
-                  - tag
-                  - pull_request
-              branch_patterns:
-                  - pattern: develop
-                    include: true
-                    source: true
-          scripts:
-              - name: Install npm dependencies for Ionic Capacitor project
-                script: |
-                  npm install
-              - name: Set Android SDK location
-                script: |
-                  echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
-              - name: Set up keystore
-                script: |
-                  echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
-                  cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
-                  storePassword=$CM_KEYSTORE_PASSWORD
-                  keyPassword=$CM_KEY_ALIAS_PASSWORD
-                  keyAlias=$CM_KEY_ALIAS_USERNAME
-                  storeFile=/tmp/keystore.keystore
-                  EOF
-              - name: Update dependencies and copy web assets to native project
-                script: |
-                  # npx cap copy # <- use this is you don't need to update native dependencies
-                  npx cap sync # <- update native dependencies and copy web assets to native project
-              - name: Build Android release
-                script: |
-                  cd android
-                  ./gradlew assembleRelease
-          artifacts:
-              - android/app/build/outputs/**/*.apk
-          publishing:
-              google_play:
-                  credentials: Encrypted(...) # <- Put your encrypted JSON key file for Google Play service account
-                  track: internal
-              email:
-                  recipients:
-                      - user_one@example.com
-                      - user_two@example.com
-                  notify:
-                    success: true     # To not receive a notification when a build succeeds
-                    failure: false     # To not receive a notification when a build fails
+```yaml
+workflows:
+  ionic-capacitor-android-workflow:
+    name: Ionic Capacitor Android Workflow
+    max_build_duration: 120
+    instance_type: mac_mini
+    environment:
+      vars:
+        # Android Keystore environment variables
+        CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
+        CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
+        CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
+        CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
+      node: latest
+    triggering:
+      events:
+        - push
+        - tag
+        - pull_request
+      branch_patterns:
+        - pattern: develop
+          include: true
+          source: true
+    scripts:
+      - name: Install npm dependencies for Ionic Capacitor project
+        script: |
+          npm install
+      - name: Set Android SDK location
+        script: |
+          echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+      - name: Set up keystore
+        script: |
+          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
+          storePassword=$CM_KEYSTORE_PASSWORD
+          keyPassword=$CM_KEY_ALIAS_PASSWORD
+          keyAlias=$CM_KEY_ALIAS_USERNAME
+          storeFile=/tmp/keystore.keystore
+          EOF
+      - name: Update dependencies and copy web assets to native project
+        script: |
+          # npx cap copy # <- use this is you don't need to update native dependencies
+          npx cap sync # <- update native dependencies and copy web assets to native project
+      - name: Build Android release
+        script: |
+          cd android
+          ./gradlew assembleRelease
+    artifacts:
+      - android/app/build/outputs/**/*.apk
+    publishing:
+      google_play:
+        credentials: Encrypted(...) # <- Put your encrypted JSON key file for Google Play service account
+        track: internal
+      email:
+        recipients:
+          - user_one@example.com
+          - user_two@example.com
+        notify:
+          success: true     # To not receive a notification when a build succeeds
+          failure: false     # To not receive a notification when a build fails
+```
 
 {{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle`. {{</notebox>}}
 
 Incrementing the version code can be done as follows:
 
-```
-    android {
+```gradle
+android {
+    ...
+    
+    def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
+    defaultConfig {
+        ...
+        versionCode appVersionCode
         ...
-        
-        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
-        defaultConfig {
-            ...
-            versionCode appVersionCode
-            ...
-        }
     }
+}
 ```
 ## Android Ionic Cordova workflow example
 
 The following example shows how to set up a workflow that builds your **Ionic Cordova** Android app and publishes to a Google Play internal track.
 
-```
+```yaml
 workflows:
   ionic-cordova-android-workflow:
-      name: Ionic Cordova Android Workflow
-      max_build_duration: 120
-      instance_type: mac_mini
-      environment:
-          vars:
-            # Android Keystore environment variables
-            CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
-            CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
-            CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
-            CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
-            CM_KEYSTORE_PATH: /tmp/keystore.keystore
-          node: latest
-      triggering:
-          events:
-              - push
-              - tag
-              - pull_request
-          branch_patterns:
-              - pattern: develop
-                include: true
-                source: true
-      scripts:
-          - name: Install npm dependencies for Ionic Cordova project and update to Cordova version 9
-            script: |
-              npm ci # equivalent of npm install for CI systems. Requires package-lock.json or npm-shrinkwrap.json to be present
-              cvm install 9.0.0
-              cvm use 9.0.0
-          - name: Setup Cordova Android platform
-            script: |
-              ionic cordova platform remove android --nosave
-              ionic cordova platform add android --confirm --no-interactive --noresources
-          - name: Build Android Cordova App
-            script: ionic cordova build android --release --no-interactive --prod --device
-          - name: Sign APK
-            script: |
-              echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
-              APK_PATH=$(find platforms/android/app/build/outputs/apk/release -name "*.apk" | head -1)
-              jarsigner \
-                -sigalg SHA1withRSA \
-                -digestalg SHA1 \
-                -keystore $CM_KEYSTORE_PATH \
-                -storepass $CM_KEYSTORE_PASSWORD \
-                -keypass $CM_KEY_ALIAS_PASSWORD \
-                $APK_PATH $CM_KEY_ALIAS_USERNAME
-      artifacts:
-          - platforms/android/app/build/outputs/**/*.apk
-      publishing:
-          google_play:
-              credentials: Encrypted(...) # <- Put your encrypted JSON key file for Google Play service account
-              track: internal
-          email:
-              recipients:
-                  - user_one@example.com
-                  - user_two@example.com
-              notify:
-                success: true     # To not receive a notification when a build succeeds
-                failure: false     # To not receive a notification when a build fails
+    name: Ionic Cordova Android Workflow
+    max_build_duration: 120
+    instance_type: mac_mini
+    environment:
+      vars:
+        # Android Keystore environment variables
+        CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
+        CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
+        CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
+        CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
+        CM_KEYSTORE_PATH: /tmp/keystore.keystore
+      node: latest
+    triggering:
+      events:
+        - push
+        - tag
+        - pull_request
+      branch_patterns:
+        - pattern: develop
+          include: true
+          source: true
+    scripts:
+      - name: Install npm dependencies for Ionic Cordova project and update to Cordova version 9
+        script: |
+          npm ci # equivalent of npm install for CI systems. Requires package-lock.json or npm-shrinkwrap.json to be present
+          cvm install 9.0.0
+          cvm use 9.0.0
+      - name: Setup Cordova Android platform
+        script: |
+          ionic cordova platform remove android --nosave
+          ionic cordova platform add android --confirm --no-interactive --noresources
+      - name: Build Android Cordova App
+        script: ionic cordova build android --release --no-interactive --prod --device
+      - name: Sign APK
+        script: |
+          echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
+          APK_PATH=$(find platforms/android/app/build/outputs/apk/release -name "*.apk" | head -1)
+          jarsigner \
+            -sigalg SHA1withRSA \
+            -digestalg SHA1 \
+            -keystore $CM_KEYSTORE_PATH \
+            -storepass $CM_KEYSTORE_PASSWORD \
+            -keypass $CM_KEY_ALIAS_PASSWORD \
+            $APK_PATH $CM_KEY_ALIAS_USERNAME
+    artifacts:
+      - platforms/android/app/build/outputs/**/*.apk
+    publishing:
+      google_play:
+        credentials: Encrypted(...) # <- Put your encrypted JSON key file for Google Play service account
+        track: internal
+      email:
+        recipients:
+          - user_one@example.com
+          - user_two@example.com
+        notify:
+          success: true     # To not receive a notification when a build succeeds
+          failure: false     # To not receive a notification when a build fails
 ```
 
 ## iOS Ionic Capacitor workflow example
 
 The following example shows a workflow that can be used to publish your **Ionic Capacitor** iOS app to App Store Connect.
 
-```
+```yaml
 workflows:
-    ionic-capacitor-ios-workflow:
-        name: Ionic Capacitor iOS Workflow
-        max_build_duration: 120
-        instance_type: mac_mini
-        environment:
-            vars:
-                # Ionic Capacitor Xcode worskspace and scheme
-                XCODE_WORKSPACE: "ios/App/App.xcworkspace"
-                XCODE_SCHEME: "App"
-                # Manual Code Signing
-                # CM_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
-                # CM_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
-                # CM_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
-                #
-                # Automatic Code Signing 
-                # https://docs.codemagic.io/yaml/distribution/
-                # https://appstoreconnect.apple.com/access/api
-                APP_STORE_CONNECT_ISSUER_ID: 5a451239-51eb-10b6-bfcc-60e61ddab13c # <-- Put your App Store Connect Issuer Id here
-                APP_STORE_CONNECT_KEY_IDENTIFIER: LY55E1G322 # <-- Put your App Store Connect Key Identifier here
-                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
-                CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
-            node: latest
-            xcode: latest
-            cocoapods: default
-        triggering:
-            events:
-                - push
-            branch_patterns:
-                - pattern: develop
-                  include: true
-                  source: true
-        scripts:
-            - name: Install npm dependencies for Ionic project
-              script: |
-                npm install
-            - name: Cocoapods installation
-              script: |
-                cd ios/App && pod install
-            - name: Update dependencies and copy web assets to native project
-              script: |
-                # npx cap copy # <- use this is you don't need to update native dependencies
-                npx cap sync # <- update native dependencies and copy web assets to native project
-            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
-              script: |
-                keychain initialize
-            # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
-            #   script: |
-            #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-            #     mkdir -p "$PROFILES_HOME"
-            #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-            #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
-            #     echo "Saved provisioning profile $PROFILE_PATH"
-            - name: Fetch signing files
-              script: |
-                # app-store-connect fetch-signing-files "com.nevercode.ncionicapp" --type IOS_APP_STORE --create
-                app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
-            - name: Add certificates to keychain
-              script: |
-                keychain add-certificates
-            - name: Increment build number
-              script: |
-                #!/bin/sh
-                set -e
-                set -x
-                cd $FCI_BUILD_DIR/ios/App
-                agvtool new-version -all $(($BUILD_NUMBER +1))
-            - name: Set up code signing settings on Xcode project
-              script: |
-                xcode-project use-profiles
-            - name: Build ipa for distribution
-              script: |
-                xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
-        artifacts:
-            - build/ios/ipa/*.ipa
-            - /tmp/xcodebuild_logs/*.log
-            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
-            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
-        publishing:
-          app_store_connect:
-            apple_id: yourAppleId@example.com # <- put your Apple Id here
-            password: Encrypted(...) # <-- Put your App Specific Password. For more information visit: https://support.apple.com/en-us/HT204397
-          email:
-            recipients:
-                - user_one@example.com
-                - user_two@example.com
-            notify:
-                success: false     # To not receive a notification when a build succeeds
-                failure: false     # To not receive a notification when a build fails
+  ionic-capacitor-ios-workflow:
+    name: Ionic Capacitor iOS Workflow
+    max_build_duration: 120
+    instance_type: mac_mini
+    environment:
+      vars:
+        # Ionic Capacitor Xcode worskspace and scheme
+        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
+        XCODE_SCHEME: "App"
+        # Manual Code Signing
+        # CM_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
+        # CM_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
+        # CM_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
+        #
+        # Automatic Code Signing 
+        # https://docs.codemagic.io/yaml/distribution/
+        # https://appstoreconnect.apple.com/access/api
+        APP_STORE_CONNECT_ISSUER_ID: 5a451239-51eb-10b6-bfcc-60e61ddab13c # <-- Put your App Store Connect Issuer Id here
+        APP_STORE_CONNECT_KEY_IDENTIFIER: LY55E1G322 # <-- Put your App Store Connect Key Identifier here
+        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
+        CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
+      node: latest
+      xcode: latest
+      cocoapods: default
+    triggering:
+      events:
+        - push
+      branch_patterns:
+        - pattern: develop
+          include: true
+          source: true
+    scripts:
+      - name: Install npm dependencies for Ionic project
+        script: |
+          npm install
+      - name: Cocoapods installation
+        script: |
+          cd ios/App && pod install
+      - name: Update dependencies and copy web assets to native project
+        script: |
+          # npx cap copy # <- use this is you don't need to update native dependencies
+          npx cap sync # <- update native dependencies and copy web assets to native project
+      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+        script: |
+          keychain initialize
+      # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
+      #   script: |
+      #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+      #     mkdir -p "$PROFILES_HOME"
+      #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+      #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+      #     echo "Saved provisioning profile $PROFILE_PATH"
+      - name: Fetch signing files
+        script: |
+          # app-store-connect fetch-signing-files "com.nevercode.ncionicapp" --type IOS_APP_STORE --create
+          app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
+      - name: Add certificates to keychain
+        script: |
+          keychain add-certificates
+      - name: Increment build number
+        script: |
+          #!/bin/sh
+          set -e
+          set -x
+          cd $FCI_BUILD_DIR/ios/App
+          agvtool new-version -all $(($BUILD_NUMBER +1))
+      - name: Set up code signing settings on Xcode project
+        script: |
+          xcode-project use-profiles
+      - name: Build ipa for distribution
+        script: |
+          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
+    artifacts:
+        - build/ios/ipa/*.ipa
+        - /tmp/xcodebuild_logs/*.log
+        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
+        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+    publishing:
+      app_store_connect:
+        apple_id: yourAppleId@example.com # <- put your Apple Id here
+        password: Encrypted(...) # <-- Put your App Specific Password. For more information visit: https://support.apple.com/en-us/HT204397
+      email:
+        recipients:
+          - user_one@example.com
+          - user_two@example.com
+        notify:
+          success: false     # To not receive a notification when a build succeeds
+          failure: false     # To not receive a notification when a build fails
 ```
 
 {{<notebox>}}
@@ -287,96 +289,96 @@ Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/
 
 The following example shows a workflow that can be used to publish your **Ionic Cordova** iOS app to App Store Connect.
 
-```
+```yaml
 workflows:
-    ionic-cordova-ios-workflow:
-        name: Ionic Cordova iOS Workflow
-        max_build_duration: 120
-        instance_type: mac_mini
-        environment:
-            vars:
-                # Ionic Xcode worskspace and scheme
-                XCODE_WORKSPACE: "platforms/ios/YOUR_APP.xcworkspace" # <- Update with your workspace name
-                XCODE_SCHEME: "YOUR_SCHEME" # <- Update with your workspace scheme
-                # Manual Code Signing
-                # CM_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
-                # CM_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
-                # CM_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
-                #
-                # Automatic Code Signing 
-                # https://docs.codemagic.io/yaml/distribution/
-                # https://appstoreconnect.apple.com/access/api
-                APP_STORE_CONNECT_ISSUER_ID: 5a451239-51eb-10b6-bfcc-60e61ddab13c # <-- Put your App Store Connect Issuer Id here
-                APP_STORE_CONNECT_KEY_IDENTIFIER: LY55E1G322 # <-- Put your App Store Connect Key Identifier here
-                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
-                CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
-            node: latest
-            xcode: latest
-            cocoapods: default
-        triggering:
-            events:
-                - push
-            branch_patterns:
-                - pattern: develop
-                  include: true
-                  source: true
-        scripts:
-            - name: Install npm dependencies for Ionic Cordova project and update to Cordova version 9
-              script: |
-                npm ci # equivalent of npm install for CI systems. Requires package-lock.json or npm-shrinkwrap.json to be present
-                cvm install 9.0.0
-                cvm use 9.0.0
-            - name: Setup Cordova iOS platform 
-               script: |
-                 ionic cordova platform remove ios --nosave
-                 ionic cordova platform add ios --confirm --no-interactive --noresources 
-            - name: Cocoapods installation
-              script: |
-                cd platforms/ios && pod install
-            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
-              script: |
-                keychain initialize
-            # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
-            #   script: |
-            #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-            #     mkdir -p "$PROFILES_HOME"
-            #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-            #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
-            #     echo "Saved provisioning profile $PROFILE_PATH"
-            - name: Fetch signing files
-              script: |
-                # app-store-connect fetch-signing-files "com.nevercode.ncionicapp" --type IOS_APP_STORE --create
-                app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
-            - name: Add certificates to keychain
-              script: |
-                keychain add-certificates
-            - name: Increment build number
-              script: |
-                #!/bin/sh
-                set -e
-                set -x
-                cd $FCI_BUILD_DIR/platforms/ios
-                agvtool new-version -all $(($BUILD_NUMBER +1))
-            - name: Set up code signing settings on Xcode project
-              script: |
-                xcode-project use-profiles
-            - name: Build ipa for distribution
-              script: |
-                xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
-        artifacts:
-            - build/ios/ipa/*.ipa
-            - /tmp/xcodebuild_logs/*.log
-            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
-            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
-        publishing:
-          app_store_connect:
-            apple_id: yourAppleId@example.com # <- put your Apple Id here
-            password: Encrypted(...) # <-- Put your App Specific Password. For more information visit: https://support.apple.com/en-us/HT204397
-          email:
-            recipients:
-                - user_one@example.com
-                - user_two@example.com
-            notify:
-                success: false     # To not receive a notification when a build succeeds
-                failure: false     # To not receive a notification when a build fails
+  ionic-cordova-ios-workflow:
+    name: Ionic Cordova iOS Workflow
+    max_build_duration: 120
+    instance_type: mac_mini
+    environment:
+      vars:
+        # Ionic Xcode worskspace and scheme
+        XCODE_WORKSPACE: "platforms/ios/YOUR_APP.xcworkspace" # <- Update with your workspace name
+        XCODE_SCHEME: "YOUR_SCHEME" # <- Update with your workspace scheme
+        # Manual Code Signing
+        # CM_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
+        # CM_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
+        # CM_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
+        #
+        # Automatic Code Signing 
+        # https://docs.codemagic.io/yaml/distribution/
+        # https://appstoreconnect.apple.com/access/api
+        APP_STORE_CONNECT_ISSUER_ID: 5a451239-51eb-10b6-bfcc-60e61ddab13c # <-- Put your App Store Connect Issuer Id here
+        APP_STORE_CONNECT_KEY_IDENTIFIER: LY55E1G322 # <-- Put your App Store Connect Key Identifier here
+        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
+        CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
+      node: latest
+      xcode: latest
+      cocoapods: default
+    triggering:
+      events:
+        - push
+      branch_patterns:
+        - pattern: develop
+          include: true
+          source: true
+    scripts:
+      - name: Install npm dependencies for Ionic Cordova project and update to Cordova version 9
+        script: |
+          npm ci # equivalent of npm install for CI systems. Requires package-lock.json or npm-shrinkwrap.json to be present
+          cvm install 9.0.0
+          cvm use 9.0.0
+      - name: Setup Cordova iOS platform
+          script: |
+            ionic cordova platform remove ios --nosave
+            ionic cordova platform add ios --confirm --no-interactive --noresources
+      - name: Cocoapods installation
+        script: |
+          cd platforms/ios && pod install
+      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+        script: |
+          keychain initialize
+      # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
+      #   script: |
+      #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+      #     mkdir -p "$PROFILES_HOME"
+      #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+      #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+      #     echo "Saved provisioning profile $PROFILE_PATH"
+      - name: Fetch signing files
+        script: |
+          # app-store-connect fetch-signing-files "com.nevercode.ncionicapp" --type IOS_APP_STORE --create
+          app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
+      - name: Add certificates to keychain
+        script: |
+          keychain add-certificates
+      - name: Increment build number
+        script: |
+          #!/bin/sh
+          set -e
+          set -x
+          cd $FCI_BUILD_DIR/platforms/ios
+          agvtool new-version -all $(($BUILD_NUMBER +1))
+      - name: Set up code signing settings on Xcode project
+        script: |
+          xcode-project use-profiles
+      - name: Build ipa for distribution
+        script: |
+          xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
+    artifacts:
+      - build/ios/ipa/*.ipa
+      - /tmp/xcodebuild_logs/*.log
+      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
+      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+    publishing:
+      app_store_connect:
+        apple_id: yourAppleId@example.com # <- put your Apple Id here
+        password: Encrypted(...) # <-- Put your App Specific Password. For more information visit: https://support.apple.com/en-us/HT204397
+      email:
+        recipients:
+          - user_one@example.com
+          - user_two@example.com
+        notify:
+          success: false     # To not receive a notification when a build succeeds
+          failure: false     # To not receive a notification when a build fails
 ```
\ No newline at end of file
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index c188672..35c79cc 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -25,9 +25,11 @@ Builds can be also started manually by clicking **Start new build** in Codemagic
 
 For easier reading of the configuration file and build logs, you can divide the scripts into meaningful sections with descriptive names.
 
-    scripts:
-      - name: Build for iOS         # Name of the section
-        script: flutter build ios   # The script(s) to be run in that section
+```yaml
+scripts:
+  - name: Build for iOS         # Name of the section
+    script: flutter build ios   # The script(s) to be run in that section
+```
 
 ### Reusing sections
 
@@ -35,70 +37,78 @@ If a particular section would be reused multiple times in the file, e.g. in each
 
 Define the section to be reused by adding `&` in front of it.
 
-    scripts:
-      - &increment_build_number       # Defined section
-        name: Increment build number
-        script: agvtool new-version -all $(($PROJECT_BUILD_NUMBER +1))
+```yaml
+scripts:
+  - &increment_build_number       # Defined section
+    name: Increment build number
+    script: agvtool new-version -all $(($PROJECT_BUILD_NUMBER +1))
+```
 
 Reuse the defined section elsewhere by adding a `*` in front of it.
 
-    scripts:
-      - script1
-      - *increment_build_number       # Reused section
-      - script3
+```yaml
+scripts:
+  - script1
+  - *increment_build_number       # Reused section
+  - script3
+```
 
 ## Template
 
 This is the skeleton structure of `codemagic.yaml`. Each section along with the configuration options is described in more detail below.
 
-    workflows:
-      my-workflow:
-        name: My workflow name
-        instance_type: mac_mini
-        max_build_duration: 60
-        environment:
-          vars:
-            PUBLIC_ENV_VAR: "value here"
-          flutter: stable
-          xcode: latest
-        cache:
-          cache_paths:
-            - ~/.pub-cache
-        triggering:
-          events:
-            - push
-          branch_patterns:
-            - pattern: '*'
-              include: true
-              source: true
-          cancel_previous_builds: false
-        scripts:
-          - ...
-        artifacts:
-          - build/**/outputs/**/*.aab
-        publishing:
-          email:
-            recipients:
-              - name@example.com
-          scripts:
-            - echo 'Post-publish script'
+```yaml
+workflows:
+  my-workflow:
+    name: My workflow name
+    instance_type: mac_mini
+    max_build_duration: 60
+    environment:
+      vars:
+        PUBLIC_ENV_VAR: "value here"
+      flutter: stable
+      xcode: latest
+    cache:
+      cache_paths:
+        - ~/.pub-cache
+    triggering:
+      events:
+        - push
+      branch_patterns:
+        - pattern: '*'
+          include: true
+          source: true
+      cancel_previous_builds: false
+    scripts:
+      - ...
+    artifacts:
+      - build/**/outputs/**/*.aab
+    publishing:
+      email:
+        recipients:
+          - name@example.com
+      scripts:
+        - echo 'Post-publish script'
+```
 
 ### Workflows
 
 You can use `codemagic.yaml` to define several workflows for building a project. Each workflow describes the entire build pipeline from triggers to publishing. For example, you may want to have separate workflows for developing, testing and publishing the app.
 
-    workflows:
-      my-workflow:                # workflow ID
-        name: My workflow name    # workflow name displayed in UI
-        instance_type: mac_mini   # machine type to use (currently supported: `mac_mini` and `mac_pro`)
-        max_build_duration: 60    # build duration in minutes (min 1, max 120)
-        environment:
-        cache:
-        triggering:
-        branch_patterns:
-        scripts:
-        artifacts:
-        publishing:
+```yaml
+workflows:
+  my-workflow:                # workflow ID
+    name: My workflow name    # workflow name displayed in UI
+    instance_type: mac_mini   # machine type to use (currently supported: `mac_mini` and `mac_pro`)
+    max_build_duration: 60    # build duration in minutes (min 1, max 120)
+    environment:
+    cache:
+    triggering:
+    branch_patterns:
+    scripts:
+    artifacts:
+    publishing:
+```
 
 The main sections in each workflow are described below.
 
@@ -106,42 +116,44 @@ The main sections in each workflow are described below.
 
 `environment:` contains all the environment variables and enables to specify the version of Flutter, Xcode, CocoaPods, Node and npm used for building. This is also where you can add credentials and API keys required for [code signing](../code-signing-yaml/signing). Make sure to [encrypt the values](../building/encrypting) of variables that hold sensitive data. 
 
-    environment:
-      vars:             # Define your environment variables here
-        PUBLIC_ENV_VAR: "value here"
-        SECRET_ENV_VAR: Encrypted(...)
-        
-        # Android code signing
-        CM_KEYSTORE: Encrypted(...)
-        CM_KEYSTORE_PASSWORD: Encrypted(...)
-        CM_KEY_ALIAS_PASSWORD: my_key_alias
-        CM_KEY_ALIAS_USERNAME: Encrypted(...)
-        
-        # iOS automatic code signing
-        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
-        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
-        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
-        CERTIFICATE_PRIVATE_KEY: Encrypted(...)
-
-        # iOS manual code signing
-        CM_CERTIFICATE: Encrypted(...)
-        CM_CERTIFICATE_PASSWORD: Encrypted(...)
-        CM_PROVISIONING_PROFILE: Encrypted(...)
-
-        # Firebase secrets
-        ANDROID_FIREBASE_SECRET: Encrypted(...)
-        IOS_FIREBASE_SECRET: Encrypted(...)
-
-        SSH_KEY_GITHUB: Encrypted(...)     # defining an ssh key used to download private dependencies
-        CREDENTIALS: Encrypted(...)        # publishing a package to pub.dev
-        APP_CENTER_TOKEN: Encrypted(...)   # publishing an application to App Center
-
-      flutter: stable   # Define the channel name or version (e.g. v1.13.4)
-      xcode: latest     # Define latest, edge or version (e.g. 11.2)
-      cocoapods: 1.9.1  # Define default or version
-      node: 12.14.0     # Define default, latest, current, lts, carbon (or another stream), nightly or version
-      npm: 6.13.7       # Define default, latest, next, lts or version
-      ndk: r21d         # Define default or revision (e.g. r19c)
+```yaml
+environment:
+  vars:             # Define your environment variables here
+    PUBLIC_ENV_VAR: "value here"
+    SECRET_ENV_VAR: Encrypted(...)
+    
+    # Android code signing
+    CM_KEYSTORE: Encrypted(...)
+    CM_KEYSTORE_PASSWORD: Encrypted(...)
+    CM_KEY_ALIAS_PASSWORD: my_key_alias
+    CM_KEY_ALIAS_USERNAME: Encrypted(...)
+    
+    # iOS automatic code signing
+    APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
+    APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
+    APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
+    CERTIFICATE_PRIVATE_KEY: Encrypted(...)
+
+    # iOS manual code signing
+    CM_CERTIFICATE: Encrypted(...)
+    CM_CERTIFICATE_PASSWORD: Encrypted(...)
+    CM_PROVISIONING_PROFILE: Encrypted(...)
+
+    # Firebase secrets
+    ANDROID_FIREBASE_SECRET: Encrypted(...)
+    IOS_FIREBASE_SECRET: Encrypted(...)
+
+    SSH_KEY_GITHUB: Encrypted(...)     # defining an ssh key used to download private dependencies
+    CREDENTIALS: Encrypted(...)        # publishing a package to pub.dev
+    APP_CENTER_TOKEN: Encrypted(...)   # publishing an application to App Center
+
+  flutter: stable   # Define the channel name or version (e.g. v1.13.4)
+  xcode: latest     # Define latest, edge or version (e.g. 11.2)
+  cocoapods: 1.9.1  # Define default or version
+  node: 12.14.0     # Define default, latest, current, lts, carbon (or another stream), nightly or version
+  npm: 6.13.7       # Define default, latest, next, lts or version
+  ndk: r21d         # Define default or revision (e.g. r19c)
+```
 
 {{<notebox>}}
 See the default software versions on Codemagic build machines [here](../releases-and-versions/versions/).
@@ -165,10 +177,12 @@ Caching `$HOME/Library/Developer/Xcode/DerivedData` won't help to speed up iOS b
 
 {{</notebox>}}
 
-    cache:
-      cache_paths:
-        - ~/.gradle/caches
-        - ...
+```yaml
+cache:
+  cache_paths:
+    - ~/.gradle/caches
+    - ...
+```
 
 ### Triggering
 
@@ -182,22 +196,24 @@ A branch pattern can match the name of a particular branch, or you can use wildc
 
 To avoid running builds on outdated commits, you can set `cancel_previous_builds` to automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch.
 
-    triggering:
-      events:                       # List the events that trigger builds
-        - push
-        - pull_request
-        - tag
-      branch_patterns:              # Include or exclude watched branches
-        - pattern: '*'
-          include: true
-          source: true
-        - pattern: excluded-target
-          include: false
-          source: false
-        - pattern: included-source
-          include: true
-          source: true
-      cancel_previous_builds: false  # Set to `true` to automatically cancel outdated webhook builds
+```yaml
+triggering:
+  events:                       # List the events that trigger builds
+    - push
+    - pull_request
+    - tag
+  branch_patterns:              # Include or exclude watched branches
+    - pattern: '*'
+      include: true
+      source: true
+    - pattern: excluded-target
+      include: false
+      source: false
+    - pattern: included-source
+      include: true
+      source: true
+  cancel_previous_builds: false  # Set to `true` to automatically cancel outdated webhook builds
+```
 
 {{<notebox>}}For information about using API calls to trigger builds, look [here](../rest-api/overview/).{{</notebox>}}
 
@@ -211,17 +227,19 @@ Scripts specify what kind of application is built. This is where you can specify
 
 When you set `ignore_failure` to `true`, the workflow will continue to run even if the script fails.
 
-    scripts:
-      - echo "single line script"
-      - name: Flutter test
-        script: flutter test
-        ignore_failure: true
-      - |
-        #!/usr/bin/env python3
+```yaml
+scripts:
+  - echo "single line script"
+  - name: Flutter test
+    script: flutter test
+    ignore_failure: true
+  - |
+    #!/usr/bin/env python3
 
-        print('Multiline python script')
-      - name: Build for iOS
-        script: flutter build ios
+    print('Multiline python script')
+  - name: Build for iOS
+    script: flutter build ios
+```
 
 There are example scripts available for building a [Flutter application](./building-a-flutter-app/), [React Native application](./building-a-react-native-app/), [native Android application](./building-a-native-android-app/) or a [native iOS application](./building-a-native-ios-app/).
 
@@ -229,14 +247,16 @@ There are example scripts available for building a [Flutter application](./build
 
 Configure the paths and names of the artifacts you would like to use in the following steps, e.g. for publishing, or have available for download on the build page. All paths are relative to the clone directory, but absolute paths are supported as well. You can also use [environment variables](../building/environment-variables) in artifact patterns.
 
-    artifacts:
-      - build/**/outputs/**/*.apk                   # relative path for a project in root directory
-      - subfolder_name/build/**/outputs/**/*.apk    # relative path for a project in subfolder
-      - build/**/outputs/**/*.aab
-      - build/**/outputs/**/mapping.txt
-      - build/ios/ipa/*.ipa
-      - /tmp/xcodebuild_logs/*.log
-      - flutter_drive.log
+```yaml
+artifacts:
+  - build/**/outputs/**/*.apk                   # relative path for a project in root directory
+  - subfolder_name/build/**/outputs/**/*.apk    # relative path for a project in subfolder
+  - build/**/outputs/**/*.aab
+  - build/**/outputs/**/mapping.txt
+  - build/ios/ipa/*.ipa
+  - /tmp/xcodebuild_logs/*.log
+  - flutter_drive.log
+```
 
 There are several things to keep in mind about patterns:
 * The pattern can match several files or folders. If it picks up files or folders with the same name, the top level file or folder name will be suffixed with `_{number}`.
@@ -247,11 +267,13 @@ There are several things to keep in mind about patterns:
 
 This is the section where you can set up publishing to external services. Codemagic has a number of integrations (e.g. email, Slack, Google Play, App Store Connect, GitHub releases) for publishing but you can also use custom scripts to publish elsewhere (e.g. Firebase App Distribution). See the examples [here](../publishing-yaml/distribution).
 
-    publishing:
-      email:
-        recipients:
-          - name@example.com
-    scripts:
-      - |
-        echo 'This is a Post-publish script'
-        echo 'This script is multiline'
+```yaml
+publishing:
+  email:
+    recipients:
+      - name@example.com
+scripts:
+  - |
+    echo 'This is a Post-publish script'
+    echo 'This script is multiline'
+```
\ No newline at end of file
diff --git a/content/knowledge-base/add-a-git-tag-with-app-version.md b/content/knowledge-base/add-a-git-tag-with-app-version.md
index 233b346..795eb04 100644
--- a/content/knowledge-base/add-a-git-tag-with-app-version.md
+++ b/content/knowledge-base/add-a-git-tag-with-app-version.md
@@ -22,26 +22,29 @@ Pushing Git tags from Codemagic to repository requires **write access** to the r
 
 2. Add the following **pre-publish script**.  Note that you need to replace the placeholders with your actual environment variable name and Git service details.
 
-        #!/usr/bin/env sh
-
-        set -e # exit on first failed commandset
-        set -x # print all executed commands to the log
-
-        if [ "$FCI_BUILD_STEP_STATUS" == "success" ]
-        then
-          new_version=v1.0.$BUILD_NUMBER
-          git tag $new_version
-          git push "https://your-username:$APP_PASSWORD_ENV_VARIABLE@your-git-service.com/your-repo.git" --tags
-        fi
-    Where:
-
-    * `BUILD_NUMBER` is the read-only environment variable that holds the total count of builds for this project in Codemagic.
-    * `your-username` is your Git service username
-    * `APP_PASSWORD_ENV_VARIABLE` is the name of the environment variable that holds your app password / personal access token.
-    * `your-git-service.com` is the name of your Git service, e.g. github.com, bitbucket.com or gitlab.com.
-    * `your-repo` is the name of your repository
-
-    Before creating the tag, the script will check if the build was successful.
+  ```bash
+  #!/usr/bin/env sh
+
+  set -e # exit on first failed commandset
+  set -x # print all executed commands to the log
+
+  if [ "$FCI_BUILD_STEP_STATUS" == "success" ]
+  then
+    new_version=v1.0.$BUILD_NUMBER
+    git tag $new_version
+    git push "https://your-username:$APP_PASSWORD_ENV_VARIABLE@your-git-service.com/your-repo.git" --tags
+  fi
+  ```
+
+  Where:
+
+  * `BUILD_NUMBER` is the read-only environment variable that holds the total count of builds for this project in Codemagic.
+  * `your-username` is your Git service username
+  * `APP_PASSWORD_ENV_VARIABLE` is the name of the environment variable that holds your app password / personal access token.
+  * `your-git-service.com` is the name of your Git service, e.g. github.com, bitbucket.com or gitlab.com.
+  * `your-repo` is the name of your repository
+
+  Before creating the tag, the script will check if the build was successful.
 
 {{<notebox>}}
 Make sure to use the `https` repository URL for pushing. Using the `ssh` format is not supported with app passwords or personal access tokens
diff --git a/content/knowledge-base/generating-an-ssh-key.md b/content/knowledge-base/generating-an-ssh-key.md
index 9d744d0..29428ca 100644
--- a/content/knowledge-base/generating-an-ssh-key.md
+++ b/content/knowledge-base/generating-an-ssh-key.md
@@ -6,6 +6,8 @@ weight: 1
 
 Different repository hosting services have different minimum requirements for the length of the SSH key, varying from 2048 bits to 4096 bits. We recommend creating a 4096 bit key for increased security. Run the command below in your terminal to create a 4096 bit SSH key:
 
-        ssh-keygen -t rsa -b 4096 -f ~/Desktop/codemagic_ssh_key -q -N ""
+```bash
+ssh-keygen -t rsa -b 4096 -f ~/Desktop/codemagic_ssh_key -q -N ""
+```
 
 This will create two new files on your desktop: `codemagic_ssh_key` (private key) and `codemagic_ssh_key.pub` (public key). 
\ No newline at end of file
diff --git a/content/knowledge-base/load-firebase-configuration.md b/content/knowledge-base/load-firebase-configuration.md
index dc8f8a2..6f54424 100644
--- a/content/knowledge-base/load-firebase-configuration.md
+++ b/content/knowledge-base/load-firebase-configuration.md
@@ -11,21 +11,25 @@ Instead of committing the Firebase configuration files to your repository, you c
 1.  Save your Firebase config files as environment variables, e.g. `ANDROID_FIREBASE_SECRET` and `IOS_FIREBASE_SECRET`. 
 2.  Add the following **pre-build** script echoing your variables to load the Firebase configuration in Codemagic.
 
-        #!/usr/bin/env sh
-        set -e # exit on first failed command
+  ```bash
+  #!/usr/bin/env sh
+  set -e # exit on first failed command
 
-        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
-        echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+  echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
+  echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+  ```
 
-    In case your project is in a nested folder structure, it has to be reflected and the script should be as follows: 
+  In case your project is in a nested folder structure, it has to be reflected and the script should be as follows: 
 
-        #!/usr/bin/env sh
-        set -e # exit on first failed command
+  ```bash
+  #!/usr/bin/env sh
+  set -e # exit on first failed command
 
-        PROJECT_ROOT=$FCI_BUILD_DIR/myproject/path      # ADD YOUR PROJECT FOLDER PATH HERE
+  PROJECT_ROOT=$FCI_BUILD_DIR/myproject/path      # ADD YOUR PROJECT FOLDER PATH HERE
 
-        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $PROJECT_ROOT/android/app/google-services.json
-        echo $IOS_FIREBASE_SECRET | base64 --decode > $PROJECT_ROOT/ios/Runner/GoogleService-Info.plist
+  echo $ANDROID_FIREBASE_SECRET | base64 --decode > $PROJECT_ROOT/android/app/google-services.json
+  echo $IOS_FIREBASE_SECRET | base64 --decode > $PROJECT_ROOT/ios/Runner/GoogleService-Info.plist
+  ```
 
 {{<notebox>}}
 
diff --git a/content/knowledge-base/upload-custom-artifacts.md b/content/knowledge-base/upload-custom-artifacts.md
index 33c3b94..4c63493 100644
--- a/content/knowledge-base/upload-custom-artifacts.md
+++ b/content/knowledge-base/upload-custom-artifacts.md
@@ -10,6 +10,8 @@ You can use a custom script to upload custom artifacts, such as screenshots, to
 
 For example, add this **post-test** script to copy screenshots to `$FCI_EXPORT_DIR`.
 
-    #!/usr/bin/env sh
+```bash
+#!/usr/bin/env sh
 
-    cp  -r build/screenshots $FCI_EXPORT_DIR/screenshots
+cp  -r build/screenshots $FCI_EXPORT_DIR/screenshots
+```
\ No newline at end of file
diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 4798a9b..1dd4f10 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -18,14 +18,15 @@ If the build finishes successfully, release notes (if passed) and the generated
 
 If you don't want to receive an email notification on build success or failure, you can set `success` to `false` or `failure` to `false` accordingly.
 
-    publishing:
-      email:
-        recipients:
-          - name@example.com
-        notify:
-          success: false     # To not receive a notification when a build succeeds
-          failure: false     # To not receive a notification when a build fails
-
+```yaml
+publishing:
+  email:
+    recipients:
+      - name@example.com
+    notify:
+      success: false     # To not receive a notification when a build succeeds
+      failure: false     # To not receive a notification when a build fails
+```
 
 ### Slack
 
@@ -35,22 +36,26 @@ You can then define the channel where build notifications and artifacts will be
 
 If you don't want to receive a slack notification on build success or failure, you can set `success` to `false` or `failure` to `false` accordingly.
 
-    publishing:
-      slack:
-        channel: '#channel-name'
-        notify_on_build_start: true    # To receive a notification when a build starts
-        notify:
-          success: false               # To not receive a notification when a build succeeds
-          failure: false               # To not receive a notification when a build fails
+```yaml
+publishing:
+  slack:
+    channel: '#channel-name'
+    notify_on_build_start: true    # To receive a notification when a build starts
+    notify:
+      success: false               # To not receive a notification when a build succeeds
+      failure: false               # To not receive a notification when a build fails
+```
 
 ### Google Play
 
 Codemagic enables you to automatically publish your app to the `internal`, `alpha`, `beta` and `production` tracks on Google Play. In order to do so, you will need to set up a service account in Google Play Console and add the JSON key file to your Codemagic configuration file, see how to [create a service account](#creating-a-service-account-in-google-play-console).
 
-    publishing:
-      google_play:                        # For Android app
-        credentials: Encrypted(...)       # JSON key file for Google Play service account
-        track: alpha                      # Name of the track: internal, alpha, beta, production
+```yaml
+publishing:
+  google_play:                        # For Android app
+    credentials: Encrypted(...)       # JSON key file for Google Play service account
+    track: alpha                      # Name of the track: internal, alpha, beta, production
+```
 
 {{<notebox>}}
 The proper way to add your keys in `codemagic.yaml` is to copy the contents of the key file and [encrypt](../building/encrypting) it. Then add the encrypted value into the configuration file.
@@ -80,10 +85,12 @@ The proper way to add your keys in `codemagic.yaml` is to copy the contents of t
 
 Codemagic enables you to automatically publish your iOS app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store.
 
-    publishing:
-      app_store_connect:                  # For iOS app
-        apple_id: name@example.com        # Email address used for login
-        password: Encrypted(...)          # App-specific password
+```yaml
+publishing:
+  app_store_connect:                  # For iOS app
+    apple_id: name@example.com        # Email address used for login
+    password: Encrypted(...)          # App-specific password
+```
 
 ### GitHub releases
 
@@ -93,12 +100,14 @@ Publishing happens only for successful builds triggered on tag creation and is u
 
 Note that using `*` wildcard in the beginning of the pattern requires quotation marks around the pattern, otherwise it will violate the `yaml` syntax.
 
-    publishing:
-      github_releases:
-        prerelease: false
-        artifact_patterns:
-          - app-release.apk
-          - '*.aab'
+```yaml
+publishing:
+  github_releases:
+    prerelease: false
+    artifact_patterns:
+      - app-release.apk
+      - '*.aab'
+```
 
 ## Publishing a Flutter package to pub.dev
 
@@ -107,17 +116,21 @@ After that `credentials.json` will be generated which you can use to log in with
 
 `credentials.json` can be found in the pub cache directory (`~/.pub-cache/credentials.json` on MacOS and Linux, `%APPDATA%\Pub\Cache\credentials.json` on Windows)
 
-    - echo $CREDENTIALS | base64 --decode > "$FLUTTER_ROOT/.pub-cache/credentials.json"
-    - flutter pub publish --dry-run
-    - flutter pub publish -f
+```yaml
+- echo $CREDENTIALS | base64 --decode > "$FLUTTER_ROOT/.pub-cache/credentials.json"
+- flutter pub publish --dry-run
+- flutter pub publish -f
+```
 
 ## Publishing an app to Firebase App Distribution
 
 If you use a Firebase service, encrypt `google-services.json` as `ANDROID_FIREBASE_SECRET` environment variable for Android
 or `GoogleService-Info.plist` as `IOS_FIREBASE_SECRET` for iOS.
 
-    echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
-    echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+```bash
+echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
+echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+```
 
 ### Publishing an app using Firebase CLI
 
@@ -125,29 +138,33 @@ Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documen
 
 Android
 
-    - name: Publish the app to Firebase App Distribution
-      script: |
-        apkPath=$(find build -name "*.apk" | head -1)
-        if [[ -z ${apkPath} ]]
-        then
-          echo "No apks were found, skip publishing to Firebase App Distribution"
-        else
-          echo "Publishing $apkPath to Firebase App Distribution"
-          firebase appdistribution:distribute --app <your_android_application_firebase_id> --groups <your_android_testers_group> $apkPath
-        fi
+```yaml
+- name: Publish the app to Firebase App Distribution
+  script: |
+    apkPath=$(find build -name "*.apk" | head -1)
+    if [[ -z ${apkPath} ]]
+    then
+      echo "No apks were found, skip publishing to Firebase App Distribution"
+    else
+      echo "Publishing $apkPath to Firebase App Distribution"
+      firebase appdistribution:distribute --app <your_android_application_firebase_id> --groups <your_android_testers_group> $apkPath
+    fi
+```
 
 iOS
 
-    - name: Publish the app to Firebase App Distribution
-      script: |
-        ipaPath=$(find build -name "*.ipa" | head -1)
-        if [[ -z ${ipaPath} ]]
-        then
-          echo "No ipas were found, skip publishing to Firebase App Distribution"
-        else
-          echo "Publishing $ipaPath to Firebase App Distribution"
-          firebase appdistribution:distribute --app <your_ios_application_firebase_id> --groups <your_ios_testers_group> $ipaPath
-        fi
+```yaml
+- name: Publish the app to Firebase App Distribution
+  script: |
+    ipaPath=$(find build -name "*.ipa" | head -1)
+    if [[ -z ${ipaPath} ]]
+    then
+      echo "No ipas were found, skip publishing to Firebase App Distribution"
+    else
+      echo "Publishing $ipaPath to Firebase App Distribution"
+      firebase appdistribution:distribute --app <your_ios_application_firebase_id> --groups <your_ios_testers_group> $ipaPath
+    fi
+```
 
 ### Publishing an app with Fastlane
 
@@ -155,74 +172,91 @@ Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documen
 
 Before running a lane, you should install Fastlane Firebase app distribution plugin
 
-        - name: Install fastlane-plugin-firebase_app_distribution
-          script: |
-            gem install bundler
-            sudo gem install fastlane-plugin-firebase_app_distribution --user-install
+```yaml
+- name: Install fastlane-plugin-firebase_app_distribution
+  script: |
+    gem install bundler
+    sudo gem install fastlane-plugin-firebase_app_distribution --user-install
+```
 
 Then you need to call a lane. This code is similar for Android and iOS.
 
 Android
 
-    - name: Execute fastlane android publishing task
-      script: |
-        cd android
-        bundle install
-        bundle exec fastlane <your_android_lane>
+```yaml
+- name: Execute fastlane android publishing task
+  script: |
+    cd android
+    bundle install
+    bundle exec fastlane <your_android_lane>
+```
 
 iOS
 
-    - name: Execute fastlane ios publishing task
-      script: |
-        cd ios
-        bundle install
-        bundle exec fastlane <your_ios_lane>
-
+```yaml
+- name: Execute fastlane ios publishing task
+  script: |
+    cd ios
+    bundle install
+    bundle exec fastlane <your_ios_lane>
+```
 
 ### Publishing an Android app with Gradle
 
 To authorize an application for Firebase App Distribution, use [Google service account](https://firebase.google.com/docs/app-distribution/android/distribute-gradle#authenticate_using_a_service_account).
 Encrypt and add to environment variables these credentials (the file is named something like `yourappname-6e632def9ad4.json`) as `GOOGLE_APP_CREDENTIALS`. Specify the filepath in your `build.gradle` in `firebaseAppDistribution` as `serviceCredentialsFile="your/file/path.json"`.
 
-    buildTypes {
+```gradle
+buildTypes {
+    ...
+    release {
         ...
-        release {
+        firebaseAppDistribution {
             ...
-            firebaseAppDistribution {
-                ...
-                serviceCredentialsFile="<your/file/path.json>"
-            }
+            serviceCredentialsFile="<your/file/path.json>"
         }
+    }
+```
 
- Note that in case the credentials file is not specified in `firebaseAppDistribution` build type, it will search the filepath in `GOOGLE_APPLICATION_CREDENTIALS` environment variable.
+Note that in case the credentials file is not specified in `firebaseAppDistribution` build type, it will search the filepath in `GOOGLE_APPLICATION_CREDENTIALS` environment variable.
 
 Decode application credentials for Firebase authorization:
 
-    echo $GOOGLE_APP_CREDENTIALS | base64 --decode > $FCI_BUILD_DIR/your/file/path.json
+```bash
+echo $GOOGLE_APP_CREDENTIALS | base64 --decode > $FCI_BUILD_DIR/your/file/path.json
+```
 
 Build the application:
 
-    - echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
-    - flutter packages pub get
-    - flutter build apk --release
+```yaml
+- echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
+- flutter packages pub get
+- flutter build apk --release
+```
 
 Call the `gradlew` task for distribution
 
-    - name: Distribute app to firebase with gradle plugin
-      script: cd android && ./gradlew appDistributionUploadRelease
+```yaml
+- name: Distribute app to firebase with gradle plugin
+  script: cd android && ./gradlew appDistributionUploadRelease
+```
 
 {{<notebox>}}
 
 If you didn't specify `serviceCredentialsFile`, you may export it to random location like `/tmp/google-application-credentials.json`
 
-    echo $GOOGLE_APP_CREDENTIALS | base64 --decode > /tmp/google-application-credentials.json
+```bash
+echo $GOOGLE_APP_CREDENTIALS | base64 --decode > /tmp/google-application-credentials.json
+```
 
 And then export the filepath on the gradlew task
 
-    - name: Distribute app to firebase with gradle plugin
-      script: |
-        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/google-application-credentials.json
-        cd android && ./gradlew appDistributionUploadRelease
+```yaml
+- name: Distribute app to firebase with gradle plugin
+  script: |
+    export GOOGLE_APPLICATION_CREDENTIALS=/tmp/google-application-credentials.json
+    cd android && ./gradlew appDistributionUploadRelease
+```
 
 {{</notebox>}}
 
@@ -235,12 +269,14 @@ Publishing web applications to Firebase Hosting With Codemagic publishing to Fir
 3. Copy and [encrypt](https://github.com/codemagic-ci-cd/codemagic-docs/blob/master/content/building/encrypting) the token using the Codemagic UI.
 4. Add your encrypted token to your .yaml file by setting it under your environment variables with the name `FIREBASE_TOKEN`.
 5. Create a new script for publishing to Firebase Hosting in your scripts section of the .yaml file and add it right after the build step
-```
-    - name: Publish to Firebase Hosting
-      script: |
-        firebase deploy --token "$FIREBASE_TOKEN"
+
+```yaml
+- name: Publish to Firebase Hosting
+  script: |
+    firebase deploy --token "$FIREBASE_TOKEN"
 ```
 When the build is successful, you can see your application published to Firebase Hosting. You can find the direct URL to the deployed build also from the log output in Codemagic UI:
+
 ```
 ✔  Deploy complete!
 
diff --git a/content/publishing/beta-deployment-with-fastlane.md b/content/publishing/beta-deployment-with-fastlane.md
index cbafc85..e9c826b 100644
--- a/content/publishing/beta-deployment-with-fastlane.md
+++ b/content/publishing/beta-deployment-with-fastlane.md
@@ -9,7 +9,7 @@ If your Flutter app has an existing *fastlane* setup for beta deployment, you ca
 1. Before running the script, navigate to **App settings > Environment variables** and add the API keys / secrets required for authorizing with the third-party service as secure [environment variables](../building/environment-variables). 
 2. Click on the + sign between **Build** and **Publish** and paste your script to the pre-publish script field.
 
-```
+```bash
 #!/usr/bin/env sh
 
 set -e # exit on first failed command
diff --git a/content/publishing/publish-app-artifacts-to-app-center.md b/content/publishing/publish-app-artifacts-to-app-center.md
index 783b6d7..10f112d 100644
--- a/content/publishing/publish-app-artifacts-to-app-center.md
+++ b/content/publishing/publish-app-artifacts-to-app-center.md
@@ -10,7 +10,8 @@ As a custom build step, Codemagic can publish your app artifact to App Center us
 2. In your app settings, expand the step between Build and Publish and add the respective **post-build** script.
 
 **Example script for publishing apk**
-```
+
+```bash
 #!/usr/bin/env zsh
 
 echo 'Installing App Center CLI tools'
@@ -36,7 +37,8 @@ fi
 ```
 
 **Example script for publishing ipa**
-```
+
+```bash
 #!/usr/bin/env zsh
 
 echo 'Installing App Center CLI tools'
diff --git a/content/publishing/publish-build-artifacts-to-amazon-s3.md b/content/publishing/publish-build-artifacts-to-amazon-s3.md
index 5334e05..8254a16 100644
--- a/content/publishing/publish-build-artifacts-to-amazon-s3.md
+++ b/content/publishing/publish-build-artifacts-to-amazon-s3.md
@@ -9,12 +9,14 @@ You can use custom scripts to publish your app artifacts to external sources. He
 1.  You will first need to provide Codemagic access to your Amazon S3 account for publishing. In **App settings >** **Environment variables**, add your credentials as [environment variables](../building/environment-variables/) named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` respectively. Make sure to check **Secure**.
 2.  Click on the **+** sign before the Build section to expand the step and add the following **pre-build script**. `<FOLDER OR FILE>` refers to a specific folder or file to be synced. Replace `<BUCKET_NAME>` with your actual bucket name. Note that all the artifact files that Codemagic generates during the build are located in `FCI_BUILD_OUTPUT_DIR`.
 
-        #!/bin/sh
+```bash
+#!/bin/sh
 
-        set -e
-        set -x
+set -e
+set -x
 
-        sudo pip3 install awscli --upgrade
-        aws s3 sync <FOLDER OR FILE> s3://<BUCKET_NAME>
+sudo pip3 install awscli --upgrade
+aws s3 sync <FOLDER OR FILE> s3://<BUCKET_NAME>
+```
 
 Now, each time you build the app, the app artifact will be published to your Amazon S3 bucket.
diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index 163511a..d53be32 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -31,13 +31,15 @@ Language localization code is referred to a BCP-47 language tag as used in Googl
 
 3. Create a `release_notes.json` file with the following content:
 
-        [
-            {
-                "language": string, # Language localization code (a BCP-47 language tag)
-                "text": string      # The text in the given language
-            },
-            ...
-        ]
+    ```json
+    [
+        {
+            "language": string, # Language localization code (a BCP-47 language tag)
+            "text": string      # The text in the given language
+        },
+        ...
+    ]
+    ```
 
     Add this file to the root of your project. Notes with missing `language` or `text` fields will not be taken into account. Please refer to the [list of supported languages](https://support.google.com/googleplay/android-developer/table/4419860?hl=en).
 
diff --git a/content/teams/users.md b/content/teams/users.md
index 8b3c0e1..f51d80d 100644
--- a/content/teams/users.md
+++ b/content/teams/users.md
@@ -13,9 +13,9 @@ An active user is anyone who triggers a build manually from the UI or via the AP
 
 Codemagic distinguishes users by the email address that is associated with their Codemagic account (when starting builds manually) or with the commit author (when triggering builds from a webhook). We recommend setting the email address in your git configuration to match the email address used in Codemagic to avoid getting counted twice. You can configure the email address in your terminal as follows:
 
-```
-$ git config --global user.name "John Doe"
-$ git config --global user.email johndoe@example.com
+```bash
+git config --global user.name "John Doe"
+git config --global user.email johndoe@example.com
 ```
 
 ## User limit
diff --git a/content/testing-yaml/testing.md b/content/testing-yaml/testing.md
index 9ffcf7c..5e443de 100644
--- a/content/testing-yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -12,38 +12,47 @@ Test scripts are added under `scripts` in the [overall architecture](../getting-
 
 This is a basic example with jest, given that jest tests are defined in the `package.json` file.
 
-    npm test
+```bash
+npm test
+```
 
 ## Native Android
 
 For non-UI tests or unit testing:
 
-    ./gradlew test
+```bash
+./gradlew test
+```
 
 UI tests (also known as instrumented tests):
 
-    ./gradlew connectedAndroidTest
+```bash
+./gradlew connectedAndroidTest
+```
 
 ## Native iOS
 
-    set -o pipefail
-    xcodebuild \
-        -workspace MyAwesomeApp.xcworkspace \
-        -scheme MyAwesomeApp \
-        -sdk iphonesimulator \
-        -destination 'platform=iOS Simulator,name=iPhone 6,OS=8.1' \
-        test | xcpretty
+```bash
+set -o pipefail
+xcodebuild \
+    -workspace MyAwesomeApp.xcworkspace \
+    -scheme MyAwesomeApp \
+    -sdk iphonesimulator \
+    -destination 'platform=iOS Simulator,name=iPhone 6,OS=8.1' \
+    test | xcpretty
+```
 
 If may want to export the test log, you can do this by splitting the standard output to a file
-    
-    set -o pipefail
-    xcodebuild \
-        -workspace MyAwesomeApp.xcworkspace \
-        -scheme MyAwesomeApp \
-        -sdk iphonesimulator \
-        -destination 'platform=iOS Simulator,name=iPhone 6,OS=8.1' \
-        test | xcpretty |& tee "/tmp/xcodetest.log"
 
+```bash
+set -o pipefail
+xcodebuild \
+    -workspace MyAwesomeApp.xcworkspace \
+    -scheme MyAwesomeApp \
+    -sdk iphonesimulator \
+    -destination 'platform=iOS Simulator,name=iPhone 6,OS=8.1' \
+    test | xcpretty |& tee "/tmp/xcodetest.log"
+```
 
 ## Flutter test
 
@@ -68,33 +77,37 @@ The `flutter_driver` dependency allows you to run integration tests on a real de
 
 ### Running iOS/Android application tests on a mobile simulator/emulator
 
-        flutter emulators --launch apple_ios_simulator             # for android use: flutter emulators --launch emulator
-        flutter drive --target=test_driver/my_drive_target.dart
+```bash
+flutter emulators --launch apple_ios_simulator             # for android use: flutter emulators --launch emulator
+flutter drive --target=test_driver/my_drive_target.dart
+```
 
 ### Running web application tests on a web browser driver
 
 Chrome
 
-      scripts:
-        - echo 'previous step'
-        - name: 'Flutter drive web test'
-          script: |
-            chromedriver --port=4444 &
-            flutter config --enable-web
-            flutter drive --target=test_driver/button_pressing.dart -d chrome --browser-name chrome --release
-
+```yaml
+scripts:
+  - echo 'previous step'
+  - name: 'Flutter drive web test'
+    script: |
+      chromedriver --port=4444 &
+      flutter config --enable-web
+      flutter drive --target=test_driver/button_pressing.dart -d chrome --browser-name chrome --release
+```
 
 Safari
 
-      scripts:
-        - echo 'previous step'
-        - name: 'Flutter drive web test'
-          script: |
-            sudo safaridriver --enable
-            safaridriver --port 4444 &
-            flutter config --enable-web
-            flutter drive --target=test_driver/button_pressing.dart --browser-name safari --release
-
+```yaml
+scripts:
+  - echo 'previous step'
+  - name: 'Flutter drive web test'
+    script: |
+      sudo safaridriver --enable
+      safaridriver --port 4444 &
+      flutter config --enable-web
+      flutter drive --target=test_driver/button_pressing.dart --browser-name safari --release
+```
 
 {{<notebox>}}
 Make sure to use Flutter channel **Beta** or higher since Flutter for web is not yet available on **Stable**.
diff --git a/content/testing/aws.md b/content/testing/aws.md
index ba8ee20..e94396b 100644
--- a/content/testing/aws.md
+++ b/content/testing/aws.md
@@ -48,13 +48,13 @@ If you want to test your application with another Flutter version, follow these
 
     If you made your changes to the forked repository on the default branch, you can simply mention the git URL to activate it:
 
-    ```
+    ```bash
     pub global activate -s git https://github.com/your_username/sylph.git
     ```
 
     If you made your changes on a specific branch e.g. `flutter_1.17.5`, you can clone the specific branch and specify the path to the cloned repository:
 
-    ```
+    ```bash
     git clone --branch your_branch_name https://github.com/your_username/sylph.git $HOME/sylph
     pub global activate -s path $HOME/sylph
     ```
\ No newline at end of file
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index 5103638..2c809d1 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -49,7 +49,7 @@ flutter emulators --launch ios
 
 or
 
-```
+```bash
 flutter emulators --launch emulator
 ```
 
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 3a3f38a..5708c8e 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -57,9 +57,11 @@ Codemagic runs `./gradlew --version` on the builder side to check if it's suitab
 
 * Make a clean clone of the repository and execute the following commands:
 
-        cd <project_root>
-        chmod +x gradlew
-        ./gradlew --version
+```bash
+cd <project_root>
+chmod +x gradlew
+./gradlew --version
+```
 
 * Make a fix for the issue found.
 * Commit changes to the repo.
@@ -72,14 +74,16 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
 
 **Log output**: 
 
-    == Building for iOS ==
-
-    == /usr/local/bin/flutter build ios --release --no-codesign ==
-    Warning: Building for device with codesigning disabled. You will have to manually codesign before deploying to device.
-    Building net.butterflyapp.trainer for device (ios-release)...
-    Running pod install...                                              3.7s
-    Running Xcode build...                                          
-    Xcode build done.                                           203.6s
+```
+== Building for iOS ==
+
+== /usr/local/bin/flutter build ios --release --no-codesign ==
+Warning: Building for device with codesigning disabled. You will have to manually codesign before deploying to device.
+Building net.butterflyapp.trainer for device (ios-release)...
+Running pod install...                                              3.7s
+Running Xcode build...
+Xcode build done.                                           203.6s
+```
 
 **Flutter**: `1.7.8+hotfix.3`, `1.7.8+hotfix.4`, `1.9.1+hotfix.2`, `1.9.1+hotfix.4`, `1.9.1+hotfix.5`
 

commit e1983ee731abb67158486e08a6c428fe29569ba2
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Nov 10 11:11:04 2020 +0200

    change hugo version from 0.61.0 to 0.77.0 (#202)

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 9f79349..c887991 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -15,6 +15,6 @@ jobs:
       - uses: actions/checkout@v2
         with:
           fetch-depth: 0
-      - run: curl --location https://github.com/gohugoio/hugo/releases/download/v0.61.0/hugo_extended_0.61.0_Linux-64bit.tar.gz | tar -vxzO hugo > hugo && chmod a+x hugo
+      - run: curl --location https://github.com/gohugoio/hugo/releases/download/v0.77.0/hugo_extended_0.77.0_Linux-64bit.tar.gz | tar -vxzO hugo > hugo && chmod a+x hugo
       - run: ./hugo --environment production --minify
       - run: ./hugo deploy --environment production --invalidateCDN true --maxDeletes -1
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index 309c5d9..0272190 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -6,7 +6,7 @@
         <div class="category-name" data-js-category-name>{{ .Name }}</div>
         <div class="category-posts" data-js-category-posts>
           {{- if .HasChildren }}
-            {{ template "content-menu" (dict "menuItems" .Children "currentPage" $currentPage) . }}
+            {{ template "content-menu" (dict "menuItems" .Children "currentPage" $currentPage)}}
           {{- end }}
           {{ range where site.Pages "Section" .Identifier -}}
             <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
@@ -23,5 +23,5 @@
     <div class="search__icon search__icon--search fas fa-search"></div>
     <div class="search__icon search__icon--clear fas fa-times"></div>
   </div>
-  {{ template "content-menu" (dict "menuItems" .Site.Menus.main "currentPage" .) . }}
+  {{ template "content-menu" (dict "menuItems" .Site.Menus.main "currentPage" .)}}
 </nav>
diff --git a/readme.md b/readme.md
index 26f5b50..59b55c2 100644
--- a/readme.md
+++ b/readme.md
@@ -1,14 +1,14 @@
 # Codemagic community documentation
 
-Welcome to the [Codemagic](https://codemagic.io/start/) public documentation repository. As a Codemagic user, you can contribute to our documentation to improve it. 
+Welcome to the [Codemagic](https://codemagic.io/start/) public documentation repository. As a Codemagic user, you can contribute to our documentation to improve it.
 
 ## Getting started
 
-To contribute, fork the repository, make your changes and start a pull request. All pull requests will be reviewed by the Codemagic team. 
+To contribute, fork the repository, make your changes and start a pull request. All pull requests will be reviewed by the Codemagic team.
 
 ### Common issues page
 
-We invite you to help out fellow Codemagic users by describing a frequent issue **and** providing a solution to it. Add your entry to the "Common issues" page under Troubleshooting. 
+We invite you to help out fellow Codemagic users by describing a frequent issue **and** providing a solution to it. Add your entry to the "Common issues" page under Troubleshooting.
 
 Please follow the format of existing issues for consistency.
 
@@ -19,7 +19,7 @@ Please follow the format of existing issues for consistency.
 
 ## Development
 
-Development requires [Hugo static site generator](https://gohugo.io) v0.61.0 from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew for Linux and macOS users.
+Development requires [Hugo static site generator](https://gohugo.io) v077.0 from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew for Linux and macOS users.
 
 ```
 brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/79894aee20a146d6cf7db7b4a362e7d491f499a1/Formula/hugo.rb
@@ -28,7 +28,7 @@ brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/79894aee20
 Windows users can install [Chocolatey](https://chocolatey.org/install). After that Hugo can be installed with
 
 ```
-choco install hugo-extended --version 0.61.0
+choco install hugo-extended --version 0.77.0
 ```
 
 For general info see [Hugo documentation](https://gohugo.io/documentation/).
@@ -40,10 +40,13 @@ Layout templates are in `layouts` in HTML format and go template syntax for "act
 ## Preview
 
 Linux and macOS users can preview the site in http://localhost:1313/ by launching:
+
 ```
 ./serve.sh
 ```
+
 Windows users launch:
+
 ```
 ./serve.cmd
 ```

commit 32a4d1900862db495c8a7ec3ffeadc47bb2f73b1
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Mon Nov 9 16:53:49 2020 +0200

    Change card (#208)
    
    * Change card
    
    * Editing
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/billing/billing.md b/content/billing/billing.md
index a391a07..8a0460f 100644
--- a/content/billing/billing.md
+++ b/content/billing/billing.md
@@ -11,7 +11,7 @@ Note that:
 
 ## Enabling billing
 
-Billing can be enabled in **User settings** for your personal account and in **team settings** for a team, or on the Billing page that is accessible from the left navigation bar.
+Billing can be enabled for your personal account or team on the **Billing** page that is accessible from the left navigation bar.
 
 On clicking **Enable billing**, you will be asked to enter credit card information or offered the option to select an existing credit card if you have had billing enabled previously. To finish, click **Confirm and enable billing**.
 
@@ -19,14 +19,18 @@ When billing is enabled, you will be charged monthly based on usage.
 
 ## Managing billing and updating billing details
 
-To manage billing for your team or personal account, navigate to the Billing page and select the team or account. 
+To manage billing for your team or personal account, navigate to the **Billing** page and select the team or account. 
 
-When billing has been enabled, you will see the current usage, the due amount and the next payment date. This is also where you can download the invoices for previous billing periods.
+When billing is enabled, you will see the current usage, the due amount and the next payment date. This is also where you can download the invoices for previous billing periods.
 
 ### Updating billing details
 
 Click on **Update billing details** to change the billing information or add additional details, such as company name, billing email, address and tax ID.
 
+### Changing card
+
+To change the card used for payments, click **Edit** in the credit card section under the billing details. You can then click **Add new card** to register a new card or select a different card from already registered cards.
+
 ### Disabling billing
 
 To disable billing, click **Disable billing** in the Billing details section. On disabling billing, you will be immediately charged for the used paid features.

commit dad8a6223a8968541dcd33993932ed1c5825cd38
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Fri Nov 6 11:44:35 2020 +0200

    Update Xcode 12.1.1 (#207)
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>

diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
index 3eaf8aa..6b03c88 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/releases-and-versions/versions2.md
@@ -13,24 +13,24 @@ weight: 2
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 72GB)`
+- Disk `322GB (Free Space: 48GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
 - aws `2.0.50`
-- cocoapods `1.9.3`
+- cocoapods `1.10.0`
 - cordova `10.0.0`
 - curl
-- dart `2.10.1`
+- dart `2.10.3`
 - docker `19.03.12`
-- fastlane `2.163.0`
+- fastlane `2.166.0`
 - firebase `8.10.0`
 - flutter `1.22.3 ($HOME/programs/flutter)`
 - gem `3.1.2`
-- git `2.28.0`
+- git `2.29.2`
 - gradle `6.1.1`
-- homebrew `2.5.6`
+- homebrew `2.5.8`
 - ionic `5.4.16`
 - jq
 - node `12.18.4`
@@ -149,4 +149,5 @@ With Xcode `12.1` build version `12A7403` the following runtimes and devices are
 ## Other Xcode versions
 
 - 12.2 (12B5035g) `/Applications/Xcode-12.2.app`
+- 12.1.1 (12A7605b) `/Applications/Xcode-12.1.1.app`
 - 12.0.1 (12A7300) `/Applications/Xcode-12.app`

commit 832adb4e48f18860bcaa53a47aaa211a413e6541
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Tue Nov 3 16:26:19 2020 +0200

    Update adding-apps-from-custom-sources.md (#206)
    
    * Update adding-apps-from-custom-sources.md
    
    * Update adding-apps-from-custom-sources.md
    
    editing
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index ff7b2e4..c3d1e96 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -10,15 +10,6 @@ When you sign up via OAuth, Codemagic already has access to the repositories you
 * Note that webhooks for automatic build triggering need to be [created manually](../building/webhooks).
 {{</notebox>}}
 
-## Connecting repository via HTTP/HTTPS
-
-1. Click **Add repository** on the Applications page.
-2. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
-3. If it's a private repository that requires username and password for authentication, check **Private repository** and enter the **Username** and **Password**. Leave this option unchecked for public repositories.
-4. Click **Add application**.
-
-Your app will be then listed on the Applications page and you can then continue configuring your project by clicking on **Configure for building**.
-
 ## Connecting repository via SSH
 
 1. Click **Add app from custom source** on the Applications page.
@@ -46,6 +37,15 @@ After you have added the public key to your repository settings, finish adding t
 
 {{<notebox>}}Don't close the **Add application from custom source** module before you have finished adding the app, otherwise you'll need to start over and generate a new SSH key.{{</notebox>}}
 
+## Connecting repository via HTTP/HTTPS
+
+1. Click **Add repository** on the Applications page.
+2. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
+3. If your repository is private, then enter your **Username** and **Password**. In the case of a public repository, check **Public repository**.
+4. Click **Add application**.
+
+Your app will be then listed on the Applications page and you can then continue configuring your project by clicking on **Configure for building**.
+
 ## Repositories behind firewall
 
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:

commit a0ed3ee8bb8f2e98fe9617e6de007fc015012c0f
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Tue Nov 3 11:53:33 2020 +0200

    removed unused IP addresses (#205)
    
    * removed unused IP addresses
    
    * Update adding-apps-from-custom-sources.md
    
    edit wording
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 06bc701..ff7b2e4 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -51,7 +51,7 @@ After you have added the public key to your repository settings, finish adding t
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
 
 1. `34.74.234.56` - used by our backend for getting basic information about the repository
-2. `192.159.66.80/28` and `199.7.162.128/29` - used by our builder servers to download the code and build it
+2. `199.7.162.128/29` - used by our build servers to download the code and build it
 
 ## Modifying repository access settings
 

commit 5ed1fbe37c3a6f3bd34a605926c51aabdd35b872
Author: Helina Ariva <helina@nevercode.io>
Date:   Mon Nov 2 20:27:17 2020 +0200

    flutter version update

diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
index da23f4b..3eaf8aa 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/releases-and-versions/versions2.md
@@ -26,7 +26,7 @@ weight: 2
 - docker `19.03.12`
 - fastlane `2.163.0`
 - firebase `8.10.0`
-- flutter `1.22.2 ($HOME/programs/flutter)`
+- flutter `1.22.3 ($HOME/programs/flutter)`
 - gem `3.1.2`
 - git `2.28.0`
 - gradle `6.1.1`

commit 9a958eadcce2e08813553dff1a86258595e41781
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Mon Nov 2 20:22:42 2020 +0200

    Update Flutter (1.22.3) (#204)
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 903255c..694915d 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -26,7 +26,7 @@ weight: 3
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `1.22.2 ($HOME/programs/flutter)`
+- flutter `1.22.3 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`

commit 0698d49fd1bff2b02b4e019b48fd4f51f5749db2
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Sun Nov 1 03:46:56 2020 +0200

    Pricing changes for teams (#200)
    
    * Pricing changes for teams
    
    * expand on user limit
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/billing/billing.md b/content/billing/billing.md
index f509349..a391a07 100644
--- a/content/billing/billing.md
+++ b/content/billing/billing.md
@@ -11,16 +11,22 @@ Note that:
 
 ## Enabling billing
 
-Billing can be enabled in **User settings** for your personal account and in **team settings** for a team.
+Billing can be enabled in **User settings** for your personal account and in **team settings** for a team, or on the Billing page that is accessible from the left navigation bar.
 
-In settings, click **Enable billing** on the right sidebar. You will be asked for credit card information, or you can select an existing credit card if you have already registered one in Codemagic. To finish, click **Confirm and enable billing**.
+On clicking **Enable billing**, you will be asked to enter credit card information or offered the option to select an existing credit card if you have had billing enabled previously. To finish, click **Confirm and enable billing**.
 
-After billing is enabled, billing information (amount due, next payment date and billing history) will be visible on the right of the page. You will be charged monthly based on your usage of the paid features.
+When billing is enabled, you will be charged monthly based on usage.
 
-## Updating billing details
+## Managing billing and updating billing details
 
-Once you have enabled billing, you can click **Update billing details** on the right sidebar in team or user settings to change the billing information or add additional details, such as company name, billing email, address and tax ID.
+To manage billing for your team or personal account, navigate to the Billing page and select the team or account. 
 
-## Disabling billing
+When billing has been enabled, you will see the current usage, the due amount and the next payment date. This is also where you can download the invoices for previous billing periods.
 
-To disable billing, click on the **Disable billing** button in the **Danger zone**. On disabling billing, you will be immediately charged for the used paid features.
\ No newline at end of file
+### Updating billing details
+
+Click on **Update billing details** to change the billing information or add additional details, such as company name, billing email, address and tax ID.
+
+### Disabling billing
+
+To disable billing, click **Disable billing** in the Billing details section. On disabling billing, you will be immediately charged for the used paid features.
diff --git a/content/teams/teams.md b/content/teams/teams.md
index 4733295..d258b6f 100644
--- a/content/teams/teams.md
+++ b/content/teams/teams.md
@@ -1,57 +1,68 @@
 ---
-title: Teams
+title: Creating and managing teams
 weight: 1
 ---
 
-If more than one developer is contributing to a project, it is wiser to set up a team so that everyone could work on the project together. Up to two seats in a team are free of charge, but it is possible to invite more members by purchasing additional seats. Pricing information is available [here](https://codemagic.io/pricing/).
+If more than one developer is contributing to a project, it is wiser to set up a team so that everyone could work on the project together. Working in teams comes with some advantages:
 
-{{<notebox>}}Note that teams who enabled billing before June, 2020, and have not yet migrated to the new billing, still operate under the previous billing system. Changing team roles and having multiple owners is not possible in such teams.{{</notebox>}}
+* One account is used to access the app repository
+* Team members can jointly configure app settings
+* Team members have access to build logs, build history and artifacts
+* Consistent build versioning
 
-## Team roles
+{{<notebox>}}Note that Teams is a paid feature on Codemagic, see our [pricing page](https://codemagic.io/pricing/). We don't charge for UI access but count and bill for the users that contribute to team applications by triggering builds. Read more about how we count users [here](./users/).{{</notebox>}}
 
-Codemagic teams currently have the following team roles:
-
-* **Owner**. The user creating a team will become a team owner by default and has full access to all team, app and repository settings. Other members of the team can be upgraded to owners as well. Owners can select the repositories to be shared with the team, invite new team members, change their roles or remove existing members, including other team owners, manage team integrations and billing.
+## Creating a new team
 
-* **Member**. A user with this role can view team settings, configure app settings and trigger new builds. Members cannot modify any team settings, billing details or repository settings other than app name.
+To create a new team:
 
-## Creating a new team
+1. Navigate to the [Teams](https://codemagic.io/teams) page and click **Create new team**. 
+2. Enter a suitable name for your team.
+3. Set a [user limit](./users#user-limit) for the team. You can later adjust the limit any time. 
+4. Click **Proceed**. You will be then asked to add your credit card details and company information (if relevant) to enable billing for the team.
+5. Then click **Confirm and enable** to enable billing and continue setting up the team.
 
-To create a new team, navigate to the [Teams](https://codemagic.io/teams) page and click **Create new team**. Choose a suitable name for your team, check the relevant boxes to add the app(s) your team is going to work on and then click **Create team**. If you don't have any apps to share at this point, you can just add them later.
+Once the team has been created, team owners can change the name of the team, add or remove shared applications, add or remove users, change user roles and manage billing.
 
 {{<notebox>}}Keep in mind to review the filter settings on the Applications page to see your newly created team and shared team apps.{{</notebox>}}
 
-## Team settings
+## Managing shared applications
 
-On the team settings page, team owners can change the name of the team, add or remove shared applications, add or remove users, change user roles, manage billing and paid features, leave the team or delete it.
+To add or remove shared applications, click on **Shared applications** to see the list of available applications. Check the repositories you wish to share with your team and uncheck the ones you wish to remove. Once done, click **Save changes**.
 
-### Modifying the team name
+{{<notebox>}}Note that unless you set up a repository integration in [Team integrations](#managing-team-integrations), Codemagic will use the primary team owner's credentials for accessing the repositories.{{</notebox>}}
 
-To change the name of the team, click on its name field and change the name as you see fit. After you are done with the changes, click on the **Save changes** button at the bottom of the page.
+## Inviting team members
 
-### Managing shared applications
+You can invite users to team by clicking on **Invite team member**. An email invitation will be sent to the user to join the team. If they don't yet have a Codemagic account, they will be asked to register one before they can join the team. 
 
-To add or remove shared applications, click on **Shared applications** to see the list of available applications. Check the repositories you wish to share with your team and uncheck the ones you wish to remove. Once done, click **Save changes**.
+If there are users that have triggered builds but are not yet part of the team in Codemagic, you can click **Add to team** on their email address to send them an invitation.
 
-{{<notebox>}}Note that unless you set up a repository integration in [Team integrations](#managing-team-integrations), Codemagic will use the primary team owner's credentials for accessing the repositories.{{</notebox>}}
+To remove any team members, click on the three dots next to their name and select **Remove user**.
 
-### Managing team members
+## Managing user roles
 
-You can add additional users by clicking on **Invite team member**. An email invitation will be sent to the user to join the team.
+Users in Codemagic teams can have one of the 3 roles.
+
+* **Owner**. The user creating a team will become a team owner by default and has full access to all team, app and repository settings. Other members of the team can be upgraded to owners as well. Owners can select the repositories to be shared with the team, invite new team members, change their roles or remove existing members, including other team owners, manage team integrations and billing.
+
+* **Member**. A user with this role has access to the Codemagic UI and can view team settings, configure app settings and trigger new builds. Members cannot modify any team settings, billing details or repository settings other than app name.
+
+* **User**. Any user that triggers builds from a webhook but does not have access to the team in Codemagic UI.
 
 Owners can upgrade members to owners by clicking on the three dots next to their name and selecting **Upgrade to owner**, or downgrade other owners by selecting **Downgrade to member**. 
 
-To remove any team members, click on the three dots next to their name and select **Remove user**.
+Users that have triggered builds can be invited to the team by clicking **Add to team** on the email address in the list of users.
 
-### Managing team integrations
+## Managing team integrations
 
 In Team integrations, it is possible to set up integrations to be used with team apps.
 
 By default, team creator's credentials are used to access repository information. It is advisable to configure access to the shared repositories on the team level in the **Team integrations** section. Set up an integration with a service where your repositories are hosted by clicking **Connect** next to its name.
 
-### Billing
+## Managing billing
 
-Billing is managed separately for each team. To use the paid features, such as additional build minutes or additional team members, team owners will have to enable billing by clicking **Enable billing** on the right sidebar. See more details about billing [here](../billing/billing).
+Billing is managed separately for each team. Read more about billing [here](../billing/billing).
 
 ## Leaving the team
 
diff --git a/content/teams/users.md b/content/teams/users.md
new file mode 100644
index 0000000..8b3c0e1
--- /dev/null
+++ b/content/teams/users.md
@@ -0,0 +1,27 @@
+---
+title: Counting users in teams
+weight: 2
+---
+
+You can invite your team members to join the team in Codemagic free of charge. We'll charge only for active users, see our pricing information [here](https://codemagic.io/pricing/).
+
+## Active users
+
+An active user is anyone who triggers a build manually from the UI or via the API, or automaticlly from a webhook in response to events in the repository. The number of active users for the ongoing subscription period is shown on the right sidebar in team settings. The active users count is reset at the beginning of every month.
+
+## Identifying users
+
+Codemagic distinguishes users by the email address that is associated with their Codemagic account (when starting builds manually) or with the commit author (when triggering builds from a webhook). We recommend setting the email address in your git configuration to match the email address used in Codemagic to avoid getting counted twice. You can configure the email address in your terminal as follows:
+
+```
+$ git config --global user.name "John Doe"
+$ git config --global user.email johndoe@example.com
+```
+
+## User limit
+
+To avoid unexpected costs, team owners can set a limit to the maximum number of users allowed to run builds. Any number of users within the limit will be allowed to run builds. If the number of active users for the current subscription period is equal to the limit, builds from other users will be blocked. You can see the blocked build attempts in team settings. 
+
+To allow builds from additional users, team owners can increase the user limit by clicking **Manage billing** in team settings or selecting the team on the Billing page and then clicking **Update user limit** in Billing overview. Note that when decreasing the current limit, the new limit will apply starting from the next subscription period.
+
+At the end of the subscription period, you will be charged only for the actual number of active users (and not necessarily for the number set as the limit).

commit 3c41d41cf56e793402e274bcd172fc2c7525703d
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Fri Oct 30 16:54:30 2020 +0200

    base image update (#201)

diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
index e8eae8d..da23f4b 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/releases-and-versions/versions2.md
@@ -13,7 +13,7 @@ weight: 2
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 71GB)`
+- Disk `322GB (Free Space: 72GB)`
 
 ## Pre-installed tools
 
@@ -47,13 +47,13 @@ weight: 2
 - yq
 - zip
 
-## Xcode 12.0.1 (12A7300)
+## Xcode 12.1 (12A7403)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
 
-Xcode path: `/Applications/Xcode-12.app`
+Xcode path: `/Applications/Xcode-12.1.app`
 
-With Xcode `12.0.1` build version `12A7300` the following runtimes and devices are installed:
+With Xcode `12.1` build version `12A7403` the following runtimes and devices are installed:
 
 ### Runtimes
 
@@ -67,7 +67,7 @@ With Xcode `12.0.1` build version `12A7300` the following runtimes and devices a
 - iOS 13.5
 - iOS 13.6
 - iOS 13.7
-- iOS 14.0
+- iOS 14.1
 - tvOS 11.3
 - tvOS 11.4
 - tvOS 12.0
@@ -101,6 +101,10 @@ With Xcode `12.0.1` build version `12A7300` the following runtimes and devices a
 - iPhone 11 Pro
 - iPhone 11 Pro Max
 - iPhone SE (2nd generation)
+- iPhone 12 mini
+- iPhone 12
+- iPhone 12 Pro
+- iPhone 12 Pro Max
 - iPod touch (7th generation)
 - iPad 2
 - iPad Retina
@@ -145,4 +149,4 @@ With Xcode `12.0.1` build version `12A7300` the following runtimes and devices a
 ## Other Xcode versions
 
 - 12.2 (12B5035g) `/Applications/Xcode-12.2.app`
-- 12.1 (12A7403) `/Applications/Xcode-12.1.app`
+- 12.0.1 (12A7300) `/Applications/Xcode-12.app`

commit f8b016985b8709476cfb2724de05aadc461266f2
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Sun Oct 25 09:23:10 2020 +0200

    update backend ip address (#199)

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 4c4e36c..06bc701 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -50,7 +50,7 @@ After you have added the public key to your repository settings, finish adding t
 
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
 
-1. `34.74.4.65` - used by our backend for getting basic information about the repository
+1. `34.74.234.56` - used by our backend for getting basic information about the repository
 2. `192.159.66.80/28` and `199.7.162.128/29` - used by our builder servers to download the code and build it
 
 ## Modifying repository access settings

commit d51d9ca3a91e8e19234cdc7be85f5951dc32ec93
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Fri Oct 23 01:01:11 2020 +0300

    change slack link

diff --git a/content/_index.md b/content/_index.md
index d4085dc..338d2ef 100644
--- a/content/_index.md
+++ b/content/_index.md
@@ -19,7 +19,7 @@ To contribute, fork the repository, make your changes and start a pull request.
 
 ## Codemagic Slack workspace
 
-If you have problems with setting up Codemagic CI/CD or want to talk to fellow Flutter developers, you are welcome to join our [Slack workspace](https://join.slack.com/t/codemagicio/shared_invite/enQtNzQyODExMTQyMDcwLTQ2NTJjODE3NTA2Njg3Y2ViYmZiNGE1MWMyYWNjY2I0MzRmM2M2YmZhOTE1YTc5YjNkMmI0MzQzZWU0MzA4OGM 'Slack community for CI/CD and Flutter'). 
+If you have problems with setting up Codemagic CI/CD or want to talk to fellow Flutter developers, you are welcome to join our [Slack workspace](https://slack.codemagic.io 'Slack community for CI/CD and Flutter'). 
 
 ## Codemagic status page
 
diff --git a/content/troubleshooting/codemagic-status-page.md b/content/troubleshooting/codemagic-status-page.md
index 58b4e80..8060e42 100644
--- a/content/troubleshooting/codemagic-status-page.md
+++ b/content/troubleshooting/codemagic-status-page.md
@@ -4,6 +4,6 @@ title: Codemagic status page
 weight: 3
 ---
 
-We post information about the service status, including maintenances and service disruptions, on Twitter [@CodemagicStatus](https://twitter.com/CodemagicStatus) as well as share information in our [Slack community](https://join.slack.com/t/codemagicio/shared_invite/enQtNzQyODExMTQyMDcwLTQ2NTJjODE3NTA2Njg3Y2ViYmZiNGE1MWMyYWNjY2I0MzRmM2M2YmZhOTE1YTc5YjNkMmI0MzQzZWU0MzA4OGM).
+We post information about the service status, including maintenances and service disruptions, on Twitter [@CodemagicStatus](https://twitter.com/CodemagicStatus) as well as share information in our [Slack community](https://slack.codemagic.io).
 
 Please use these channels to report issues with the availability of the service.

commit 44d2d8f9fde5c077f7ac6a615ae2bcae429cf460
Author: Marie Jaksman <marie@greenhouseci.com>
Date:   Thu Oct 22 13:21:47 2020 +0300

    Typo (#198)
    
    Typo fix

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 680d419..387dec7 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -10,7 +10,7 @@ weight: 1
 
 Instead of creating a session with Apple Developer Portal, we are now using App Store Connect API keys for authentication. This means there will be no more expiring sessions or hassle with two-factor authentication when using automatic code signing. It is possible to set up several keys for code signing and select the right key in workflow settings. See how to [set up the Apple Developer Portal in Codemagic app](../code-signing/ios-code-signing/#automatic-code-signing) for builds that are configured in the UI. When building with `codemagic.yaml`, the API keys are added in the configuration file, see the instructions [here](../code-signing-yaml/signing-ios).
 
-### Support for multiple team oweners
+### Support for multiple team owners
 
 Codemagic teams can now have multiple team owners. Team owners can manage team integrations, add or remove team members and set up billing. Team owners can also upgrade members to owners or downgrade other owners to member. Read more about how teams work [here](../teams/teams).
 

commit 748ea06459da4937c97e922ad33f039df3f5dc57
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Wed Oct 21 10:51:42 2020 +0300

    specify ndk (#197)

diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index ef35fe0..c188672 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -141,6 +141,7 @@ The main sections in each workflow are described below.
       cocoapods: 1.9.1  # Define default or version
       node: 12.14.0     # Define default, latest, current, lts, carbon (or another stream), nightly or version
       npm: 6.13.7       # Define default, latest, next, lts or version
+      ndk: r21d         # Define default or revision (e.g. r19c)
 
 {{<notebox>}}
 See the default software versions on Codemagic build machines [here](../releases-and-versions/versions/).

commit 33158f6fc55487af76018534640e34ed1a819e00
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Tue Oct 20 10:30:01 2020 +0300

    Base image update (#196)
    
    * base image update
    
    * Update versions2.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index a20217c..903255c 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -26,7 +26,7 @@ weight: 3
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `1.22.1 ($HOME/programs/flutter)`
+- flutter `1.22.2 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
index 346e94f..e8eae8d 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/releases-and-versions/versions2.md
@@ -26,7 +26,7 @@ weight: 2
 - docker `19.03.12`
 - fastlane `2.163.0`
 - firebase `8.10.0`
-- flutter `1.22.1 ($HOME/programs/flutter)`
+- flutter `1.22.2 ($HOME/programs/flutter)`
 - gem `3.1.2`
 - git `2.28.0`
 - gradle `6.1.1`

commit a484291418658c74ac64f58cb4798b9b97c96b77
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Fri Oct 16 15:32:58 2020 +0300

    Base image update (#195)
    
    * base image update
    
    * Update versions.md
    
    * Update versions2.md
    
    Co-authored-by: Priit Lätt <priit@nevercode.io>

diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
index 63d54de..346e94f 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/releases-and-versions/versions2.md
@@ -13,7 +13,7 @@ weight: 2
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 96GB)`
+- Disk `322GB (Free Space: 71GB)`
 
 ## Pre-installed tools
 
@@ -22,28 +22,28 @@ weight: 2
 - cocoapods `1.9.3`
 - cordova `10.0.0`
 - curl
-- dart `2.9.3`
+- dart `2.10.1`
 - docker `19.03.12`
-- fastlane `2.160.0`
+- fastlane `2.163.0`
 - firebase `8.10.0`
 - flutter `1.22.1 ($HOME/programs/flutter)`
 - gem `3.1.2`
 - git `2.28.0`
 - gradle `6.1.1`
-- homebrew `2.5.2`
+- homebrew `2.5.6`
 - ionic `5.4.16`
 - jq
 - node `12.18.4`
 - npm `6.14.8`
 - python `2.7.16`
-- python3 `3.8.5`
+- python3 `3.8.6`
 - ruby `2.7.1p83`
 - ssh
 - sudo
 - tar
 - unzip
 - wget
-- yarn `1.22.5`
+- yarn `1.22.10`
 - yq
 - zip
 
@@ -144,5 +144,5 @@ With Xcode `12.0.1` build version `12A7300` the following runtimes and devices a
 
 ## Other Xcode versions
 
-- 12.2 (12B5018i) `/Applications/Xcode-12.2.app`
-
+- 12.2 (12B5035g) `/Applications/Xcode-12.2.app`
+- 12.1 (12A7403) `/Applications/Xcode-12.1.app`

commit 464af13b829c6f71ecee58884fdda4e48526007a
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Oct 16 11:24:46 2020 +0300

    Remove unnecessary file

diff --git a/content/code-signing-yaml/signing.md b/content/code-signing-yaml/signing.md
deleted file mode 100644
index 10d5943..0000000
--- a/content/code-signing-yaml/signing.md
+++ /dev/null
@@ -1,133 +0,0 @@
----
-title: Code signing
-description: How to set up code signing in codemagic.yaml
-weight: 2
-aliases:
-  - '../yaml/distribution'
----
-
-All Android and iOS applications have to be digitally signed before they are made available to the public to confirm their author and guarantee that the code has not been altered or corrupted since it was signed.
-
-## Setting up code signing for iOS
-
-Signing iOS applications requires [Apple Developer Program](https://developer.apple.com/programs/enroll/) membership. You can upload your signing certificate and distribution profile to Codemagic to manage code signing yourself or use the automatic code signing option where Codemagic takes care of code signing and signing files management on your behalf. Read more about the two options below.
-
-{{<notebox>}}
-Under the hood, we use [Codemagic CLI tools](https://github.com/codemagic-ci-cd/cli-tools) to perform iOS code signing ⏤ these tools are open source and can also be [used locally](../building/running-locally/) or in other environments. Codemagic uses the [keychain](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md#keychain) utility to manage macOS keychains and certificates.
-{{</notebox>}}
-
-### Setting up automatic code signing
-
-In order to use **automatic code signing** and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect and define the environment variables listed below. Make sure to [encrypt](../building/encrypting/#encrypting-sensitive-data) the values of the variables before adding them to the configuration file. Note that when encrypting files via the UI, they are base64 encoded and would have to be decoded during the build. 
-
-* `APP_STORE_CONNECT_PRIVATE_KEY`
-
-  It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api). To do so:
-
-  1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
-  2. Click on the + sign to generate a new API key.
-  3. Enter the name for the key and select an access level (`Developer` or `App Manager`).
-  4. Click **Generate**.
-  5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key. Note that the key can only be downloaded once.
-
-* `APP_STORE_CONNECT_KEY_IDENTIFIER`
-
-  In **App Store Connect > Users and Access > Keys**, this is the **Key ID** of the key.
-
-* `APP_STORE_CONNECT_ISSUER_ID`
-
-  In **App Store Connect > Users and Access > Keys**, this is the **Issuer ID** displayed above the table of active keys.
-
-* `CERTIFICATE_PRIVATE_KEY`
-
-  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal:
-
-      ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
-
-{{<notebox>}}
-Alternatively, each property can be specified in the scripts section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
-{{</notebox>}}
-
-{{<notebox>}}
-Codemagic uses the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) utility for generating and managing certificates and provisioning profiles and performing code signing.
-{{</notebox>}}
-
-    - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
-      script: keychain initialize
-    - name: Fetch signing files
-      script: |
-        app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
-          --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
-          --create  # Allow creating resources if existing are not found.
-    - name: Set up signing certificate
-      script: keychain add-certificates
-
-The available provisioning profile types are described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store).
-
-### Setting up manual code signing
-
-In order to use **manual code signing**, [encrypt](../building/encrypting/#encrypting-sensitive-data) your signing certificate, the certificate password (if the certificate is password-protected) and the provisioning profile, and set the encrypted values to the following environment variables:
-
-    CM_CERTIFICATE: Encrypted(...)
-    CM_CERTIFICATE_PASSWORD: Encrypted(...)
-    CM_PROVISIONING_PROFILE: Encrypted(...)
-
-With the manual code signing method, you are required to upload the signing certificate and the matching provisioning profile(s) to Codemagic in order to receive signed builds.
-
-
-      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
-        script: keychain initialize
-      - name: Set up Provisioning profiles from environment variables
-        script: |
-          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-          mkdir -p "$PROFILES_HOME"
-          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
-          echo "Saved provisioning profile $PROFILE_PATH"
-      - name: Set up signing certificate
-        script: |
-          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-          # when using a password-protected certificate
-          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
-          # when using a certificate that is not password-protected
-          keychain add-certificates --certificate /tmp/certificate.p12
-
-
-## Setting up code signing for Android
-
-The following templates show code signing using `key.properties`.
-
-### Set up default debug key.properties
-
-    - name: Set up debug key.properties
-      script: |
-        keytool -genkeypair \
-          -alias androiddebugkey \
-          -keypass android \
-          -keystore ~/.android/debug.keystore \
-          -storepass android \
-          -dname 'CN=Android Debug,O=Android,C=US' \
-          -keyalg 'RSA' \
-          -keysize 2048 \
-          -validity 10000
-
-### Set up code signing with user specified keys
-
-In order to do code signing [encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password protected), key alias and key alias password (if key alias is password protected) and set the encrypted values to the following environment variables:
-
-    CM_KEYSTORE: Encrypted(...)
-    CM_KEYSTORE_PASSWORD: Encrypted(...)
-    CM_KEY_ALIAS_USERNAME: Encrypted(...)
-    CM_KEY_ALIAS_PASSWORD: Encrypted(...)
-
-Use the following script:
-
-    - name: Set up key.properties
-      script: |
-        echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
-        cat >> "$FCI_BUILD_DIR/project_directory/android/key.properties" <<EOF
-        storePassword=$CM_KEYSTORE_PASSWORD
-        keyPassword=$CM_KEY_ALIAS_PASSWORD
-        keyAlias=$CM_KEY_ALIAS_USERNAME
-        storeFile=/tmp/keystore.keystore
-        EOF

commit e268a09f14e424fde01e65ee9af639e8585250fb
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Fri Oct 16 10:00:23 2020 +0300

    Code signing docs improvement (#194)
    
    * restructuring
    
    * move common issues
    
    * yaml improvements
    
    * hierarchy menu
    
    * improve content-menu
    
    * using nested folders
    
    * new folders
    
    * Fix webhooks link
    
    * Wrap path in bold
    
    * Wrap text in bold
    
    * refactor content-list styles
    
    * fix links + editing
    
    * change category name
    
    * separate code signing for android and ios
    
    * fix links
    
    * fix links
    
    * Fixing some aliases
    
    * fix formatting
    
    * fix formatting
    
    * prettifying and ios and fixing android signing scripts
    
    prettified ios scripts and android ones. There was a small bug that we ask to use an env var for keystore path CM_KEYSTORE_PATH but don't define it and any way so that codesigning wouldn't work
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan.lab.mobi>
    Co-authored-by: Vladyslav Bondarenko <vladyslav@nevercode.io>
    Co-authored-by: Mart Laub <martlaub@yahoo.com>
    Co-authored-by: Helina Ariva <helina@nevercode.io>
    Co-authored-by: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>

diff --git a/content/building/running-locally.md b/content/building/running-locally.md
index b2d40c5..9324a03 100644
--- a/content/building/running-locally.md
+++ b/content/building/running-locally.md
@@ -3,7 +3,6 @@ title: Using Codemagic CLI tools locally
 description: Using Codemagic CLI tools locally or in other environments.
 weight: 12
 aliases: 
-    - '../building/runninglocally'
     - '../yaml/runninglocally'
 ---
 
@@ -25,7 +24,7 @@ To fetch (or create and download) the provisioning profile(s) and certificate fo
         MY_BUNDLE_ID
 
  By default, your certificate will be saved to `$HOME/Library/MobileDevice/Certificates` and the provisioning profile(s) will be saved to `$HOME/Library/MobileDevice/Provisioning Profiles`.
- Refer to [Setting up code signing for iOS](../code-signing-yaml/signing/) for more information about accessing App Store Connect.
+ Refer to [Signing iOS apps](../code-signing-yaml/signing-ios/) for more information about accessing App Store Connect.
 
 To initialize keychain at system default keychain path with empty keychain password and add your `certificate.p12` with certificate password, use the [keychain](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md#keychain) tool with the following command:
 
diff --git a/content/code-signing-yaml/signing-android.md b/content/code-signing-yaml/signing-android.md
new file mode 100644
index 0000000..9aaa4bb
--- /dev/null
+++ b/content/code-signing-yaml/signing-android.md
@@ -0,0 +1,123 @@
+---
+title: Signing Android apps
+description: How to set up code signing in codemagic.yaml
+weight: 2
+---
+
+All Android applications have to be digitally signed before they are made available to the public to confirm their author and guarantee that the code has not been altered or corrupted since it was signed. There are several ways to set up code signing for Android apps.
+
+## Signing Android apps using Gradle
+
+This example shows how to set up code signing using Gradle.
+
+1. Set your signing configuration in `build.gradle` as follows:
+
+```
+...
+  android {
+      ...
+      defaultConfig { ... }
+
+      signingConfigs {
+          release {
+              if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
+                  storeFile file(System.getenv()["CM_KEYSTORE_PATH"])
+                  storePassword System.getenv()["CM_KEYSTORE_PASSWORD"]
+                  keyAlias System.getenv()["CM_KEY_ALIAS"]
+                  keyPassword System.getenv()["CM_KEY_ALIAS_PASSWORD"]
+              } else {
+                  storeFile file("/path/to/local/myreleasekey.keystore")
+                  storePassword "password"
+                  keyAlias "MyReleaseKey"
+                  keyPassword "password"
+              }
+          }
+      }
+
+      buildTypes {
+          release {
+              ...
+              signingConfig signingConfigs.release
+          }
+      }
+  }
+  ...
+```
+2. Add your keystore and keystore details in the [`environment`](../getting-started/yaml#environment) section of the configuration file. [Encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password-protected), key alias and key alias password (if key alias is password-protected) and set the encrypted values to the following environment variables. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build.
+
+```  
+environment:  
+  CM_KEYSTORE: Encrypted(...)
+  CM_KEYSTORE_PASSWORD: Encrypted(...)
+  CM_KEY_ALIAS_USERNAME: Encrypted(...)
+  CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+```
+
+3. In the [`scripts`](../getting-started/yaml#scripts) section of the configuration file, you will need to decode the keystore file and add it before the build command. You can choose any path to your keystore file. For example:
+
+```
+scripts:
+  - name: Build Android
+    script: |
+      export CM_KEYSTORE_PATH="/tmp/keystore.keystore"
+      echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
+      cd android && ./gradlew assembleRelease
+```
+
+Pay attention to the fact that scripts are executed as separate processes and environment variables defined inside one script won't be accessible in another script. Therefore, if you want to access your `CM_KEYSTORE_PATH` variable from multiple scripts, it makes sense to define it in the `environment` section.
+
+```
+environment:  
+  CM_KEYSTORE_PATH: /tmp/keystore.keystore
+  CM_KEYSTORE: Encrypted(...)
+  CM_KEYSTORE_PASSWORD: Encrypted(...)
+  CM_KEY_ALIAS_USERNAME: Encrypted(...)
+  CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+...
+scripts:
+  ...
+  - name: Export keystore
+    script: echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
+  - name: Build Android
+    script: cd android && ./gradlew assembleRelease
+  ...
+```
+
+## Signing Android apps using key.properties
+
+The following templates show code signing using `key.properties`.
+
+### Set up default debug key.properties
+
+    - name: Set up debug key.properties
+      script: |
+        keytool -genkeypair \
+          -alias androiddebugkey \
+          -keypass android \
+          -keystore ~/.android/debug.keystore \
+          -storepass android \
+          -dname 'CN=Android Debug,O=Android,C=US' \
+          -keyalg 'RSA' \
+          -keysize 2048 \
+          -validity 10000
+
+### Set up code signing with user-specified keys
+
+In order to do code signing [encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password protected), key alias and key alias password (if key alias is password protected) and set the encrypted values to the following environment variables:
+
+    CM_KEYSTORE: Encrypted(...)
+    CM_KEYSTORE_PASSWORD: Encrypted(...)
+    CM_KEY_ALIAS_USERNAME: Encrypted(...)
+    CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+
+Use the following script:
+
+    - name: Set up key.properties
+      script: |
+        echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+        cat >> "$FCI_BUILD_DIR/project_directory/android/key.properties" <<EOF
+        storePassword=$CM_KEYSTORE_PASSWORD
+        keyPassword=$CM_KEY_ALIAS_PASSWORD
+        keyAlias=$CM_KEY_ALIAS_USERNAME
+        storeFile=/tmp/keystore.keystore
+        EOF
diff --git a/content/code-signing-yaml/signing-ios.md b/content/code-signing-yaml/signing-ios.md
new file mode 100644
index 0000000..9959268
--- /dev/null
+++ b/content/code-signing-yaml/signing-ios.md
@@ -0,0 +1,120 @@
+---
+title: Signing iOS apps
+description: How to set up code signing in codemagic.yaml
+weight: 1
+aliases: '../code-signing-yaml/signing'
+---
+
+All iOS applications have to be digitally signed before they can be installed on real devices or made available to the public.
+
+Signing iOS applications requires [Apple Developer Program](https://developer.apple.com/programs/enroll/) membership. You can upload your signing certificate and distribution profile to Codemagic to manage code signing yourself or use the automatic code signing option where Codemagic takes care of code signing and signing files management on your behalf. Read more about the two options below.
+
+{{<notebox>}}
+Under the hood, we use [Codemagic CLI tools](https://github.com/codemagic-ci-cd/cli-tools) to perform iOS code signing ⏤ these tools are open source and can also be [used locally](../building/running-locally/) or in other environments. More specifically, we use the [xcode-project utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md) for preparing the code signing properties for the build, the [keychain utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md) for managing macOS keychains and certificates, and the [app-store-connect utility](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md) for creating and downloading code signing certificates and provisioning profiles. The latter makes use of the App Store Connect API for authenticating with Apple Developer Portal.
+{{</notebox>}}
+
+## Automatic code signing
+
+In order to use automatic code signing and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect.
+
+### Creating the App Store Connect API key
+
+It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api). To do so:
+
+1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
+2. Click on the + sign to generate a new API key.
+3. Enter the name for the key and select an access level. We recommend choosing either `Developer` or `App Manager`, read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
+4. Click **Generate**.
+5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+
+{{<notebox >}} 
+Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in Codemagic UI.
+{{</notebox>}}
+
+### Saving the API key to environment variables
+
+Save the API key and the related information as [environment](../getting-started/yaml#environment) variables. Make sure to [encrypt](../building/encrypting/#encrypting-sensitive-data) the values of the variables before adding them to the configuration file.
+
+    environment:
+      vars: 
+        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
+        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
+        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
+        CERTIFICATE_PRIVATE_KEY: Encrypted(...)
+
+* `APP_STORE_CONNECT_KEY_IDENTIFIER`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Key ID** of the key.
+
+* `APP_STORE_CONNECT_ISSUER_ID`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Issuer ID** displayed above the table of active keys.
+
+* `APP_STORE_CONNECT_PRIVATE_KEY`
+
+  This is the private API key downloaded from App Store Connect. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build. Alternativey, you can encrypt the **contents** of the file and save the encrypted value to the environment variable.
+
+* `CERTIFICATE_PRIVATE_KEY`
+
+  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal:
+
+      ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
+
+{{<notebox>}}
+Alternatively, each property can be specified in the `scripts` section of the YAML file as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
+{{</notebox>}}
+
+### Specifying code signing configuration
+
+To code sign the app, add the following commands in the [`scripts`](../getting-started/yaml#scripts) section of the configuration file, after all the dependencies are installed, right before the build commands. 
+
+    scripts:
+      ... your dependencies installation
+      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+        script: keychain initialize
+      - name: Fetch signing files
+        script: |
+          app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
+            --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
+            --create  # Allow creating resources if existing are not found.
+      - name: Set up signing certificate
+        script: keychain add-certificates
+      - name: Set up code signing settings on Xcode project
+        script: xcode-project use-profiles
+      ... your build commands
+
+Based on the specified bundle ID and [provisioning profile type]((https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store)), Codemagic will fetch or create the relevant provisioning profile and certificate to code sign the build.
+
+## Manual code signing
+
+In order to use manual code signing, [encrypt](../building/encrypting/#encrypting-sensitive-data) your **signing certificate**, the **certificate password** (if the certificate is password-protected) and the **provisioning profile**, and set the encrypted values to the following environment variables. Note that when encrypting files via UI, they will be base64 encoded and would have to be decoded during the build.
+
+    environment:
+      CM_CERTIFICATE: Encrypted(...)
+      CM_CERTIFICATE_PASSWORD: Encrypted(...)
+      CM_PROVISIONING_PROFILE: Encrypted(...)
+
+Then add the code signing configuration and the commands to code sign the build in the scripts section, after all the dependencies are installed, right before the build commands. 
+
+    scripts:
+      ... your dependencies installation
+      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+        script: keychain initialize
+      - name: Set up Provisioning profiles from environment variables
+        script: |
+          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+          mkdir -p "$PROFILES_HOME"
+          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+          echo "Saved provisioning profile $PROFILE_PATH"
+      - name: Set up signing certificate
+        script: |
+          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+
+          # when using a password-protected certificate
+          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+          # when using a certificate that is not password-protected
+          keychain add-certificates --certificate /tmp/certificate.p12
+      - name: Set up code signing settings on Xcode project
+        script: xcode-project use-profiles
+      ... your build commands
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index e4b5fa2..af377bc 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -41,7 +41,7 @@ In short, the purpose of the different provisioning profiles is the following:
 
 Codemagic makes automatic code signing possible by connecting to [App Store Connect via its API](https://developer.apple.com/app-store-connect/api/) for creating and managing your code signing certificates and provisioning profiles. It is possible to set up several code signing identities and use different code signing settings per workflow.
 
-The following sections describe how to set up automatic code signing for builds configured in the UI. If you're building with `codemagic.yaml`, please refer [here](../code-signing-yaml/signing#setting-up-code-signing-for-ios).
+The following sections describe how to set up automatic code signing for builds configured in the UI. If you're building with `codemagic.yaml`, please refer [here](../code-signing-yaml/signing-ios).
 
 ### Step 1. Creating an App Store API key for Codemagic
 
diff --git a/content/flutter/env-variables.md b/content/flutter/env-variables.md
index 42adb6f..236c514 100644
--- a/content/flutter/env-variables.md
+++ b/content/flutter/env-variables.md
@@ -3,7 +3,6 @@ title: Adding environment variables
 description: How to add environment variables in Codemagic UI
 weight: 4
 aliases:
-  - '../building/environment-variables'
 ---
 
 Environment variables are useful for making available for Codemagic the credentials, configuration files or API keys that are required for successful building or integration with external services. For more information about the use of environment variables and a list of Codemagic read-only environment variables, refer [here](../building/environment-variables).
diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
index 68e8854..05d1472 100644
--- a/content/getting-started/building-a-flutter-app.md
+++ b/content/getting-started/building-a-flutter-app.md
@@ -2,7 +2,7 @@
 title: Building a Flutter app
 description: Building a Flutter app with YAML.
 weight: 6
-aliases:
+aliases:	
   - '../yaml/building-a-flutter-app'
 ---
 
@@ -63,7 +63,7 @@ If your app settings in Codemagic have building Android App Bundles enabled, we
 
 Please make sure to wrap the `--bundle` pattern in single quotes. If `--bundle` option is not specified, default glob pattern `**/*.aab` will be used.
 
-More information about Android code signing can be found [here](../code-signing-yaml/signing/#setting-up-code-signing-for-android).
+More information about Android code signing can be found [here](../code-signing-yaml/signing-android).
 
 {{<notebox>}}
 Codemagic uses the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) utility to build universal .apk files from Android App Bundles.
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
index 191c971..210f0d9 100644
--- a/content/getting-started/building-a-native-android-app.md
+++ b/content/getting-started/building-a-native-android-app.md
@@ -15,7 +15,7 @@ The apps you have available on Codemagic are listed on the Applications page. Se
 3. Download the example configuration for Android App or copy it to clipboard.
 4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
     * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
-    * Read more about adding configuration for [testing](../testing-yaml/testing), [code signing](../code-signing-yaml/signing) and [publishing](../publishing-yaml/distribution).
+    * Read more about adding configuration for [testing](../testing-yaml/testing), [code signing](../code-signing-yaml/signing-android) and [publishing](../publishing-yaml/distribution).
     * See the full Android workflow example [below](#android-workflow-example).
 5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
 6. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml** and select the **workflow** to build.
@@ -39,7 +39,7 @@ The necessary command for building native Android application goes under `script
 To test, code sign and publish an Android app:
 
 * The code for testing an Android app also goes under `scripts`. A few examples of testing can be found [here](../testing-yaml/testing).
-* All Android applications need to be signed before release. For Gradle code signing configuration refer to the [documentation](../code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing). More information about code signing with YAML in general is [here](../code-signing-yaml/signing).
+* All Android applications need to be signed before release, see how to do that [here](../code-signing-yaml/signing-android).
 * All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/#publishing).
 
 ## Android workflow example
@@ -88,6 +88,7 @@ The following example shows how to set up a workflow that builds your app and pu
             credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
             track: internal
 
+
 {{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle`. {{</notebox>}}
 
 Incrementing the version code can be done as follows:
diff --git a/content/getting-started/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
index 94c3144..38364fd 100644
--- a/content/getting-started/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -59,7 +59,7 @@ By default, your artifacts will be generated into `build/ios/ipa` but you can sp
 To test, code sign and publish an iOS app:
 
 * The code for testing an iOS app also goes under `scripts`, before build commands. An example for testing an iOS app can be found [here](../testing-yaml/testing/#native-ios).
-* All iOS applications need to be signed before release. A full example of iOS code singing with YAML is available [here](../code-signing-yaml/signing).
+* All iOS applications need to be signed before release. A full example of iOS code singing with YAML is available [here](../code-signing-yaml/signing-ios).
 * All generated artifacts can be published to external services. The available integrations currently are email, Slack and App Store Connect. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/#publishing).
 
 ## iOS workflow example
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index dc3d2fe..a0ece6b 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -3,7 +3,7 @@ title: Building a React Native app
 description: Building a React Native app with YAML.
 weight: 8
 aliases: 
-    - '../yaml/building-a-react-native-app'
+  - '../yaml/building-a-react-native-app'
 ---
 
 React Native is a cross-platform solution that allows you to build apps for both iOS and Android faster using a single language. When working with YAML, the basics are still the same, the build scripts are added to the `scripts` section in the [overall architecture](../getting-started/yaml#template).
@@ -35,7 +35,7 @@ Script for building an iOS application:
 To test and publish a React Native app:
 
 * The code for testing a React Native app also goes under `scripts`, before build commands. An example for testing a React Naive app can be found [here](../testing-yaml/testing/#react-native-unit-test).
-* All iOS and Android applications need to be signed before release. Different script examples are available [here](../code-signing-yaml/signing/).
+* All iOS and Android applications need to be signed before release. See how to set up [iOS code signing](../code-signing-yaml/signing-ios) and [Android code signing](../code-signing-yaml/signing-android).
 * All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/#publishing).
 
 ## iOS workflow example
@@ -101,7 +101,6 @@ The following example shows a workflow that can be used to publish your iOS app
             apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE
             password: Encrypted(...) # THE ENCRYPTED APP-SPECIFIC PASSWORD GOES HERE
 
-
 ## Android workflow example
 
 The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
@@ -149,7 +148,6 @@ The following example shows how to set up a workflow that builds your app and pu
           google_play:
             credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
             track: internal
-
     
 {{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle` {{</notebox>}}
 
diff --git a/content/getting-started/yaml.md b/content/getting-started/yaml.md
index a3c7ba8..ef35fe0 100644
--- a/content/getting-started/yaml.md
+++ b/content/getting-started/yaml.md
@@ -206,9 +206,9 @@ If you do not wish Codemagic to build a particular commit, include `[skip ci]` o
 
 ### Scripts
 
-Scripts specify what kind of application is built. This is where you can specify the commands to [test](../testing-yaml/testing/), build and [code sign](../code-signing-yaml/signing) your project. You can also run shell (`sh`) scripts directly in your `.yaml` file, or run scripts in other languages by defining the language with a shebang line or by launching a script file present in your repository.
+Scripts specify what kind of application is built. This is where you can specify the commands to [test](../testing-yaml/testing/), build and code sign your project (see our documentation for [iOS code signing](../code-signing-yaml/signing-ios) and [Android code signing](../code-signing-yaml/signing-android)). You can also run shell (`sh`) scripts directly in your `.yaml` file, or run scripts in other languages by defining the language with a shebang line or by launching a script file present in your repository.
 
-When you set `ignore_failure` to `true`, the workflow will continue to run even if the script fails
+When you set `ignore_failure` to `true`, the workflow will continue to run even if the script fails.
 
     scripts:
       - echo "single line script"
diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 814c7e5..680d419 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -8,7 +8,7 @@ weight: 1
 
 ### Using App Store Connect API for Apple Developer Portal integration
 
-Instead of creating a session with Apple Developer Portal, we are now using App Store Connect API keys for authentication. This means there will be no more expiring sessions or hassle with two-factor authentication when using automatic code signing. It is possible to set up several keys for code signing and select the right key in workflow settings. See how to [set up the Apple Developer Portal in Codemagic app](../code-signing/ios-code-signing/#automatic-code-signing) for builds that are configured in the UI. When building with `codemagic.yaml`, the API keys are added in the configuration file, see the instructions [here](../code-signing-yaml/signing/#setting-up-code-signing-for-ios).
+Instead of creating a session with Apple Developer Portal, we are now using App Store Connect API keys for authentication. This means there will be no more expiring sessions or hassle with two-factor authentication when using automatic code signing. It is possible to set up several keys for code signing and select the right key in workflow settings. See how to [set up the Apple Developer Portal in Codemagic app](../code-signing/ios-code-signing/#automatic-code-signing) for builds that are configured in the UI. When building with `codemagic.yaml`, the API keys are added in the configuration file, see the instructions [here](../code-signing-yaml/signing-ios).
 
 ### Support for multiple team oweners
 
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index e8e4b8d..3a3f38a 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -2,10 +2,6 @@
 description: Find out how to overcome frequent issues with building your Flutter app on Codemagic. 
 title: Common issues
 weight: 4
-aliases:
-    - '../troubleshooting/common-issues'
-    - '../custom-scripts/add-a-git-tag-with-app-version'
-    - '../custom-scripts/upload-custom-artifacts'
 ---
 
 ## iOS errors regarding creating authentication sessions

commit 2c8046b3b48a5d0ccf06077e56c0b216b280019c
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Oct 14 11:42:40 2020 +0300

    Base image upate for new flutter version

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 1e66ab9..a20217c 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -26,7 +26,7 @@ weight: 3
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `1.22.0 ($HOME/programs/flutter)`
+- flutter `1.22.1 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
index 9d7d1e2..63d54de 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/releases-and-versions/versions2.md
@@ -26,7 +26,7 @@ weight: 2
 - docker `19.03.12`
 - fastlane `2.160.0`
 - firebase `8.10.0`
-- flutter `1.22.0 ($HOME/programs/flutter)`
+- flutter `1.22.1 ($HOME/programs/flutter)`
 - gem `3.1.2`
 - git `2.28.0`
 - gradle `6.1.1`

commit 6527d5cfe03e58782308fc3520f8c323a34987eb
Author: Tadas Petra <60107328+tadaspetra@users.noreply.github.com>
Date:   Sat Oct 10 09:51:29 2020 -0500

    Small typo fix (#193)

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 287055f..130c685 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -5,7 +5,7 @@ weight: 8
 
 If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using the environment variables that Codemagic exports during the build. There are two environment variables that count the number of builds:
 
-* `BUILD_NUMBER`. Holds the total count of builds (including the ongoing build) for a specific **workflow** in Codemagic. TIn other words, if you have triggered 10 builds for some workflow in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`.
+* `BUILD_NUMBER`. Holds the total count of builds (including the ongoing build) for a specific **workflow** in Codemagic. In other words, if you have triggered 10 builds for some workflow in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`.
 
 * `PROJECT_BUILD_NUMBER`. Holds the total count of builds (including the ongoing build) for a **project** in Codemagic. In contrast with `BUILD_NUMBER`, `PROJECT_BUILD_NUMBER` will increase every time you build any of the workflows of the app.
 

commit 8b7cfb54b484dfe10c35665efcbca2a367244831
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Oct 7 16:18:59 2020 +0300

    Update adding-apps-from-custom-sources.md (#192)

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 091e943..4c4e36c 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -51,7 +51,7 @@ After you have added the public key to your repository settings, finish adding t
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
 
 1. `34.74.4.65` - used by our backend for getting basic information about the repository
-2. `192.159.66.80/28` - used by our builder servers to download the code and build it
+2. `192.159.66.80/28` and `199.7.162.128/29` - used by our builder servers to download the code and build it
 
 ## Modifying repository access settings
 

commit 61bcbbd507cb626b412b93b4b8c447fc4f1a7a60
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Tue Oct 6 15:55:51 2020 +0300

    Add info about publishing to Firebase Hosting (#187)
    
    * add info about publishing to firebase hosting

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 465661c..4798a9b 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -128,7 +128,6 @@ Android
     - name: Publish the app to Firebase App Distribution
       script: |
         apkPath=$(find build -name "*.apk" | head -1)
-
         if [[ -z ${apkPath} ]]
         then
           echo "No apks were found, skip publishing to Firebase App Distribution"
@@ -142,7 +141,6 @@ iOS
     - name: Publish the app to Firebase App Distribution
       script: |
         ipaPath=$(find build -name "*.ipa" | head -1)
-
         if [[ -z ${ipaPath} ]]
         then
           echo "No ipas were found, skip publishing to Firebase App Distribution"
@@ -227,3 +225,25 @@ And then export the filepath on the gradlew task
         cd android && ./gradlew appDistributionUploadRelease
 
 {{</notebox>}}
+
+## Publishing web applications to Firebase Hosting
+
+Publishing web applications to Firebase Hosting With Codemagic publishing to Firebase Hosting is a straight-forward process as the Firebase CLI is already pre-installed on our virtual machines. Please note that before trying to publish to Firebase Hosting, you will have to set it up for your project locally. You can find more information in the official [documentation](https://firebase.google.com/docs/hosting/quickstart) for Firebase.
+
+1. To get started with adding Firebase Hosting to Codemagic, you will need to obtain your Firebase token. In order to do that, run `firebase login:ci` in your local terminal. 
+2. After running the command, your default browser should prompt for authorization to your Firebase project - when access is granted, the necessary token will appear in your terminal.
+3. Copy and [encrypt](https://github.com/codemagic-ci-cd/codemagic-docs/blob/master/content/building/encrypting) the token using the Codemagic UI.
+4. Add your encrypted token to your .yaml file by setting it under your environment variables with the name `FIREBASE_TOKEN`.
+5. Create a new script for publishing to Firebase Hosting in your scripts section of the .yaml file and add it right after the build step
+```
+    - name: Publish to Firebase Hosting
+      script: |
+        firebase deploy --token "$FIREBASE_TOKEN"
+```
+When the build is successful, you can see your application published to Firebase Hosting. You can find the direct URL to the deployed build also from the log output in Codemagic UI:
+```
+✔  Deploy complete!
+
+Project Console: https://console.firebase.google.com/project/your-project/overview
+Hosting URL: https://your-project.web.app
+```

commit 08228ec7f8b91252b857e5f056b2e7c1a6b094a4
Author: nevercode-kevin <68225534+nevercode-kevin@users.noreply.github.com>
Date:   Tue Oct 6 14:54:38 2020 +0200

    Ionic documentation added (#188)
    
    * Ionic documentation added
    
    * updated link to examples, corrected link to distribution, removed commented sections for better legibility

diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
index d8f3249..dc3d2fe 100644
--- a/content/getting-started/building-a-react-native-app.md
+++ b/content/getting-started/building-a-react-native-app.md
@@ -1,7 +1,7 @@
 ---
 title: Building a React Native app
 description: Building a React Native app with YAML.
-weight: 7
+weight: 8
 aliases: 
     - '../yaml/building-a-react-native-app'
 ---
diff --git a/content/getting-started/building-an-ionic-app.md b/content/getting-started/building-an-ionic-app.md
new file mode 100644
index 0000000..96606c6
--- /dev/null
+++ b/content/getting-started/building-an-ionic-app.md
@@ -0,0 +1,382 @@
+---
+title: Building an Ionic app 
+description: Building an Ionic app with YAML.
+weight: 7
+aliases:
+  - '../yaml/building-an-ionic-app'
+---
+
+## Setting up an Ionic Capacitor/Cordova project
+
+The apps you have available on Codemagic are listed on the Applications page. See how to add additional apps [here](./adding-apps-from-custom-sources).
+
+1. On the Applications page, click **Set up build** next to the app you want to start building. 
+2. Select **Ionic App** as the starter workflow.
+3. Download the example configuration for Ionic App or copy it to clipboard.
+4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
+    * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
+    * Read more about adding configuration for [testing](../testing-yaml/testing), [code signing](../code-signing-yaml/signing) and [publishing](../publishing-yaml/distribution).
+    * See the full workflow examples below.
+5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
+6. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml** and select the **workflow** to build.
+7. Finally, click **Start new build** to build the app.
+
+{{<notebox>}}
+**Tip**
+
+Note that you need to set up a [webhook](../building/webhooks) for automatic build triggering. Click the **Create webhook** button on the right sidebar in app settings to add a webhook (not available for apps added via SSH/HTTP/HTTPS).
+
+{{</notebox>}}
+
+## Testing, code signing and publishing Ionic Android and iOS apps
+
+To test, code sign and publish Ionic Android and iOS apps:
+
+* The code for testing an Ionic Android app also goes under `scripts`. A few examples of testing can be found [here](../testing-yaml/testing).
+* All Android applications need to be signed before release. For Gradle code signing configuration for **Ionic Capacitor** apps refer to the [documentation](../code-signing/android-code-signing/). More information about code signing with YAML in general is [here](../code-signing-yaml/signing). If you are building **Ionic Cordova** Android apps see the workflow sample below.
+* All iOS applications need to be signed before release. For iOS code signing configuration refer to the iOS code signing documentation [here](../code-signing/ios-code-signing/)
+* All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/).
+
+## Android Ionic Capacitor workflow example
+
+The following example shows how to set up a workflow that builds your **Ionic Capacitor** Android app and publishes to a Google Play internal track.
+
+    workflows:
+      ionic-capacitor-android-workflow:
+          name: Ionic Capacitor Android Workflow
+          max_build_duration: 120
+          instance_type: mac_mini
+          environment:
+              vars:
+                # Android Keystore environment variables
+                CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
+                CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
+                CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
+                CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
+              node: latest
+          triggering:
+              events:
+                  - push
+                  - tag
+                  - pull_request
+              branch_patterns:
+                  - pattern: develop
+                    include: true
+                    source: true
+          scripts:
+              - name: Install npm dependencies for Ionic Capacitor project
+                script: |
+                  npm install
+              - name: Set Android SDK location
+                script: |
+                  echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+              - name: Set up keystore
+                script: |
+                  echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+                  cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
+                  storePassword=$CM_KEYSTORE_PASSWORD
+                  keyPassword=$CM_KEY_ALIAS_PASSWORD
+                  keyAlias=$CM_KEY_ALIAS_USERNAME
+                  storeFile=/tmp/keystore.keystore
+                  EOF
+              - name: Update dependencies and copy web assets to native project
+                script: |
+                  # npx cap copy # <- use this is you don't need to update native dependencies
+                  npx cap sync # <- update native dependencies and copy web assets to native project
+              - name: Build Android release
+                script: |
+                  cd android
+                  ./gradlew assembleRelease
+          artifacts:
+              - android/app/build/outputs/**/*.apk
+          publishing:
+              google_play:
+                  credentials: Encrypted(...) # <- Put your encrypted JSON key file for Google Play service account
+                  track: internal
+              email:
+                  recipients:
+                      - user_one@example.com
+                      - user_two@example.com
+                  notify:
+                    success: true     # To not receive a notification when a build succeeds
+                    failure: false     # To not receive a notification when a build fails
+
+{{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle`. {{</notebox>}}
+
+Incrementing the version code can be done as follows:
+
+```
+    android {
+        ...
+        
+        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
+        defaultConfig {
+            ...
+            versionCode appVersionCode
+            ...
+        }
+    }
+```
+## Android Ionic Cordova workflow example
+
+The following example shows how to set up a workflow that builds your **Ionic Cordova** Android app and publishes to a Google Play internal track.
+
+```
+workflows:
+  ionic-cordova-android-workflow:
+      name: Ionic Cordova Android Workflow
+      max_build_duration: 120
+      instance_type: mac_mini
+      environment:
+          vars:
+            # Android Keystore environment variables
+            CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
+            CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
+            CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
+            CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
+            CM_KEYSTORE_PATH: /tmp/keystore.keystore
+          node: latest
+      triggering:
+          events:
+              - push
+              - tag
+              - pull_request
+          branch_patterns:
+              - pattern: develop
+                include: true
+                source: true
+      scripts:
+          - name: Install npm dependencies for Ionic Cordova project and update to Cordova version 9
+            script: |
+              npm ci # equivalent of npm install for CI systems. Requires package-lock.json or npm-shrinkwrap.json to be present
+              cvm install 9.0.0
+              cvm use 9.0.0
+          - name: Setup Cordova Android platform
+            script: |
+              ionic cordova platform remove android --nosave
+              ionic cordova platform add android --confirm --no-interactive --noresources
+          - name: Build Android Cordova App
+            script: ionic cordova build android --release --no-interactive --prod --device
+          - name: Sign APK
+            script: |
+              echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
+              APK_PATH=$(find platforms/android/app/build/outputs/apk/release -name "*.apk" | head -1)
+              jarsigner \
+                -sigalg SHA1withRSA \
+                -digestalg SHA1 \
+                -keystore $CM_KEYSTORE_PATH \
+                -storepass $CM_KEYSTORE_PASSWORD \
+                -keypass $CM_KEY_ALIAS_PASSWORD \
+                $APK_PATH $CM_KEY_ALIAS_USERNAME
+      artifacts:
+          - platforms/android/app/build/outputs/**/*.apk
+      publishing:
+          google_play:
+              credentials: Encrypted(...) # <- Put your encrypted JSON key file for Google Play service account
+              track: internal
+          email:
+              recipients:
+                  - user_one@example.com
+                  - user_two@example.com
+              notify:
+                success: true     # To not receive a notification when a build succeeds
+                failure: false     # To not receive a notification when a build fails
+```
+
+## iOS Ionic Capacitor workflow example
+
+The following example shows a workflow that can be used to publish your **Ionic Capacitor** iOS app to App Store Connect.
+
+```
+workflows:
+    ionic-capacitor-ios-workflow:
+        name: Ionic Capacitor iOS Workflow
+        max_build_duration: 120
+        instance_type: mac_mini
+        environment:
+            vars:
+                # Ionic Capacitor Xcode worskspace and scheme
+                XCODE_WORKSPACE: "ios/App/App.xcworkspace"
+                XCODE_SCHEME: "App"
+                # Manual Code Signing
+                # CM_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
+                # CM_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
+                # CM_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
+                #
+                # Automatic Code Signing 
+                # https://docs.codemagic.io/yaml/distribution/
+                # https://appstoreconnect.apple.com/access/api
+                APP_STORE_CONNECT_ISSUER_ID: 5a451239-51eb-10b6-bfcc-60e61ddab13c # <-- Put your App Store Connect Issuer Id here
+                APP_STORE_CONNECT_KEY_IDENTIFIER: LY55E1G322 # <-- Put your App Store Connect Key Identifier here
+                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
+                CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
+            node: latest
+            xcode: latest
+            cocoapods: default
+        triggering:
+            events:
+                - push
+            branch_patterns:
+                - pattern: develop
+                  include: true
+                  source: true
+        scripts:
+            - name: Install npm dependencies for Ionic project
+              script: |
+                npm install
+            - name: Cocoapods installation
+              script: |
+                cd ios/App && pod install
+            - name: Update dependencies and copy web assets to native project
+              script: |
+                # npx cap copy # <- use this is you don't need to update native dependencies
+                npx cap sync # <- update native dependencies and copy web assets to native project
+            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+              script: |
+                keychain initialize
+            # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
+            #   script: |
+            #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+            #     mkdir -p "$PROFILES_HOME"
+            #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+            #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+            #     echo "Saved provisioning profile $PROFILE_PATH"
+            - name: Fetch signing files
+              script: |
+                # app-store-connect fetch-signing-files "com.nevercode.ncionicapp" --type IOS_APP_STORE --create
+                app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
+            - name: Add certificates to keychain
+              script: |
+                keychain add-certificates
+            - name: Increment build number
+              script: |
+                #!/bin/sh
+                set -e
+                set -x
+                cd $FCI_BUILD_DIR/ios/App
+                agvtool new-version -all $(($BUILD_NUMBER +1))
+            - name: Set up code signing settings on Xcode project
+              script: |
+                xcode-project use-profiles
+            - name: Build ipa for distribution
+              script: |
+                xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
+        artifacts:
+            - build/ios/ipa/*.ipa
+            - /tmp/xcodebuild_logs/*.log
+            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
+            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+        publishing:
+          app_store_connect:
+            apple_id: yourAppleId@example.com # <- put your Apple Id here
+            password: Encrypted(...) # <-- Put your App Specific Password. For more information visit: https://support.apple.com/en-us/HT204397
+          email:
+            recipients:
+                - user_one@example.com
+                - user_two@example.com
+            notify:
+                success: false     # To not receive a notification when a build succeeds
+                failure: false     # To not receive a notification when a build fails
+```
+
+{{<notebox>}}
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) CLI command to prepare iOS application code signing properties for build.
+{{</notebox>}}
+
+## iOS Ionic Cordova workflow example
+
+The following example shows a workflow that can be used to publish your **Ionic Cordova** iOS app to App Store Connect.
+
+```
+workflows:
+    ionic-cordova-ios-workflow:
+        name: Ionic Cordova iOS Workflow
+        max_build_duration: 120
+        instance_type: mac_mini
+        environment:
+            vars:
+                # Ionic Xcode worskspace and scheme
+                XCODE_WORKSPACE: "platforms/ios/YOUR_APP.xcworkspace" # <- Update with your workspace name
+                XCODE_SCHEME: "YOUR_SCHEME" # <- Update with your workspace scheme
+                # Manual Code Signing
+                # CM_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
+                # CM_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
+                # CM_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
+                #
+                # Automatic Code Signing 
+                # https://docs.codemagic.io/yaml/distribution/
+                # https://appstoreconnect.apple.com/access/api
+                APP_STORE_CONNECT_ISSUER_ID: 5a451239-51eb-10b6-bfcc-60e61ddab13c # <-- Put your App Store Connect Issuer Id here
+                APP_STORE_CONNECT_KEY_IDENTIFIER: LY55E1G322 # <-- Put your App Store Connect Key Identifier here
+                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
+                CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
+            node: latest
+            xcode: latest
+            cocoapods: default
+        triggering:
+            events:
+                - push
+            branch_patterns:
+                - pattern: develop
+                  include: true
+                  source: true
+        scripts:
+            - name: Install npm dependencies for Ionic Cordova project and update to Cordova version 9
+              script: |
+                npm ci # equivalent of npm install for CI systems. Requires package-lock.json or npm-shrinkwrap.json to be present
+                cvm install 9.0.0
+                cvm use 9.0.0
+            - name: Setup Cordova iOS platform 
+               script: |
+                 ionic cordova platform remove ios --nosave
+                 ionic cordova platform add ios --confirm --no-interactive --noresources 
+            - name: Cocoapods installation
+              script: |
+                cd platforms/ios && pod install
+            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+              script: |
+                keychain initialize
+            # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
+            #   script: |
+            #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+            #     mkdir -p "$PROFILES_HOME"
+            #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+            #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+            #     echo "Saved provisioning profile $PROFILE_PATH"
+            - name: Fetch signing files
+              script: |
+                # app-store-connect fetch-signing-files "com.nevercode.ncionicapp" --type IOS_APP_STORE --create
+                app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
+            - name: Add certificates to keychain
+              script: |
+                keychain add-certificates
+            - name: Increment build number
+              script: |
+                #!/bin/sh
+                set -e
+                set -x
+                cd $FCI_BUILD_DIR/platforms/ios
+                agvtool new-version -all $(($BUILD_NUMBER +1))
+            - name: Set up code signing settings on Xcode project
+              script: |
+                xcode-project use-profiles
+            - name: Build ipa for distribution
+              script: |
+                xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
+        artifacts:
+            - build/ios/ipa/*.ipa
+            - /tmp/xcodebuild_logs/*.log
+            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
+            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+        publishing:
+          app_store_connect:
+            apple_id: yourAppleId@example.com # <- put your Apple Id here
+            password: Encrypted(...) # <-- Put your App Specific Password. For more information visit: https://support.apple.com/en-us/HT204397
+          email:
+            recipients:
+                - user_one@example.com
+                - user_two@example.com
+            notify:
+                success: false     # To not receive a notification when a build succeeds
+                failure: false     # To not receive a notification when a build fails
+```
\ No newline at end of file
diff --git a/content/getting-started/building_a_native_app_with_flutter_module.md b/content/getting-started/building_a_native_app_with_flutter_module.md
index 966bde1..3c695ab 100644
--- a/content/getting-started/building_a_native_app_with_flutter_module.md
+++ b/content/getting-started/building_a_native_app_with_flutter_module.md
@@ -1,7 +1,7 @@
 ---
 title: Building a native app with a Flutter module
 description: Building a native iOS or Android app with a Flutter module
-weight: 8
+weight: 9
 aliases:
   - '../yaml/building_a_native_app_with_flutter_module'
 ---

commit fe56135c24030f39e180b4d22a13f5f268acff08
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Oct 6 09:56:33 2020 +0300

    add integrations page link to header menu (#191)
    
    * add integrations page link to header menu
    
    * open link in a new tab

diff --git a/layouts/partials/header.html b/layouts/partials/header.html
index 3d499b2..8b1b0d0 100644
--- a/layouts/partials/header.html
+++ b/layouts/partials/header.html
@@ -13,6 +13,7 @@
                 <a class="menu-link" href='{{ site.Param "landingURL" }}/business' onclick="sendGtag('Business_clicked', 'CodemagicMenu')" target="_blank">Business</a>
                 <a class="menu-link" href='/' onclick="sendGtag('Documentation_clicked', 'CodemagicMenu')">Documentation</a>
                 <a class="menu-link" href='{{ site.Param "blogURL" }}' onclick="sendGtag('Blog_clicked', 'CodemagicMenu')" target="_blank">Blog</a>
+                <a class="menu-link" href='{{ site.Param "landingURL" }}/integrations' onclick="sendGtag('Integrations_clicked', 'CodemagicMenu')" target="_blank">Integrations</a>
             </nav>
             <aside id="header-authentication" data-js-header-authentication>
                 <div id="header-auth-visitor" data-js-header-auth-visitor>

commit 17b54ccffa95d1080705e8ff857a89d4078f08bc
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon Oct 5 12:10:40 2020 +0300

    base image update (#190)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 42c7250..1e66ab9 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -18,17 +18,20 @@ weight: 3
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
+- aws `1.18.105`
 - cocoapods `1.9.3`
+- cordova `8.1.2`
 - curl
 - dart `2.9.2`
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `1.20.4 ($HOME/programs/flutter)`
+- flutter `1.22.0 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
 - homebrew `2.4.16`
+- ionic `4.11.0`
 - jq
 - node `12.14.0`
 - npm `6.14.7`
diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
index 93af427..9d7d1e2 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/releases-and-versions/versions2.md
@@ -13,22 +13,25 @@ weight: 2
 
 - System version `macOS 10.15.5 (19F101)`
 - Kernel version `Darwin 19.5.0`
-- Disk `322GB (Free Space: 97GB)`
+- Disk `322GB (Free Space: 96GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
+- aws `2.0.50`
 - cocoapods `1.9.3`
+- cordova `10.0.0`
 - curl
 - dart `2.9.3`
 - docker `19.03.12`
 - fastlane `2.160.0`
 - firebase `8.10.0`
-- flutter `1.20.4 ($HOME/programs/flutter)`
+- flutter `1.22.0 ($HOME/programs/flutter)`
 - gem `3.1.2`
 - git `2.28.0`
 - gradle `6.1.1`
 - homebrew `2.5.2`
+- ionic `5.4.16`
 - jq
 - node `12.18.4`
 - npm `6.14.8`
@@ -93,7 +96,7 @@ With Xcode `12.0.1` build version `12A7300` the following runtimes and devices a
 - iPhone X
 - iPhone Xs
 - iPhone Xs Max
-- iPhone XÊ€
+- iPhone Xʀ
 - iPhone 11
 - iPhone 11 Pro
 - iPhone 11 Pro Max
@@ -142,3 +145,4 @@ With Xcode `12.0.1` build version `12A7300` the following runtimes and devices a
 ## Other Xcode versions
 
 - 12.2 (12B5018i) `/Applications/Xcode-12.2.app`
+

commit a661a10dcb731a4de21832487d579b779366d859
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Oct 2 14:26:46 2020 +0300

    Reflect UI changes for adding apps

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index bbd7c15..091e943 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -12,10 +12,7 @@ When you sign up via OAuth, Codemagic already has access to the repositories you
 
 ## Connecting repository via HTTP/HTTPS
 
-1. Click **Add app from custom source** on the Applications page.
-
-    {{< figure size="medium" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
-
+1. Click **Add repository** on the Applications page.
 2. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
 3. If it's a private repository that requires username and password for authentication, check **Private repository** and enter the **Username** and **Password**. Leave this option unchecked for public repositories.
 4. Click **Add application**.

commit 83d976b1c8a0e55cae590fb9b3bd88163ce32941
Author: VeArnold <arnold.veltmann@ut.ee>
Date:   Wed Sep 30 15:28:36 2020 +0300

    Revert "add information about firebase hosting to publishing"
    
    This reverts commit 3c9a36640481e50d0d0a8fe587c8a23b0c27cef4.

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 8005693..465661c 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -128,7 +128,7 @@ Android
     - name: Publish the app to Firebase App Distribution
       script: |
         apkPath=$(find build -name "*.apk" | head -1)
-    
+
         if [[ -z ${apkPath} ]]
         then
           echo "No apks were found, skip publishing to Firebase App Distribution"
@@ -142,7 +142,7 @@ iOS
     - name: Publish the app to Firebase App Distribution
       script: |
         ipaPath=$(find build -name "*.ipa" | head -1)
-    
+
         if [[ -z ${ipaPath} ]]
         then
           echo "No ipas were found, skip publishing to Firebase App Distribution"
@@ -227,18 +227,3 @@ And then export the filepath on the gradlew task
         cd android && ./gradlew appDistributionUploadRelease
 
 {{</notebox>}}
-
-### Publishing web applications to Firebase Hosting
-
-With Codemagic publishing to Firebase Hosting is a straight-forward process as the Firebase CLI is already pre-installed on our virtual machines. To get started, you will need to obtain your Firebase token. In order to do that, run `firebase login:ci` in your local terminal. 
-
-After running the command, your default browser should prompt for authorization to your Firebase project - when access is granted, the necessary token will appear in your terminal.
-
-The next step is to add your token to Codemagic. To properly set everything up, please [encrypt](../building/encrypting) the token using Codemagic UI and set it under your environment variables with the name `FIREBASE_TOKEN`. Now all that is needed to publish to Firebase Hosting is to add the publishing step to your .yaml file
-
-    - name: Publish to Firebase Hosting
-      script: |
-        firebase deploy --token "$FIREBASE_TOKEN"
-
-Make sure to add the publishing step after the build step. After the build is finished, you can now find your application published to Firebase Hosting, it is also possible to retrieve the direct URL from the log output. Please note that before trying to publish to Firebase Hosting, you will have to set it up for your project locally. You can find more information in their [documentation](https://firebase.google.com/docs/hosting/quickstart).
-

commit 3c9a36640481e50d0d0a8fe587c8a23b0c27cef4
Author: VeArnold <arnold.veltmann@ut.ee>
Date:   Wed Sep 30 15:25:57 2020 +0300

    add information about firebase hosting to publishing

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 465661c..8005693 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -128,7 +128,7 @@ Android
     - name: Publish the app to Firebase App Distribution
       script: |
         apkPath=$(find build -name "*.apk" | head -1)
-
+    
         if [[ -z ${apkPath} ]]
         then
           echo "No apks were found, skip publishing to Firebase App Distribution"
@@ -142,7 +142,7 @@ iOS
     - name: Publish the app to Firebase App Distribution
       script: |
         ipaPath=$(find build -name "*.ipa" | head -1)
-
+    
         if [[ -z ${ipaPath} ]]
         then
           echo "No ipas were found, skip publishing to Firebase App Distribution"
@@ -227,3 +227,18 @@ And then export the filepath on the gradlew task
         cd android && ./gradlew appDistributionUploadRelease
 
 {{</notebox>}}
+
+### Publishing web applications to Firebase Hosting
+
+With Codemagic publishing to Firebase Hosting is a straight-forward process as the Firebase CLI is already pre-installed on our virtual machines. To get started, you will need to obtain your Firebase token. In order to do that, run `firebase login:ci` in your local terminal. 
+
+After running the command, your default browser should prompt for authorization to your Firebase project - when access is granted, the necessary token will appear in your terminal.
+
+The next step is to add your token to Codemagic. To properly set everything up, please [encrypt](../building/encrypting) the token using Codemagic UI and set it under your environment variables with the name `FIREBASE_TOKEN`. Now all that is needed to publish to Firebase Hosting is to add the publishing step to your .yaml file
+
+    - name: Publish to Firebase Hosting
+      script: |
+        firebase deploy --token "$FIREBASE_TOKEN"
+
+Make sure to add the publishing step after the build step. After the build is finished, you can now find your application published to Firebase Hosting, it is also possible to retrieve the direct URL from the log output. Please note that before trying to publish to Firebase Hosting, you will have to set it up for your project locally. You can find more information in their [documentation](https://firebase.google.com/docs/hosting/quickstart).
+

commit 91518b5c99b0a8c95a6cbbb5b5cc5c77d1574f44
Author: Helina Ariva <helina@nevercode.io>
Date:   Tue Sep 29 17:16:29 2020 +0300

    Edit titles and weights

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index f3608e2..42c7250 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -1,7 +1,7 @@
 ---
 description: A list of tools available out-of-the-box on Codemagic build machines.
-title: macOS build machine specification (Xcode 11)
-weight: 2
+title: macOS build machine specification (Xcode 11.x)
+weight: 3
 ---
 
 ## Hardware
diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
index 2fbf429..93af427 100644
--- a/content/releases-and-versions/versions2.md
+++ b/content/releases-and-versions/versions2.md
@@ -1,7 +1,7 @@
 ---
 description: A list of tools available out-of-the-box on Codemagic build machines.
-title: macOS build machine specification (Xcode 12)
-weight: 3
+title: macOS build machine specification (Xcode 12+)
+weight: 2
 ---
 
 ## Hardware

commit 7001af753c2a516d2ba918132727cf130890e52d
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Sep 29 16:34:43 2020 +0300

    Add base image details for Xcode 12 (#186)
    
    * Add base image details for Xcode 12
    
    * fix weight
    
    Co-authored-by: Helina Ariva <helina@nevercode.io>

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 9dae604..f3608e2 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -1,13 +1,13 @@
 ---
 description: A list of tools available out-of-the-box on Codemagic build machines.
-title: macOS build machine specification
+title: macOS build machine specification (Xcode 11)
 weight: 2
 ---
 
 ## Hardware
 
-- Mac mini `2.3GHz Quad Core / 8GB`
-- Mac Pro `3.7GHz Quad Core / 32GB`
+- Standard VM on Mac mini `2.3GHz Quad Core / 8GB`
+- Premium VM on Mac Pro `3.7GHz Quad Core / 32GB`
 
 ## System
 
diff --git a/content/releases-and-versions/versions2.md b/content/releases-and-versions/versions2.md
new file mode 100644
index 0000000..2fbf429
--- /dev/null
+++ b/content/releases-and-versions/versions2.md
@@ -0,0 +1,144 @@
+---
+description: A list of tools available out-of-the-box on Codemagic build machines.
+title: macOS build machine specification (Xcode 12)
+weight: 3
+---
+
+## Hardware
+
+- Standard VM on Mac mini `2.3GHz Quad Core / 8GB`
+- Premium VM on Mac Pro `3.7GHz Quad Core / 32GB`
+
+## System
+
+- System version `macOS 10.15.5 (19F101)`
+- Kernel version `Darwin 19.5.0`
+- Disk `322GB (Free Space: 97GB)`
+
+## Pre-installed tools
+
+- Android tools `$HOME/programs/android-sdk-macosx`
+- cocoapods `1.9.3`
+- curl
+- dart `2.9.3`
+- docker `19.03.12`
+- fastlane `2.160.0`
+- firebase `8.10.0`
+- flutter `1.20.4 ($HOME/programs/flutter)`
+- gem `3.1.2`
+- git `2.28.0`
+- gradle `6.1.1`
+- homebrew `2.5.2`
+- jq
+- node `12.18.4`
+- npm `6.14.8`
+- python `2.7.16`
+- python3 `3.8.5`
+- ruby `2.7.1p83`
+- ssh
+- sudo
+- tar
+- unzip
+- wget
+- yarn `1.22.5`
+- yq
+- zip
+
+## Xcode 12.0.1 (12A7300)
+
+This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
+
+Xcode path: `/Applications/Xcode-12.app`
+
+With Xcode `12.0.1` build version `12A7300` the following runtimes and devices are installed:
+
+### Runtimes
+
+- iOS 11.4
+- iOS 12.4
+- iOS 13.0
+- iOS 13.1
+- iOS 13.2
+- iOS 13.3
+- iOS 13.4
+- iOS 13.5
+- iOS 13.6
+- iOS 13.7
+- iOS 14.0
+- tvOS 11.3
+- tvOS 11.4
+- tvOS 12.0
+- tvOS 13.0
+- tvOS 13.2
+- tvOS 13.3
+- tvOS 13.4
+- tvOS 14.0
+- watchOS 6.2
+- watchOS 7.0
+
+### Devices
+
+- iPhone 4s
+- iPhone 5
+- iPhone 5s
+- iPhone 6 Plus
+- iPhone 6
+- iPhone 6s
+- iPhone 6s Plus
+- iPhone SE (1st generation)
+- iPhone 7
+- iPhone 7 Plus
+- iPhone 8
+- iPhone 8 Plus
+- iPhone X
+- iPhone Xs
+- iPhone Xs Max
+- iPhone XÊ€
+- iPhone 11
+- iPhone 11 Pro
+- iPhone 11 Pro Max
+- iPhone SE (2nd generation)
+- iPod touch (7th generation)
+- iPad 2
+- iPad Retina
+- iPad Air
+- iPad mini 2
+- iPad mini 3
+- iPad mini 4
+- iPad Air 2
+- iPad Pro (9.7-inch)
+- iPad Pro (12.9-inch) (1st generation)
+- iPad (5th generation)
+- iPad Pro (12.9-inch) (2nd generation)
+- iPad Pro (10.5-inch)
+- iPad (6th generation)
+- iPad (7th generation)
+- iPad Pro (11-inch) (1st generation)
+- iPad Pro (12.9-inch) (3rd generation)
+- iPad Pro (11-inch) (2nd generation)
+- iPad Pro (12.9-inch) (4th generation)
+- iPad mini (5th generation)
+- iPad Air (3rd generation)
+- iPad (8th generation)
+- iPad Air (4th generation)
+- Apple TV
+- Apple TV 4K
+- Apple TV 4K (at 1080p)
+- Apple Watch - 38mm
+- Apple Watch - 42mm
+- Apple Watch Series 2 - 38mm
+- Apple Watch Series 2 - 42mm
+- Apple Watch Series 3 - 38mm
+- Apple Watch Series 3 - 42mm
+- Apple Watch Series 4 - 40mm
+- Apple Watch Series 4 - 44mm
+- Apple Watch Series 5 - 40mm
+- Apple Watch Series 5 - 44mm
+- Apple Watch SE - 40mm
+- Apple Watch SE - 44mm
+- Apple Watch Series 6 - 40mm
+- Apple Watch Series 6 - 44mm
+
+## Other Xcode versions
+
+- 12.2 (12B5018i) `/Applications/Xcode-12.2.app`

commit 9bcf51968d9884ed1461096e8ef3965391dacbee
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Tue Sep 29 12:02:01 2020 +0300

    email slack success failure flag (#185)
    
    * email slack success failure flag
    
    * fix

diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
index 547247f..465661c 100644
--- a/content/publishing-yaml/distribution.md
+++ b/content/publishing-yaml/distribution.md
@@ -2,7 +2,7 @@
 title: Publishing
 description: How to set up publishing and build status notifications
 weight: 3
-aliases: 
+aliases:
     - '../yaml/distribution'
 ---
 
@@ -12,14 +12,20 @@ All generated artifacts can be published to external services. The available int
 
 Codemagic has out-of-the-box support for publishing to the services listed below. Read more about each individual integration and see the configuration examples below.
 
-### Email 
+### Email
 
 If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the provided email address(es). If the build fails, an email with a link to build logs will be sent.
 
+If you don't want to receive an email notification on build success or failure, you can set `success` to `false` or `failure` to `false` accordingly.
+
     publishing:
       email:
         recipients:
           - name@example.com
+        notify:
+          success: false     # To not receive a notification when a build succeeds
+          failure: false     # To not receive a notification when a build fails
+
 
 ### Slack
 
@@ -27,10 +33,15 @@ In oder to set up publishing to Slack, you first need to connect the Slack works
 
 You can then define the channel where build notifications and artifacts will be sent to. If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the specified channel. If the build fails, a link to the build logs is published. When you set `notify_on_build_start` to `true`, the channel will be notified when a build starts.
 
+If you don't want to receive a slack notification on build success or failure, you can set `success` to `false` or `failure` to `false` accordingly.
+
     publishing:
       slack:
         channel: '#channel-name'
-        notify_on_build_start: true       # To receive a notification when a build starts
+        notify_on_build_start: true    # To receive a notification when a build starts
+        notify:
+          success: false               # To not receive a notification when a build succeeds
+          failure: false               # To not receive a notification when a build fails
 
 ### Google Play
 
@@ -67,7 +78,7 @@ The proper way to add your keys in `codemagic.yaml` is to copy the contents of t
 
 ### App Store Connect
 
-Codemagic enables you to automatically publish your iOS app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store. 
+Codemagic enables you to automatically publish your iOS app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store.
 
     publishing:
       app_store_connect:                  # For iOS app

commit 4a68d1260b78c3d589343c53e846532023a61b5d
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Wed Sep 23 15:33:09 2020 +0300

    build start api note (#184)
    
    * build start api note
    
    * comment
    
    * comment

diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index b9a640f..88e671d 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -9,6 +9,10 @@ APIs for managing builds are currently available for developers to preview. Duri
 
 `POST /builds`
 
+{{<notebox>}}
+Note that when starting builds from an API request, the workflow and branch information is passed with the curl request and any configuration related to triggers or branches in UI settings or in codemagic.yaml is ignored.
+{{</notebox>}}
+
 ### Parameters
 
 | **Name**      | **Type** | **Description** |
@@ -46,7 +50,7 @@ curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --data '
 
 ### Response
 
-The request is asynchronous. To find the started build you can find the most recent build fetching the next [endpoint](#get-build-statuses).
+The request is asynchronous. The started build is the most recent item in the list when you fetch the [list of builds](#get-list-of-builds).
 
 ## Get list of builds
 

commit 9a8268fbb041a6325c3eefb08127b68c3d1656fb
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Wed Sep 23 13:28:46 2020 +0300

    previous commit env var

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 33e6829..4c24503 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -29,6 +29,7 @@ Here you'll find some of the read-only environment variables explained.
 | FCI_BRANCH               | The current branch being built, for pull requests it is the source branch                                       |
 | FCI_REPO_SLUG            | The slug of the repository that is currently being built in the form `owner_name/repository_name`. Unset for repositories added from custom source|
 | FCI_COMMIT               | Commit hash that is currently being built by Codemagic, for pull request builds it is the hash of the source commit |
+| FCI_PREVIOUS_COMMIT      | Commit hash of the previous successful build, unset if there is no previous successful build                    |
 | FCI_PULL_REQUEST         | `true`, if the current build is building a pull request, `false` otherwise                                      |
 | FCI_PULL_REQUEST_NUMBER  | Set to Integer ID of the pull request for the Git provider (Bitbucket, Github etc) if the current build is building a pull request, unset otherwise|
 | FCI_CLONE_UNSHALLOW      | If set to `true` performs a full clone of the repository instead of top 50 commits                             |

commit f0eb697a1c3590c9ac29067f7092620784754af9
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Wed Sep 23 11:09:31 2020 +0300

    avoid hiding title by header with anchor links (#183)
    
    * avoid hiding title by header
    
    * refactor

diff --git a/assets/js/main.js b/assets/js/main.js
index 54d5634..d172b35 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -41,13 +41,22 @@ function createTableOfContents() {
   })
   hashScroll()
 }
+
+function scrollToAnchor(target) {
+  const headerHeight = $('[data-js-header]').innerHeight()
+  const targetMarginTop = 40
+  let offset = headerHeight + targetMarginTop
+  if (window.innerWidth < desktopScreenWidth) {
+    offset += $('[data-js-sidebar]').innerHeight()
+  }
+  $('html, body').animate({ scrollTop: target.offset().top - offset }, 300)
+}
+
 // Scroll to heading from url
 function hashScroll() {
-  var target = window.location.hash
-  var hashElement = $('' + target + '')
-  if (hashElement.offset()) {
-    var scrollTarget = hashElement.offset().top - 40
-    $('html, body').animate({ scrollTop: scrollTarget }, 300)
+  if (window.location.hash) {
+    const target = $(window.location.hash)
+    scrollToAnchor(target)
     history.pushState(
       '',
       document.title,
@@ -58,8 +67,8 @@ function hashScroll() {
 // Scroll to selected heading on click
 $(document).on('click', 'a[href^="#"]', function(event) {
   event.preventDefault()
-  var scrollTarget = $($.attr(this, 'href')).offset().top - 40
-  $('html, body').animate({ scrollTop: scrollTarget }, 300)
+  const target = $($.attr(this, 'href'))
+  scrollToAnchor(target)
 })
 
 // Copy section link to clipboard

commit 8f80558c07932f81c6a3c28221026fafbc01db4e
Merge: 3ca5394 26ace36
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Sep 23 09:56:06 2020 +0300

    Merge branch 'master' of github.com:codemagic-ci-cd/codemagic-docs

commit 3ca539462235f231e8a4e2c8c98b0ec73822fefb
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Sep 23 09:55:54 2020 +0300

    Remove Save buttons from sections + formatting

diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index e544fdf..517f142 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -90,5 +90,3 @@ You are required to upload your keystore file and provide details about your key
 3. Upload your release keystore file.
 4. Enter the **keystore password**, **key alias** and **key password**.
 5. Select **Enable Android code signing** at the top of the section to enable code signing.
-6. Click **Save** to finish the setup.
-
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 0c3522f..e4b5fa2 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -86,8 +86,6 @@ Once the Apple Developer Portal has been enabled for the account or team the app
 
     >Note that if your app contains app extensions, an additional provisioning profile is required for each extension. Codemagic will use the bundle identifier to find the relevant provisioning profiles. If your bundle identifier is `com.example.app`, the matching profiles are the ones with `com.example.app` and `com.example.app.*` as bundle identifier.
 
-8. Finally, click **Save** to finish the setup.
-
 As the next step, you can [configure publishing to App Store Connect](../publishing/publishing-to-app-store) to distribute the app via TestFlight or submit it to the App Store.
 
 ## Manual code signing
@@ -103,7 +101,6 @@ This is required when distributing your app via Apple Developer Enterprise Progr
 2. Select **Manual** as the code signing method.
 3. Upload your signing certificate (in `.p12` format). If your certificate is password-protected, enter the **Certificate password**. 
 4. Upload your provisioning profile (`.mobileprovision`). Note that if your app contains app extensions, you are required to upload an additional provisioning profile for each extension.
-5. Click **Save** to finish the setup.
 
 {{< figure size="medium" src="../uploads/manual_code_signing.png" caption="Manual code signing setup" >}}
 
diff --git a/content/flutter/automatic-build-triggering.md b/content/flutter/automatic-build-triggering.md
index 11a0e3a..d6a978c 100644
--- a/content/flutter/automatic-build-triggering.md
+++ b/content/flutter/automatic-build-triggering.md
@@ -20,12 +20,11 @@ The first (i.e. topmost) pattern in the list is applied first. Each following pa
 
 To add a new branch pattern:
 
-1. Navigate to **App settings >** **Build triggers**.
+1. Navigate to **App settings > Build triggers**.
 2. Enter a pattern matching the name of one or more branches in the project.
 3. Select **Include** or **Exclude** from the dropdown to limit the set of targeted branches by either including or excluding the matching branches.
 4. For **pull request builds**, select whether the tracked branch is the **Source** or the **Target** branch of the pull request. This setting has no effect on other types of builds.
 5. Click **Add pattern** to save it. You can always edit or delete added patterns.
-6. Click **Save** at the end of the section for the changes to take effect.
 
 ## Build triggers
 
@@ -43,6 +42,6 @@ Under **Automatic build triggering**, you can select when to trigger builds.
 
 **Cancel outdated webhook builds**. When checked, Codemagic will automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch. We recommend enabling this feature when you're making several commits, each of which triggers a build.
 
-If you don't enable any automatic build triggers, you can only start builds manually for this workflow.
+If you don't enable any automatic build triggers, you can start builds only manually for this workflow.
 
-Codemagic automatically adds webhooks to GitHub, GitLab, and Bitbucket after you have enabled any of the triggers in **App settings > Build triggers >Automatic build triggering**. In the case Codemagic is unable to create a webhook, you would have to [set up webhooks manually](../building/webhooks).
+Codemagic automatically adds webhooks to GitHub, GitLab, and Bitbucket after you have enabled any of the triggers in **App settings > Build triggers > Automatic build triggering**. In the case Codemagic is unable to create a webhook, you would have to [set up webhooks manually](../building/webhooks).
diff --git a/content/flutter/dependency-caching.md b/content/flutter/dependency-caching.md
index d54e0ab..4e44be7 100644
--- a/content/flutter/dependency-caching.md
+++ b/content/flutter/dependency-caching.md
@@ -1,5 +1,5 @@
 ---
-description: Store your dependencies on Codemagic for a faster build time.
+description: Speed up your builds by storing dependencies on Codemagic.
 title: Dependency caching
 weight: 6
 aliases: 
@@ -30,7 +30,6 @@ Caching `$HOME/Library/Developer/Xcode/DerivedData` won't help to speed up iOS b
 1. In your app settings, open the **Dependency caching** section.
 2. Check the **Enable dependency caching** option. By default, caching is disabled.
 3. Enter the path(s) to the dependencies to be cached and click **Add**. Note that you can delete added paths anytime.
-4. Click **Save** to save the settings.
 
 ## Removing cached dependencies
 
diff --git a/content/flutter/env-variables.md b/content/flutter/env-variables.md
index bbc4840..42adb6f 100644
--- a/content/flutter/env-variables.md
+++ b/content/flutter/env-variables.md
@@ -13,4 +13,3 @@ You can add environment variables to your Flutter projects in **App settings > E
 1. Enter the name and the value of the variable.
 2. Check **Secure** if you wish to hide the value both in the UI and in build logs and disable editing of the variable. Such variables can be accessed only by the build machines during the build. Note that when storing sensitive information in environment variables, it is recommended to [encrypt](../building/encrypting) the values of the variables.
 3. Click **Add**.
-4. Click **Save** to save the settings.
diff --git a/content/flutter/flutter-projects.md b/content/flutter/flutter-projects.md
index e3181b7..6ebfab5 100644
--- a/content/flutter/flutter-projects.md
+++ b/content/flutter/flutter-projects.md
@@ -76,7 +76,7 @@ If tests fail, the status of the build will be “failed” and you'll receive a
 
 Builds can be started manually from Codemagic or automatically in response to events in the repository, see more about [automatic build triggering](./automatic-build-triggering) here. 
 
-You can start builds manually by clicking **Start new build** in app settings or build overview. On clicking the button, the **Specify build configuration** popup is displated where you can select the branch and the [workflow](./creating-workflows) to build. If you also have the `codemagic.yaml` file available in the repository, you can click **Select workflow from codemagic.yaml** in the popup to select a YAML workflow to build.
+You can start builds manually by clicking **Start new build** in app settings or build overview. On clicking the button, the **Specify build configuration** popup is displayed where you can select the branch and the [workflow](./creating-workflows) to build. If you also have the `codemagic.yaml` file available in the repository, you can click **Select workflow from codemagic.yaml** in the popup to select a YAML workflow to build.
 
 For information about using API calls to trigger builds, look [here](../rest-api/overview/).
 
diff --git a/content/publishing/github-release.md b/content/publishing/github-release.md
index b77030c..2800540 100644
--- a/content/publishing/github-release.md
+++ b/content/publishing/github-release.md
@@ -11,7 +11,7 @@ Codemagic enables you to automatically create a GitHub release and upload genera
 1. The setting is only available for GitHub repositories. 
 2. You need to enable automatic build triggering on tag creation. This setting can be found in **App settings > Build triggers > Trigger on tag creation**. Don't forget to add a branch pattern and ensure the webhook exists.
 
-## Setting up GitHub release publishing.
+## Setting up GitHub release publishing
 
 The setting can be found in **App settings > Publish > GitHub releases**. To enable it, check the **Create a release and publish artifacts** checkbox. To notify users that the release is not ready for production and may be unstable, mark it as **pre-release** by enabling checkbox **Mark build as pre-release**.
 
@@ -25,11 +25,14 @@ You can control which of the generated artifacts will be uploaded to the created
 
 {{<notebox>}}
 
-Next pattern wildcards are supported:
+The following pattern wildcards are supported:
 
-1. `*`      matches everything
-2. `?`       matches any single character
-3. `[seq]`   matches any character in seq
-3. `[!seq]`  matches any character not in seq
+`*`      matches everything
+
+`?`       matches any single character
+
+`[seq]`   matches any character in seq
+
+`[!seq]`  matches any character not in seq
 
 {{</notebox>}}
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 158b767..1361c73 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -20,9 +20,8 @@ It is also worth pointing out the necessity for each uploaded binary to have a *
 
 1. Navigate to the Publish section in app settings.
 2. Click **App Store Connect**.
-3. Enter your **Apple ID** (the email address used for login) and your **app-specific password**.
+3. Enter your **Apple ID** (the email address used for login) and your [**app-specific password**](https://support.apple.com/en-us/HT204397).
 4. Select **Enable App Store Connect publishing** at the top of the section to enable publishing.
-5. Click **Save** to finish the setup.
 
 Once you have successfully set up publishing to App Store Connect, Codemagic will automatically distribute the app to App Store Connect every time you build the workflow. Note that you must manually submit the app to App Store in App Store Connect.
 
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index ac599ee..7d9a3bb 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -10,6 +10,5 @@ You can publish your web app to a custom subdomain of `codemagic.app` for easy a
 2. Choose a subdomain name and enter it in the **Web page subdomain** field. By default, we suggest your app name as the subdomain name.
 3. Check **Publish artifacts even if tests fail** to publish the build even when one or more tests fail. Leaving this option unchecked will publish only successful builds that pass the tests, if any.
 4. Select **Enable Codemagic Static Pages publishing** at the top of the section to enable publishing.
-5. Click **Save** to finish the setup. On saving, we'll check the availability of the subdomain name and inform you if the name is already taken.
 
 Now each time you run a build of your web app on Codemagic, you'll see the web app artifact being published to the web page in Codemagic logs and can immediately access the app at the specified URL.
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index e78bfbd..5b15d9a 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -32,4 +32,3 @@ The very first version of the app must be added to Google Play manually. You can
    - Production --- release the app to production
 5. If you want to publish the .apk even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
 6. Select **Enable Google Play publishing** at the top of the section to enable publishing.
-7. Click **Save** to finish the setup.
diff --git a/content/testing/aws.md b/content/testing/aws.md
index ff7a1a1..ba8ee20 100644
--- a/content/testing/aws.md
+++ b/content/testing/aws.md
@@ -26,9 +26,8 @@ We strongly advise you to set up an IAM user with a policy to access Device Farm
 2. At the top of the section, select **Enable Flutter Driver tests** to enable running integration tests for this workflow.
 3. Select to run Flutter Driver tests on **AWS Device Farm**. 
 4. Enter your **AWS access key ID** and **AWS secret access Key** to the respective fields.
-5. Click **Save** to finish the setup.
 
-For testing on **iOS devices**, additional configuration is needed. Follow the instructions in the [iOS builds](https://github.com/mmcc007/sylph#ios-builds) section in Sylph readme and add the required environment variables to Codemagic in **App settings** > **Environment variables**.
+For testing on **iOS devices**, additional configuration is needed. Follow the instructions in the [iOS builds](https://github.com/mmcc007/sylph#ios-builds) section in Sylph readme and add the required environment variables to Codemagic in **App settings > Environment variables**.
 
 During the build, Codemagic searches the repository for a `sylph.yaml` file to configure the AWS Device Farm test run and generates a default configuration file if no existing configuration is found. By default, we run the tests in your `project_root/test_driver` folder on Google Pixel 2 (OS 8.0.0) regardless of the build platforms you have selected. 
 

commit 26ace360c09704a97efed10da72a0da181680229
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Wed Sep 23 08:24:03 2020 +0200

    fix indents, spaces and other formatting issues in JSON examples (#182)
    
    * fix indents, spaces and other formatting issues in JSON examples
    
    * change json styling to yaml

diff --git a/content/rest-api/applications.md b/content/rest-api/applications.md
index 2262515..c3cb8c1 100644
--- a/content/rest-api/applications.md
+++ b/content/rest-api/applications.md
@@ -19,23 +19,23 @@ curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --reques
 
 ### Response
 
-```javascript
+```yaml
 {
-   "application":{
-      "_id":"5d85eaa0e941e00019e81bc2",
-      "appName":"counter_flutter",
-      "branches":[
-         "master"
-      ],
-      "workflowIds":[
-         "5d85f242e941e00019e81bd2"
-      ],
-      "workflows":{
-         "5d85f242e941e00019e81bd2":{
-            "name":"Android Workflow"
-         }
+  "application": {
+    "_id": "5d85eaa0e941e00019e81bc2",
+    "appName": "counter_flutter",
+    "branches": [
+      "master"
+    ],
+    "workflowIds": [
+      "5d85f242e941e00019e81bd2"
+    ],
+    "workflows": {
+      "5d85f242e941e00019e81bd2": {
+        "name": "Android Workflow"
       }
-   }
+    }
+  }
 }
 ```
 
@@ -53,18 +53,18 @@ Adds a Git repository to the applications list.
 
 ### Example
 
-```javascript
+```yaml
 {
-    "repositoryUrl": "git@github.com:my-organization/my-repo.git"
+  "repositoryUrl": "git@github.com:my-organization/my-repo.git"
 }
 ```
 
 ### Response
 
-```javascript
+```yaml
 {
-    "_id": "5c9c064185dd2310123b8e96",
-    "appName": "my-repo"
+  "_id": "5c9c064185dd2310123b8e96",
+  "appName": "my-repo"
 }
 ```
 
@@ -82,11 +82,11 @@ Note that the variables will need to be re-generated when moving the app to a di
 curl 'https://api.codemagic.io/apps/your-app-id/encrypt-environment-variable' \
  -H 'X-Auth-Token: your-token' \
  -H 'Content-Type: application/json;charset=utf-8' \
- --data '{"value":"your value"}'
+ --data '{"value": "your value"}'
 ```
 
 ### Response
 
-```json
-{"encrypted":"Encrypted(Z0FBQUFBQmZMVkhwb3Q3QlJtRlVOeVFJcEJvTTRtWnZablpqMS0xN2V6dllTell1ODZSd2FUcnNqMUlZT09QY1paV0pjbVRfUlVJeDUxRWIzX1paOEZlc1dSdi1XMXlkUFVIdjNIZ2VqcE5Ja0tpMjlPWjhlSTQ9)"}
+```yaml
+{"encrypted": "Encrypted(Z0FBQUFBQmZMVkhwb3Q3QlJtRlVOeVFJcEJvTTRtWnZablpqMS0xN2V6dllTell1ODZSd2FUcnNqMUlZT09QY1paV0pjbVRfUlVJeDUxRWIzX1paOEZlc1dSdi1XMXlkUFVIdjNIZ2VqcE5Ja0tpMjlPWjhlSTQ9)"}
 ```
\ No newline at end of file
diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index b362c62..b9a640f 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -26,21 +26,21 @@ curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --data '
 
 ### Example
 
-```javascript
+```yaml
 {
-    "appId": "5c9c064185dd2310123b8e96",
-    "workflowId": "release",
-    "branch": "master",
-    "environment": {
-        "variables": {
-            "ENVIRONMENT_VARIABLE_1": "...",
-            "ENVIRONMENT_VARIABLE_2": "..."
-        },
-        "softwareVersions": {
-            "xcode": "11.4.1",
-            "flutter": "v1.12.13+hotfix.9"
-        }
+  "appId": "5c9c064185dd2310123b8e96",
+  "workflowId": "release",
+  "branch": "master",
+  "environment": {
+    "variables": {
+      "ENVIRONMENT_VARIABLE_1": "...",
+      "ENVIRONMENT_VARIABLE_2": "..."
+    },
+    "softwareVersions": {
+      "xcode": "11.4.1",
+      "flutter": "v1.12.13+hotfix.9"
     }
+  }
 }
 ```
 
@@ -70,45 +70,46 @@ curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --reques
 
 ### Response
 
-```javascript
+```yaml
 {
-   "applications": [
-        {
-           "_id":"5d85eaa0e941e00019e81bc2",
-           "appName":"counter_flutter",
-           ...
-        },
+  "applications": [
+    {
+    "_id": "5d85eaa0e941e00019e81bc2",
+    "appName": "counter_flutter",
+    ...
+    }
    ],
-   "builds": [
+  "builds": [
+    {
+      "_id": "5ec8eea2261f342603f4d0bc",
+      "appId": "5d85eaa0e941e00019e81bc2",
+      "workflowId": "5d85f242e941e00019e81bd2",
+      "branch": "develop",
+      "status": "finished",
+      "startedAt": "2020-09-08T07:18:02.203+0000",
+      "finishedAt": "2020-09-08T07:20:13.040+0000",
+      "artefacts": [
         {
-            "_id":"5ec8eea2261f342603f4d0bc",
-            "appId":"5d85eaa0e941e00019e81bc2"
-            "workflowId":"5d85f242e941e00019e81bd2",
-            "branch": "develop"
-            "status":"finished",
-            "startedAt": "2020-09-08T07:18:02.203+0000",
-            "finishedAt": "2020-09-08T07:20:13.040+0000"
-            "artefacts": [
-                {
-                  "md5": "81298e2f39a0e2d401b583f4f32d88d1",
-                  "name": "app-debug.apk",
-                  "packageName": "io.codemagic.counter-flutter",
-                  "size": 59325441,
-                  "type": "apk",
-                  "url": "https://static.codemagic.io/files/2667d83f-a05b-44a5-8839-51fd4b05e7ce/d44b59f6-ebe9-4ca5-80ee-86ce372790ee/app-debug.apk",
-                  "versionName": "1.0.2"
-                },
-                {
-                  "md5": "d34bf9732ef125bd761d76b2cf3017bc",
-                  "name": "Runner.app",
-                  "size": 96849493,
-                  "type": "app",
-                  "url": "https://static.codemagic.io/files/5020d900-14c2-4e96-9c95-93869e1e2d2f/0ec3367c-704e-4d36-895b-6b3944e43113/Runner.app"
-                }
-            ],
-            ...
+          "md5": "81298e2f39a0e2d401b583f4f32d88d1",
+          "name": "app-debug.apk",
+          "packageName": "io.codemagic.counter-flutter",
+          "size": 59325441,
+          "type": "apk",
+          "url": "https://static.codemagic.io/files/2667d83f-a05b-44a5-8839-51fd4b05e7ce/d44b59f6-ebe9-4ca5-80ee-86ce372790ee/app-debug.apk",
+          "versionName": "1.0.2"
         },
-   ]
+        {
+          "md5": "d34bf9732ef125bd761d76b2cf3017bc",
+          "name": "Runner.app",
+          "size": 96849493,
+          "type": "app",
+          "url": "https://static.codemagic.io/files/5020d900-14c2-4e96-9c95-93869e1e2d2f/0ec3367c-704e-4d36-895b-6b3944e43113/Runner.app"
+        }
+      ],
+      ...
+    },
+    ...
+  ]
 }
 ```
 
@@ -126,18 +127,18 @@ curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --reques
 
 ### Response
 
-```javascript
+```yaml
 {
-   "application":{
-      "_id":"5d85eaa0e941e00019e81bc2",
-      "appName":"counter_flutter"
-   },
-   "build":{
-      "_id":"5ec8eea2261f342603f4d0bc",
-      "startedAt":"2020-05-23T09:36:39.028+0000",
-      "status":"building",
-      "workflowId":"5d85f242e941e00019e81bd2"
-   }
+  "application": {
+    "_id": "5d85eaa0e941e00019e81bc2",
+    "appName": "counter_flutter"
+  },
+  "build": {
+    "_id": "5ec8eea2261f342603f4d0bc",
+    "startedAt": "2020-05-23T09:36:39.028+0000",
+    "status": "building",
+    "workflowId": "5d85f242e941e00019e81bd2"
+  }
 }
 ```
 

commit 6ef8909f58f9432409d915de28b1bbb4f85835bf
Author: Helina Ariva <helina@nevercode.io>
Date:   Tue Sep 22 21:02:42 2020 +0300

    edit copy on index page

diff --git a/content/_index.md b/content/_index.md
index 9e28a6e..d4085dc 100644
--- a/content/_index.md
+++ b/content/_index.md
@@ -5,11 +5,11 @@ description:
 title: Codemagic Documentation
 ---
 
-Welcome to the Codemagic community documentation!
+Welcome to Codemagic documentation!
 
-Here you'll find some essential information for setting up continuous integration and continuous delivery for your Flutter app with [Codemagic](https://codemagic.io/). 
+Here you'll find some essential information for setting up continuous integration and continuous delivery for your mobile apps with [Codemagic](https://codemagic.io/). 
 
-There are also step-by-step guides on various topics available on our [blog](https://blog.codemagic.io/categories/tutorials/ 'Codemagic blog - Tutorials').
+There are also step-by-step guides on various topics available on our [blog](https://blog.codemagic.io/categories/product/ 'Codemagic blog - Tutorials').
 
 ## Powered by the community
 

commit 51e42f23f7a69d634b41204073ca89c00c16cc25
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Tue Sep 22 16:29:09 2020 +0200

    Update GET /builds API with filters and better response example (#176)
    
    * Update GET /builds API with filters and better response example
    
    * better wording

diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index 089fb0f..b362c62 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -48,16 +48,24 @@ curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --data '
 
 The request is asynchronous. To find the started build you can find the most recent build fetching the next [endpoint](#get-build-statuses).
 
-## Get build statuses
+## Get list of builds
 
 `GET /builds`
 
-Return information of already running builds on Codemagic.
+Returns information about builds from the Codemagic build history. Filters are applicable.
+
+### Parameters
+
+| **Name**      | **Type** | **Description** |
+| ------------- | -------- | --------------- |
+| `appId`       | `string` | **Optional.** The application identifier. |
+| `workflowId`  | `string` | **Optional.** The workflow identifier as specified in YAML file. |
+| `branch`      | `string` | **Optional.** The branch name. |
 
 ### Curl request
 
 ```bash
-curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request GET https://api.codemagic.io/builds
+curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request GET https://api.codemagic.io/builds?appId=<app_id>&workflowId=<workflow_id>&branch=<branch_name>
 ```
 
 ### Response
@@ -67,15 +75,38 @@ curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --reques
    "applications": [
         {
            "_id":"5d85eaa0e941e00019e81bc2",
-           "appName":"counter_flutter"
+           "appName":"counter_flutter",
+           ...
         },
    ],
    "builds": [
         {
             "_id":"5ec8eea2261f342603f4d0bc",
-            "startedAt":"2020-05-23T09:36:39.028+0000",
-            "status":"building",
-            "workflowId":"5d85f242e941e00019e81bd2"
+            "appId":"5d85eaa0e941e00019e81bc2"
+            "workflowId":"5d85f242e941e00019e81bd2",
+            "branch": "develop"
+            "status":"finished",
+            "startedAt": "2020-09-08T07:18:02.203+0000",
+            "finishedAt": "2020-09-08T07:20:13.040+0000"
+            "artefacts": [
+                {
+                  "md5": "81298e2f39a0e2d401b583f4f32d88d1",
+                  "name": "app-debug.apk",
+                  "packageName": "io.codemagic.counter-flutter",
+                  "size": 59325441,
+                  "type": "apk",
+                  "url": "https://static.codemagic.io/files/2667d83f-a05b-44a5-8839-51fd4b05e7ce/d44b59f6-ebe9-4ca5-80ee-86ce372790ee/app-debug.apk",
+                  "versionName": "1.0.2"
+                },
+                {
+                  "md5": "d34bf9732ef125bd761d76b2cf3017bc",
+                  "name": "Runner.app",
+                  "size": 96849493,
+                  "type": "app",
+                  "url": "https://static.codemagic.io/files/5020d900-14c2-4e96-9c95-93869e1e2d2f/0ec3367c-704e-4d36-895b-6b3944e43113/Runner.app"
+                }
+            ],
+            ...
         },
    ]
 }

commit 206787037530f720ba8597331cfcded0d231a1c6
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Sep 22 17:04:16 2020 +0300

    Docs restructure (#181)
    
    * restructuring
    
    * move common issues
    
    * yaml improvements
    
    * hierarchy menu
    
    * improve content-menu
    
    * using nested folders
    
    * new folders
    
    * Fix webhooks link
    
    * Wrap path in bold
    
    * Wrap text in bold
    
    * refactor content-list styles
    
    * fix links + editing
    
    * change category name
    
    * add aliases for previous links
    
    * fix link
    
    * yaml fixes
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan.lab.mobi>
    Co-authored-by: Vladyslav Bondarenko <vladyslav@nevercode.io>
    Co-authored-by: Mart Laub <martlaub@yahoo.com>
    Co-authored-by: Helina Ariva <helina@nevercode.io>
    Co-authored-by: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>

diff --git a/assets/js/main.js b/assets/js/main.js
index 1e81239..54d5634 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -1,16 +1,24 @@
 const desktopScreenWidth = 1001;
 
-// Category toggle open
-var navCategory = $('[data-js-docs-menu-item]')
-navCategory.each(function() {
-  $('[data-js-category-name]', this).on('click', function() {
-    var $parent = $(this).parent()
+$('[data-js-docs-menu-item].open').parents('[data-js-docs-menu-item]').addClass('open')
 
-    $parent.find('[data-js-category-posts]').slideToggle(150, function complete() {
-      $parent.toggleClass('open')
+// Open - open only current category
+// Close - close current and all descendant categories
+$('[data-js-category-name]').on('click', function() {
+  const parent = $(this).parent()
+  if (parent.hasClass('open')) {
+    parent.find('[data-js-category-posts]').each(function(_,item) {
+      $(item).slideUp(150, function complete() {
+        $(item).parent().removeClass('open')
+      })
     })
-  })
+  } else {
+    $(this).siblings('[data-js-category-posts]').slideDown(150, function complete() {
+      parent.addClass('open')
+    })
+  }
 })
+
 // Menu toggle
 $('[data-js-docs-menu-toggle]').on('click', function() {
   $('[data-js-docs-menu-toggle-icon]').toggleClass('open')
diff --git a/assets/scss/_search.scss b/assets/scss/_search.scss
index d9561a6..9f50547 100644
--- a/assets/scss/_search.scss
+++ b/assets/scss/_search.scss
@@ -15,8 +15,8 @@
     @media (max-width: 1000px) {
       display: none;
     }
-    margin: 10px 40px 10px 40px;
-    width: calc(100% - 40px - 40px);
+    margin: 10px 0;
+    width: 100%;
   }
 
   &.search--header {
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 0f8d9b4..e5b39d0 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -119,43 +119,81 @@ body {
             top: 90px;
             bottom: 0;
             right: 0;
-            padding: 10px 0;
+            padding: 10px 40px;
+
+            & > ul > li {
+              & > .category-name {
+                padding-left: 0;
+                font-size: 18px;
+              }
+              &.open > .category-posts::before {
+                left: 0;
+              }
+              & > .category-posts {
+                padding-left: 0;
+                & > ul > li {
+                  & > .category-name {
+                    font-size: 16px;
+                  }
+                  & > .category-posts > ul > li > .category-name {
+                    font-size: 14px;
+                  }
+                }
+              }
+            }
 
             li {
                 list-style: none;
 
                 .category-name {
                     font-family: $font-family-bold;
-                    padding: 10px 60px 10px 40px;
+                    padding: 10px 20px;
                     position: relative;
                     cursor: pointer;
                     line-height: 1.2;
-
                     &::after {
                         @include fontAwesome('\f0d7');
                         position: absolute;
                         top: 10px;
-                        right: 40px;
+                        right: 0;
                     }
                 }
                 .category-posts {
                     display: none;
-                    
+                    padding-left: 20px;
+                    position: relative;
                     a {
                         display: block;
                         color: $black;
-                        padding: 5px 5px 5px 50px;
+                        padding: 5px 5px 5px 18px;
                         position: relative;
                         font-size: 14px;
                         opacity: 0;
                         transition: all 300ms ease-in-out;
+                        border-left: 2px solid transparent;
+                        margin-bottom: 5px;
     
-                        &:hover, &.active { color: $blue; }
+                        &:hover {
+                          color: $blue;
+                        }
+                        &.active {
+                          color: $blue;
+                          font-family: $font-family-bold;
+                          border-color: $blue;
+                        }
                     }
                 }
                 &.open {
-                    .category-name { &::after { transform: rotate(180deg); } }
-                    .category-posts {
+                    & > .category-name { &::after { transform: rotate(180deg); } }
+                    & > .category-posts {
+                      &::before {
+                        content: '';
+                        border-right: 2px solid #eaeaea;
+                        position: absolute;
+                        left: 20px;
+                        top: 0;
+                        height: 100%;
+                      }
                         display: block;
                         a { opacity: 1; }
                     }
@@ -204,7 +242,6 @@ body {
                 left: 0;
                 width: 360px;
                 transform: translateY(-120%);
-                padding: 30px 0;
                 box-shadow: 0 0 30px transparentize(black, .9);
                 overflow: auto;
                 transition: transform 300ms ease-in-out, top 300ms ease-in-out;
@@ -221,7 +258,12 @@ body {
           }
         }
         @media (max-width: 400px) {
-            #docs-menu { width: 100%; }
+            #docs-menu { 
+              width: 100%;
+              padding-left: 25px;
+              padding-right: 25px;
+              box-sizing: border-box;
+            }
         }
     }
     #main-content {
diff --git a/config.yml b/config.yml
index 33f844a..ee2319f 100644
--- a/config.yml
+++ b/config.yml
@@ -35,40 +35,59 @@ enableGitInfo: true
 
 sectionPagesMenu: main
 menu:
-  main:
+  main:  
     - identifier: getting-started
-      name: Getting started with Codemagic CI/CD
+      name: Getting started
       weight: 1
     - identifier: building
-      name: Build configuration
+      name: Configuration
       weight: 2
-    - identifier: yaml
-      name: Codemagic with YAML
+    - identifier: testing-yaml
+      name: Testing
       weight: 3
+    - identifier: code-signing-yaml
+      name: Code signing
+      weight: 4
+    - identifier: publishing-yaml
+      name: Publishing
+      weight: 5
+    - identifier: setup-flutter
+      name: Flutter projects via UI
+      weight: 6
+    - identifier: flutter
+      name: Build configuration
+      weight: 1
+      parent: setup-flutter
     - identifier: testing
       name: Testing
-      weight: 4
+      weight: 2
+      parent: setup-flutter
     - identifier: code-signing
       name: Code signing
-      weight: 5
+      weight: 3
+      parent: setup-flutter
     - identifier: publishing
       name: Publishing
-      weight: 6
-    - identifier: custom-scripts
-      name: Custom script examples
-      weight: 7
+      weight: 4
+      parent: setup-flutter
     - identifier: rest-api
       name: Codemagic API
-      weight: 8
+      weight: 7
     - identifier: teams
       name: Teams
+      weight: 8
+    - identifier: knowledge-base
+      name: Knowledge base
       weight: 9
-    - identifier: troubleshooting
-      name: Troubleshooting
-      weight: 10
+    - identifier: billing
+      name: Billing
+      weight: 10    
     - identifier: releases-and-versions
-      name: Releases and versions
+      name: Codemagic releases and build machines
       weight: 11
+    - identifier: troubleshooting
+      name: Troubleshooting
+      weight: 12
 
 mediaTypes:
   video/mp4:
diff --git a/content/_index.md b/content/_index.md
index c9ad722..9e28a6e 100644
--- a/content/_index.md
+++ b/content/_index.md
@@ -19,7 +19,7 @@ To contribute, fork the repository, make your changes and start a pull request.
 
 ## Codemagic Slack workspace
 
-If you have problems with setting up Codemagic CI/CD or want to talk to fellow Flutter developers, you are more than welcome to join our [Slack workspace](https://join.slack.com/t/codemagicio/shared_invite/enQtNzQyODExMTQyMDcwLTQ2NTJjODE3NTA2Njg3Y2ViYmZiNGE1MWMyYWNjY2I0MzRmM2M2YmZhOTE1YTc5YjNkMmI0MzQzZWU0MzA4OGM 'Slack community for CI/CD and Flutter'). 
+If you have problems with setting up Codemagic CI/CD or want to talk to fellow Flutter developers, you are welcome to join our [Slack workspace](https://join.slack.com/t/codemagicio/shared_invite/enQtNzQyODExMTQyMDcwLTQ2NTJjODE3NTA2Njg3Y2ViYmZiNGE1MWMyYWNjY2I0MzRmM2M2YmZhOTE1YTc5YjNkMmI0MzQzZWU0MzA4OGM 'Slack community for CI/CD and Flutter'). 
 
 ## Codemagic status page
 
diff --git a/content/billing/billing.md b/content/billing/billing.md
new file mode 100644
index 0000000..f509349
--- /dev/null
+++ b/content/billing/billing.md
@@ -0,0 +1,26 @@
+---
+title: Billing
+weight: 1
+---
+
+In order to use the paid features of Codemagic (see our pricing [here](https://codemagic.io/pricing/)), you must enable billing. 
+
+Note that:
+* Build time usage is counted separately for your personal account and each team. 
+* Billing is managed separately for your personal account and each [team](../teams/teams). 
+
+## Enabling billing
+
+Billing can be enabled in **User settings** for your personal account and in **team settings** for a team.
+
+In settings, click **Enable billing** on the right sidebar. You will be asked for credit card information, or you can select an existing credit card if you have already registered one in Codemagic. To finish, click **Confirm and enable billing**.
+
+After billing is enabled, billing information (amount due, next payment date and billing history) will be visible on the right of the page. You will be charged monthly based on your usage of the paid features.
+
+## Updating billing details
+
+Once you have enabled billing, you can click **Update billing details** on the right sidebar in team or user settings to change the billing information or add additional details, such as company name, billing email, address and tax ID.
+
+## Disabling billing
+
+To disable billing, click on the **Disable billing** button in the **Danger zone**. On disabling billing, you will be immediately charged for the used paid features.
\ No newline at end of file
diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index a4be533..bd0eb02 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -1,14 +1,14 @@
 ---
-description: Access any private Git submodules or dependencies in Codemagic
-title: Accessing private repositories
-weight: 5
+description: If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully.
+title: Accessing private dependencies and Git submodules
+weight: 4
 ---
 
 If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully.
 
-1. [Create an SSH key pair](#generating-an-ssh-key) for use with Codemagic. Note that the SSH key **cannot** be password-protected.
+1. [Create an SSH key pair](../knowledge-base/generating-an-ssh-key) for use with Codemagic. Note that the SSH key **cannot** be password-protected.
 2. Add the **public key** to your repository settings. See how to do that on [GitHub](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account), [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), [GitLab](https://docs.gitlab.com/ee/ssh/README.html#adding-an-ssh-key-to-your-gitlab-account).
-3. Then in Codemagic, add the **private key** for accessing the repository as an [environment variable](../building/environment-variables/). Make sure to check **Secure**. For example:
+3. Encrypt the contents of the **private key** file and add it as an environment variable in your Codemagic configuration configuration file. . (../building/environment-variables/). Make sure to check **Secure**. For example:
 
         SSH_KEY = -----BEGIN OPENSSH PRIVATE KEY-----
         ...
@@ -23,15 +23,7 @@ All environment variables whose name has the suffix `_SSH_KEY` will be automatic
 If you wish to use a **custom** environment variable name without the suffix `_SSH_KEY`, add the following **post-clone** script to add the key to the SSH agent.
 
         #!/usr/bin/env sh
-        echo "${CUSTOM_SSH_KEY_NAME}" > /tmp/ssh_key
+        echo "${CUSTOM_KEY_NAME}" > /tmp/ssh_key
         chmod 600 /tmp/ssh_key
         eval `ssh-agent -s`
         ssh-add /tmp/ssh_key
-
-## Generating an SSH key
-
-Different repository hosting services have different minimum requirements for the length of the SSH key, varying from 2048 bits to 4096 bits. We recommend creating a 4096 bit key for increased security. Run the command below in your terminal to create a 4096 bit SSH key:
-
-        ssh-keygen -t rsa -b 4096 -f ~/Desktop/codemagic_ssh_key -q -N ""
-
-This will create two new files on your desktop: `codemagic_ssh_key` (private key) and `codemagic_ssh_key.pub` (public key). 
\ No newline at end of file
diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
deleted file mode 100644
index f447430..0000000
--- a/content/building/automatic-build-triggering.md
+++ /dev/null
@@ -1,98 +0,0 @@
----
-title: Automatic build triggering
-weight: 2
----
-
-In order to fully automate your CI/CD pipeline, you can set up automatic build triggering by configuring which branches to track and when to trigger builds.
-
-Build triggers can be configured in **App settings > Build triggers**.
-
-## Tracking specific branches
-
-The branches tracked for building are selected by entering branch patterns and including or excluding the matching branches. Note that you can either enter the exact name of the branch to select it or use the wildcard symbols listed in the table below to select more than one branch with one pattern.
-
-![](../uploads/2019/07/branch_patterns-1.png)
-
-The first (i.e. topmost) pattern in the list is applied first. Each following pattern will limit the set of branches further. In the case of conflicting patterns, the latter one will prevail. You can check the targeted branches by clicking the eye icon next to **Watched branch patterns**.
-
-To add a new branch pattern:
-
-1. Navigate to **App settings >** **Build triggers**.
-2. Enter a pattern matching the name of one or more branches in the project.
-3. Select **Include** or **Exclude** from the dropdown to limit the set of targeted branches by either including or excluding the matching branches.
-4. For **pull request builds**, select whether the tracked branch is the **Source** or the **Target** branch of the pull request. This setting has no effect on other types of builds.
-5. Click **Add pattern** to save it. You can always edit or delete added patterns.
-6. Click **Save** at the end of the section for the changes to take effect.
-
-## Build triggers
-
-Under Automatic build triggering, you can select when to trigger builds.
-
-**Trigger on push**. When checked, a build will be started every time you commit code to any of the tracked branches.
-
-**Trigger on pull request update** (not supported for apps from custom sources). When checked, your workflow is run when a pull request is opened or updated to verify the resulting merge commit. 
-
-* For triggering pull requests, you can specify whether each branch pattern matches the **source** or the **target** branch of the pull request.
-
-* If you want to only run tests for pull requests and skip building for platforms, select **Run tests only** under Build > Build for platforms.
-
-**Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
-
-**Cancel outdated webhook builds**. When checked, Codemagic will automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch. We recommend enabling this feature when you're making several commits, each of which triggers a build.
-
-If you don't enable any automatic build triggers, you can only start builds manually for this workflow.
-
-## Webhooks
-
-Codemagic automatically adds webhooks to GitHub, GitLab, and Bitbucket after you have enabled any of the triggers in **App settings** > **Automatic build triggering**.
-
-### Set up webhooks manually
-
-If Codemagic is unable to add a webhook automatically or when you are building an app that is added from a custom source, then you must set up the webhook in your repository hosting service to enable automatic builds in response to events in the repository. Webhooks must be also set up manually for `codemagic.yaml` builds.
-
-* **GitHub**: Open your project and navigate to **Settings** > **Webhooks** > **Add webhook**, paste the **payload URL** from below, make sure **Content type** is `application/json` and select the following events: **Branch or tag creation**, **Pull requests**, **Pushes**.
-
-* **GitLab**: Navigate to **Settings** > **Webhooks**, paste the **payload URL** and check the following boxes in the **Trigger** section: **Push events**, **Tag push events**, **Merge request events**. Also, be sure to enable **SSL verification**.
-
-* **Bitbucket**: Open your application repository, go to **Settings** > **Webhooks** (in **Workflow** section) > **Add webhook**, then enter an arbitrary title for the webhook and paste the **payload URL** in the **URL** field. For **Triggers**, select **Choose from a full list of triggers** and select the following events: **Push** in the **Repository** section and **Created**, **Updated**, **Merged** in the **Pull Request** section.
-
-{{<notebox>}}
-The payload URL has the following format: `https://api.codemagic.io/hooks/[appId]`. 
-
-You can find your app ID in the browser URL after `app/` when you open the app on Codemagic: `https://codemagic.io/app/[appId]`
-{{</notebox>}}
-
-## Custom build triggers
-
-Build triggering in response to custom events can be set up by sending a `POST` request to the `https://api.codemagic.io/builds` endpoint. 
-
-`POST https://api.codemagic.io/builds`
-
-Content:
-
-        {
-        "appId": "----appId----",
-        "workflowId": "-----workflowId-----,
-        "branch": "masters"
-        }
-
-Header:
-
-`"x-auth-token": "----token----"`
-
-`x-auth-token` is available via **User settings** > **Integrations** > **Codemagic API** > **Show**.
-
-You can find the `workflowId` and `appId` from your **App settings** > **Workflow settings** > **Build status badge** > **Badge markdown**.
-
-Badge markdown has the following format: `(api.codemagic.io/apps/[appId]/[workflowId]/status_badge.svg)`
-
-For use with YAML configuration, `workflowId` is the workflow ID in your `codemagic.yaml` configuration file shown below:
-```
-workflows:
-  my-workflow:                # workflow ID 
-    name: My workflow name    # workflow name displayed in UI
-```
-
-## Skipping builds
-
-If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 9c968e7..287055f 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,42 +1,40 @@
 ---
 title: Build versioning
-weight: 10
+weight: 8
 ---
 
-If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using the `BUILD_NUMBER` read-only environment variable in **build arguments**.
+If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using the environment variables that Codemagic exports during the build. There are two environment variables that count the number of builds:
 
-The `BUILD_NUMBER` read-only environment variable holds the total count of builds (including the ongoing build) for this project in Codemagic. In other words, if you have triggered 10 builds for some project in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`.
+* `BUILD_NUMBER`. Holds the total count of builds (including the ongoing build) for a specific **workflow** in Codemagic. TIn other words, if you have triggered 10 builds for some workflow in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`.
 
-{{<notebox>}} Please note that the number of builds in `BUILD_NUMBER` is counted separately for each workflow. {{</notebox>}}
+* `PROJECT_BUILD_NUMBER`. Holds the total count of builds (including the ongoing build) for a **project** in Codemagic. In contrast with `BUILD_NUMBER`, `PROJECT_BUILD_NUMBER` will increase every time you build any of the workflows of the app.
 
-## Incrementing app version
+## Incrementing app version using environment variables
 
-Here are some examples of the build arguments you can use to increment the app version. You can enter the build arguments in **App settings > Build > Build arguments**.
+Here are some examples how you can increment the app version using Codemagic's read-only environment variables in build arguments:
 
 `--build-name=2.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER + 100))`
 
 `--build-name=1.0.0 --build-number=$BUILD_NUMBER`
 
 
-## When build number should be fetched from pubsec.yaml
+## Fetching build number from pubsec.yaml
 
-- add a prebuild script that install [yq](https://github.com/mikefarah/yq), a lightweight and portable command-line YAML processor, add the
-following command to the pre build script so yq can be installed. 
+Add a pre-build script that installs [yq](https://github.com/mikefarah/yq), a lightweight and portable command-line YAML processor: 
 
 ```
 #!/usr/bin/env sh
 HOMEBREW_NO_AUTO_UPDATE=1 brew install yq
 ```
 
-The head to App settings > Build > and in the *Build arguments* field:
+Then add the following build arguments:
 
 `--build-number=$(cat ./pubspec.yaml | yq r - version)`  
 
 
 ## Set Xcode project build number via command line
 
-Calling agvtool is another way of forcing Xcode to set the 
-build version for your next build. 
+Calling agvtool is another way of forcing Xcode to set the build version for your next build. 
 
 ```
 #!/bin/sh
@@ -46,6 +44,3 @@ set -x
 cd $FCI_BUILD_DIR/ios
 agvtool new-version -all $(($BUILD_NUMBER + 1))
 ```
-
-
-
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
deleted file mode 100644
index 11e6a9a..0000000
--- a/content/building/building-android-app-bundles.md
+++ /dev/null
@@ -1,29 +0,0 @@
----
-title: Building Android App Bundles
-weight: 6
----
-
-You can build your app in [Android App Bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app  .apk(s) will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
-
-{{<notebox>}}
-
-Android App Bundles are supported starting from Flutter v1.1.5.
-
-{{</notebox>}}
-
-Building an Android App Bundle requires additional configuration as described in the sections below.
-
-## Enable building app bundles in Codemagic
-
-In the **Build section** of app settings, tick **Android** and then choose **Android app bundle (AAB)** for the **Android build format**.
-
-## Prepare the app bundle for uploading to Google Play
-
-In order to upload your Android App Bundle to Google Play, you will need to:
-
-1. Build the app in **Release** mode.
-2. Set up [Android code signing](../code-signing/android-code-signing/) in Codemagic to sign the app bundle.
-3. Set up [publishing to Google Play](../publishing/publishing-to-google-play/) in Codemagic to upload your app bundle to one of Google Play tracks.
-4. [Enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423) to have Google sign the .apk(s) that are generated from the app bundle during installation.
-
-When you enroll an app into app signing by Google Play, Google will manage your app's signing key for you and use it to sign the .apk for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
diff --git a/content/building/building-for-desktop.md b/content/building/building-for-desktop.md
deleted file mode 100644
index 498e51d..0000000
--- a/content/building/building-for-desktop.md
+++ /dev/null
@@ -1,35 +0,0 @@
----
-description: Build a Flutter app for desktop with Codemagic.
-title: Building for desktop
-weight: 9
----
-
-You can use Codemagic to build Flutter desktop apps for macOS and Linux. Building Windows apps is not yet supported. 
-
-{{<notebox>}}
-Read more about Flutter's desktop support and the required settings for enabling it in Flutter's wiki about [desktop shells](https://github.com/flutter/flutter/wiki/Desktop-shells).
-{{</notebox>}}
-
-## Project structure requirements
-
-Codemagic can detect your Flutter desktop project if it meets the following conditions:
-
-- The project contains a `macos` folder for the macOS application
-- The project contains a `linux` folder for the Linux application
-
-## Build configuration
-
-1. Navigate to **App settings > Build**.
-2. Select which Flutter version to use in the **Flutter version** dropdown. Flutter for desktop is available in **channel Master**. 
-3. Under **Build for platforms**, select the platforms for which to build. You can select both **macOS** and **Linux** or only one of them.
-4. Select the build mode.
-5. Click **Save** to finish build configuration. You are now ready to run the build.
-
-{{<notebox>}}
-* Note that if your project has any tests, you can enable them in **App settings > Test**.
-* Code signing for desktop apps is not yet supported.
-{{</notebox>}}
-
-## Build artifacts
-
-At the end of a successful build, Codemagic generates a downloadable `.zip` file for each desktop platform. The application can be installed on your machine, but since it is built without code signing, you may have to allow installating applications from unidentified developers.
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
deleted file mode 100644
index f42b0f9..0000000
--- a/content/building/building-for-the-web.md
+++ /dev/null
@@ -1,26 +0,0 @@
----
-description: Build a Flutter web app with Codemagic.
-title: Building for the web
-weight: 8
----
-
-You can build, test and publish Flutter web apps with Codemagic.
-
-## Project structure requirements
-
-Codemagic can detect your Flutter web project if it meets the following conditions:
-
-- The project has a `web` folder
-
-## Build configuration
-
-1. Navigate to **App settings > Build**.
-2. In the **Flutter version** dropdown, select which Flutter version to use. Flutter for web is supported starting from Flutter v1.5.4.
-3. Under **Build for platforms**, select **Web**.
-4. Select the build mode.
-5. Under **Build arguments**, you will see the default build command Codemagic runs to build the app, but you can enter a different command.
-6. Click **Save** to finish build configuration. You are now ready to run the build.
-
-## Build artifacts
-
-At the end of a successful build, Codemagic generates a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](../publishing/publishing-to-codemagic-static-pages/). You can also use custom script to publish to third-party hosting sites.
\ No newline at end of file
diff --git a/content/building/encrypting.md b/content/building/encrypting.md
new file mode 100644
index 0000000..c02ad66
--- /dev/null
+++ b/content/building/encrypting.md
@@ -0,0 +1,30 @@
+---
+title: Encrypting sensitive data
+description: Encrypt your credentials and key files
+weight: 6
+---
+
+If you wish to store sensitive information, such as login details or API keys, in environment variables or in your configuration file, it is important to encrypt the data so as to not expose it. You can easily encrypt values and files using the encryption interface in Codemagic.
+
+1. Click open your app in Codemagic.
+2. Click **Encrypt environment variables** at the bottom of the page (or on the right sidebar in the **Configuration as code** section if it's a Flutter app).
+3. Paste the value of the variable in the field or upload it as a file.
+4. Click **Encrypt**. 
+5. Copy the encrypted value and paste it to the configuration file.
+
+The encrypted value will look something like this:
+
+```
+Encrypted(Z0FBQUFBQmRyY1FLWXIwVEhqdWphdjRhQ0xubkdoOGJ2bThkNmh4YmdXbFB3S2wyNTN2OERoV3c0YWU0OVBERG42d3Rfc2N0blNDX3FfblZxbUc4d2pWUHJBSVppbXNXNC04U1VqcGlnajZ2VnJVMVFWc3lZZ289)
+```
+
+{{<notebox>}}
+Note that when you upload a file for encryption, it is encoded to `base64` and would have to be decoded during the build. If you want to encrypt a file (plaintext, JSON, plist), copy-paste the contents of it to the encryption interface and use the encrypted value in your configuration.
+{{</notebox>}}
+
+Writing the base64-encoded environment variable to a file can be done like this:
+
+```
+scripts:
+  - echo $MY_FILE | base64 --decode > my-file.json
+```
\ No newline at end of file
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 5991971..33e6829 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -4,7 +4,7 @@ description:
   not want to store in the repository. You can also use Codemagic read-only environment
   variables to customize your builds.
 title: Environment variables
-weight: 4
+weight: 7
 ---
 
 Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
@@ -63,26 +63,7 @@ Here you'll find some of the read-only environment variables explained.
 
 ## Using environment variables
 
-To access a variable, add the `$` symbol in front of its name. For example, access `API_TOKEN` by using `$API_TOKEN`. Note that it is required to use quotation marks with multi-line variables when you are referencing them in custom scripts, as shown in the example below:
-
-    > MY_VAR="var
-    > value"
-    > echo $MY_VAR
-    < var value
-    > echo "$MY_VAR"
-    < var
-    < value
-    
-## Adding environment variables to Flutter projects via UI
-
-Flutter projects can be configured both in .yaml file as well as in the Codemagic web app graphical user interface. You can add environment variables to your Flutter projects in **App settings > Environment variables**.
-
-1. Enter the name and the value of the variable.
-2. Check **Secure** if you wish to hide the value both in the UI and in build logs and disable editing of the variable. Such variables can be accessed only by the build machines during the build.
-3. Click **Add**.
-4. Click **Save** to save the settings.
-
-![](../uploads/env_vars.PNG)
+To access a variable, add the `$` symbol in front of its name. For example, access `API_TOKEN` by using `$API_TOKEN`. Note that it is required to use quotation marks with multi-line variables when you are referencing them in custom scripts.
 
 ## Accessing environment variables from your application
 
diff --git a/content/building/machine-type.md b/content/building/machine-type.md
index c9352b6..a1e0a99 100644
--- a/content/building/machine-type.md
+++ b/content/building/machine-type.md
@@ -1,13 +1,14 @@
 ---
 description: Choose between Mac Mini or Mac Pro
-title: Machine type
-weight: 12
+title: Build machine type
+weight: 11
 ---
 
-You can choose between Mac Mini or Mac Pro when running the build. Specifications for these machines are available [here](../releases-and-versions/versions/#hardware). 
-
-The machine type can be chosen in the drop-down menu on the right of the screen, under the workflow settings. This setting is workflow-based and will be used by default for all builds of this workflow, both the manually started ones and the ones that are triggered automatically.
+Codemagic currently offers two types of machines for running builds: Mac mini (macOS standard VM, default) and Mac Pro (macOS premium VM). Specifications for these machines are available [here](../releases-and-versions/versions/#hardware). 
 
 {{<notebox>}}
-Mac Pro machines are available for teams and users that have enabled billing in team or user settings respectively.
+Mac Pro machines are available for teams and users that have enabled [billing](../billing/billing) in team or user settings respectively.
 {{</notebox>}}
+
+* In `codemagic.yaml`, the build machine type can be specified in [workflow section](../getting-started/yaml#workflows). 
+* For Flutter projects configured via UI, the build machine type can be selected in **App settings > Workflow settings > Machine**.
\ No newline at end of file
diff --git a/content/yaml/runninglocally.md b/content/building/running-locally.md
similarity index 95%
rename from content/yaml/runninglocally.md
rename to content/building/running-locally.md
index 6dc9267..b2d40c5 100644
--- a/content/yaml/runninglocally.md
+++ b/content/building/running-locally.md
@@ -1,7 +1,10 @@
 ---
 title: Using Codemagic CLI tools locally
 description: Using Codemagic CLI tools locally or in other environments.
-weight: 10
+weight: 12
+aliases: 
+    - '../building/runninglocally'
+    - '../yaml/runninglocally'
 ---
 
 [codemagic-cli-tools](https://pypi.org/project/codemagic-cli-tools/) is a set of tools to simplify builds at Codemagic. They can be installed with pip (`pip3 install codemagic-cli-tools`) and run locally. For more information, review the full documentation on [CLI tools](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs#cli-tools).
@@ -22,7 +25,7 @@ To fetch (or create and download) the provisioning profile(s) and certificate fo
         MY_BUNDLE_ID
 
  By default, your certificate will be saved to `$HOME/Library/MobileDevice/Certificates` and the provisioning profile(s) will be saved to `$HOME/Library/MobileDevice/Provisioning Profiles`.
- Refer to [Setting up code signing for iOS](/yaml/distribution/) for more information about accessing App Store Connect.
+ Refer to [Setting up code signing for iOS](../code-signing-yaml/signing/) for more information about accessing App Store Connect.
 
 To initialize keychain at system default keychain path with empty keychain password and add your `certificate.p12` with certificate password, use the [keychain](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md#keychain) tool with the following command:
 
diff --git a/content/building/timeout.md b/content/building/timeout.md
index 684d7c3..02c2985 100644
--- a/content/building/timeout.md
+++ b/content/building/timeout.md
@@ -1,16 +1,16 @@
 ---
 description: Limit the maximum duration of builds
 title: Build timeout settings
-weight: 11
+weight: 9
 ---
 
 By default, Codemagic builds are set to time out after 60 minutes. You can decrease or increase the maximum build duration **per workflow**.
 
-* If you're building via UI, you can adjust the maximum build duration in **App settings > Workflow settings > Max build duration**. Move the slider right or left to increase or decrease the maximum build duration. The minimum build duration is 30 min and the maximum is 120 min.
-* If you're using `codemagic.yaml`, you can change the respective setting in the [workflow section](./yaml#workflows).
+* In `codemagic.yaml`, build timeout limit can be defined in the [workflow section](../getting-started/yaml#workflows). 
+* For Flutter projects configured via UI, you can adjust the maximum build duration in **App settings > Workflow settings > Max build duration**. Move the slider right or left to increase or decrease the maximum build duration. The minimum build duration is 30 min and the maximum is 120 min.
 
 {{<notebox>}}
-Note that builds that end with timeout do not consume any build minutes.
+Note that builds that end with a timeout do not consume any build minutes.
 {{</notebox>}}
 
 
diff --git a/content/building/webhooks.md b/content/building/webhooks.md
new file mode 100644
index 0000000..901df74
--- /dev/null
+++ b/content/building/webhooks.md
@@ -0,0 +1,19 @@
+---
+title: Webhooks
+description: Set up webhooks for automatic builds
+weight: 10
+---
+
+Webhooks are necessary in order to be able to trigger builds automatically in response to events in the repository.
+
+* **GitHub**: Open your project and navigate to **Settings** > **Webhooks** > **Add webhook**, paste the **payload URL** from below, make sure **Content type** is `application/json` and select the following events: **Branch or tag creation**, **Pull requests**, **Pushes**.
+
+* **GitLab**: Navigate to **Settings** > **Webhooks**, paste the **payload URL** and check the following boxes in the **Trigger** section: **Push events**, **Tag push events**, **Merge request events**. Also, be sure to enable **SSL verification**.
+
+* **Bitbucket**: Open your application repository, go to **Settings** > **Webhooks** (in **Workflow** section) > **Add webhook**, then enter an arbitrary title for the webhook and paste the **payload URL** in the **URL** field. For **Triggers**, select **Choose from a full list of triggers** and select the following events: **Push** in the **Repository** section and **Created**, **Updated**, **Merged** in the **Pull Request** section.
+
+{{<notebox>}}
+The payload URL has the following format: `https://api.codemagic.io/hooks/[appId]`. 
+
+You can find your app ID in the browser URL after `app/` when you open the app on Codemagic: `https://codemagic.io/app/[appId]`
+{{</notebox>}}
diff --git a/content/code-signing-yaml/signing.md b/content/code-signing-yaml/signing.md
new file mode 100644
index 0000000..10d5943
--- /dev/null
+++ b/content/code-signing-yaml/signing.md
@@ -0,0 +1,133 @@
+---
+title: Code signing
+description: How to set up code signing in codemagic.yaml
+weight: 2
+aliases:
+  - '../yaml/distribution'
+---
+
+All Android and iOS applications have to be digitally signed before they are made available to the public to confirm their author and guarantee that the code has not been altered or corrupted since it was signed.
+
+## Setting up code signing for iOS
+
+Signing iOS applications requires [Apple Developer Program](https://developer.apple.com/programs/enroll/) membership. You can upload your signing certificate and distribution profile to Codemagic to manage code signing yourself or use the automatic code signing option where Codemagic takes care of code signing and signing files management on your behalf. Read more about the two options below.
+
+{{<notebox>}}
+Under the hood, we use [Codemagic CLI tools](https://github.com/codemagic-ci-cd/cli-tools) to perform iOS code signing ⏤ these tools are open source and can also be [used locally](../building/running-locally/) or in other environments. Codemagic uses the [keychain](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md#keychain) utility to manage macOS keychains and certificates.
+{{</notebox>}}
+
+### Setting up automatic code signing
+
+In order to use **automatic code signing** and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect and define the environment variables listed below. Make sure to [encrypt](../building/encrypting/#encrypting-sensitive-data) the values of the variables before adding them to the configuration file. Note that when encrypting files via the UI, they are base64 encoded and would have to be decoded during the build. 
+
+* `APP_STORE_CONNECT_PRIVATE_KEY`
+
+  It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api). To do so:
+
+  1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
+  2. Click on the + sign to generate a new API key.
+  3. Enter the name for the key and select an access level (`Developer` or `App Manager`).
+  4. Click **Generate**.
+  5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key. Note that the key can only be downloaded once.
+
+* `APP_STORE_CONNECT_KEY_IDENTIFIER`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Key ID** of the key.
+
+* `APP_STORE_CONNECT_ISSUER_ID`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Issuer ID** displayed above the table of active keys.
+
+* `CERTIFICATE_PRIVATE_KEY`
+
+  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal:
+
+      ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
+
+{{<notebox>}}
+Alternatively, each property can be specified in the scripts section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
+{{</notebox>}}
+
+{{<notebox>}}
+Codemagic uses the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) utility for generating and managing certificates and provisioning profiles and performing code signing.
+{{</notebox>}}
+
+    - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+      script: keychain initialize
+    - name: Fetch signing files
+      script: |
+        app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
+          --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
+          --create  # Allow creating resources if existing are not found.
+    - name: Set up signing certificate
+      script: keychain add-certificates
+
+The available provisioning profile types are described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store).
+
+### Setting up manual code signing
+
+In order to use **manual code signing**, [encrypt](../building/encrypting/#encrypting-sensitive-data) your signing certificate, the certificate password (if the certificate is password-protected) and the provisioning profile, and set the encrypted values to the following environment variables:
+
+    CM_CERTIFICATE: Encrypted(...)
+    CM_CERTIFICATE_PASSWORD: Encrypted(...)
+    CM_PROVISIONING_PROFILE: Encrypted(...)
+
+With the manual code signing method, you are required to upload the signing certificate and the matching provisioning profile(s) to Codemagic in order to receive signed builds.
+
+
+      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+        script: keychain initialize
+      - name: Set up Provisioning profiles from environment variables
+        script: |
+          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+          mkdir -p "$PROFILES_HOME"
+          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+          echo "Saved provisioning profile $PROFILE_PATH"
+      - name: Set up signing certificate
+        script: |
+          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+          # when using a password-protected certificate
+          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+          # when using a certificate that is not password-protected
+          keychain add-certificates --certificate /tmp/certificate.p12
+
+
+## Setting up code signing for Android
+
+The following templates show code signing using `key.properties`.
+
+### Set up default debug key.properties
+
+    - name: Set up debug key.properties
+      script: |
+        keytool -genkeypair \
+          -alias androiddebugkey \
+          -keypass android \
+          -keystore ~/.android/debug.keystore \
+          -storepass android \
+          -dname 'CN=Android Debug,O=Android,C=US' \
+          -keyalg 'RSA' \
+          -keysize 2048 \
+          -validity 10000
+
+### Set up code signing with user specified keys
+
+In order to do code signing [encrypt](../building/encrypting/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password protected), key alias and key alias password (if key alias is password protected) and set the encrypted values to the following environment variables:
+
+    CM_KEYSTORE: Encrypted(...)
+    CM_KEYSTORE_PASSWORD: Encrypted(...)
+    CM_KEY_ALIAS_USERNAME: Encrypted(...)
+    CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+
+Use the following script:
+
+    - name: Set up key.properties
+      script: |
+        echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+        cat >> "$FCI_BUILD_DIR/project_directory/android/key.properties" <<EOF
+        storePassword=$CM_KEYSTORE_PASSWORD
+        keyPassword=$CM_KEY_ALIAS_PASSWORD
+        keyAlias=$CM_KEY_ALIAS_USERNAME
+        storeFile=/tmp/keystore.keystore
+        EOF
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 39b4d04..0c3522f 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -41,7 +41,7 @@ In short, the purpose of the different provisioning profiles is the following:
 
 Codemagic makes automatic code signing possible by connecting to [App Store Connect via its API](https://developer.apple.com/app-store-connect/api/) for creating and managing your code signing certificates and provisioning profiles. It is possible to set up several code signing identities and use different code signing settings per workflow.
 
-The following sections describe how to set up automatic code signing for builds configured in the UI. If you're building with `codemagic.yaml`, please refer [here](../yaml/distribution#setting-up-code-signing-for-ios).
+The following sections describe how to set up automatic code signing for builds configured in the UI. If you're building with `codemagic.yaml`, please refer [here](../code-signing-yaml/signing#setting-up-code-signing-for-ios).
 
 ### Step 1. Creating an App Store API key for Codemagic
 
diff --git a/content/custom-scripts/run-static-code-analysis.md b/content/custom-scripts/run-static-code-analysis.md
deleted file mode 100644
index 69095bc..0000000
--- a/content/custom-scripts/run-static-code-analysis.md
+++ /dev/null
@@ -1,14 +0,0 @@
----
-draft: true
-title: Run static code analysis
-weight:
----
-
-You can use this **pre-test** script to run static code analysis with `flutter analyze`.
-
-    #!/usr/bin/env sh
-
-    set -e # exit on first failed command
-    set -x # print all executed commands to the log
-
-    flutter analyze
diff --git a/content/flutter/automatic-build-triggering.md b/content/flutter/automatic-build-triggering.md
new file mode 100644
index 0000000..11a0e3a
--- /dev/null
+++ b/content/flutter/automatic-build-triggering.md
@@ -0,0 +1,48 @@
+---
+title: Build triggers
+description: How to enable automatic builds
+weight: 3
+aliases:
+    - '../building/automatic-build-triggering'
+---
+
+In order to fully automate your CI/CD pipeline, you can set up automatic build triggering by configuring which branches to track and when to trigger builds.
+
+Build triggers can be configured in **App settings > Build triggers**.
+
+## Tracking specific branches
+
+You can configure the branches to track under **Watched branch patterns**. 
+
+The branches tracked for building are selected by entering branch patterns and including or excluding the matching branches. Note that you can either enter the exact name of the branch to select it or use the wildcard symbols to select more than one branch with one pattern. Click **Show pattern examples** in the UI for tips.
+
+The first (i.e. topmost) pattern in the list is applied first. Each following pattern will limit the set of branches further. In the case of conflicting patterns, the latter one will prevail. You can check the targeted branches by clicking the eye icon next to **Watched branch patterns**.
+
+To add a new branch pattern:
+
+1. Navigate to **App settings >** **Build triggers**.
+2. Enter a pattern matching the name of one or more branches in the project.
+3. Select **Include** or **Exclude** from the dropdown to limit the set of targeted branches by either including or excluding the matching branches.
+4. For **pull request builds**, select whether the tracked branch is the **Source** or the **Target** branch of the pull request. This setting has no effect on other types of builds.
+5. Click **Add pattern** to save it. You can always edit or delete added patterns.
+6. Click **Save** at the end of the section for the changes to take effect.
+
+## Build triggers
+
+Under **Automatic build triggering**, you can select when to trigger builds.
+
+**Trigger on push**. When checked, a build will be started every time you commit code to any of the tracked branches.
+
+**Trigger on pull request update** (not supported for apps from custom sources). When checked, your workflow is run when a pull request is opened or updated to verify the resulting merge commit. 
+
+* For triggering pull requests, you can specify whether each branch pattern matches the **source** or the **target** branch of the pull request.
+
+* If you want to only run tests for pull requests and skip building for platforms, select **Run tests only** under Build > Build for platforms.
+
+**Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
+
+**Cancel outdated webhook builds**. When checked, Codemagic will automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch. We recommend enabling this feature when you're making several commits, each of which triggers a build.
+
+If you don't enable any automatic build triggers, you can only start builds manually for this workflow.
+
+Codemagic automatically adds webhooks to GitHub, GitLab, and Bitbucket after you have enabled any of the triggers in **App settings > Build triggers >Automatic build triggering**. In the case Codemagic is unable to create a webhook, you would have to [set up webhooks manually](../building/webhooks).
diff --git a/content/getting-started/creating-workflows.md b/content/flutter/creating-workflows.md
similarity index 51%
rename from content/getting-started/creating-workflows.md
rename to content/flutter/creating-workflows.md
index 2a5ec35..7b70fb1 100644
--- a/content/getting-started/creating-workflows.md
+++ b/content/flutter/creating-workflows.md
@@ -1,25 +1,25 @@
 ---
-description: Manage multiple workflows to fully customize your CI/CD pipeline
-title: Creating workflows
-weight: 3
+description: Have full control over your CI/CD pipeline with workflows. A workflow is a set of settings that determines how your app is to be built, tested and published. 
+title: Workflows
+weight: 2
+aliases:
+    - '../getting-started/creating-workflows'
 ---
 
-Have full control over your CI/CD pipeline with workflows. A workflow is a set of settings that determines how your app is to be built, tested and published. You can create several workflows for building different configurations of your app. For example, you can use workflows to build different branches of the project, separate your debug and release builds, run builds for different projects or flavors in the repository, test your app with different software versions, and so on.
+Have full control over your CI/CD pipeline with workflows. A workflow is a set of settings that determines how your app is to be built, tested and published. 
 
-You can create new workflows by duplicating existing ones. In app settings, click **Duplicate workflow** under Workflow settings.
+You can create several workflows for building different configurations of your app. For example, you can use workflows to build different branches of the project, separate your debug and release builds, run builds for different projects or flavors in the repository, test your app with different software versions, and so on.
 
-![](../uploads/duplicate_ed.png)
+## Creating workflows
 
-This creates a new workflow with the exact same settings as you had configured for the original workflow. All your environment variables and scripts, build settings and signing files will be duplicated into the new workflow.
+New workflows can be created by duplicating existing ones. Navigate to **App settings > Right sidebar > Workflow settings** and click **Duplicate workflow**.
 
-![](../uploads/duplicate_created.PNG)
+This creates a new workflow with the exact same settings as you had configured for the original workflow. All your environment variables and scripts, build settings and signing files will be duplicated into the new workflow.
 
 You can then click on the name of the workflow to edit it and configure the workflow settings as you like. Now that you have more than one workflow, you can also delete workflows.
 
 To switch between workflows, click on the workflow name below the app name in app settings.
 
-![](../uploads/select_workflow_ed.png)
-
 {{<notebox>}}
 Note that while your workflows started out as duplicates, they become separate entities once created. Any changes made to one workflow won't affect any of the others.
 {{</notebox>}}
diff --git a/content/building/custom-scripts.md b/content/flutter/custom-scripts.md
similarity index 81%
rename from content/building/custom-scripts.md
rename to content/flutter/custom-scripts.md
index 78bea38..9e57022 100644
--- a/content/building/custom-scripts.md
+++ b/content/flutter/custom-scripts.md
@@ -1,6 +1,8 @@
 ---
-title: Running custom scripts
-weight: 3
+title: Custom build steps
+weight: 5
+aliases: 
+  - '../building/custom-scripts'
 ---
 
 You can customize the Codemagic workflow by running custom scripts before and after the default build steps.
@@ -11,10 +13,10 @@ In the UI, the spots for injecting custom scripts are marked by **'+'** signs be
 Please note that custom scripts are always executed from the absolute path to the cloned repository which is located at `/Users/builder/clone` and can also be accessed using the environment variable `FCI_BUILD_DIR`. If your project is not in the repository root and you want to access it from a script, you will need to move to the needed directory inside the script.
 {{</notebox>}}
 
-Using `codemagic.yaml` for build configuration allows for even greater customization of builds. Read more about it in [Configuration as code (YAML)](./yaml/).
+Using `codemagic.yaml` for build configuration allows for even greater customization of builds, read more about it [here](../getting-started/yaml).
 
 {{<notebox>}}
-You can see some sample scripts in the **Custom scripts examples** category.
+You can find some useful scripts in the **Knowledge base** category.
 {{</notebox>}}
 
 
diff --git a/content/building/dependency-caching.md b/content/flutter/dependency-caching.md
similarity index 96%
rename from content/building/dependency-caching.md
rename to content/flutter/dependency-caching.md
index 1eef4f0..d54e0ab 100644
--- a/content/building/dependency-caching.md
+++ b/content/flutter/dependency-caching.md
@@ -1,7 +1,9 @@
 ---
 description: Store your dependencies on Codemagic for a faster build time.
 title: Dependency caching
-weight: 9
+weight: 6
+aliases: 
+    - '../building/dependency-caching'
 ---
 
 You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
diff --git a/content/flutter/env-variables.md b/content/flutter/env-variables.md
new file mode 100644
index 0000000..bbc4840
--- /dev/null
+++ b/content/flutter/env-variables.md
@@ -0,0 +1,16 @@
+---
+title: Adding environment variables
+description: How to add environment variables in Codemagic UI
+weight: 4
+aliases:
+  - '../building/environment-variables'
+---
+
+Environment variables are useful for making available for Codemagic the credentials, configuration files or API keys that are required for successful building or integration with external services. For more information about the use of environment variables and a list of Codemagic read-only environment variables, refer [here](../building/environment-variables).
+
+You can add environment variables to your Flutter projects in **App settings > Environment variables**.
+
+1. Enter the name and the value of the variable.
+2. Check **Secure** if you wish to hide the value both in the UI and in build logs and disable editing of the variable. Such variables can be accessed only by the build machines during the build. Note that when storing sensitive information in environment variables, it is recommended to [encrypt](../building/encrypting) the values of the variables.
+3. Click **Add**.
+4. Click **Save** to save the settings.
diff --git a/content/flutter/flutter-projects.md b/content/flutter/flutter-projects.md
new file mode 100644
index 0000000..e3181b7
--- /dev/null
+++ b/content/flutter/flutter-projects.md
@@ -0,0 +1,95 @@
+---
+title: Building Flutter projects
+description: Configuring Flutter projects in the UI.
+weight: 1
+aliases:
+    - '../building/building-android-app-bundles'
+    - '../building/building-for-the-web'
+    - '../building/building-for-desktop'
+---
+
+With Codemagic, you can build and test Flutter apps for Android, iOS, web, macOS and Linux as well as [test widgets](../testing/testing-widgets). It is also possible to set up a [workflow](../flutter/creating-workflows) that runs tests only.
+
+{{<notebox>}}
+If you're interested in building Flutter/Dart packages and publishing them to [pub.dev](https://pub.dev/), you can do so with [`codemagic.yaml`](../getting-started/yaml), see an example [here](../publishing-yaml/distribution/#publishing-a-flutter-package-to-pubdev).
+{{</notebox>}}
+
+## Selecting build platforms and versions
+
+You can select the platforms to build for and specify the **Flutter version**, **Xcode version** and **CocoaPods version** to be used for building in **App settings > Build**.
+
+When you're building for **Android**, make sure to also specify the **Android build format** to determine which build artifacts to generate.
+
+This is also where you can selet the build **Mode** (**Debug**, **Release** or **Profile**) and specify additional build arguments, e.g. for [build versioning](../building/build-versioning) or verbose logging.
+
+### Building Android app bundles
+
+You can build your app in [Android App Bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app  .apk(s) will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
+
+In **App settings > Build > Build for platforms**, select **Android** and then choose **Android app bundle (AAB)** as the **Android build format**.
+
+#### Prepare the app bundle for uploading to Google Play
+
+In order to upload your Android App Bundle to Google Play, you will need to:
+
+1. Build the app in **Release** mode.
+2. Set up [Android code signing](../code-signing/android-code-signing/) in Codemagic to sign the app bundle.
+3. Set up [publishing to Google Play](../publishing/publishing-to-google-play/) in Codemagic to upload your app bundle to one of Google Play tracks.
+4. [Enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423) to have Google sign the .apk(s) that are generated from the app bundle during installation.
+
+When you enroll an app into app signing by Google Play, Google will manage your app's signing key for you and use it to sign the .apk for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
+
+### Building for the web
+
+Codemagic can detect your Flutter web project if it contains a `web` folder. To build for the web, select **Web** as the build platform in **App settings > Build > Build for platforms**.
+
+{{<notebox>}}
+Flutter for web is currently in beta. Make sure to select channel Beta or a later Flutter version to build for web.
+{{</notebox>}}
+
+At the end of a successful build, Codemagic generates a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](../publishing/publishing-to-codemagic-static-pages/). You can also use custom scripts to publish to third-party hosting sites.
+
+### Building for desktop
+
+You can use Codemagic to build Flutter desktop apps for macOS and Linux. Building Windows apps is not yet supported. 
+
+{{<notebox>}}
+Read more about Flutter's desktop support and the required settings for enabling it in Flutter's wiki about [desktop shells](https://github.com/flutter/flutter/wiki/Desktop-shells).
+{{</notebox>}}
+
+Codemagic can detect your Flutter desktop project if it meets the following conditions:
+
+- The project contains a `macos` folder for the macOS application
+- The project contains a `linux` folder for the Linux application
+
+To build for the **macOS** or **Linux**, select the respective option in **App settings > Build > Build for platforms**. Make sure to also select a Flutter version that has desktop support available.
+
+At the end of a successful build, Codemagic generates a downloadable `.zip` file for each desktop platform. The application can be installed on your machine, but since it is built without code signing, you may have to allow installating applications from unidentified developers.
+
+### Running tests only
+
+In some cases you may want to run only tests and not build the entire project, e.g. when you're triggering a build on pull request update. To do so, [enable testing](../testing/running-automated-tests), and then in **App settings > Build > Build for platforms**, select **Run tests only**. Codemagic will then build the workflow until the testing step and skip building the app.
+
+If tests fail, the status of the build will be “failed” and you'll receive an email about failing tests. If you have publishing to Slack configured, you'll receive notifications on build status updates.
+
+## Starting builds
+
+Builds can be started manually from Codemagic or automatically in response to events in the repository, see more about [automatic build triggering](./automatic-build-triggering) here. 
+
+You can start builds manually by clicking **Start new build** in app settings or build overview. On clicking the button, the **Specify build configuration** popup is displated where you can select the branch and the [workflow](./creating-workflows) to build. If you also have the `codemagic.yaml` file available in the repository, you can click **Select workflow from codemagic.yaml** in the popup to select a YAML workflow to build.
+
+For information about using API calls to trigger builds, look [here](../rest-api/overview/).
+
+## Multiple Flutter projects in one repository
+
+Codemagic supports monorepos and is able to detect multiple Flutter projects in a repository or projects not in the repository root provided that each project has its `pubspec.yaml` file with `flutter` dependency.
+
+Initially, the only project path for every application is `.` — the root of the repository. The repository is scanned for Flutter projects during the first build, and if multiple projects are found, the first build is run for the project with the highest number of platforms available (presence of `android`, `ios` etc. directories). 
+
+After the first build, you can select the project for building in **App settings > Build > Project path** dropdown. 
+
+If you have changed the location of the project in the repository, renamed its parent directory or added new projects, you may have to rescan project paths by clicking the icon next to the **Project path** dropdown field. Then select the branch you want to search for projects and click **Rescan**, which will update the project paths for the chosen branch.
+
+{{<notebox>}}
+Rescanning is not available for repositories added from a custom source. Instead, project paths are scanned on each new build and are updated on change.
+{{</notebox>}}
\ No newline at end of file
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 5a142c9..bbd7c15 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -1,13 +1,13 @@
 ---
-description: Add your Flutter app wherever it is hosted
-title: Adding apps from custom sources
-weight: 4
+description: Add your mobile app from any private or public repository
+title: Adding repositories
+weight: 2
 ---
 
-You can add apps from public or private Git-based repositories. 
+When you sign up via OAuth, Codemagic already has access to the repositories you have available on your Git provider account. However, you can add apps from public or private as well as from cloud-based or self-hosted Git repositories. 
 
 {{<notebox>}}
-* Note that webhooks for automatic build triggering need to be [set up manually](../building/automatic-build-triggering/#setup-webhooks-manually).
+* Note that webhooks for automatic build triggering need to be [created manually](../building/webhooks).
 {{</notebox>}}
 
 ## Connecting repository via HTTP/HTTPS
@@ -34,7 +34,7 @@ Your app will be then listed on the Applications page and you can then continue
     **Alternatively**, you can click **Generate key pair** and have Codemagic create an SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
 4. Click **Add application**.
 
-Your app will be then listed on the Applications page and you can then continue configuring your project by clicking on **Configure for building**.
+You can then continue configuring your project by selecting a starter workflow.
 
 {{<notebox>}}If you need to update the private key in Codemagic, you can upload or generate a new one in **App settings > Repository settings > Repository access settings**.{{</notebox>}}
 
diff --git a/content/getting-started/automatic-language-detection.md b/content/getting-started/automatic-language-detection.md
deleted file mode 100644
index 70b5d6f..0000000
--- a/content/getting-started/automatic-language-detection.md
+++ /dev/null
@@ -1,8 +0,0 @@
----
-title: Automatic language detection
-weight: 8
----
-
-Codemagic enables you to sort the list of apps detected in your repositories based on the repository language so you can display your Flutter apps only. This can be done if your apps have **Dart** set as the project language in GitHub/Bitbucket. While GitHub determines your project language automatically based on the files and directories in your repository, the project language for apps hosted on Bitbucket has to be set manually in the repository settings to benefit from this sorting option.
-
-GitLab projects cannot be sorted by language as information about the programming language of GitLab projects is not available to Codemagic.
diff --git a/content/getting-started/building-a-flutter-app.md b/content/getting-started/building-a-flutter-app.md
new file mode 100644
index 0000000..68e8854
--- /dev/null
+++ b/content/getting-started/building-a-flutter-app.md
@@ -0,0 +1,104 @@
+---
+title: Building a Flutter app
+description: Building a Flutter app with YAML.
+weight: 6
+aliases:
+  - '../yaml/building-a-flutter-app'
+---
+
+{{<notebox>}}
+For documentation on building Flutter projects using the settings in Codemagic UI, please refer to [**Building Flutter apps via UI**](../flutter/flutter-projects).
+{{</notebox>}}
+
+With `codemagic.yaml`, you can use Codemagic to build, test and publish Flutter apps, widgets, Flutter or Dart packages. The necessary build commands go under `scripts` in the [overall architecture](../getting-started/yaml#template) of the `codemagic.yaml` file. You can find some examples for building the most common types of Flutter projects below.
+
+## Exporting configuration from UI
+
+You can get started with YAML easily if you have an existing project set up in Codemagic UI. 
+
+1. Navigate to your app settings.
+2. In the **Configuration as code** section on the right sidebar, click **Download configuration**.
+
+{{<notebox>}}
+
+The YAML feature currently has the following **limitations**:
+
+* Exporting configuration from UI is supported for Flutter-based Android, iOS and web apps.
+* The exported configuration is not identical to the settings in the UI and lacks the configuration for some features, such as **Stop build if tests fail** and publishing to Codemagic Static Pages.
+
+{{</notebox>}}
+
+## Building with YAML
+
+In order to use `codemagic.yaml` for build configuration in Codemagic, it has to be committed to your repository. The file must be located in the root directory of the repository. When detected in the repository, `codemagic.yaml` is automatically used for configuring builds that are triggered in response to the events defined in the file. Any configuration in the UI is ignored.
+
+In order to use `codemagic.yaml` for manual builds, you must select the workflow to build from `codemagic.yaml`:
+
+1. Navigate to your app settings and click **Start new build**. 
+3. In the **specify build configuration** popup, select the branch where your `codemagic.yaml` file is located.
+4. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml**.
+5. Then select the workflow to build from the **Select workflow from codemagic.yaml** dropdown.
+6. Finally, click **Start new build** to start the build.
+
+## Android builds
+
+Set up local properties
+
+    - echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
+
+### Building .apk
+
+    - flutter build apk --release
+
+### Building universal .apk(s) from existing app bundle(s) with user-specified keys
+
+If your app settings in Codemagic have building Android App Bundles enabled, we will automatically include a script for generating a signed `app-universal.apk` during the YAML export. If you are creating a YAML file from a scratch, add the following script to receive the .apk file(s):
+
+    - android-app-bundle build-universal-apk \
+        --bundle 'project_directory/build/**/outputs/**/*.aab' \
+        --ks /tmp/keystore.keystore \
+        --ks-pass $CM_KEYSTORE_PASSWORD \
+        --ks-key-alias $CM_KEY_ALIAS_USERNAME \
+        --key-pass $CM_KEY_ALIAS_PASSWORD
+
+Please make sure to wrap the `--bundle` pattern in single quotes. If `--bundle` option is not specified, default glob pattern `**/*.aab` will be used.
+
+More information about Android code signing can be found [here](../code-signing-yaml/signing/#setting-up-code-signing-for-android).
+
+{{<notebox>}}
+Codemagic uses the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) utility to build universal .apk files from Android App Bundles.
+{{</notebox>}}
+
+## iOS builds
+
+### Building an unsigned application .app
+
+      - flutter build ios --debug --no-codesign
+
+### Building a signed iOS application archive .ipa
+
+{{<notebox>}}
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
+{{</notebox>}}
+
+      - xcode-project use-profiles
+      - xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
+
+{{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}}
+
+## Web builds
+
+    - name: Build web
+      script: |
+        flutter config --enable-web
+        flutter build web --release
+        cd build/web
+        7z a -r ../web.zip ./*
+
+## Testing, code signing and publishing a Flutter app
+
+To test, code sign and publish a Flutter app:
+
+* Testing examples for a flutter app can be found [here](../testing-yaml/testing/#flutter-test).
+* All iOS and Android applications need to be signed before release. Different script examples are available [here](../publishing-yaml/distribution/).
+* All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with [custom scripts](../getting-started/yaml#scripts). Script examples for different options are available [here](../publishing-yaml/distribution/#publishing-a-flutter-package-to-pubdev).
diff --git a/content/getting-started/building-a-native-android-app.md b/content/getting-started/building-a-native-android-app.md
new file mode 100644
index 0000000..191c971
--- /dev/null
+++ b/content/getting-started/building-a-native-android-app.md
@@ -0,0 +1,106 @@
+---
+title: Building a native Android app
+description: Building an Android app with YAML.
+weight: 4
+aliases:
+  - '../yaml/building-a-native-android-app'
+---
+
+## Setting up an Android project
+
+The apps you have available on Codemagic are listed on the Applications page. See how to add additional apps [here](./adding-apps-from-custom-sources).
+
+1. On the Applications page, click **Set up build** next to the app you want to start building. 
+2. Select **Android App** as the starter workflow.
+3. Download the example configuration for Android App or copy it to clipboard.
+4. Then edit the configuration file to adjust it to your project needs and commit it to the root of your repository.
+    * For an overview about using `codemagic.yaml`, please refer [here](./yaml). 
+    * Read more about adding configuration for [testing](../testing-yaml/testing), [code signing](../code-signing-yaml/signing) and [publishing](../publishing-yaml/distribution).
+    * See the full Android workflow example [below](#android-workflow-example).
+5. Back in app settings in Codemagic, scan for the `codemagic.yaml` file by selecting a **branch** to scan and clicking the **Check for configuration file** button at the top of the page. Note that you can have different configuration files in different branches.
+6. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml** and select the **workflow** to build.
+7. Finally, click **Start new build** to build the app.
+
+{{<notebox>}}
+**Tip**
+
+Note that you need to set up a [webhook](../building/webhooks) for automatic build triggering. Click the **Create webhook** button on the right sidebar in app settings to add a webhook (not available for apps added via SSH/HTTP/HTTPS).
+
+{{</notebox>}}
+
+## Building an Android app
+
+The necessary command for building native Android application goes under `scripts` in the [overall architecture](../getting-started/yaml/#template) in the `codemagic.yaml` file. For Android (built with gradle), the script looks like this:
+
+    - ./gradlew build
+
+## Testing, code signing and publishing an Android app
+
+To test, code sign and publish an Android app:
+
+* The code for testing an Android app also goes under `scripts`. A few examples of testing can be found [here](../testing-yaml/testing).
+* All Android applications need to be signed before release. For Gradle code signing configuration refer to the [documentation](../code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing). More information about code signing with YAML in general is [here](../code-signing-yaml/signing).
+* All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/#publishing).
+
+## Android workflow example
+
+The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
+
+    workflows:
+      android-workflow:
+        name: Android Workflow
+        max_build_duration: 60
+        instance_type: mac_pro
+        environment:
+          vars:
+            CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
+            CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
+            CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
+            CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
+          node: latest
+        triggering:
+          events:
+            - push
+            - tag
+            - pull_request
+          branch_patterns:
+            - pattern: release
+              include: true
+              source: true
+        scripts:
+          - name: Set up local properties
+            script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/local.properties"
+          - name: Set up key.properties file for code signing
+            script: |
+              echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+              cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
+              storePassword=$CM_KEYSTORE_PASSWORD
+              keyPassword=$CM_KEY_ALIAS_PASSWORD
+              keyAlias=$CM_KEY_ALIAS_USERNAME
+              storeFile=/tmp/keystore.keystore
+              EOF
+          - name: Build Android app
+            script: ./gradlew assembleRelease
+        artifacts:
+          - app/build/outputs/**/**/*.apk
+        publishing:
+          google_play:
+            credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
+            track: internal
+
+{{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle`. {{</notebox>}}
+
+Incrementing the version code can be done as follows:
+
+```
+    android {
+        ...
+        
+        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
+        defaultConfig {
+            ...
+            versionCode appVersionCode
+            ...
+        }
+    }
+```
\ No newline at end of file
diff --git a/content/yaml/building-a-native-ios-app.md b/content/getting-started/building-a-native-ios-app.md
similarity index 61%
rename from content/yaml/building-a-native-ios-app.md
rename to content/getting-started/building-a-native-ios-app.md
index 784e476..94c3144 100644
--- a/content/yaml/building-a-native-ios-app.md
+++ b/content/getting-started/building-a-native-ios-app.md
@@ -1,10 +1,12 @@
 ---
 title: Building a native iOS app
 description: Building an iOS app with YAML.
-weight: 4
+weight: 5
+aliases:
+  - '../yaml/building-a-native-ios-app'
 ---
 
-With `codemagic.yaml`, you can use Codemagic to build, test and publish native iOS apps. You can read more about how to use `codemagic.yaml` and see the structure of the file [here](../yaml/yaml).
+With `codemagic.yaml`, you can use Codemagic to build, test and publish native iOS apps. You can read more about how to use `codemagic.yaml` and see the structure of the file [here](../getting-started/yaml).
 
 {{<notebox>}}
 Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
@@ -15,11 +17,11 @@ Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/
 For building an unsigned iOS app (.app), you need to run the following command in the scripts section:
 
     scripts:
-        - xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" \
-                           -scheme "MyScheme" \
-                           CODE_SIGN_INDENTITY="" \
-                           CODE_SIGNING_REQUIRED=NO \
-                           CODE_SIGNING_ALLOWED=NO
+      - xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" \
+                         -scheme "MyScheme" \
+                         CODE_SIGN_INDENTITY="" \
+                         CODE_SIGNING_REQUIRED=NO \
+                         CODE_SIGNING_ALLOWED=NO
 
 If you don't have a workspace, use `-project "MyXcodeProject.xcodeproj"` instead of the `-workspace "MyXcodeWorkspace.xcworkspace"` option.
 
@@ -46,9 +48,9 @@ Please check [Codemagic CLI tools documentation](https://github.com/codemagic-ci
 By default, your artifacts will be generated into `build/ios/ipa` but you can specify a different location using the [`--ipa-directory`](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/build-ipa.md#--ipa-directoryipa_directory) option. The Xcode build log can be made available with the `/tmp/xcodebuild_logs/*.log` pattern and the dSYM file will be still available at the default Xcode path.
 
     artifacts:
-        - build/ios/ipa/*.ipa
-        - /tmp/xcodebuild_logs/*.log
-        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+      - build/ios/ipa/*.ipa
+      - /tmp/xcodebuild_logs/*.log
+      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
 
 {{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}} 
 
@@ -56,65 +58,58 @@ By default, your artifacts will be generated into `build/ios/ipa` but you can sp
 
 To test, code sign and publish an iOS app:
 
-* The code for testing an iOS app also goes under `scripts`, before build commands. An example for testing an iOS app can be found [here](../yaml/testing/#native-ios).
-* All iOS applications need to be signed before release. A full example of iOS code singing with YAML is available [here](../yaml/distribution).
-* All generated artifacts can be published to external services. The available integrations currently are email, Slack and App Store Connect. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
+* The code for testing an iOS app also goes under `scripts`, before build commands. An example for testing an iOS app can be found [here](../testing-yaml/testing/#native-ios).
+* All iOS applications need to be signed before release. A full example of iOS code singing with YAML is available [here](../code-signing-yaml/signing).
+* All generated artifacts can be published to external services. The available integrations currently are email, Slack and App Store Connect. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/#publishing).
 
 ## iOS workflow example
 
 The following example shows a workflow that can be used to publish your iOS app to App Store Connect.
 
     workflows:
-        ios-workflow:
+      ios-workflow:
         name: ios_workflow
         environment:
-            vars:
+          vars:
             XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # PUT YOUR WORKSPACE NAME HERE
             XCODE_SCHEME: "YOUR_SCHEME_NAME" # PUT THE NAME OF YOUR SCHEME HERE
             CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
             CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
             CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
-            xcode: latest
-            cocoapods: default
+          xcode: latest
+          cocoapods: default
         triggering:
-            events:
+          events:
             - push
-            branch_patterns:
+          branch_patterns:
             - pattern: master
-                include: true
-                source: true
+              include: true
+              source: true
         scripts:
-            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+          - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+            script: keychain initialize
+          - name: Set up Provisioning profiles from environment variables
             script: |
-                keychain initialize
-            - name: Set up Provisioning profiles from environment variables
-              script: |
-                PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-                mkdir -p "$PROFILES_HOME"
-                PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-                echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
-                echo "Saved provisioning profile $PROFILE_PATH"
-            - name: Set up signing certificate
-              script: |
-                echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-                keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
-            - name: Increment build number
-              script: |
-                #!/bin/sh
-                set -e
-                set -x
-                cd $FCI_BUILD_DIR
-                agvtool new-version -all $(($BUILD_NUMBER +1))
-            - name: Set up code signing settings on Xcode project
-              script: |
-                xcode-project use-profiles
-            - name: Build ipa for distribution
-              script: |
-                xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
+              PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+              mkdir -p "$PROFILES_HOME"
+              PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+              echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+              echo "Saved provisioning profile $PROFILE_PATH"
+          - name: Set up signing certificate
+            script: |
+              echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+              keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+          - name: Increment build number
+            script: agvtool new-version -all $(($BUILD_NUMBER +1))
+          - name: Set up code signing settings on Xcode project
+            script: xcode-project use-profiles
+          - name: Build ipa for distribution
+            script: xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
         artifacts:
-            - build/ios/ipa/*.ipa
-            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+          - build/ios/ipa/*.ipa
+          - /tmp/xcodebuild_logs/*.log
+          - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
         publishing:
-            app_store_connect:                 
+          app_store_connect:                 
             apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE  
             password: Encrypted(...) # PUT YOUR APP-SPECIFIC-PASSWORD HERE https://support.apple.com/en-us/HT204397
diff --git a/content/getting-started/building-a-react-native-app.md b/content/getting-started/building-a-react-native-app.md
new file mode 100644
index 0000000..d8f3249
--- /dev/null
+++ b/content/getting-started/building-a-react-native-app.md
@@ -0,0 +1,169 @@
+---
+title: Building a React Native app
+description: Building a React Native app with YAML.
+weight: 7
+aliases: 
+    - '../yaml/building-a-react-native-app'
+---
+
+React Native is a cross-platform solution that allows you to build apps for both iOS and Android faster using a single language. When working with YAML, the basics are still the same, the build scripts are added to the `scripts` section in the [overall architecture](../getting-started/yaml#template).
+
+## Android
+
+Set up local properties
+
+    - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+
+Building an Android application:
+
+    - cd android && ./gradlew build
+
+## iOS
+
+{{<notebox>}}
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
+{{</notebox>}}
+
+Script for building an iOS application:
+
+    - xcode-project build-ipa --workspace "ios/MyReact.xcworkspace" --scheme "MyReact"
+
+{{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}} 
+
+## Testing, code signing and publishing
+
+To test and publish a React Native app:
+
+* The code for testing a React Native app also goes under `scripts`, before build commands. An example for testing a React Naive app can be found [here](../testing-yaml/testing/#react-native-unit-test).
+* All iOS and Android applications need to be signed before release. Different script examples are available [here](../code-signing-yaml/signing/).
+* All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../publishing-yaml/distribution/#publishing).
+
+## iOS workflow example
+
+The following example shows a workflow that can be used to publish your iOS app to App Store Connect.
+
+    workflows:
+      ios-workflow:
+        name: iOS Workflow
+        max_build_duration: 60
+        instance_type: mac_pro
+        environment:
+          vars:
+            XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # YOUR WORKSPACE NAME HERE
+            XCODE_SCHEME: "YOUR_SCHEME_NAME" # THE NAME OF YOUR SCHEME HERE
+            CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
+            CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
+            CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
+          node: latest
+          xcode: latest
+          cocoapods: default
+        triggering:
+          events:
+            - push
+            - tag
+            - pull_request
+          branch_patterns:
+            - pattern: develop
+              include: true
+              source: true
+        scripts:
+          - name: Install npm dependencies
+            script: npm install
+          - name: Install CocoaPods dependencies
+            script: |
+                cd ios 
+                pod repo update
+                pod install
+          - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+            script: keychain initialize
+          - name: Set up Provisioning profiles from environment variables
+            script: |
+              PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+              mkdir -p "$PROFILES_HOME"
+              PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+              echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+              echo "Saved provisioning profile $PROFILE_PATH"
+          - name: Set up signing certificate
+            script: |
+              echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+              keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+          - name: Increment build number
+            script: cd ios && agvtool new-version -all $(($BUILD_NUMBER +1))
+          - name: Set up code signing settings on Xcode project
+            script: xcode-project use-profiles
+          - name: Build ipa for distribution
+            script: xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme $XCODE_SCHEME
+        artifacts:
+          - build/ios/ipa/*.ipa
+          - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM            
+        publishing:
+          app_store_connect:                 
+            apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE
+            password: Encrypted(...) # THE ENCRYPTED APP-SPECIFIC PASSWORD GOES HERE
+
+
+## Android workflow example
+
+The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
+
+    workflows:
+      android-workflow:
+        name: Android Workflow
+        max_build_duration: 60
+        instance_type: mac_pro
+        environment:
+          vars:
+            CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
+            CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
+            CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
+            CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
+          node: latest
+        triggering:
+          events:
+            - push
+            - tag
+            - pull_request
+          branch_patterns:
+            - pattern: release
+              include: true
+              source: true
+        scripts:
+          - name: Install npm dependencies
+            script: npm install
+          - name: Set up local properties
+            script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+          - name: Set up key.properties file for code signing
+            script: |
+              echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+              cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
+              storePassword=$CM_KEYSTORE_PASSWORD
+              keyPassword=$CM_KEY_ALIAS_PASSWORD
+              keyAlias=$CM_KEY_ALIAS_USERNAME
+              storeFile=/tmp/keystore.keystore
+              EOF
+          - name: Build Android app
+            script: cd android && ./gradlew assembleRelease
+        artifacts:
+          - android/app/build/outputs/**/**/*.apk
+        publishing:
+          google_play:
+            credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
+            track: internal
+
+    
+{{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle` {{</notebox>}}
+
+Incrementing the version code can be done as follows:
+
+```
+    android {
+        ...
+        
+        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
+        defaultConfig {
+            ...
+            versionCode appVersionCode
+            ...
+        }
+    }
+```
\ No newline at end of file
diff --git a/content/yaml/building_a_native_app_with_flutter_module.md b/content/getting-started/building_a_native_app_with_flutter_module.md
similarity index 97%
rename from content/yaml/building_a_native_app_with_flutter_module.md
rename to content/getting-started/building_a_native_app_with_flutter_module.md
index c1ddf33..966bde1 100644
--- a/content/yaml/building_a_native_app_with_flutter_module.md
+++ b/content/getting-started/building_a_native_app_with_flutter_module.md
@@ -1,7 +1,9 @@
 ---
 title: Building a native app with a Flutter module
 description: Building a native iOS or Android app with a Flutter module
-weight: 6
+weight: 8
+aliases:
+  - '../yaml/building_a_native_app_with_flutter_module'
 ---
 
 ## Add-to-app
diff --git a/content/getting-started/codemagic-github-app.md b/content/getting-started/codemagic-github-app.md
deleted file mode 100644
index db3fd27..0000000
--- a/content/getting-started/codemagic-github-app.md
+++ /dev/null
@@ -1,50 +0,0 @@
----
-description: Configure repository access and customize your CI flow
-title: Codemagic GitHub app (beta)
-weight: 6
----
-
-Codemagic CI/CD GitHub app is an integration with GitHub which enables you to make the most out of the two services for your CI flow. The GitHub app requires less permissions than the OAuth integration and enables you to grant access to select repositories only.
-
-## Installing Codemagic CI/CD GitHub app
-
-There are two options for installing the Codemagic GitHub app.
-
-**Option 1: Install Codemagic CI/CD on GitHub**
-
-1. Log in to your GitHub account.
-2. Open the [Codemagic CI/CD app on Marketplace](https://github.com/marketplace/codemagic-ci-cd).
-3. Scroll down and click **Install it for free**.
-4. Review your order and click **Complete order and begin installation**.
-5. Next, select the repositories to which you want to give Codemagic access and click **Install & Authorize** to finish installation.
-
-You will then be logged in and redirected to your Applications page on Codemagic so that you can start building right away. The next time you want to log in to Codemagic via the GitHub app, you can click the **Log in with GitHub App** link on the login page.
-
-You can change repository access settings in Codemagic CI/CD app on GitHub anytime by navigating to Settings > Applications > Installed GitHub Apps > Codemagic CI/CD, or by going to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd).
-
-**Option 2. Sign up to Codemagic using GitHub app**
-
-1. Click **Join using GitHub App** at [codemagic.io/signup](https://codemagic.io/signup). You will be authorized via GitHub without granting any access to your repositories. 
-2. In Codemagic, go to User settings > Integrations and click **Install GitHub App**. You will be redirected to GitHub to select the repositories you want to grant access to and finish the installation. **Note** that you can also proceed without installing the app. This way, you can only build apps shared with you in a team you belong to or add apps from custom sources.
-
-## Revoking access to previously shared repositories
-
-The settings you configure in Codemagic CI/CD GitHub app prevail over the GitHub OAuth integration settings.
-
-If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter. Apps connected through your Bitbucket or GitLab account as well as apps added from custom sources will remain available as is.
-
-### Team apps
-
-The restrictions you configure in GitHub app apply to the repositories you share in your team on Codemagic only if you don't have the GitHub integration enabled for your team in Team settings > Team integrations.
-
-If you have enabled the GitHub integration for your team, the connected account makes use of OAuth permissions and the restrictions you configure in GitHub app do not apply.
-
-{{<notebox>}}
-Currently, Codemagic has no way of knowing whether it has access to team apps before the build is started. Due to this, team apps to which you have revoked access in the GitHub app may not appear grayed out in the UI.
-{{</notebox>}}
-
-## Disabling Codemagic CI/CD GitHub app integration
-
-You can disable the Codemagic CI/CD GitHub app integration in Codemagic by navigating to User settings > Integrations > GitHub App and clicking **Disconnect**. This annuls all settings configured for the Codemagic app in GitHub but won't delete your buid history.
-
-The GitHub app integration is also disabled when you **uninstall** the Codemagic CI/CD app in GitHub. You can still log in to Codemagic with the GitHub app and see your build history if Codemagic CI/CD remains an **authorized GitHub app** in GitHub. Please note that unless you have other active integrations (e.g. GitHub, Bitbucket or GitLab OAuth integration), your Codemagic account will be deleted in two weeks. You can cancel account deletion by navigating to User settings > Delete account and clicking **Cancel deletion** before the two weeks are up.
\ No newline at end of file
diff --git a/content/getting-started/flutter-project-requirements.md b/content/getting-started/flutter-project-requirements.md
deleted file mode 100644
index 8433022..0000000
--- a/content/getting-started/flutter-project-requirements.md
+++ /dev/null
@@ -1,11 +0,0 @@
----
-description:
-  Ensure your Flutter project is ready for continuous integration and continuous delivery
-title: Flutter project requirements
-weight: 9
----
-
-To ensure that your app is ready for implementing continuous integration and continuous delivery and for automating the release process with Codemagic, please follow these guides in Flutter documentation:
-
-- [Preparing an Android app for release](https://flutter.dev/docs/deployment/android)
-- [Preparing an iOS app for release](https://flutter.dev/docs/deployment/ios)
diff --git a/content/getting-started/github-organization-accounts.md b/content/getting-started/github-organization-accounts.md
deleted file mode 100644
index 778e398..0000000
--- a/content/getting-started/github-organization-accounts.md
+++ /dev/null
@@ -1,14 +0,0 @@
----
-description: Grant your GitHub organization access to Codemagic CI/CD oAuth app
-title: GitHub organization accounts
-weight: 7
----
-
-Organizations can restrict access to third-party OAuth applications. As a member, you can request that organization admins authorize the application for use in that organization.
-
-1. In your GitHub settings, navigate to **Organization settings** > **Third-party access**.
-2. If you don't see Codemagic listed there, go to **Personal settings** > **Applications** > **Authorized OAuth Apps**.
-3. Click on the Codemagic app.
-4. Under **Organization access**, click **Request access** > **Request approval from owners**.
-
-Read more about [GitHub organizations and OAuth app restrictions](https://help.github.com/en/articles/authorizing-oauth-apps#oauth-apps-and-organizations).
diff --git a/content/getting-started/setting-up.md b/content/getting-started/setting-up.md
deleted file mode 100644
index b624ecb..0000000
--- a/content/getting-started/setting-up.md
+++ /dev/null
@@ -1,79 +0,0 @@
----
-description: How to set up your projects to build, test and publish them with Codemagic
-title: Setting up projects
-weight: 2
-aliases:
- - /getting-started/getting-started
----
-
-Codemagic allows you to build, test and publish a host of different applications that can be configured via GUI (Flutter projects only) or using [`codemagic.yaml`](../building/yaml) (all projects). The list of available projects is as follows: 
-* Flutter apps (Android, iOS, web, macOS, Linux)
-* Flutter widgets
-* Flutter packages/plugins
-* native Android and iOS apps
-* native apps containing Flutter modules
-* React Native apps
-
-Upon login, Codemagic will automatically display the list of apps in the [connected repositories](./signup#connecting-several-repository-accounts). If you want to build an app that is not available through the account you signed up with, you can [add the app from custom source](./adding-apps-from-custom-sources).
-
-{{<notebox>}}
-* If you can't see your app listed, it may be because you don't have sufficient permissions or Codemagic has no access to your team or organization. Codemagic OAuth app requires read/write permission to build your app. Contact your repository admin to review the setting for GitHub organisations, see this [link](./github-organization-accounts).
-* You can add your project with read only access via [GitHub app](./codemagic-github-app) or [SSH connection](./adding-apps-from-custom-sources).
-* If your app requires accessing private Git submodules or dependencies, you need to give Codemagic access to them in order to build successfully. See how to do that [here](../building/access-private-git-submodules). 
-
-{{</notebox>}}
-
-## Running the first build
-
-### Flutter project
-
-If it's a **Flutter project**, you can configure your project by clicking **Set up build**. Then you have to select your app type (**Flutter app**) and on the application settings page you can click **Start new build**. This will run a debug build of your master branch for the available platforms using the latest stable version of Flutter. [Tests](../testing/running-automated-tests) are disabled by default. If you want to change the preconfigured settings, e.g. the Flutter or Xcode version, you can configure everything prior to building. 
-
-> Note that if the repository contains multiple projects, you can select the right project after the first build, read more about it [below](#multiple-projects-in-one-repository).
-
-### Non-Flutter project
-
-If it's a **non-Flutter project**, e.g. a native Android or iOS app or an app containing Flutter modules, follow these steps: 
-1. Start your project by clicking **Set up build**. 
-2. Choose a suitable project type. 
-3. Download or copy the configuration file example.
-4. Use this file example to create a [`codemagic.yaml`](../building/yaml) file for the build configuration. Make all the necessary changes in your `codemagic.yaml` file to match your project. For example, if you have private dependencies, give Codemagic the necessary access rights and include these dependencies in the configuration file (read more about it [here](../building/access-private-git-submodules/)). 
-5. When you are done, commit the configuration file to your repository. The name of the file must be `codemagic.yaml` and it must be located in the `root` directory of the repository.
-6. Choose the branch you pushed it into and click **Check for configuration file**. 
-7. When the system finds the configuration file, click **Start new build**.
-
-{{<notebox>}}
-There will also be an automatic **Getting started guide** that guides you through this process step-by-step.
-{{</notebox>}}
-
-### Monitoring the build
-
-As the build starts, you can monitor the build progress right in your browser and expand each build step for more details.
-
-After the build has finished successfully, you will immediately have **artifacts** available for download. You will also receive the artifacts on the email that was used for the app repository.
-
-## Multiple projects in one repository
-
-Codemagic supports monorepos and is able to detect multiple Flutter projects in a repository or projects not in the repository root provided that each project has its `pubspec.yaml` file with `flutter` dependency.
-
-Initially, the only project path for every application is `.` — the root of the repository. We run scan during the first build and in case of multiple projects, the first build is run for the project with highest number of platforms (presence of `android`, `ios` etc. directories). You can select the project for building from the **Project path** dropdown in the Build section of app settings. If you have changed your project location in the repository, renamed its parent directory or added new projects, try **rescanning project paths**. There is a button for it on the right from the **Project path** dropdown. It asks you, which branch you want to search for projects, and will update the project paths according to the content of the chosen branch.
-
-{{<notebox>}}
-**Rescan** option is not available for repositories added from custom source. Instead, project paths are scanned on each new build and are updated on change.
-{{</notebox>}}
-
-## Next steps
-
-After the initial setup, you can continue to customize how you want Codemagic to build, test and publish your project using either the GUI or `codemagic.yaml`. Note that you can also add custom build steps in the GUI by expanding sections before or after the default build steps visible in App settings. 
-
-Here is a short overview about how to:
-
-* enable [automatic builds](../building/automatic-build-triggering)
-* enable [automated tests](../testing/running-automated-tests)
-* set up [workflows](./creating-workflows) for your project
-* set up code signing for [Android](../code-signing/android-code-signing) and [iOS](../code-signing/ios-code-signing)
-* set up [publishing to Google Play](../publishing/publishing-to-google-play)
-* set up [publishing to App Store Connect](../publishing/publishing-to-app-store)
-* [increment build version](../building/build-versioning)
-
-Before getting started, you might also want to check out the [read-only environment variables](../building/environment-variables) and the list of our [preinstalled software and versions](../releases-and-versions/versions).
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 3846e4e..4739592 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -1,23 +1,59 @@
 ---
-description: Sign up for Codemagic CI/CD
-title: Signup
+description: Sign up to Codemagic CI/CD
+title: Signing up to Codemagic
 weight: 1
+aliases:
+  - '../getting-started/codemagic-github-app'
+  - '../getting-started/github-organization-accounts'
 ---
+
+You can sign up to Codemagic using a GitHub, GitLab or Bitbucket account and then add apps from any self-hosted or cloud-based Git repository, see [Adding repositories](./adding-apps-from-custom-sources).
+
 ## Sign up via OAuth
 
-You can sign up with your [GitHub](https://github.com/), [GitLab](https://about.gitlab.com/) or [Bitbucket](https://bitbucket.org/) account via OAuth. On signup, Codemagic asks for **read/write** permission to access your repositories and create webhooks for automatic building. You will need to authorize Codemagic in order to connect your GitHub/GitLab/Bitbucket account to your Codemagic account.
+Instead of creating a separate account for Codemagic, you can use your [GitHub](https://github.com/), [GitLab](https://about.gitlab.com/) or [Bitbucket](https://bitbucket.org/) account to sign up via OAuth. On signup, Codemagic asks for **read/write** permission to access your repositories and create webhooks for automatic building. You will need to authorize Codemagic in order to connect your GitHub/GitLab/Bitbucket account to your Codemagic account.
 
-{{<notebox>}}
+### GitHub organization accounts
 
-Please be assured that Codemagic will not store any of your source code or use your data for any other purpose than providing continuous integration and delivery service to you.
+Organizations can restrict access to third-party OAuth applications. As a member, you can request that organization admins authorize the application for use in that organization.
 
-{{</notebox>}}
+1. In your GitHub settings, navigate to **Organization settings** > **Third-party access**.
+2. If you don't see Codemagic listed there, go to **Personal settings** > **Applications** > **Authorized OAuth Apps**.
+3. Click on the Codemagic app.
+4. Under **Organization access**, click **Request access** > **Request approval from owners**.
+
+Read more about [GitHub organizations and OAuth app restrictions](https://help.github.com/en/articles/authorizing-oauth-apps#oauth-apps-and-organizations).
 
 ## Sign up via Codemagic GitHub app
 
-You can become a Codemagic user by installing the Codemagic CI/CD app on GitHub or clicking **Join using GitHub App** at [https://codemagic.io/signup](https://codemagic.io/signup). The GitHub app has several advantages over the OAuth integration as you can grant Codemagic access to select repositories and only **read** access to your code is required. For details and installation instructions, see the [Codemagic GitHub app](./codemagic-github-app) section in our documentation.
+The GitHub app integration has several advantages over the OAuth integration as you can grant Codemagic access to select repositories and only **read** access to your code is required.
+
+1. Click **Join using GitHub App** at [codemagic.io/signup](https://codemagic.io/signup). You will be authorized via GitHub without granting any access to your repositories. 
+2. In Codemagic, go to **User settings > Integrations** and click **Install GitHub App**. You will be redirected to GitHub to select the repositories you want to grant access to and finish the installation. 
+
+You can change repository access settings in Codemagic CI/CD app on GitHub anytime by navigating to **Settings > Applications > Installed GitHub Apps > Codemagic CI/CD**, or by going to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd). Note that the settings you configure in Codemagic CI/CD GitHub app prevail over the GitHub OAuth integration settings.
+
+### Revoking access to previously shared repositories
+
+If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter. Apps connected through your Bitbucket or GitLab account as well as apps added from custom sources will remain available as is.
+
+### Team apps
+
+The restrictions you configure in GitHub app apply to the repositories you share in your Codemagic team only if you don't have the GitHub integration enabled for your team in **Team settings > Team integrations**.
+
+If you have enabled the GitHub integration for your team, the connected account makes use of OAuth permissions and the restrictions you configure in GitHub app do not apply.
+
+{{<notebox>}}
+Currently, Codemagic has no way of knowing whether it has access to team apps before the build is started. Due to this, team apps to which you have revoked access in the GitHub app may not appear grayed out in the UI.
+{{</notebox>}}
+
+### Disabling Codemagic CI/CD GitHub app integration
+
+You can disable the Codemagic CI/CD GitHub app integration in Codemagic by navigating to **User settings > Integrations > GitHub App** and clicking **Disconnect**. This annuls all settings configured for the Codemagic app in GitHub but won't delete your buid history.
+
+The GitHub app integration is also disabled when you **uninstall** the Codemagic CI/CD app in GitHub. You can still log in to Codemagic with the GitHub app and see your build history if Codemagic CI/CD remains an **authorized GitHub app** in GitHub. Please note that unless you have other active integrations (e.g. GitHub, Bitbucket or GitLab OAuth integration), your Codemagic account will be deleted in two weeks. You can cancel account deletion by navigating to **User settings > Delete account** and clicking **Cancel deletion** before the two weeks are up.
 
-## Connecting several repository accounts
+## Connecting several repository integrations
 
 You can connect several repository accounts (GitHub, GitHub app, GitLab, Bitbucket) with one Codemagic account.
 
diff --git a/content/yaml/yaml.md b/content/getting-started/yaml.md
similarity index 54%
rename from content/yaml/yaml.md
rename to content/getting-started/yaml.md
index 84f956f..a3c7ba8 100644
--- a/content/yaml/yaml.md
+++ b/content/getting-started/yaml.md
@@ -1,74 +1,55 @@
 ---
-title: Configuration as code (YAML)
+title: Using codemagic.yaml
 description: Customize the build and configure all your workflows in a single file.
-weight: 1
+weight: 3
 aliases:
   - '../building/yaml'
+  - '../yaml/yaml'
 ---
 
-`codemagic.yaml` is an advanced option for customizing the build and configuring all your workflows in a single file. This file can be committed to version control, and when it is detected in the repository it will be referenced to configure the build (instead of using the settings in the UI).
+`codemagic.yaml` is a highly customizable configuration file for setting up your CI/CD pipeline with Codemagic. Configure all your workflows in a single file and commit the file to version control.
 
-{{<notebox>}}
-
-The YAML feature currently has the following **limitations**:
-
-* Exporting configuration from UI is supported for Flutter-based Android, iOS and web apps.
-* The exported configuration is not identical to the settings in UI and lacks the configuration for some features, such as **Stop build if tests fail** and publishing to Codemagic Static Pages.
-
-{{</notebox>}}
-
-## Exporting current configuration as YAML
-
-You can get started with YAML easily if you have an existing project set up on Codemagic. 
-
-1. Navigate to your app settings.
-2. Click **Download configuration** on the right sidebar in the **Configuration as code** section.
+## Building with YAML
 
-Note that in order to use the file for build configuration on Codemagic, it has to be committed to your repository. The name of the file must be `codemagic.yaml` and it must be located in the root directory of the repository.
+In order to use `codemagic.yaml` for build configuration on Codemagic, it has to be committed to your repository. The name of the file must be `codemagic.yaml` and it must be located in the root directory of the repository.
 
-## Encrypting sensitive data
+When detected in repository, `codemagic.yaml` is automatically used for configuring builds that are triggered in response to the events defined in the file, provided that a [webhook](../building/webhooks) is set up. 
 
-During the export, Codemagic automatically encrypts the secret environment variables in your build configuration. 
+Builds can be also started manually by clicking **Start new build** in Codemagic and selecting the branch and workflow to build in the **Specify build configuration** popup.
 
-If you wish to add new environment variables to the YAML file, you can encrypt them via Codemagic UI. 
+## Syntax
 
-1. Navigate to your app settings.
-2. Click **Encrypt environment variables** on the right sidebar in the **Configuration as code** section.
-3. Paste the value of the variable in the field or upload it as a file.
-4. Click **Encrypt**. 
-5. Copy the encrypted value and paste it to the configuration file.
+`codemagic.yaml` follows the traditional [YAML syntax](https://yaml.org/). Here are a few tips and tricks on how to better structure the file.
 
-The encrypted value will look something like this:
+### Section names
 
-```
-Encrypted(Z0FBQUFBQmRyY1FLWXIwVEhqdWphdjRhQ0xubkdoOGJ2bThkNmh4YmdXbFB3S2wyNTN2OERoV3c0YWU0OVBERG42d3Rfc2N0blNDX3FfblZxbUc4d2pWUHJBSVppbXNXNC04U1VqcGlnajZ2VnJVMVFWc3lZZ289)
-```
+For easier reading of the configuration file and build logs, you can divide the scripts into meaningful sections with descriptive names.
 
-{{<notebox>}}Note that when the value is uploaded as a file, it is encoded to `base64`.{{</notebox>}}
+    scripts:
+      - name: Build for iOS         # Name of the section
+        script: flutter build ios   # The script(s) to be run in that section
 
-Writing the base64-encoded environment variable to a file can be done like this:
+### Reusing sections
 
-```
-scripts:
-  - echo $MY_FILE | base64 --decode > my-file.json
-```
+If a particular section would be reused multiple times in the file, e.g. in each workflow, you can avoid repetitions by using **anchors**. This is also convenient when you need to make changes to the code as you would have to edit it in just one place. 
 
-## Building with YAML
+Define the section to be reused by adding `&` in front of it.
 
-When detected in repository, `codemagic.yaml` is automatically used for configuring builds that are triggered in response to the events defined in the file. Any configuration in the UI is ignored.
+    scripts:
+      - &increment_build_number       # Defined section
+        name: Increment build number
+        script: agvtool new-version -all $(($PROJECT_BUILD_NUMBER +1))
 
-You can also use `codemagic.yaml` for manual builds.
+Reuse the defined section elsewhere by adding a `*` in front of it.
 
-1. In your app settings, click **Set up build**. 
-2. Choose a suitable **project type**.
-3. Select a branch in the dropdown on the left of the **Check for configuration file** button.
-4. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml**.
-5. Then select the YAML **workflow**.
-6. Finally, click **Start new build** to build the app.
+    scripts:
+      - script1
+      - *increment_build_number       # Reused section
+      - script3
 
 ## Template
 
-This is the skeleton structure of `codemagic.yaml`:
+This is the skeleton structure of `codemagic.yaml`. Each section along with the configuration options is described in more detail below.
 
     workflows:
       my-workflow:
@@ -99,11 +80,12 @@ This is the skeleton structure of `codemagic.yaml`:
           email:
             recipients:
               - name@example.com
-
+          scripts:
+            - echo 'Post-publish script'
 
 ### Workflows
 
-You can use `codemagic.yaml` to define several workflows for building a project. Each workflow describes the entire build pipeline from triggers to publishing.
+You can use `codemagic.yaml` to define several workflows for building a project. Each workflow describes the entire build pipeline from triggers to publishing. For example, you may want to have separate workflows for developing, testing and publishing the app.
 
     workflows:
       my-workflow:                # workflow ID
@@ -122,7 +104,7 @@ The main sections in each workflow are described below.
 
 ### Environment
 
-`environment:` contains all the environment variables and enables to specify the version of Flutter, Xcode, CocoaPods, Node and npm used for building. This is also where you can add credentials and API keys required for code signing. Make sure to [encrypt the values](#encrypting-sensitive-data) of variables that hold sensitive data. 
+`environment:` contains all the environment variables and enables to specify the version of Flutter, Xcode, CocoaPods, Node and npm used for building. This is also where you can add credentials and API keys required for [code signing](../code-signing-yaml/signing). Make sure to [encrypt the values](../building/encrypting) of variables that hold sensitive data. 
 
     environment:
       vars:             # Define your environment variables here
@@ -132,7 +114,7 @@ The main sections in each workflow are described below.
         # Android code signing
         CM_KEYSTORE: Encrypted(...)
         CM_KEYSTORE_PASSWORD: Encrypted(...)
-        CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+        CM_KEY_ALIAS_PASSWORD: my_key_alias
         CM_KEY_ALIAS_USERNAME: Encrypted(...)
         
         # iOS automatic code signing
@@ -146,8 +128,13 @@ The main sections in each workflow are described below.
         CM_CERTIFICATE_PASSWORD: Encrypted(...)
         CM_PROVISIONING_PROFILE: Encrypted(...)
 
-        # publishing a package to pub.dev
-        CREDENTIALS: Encrypted(...)
+        # Firebase secrets
+        ANDROID_FIREBASE_SECRET: Encrypted(...)
+        IOS_FIREBASE_SECRET: Encrypted(...)
+
+        SSH_KEY_GITHUB: Encrypted(...)     # defining an ssh key used to download private dependencies
+        CREDENTIALS: Encrypted(...)        # publishing a package to pub.dev
+        APP_CENTER_TOKEN: Encrypted(...)   # publishing an application to App Center
 
       flutter: stable   # Define the channel name or version (e.g. v1.13.4)
       xcode: latest     # Define latest, edge or version (e.g. 11.2)
@@ -159,23 +146,36 @@ The main sections in each workflow are described below.
 See the default software versions on Codemagic build machines [here](../releases-and-versions/versions/).
 {{</notebox>}}
 
-
 ### Cache
 
-`cache:` defines the paths to be cached and stored on Codemagic. See the recommended paths for [dependency caching](../building/dependency-caching/).
+`cache:` defines the paths to be cached and stored on Codemagic. For example, you may consider caching the following paths:
+
+| **Path**                                    | **Description**                                  |
+| ------------------------------------------- | ------------------------------------------------ |
+| `$FLUTTER_ROOT/.pub-cache`                  | Dart cache                                       |
+| `$HOME/.gradle/caches`                      | Gradle cache. Note: do not cache `$HOME/.gradle` |
+| `$HOME/Library/Caches/CocoaPods`            | CocoaPods cache                                  |
+
+<br>
+
+{{<notebox>}}
+
+Caching `$HOME/Library/Developer/Xcode/DerivedData` won't help to speed up iOS builds with Xcode 10.2 or later.
+
+{{</notebox>}}
 
     cache:
       cache_paths:
-        - ~/.pub-cache
+        - ~/.gradle/caches
         - ...
 
 ### Triggering
 
 {{<notebox>}}
-You need to set up webhooks in the repository hosting service to enable automatic builds in response to events in the repository. Please refer [here](../building/automatic-build-triggering/#setup-webhooks-manually) for details.
+For automatic build triggering, a webhook in the repository is required. In your app settings, click **Create webhook** on the right sidebar under **Webhooks** to have Codemagic create a webhook. If you need to set up a webhook manually, refer [here](../building/webhooks) for details.
 {{</notebox>}}
 
-`triggering:` defines the events for automatic build triggering and watched branches. If no events are defined, you can start builds only manually. 
+`triggering:` defines the events for automatic build triggering and watched branches. If no events are defined, you can start builds only manually.
 
 A branch pattern can match the name of a particular branch, or you can use wildcard symbols to create a pattern that matches several branches. Note that for **pull request builds**, you have to specify whether the watched branch is the source or the target of the pull request.
 
@@ -198,12 +198,23 @@ To avoid running builds on outdated commits, you can set `cancel_previous_builds
           source: true
       cancel_previous_builds: false  # Set to `true` to automatically cancel outdated webhook builds
 
+{{<notebox>}}For information about using API calls to trigger builds, look [here](../rest-api/overview/).{{</notebox>}}
+
+#### Skipping builds
+
+If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.
+
 ### Scripts
 
-Scripts specify what kind of application is built. This is where you can specify the commands to test, build and code sign your project.
+Scripts specify what kind of application is built. This is where you can specify the commands to [test](../testing-yaml/testing/), build and [code sign](../code-signing-yaml/signing) your project. You can also run shell (`sh`) scripts directly in your `.yaml` file, or run scripts in other languages by defining the language with a shebang line or by launching a script file present in your repository.
+
+When you set `ignore_failure` to `true`, the workflow will continue to run even if the script fails
 
     scripts:
-      - flutter test
+      - echo "single line script"
+      - name: Flutter test
+        script: flutter test
+        ignore_failure: true
       - |
         #!/usr/bin/env python3
 
@@ -213,13 +224,9 @@ Scripts specify what kind of application is built. This is where you can specify
 
 There are example scripts available for building a [Flutter application](./building-a-flutter-app/), [React Native application](./building-a-react-native-app/), [native Android application](./building-a-native-android-app/) or a [native iOS application](./building-a-native-ios-app/).
 
-### Testing
-
-There are two types of tests that users can run when developing mobile apps, unit tests (for testing code) and instrumentation tests (for testing the UI and the application in general). These tests take place in a simulator (iOS) or emulator (Android), depending on the platform. Examples of testing are available [here](./testing/).
-
 ### Artifacts
 
-Configure the paths and names of the artifacts you would like to use in the following steps, e.g. for publishing, or have available for download on the build page. All paths are relative to the clone directory, but absolute paths are supported as well. You can also use environment variables in artifact patterns.
+Configure the paths and names of the artifacts you would like to use in the following steps, e.g. for publishing, or have available for download on the build page. All paths are relative to the clone directory, but absolute paths are supported as well. You can also use [environment variables](../building/environment-variables) in artifact patterns.
 
     artifacts:
       - build/**/outputs/**/*.apk                   # relative path for a project in root directory
@@ -237,6 +244,13 @@ There are several things to keep in mind about patterns:
 
 ### Publishing
 
-Both Android and iOS apps need to be signed before releasing. This confirms the author of the code and guarantees that the code has not been tampered with since it was signed. After code signing, the generated artifacts can be easily published to external services. The available integrations are currently email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Both code singing and publishing is explained [here](./distribution/) in more detail.
-
+This is the section where you can set up publishing to external services. Codemagic has a number of integrations (e.g. email, Slack, Google Play, App Store Connect, GitHub releases) for publishing but you can also use custom scripts to publish elsewhere (e.g. Firebase App Distribution). See the examples [here](../publishing-yaml/distribution).
 
+    publishing:
+      email:
+        recipients:
+          - name@example.com
+    scripts:
+      - |
+        echo 'This is a Post-publish script'
+        echo 'This script is multiline'
diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/knowledge-base/add-a-git-tag-with-app-version.md
similarity index 86%
rename from content/custom-scripts/add-a-git-tag-with-app-version.md
rename to content/knowledge-base/add-a-git-tag-with-app-version.md
index 9bc5eb6..233b346 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/knowledge-base/add-a-git-tag-with-app-version.md
@@ -1,14 +1,16 @@
 ---
 description: Create a Git tag referencing your app version
-title: Add a Git tag with app version
+title: Adding a Git tag with app version
 weight: 2
+aliases:
+  - '../custom-scripts/add-a-git-tag-with-app-version'
 ---
 
 You can use Codemagic to create a Git tag and push it to your repository.
 
 {{<notebox>}}
 
-Pushing git tags from Codemagic to repository requires **write access** to the repository. Depending on the Git service and authentication method, Codemagic may not have write access to your repository and you may need to grant it separately in your Git service settings. We recommend that you create a dedicated app password / personal access token for Codemagic.
+Pushing Git tags from Codemagic to repository requires **write access** to the repository. Depending on the Git service and authentication method, Codemagic may not have write access to your repository and you may need to grant it separately in your Git service settings. We recommend that you create a dedicated app password / personal access token for Codemagic.
 
 * For repositories hosted on Bitbucket, create an [app password](https://confluence.atlassian.com/bitbucket/app-passwords-828781300.html) with **write** permission for repositories.
 * For repositories hosted on GitHub, create a [personal access token](https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line) with **repo** scope.
@@ -18,7 +20,7 @@ Pushing git tags from Codemagic to repository requires **write access** to the r
 
 1. Add your app password / personal access token to Codemagic as a secure [environment variable](../building/environment-variables).
 
-2. Click on the '**+**' sign between **Build** and **Publish** in your app settings and add the following **Pre-publish** script.  Note that you need to replace the placeholders with your actual environment variable name and Git service details.
+2. Add the following **pre-publish script**.  Note that you need to replace the placeholders with your actual environment variable name and Git service details.
 
         #!/usr/bin/env sh
 
diff --git a/content/knowledge-base/generating-an-ssh-key.md b/content/knowledge-base/generating-an-ssh-key.md
new file mode 100644
index 0000000..9d744d0
--- /dev/null
+++ b/content/knowledge-base/generating-an-ssh-key.md
@@ -0,0 +1,11 @@
+---
+description: Create a secure SSH key pair in your terminal
+title: Generating an SSH key
+weight: 1
+---
+
+Different repository hosting services have different minimum requirements for the length of the SSH key, varying from 2048 bits to 4096 bits. We recommend creating a 4096 bit key for increased security. Run the command below in your terminal to create a 4096 bit SSH key:
+
+        ssh-keygen -t rsa -b 4096 -f ~/Desktop/codemagic_ssh_key -q -N ""
+
+This will create two new files on your desktop: `codemagic_ssh_key` (private key) and `codemagic_ssh_key.pub` (public key). 
\ No newline at end of file
diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/knowledge-base/load-firebase-configuration.md
similarity index 73%
rename from content/custom-scripts/load-firebase-configuration.md
rename to content/knowledge-base/load-firebase-configuration.md
index c3cf906..dc8f8a2 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/knowledge-base/load-firebase-configuration.md
@@ -1,12 +1,14 @@
 ---
 description: Load your Firebase configuration files to Codemagic
-title: Load Firebase configuration
-weight: 1
+title: Loading Firebase configuration
+weight: 3
+aliases:
+  - '../custom-scripts/load-firebase-configuration'
 ---
 
-Instead of committing the Firebase config files to your repository, you can upload them to Codemagic as [environment variables](../building/environment-variables/) and reference them in a custom script. Note that the Firebase config file (`google-services.json` for Android or `GoogleService-Info.plist` for iOS) must be Base64-encoded.
+Instead of committing the Firebase configuration files to your repository, you can upload them to Codemagic as [environment variables](../building/environment-variables/) and reference them in a custom script. Note that the Firebase configuration file (`google-services.json` for Android or `GoogleService-Info.plist` for iOS) must be Base64-encoded.
 
-1.  Save your Firebase config files as environment variables, e.g. `ANDROID_FIREBASE_SECRET` and `IOS_FIREBASE_SECRET`. Make sure to check **Secure**.
+1.  Save your Firebase config files as environment variables, e.g. `ANDROID_FIREBASE_SECRET` and `IOS_FIREBASE_SECRET`. 
 2.  Add the following **pre-build** script echoing your variables to load the Firebase configuration in Codemagic.
 
         #!/usr/bin/env sh
@@ -15,7 +17,7 @@ Instead of committing the Firebase config files to your repository, you can uplo
         echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
         echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
 
-    In case your project is in a nested folder structure, it has to be reflected and the script should be following: 
+    In case your project is in a nested folder structure, it has to be reflected and the script should be as follows: 
 
         #!/usr/bin/env sh
         set -e # exit on first failed command
diff --git a/content/custom-scripts/upload-custom-artifacts.md b/content/knowledge-base/upload-custom-artifacts.md
similarity index 80%
rename from content/custom-scripts/upload-custom-artifacts.md
rename to content/knowledge-base/upload-custom-artifacts.md
index 8b602f0..33c3b94 100644
--- a/content/custom-scripts/upload-custom-artifacts.md
+++ b/content/knowledge-base/upload-custom-artifacts.md
@@ -1,7 +1,9 @@
 ---
 description: Upload files to be included in your build artifacts ZIP file
-title: Upload custom artifacts
-weight: 3
+title: Uploading custom artifacts
+weight: 4
+aliases:
+  - '../custom-scripts/upload-custom-artifacts'
 ---
 
 You can use a custom script to upload custom artifacts, such as screenshots, to `$FCI_EXPORT_DIR` and include them in the build artifacts ZIP file generated by Codemagic.
diff --git a/content/publishing-yaml/distribution.md b/content/publishing-yaml/distribution.md
new file mode 100644
index 0000000..547247f
--- /dev/null
+++ b/content/publishing-yaml/distribution.md
@@ -0,0 +1,218 @@
+---
+title: Publishing
+description: How to set up publishing and build status notifications
+weight: 3
+aliases: 
+    - '../yaml/distribution'
+---
+
+All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with custom scripts, see the examples below.
+
+## Integrations for publishing and notifications
+
+Codemagic has out-of-the-box support for publishing to the services listed below. Read more about each individual integration and see the configuration examples below.
+
+### Email 
+
+If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the provided email address(es). If the build fails, an email with a link to build logs will be sent.
+
+    publishing:
+      email:
+        recipients:
+          - name@example.com
+
+### Slack
+
+In oder to set up publishing to Slack, you first need to connect the Slack workspace in **User settings > Integrations > Slack** for personal applications and in **Teams > Your_team > Team integrations > Slack** for team apps.
+
+You can then define the channel where build notifications and artifacts will be sent to. If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the specified channel. If the build fails, a link to the build logs is published. When you set `notify_on_build_start` to `true`, the channel will be notified when a build starts.
+
+    publishing:
+      slack:
+        channel: '#channel-name'
+        notify_on_build_start: true       # To receive a notification when a build starts
+
+### Google Play
+
+Codemagic enables you to automatically publish your app to the `internal`, `alpha`, `beta` and `production` tracks on Google Play. In order to do so, you will need to set up a service account in Google Play Console and add the JSON key file to your Codemagic configuration file, see how to [create a service account](#creating-a-service-account-in-google-play-console).
+
+    publishing:
+      google_play:                        # For Android app
+        credentials: Encrypted(...)       # JSON key file for Google Play service account
+        track: alpha                      # Name of the track: internal, alpha, beta, production
+
+{{<notebox>}}
+The proper way to add your keys in `codemagic.yaml` is to copy the contents of the key file and [encrypt](../building/encrypting) it. Then add the encrypted value into the configuration file.
+{{</notebox>}}
+
+#### Creating a service account in Google Play Console
+
+1. In Google Play Console, navigate to **Settings > API access**.
+
+2. Click on the **Create Service Account** button and follow the link to **Google API Console**.
+
+3. In Google API Console, click on the **Create Service Account** button.
+
+4. In step 1, fill in the **Service account details** and click **Create**. The name of the service account will allow you to identify it among other service accounts you may have created.
+
+5. In step 2, click the **Select a role** dropdown menu and choose **Project > Editor** as the role.
+
+6. In step 3, you can leave the fields blank and click **Done**.
+
+7. In the list of created service accounts, identify the account you have just created and click on the menu in the **Actions** column.
+
+8. Click **Create key** and select **JSON** as the key type.
+
+9. Click **Create** and save the key file in a secure location to have it available.
+
+### App Store Connect
+
+Codemagic enables you to automatically publish your iOS app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store. 
+
+    publishing:
+      app_store_connect:                  # For iOS app
+        apple_id: name@example.com        # Email address used for login
+        password: Encrypted(...)          # App-specific password
+
+### GitHub releases
+
+Publishing GitHub releases is available for GitHub repositories only.
+
+Publishing happens only for successful builds triggered on tag creation and is unavailable for manual builds.
+
+Note that using `*` wildcard in the beginning of the pattern requires quotation marks around the pattern, otherwise it will violate the `yaml` syntax.
+
+    publishing:
+      github_releases:
+        prerelease: false
+        artifact_patterns:
+          - app-release.apk
+          - '*.aab'
+
+## Publishing a Flutter package to pub.dev
+
+In order to get publishing permissions, first you will need to log in to pub.dev locally. It can be done with running `pub publish --dry-run`.
+After that `credentials.json` will be generated which you can use to log in without the need of Google confirmation through browser.
+
+`credentials.json` can be found in the pub cache directory (`~/.pub-cache/credentials.json` on MacOS and Linux, `%APPDATA%\Pub\Cache\credentials.json` on Windows)
+
+    - echo $CREDENTIALS | base64 --decode > "$FLUTTER_ROOT/.pub-cache/credentials.json"
+    - flutter pub publish --dry-run
+    - flutter pub publish -f
+
+## Publishing an app to Firebase App Distribution
+
+If you use a Firebase service, encrypt `google-services.json` as `ANDROID_FIREBASE_SECRET` environment variable for Android
+or `GoogleService-Info.plist` as `IOS_FIREBASE_SECRET` for iOS.
+
+    echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
+    echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+
+### Publishing an app using Firebase CLI
+
+Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documentation](https://firebase.google.com/docs/cli#cli-ci-systems) for details.
+
+Android
+
+    - name: Publish the app to Firebase App Distribution
+      script: |
+        apkPath=$(find build -name "*.apk" | head -1)
+
+        if [[ -z ${apkPath} ]]
+        then
+          echo "No apks were found, skip publishing to Firebase App Distribution"
+        else
+          echo "Publishing $apkPath to Firebase App Distribution"
+          firebase appdistribution:distribute --app <your_android_application_firebase_id> --groups <your_android_testers_group> $apkPath
+        fi
+
+iOS
+
+    - name: Publish the app to Firebase App Distribution
+      script: |
+        ipaPath=$(find build -name "*.ipa" | head -1)
+
+        if [[ -z ${ipaPath} ]]
+        then
+          echo "No ipas were found, skip publishing to Firebase App Distribution"
+        else
+          echo "Publishing $ipaPath to Firebase App Distribution"
+          firebase appdistribution:distribute --app <your_ios_application_firebase_id> --groups <your_ios_testers_group> $ipaPath
+        fi
+
+### Publishing an app with Fastlane
+
+Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documentation](https://firebase.google.com/docs/cli#cli-ci-systems) for details.
+
+Before running a lane, you should install Fastlane Firebase app distribution plugin
+
+        - name: Install fastlane-plugin-firebase_app_distribution
+          script: |
+            gem install bundler
+            sudo gem install fastlane-plugin-firebase_app_distribution --user-install
+
+Then you need to call a lane. This code is similar for Android and iOS.
+
+Android
+
+    - name: Execute fastlane android publishing task
+      script: |
+        cd android
+        bundle install
+        bundle exec fastlane <your_android_lane>
+
+iOS
+
+    - name: Execute fastlane ios publishing task
+      script: |
+        cd ios
+        bundle install
+        bundle exec fastlane <your_ios_lane>
+
+
+### Publishing an Android app with Gradle
+
+To authorize an application for Firebase App Distribution, use [Google service account](https://firebase.google.com/docs/app-distribution/android/distribute-gradle#authenticate_using_a_service_account).
+Encrypt and add to environment variables these credentials (the file is named something like `yourappname-6e632def9ad4.json`) as `GOOGLE_APP_CREDENTIALS`. Specify the filepath in your `build.gradle` in `firebaseAppDistribution` as `serviceCredentialsFile="your/file/path.json"`.
+
+    buildTypes {
+        ...
+        release {
+            ...
+            firebaseAppDistribution {
+                ...
+                serviceCredentialsFile="<your/file/path.json>"
+            }
+        }
+
+ Note that in case the credentials file is not specified in `firebaseAppDistribution` build type, it will search the filepath in `GOOGLE_APPLICATION_CREDENTIALS` environment variable.
+
+Decode application credentials for Firebase authorization:
+
+    echo $GOOGLE_APP_CREDENTIALS | base64 --decode > $FCI_BUILD_DIR/your/file/path.json
+
+Build the application:
+
+    - echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
+    - flutter packages pub get
+    - flutter build apk --release
+
+Call the `gradlew` task for distribution
+
+    - name: Distribute app to firebase with gradle plugin
+      script: cd android && ./gradlew appDistributionUploadRelease
+
+{{<notebox>}}
+
+If you didn't specify `serviceCredentialsFile`, you may export it to random location like `/tmp/google-application-credentials.json`
+
+    echo $GOOGLE_APP_CREDENTIALS | base64 --decode > /tmp/google-application-credentials.json
+
+And then export the filepath on the gradlew task
+
+    - name: Distribute app to firebase with gradle plugin
+      script: |
+        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/google-application-credentials.json
+        cd android && ./gradlew appDistributionUploadRelease
+
+{{</notebox>}}
diff --git a/content/publishing/email-and-slack-notifications.md b/content/publishing/email-and-slack-notifications.md
index 43fce84..f04ef04 100644
--- a/content/publishing/email-and-slack-notifications.md
+++ b/content/publishing/email-and-slack-notifications.md
@@ -14,10 +14,6 @@ If the build finishes successfully, release notes (if passed) and the generated
 
 If the build fails, you will be sent a link to the build logs. Check the **Publish artifacts even if tests fail** option in the UI to publish artifacts even when one or more tests fail. If that option is unchecked, generated artifacts (if there are any) will be attached only to successful builds.
 
-{{<notebox>}}
-See how to set up email publishing with YAML [here](../yaml/distribution/#publishing). Note that skipping publishing artifacts when tests fail is not available for YAML builds.
-{{</notebox>}}
-
 ### MS Teams
 
 To be able to receive emails from Codemagic to your MS Teams account, please go to your MS Teams account and select **Anyone can send emails to this address** in **Get email address > Advanced settings**.
@@ -36,14 +32,9 @@ If the build fails, a link to the build logs is published. Check **Publish artif
 
 To receive a notification when a build starts, check the checkbox **Notify when build starts**.
 
-{{<notebox>}}
-* See how to set up Slack publishing and notifications with YAML [here](../yaml/distribution/#publishing). Note that connecting the Slack integration either in user or team settings in Codemagic UI is a prerequisite for publishing to Slack.
-* Skipping publishing artifacts when tests fail is not available for YAML builds.
-{{</notebox>}}
-
 ## Published artifacts
 
 When you set up email or Slack publishing, Codemagic publishes the following artifacts:
 
 * `app`, `ipa`, `apk`, the archive with Flutter web build directory, Linux application bundle files
-* All the artifacts found by patterns in `codemagic.yaml`, read more about it [here](../yaml/yaml/#artifacts).
+
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index 2f7a75c..e78bfbd 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -8,26 +8,12 @@ Codemagic enables you to automatically publish your app to the **internal**, **a
 
 ## Requirements
 
-You will need a **service account in Google Play Console** to obtain the **JSON credentials file**. See how to do that [here.](#setting-up-a-service-account-in-google-play-console) In addition, you must build the app in **release mode** and set up **Android code signing**.
+You will need a **service account in Google Play Console** to obtain the **JSON credentials file**. See how to do that [here](../publishing-yaml/distribution#creating-a-service-account-in-google-play-console). In addition, you must build the app in **release mode** and set up **Android code signing**.
 
 Before releasing the app to Google Play, make sure that it meets the [Google Play's best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
 
 {{<notebox>}} Note that if you haven't published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](../building/build-versioning/ 'Build versioning') on Codemagic. {{</notebox>}}
 
-## Setting up a service account in Google Play Console
-
-1. In Google Play Console, navigate to Settings > API access.
-2. Click on the **Create Service Account** button and follow the link to Google API Console.
-3. In Google API Console, click on the **Create Service Account** button.
-4. Fill in **Service account name** and choose Service Accounts > Service Account User from the Role dropdown. Make sure to check **Furnish a new private key** and select **JSON** as key type.
-   
-   {{< figure size="medium" src="../uploads/2019/03/create-service-account-2018-marked.png" caption="Create service account" >}}
-   
-5. Click **Create** and download the created JSON credentials file. You will need this file to set up publishing to Google Play on Codemagic.
-6. Back in Google Play Console, click **Done** to close the dialog.
-7. Find the new service account and click **Grant Access**.
-8. Select **Release manager** from the Role dropdown and click **Add user**.
-
 ## Setting up publishing to Google Play on Codemagic
 
 Once you configure publishing to Google Play, Codemagic will automatically distribute the app to Google Play every time you build the workflow.
diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 0fbc46d..814c7e5 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -8,7 +8,7 @@ weight: 1
 
 ### Using App Store Connect API for Apple Developer Portal integration
 
-Instead of creating a session with Apple Developer Portal, we are now using App Store Connect API keys for authentication. This means there will be no more expiring sessions or hassle with two-factor authentication when using automatic code signing. It is possible to set up several keys for code signing and select the right key in workflow settings. See how to [set up the Apple Developer Portal in Codemagic app](../code-signing/ios-code-signing/#automatic-code-signing) for builds that are configured in the UI. When building with `codemagic.yaml`, the API keys are added in the configuration file, see the instructions [here](../yaml/distribution/#setting-up-code-signing-for-ios).
+Instead of creating a session with Apple Developer Portal, we are now using App Store Connect API keys for authentication. This means there will be no more expiring sessions or hassle with two-factor authentication when using automatic code signing. It is possible to set up several keys for code signing and select the right key in workflow settings. See how to [set up the Apple Developer Portal in Codemagic app](../code-signing/ios-code-signing/#automatic-code-signing) for builds that are configured in the UI. When building with `codemagic.yaml`, the API keys are added in the configuration file, see the instructions [here](../code-signing-yaml/signing/#setting-up-code-signing-for-ios).
 
 ### Support for multiple team oweners
 
@@ -28,7 +28,7 @@ If you are not building a Flutter project, you still need to use the `codemagic.
 
 We have added a much-requested feature to cancel ongoing and queued webhook-triggered builds on push and pull request commit when a new build has been triggered for the same branch. This is convenient when you’re making several commits and don’t want to wait for the previous builds to finish while you’re only interested in the build for the most recent commit. 
 
-You can enable this feature in the UI by navigating to **App settings > Build triggers > Automatic build triggering** and selecting **Cancel outdated webhook builds**, or by setting `cancel_previous_builds: true` in the [triggering section](../yaml/yaml/#triggering) of the YAML file.
+You can enable this feature in the UI by navigating to **App settings > Build triggers > Automatic build triggering** and selecting **Cancel outdated webhook builds**, or by setting `cancel_previous_builds: true` in the [triggering section](../getting-started/yaml/#triggering) of the YAML file.
 
 > If you’re interested in running builds in parallel, get in touch with our sales team through the [Codemagic business page](https://codemagic.io/business/).
 
diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index e87d0f7..9dae604 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -6,7 +6,7 @@ weight: 2
 
 ## Hardware
 
-- Mac Mini `2.3GHz Quad Core / 8GB`
+- Mac mini `2.3GHz Quad Core / 8GB`
 - Mac Pro `3.7GHz Quad Core / 32GB`
 
 ## System
@@ -24,7 +24,7 @@ weight: 2
 - docker `19.03.8`
 - fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `1.20.3 ($HOME/programs/flutter)`
+- flutter `1.20.4 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.28.0`
 - gradle `6.1.1`
diff --git a/content/teams/teams.md b/content/teams/teams.md
index 13a21cb..4733295 100644
--- a/content/teams/teams.md
+++ b/content/teams/teams.md
@@ -1,9 +1,9 @@
 ---
-title: Working in teams
+title: Teams
 weight: 1
 ---
 
-If more than one developer is contributing to a project, it is wiser to set up a team so that everyone could work on the project together. Up to two seats in a team are free of charge, but it is possible to invite more members by purchasing additional seats. Billing information is available [here](https://codemagic.io/pricing/).
+If more than one developer is contributing to a project, it is wiser to set up a team so that everyone could work on the project together. Up to two seats in a team are free of charge, but it is possible to invite more members by purchasing additional seats. Pricing information is available [here](https://codemagic.io/pricing/).
 
 {{<notebox>}}Note that teams who enabled billing before June, 2020, and have not yet migrated to the new billing, still operate under the previous billing system. Changing team roles and having multiple owners is not possible in such teams.{{</notebox>}}
 
@@ -51,11 +51,7 @@ By default, team creator's credentials are used to access repository information
 
 ### Billing
 
-Billing is managed separately for each team. To use the paid features, such as additional build minutes or additional team members, team owners will have to enable billing by clicking **Enable billing** on the right sidebar. 
-
-After billing is enabled, billing information (amount due, next payment date and billing history) will be visible on the right of the page. There, you can also click **Update billing details** to change the billing information or add additional details, such as company name, billing email, address and tax ID.
-
-To disable billing, click on the **Disable billing** button in the **Danger zone**. On disabling billing, you will be immediately charged for the used paid build minutes and paid team seats.
+Billing is managed separately for each team. To use the paid features, such as additional build minutes or additional team members, team owners will have to enable billing by clicking **Enable billing** on the right sidebar. See more details about billing [here](../billing/billing).
 
 ## Leaving the team
 
diff --git a/content/yaml/testing.md b/content/testing-yaml/testing.md
similarity index 80%
rename from content/yaml/testing.md
rename to content/testing-yaml/testing.md
index 307ddf4..9ffcf7c 100644
--- a/content/yaml/testing.md
+++ b/content/testing-yaml/testing.md
@@ -1,10 +1,12 @@
 ---
 title: Testing
 description: Testing with YAML.
-weight: 8
+weight: 1
+aliases:
+  - '../yaml/testing'
 ---
 
-Test scripts are added under `scripts` in the [overall architecture](../yaml/yaml/#template), before the build commands.
+Test scripts are added under `scripts` in the [overall architecture](../getting-started/yaml#template), before the build commands.
 
 ## React Native unit test
 
@@ -24,6 +26,7 @@ UI tests (also known as instrumented tests):
 
 ## Native iOS
 
+    set -o pipefail
     xcodebuild \
         -workspace MyAwesomeApp.xcworkspace \
         -scheme MyAwesomeApp \
@@ -31,11 +34,22 @@ UI tests (also known as instrumented tests):
         -destination 'platform=iOS Simulator,name=iPhone 6,OS=8.1' \
         test | xcpretty
 
+If may want to export the test log, you can do this by splitting the standard output to a file
+    
+    set -o pipefail
+    xcodebuild \
+        -workspace MyAwesomeApp.xcworkspace \
+        -scheme MyAwesomeApp \
+        -sdk iphonesimulator \
+        -destination 'platform=iOS Simulator,name=iPhone 6,OS=8.1' \
+        test | xcpretty |& tee "/tmp/xcodetest.log"
+
+
 ## Flutter test
 
     flutter test
 
-**Tip:** you can display Flutter test results visually in the build view if you use expanded form of the script in codemagic.yaml.
+**Tip:** you can display Flutter test results visually in the build overview if you use expanded form of the script in codemagic.yaml.
 Just include the `test_report` field with a glob pattern matching the test result file location:
 
 ```yaml
diff --git a/content/testing/beta-testing-with-testmagic.md b/content/testing/beta-testing-with-testmagic.md
index 896a345..a393c04 100644
--- a/content/testing/beta-testing-with-testmagic.md
+++ b/content/testing/beta-testing-with-testmagic.md
@@ -2,9 +2,10 @@
 description: View, test and distribute your Codemagic builds with Testmagic
 title: Beta testing with Testmagic
 weight: 6
+draft: true
 ---
 
-Codemagic is seamlessly integrated with [Testmagic](https://testmagic.io/), a simple mobile app for viewing, testing and distributing your Codemagic builds. You can download it from [Google Play](https://play.google.com/store/apps/details?id=io.nevercode.testmagic&hl=en) for Android or join the testflight group for iOS - [link](https://testflight.apple.com/join/lEQLSjoe). For discussions, join #testmagic channel in our [Slack community](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc).
+Codemagic is seamlessly integrated with [Testmagic](https://testmagic.io/), a simple mobile app for viewing, testing and distributing your Codemagic builds. You can download it from [Google Play](https://play.google.com/store/apps/details?id=io.nevercode.testmagic&hl=en) for Android or join the TestFlight group for iOS - [link](https://testflight.apple.com/join/lEQLSjoe).
 
 With Testmagic, you can:
 
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index f2479a1..5103638 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -24,7 +24,7 @@ If your Flutter project is in a subdirectory of the repository, Codemagic cannot
 
 ### Specifying the test target
 
-In App settings > Test, you will see the **Flutter test target** and **Flutter drive target** fields displayed if the respective tests are detected. You can specify the exact target to run a specific test.
+In **App settings > Test**, you will see the **Flutter test target** and **Flutter drive target** fields displayed if the respective tests are detected. You can specify the exact target to run a specific test.
 
 ### Running Flutter Driver tests
 
@@ -41,7 +41,7 @@ emulator            • emulator      • Google • android
 apple_ios_simulator • iOS Simulator • Apple  • ios
 ```
 
-It's recommended to launch desired emulator before the tests start:
+It's recommended to launch the desired emulator before the tests start:
 
 ```sh
 flutter emulators --launch ios
@@ -55,10 +55,10 @@ flutter emulators --launch emulator
 
 {{<notebox>}}
 
-**Tip**: You can set up separate [workflows](../getting-started/creating-workflows/) to run tests both on iOS and Android.
+**Tip**: You can set up separate [workflows](../flutter/creating-workflows/) to run tests both on iOS and Android.
 
 {{</notebox>}}
 
 ### Stop build if tests fail
 
-Selecting the **Stop build if tests fail** option will stop the build immediately when any of the tests fail. As the tests are run before building the app for selected platforms, you can get the result of the build faster. Such builds will have the status "failed".
+Selecting the **Stop build if tests fail** option will stop the build immediately when any of the tests fail. Such builds will have the status "failed".
diff --git a/content/testing/running-tests-only.md b/content/testing/running-tests-only.md
deleted file mode 100644
index e346561..0000000
--- a/content/testing/running-tests-only.md
+++ /dev/null
@@ -1,9 +0,0 @@
----
-description: Run tests only without building the app.
-title: Running tests only
-weight: 4
----
-
-You can have a workflow to run tests without building the app. In App settings > Build > Build for platforms, select **Run tests only**. Codemagic will then build the workflow until the testing step and skip building the app.
-
-If tests fail, the status of the build will be "failed" and you'll receive an email about failing tests. If you have publishing to Slack configured, you'll receive notifications on build status updates.
diff --git a/content/testing/static-code-analysis.md b/content/testing/static-code-analysis.md
index b3ecc33..5eba130 100644
--- a/content/testing/static-code-analysis.md
+++ b/content/testing/static-code-analysis.md
@@ -11,5 +11,3 @@ To run `flutter analyze`, Codemagic specifies the `analyze` command in the **Flu
 If you check **Stop build if tests fail**, the build will fail if any issues are detected during static code analysis.
 
 When enabled, `flutter analyze` will be run with each build. You can see the results and the logs of the analysis under the **Running tests** step in build overview.
-
-{{< figure size="medium" src="../uploads/2019/05/flutter_analyze_output.png" caption="" >}}
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 4d3d969..e8e4b8d 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -1,7 +1,11 @@
 ---
 description: Find out how to overcome frequent issues with building your Flutter app on Codemagic. 
 title: Common issues
-weight: 1
+weight: 4
+aliases:
+    - '../troubleshooting/common-issues'
+    - '../custom-scripts/add-a-git-tag-with-app-version'
+    - '../custom-scripts/upload-custom-artifacts'
 ---
 
 ## iOS errors regarding creating authentication sessions
diff --git a/content/yaml/building-a-flutter-app.md b/content/yaml/building-a-flutter-app.md
deleted file mode 100644
index 9ca47e2..0000000
--- a/content/yaml/building-a-flutter-app.md
+++ /dev/null
@@ -1,69 +0,0 @@
----
-title: Building a Flutter app
-description: Building a Flutter app with YAML.
-weight: 2
----
-
-With `codemagic.yaml`, you can use Codemagic to build, test and publish Flutter apps. You can read more about how to use `codemagic.yaml` and see the structure of the file [here](../yaml/yaml). The necessary command for building an application goes under `scripts` in the [overall architecture](../yaml/yaml/#template) in the `codemagic.yaml` file. Here are some examples for the most common Flutter builds.
-
-## Android builds
-
-Set up local properties
-
-    - echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
-
-### Building .apk
-
-    - flutter build apk --release
-
-### Building universal .apk(s) from existing app bundle(s) with user-specified keys
-
-If your app settings in Codemagic have building Android App Bundles enabled, we will automatically include a script for generating a signed `app-universal.apk` during the YAML export. If you are creating a YAML file from a scratch, add the following script to receive the .apk file(s):
-
-    - android-app-bundle build-universal-apk \
-        --bundle 'project_directory/build/**/outputs/**/*.aab' \
-        --ks /tmp/keystore.keystore \
-        --ks-pass $CM_KEYSTORE_PASSWORD \
-        --ks-key-alias $CM_KEY_ALIAS_USERNAME \
-        --key-pass $CM_KEY_ALIAS_PASSWORD
-
-Please make sure to wrap the `--bundle` pattern in single quotes. If `--bundle` option is not specified, default glob pattern `**/*.aab` will be used.
-
-More information about Android code signing can be found [here](../yaml/distribution/#setting-up-code-signing-for-android).
-
-{{<notebox>}}
-Codemagic uses the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) utility to build universal .apk files from Android App Bundles.
-{{</notebox>}}
-
-## iOS builds
-
-### Building an unsigned application .app
-
-      - flutter build ios --debug --no-codesign
-
-### Building a signed iOS application archive .ipa
-
-{{<notebox>}}
-Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
-{{</notebox>}}
-
-      - xcode-project use-profiles
-      - xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
-
-{{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}}
-
-## Web builds
-
-    - |
-      flutter config --enable-web
-      flutter build web --release
-      cd build/web
-      7z a -r ../web.zip ./*
-
-## Testing, code signing and publishing a Flutter app
-
-To test, code sign and publish a Flutter app:
-
-* Testing examples for a flutter app can be found [here](../yaml/testing/#flutter-test).
-* All iOS and Android applications need to be signed before release. Different script examples are available [here](../yaml/distribution/).
-* All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with [custom scripts](../yaml/running-a-custom-script/). Script examples for different options are available [here](../yaml/distribution/#publishing-a-flutter-package-to-pubdev).
diff --git a/content/yaml/building-a-native-android-app.md b/content/yaml/building-a-native-android-app.md
deleted file mode 100644
index 9e6a3b6..0000000
--- a/content/yaml/building-a-native-android-app.md
+++ /dev/null
@@ -1,83 +0,0 @@
----
-title: Building a native Android app
-description: Building an Android app with YAML.
-weight: 3
----
-## Building an Android app
-
-The necessary command for building native Android application goes under `scripts` in the [overall architecture](../yaml/yaml/#template) in the `codemagic.yaml` file. For Android (built with gradle), the script looks like this:
-
-    - ./gradlew build
-
-## Testing, code signing and publishing an Android app
-
-To test, code sign and publish an Android app:
-
-* The code for testing an Android app also goes under `scripts`. A few examples of testing can be found [here](../yaml/testing).
-* All Android applications need to be signed before release. For Gradle code signing configuration refer to the [documentation](../code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing). More information about code signing with YAML in general is [here](../yaml/distribution).
-* All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
-
-## Android workflow example
-
-The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
-
-    workflows:
-        android-workflow:
-            name: Android Workflow
-            max_build_duration: 60
-            instance_type: mac_pro
-            environment:
-                vars:
-                    CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
-                    CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
-                    CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
-                    CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
-                node: latest
-            triggering:
-                events:
-                    - push
-                    - tag
-                    - pull_request
-                branch_patterns:
-                    - pattern: release
-                    include: true
-                    source: true
-            scripts:
-                - name: Set up local properties
-                  script: |
-                    echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
-                - name: Set up keystore
-                  script: |
-                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
-                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
-                    storePassword=$CM_KEYSTORE_PASSWORD
-                    keyPassword=$CM_KEY_ALIAS_PASSWORD
-                    keyAlias=$CM_KEY_ALIAS_USERNAME
-                    storeFile=/tmp/keystore.keystore
-                    EOF
-                - name: Build Android app
-                  script: |
-                    ./gradlew assembleRelease
-            artifacts:
-                - android/app/build/outputs/**/**/*.apk
-            publishing:
-                google_play:
-                    credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
-                    track: internal
-
-{{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle`. {{</notebox>}}
-
-Incrementing the version code can be done as follows:
-
-```
-    android {
-        ...
-        
-        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
-        defaultConfig {
-            ...
-            versionCode appVersionCode
-            ...
-        }
-    }
-```
\ No newline at end of file
diff --git a/content/yaml/building-a-react-native-app.md b/content/yaml/building-a-react-native-app.md
deleted file mode 100644
index 41e9e6b..0000000
--- a/content/yaml/building-a-react-native-app.md
+++ /dev/null
@@ -1,177 +0,0 @@
----
-title: Building a React Native app
-description: Building a React Native app with YAML.
-weight: 5
----
-
-React Native is a cross-platform solution that allows you to build apps for both iOS and Android faster using a single language. When working with YAML, the basics are still the same, the build scripts are added to the `scripts` section in the [overall architecture](../yaml/yaml/#template).
-
-## Android
-
-Set up local properties
-
-    - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
-
-Building an Android application:
-
-    - cd android && ./gradlew build
-
-## iOS
-
-{{<notebox>}}
-Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
-{{</notebox>}}
-
-Script for building an iOS application:
-
-    - xcode-project build-ipa --workspace "ios/MyReact.xcworkspace" --scheme "MyReact"
-
-{{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}} 
-
-## Testing, code signing and publishing
-
-To test and publish a React Native app:
-
-* The code for testing a React Native app also goes under `scripts`, before build commands. An example for testing a React Naive app can be found [here](../yaml/testing/#react-native-unit-test).
-* All iOS and Android applications need to be signed before release. Different script examples are available [here](../yaml/distribution/).
-* All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
-
-## iOS workflow example
-
-The following example shows a workflow that can be used to publish your iOS app to App Store Connect.
-
-    workflows:
-        ios-workflow:
-            name: iOS Workflow
-            max_build_duration: 60
-            instance_type: mac_pro
-            environment:
-                vars:
-                    XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # YOUR WORKSPACE NAME HERE
-                    XCODE_SCHEME: "YOUR_SCHEME_NAME" # THE NAME OF YOUR SCHEME HERE
-                    CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
-                    CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
-                    CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
-                node: latest
-                xcode: latest
-                cocoapods: default
-            triggering:
-                events:
-                    - push
-                    - tag
-                    - pull_request
-                branch_patterns:
-                    - pattern: develop
-                    include: true
-                    source: true
-            scripts:
-                - name: Install npm dependencies
-                  script: |
-                    npm install
-                - name: Install CocoaPods dependencies
-                  script: |
-                    cd ios && pod install
-                - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
-                  script: |
-                    keychain initialize
-                - name: Set up Provisioning profiles from environment variables
-                  script: |
-                    PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-                    mkdir -p "$PROFILES_HOME"
-                    PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-                    echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
-                    echo "Saved provisioning profile $PROFILE_PATH"
-                - name: Set up signing certificate
-                  script: |
-                    echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-                    keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
-                - name: Increment build number
-                  script: |
-                    #!/bin/sh
-                    set -e
-                    set -x
-                    cd $FCI_BUILD_DIR/ios
-                    agvtool new-version -all $(($BUILD_NUMBER +1))
-                - name: Set up code signing settings on Xcode project
-                  script: |
-                    xcode-project use-profiles
-                - name: Build ipa for distribution
-                  script: |
-                    xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme $XCODE_SCHEME
-            artifacts:
-                - build/ios/ipa/*.ipa
-                - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM            
-            publishing:
-            app_store_connect:                 
-                apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE
-                password: Encrypted(...) # THE ENCRYPTED APP-SPECIFIC PASSWORD GOES HERE
-
-
-## Android workflow example
-
-The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
-
-    workflows:
-        android-workflow:
-            name: Android Workflow
-            max_build_duration: 60
-            instance_type: mac_pro
-            environment:
-                vars:
-                    CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
-                    CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
-                    CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
-                    CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
-                node: latest
-            triggering:
-                events:
-                    - push
-                    - tag
-                    - pull_request
-                branch_patterns:
-                    - pattern: release
-                    include: true
-                    source: true
-            scripts:
-                - name: Install npm dependencies
-                  script: |
-                    npm install
-                - name: Set up local properties
-                  script: |
-                    echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
-                - name: Set up keystore
-                  script: |
-                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
-                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
-                    storePassword=$CM_KEYSTORE_PASSWORD
-                    keyPassword=$CM_KEY_ALIAS_PASSWORD
-                    keyAlias=$CM_KEY_ALIAS_USERNAME
-                    storeFile=/tmp/keystore.keystore
-                    EOF
-                - name: Build Android app
-                  script: |
-                    cd android && ./gradlew assembleRelease
-            artifacts:
-                - android/app/build/outputs/**/**/*.apk
-            publishing:
-                google_play:
-                    credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
-                    track: internal
-
-    
-{{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle` {{</notebox>}}
-
-Incrementing the version code can be done as follows:
-
-```
-    android {
-        ...
-        
-        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
-        defaultConfig {
-            ...
-            versionCode appVersionCode
-            ...
-        }
-    }
-```
\ No newline at end of file
diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
deleted file mode 100644
index 9d5de18..0000000
--- a/content/yaml/distribution.md
+++ /dev/null
@@ -1,310 +0,0 @@
----
-title: Code signing and publishing
-description: Code signing and publishing with YAML.
-weight: 9
----
-
-All Android and iOS applications have to be digitally signed before release to confirm their author and guarantee that the code has not been altered or corrupted since it was signed. In the case of mobile apps, this means that users can be assured that the apps they download from the App Store Connect or Google Play Store are from developers they can trust.
-
-For iOS, we use [Codemagic CLI tools](https://github.com/codemagic-ci-cd/cli-tools) to perform code signing and publishing for iOS apps ⏤ these tools are open source and can also be [used locally](../yaml/runninglocally/) or in other environments. Android applications are usually signed using Gradle. This page here covers the most common scripts, but different options for code signing have also been covered extensively on our blog. For example, there is a [blog post](https://blog.codemagic.io/distributing-native-ios-sdk-with-flutter-module-using-codemagic/) about code signing iOS apps with `codemagic.yaml`. There are also [step-by-step instructions](https://blog.codemagic.io/the-simple-guide-to-android-code-signing/) available on our blog for Android code signing.
-
-All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with custom scripts, see the examples [below](../yaml/distribution/#publishing).
-
-## Setting up code signing for iOS
-
-{{<notebox>}}
-Codemagic uses the [keychain](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md#keychain) utility to manage macOS keychains and certificates.
-{{</notebox>}}
-
-### Setting up automatic code signing
-
-In order to use **automatic code signing** and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect and define the environment variables listed below. Make sure to [encrypt](../yaml/yaml/#encrypting-sensitive-data) the values of the variables before adding them to the configuration file. Note that when encrypting files via the UI, they are base64 encoded, thus in order to properly encrypt the App Store Connect private key and the certificate private key, copy the contents of the files and encrypt the content instead of the files themselves in the [Codemagic encryption interface](../yaml/yaml/#encrypting-sensitive-data). You can then add the encrypted values to the respective environment variables.
-
-* `APP_STORE_CONNECT_PRIVATE_KEY`
-
-  It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api). To do so:
-
-  1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
-  2. Click on the + sign to generate a new API key.
-  3. Enter the name for the key and select an access level (`Developer` or `App Manager`).
-  4. Click **Generate**.
-  5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key. Note that the key can only be downloaded once.
-
-* `APP_STORE_CONNECT_KEY_IDENTIFIER`
-
-  In **App Store Connect > Users and Access > Keys**, this is the **Key ID** of the key.
-
-* `APP_STORE_CONNECT_ISSUER_ID`
-
-  In **App Store Connect > Users and Access > Keys**, this is the **Issuer ID** displayed above the table of active keys.
-
-* `CERTIFICATE_PRIVATE_KEY`
-
-  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal:
-
-      ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
-
-{{<notebox>}}
-Alternatively, each property can be specified in the scripts section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
-{{</notebox>}}
-
-{{<notebox>}}
-Codemagic uses the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) utility for generating and managing certificates and provisioning profiles and performing code signing.
-{{</notebox>}}
-
-    - find . -name "Podfile" -execdir pod install \;
-    - keychain initialize
-    - app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
-      --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
-      --create  # Allow creating resources if existing are not found.
-    - keychain add-certificates
-
-The available provisioning profile types are described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store).
-
-### Setting up manual code signing
-
-In order to use **manual code signing**, [encrypt](../yaml/yaml/#encrypting-sensitive-data) your signing certificate, the certificate password (if the certificate is password-protected) and the provisioning profile, and set the encrypted values to the following environment variables:
-
-    CM_CERTIFICATE: Encrypted(...)
-    CM_CERTIFICATE_PASSWORD: Encrypted(...)
-    CM_PROVISIONING_PROFILE: Encrypted(...)
-
-With the manual code signing method, you are required to upload the signing certificate and the matching provisioning profile(s) to Codemagic in order to receive signed builds.
-
-    - find . -name "Podfile" -execdir pod install \;
-    - keychain initialize
-    - |
-      # set up provisioning profiles
-      PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-      mkdir -p "$PROFILES_HOME"
-      PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-      echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
-      echo "Saved provisioning profile $PROFILE_PATH"
-    - |
-      # set up signing certificate
-      echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-
-      # when using a password-protected certificate
-      keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
-      # when using a certificate that is not password-protected
-      keychain add-certificates --certificate /tmp/certificate.p12
-
-## Setting up code signing for Android
-
-The following templates show code signing using `key.properties`.
-
-### Set up default debug key.properties
-
-    - |
-      # set up debug key.properties
-      keytool -genkeypair \
-        -alias androiddebugkey \
-        -keypass android \
-        -keystore ~/.android/debug.keystore \
-        -storepass android \
-        -dname 'CN=Android Debug,O=Android,C=US' \
-        -keyalg 'RSA' \
-        -keysize 2048 \
-        -validity 10000
-
-### Set up code signing with user specified keys
-
-In order to do code signing [encrypt](../yaml/yaml/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password protected), key alias and key alias password (if key alias is password protected) and set the encrypted values to the following environment variables:
-
-    CM_KEYSTORE: Encrypted(...)
-    CM_KEYSTORE_PASSWORD: Encrypted(...)
-    CM_KEY_ALIAS_USERNAME: Encrypted(...)
-    CM_KEY_ALIAS_PASSWORD: Encrypted(...)
-
-Use the following script:
-
-    - |
-      # set up key.properties
-      echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
-      cat >> "$FCI_BUILD_DIR/project_directory/android/key.properties" <<EOF
-      storePassword=$CM_KEYSTORE_PASSWORD
-      keyPassword=$CM_KEY_ALIAS_PASSWORD
-      keyAlias=$CM_KEY_ALIAS_USERNAME
-      storeFile=/tmp/keystore.keystore
-      EOF
-
-## Publishing
-
-`publishing:` for every successful build, you can publish the generated artifacts to external services. The available integrations currently are email, Slack, Google Play, App Store Connect and Github releases.
-
-    publishing:
-      email:
-        recipients:
-          - name@example.com
-      slack:
-        channel: '#channel-name'
-        notify_on_build_start: true
-      google_play:                        # For Android app
-        credentials: Encrypted(...)
-        track: alpha
-      app_store_connect:                  # For iOS app
-        apple_id: name@example.com        # Email address used for login
-        password: Encrypted(...)          # App-specific password
-      github_releases:
-        prerelease: false
-        artifact_patterns:
-          - app-release.apk
-          - '*.aab'
-
-{{<notebox>}}
-
-A prerequisite for Slack publishing is connecting the Slack workspace in **User settings > Integrations > Slack** for personal applications and in **Teams > Your_team > Team integrations > Slack** for team apps.
-
-{{</notebox>}}
-<br>
-
-{{<notebox>}}
-GitHub releases is available for GitHub repositories only.
-
-Publishing happens only for successful builds triggered on tag creation and is unavailable for manual builds.
-
-Note that using `*` wildcard in the beginning of the pattern requires quotation marks around the pattern, otherwise it will violate the `yaml` syntax.
-{{</notebox>}}
-
-
-### Publishing a Flutter package to pub.dev
-
-In order to get publishing permissions, first you will need to log in to pub.dev locally. It can be done with running `pub publish --dry-run`.
-After that `credentials.json` will be generated which you can use to log in without the need of Google confirmation through browser.
-
-`credentials.json` can be found in the pub cache directory (`~/.pub-cache/credentials.json` on MacOS and Linux, `%APPDATA%\Pub\Cache\credentials.json` on Windows)
-
-    - echo $CREDENTIALS | base64 --decode > "$FLUTTER_ROOT/.pub-cache/credentials.json"
-    - flutter pub publish --dry-run
-    - flutter pub publish -f
-
-### Publishing an app to Firebase App Distribution
-
-If you use a Firebase service, encrypt `google-services.json` as `ANDROID_FIREBASE_SECRET` environment variable for Android
-or `GoogleService-Info.plist` as `IOS_FIREBASE_SECRET` for iOS.
-
-    echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
-    echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
-
-#### Publishing an app using Firebase CLI
-
-Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documentation](https://firebase.google.com/docs/cli#cli-ci-systems) for details.
-
-Android
-
-    - |
-      # publish the app to Firebase App Distribution
-      apkPath=$(find build -name "*.apk" | head -1)
-      echo "Found apk at $apkPath"
-
-      if [[ -z ${apkPath} ]]
-      then
-        echo "No apks were found, skip publishing to Firebase App Distribution"
-      else
-        echo "Publishing $apkPath to Firebase App Distribution"
-        firebase appdistribution:distribute --app <your_android_application_firebase_id> --groups <your_android_testers_group> $apkPath
-      fi
-
-iOS
-
-    - |
-      # publish the app to Firebase App Distribution
-      ipaPath=$(find build -name "*.ipa" | head -1)
-      echo "Found ipa at $ipaPath"
-
-      if [[ -z ${ipaPath} ]]
-      then
-        echo "No ipas were found, skip publishing to Firebase App Distribution"
-      else
-        echo "Publishing $ipaPath to Firebase App Distribution"
-        firebase appdistribution:distribute --app <your_ios_application_firebase_id> --groups <your_ios_testers_group> $ipaPath
-      fi
-
-#### Publishing an app with Fastlane
-
-Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documentation](https://firebase.google.com/docs/cli#cli-ci-systems) for details.
-
-Before running a lane, you should install Fastlane Firebase app distribution plugin
-
-        - |
-          # install fastlane-plugin-firebase_app_distribution
-          gem install bundler
-          sudo gem install fastlane-plugin-firebase_app_distribution --user-install
-
-Then you need to call a lane. This code is similar for Android and iOS.
-
-Android
-
-    - |
-      # execute fastlane android publishing task
-      cd android
-      bundle install
-      bundle exec fastlane <your_android_lane>
-
-iOS
-
-    - |
-      # execute fastlane ios publishing task
-      cd ios
-      bundle install
-      bundle exec fastlane <your_ios_lane>
-
-
-#### Publishing an Android app with Gradle
-
-To authorize an application for Firebase App Distribution, use [Google service account](https://firebase.google.com/docs/app-distribution/android/distribute-gradle#authenticate_using_a_service_account).
-Encrypt and add to environment variables these credentials (the file is named something like `yourappname-6e632def9ad4.json`) as `GOOGLE_APP_CREDENTIALS`. Specify the filepath in your `build.gradle` in `firebaseAppDistribution` as `serviceCredentialsFile="your/file/path.json"`.
-
-    buildTypes {
-        ...
-        release {
-            ...
-            firebaseAppDistribution {
-                ...
-                serviceCredentialsFile="<your/file/path.json>"
-            }
-        }
-
- Note that in case the credentials file is not specified in `firebaseAppDistribution` build type, it will search the filepath in `GOOGLE_APPLICATION_CREDENTIALS` environment variable.
-
-Decode application credentials for Firebase authorization:
-
-    echo $GOOGLE_APP_CREDENTIALS | base64 --decode > $FCI_BUILD_DIR/your/file/path.json
-
-Build the application:
-
-    - |
-        # set up local properties
-        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
-    - flutter packages pub get
-    - flutter build apk --release
-
-Call the `gradlew` task for distribution
-
-    - |
-        # distribute app to firebase with gradle plugin
-        cd android
-        ./gradlew appDistributionUploadRelease
-
-{{<notebox>}}
-
-If you didn't specify `serviceCredentialsFile`, you may export it to random location like `/tmp/google-application-credentials.json`
-
-    echo $GOOGLE_APP_CREDENTIALS | base64 --decode > /tmp/google-application-credentials.json
-
-And then export the filepath on the gradlew task
-
-    - |
-        # distribute app to firebase with gradle plugin
-        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/google-application-credentials.json
-        cd android
-        ./gradlew appDistributionUploadRelease
-
-{{</notebox>}}
-
-## Examples
-
-More detailed examples about using YAML for code signing and publishing can be found here:
-
-* <a href="https://blog.codemagic.io/distributing-module-yaml/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-module-yaml')">Native Android project</a>
-* <a href="https://blog.codemagic.io/distributing-native-ios-sdk-with-flutter-module-using-codemagic/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-native-ios-sdk-with-flutter-module-using-codemagic/')">Native iOS project</a>
diff --git a/content/yaml/running-a-custom-script.md b/content/yaml/running-a-custom-script.md
deleted file mode 100644
index 8d0ce9c..0000000
--- a/content/yaml/running-a-custom-script.md
+++ /dev/null
@@ -1,16 +0,0 @@
----
-title: Running a custom script
-description: Custom scripts with YAML.
-weight: 7
----
-
-You can run shell (`sh`) scripts directly in your `.yaml` file, or run scripts in other languages by defining the language with a shebang line or by launching a script file present in your repository.
-
-For example, you can write a build script with Dart like this:
-
-    - |
-      #!/usr/local/bin/dart
-
-      void main() {
-        print('Hello, World!');
-      }
\ No newline at end of file
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index a251274..309c5d9 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -1,16 +1,13 @@
-<nav id="docs-menu" data-js-docs-menu>
-  <div class="search search--sidebar">
-    <input class="search__input" type="text" placeholder="Search">
-    <div class="search__icon search__icon--search fas fa-search"></div>
-    <div class="search__icon search__icon--clear fas fa-times"></div>
-  </div>
-
+{{ define "content-menu" }}
+  {{ $currentPage := .currentPage}}
   <ul>
-    {{ $currentPage := . }}
-    {{ range .Site.Menus.main }}
+    {{ range .menuItems }}
       <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}" data-js-docs-menu-item>
         <div class="category-name" data-js-category-name>{{ .Name }}</div>
         <div class="category-posts" data-js-category-posts>
+          {{- if .HasChildren }}
+            {{ template "content-menu" (dict "menuItems" .Children "currentPage" $currentPage) . }}
+          {{- end }}
           {{ range where site.Pages "Section" .Identifier -}}
             <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
           {{- end }}
@@ -18,4 +15,13 @@
       </li>
     {{ end }}
   </ul>
+{{ end }}
+
+<nav id="docs-menu" data-js-docs-menu>
+  <div class="search search--sidebar">
+    <input class="search__input" type="text" placeholder="Search">
+    <div class="search__icon search__icon--search fas fa-search"></div>
+    <div class="search__icon search__icon--clear fas fa-times"></div>
+  </div>
+  {{ template "content-menu" (dict "menuItems" .Site.Menus.main "currentPage" .) . }}
 </nav>

commit e0297e3f3ec681f4bd0f48d77418a613dfbcf503
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Sep 22 12:05:38 2020 +0300

    use blue color for all links instead of cyan (#179)

diff --git a/assets/scss/_variables.scss b/assets/scss/_variables.scss
index 4d31a85..284ce0a 100644
--- a/assets/scss/_variables.scss
+++ b/assets/scss/_variables.scss
@@ -5,7 +5,6 @@ $red: #EC0C43;
 $yellow: #FBB03B;
 $magenta: #E944FF;
 $cyan: #33CCFF;
-$cyan-dark: #158fdc;
 $black: #151515;
 $blue-gradient: linear-gradient(20deg, $blue-hover 0%, $blue 100%);
 $magenta-gradient: linear-gradient(20deg, $magenta 0%, $yellow 100%);
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 368e313..0f8d9b4 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -284,9 +284,12 @@ body {
                 max-width: 100%;
             }
             a {
-              color: $cyan-dark;
+              color: $blue;
+              &:hover {
+                color: $blue-hover;
+              }
               code {
-                color: $cyan-dark;
+                color: $blue;
               }
             }
             figure {

commit 47a2dfb4d519bf632b354ccb08c6babe92de41e7
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Sep 22 11:58:59 2020 +0300

    make sidebar header link to the main page (#180)
    
    * make sidebar header link to the main page
    
    * change link color

diff --git a/assets/scss/_variables.scss b/assets/scss/_variables.scss
index 284ce0a..4d31a85 100644
--- a/assets/scss/_variables.scss
+++ b/assets/scss/_variables.scss
@@ -5,6 +5,7 @@ $red: #EC0C43;
 $yellow: #FBB03B;
 $magenta: #E944FF;
 $cyan: #33CCFF;
+$cyan-dark: #158fdc;
 $black: #151515;
 $blue-gradient: linear-gradient(20deg, $blue-hover 0%, $blue 100%);
 $magenta-gradient: linear-gradient(20deg, $magenta 0%, $yellow 100%);
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index c2cc0b1..368e313 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -57,6 +57,18 @@ body {
             position: relative;
             z-index: 1;
             padding: 45px 0;
+            .sidebar__header--link {
+              display: inline;
+            }
+            .sidebar__header--plaintext {
+              display: none;
+            }
+            a {
+              color: black;
+              &:hover {
+                color: $blue;
+              }
+            }
         }
         &__toggle {
           display: none;
@@ -178,6 +190,12 @@ body {
                 padding: 0;
                 width: fit-content;
                 cursor: pointer;
+                .sidebar__header--link {
+                  display: none;
+                }
+                .sidebar__header--plaintext {
+                  display: inline-block;
+                }
             }
             #docs-menu {
                 position: fixed;
@@ -266,9 +284,9 @@ body {
                 max-width: 100%;
             }
             a {
-              color: #158fdc;
+              color: $cyan-dark;
               code {
-                color: #158fdc;
+                color: $cyan-dark;
               }
             }
             figure {
diff --git a/layouts/_default/baseof.html b/layouts/_default/baseof.html
index e3114d6..06a6e8b 100644
--- a/layouts/_default/baseof.html
+++ b/layouts/_default/baseof.html
@@ -16,7 +16,8 @@
             <div class="bar"></div>
             <div class="bar"></div>
           </div>
-          Codemagic Documentation
+          <a href="/" class="sidebar__header--link">Codemagic Documentation</a>
+          <span class="sidebar__header--plaintext">Codemagic Documentation</span>
         </div>
         <div class="search search--header">
           <input class="search__input" type="text" placeholder="Search">

commit 532e428c2f492446f210ac8bca48fabf6bd183c7
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Sep 8 16:34:11 2020 +0300

    august releases (#170)
    
    * august releases
    
    * Update release-notes.md
    
    fix typo
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan.lab.mobi>

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 1aacb15..0fbc46d 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,6 +4,16 @@ title: Release notes
 weight: 1
 ---
 
+## August 2020
+
+### Using App Store Connect API for Apple Developer Portal integration
+
+Instead of creating a session with Apple Developer Portal, we are now using App Store Connect API keys for authentication. This means there will be no more expiring sessions or hassle with two-factor authentication when using automatic code signing. It is possible to set up several keys for code signing and select the right key in workflow settings. See how to [set up the Apple Developer Portal in Codemagic app](../code-signing/ios-code-signing/#automatic-code-signing) for builds that are configured in the UI. When building with `codemagic.yaml`, the API keys are added in the configuration file, see the instructions [here](../yaml/distribution/#setting-up-code-signing-for-ios).
+
+### Support for multiple team oweners
+
+Codemagic teams can now have multiple team owners. Team owners can manage team integrations, add or remove team members and set up billing. Team owners can also upgrade members to owners or downgrade other owners to member. Read more about how teams work [here](../teams/teams).
+
 ## July 2020
 
 ### New project setup guide

commit 52b0cfd663f46b1722f635bd7b6b91309788872d
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Tue Sep 8 16:26:46 2020 +0300

    Update common-issues.md (#172)
    
    * Update common-issues.md
    
    updated common issues,
    
    removed 2FA authentication related error, as we do not authenticate users like that anymore, and added a common issue with App Store Connect set up.
    
    * Update common-issues.md
    
    Editing. Added info about yaml as well
    
    * Update common-issues.md
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 50a3075..4d3d969 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -4,19 +4,18 @@ title: Common issues
 weight: 1
 ---
 
-## Two-factor authentication for Apple Developer Portal integration fails
+## iOS errors regarding creating authentication sessions
 
-Recently, Apple changed their private API which affects the way third-party systems offer two-factor authentication for Apple Developer Portal. This may result in two-factor authentication failing for the Apple Developer Portal integration in Codemagic despite entering a correct authentication code.
+When App Store Connect is not correctly set up, users might encounter an error message similar to the following:
 
-        Apple Developer Portal authentication failed
-        Two factor authentication failed for user@domain.com: Incorrect Verification Code: Incorrect verification code
-
-If you see the error message above and are convinced you have entered the correct authentication code, you can try the following workarounds:
+```
+altool[xxx:xxx] *** Error: Unable to validate archive '/Users/builder/ipas/xxx'.
+altool[xxx:xxx] *** Error: code -22020 (Unable to validate your application. We are unable to create an authentication session.)
+```
 
- * Change your Apple Developer Portal password
- * Log out from all the devices except the one you want to use for receiving the authentication code
+The most common reason for the occurrence of this error message is using Apple ID password instead of [app-specific password](https://support.apple.com/en-us/HT204397) in App Store Connect publishing settings. 
 
-If the suggestions above do not work for you, you can export your current UI configuration and switch to building using `codemagic.yaml`, see more information in [Configuration as code (YAML)](../building/yaml).
+To generate an app-specific password, sign in to your [Apple ID account page](https://appleid.apple.com/account/manage), navigate to the **Security** section and click **Generate Password...** below **App-Specific Passwords**. The generated app-specific password will be in this format: `abcd-efgh-ijkl-mnop`. Insert this value into the Codemagic UI or as a password in `codemagic.yaml` when setting up publishing to App Store Connect. Note that the password should be generated with the same Apple account that you are using for publishing.
 
 ## iOS code signing troubleshooting
 

commit dc0d16489a47fcaf9991c803fd99a9797d3d487d
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Tue Sep 8 11:22:32 2020 +0300

    Improvement/new env vars (#171)
    
    * added pr, pr number, clone depth. changed fci_branch to source on pr, as it's done in the code
    
    * false on fci_pull_request
    
    * repo slug details
    
    * PROJECT_BUILD_NUMBER
    
    * fix comments

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 92ccb63..5991971 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -23,11 +23,16 @@ Here you'll find some of the read-only environment variables explained.
 |--------------------------|-----------------------------------------------------------------------------------------------------------------|
 | CI                       | true                                                                                                            |
 | CONTINUOUS_INTEGRATION   | true                                                                                                            |
-| BUILD_NUMBER             | Number of the build for this project in Codemagic                                                               |
+| BUILD_NUMBER             | Number of the build for this project in Codemagic for the given workflow                                        |
+| PROJECT_BUILD_NUMBER     | Number of the build for this project in Codemagic                                                               |
 | FLUTTER_ROOT             | Absolute path to Flutter SDK                                                                                    |
-| FCI_BRANCH               | The current branch being built, for pull requests it is the destination branch                                  |
+| FCI_BRANCH               | The current branch being built, for pull requests it is the source branch                                       |
+| FCI_REPO_SLUG            | The slug of the repository that is currently being built in the form `owner_name/repository_name`. Unset for repositories added from custom source|
 | FCI_COMMIT               | Commit hash that is currently being built by Codemagic, for pull request builds it is the hash of the source commit |
-| FCI_CLONE_UNSHALLOW      | If set to `true`, performs a full clone of the repository instead of top 50 commits                              |
+| FCI_PULL_REQUEST         | `true`, if the current build is building a pull request, `false` otherwise                                      |
+| FCI_PULL_REQUEST_NUMBER  | Set to Integer ID of the pull request for the Git provider (Bitbucket, Github etc) if the current build is building a pull request, unset otherwise|
+| FCI_CLONE_UNSHALLOW      | If set to `true` performs a full clone of the repository instead of top 50 commits                             |
+| FCI_CLONE_DEPTH          | Specifies the number of commits to be fetched from the repository when cloning, default: 50. Specifying a smaller number can decrease the default fetching time|
 | FCI_PROJECT_ID           | UUID of the project that is being built                                                                         |
 | FCI_BUILD_ID             | UUID of the build                                                                                               |
 | FCI_TEST_STEP_STATUS     | Test step status, success or failure                                                                            |

commit 1eedaa32fba9b0626c85019fa4a984913ef4e918
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon Sep 7 11:22:01 2020 +0300

    base image update (#169)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 508f434..e87d0f7 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -13,22 +13,22 @@ weight: 2
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 50GB)`
+- Disk `322GB (Free Space: 62GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
 - cocoapods `1.9.3`
 - curl
-- dart `2.8.4`
+- dart `2.9.2`
 - docker `19.03.8`
-- fastlane `2.153.1`
+- fastlane `2.157.3`
 - firebase `7.6.2`
-- flutter `1.20.2 ($HOME/programs/flutter)`
+- flutter `1.20.3 ($HOME/programs/flutter)`
 - gem `3.0.3`
-- git `2.27.0`
+- git `2.28.0`
 - gradle `6.1.1`
-- homebrew `2.4.9`
+- homebrew `2.4.16`
 - jq
 - node `12.14.0`
 - npm `6.14.7`
@@ -40,24 +40,21 @@ weight: 2
 - tar
 - unzip
 - wget
-- yarn `1.22.4`
+- yarn `1.22.5`
 - yq
 - zip
 
-## Xcode 11.6 (11E708)
+## Xcode 11.7 (11E801a)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
 
-Xcode path: `/Applications/Xcode-11.6.app`
+Xcode path: `/Applications/Xcode-11.7.app`
 
-With Xcode `11.6` build version `11E708` the following runtimes and devices are installed:
+With Xcode `11.7` build version `11E801a` the following runtimes and devices are installed:
 
 ### Runtimes
 
 - iOS 11.4
-- iOS 12.0
-- iOS 12.1
-- iOS 12.2
 - iOS 12.4
 - iOS 13.0
 - iOS 13.1
@@ -66,7 +63,13 @@ With Xcode `11.6` build version `11E708` the following runtimes and devices are
 - iOS 13.4
 - iOS 13.5
 - iOS 13.6
+- iOS 13.7
 - tvOS 11.3
+- tvOS 11.4
+- tvOS 12.0
+- tvOS 13.0
+- tvOS 13.2
+- tvOS 13.3
 - tvOS 13.4
 - watchOS 6.2
 
@@ -128,6 +131,7 @@ With Xcode `11.6` build version `11E708` the following runtimes and devices are
 
 ## Other Xcode versions
 
+- 11.6 (11E708) `/Applications/Xcode-11.6.app`
 - 11.5 (11E608c) `/Applications/Xcode-11.5.app`
 - 11.4.1 (11E503a) `/Applications/Xcode-11.4.app`
 - 11.3.1 (11C505) `/Applications/Xcode-11.3.app`

commit 9afb569b2d083c93d3b32f51de29a61dba72e132
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Mon Sep 7 10:21:49 2020 +0300

    Edit yaml codesign layout (#166)
    
    * Update distribution.md
    
    * Update distribution.md
    
    * Update distribution.md
    
    * Update distribution.md

diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
index 4bc24c8..9d5de18 100644
--- a/content/yaml/distribution.md
+++ b/content/yaml/distribution.md
@@ -16,7 +16,9 @@ All generated artifacts can be published to external services. The available int
 Codemagic uses the [keychain](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md#keychain) utility to manage macOS keychains and certificates.
 {{</notebox>}}
 
-In order to use **automatic code signing** and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect and define the environment variables listed below. Make sure to [encrypt](#encrypting-sensitive-data) the values of the variables before adding them to the configuration file.
+### Setting up automatic code signing
+
+In order to use **automatic code signing** and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect and define the environment variables listed below. Make sure to [encrypt](../yaml/yaml/#encrypting-sensitive-data) the values of the variables before adding them to the configuration file. Note that when encrypting files via the UI, they are base64 encoded, thus in order to properly encrypt the App Store Connect private key and the certificate private key, copy the contents of the files and encrypt the content instead of the files themselves in the [Codemagic encryption interface](../yaml/yaml/#encrypting-sensitive-data). You can then add the encrypted values to the respective environment variables.
 
 * `APP_STORE_CONNECT_PRIVATE_KEY`
 
@@ -46,6 +48,19 @@ In order to use **automatic code signing** and have Codemagic manage signing cer
 Alternatively, each property can be specified in the scripts section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
 {{</notebox>}}
 
+{{<notebox>}}
+Codemagic uses the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) utility for generating and managing certificates and provisioning profiles and performing code signing.
+{{</notebox>}}
+
+    - find . -name "Podfile" -execdir pod install \;
+    - keychain initialize
+    - app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
+      --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
+      --create  # Allow creating resources if existing are not found.
+    - keychain add-certificates
+
+The available provisioning profile types are described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store).
+
 ### Setting up manual code signing
 
 In order to use **manual code signing**, [encrypt](../yaml/yaml/#encrypting-sensitive-data) your signing certificate, the certificate password (if the certificate is password-protected) and the provisioning profile, and set the encrypted values to the following environment variables:
@@ -74,21 +89,6 @@ With the manual code signing method, you are required to upload the signing cert
       # when using a certificate that is not password-protected
       keychain add-certificates --certificate /tmp/certificate.p12
 
-### Setting up automatic code signing
-
-{{<notebox>}}
-Codemagic uses the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) utility for generating and managing certificates and provisioning profiles and performing code signing.
-{{</notebox>}}
-
-    - find . -name "Podfile" -execdir pod install \;
-    - keychain initialize
-    - app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
-      --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
-      --create  # Allow creating resources if existing are not found.
-    - keychain add-certificates
-
-The available provisioning profile types are described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store).
-
 ## Setting up code signing for Android
 
 The following templates show code signing using `key.properties`.

commit 1c51efae5e93d29c7f7b526591f8b1b54958c925
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Fri Sep 4 16:28:38 2020 +0300

    add to app docs (#148)
    
    * add to app docs
    
    * editing
    
    * Editing
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan.lab.mobi>

diff --git a/content/yaml/building_a_native_app_with_flutter_module.md b/content/yaml/building_a_native_app_with_flutter_module.md
new file mode 100644
index 0000000..c1ddf33
--- /dev/null
+++ b/content/yaml/building_a_native_app_with_flutter_module.md
@@ -0,0 +1,89 @@
+---
+title: Building a native app with a Flutter module
+description: Building a native iOS or Android app with a Flutter module
+weight: 6
+---
+
+## Add-to-app
+
+Flutter can be integrated into your existing application as a library to render a part of your app’s UI in Flutter. To add a Flutter module to an existing app, please refer to [the official Flutter documentation](https://flutter.dev/docs/development/add-to-app).
+
+The examples below show how to build apps containing Flutter modules using `codemagic.yaml`. The examples provided here are inspired by [Flutter add-to-app samples](https://github.com/flutter/samples/tree/master/add_to_app) where the Flutter module directory (reffered to as `my_flutter_module` in templates) is on the same level as the host app directory (reffered to as `my_host_app`). 
+
+### Using a Flutter module (with dependencies) as a library
+
+Using a Flutter module as a library means that it will be built from the source each time the host app builds. 
+
+* In an Android app:
+
+```yaml
+scripts:
+  - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/my_host_app/local.properties"
+  - cd my_flutter_module && flutter pub get
+  - cd my_host_app && ./gradlew assembleDebug
+```
+
+* In an iOS app:
+
+```yaml
+scripts:
+  - echo 'previous step'
+  - name: Build Flutter module from the source
+    script: |
+      cd my_flutter_module
+      flutter pub get
+      flutter build ios --release --no-codesign
+      cd .ios
+      pod install
+  - name: Build host application
+    script: |
+      cd my_host_app
+      pod install
+      xcodebuild build -workspace "MyXcodeProject.xcworkspace" -scheme "MyXcodeScheme" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
+```
+
+{{<notebox>}}
+If you don't have a workspace, use 
+
+`-project "MyXcodeProject.xcodeproj"` instead of the 
+
+`-workspace "MyXcodeWorkspace.xcworkspace"` option.
+{{</notebox>}}
+
+### Using a prebuilt Flutter module
+
+Using a prebuilt module means that you don't need to build it every time the host app is built if there are no changes to the module. You may speed up your overall building time by precompiling your Flutter module once, committing it to the repository and reusing it afterwards without the need to build it from source.
+
+* In an Android app:
+
+```yaml
+scripts:
+  - echo 'previous step'
+  - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/my_host_app/local.properties"
+  - name: Precompile the Flutter module
+    script: |
+      cd my_flutter_module
+      flutter pub get
+      flutter build aar
+  - name: Build host application
+    script: |
+      cd my_host_app
+      ./gradlew assembleDebug
+```
+
+* In an iOS app:
+
+```yaml
+scripts:
+  - echo 'previous step'
+  - name: Precompile the Flutter module
+    script: |
+      cd my_flutter_module
+      flutter packages get
+      flutter build ios-framework --output=$FCI_BUILD_DIR/my_host_app/Flutter
+  - name: Build host application
+    script: |
+      cd my_host_app
+      pod install
+      xcodebuild build -project "MyXcodeProject.xcodeproj" -scheme "MyXcodeScheme" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
+```
\ No newline at end of file
diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
index 71aef3d..4bc24c8 100644
--- a/content/yaml/distribution.md
+++ b/content/yaml/distribution.md
@@ -1,7 +1,7 @@
 ---
 title: Code signing and publishing
 description: Code signing and publishing with YAML.
-weight: 8
+weight: 9
 ---
 
 All Android and iOS applications have to be digitally signed before release to confirm their author and guarantee that the code has not been altered or corrupted since it was signed. In the case of mobile apps, this means that users can be assured that the apps they download from the App Store Connect or Google Play Store are from developers they can trust.
diff --git a/content/yaml/running-a-custom-script.md b/content/yaml/running-a-custom-script.md
index 54e4837..8d0ce9c 100644
--- a/content/yaml/running-a-custom-script.md
+++ b/content/yaml/running-a-custom-script.md
@@ -1,7 +1,7 @@
 ---
 title: Running a custom script
 description: Custom scripts with YAML.
-weight: 6
+weight: 7
 ---
 
 You can run shell (`sh`) scripts directly in your `.yaml` file, or run scripts in other languages by defining the language with a shebang line or by launching a script file present in your repository.
diff --git a/content/yaml/runninglocally.md b/content/yaml/runninglocally.md
index d7b8080..6dc9267 100644
--- a/content/yaml/runninglocally.md
+++ b/content/yaml/runninglocally.md
@@ -1,7 +1,7 @@
 ---
 title: Using Codemagic CLI tools locally
 description: Using Codemagic CLI tools locally or in other environments.
-weight: 9
+weight: 10
 ---
 
 [codemagic-cli-tools](https://pypi.org/project/codemagic-cli-tools/) is a set of tools to simplify builds at Codemagic. They can be installed with pip (`pip3 install codemagic-cli-tools`) and run locally. For more information, review the full documentation on [CLI tools](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs#cli-tools).
diff --git a/content/yaml/testing.md b/content/yaml/testing.md
index 5decc7d..307ddf4 100644
--- a/content/yaml/testing.md
+++ b/content/yaml/testing.md
@@ -1,7 +1,7 @@
 ---
 title: Testing
 description: Testing with YAML.
-weight: 7
+weight: 8
 ---
 
 Test scripts are added under `scripts` in the [overall architecture](../yaml/yaml/#template), before the build commands.

commit d40df8879b39cf77a6635d25c4ff984973d3bc23
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Fri Sep 4 16:28:22 2020 +0300

    reminder to setup webhooks (#154)
    
    * reminder to setup webhooks
    
    * editing
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan.lab.mobi>

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 7b66114..f447430 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -46,7 +46,9 @@ If you don't enable any automatic build triggers, you can only start builds manu
 
 Codemagic automatically adds webhooks to GitHub, GitLab, and Bitbucket after you have enabled any of the triggers in **App settings** > **Automatic build triggering**.
 
-In case of failure to add a webhook, you should manually set up the webhook in your repository hosting service to enable automatic builds in response to events in the repository.
+### Set up webhooks manually
+
+If Codemagic is unable to add a webhook automatically or when you are building an app that is added from a custom source, then you must set up the webhook in your repository hosting service to enable automatic builds in response to events in the repository. Webhooks must be also set up manually for `codemagic.yaml` builds.
 
 * **GitHub**: Open your project and navigate to **Settings** > **Webhooks** > **Add webhook**, paste the **payload URL** from below, make sure **Content type** is `application/json` and select the following events: **Branch or tag creation**, **Pull requests**, **Pushes**.
 
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 6b37537..5a142c9 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -7,7 +7,7 @@ weight: 4
 You can add apps from public or private Git-based repositories. 
 
 {{<notebox>}}
-* Note that webhooks for automatic build triggering need to be [set up manually](../building/automatic-build-triggering/#webhooks).
+* Note that webhooks for automatic build triggering need to be [set up manually](../building/automatic-build-triggering/#setup-webhooks-manually).
 {{</notebox>}}
 
 ## Connecting repository via HTTP/HTTPS
diff --git a/content/yaml/yaml.md b/content/yaml/yaml.md
index 4508317..84f956f 100644
--- a/content/yaml/yaml.md
+++ b/content/yaml/yaml.md
@@ -171,6 +171,10 @@ See the default software versions on Codemagic build machines [here](../releases
 
 ### Triggering
 
+{{<notebox>}}
+You need to set up webhooks in the repository hosting service to enable automatic builds in response to events in the repository. Please refer [here](../building/automatic-build-triggering/#setup-webhooks-manually) for details.
+{{</notebox>}}
+
 `triggering:` defines the events for automatic build triggering and watched branches. If no events are defined, you can start builds only manually. 
 
 A branch pattern can match the name of a particular branch, or you can use wildcard symbols to create a pattern that matches several branches. Note that for **pull request builds**, you have to specify whether the watched branch is the source or the target of the pull request.

commit 2e82201441057cc150ec710c61216a0f93d8da5e
Author: madispp <madispp@gmail.com>
Date:   Fri Sep 4 11:51:09 2020 +0300

    Fix ssh-keygen command for newer Mac OS versions (#152)

diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
index 969f4ed..71aef3d 100644
--- a/content/yaml/distribution.md
+++ b/content/yaml/distribution.md
@@ -40,7 +40,7 @@ In order to use **automatic code signing** and have Codemagic manage signing cer
 
   A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal:
 
-      ssh-keygen -t rsa -b 2048 -f ~/Desktop/codemagic_private_key -q -N ""
+      ssh-keygen -t rsa -b 2048 -m PEM -f ~/Desktop/codemagic_private_key -q -N ""
 
 {{<notebox>}}
 Alternatively, each property can be specified in the scripts section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
@@ -307,4 +307,4 @@ And then export the filepath on the gradlew task
 More detailed examples about using YAML for code signing and publishing can be found here:
 
 * <a href="https://blog.codemagic.io/distributing-module-yaml/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-module-yaml')">Native Android project</a>
-* <a href="https://blog.codemagic.io/distributing-native-ios-sdk-with-flutter-module-using-codemagic/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-native-ios-sdk-with-flutter-module-using-codemagic/')">Native iOS project</a>
\ No newline at end of file
+* <a href="https://blog.codemagic.io/distributing-native-ios-sdk-with-flutter-module-using-codemagic/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-native-ios-sdk-with-flutter-module-using-codemagic/')">Native iOS project</a>

commit 96ccf270ecf2b8551e859a3e84438c6a1ec35153
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Fri Sep 4 10:55:09 2020 +0300

    update publishing description (#165)
    
    Publishing password may be misleading as appleID password, but in fact it is not - we require an app specific password associated with the apple ID instead.

diff --git a/content/yaml/building-a-native-ios-app.md b/content/yaml/building-a-native-ios-app.md
index 2ccc632..784e476 100644
--- a/content/yaml/building-a-native-ios-app.md
+++ b/content/yaml/building-a-native-ios-app.md
@@ -117,4 +117,4 @@ The following example shows a workflow that can be used to publish your iOS app
         publishing:
             app_store_connect:                 
             apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE  
-            password: Encrypted(...)
\ No newline at end of file
+            password: Encrypted(...) # PUT YOUR APP-SPECIFIC-PASSWORD HERE https://support.apple.com/en-us/HT204397

commit 270e73806e27cf7ad5711edf97bc90cf34ab71bb
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Sep 2 11:58:06 2020 +0300

    Update common issues with provisioning profile error (#158)
    
    * add provisiong profile error
    
    * add back accidental change
    
    * add spacing
    
    * language improvement

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 683d47b..50a3075 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -93,26 +93,30 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
 
 This issue is known to be fixed on the `master` channel.
 
-## iOS build error with `Provisioning profile`
-
-**Description**:
-
-This issue takes place when trying to use an outdated **Provisioning profile** that does not include 
-Associated Domains. 
-
-**Log output**: 
+## iOS build errors with `Provisioning profile`
+This is the list of the most common issues that may cause iOS provisioning profile errors during a CI build.
 
+### You are using an outdated Provisioning profile that does not include Associated Domains.
+In such cases, you will often see an error message similar to this one:
 ```
 ❌ error: Provisioning profile "CodeMagic" doesn't support the Associated Domains capability. (in target 'Runner' from project 'Runner').
  
 ❌ error: Provisioning profile "CodeMagic" doesn't include the com.apple.developer.associated-domains entitlement. (in target 'Runner' from project 'Runner').
 ```
 
-**Solution**: 
+**Solution**:
 
- Log in to Apple Developer Account and verify :
-  - That you have the correct bundle Id.  
-  - If missing add the Associated Domain Entitlement from there.
-  - Update Provisioning profile and use it in to configure your project.
+Log in to your Apple Developer account and verify:
+* That you are using the correct bundle identifier.
+* If missing, add the Associated Domain Entitlement from there.
+* Update the provisioning profile and use it to configure your project.
 
- 
+### The bundle identifiers are not properly set for your project. 
+In such cases, you will often see an error message similar to this one:
+```
+❌ error: Runner has conflicting provisioning settings. Runner is automatically signed, but code signing identity Apple Push Services has been manually specified. Set the code signing identity value to “iPhone Developer” in the build settings editor, or switch to manual signing in the Signing & Capabilities editor. (in target ‘Runner’ from project ‘Runner’)
+```
+
+**Solution**:
+* Confirm that you have set the correct bundle identifiers for all targets in Xcode.
+* Verify that the bundle identifier set in Xcode matches the bundle identifier set in the UI under code signing.

commit 1a4819d884345e8d17950b1bda153c0925883618
Author: nevercode-kevin <68225534+nevercode-kevin@users.noreply.github.com>
Date:   Tue Sep 1 11:42:00 2020 +0200

    Added workflow examples for React Native, native iOS and native Android (#162)
    
    * Added workflow examples for React Native, native iOS and native Android
    
    * Syntax updates for consistency
    
    * Removed colon for consistency

diff --git a/content/yaml/building-a-native-android-app.md b/content/yaml/building-a-native-android-app.md
index dc843f6..9e6a3b6 100644
--- a/content/yaml/building-a-native-android-app.md
+++ b/content/yaml/building-a-native-android-app.md
@@ -15,4 +15,69 @@ To test, code sign and publish an Android app:
 
 * The code for testing an Android app also goes under `scripts`. A few examples of testing can be found [here](../yaml/testing).
 * All Android applications need to be signed before release. For Gradle code signing configuration refer to the [documentation](../code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing). More information about code signing with YAML in general is [here](../yaml/distribution).
-* All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
\ No newline at end of file
+* All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
+
+## Android workflow example
+
+The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
+
+    workflows:
+        android-workflow:
+            name: Android Workflow
+            max_build_duration: 60
+            instance_type: mac_pro
+            environment:
+                vars:
+                    CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
+                    CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
+                    CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
+                    CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
+                node: latest
+            triggering:
+                events:
+                    - push
+                    - tag
+                    - pull_request
+                branch_patterns:
+                    - pattern: release
+                    include: true
+                    source: true
+            scripts:
+                - name: Set up local properties
+                  script: |
+                    echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+                - name: Set up keystore
+                  script: |
+                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
+                    storePassword=$CM_KEYSTORE_PASSWORD
+                    keyPassword=$CM_KEY_ALIAS_PASSWORD
+                    keyAlias=$CM_KEY_ALIAS_USERNAME
+                    storeFile=/tmp/keystore.keystore
+                    EOF
+                - name: Build Android app
+                  script: |
+                    ./gradlew assembleRelease
+            artifacts:
+                - android/app/build/outputs/**/**/*.apk
+            publishing:
+                google_play:
+                    credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
+                    track: internal
+
+{{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle`. {{</notebox>}}
+
+Incrementing the version code can be done as follows:
+
+```
+    android {
+        ...
+        
+        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
+        defaultConfig {
+            ...
+            versionCode appVersionCode
+            ...
+        }
+    }
+```
\ No newline at end of file
diff --git a/content/yaml/building-a-native-ios-app.md b/content/yaml/building-a-native-ios-app.md
index 7e86748..2ccc632 100644
--- a/content/yaml/building-a-native-ios-app.md
+++ b/content/yaml/building-a-native-ios-app.md
@@ -59,3 +59,62 @@ To test, code sign and publish an iOS app:
 * The code for testing an iOS app also goes under `scripts`, before build commands. An example for testing an iOS app can be found [here](../yaml/testing/#native-ios).
 * All iOS applications need to be signed before release. A full example of iOS code singing with YAML is available [here](../yaml/distribution).
 * All generated artifacts can be published to external services. The available integrations currently are email, Slack and App Store Connect. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
+
+## iOS workflow example
+
+The following example shows a workflow that can be used to publish your iOS app to App Store Connect.
+
+    workflows:
+        ios-workflow:
+        name: ios_workflow
+        environment:
+            vars:
+            XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # PUT YOUR WORKSPACE NAME HERE
+            XCODE_SCHEME: "YOUR_SCHEME_NAME" # PUT THE NAME OF YOUR SCHEME HERE
+            CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
+            CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
+            CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
+            xcode: latest
+            cocoapods: default
+        triggering:
+            events:
+            - push
+            branch_patterns:
+            - pattern: master
+                include: true
+                source: true
+        scripts:
+            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+            script: |
+                keychain initialize
+            - name: Set up Provisioning profiles from environment variables
+              script: |
+                PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+                mkdir -p "$PROFILES_HOME"
+                PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+                echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+                echo "Saved provisioning profile $PROFILE_PATH"
+            - name: Set up signing certificate
+              script: |
+                echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+                keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+            - name: Increment build number
+              script: |
+                #!/bin/sh
+                set -e
+                set -x
+                cd $FCI_BUILD_DIR
+                agvtool new-version -all $(($BUILD_NUMBER +1))
+            - name: Set up code signing settings on Xcode project
+              script: |
+                xcode-project use-profiles
+            - name: Build ipa for distribution
+              script: |
+                xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
+        artifacts:
+            - build/ios/ipa/*.ipa
+            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
+        publishing:
+            app_store_connect:                 
+            apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE  
+            password: Encrypted(...)
\ No newline at end of file
diff --git a/content/yaml/building-a-react-native-app.md b/content/yaml/building-a-react-native-app.md
index 7265ecc..41e9e6b 100644
--- a/content/yaml/building-a-react-native-app.md
+++ b/content/yaml/building-a-react-native-app.md
@@ -35,3 +35,143 @@ To test and publish a React Native app:
 * The code for testing a React Native app also goes under `scripts`, before build commands. An example for testing a React Naive app can be found [here](../yaml/testing/#react-native-unit-test).
 * All iOS and Android applications need to be signed before release. Different script examples are available [here](../yaml/distribution/).
 * All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
+
+## iOS workflow example
+
+The following example shows a workflow that can be used to publish your iOS app to App Store Connect.
+
+    workflows:
+        ios-workflow:
+            name: iOS Workflow
+            max_build_duration: 60
+            instance_type: mac_pro
+            environment:
+                vars:
+                    XCODE_WORKSPACE: "YOUR_WORKSPACE_NAME.xcworkspace"  # YOUR WORKSPACE NAME HERE
+                    XCODE_SCHEME: "YOUR_SCHEME_NAME" # THE NAME OF YOUR SCHEME HERE
+                    CM_CERTIFICATE: Encrypted(...) # PUT THE ENCRYPTED DISTRIBUTION CERTIFICATE HERE
+                    CM_CERTIFICATE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED CERTIFICATE PASSWORD HERE
+                    CM_PROVISIONING_PROFILE: Encrypted(...) # PUT THE ENCRYPTED PROVISIONING PROFILE HERE
+                node: latest
+                xcode: latest
+                cocoapods: default
+            triggering:
+                events:
+                    - push
+                    - tag
+                    - pull_request
+                branch_patterns:
+                    - pattern: develop
+                    include: true
+                    source: true
+            scripts:
+                - name: Install npm dependencies
+                  script: |
+                    npm install
+                - name: Install CocoaPods dependencies
+                  script: |
+                    cd ios && pod install
+                - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
+                  script: |
+                    keychain initialize
+                - name: Set up Provisioning profiles from environment variables
+                  script: |
+                    PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+                    mkdir -p "$PROFILES_HOME"
+                    PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+                    echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+                    echo "Saved provisioning profile $PROFILE_PATH"
+                - name: Set up signing certificate
+                  script: |
+                    echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+                    keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+                - name: Increment build number
+                  script: |
+                    #!/bin/sh
+                    set -e
+                    set -x
+                    cd $FCI_BUILD_DIR/ios
+                    agvtool new-version -all $(($BUILD_NUMBER +1))
+                - name: Set up code signing settings on Xcode project
+                  script: |
+                    xcode-project use-profiles
+                - name: Build ipa for distribution
+                  script: |
+                    xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme $XCODE_SCHEME
+            artifacts:
+                - build/ios/ipa/*.ipa
+                - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM            
+            publishing:
+            app_store_connect:                 
+                apple_id: your_apple_id@example.com  # PUT YOUR APPLE ID HERE
+                password: Encrypted(...) # THE ENCRYPTED APP-SPECIFIC PASSWORD GOES HERE
+
+
+## Android workflow example
+
+The following example shows how to set up a workflow that builds your app and publishes to a Google Play internal track.
+
+    workflows:
+        android-workflow:
+            name: Android Workflow
+            max_build_duration: 60
+            instance_type: mac_pro
+            environment:
+                vars:
+                    CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
+                    CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
+                    CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
+                    CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
+                node: latest
+            triggering:
+                events:
+                    - push
+                    - tag
+                    - pull_request
+                branch_patterns:
+                    - pattern: release
+                    include: true
+                    source: true
+            scripts:
+                - name: Install npm dependencies
+                  script: |
+                    npm install
+                - name: Set up local properties
+                  script: |
+                    echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+                - name: Set up keystore
+                  script: |
+                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
+                    storePassword=$CM_KEYSTORE_PASSWORD
+                    keyPassword=$CM_KEY_ALIAS_PASSWORD
+                    keyAlias=$CM_KEY_ALIAS_USERNAME
+                    storeFile=/tmp/keystore.keystore
+                    EOF
+                - name: Build Android app
+                  script: |
+                    cd android && ./gradlew assembleRelease
+            artifacts:
+                - android/app/build/outputs/**/**/*.apk
+            publishing:
+                google_play:
+                    credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
+                    track: internal
+
+    
+{{<notebox>}}Note that you should incremenet the versionCode in `android/app/build.gradle` {{</notebox>}}
+
+Incrementing the version code can be done as follows:
+
+```
+    android {
+        ...
+        
+        def appVersionCode = Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
+        defaultConfig {
+            ...
+            versionCode appVersionCode
+            ...
+        }
+    }
+```
\ No newline at end of file

commit 5445f2f7dcb1ca5eb368414fe656fc754450fae7
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Sep 1 11:47:25 2020 +0300

    add menu from main page (#164)
    
    * add menu from main page
    
    * cleanup
    
    * animating burger-icon for content menu header
    
    * use rsjs approach
    
    * fix search results positions
    
    * polishing
    
    * fix production params

diff --git a/assets/js/main.js b/assets/js/main.js
index d22d371..1e81239 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -1,19 +1,20 @@
+const desktopScreenWidth = 1001;
+
 // Category toggle open
-var navCategory = $('#docs-menu li')
+var navCategory = $('[data-js-docs-menu-item]')
 navCategory.each(function() {
-  $('.category-name', this).on('click', function() {
+  $('[data-js-category-name]', this).on('click', function() {
     var $parent = $(this).parent()
 
-    $parent.find('.category-posts').slideToggle(150, function complete() {
+    $parent.find('[data-js-category-posts]').slideToggle(150, function complete() {
       $parent.toggleClass('open')
     })
   })
 })
 // Menu toggle
-var menuToggle = $('#menu-toggle')
-menuToggle.on('click', function(e) {
-  $(this).toggleClass('open')
-  $('#docs-menu').toggleClass('open')
+$('[data-js-docs-menu-toggle]').on('click', function() {
+  $('[data-js-docs-menu-toggle-icon]').toggleClass('open')
+  $('[data-js-docs-menu]').toggleClass('open')
 })
 
 // Create permalinks
@@ -71,30 +72,185 @@ $(document).ready(function() {
   contentTable.each(function() {
     $(this).wrap('<div class="table-wrap"></div>')
   })
+  elementsTopPosition()
 })
 
-// Table of content
+$(document).ready(function() {
 
-let lastScrollPosition = 0
+  window.userRequest = fetchUser()
 
-$(document).ready(function () {
-    elementsTopPosition()
-})
-$(window).on('load scroll resize', function () {
-    elementsTopPosition()
+  // Fetch user
+  async function fetchUser() {
+      const url = '{{ site.Param "backendURL" }}/user'
+      const timeout = 3000
+
+      const controller = new AbortController()
+      const signal = controller.signal
+
+      setTimeout(() => controller.abort(), timeout)
+
+      try {
+          const response = await fetch(url, {
+              mode: 'cors',
+              credentials: 'include',
+              headers: { Accept: 'application/json' },
+              signal,
+          })
+          try {
+              return { response, json: await response.json() }
+          } catch (error) {
+              return { response, error }
+          }
+      } catch (error) {
+          return { error }
+      }
+  }
+
+  // Menu toggle
+  $('[data-js-header-menu-toggle]').on('click', function() {
+      $(this).toggleClass('open')
+      const visible = $('[data-js-header-menu-wrap]').is(':visible')
+      if (visible) {
+          $('[data-js-header-menu-wrap]').slideUp(200)
+      } else {
+          $('[data-js-header-menu-wrap]').slideDown(200)
+      }
+  })
+
+  // Open extenral links in new tab
+  $('a').each(function() {
+      var hostName = window.location.hostname
+      var href = $(this).attr('href')
+      if (href && !href.includes(hostName) && !href.startsWith('/') && !href.startsWith('#')) {
+          $(this).attr('target', '_blank')
+      }
+  })
+
+  authenticateUser()
+
+  async function authenticateUser() {
+    const { response, json } = await window.userRequest
+    window.auth = { loaded: true }
+
+    if (response && response.ok && json && json.user) {
+        Object.assign(window.auth, json.user.user)
+        if (json.user.ok) {
+            window.loggedIn = true
+            window.auth._id = json.user._id
+            $('[data-js-header-auth-user]').addClass('transition-in')
+            $('[data-js-header-user-avatar]').html('<img src="' + auth.avatarUrl + '" alt=""/>')
+        } else {
+            window.loggedIn = false
+            $('[data-js-header-auth-visitor]').addClass('transition-in')
+        }
+    } else {
+        window.loggedIn = false
+        $('[data-js-header-auth-visitor]').addClass('transition-in')
+    }
+    $('[data-js-header-auth-loading]').addClass('transition-out')
+    setTimeout(function() {
+        $('[data-js-header-auth-loading-grey-line]').hide()
+    }, 1000)
+  }
+
+  $('[data-js-header-auth-logout]').on('click', userLogout)
+
+  async function userLogout() {
+    $('[data-js-header-authentication]').addClass('loading')
+    $('[data-js-header-auth-loading]')
+        .removeClass('transition-out')
+        .addClass('transition-in')
+    $('[data-js-header-auth-loading-grey-line]').show()
+    if ($(window).innerWidth() < 841) {
+        $('[data-js-header-menu-toggle]').removeClass('open')
+        $('[data-js-header-menu-wrap]').slideUp(200)
+    }
+    $('[data-js-header-menu-wrap]').slideUp(200)
+
+    const url = '{{ site.Param "backendURL" }}/logout'
+    const options = {
+        method: 'GET',
+        mode: 'cors',
+        credentials: 'include',
+        headers: { Accept: 'application/json' },
+    }
+    try {
+        await fetch(url, options)
+        $('[data-js-header-auth-user]')
+            .removeClass('transition-in')
+            .addClass('transition-out')
+        setTimeout(function() {
+            $('[data-js-header-auth-loading-grey-line]').hide()
+            $('[data-js-header-auth-visitor]')
+                .removeClass('transition-out')
+                .addClass('transition-in')
+        }, 1000)
+    } catch (error) {
+        location.reload()
+    } finally {
+        auth = { loaded: true }
+        window.loggedIn = false
+        $('[data-js-header-authentication]').removeClass('loading')
+        $('[data-js-header-auth-loading]')
+            .removeClass('transition-in')
+            .addClass('transition-out')
+    }
+  }
 })
+
+let lastScrollPosition = 0
+const sidebar = $('[data-js-sidebar]')
+const header = $('[data-js-header]')
+const docsMenu = $('[data-js-docs-menu]')
+const contentWrap = $('[data-js-content-wrap]')
+const searchResults = $('[data-js-search-results]')
+
+if ($(window).scrollTop() === 0) {
+  header.css('top', 0)
+  sidebar.css('top', header.innerHeight())
+}
+
 $(window).on('scroll', function () {
-    const currentScrollPosition = $(window).scrollTop()
-    window.scrollingDown = currentScrollPosition > lastScrollPosition
-    lastScrollPosition = currentScrollPosition
+  const currentScrollPosition = $(window).scrollTop()
+  // do not consider scrolling bounce effect as scrolling
+  if (currentScrollPosition >= 0 && currentScrollPosition <= $('body').height() - $(window).height()) {
+      window.scrollingDown = currentScrollPosition > lastScrollPosition
+      lastScrollPosition = currentScrollPosition
+  }
+})
+
+$(window).on('load scroll resize', function() {
+  const headerHeight = header.innerHeight()
+  const sidebarHeight = sidebar.innerHeight()
+  if (window.innerWidth < desktopScreenWidth) {
+    if (window.scrollingDown) {
+      sidebar.css('top', 0)
+      header.css('top', -headerHeight)
+      docsMenu.css('top', sidebarHeight)
+      searchResults.css('margin-top', sidebarHeight)
+      contentWrap.css('paddingTop', 0)
+    } else {
+      header.css('top', 0)
+      sidebar.css('top', headerHeight)
+      docsMenu.css('top', headerHeight + sidebarHeight)
+      searchResults.css('margin-top', headerHeight + sidebarHeight)
+      contentWrap.css('paddingTop', headerHeight)
+    }
+  } else {
+    docsMenu.css('top', 90)
+    searchResults.css('margin-top', 76)
+  }
+  elementsTopPosition() // TOC
 })
 
+// Table of content
+
 // Adjust elements positions depending on content shown
 function elementsTopPosition() {
   const windowHeight = $(window).height()
   const topOfWindow = $(window).scrollTop()
   const footerPosition = $('#footer').offset().top
-  const toc = $('#toc')
+  const toc = $('[data-js-toc]')
   const progress = (topOfWindow / (footerPosition - windowHeight)) * 100
 
   if (toc.length) {
@@ -104,7 +260,7 @@ function elementsTopPosition() {
           heightDifference = tableOfContentHeight - windowHeight * 0.8
           contentTablePull = heightDifference * progress / 100
       }
-      const tableOfContentTop = 30 - contentTablePull
+      const tableOfContentTop = 70 - contentTablePull
       toc.css('top', tableOfContentTop)
   }
 }
@@ -146,4 +302,4 @@ $(window).ready(function () {
     document.querySelectorAll('#main-content h2, #main-content h3').forEach(function (header) {
         observer.observe(header);
     });
-});
\ No newline at end of file
+});
diff --git a/assets/scss/_animations.scss b/assets/scss/_animations.scss
new file mode 100644
index 0000000..6358fa0
--- /dev/null
+++ b/assets/scss/_animations.scss
@@ -0,0 +1,62 @@
+@keyframes fadeIn {
+    0% {
+        opacity: 0;
+    }
+    100% {
+        opacity: 1;
+    }
+}
+@keyframes fadeOut {
+    0% {
+        opacity: 1;
+    }
+    100% {
+        opacity: 0;
+    }
+}
+@keyframes rotate {
+    0% {
+        transform: rotate(0deg);
+    }
+    100% {
+        transform: rotate(360deg);
+    }
+}
+@keyframes authLoading {
+    10% {
+        left: 0;
+        right: 100%;
+    }
+    50% {
+        left: 0;
+        right: 0;
+    }
+    90% {
+        left: 100%;
+        right: 0;
+    }
+}
+@keyframes authTransitionOut {
+    0% {
+        left: 0;
+    }
+    100% {
+        left: 100%;
+    }
+}
+@keyframes moveUp {
+    0% {
+        transform: translateY(10px);
+    }
+    100% {
+        transform: translateY(0);
+    }
+}
+@keyframes moveDown {
+    0% {
+        transform: translateY(-10px);
+    }
+    100% {
+        transform: translateY(0);
+    }
+}
\ No newline at end of file
diff --git a/assets/scss/_header.scss b/assets/scss/_header.scss
new file mode 100644
index 0000000..9749cc3
--- /dev/null
+++ b/assets/scss/_header.scss
@@ -0,0 +1,471 @@
+#nav-trigger {
+    position: absolute;
+    top: 0;
+}
+.inner {
+    width: auto;
+    margin: auto 40px;
+}
+#header {
+    padding: 14px 0;
+    position: fixed;
+    top: 0;
+    left: 0;
+    right: 0;
+    font-weight: 600;
+    font-size: 14px;
+    font-family: $font-family-bold;
+    z-index: 14;
+    opacity: 0;
+    transform: translateY(-10px);
+    animation: fadeIn 600ms forwards, moveDown 600ms forwards;
+    transition: all 300ms ease-in-out;
+
+    .inner {
+        display: flex;
+        justify-content: space-between;
+        flex-wrap: wrap;
+        align-items: center;
+    }
+    background-color: white;
+    box-shadow: 0 0 20px -10px transparentize(black, 0.7);
+}
+#header-logo {
+    width: 140px;
+    margin-right: 50px;
+}
+#menu-toggle {
+    display: none;
+    width: 42px;
+    height: 42px;
+    margin-right: -5px;
+    position: relative;
+    cursor: pointer;
+
+    .bar {
+        position: absolute;
+        left: 4px;
+        right: 4px;
+        height: 4px;
+        width: 34px;
+        border-radius: 4px;
+        background-color: white;
+        transition: all 300ms linear;
+        cursor: pointer;
+        overflow: hidden;
+
+        &:nth-child(1) {
+            top: 11px;
+        }
+        &:nth-child(2) {
+            top: 20px;
+        }
+        &:nth-child(3) {
+            top: 29px;
+        }
+        background-color: $black;
+    }
+    &.open .bar {
+        &:nth-child(1) {
+            top: 21px;
+            transform: rotate(45deg);
+        }
+        &:nth-child(2) {
+            top: 20px;
+            width: 0;
+        }
+        &:nth-child(3) {
+            top: 21px;
+            transform: rotate(-45deg);
+        }
+    }
+    @media (max-width: 840px) {
+        display: block;
+    }
+}
+#header-menu-wrap {
+    flex: 1;
+    display: flex;
+    justify-content: space-between;
+    align-items: center;
+
+    @media (min-width: 841px) {
+        .menu-link,
+        #login-link,
+        .label {
+            position: relative;
+            display: inline-block;
+            height: 48px;
+            line-height: 48px;
+            padding: 0 24px;
+            color: $black;
+            cursor: pointer;
+
+            &:hover {
+                color: $blue;
+            }
+        }
+        display: flex !important;
+    }
+}
+#header-main-menu {
+    display: flex;
+}
+
+#login-link {
+    color: $black;
+}
+
+@media (max-width: 1024px) {
+    #header-logo {
+        margin-right: 20px;
+    }
+    #header-menu-wrap .menu-link,
+    #header-menu-wrap #login-link,
+    #header-menu-wrap .label {
+        padding: 0 10px;
+    }
+}
+@media (min-width: 841px) {
+    #signup-btn {
+        background-color: $blue;
+        color: white;
+
+        &:hover {
+            background-color: $blue-hover;
+        }
+    }
+    #header-auth-visitor,
+    #header-auth-user {
+        position: absolute;
+        top: 0;
+        right: 0;
+        width: 100%;
+        display: flex;
+        align-items: center;
+        justify-content: flex-end;
+        transform: translateY(-100px);
+        opacity: 0;
+
+        &.transition-in {
+            transform: translateY(0);
+            transition: transform 0ms linear 0ms;
+            animation: fadeIn 500ms forwards 300ms;
+        }
+        &.transition-out {
+            transform: translateY(-100px);
+            animation: fadeOut 500ms forwards;
+            transition: transform 0ms linear 500ms;
+        }
+    }
+    #header-auth-user {
+        color: white;
+        cursor: pointer;
+
+        .label {
+            cursor: pointer;
+            transition: all 300ms linear;
+        }
+
+        &:hover {
+            color: $yellow;
+        }
+        &.transition-in ~ #header-auth-logout {
+            display: block;
+        }
+    }
+    #header-user-avatar {
+        flex-shrink: 0;
+        width: 40px;
+        height: 40px;
+        border-radius: 100%;
+        overflow: hidden;
+        border: 2px solid transparentize(white, 0.9);
+        cursor: pointer;
+
+        img {
+            cursor: pointer;
+        }
+        @at-root #header-authentication.loading & {
+            cursor: default;
+            filter: grayscale(50);
+            opacity: 0.8;
+        }
+    }
+    #header-auth-loading {
+        position: absolute;
+        left: 0;
+        right: 0;
+        height: 100%;
+        animation: fadeIn 400ms forwards;
+
+        &.transition-out {
+            animation: authTransitionOut 300ms forwards;
+        }
+
+        .grey-line {
+            position: absolute;
+            height: 10px;
+            background-color: $grey-l;
+            left: 0;
+            top: 16px;
+            right: 100%;
+            animation: authLoading 2s infinite linear;
+        }
+    }
+    #header-auth-logout {
+        display: none;
+        position: absolute;
+        right: 0;
+        top: 100%;
+        background: #f4f4f4;
+        padding: 16px 20px;
+        border-radius: 4px;
+        font-size: 12px;
+        width: 100px;
+        line-height: 13px;
+        cursor: pointer;
+        opacity: 0;
+        transform: translateY(10px);
+        transition: color 300ms linear;
+
+        &:hover {
+            color: $red;
+        }
+        @at-root #header-authentication.loading & {
+            display: none;
+        }
+    }
+    #header-authentication {
+        width: 220px;
+        height: 48px;
+        position: relative;
+        overflow: hidden;
+
+        &:hover {
+            overflow: visible;
+
+            #header-auth-logout {
+                animation: fadeIn 300ms forwards, moveUp 600ms forwards;
+            }
+        }
+    }
+}
+@media (max-width: 840px) {
+    #header-menu-wrap {
+        display: none;
+        position: fixed;
+        background: #fff;
+        top: 0;
+        left: 0;
+        flex: none;
+        right: 100px;
+        box-shadow: 0 0 20px transparentize($black, 0.7);
+        height: 100vh;
+        overflow: auto;
+
+        .menu-link {
+            position: relative;
+            display: block;
+            color: $black;
+            height: 60px;
+            line-height: 60px;
+            padding: 0 50px;
+            border-bottom: 1px solid $grey-l;
+
+            &::after {
+                content: '\f061';
+                font-family: 'Font Awesome 5 Free';
+                position: absolute;
+                right: 50px;
+                transition: right 300ms ease-in-out;
+            }
+            &:hover,
+            &:focus {
+                background-color: $grey-xl;
+                color: $blue;
+                &::after {
+                    right: 46px;
+                }
+            }
+        }
+    }
+    #header-main-menu {
+        display: block;
+    }
+    #header-authentication {
+        margin-top: 20px;
+
+        &.loading {
+            #header-auth-user,
+            #header-auth-logout {
+                background-color: $grey-l;
+                color: $grey-m;
+                cursor: default;
+                pointer-events: none;
+
+                img {
+                    filter: grayscale(50);
+                }
+            }
+        }
+    }
+    #header-auth-visitor,
+    #header-auth-user,
+    #header-auth-logout,
+    #header-auth-loading {
+        display: none;
+    }
+
+    @mixin resposiveNavBtn() {
+        height: 60px;
+        line-height: 60px;
+        margin: 10px 50px;
+        border-radius: 6px;
+        text-align: center;
+        transition: all 300ms ease-in-out;
+        @media (max-width: 420px) {
+            margin: 10px;
+        }
+    }
+    #header-auth-visitor {
+        &.transition-in {
+            display: block;
+        }
+        &.transition-out {
+            display: none;
+        }
+    }
+    #login-link {
+        background-color: $grey-xl;
+        display: block;
+        @include resposiveNavBtn();
+
+        &:hover,
+        &:focus {
+            background-color: $grey-l;
+        }
+    }
+    #signup-btn {
+        background-color: $blue;
+        color: white;
+        display: block;
+        @include resposiveNavBtn();
+
+        &:hover,
+        &:focus {
+            background-color: $blue-hover;
+        }
+    }
+    #header-auth-user {
+        background-color: $blue;
+        color: white;
+        @include resposiveNavBtn();
+
+        .label {
+            display: inline-block;
+            vertical-align: middle;
+        }
+        &:hover,
+        &:focus {
+            background-color: $blue-hover;
+        }
+        &.transition-in {
+            display: block;
+
+            & ~ #header-auth-logout {
+                display: block;
+            }
+        }
+        &.transition-out {
+            display: none;
+        }
+    }
+    #header-auth-logout {
+        background-color: $grey-xl;
+        color: $black;
+        @include resposiveNavBtn();
+
+        &:hover,
+        &:focus {
+            background-color: $grey-l;
+            color: $red;
+        }
+    }
+    #header-user-avatar {
+        display: inline-block;
+        vertical-align: middle;
+        height: 40px;
+        width: 40px;
+        border-radius: 100%;
+        overflow: hidden;
+        border: 2px solid transparentize(white, 0.9);
+        cursor: pointer;
+
+        img {
+            vertical-align: top;
+        }
+    }
+}
+@media (max-width: 420px) {
+    #header-menu-wrap .menu-link {
+        padding: 0 20px;
+
+        &::after {
+            right: 20px;
+        }
+        &:hover::after {
+            right: 16px;
+        }
+    }
+}
+@media (max-width: 320px) {
+    #header-menu-wrap {
+        right: 75px;
+    }
+    #header-menu-wrap .menu-link::after,
+    #header-user-avatar {
+        display: none;
+    }
+    #menu-toggle {
+        margin-right: -15px;
+    }
+}
+
+.cm-logo {
+    .letter {
+        fill: $blue;
+        transition: fill 300ms ease-in-out;
+    }
+    &__star {
+        .base {
+            fill: $red;
+            transition: fill 300ms ease-in-out;
+        }
+        .gradient {
+            fill: url(#cm_logo_star);
+            transition: opacity 300ms ease-in-out;
+        }
+    }
+}
+
+.btn {
+    display: inline-block;
+    background-color: $grey-xl;
+    color: $black;
+    height: 48px;
+    line-height: 48px;
+    padding: 0 40px;
+    border-radius: 50px;
+    text-align: center;
+    cursor: pointer;
+    transition: all 160ms linear;
+
+    & > * {
+        cursor: pointer;
+    }
+}
+button:not(:disabled),
+button:not(:disabled) * {
+    cursor: pointer;
+}
\ No newline at end of file
diff --git a/assets/scss/search.scss b/assets/scss/_search.scss
similarity index 93%
rename from assets/scss/search.scss
rename to assets/scss/_search.scss
index ef5459f..d9561a6 100644
--- a/assets/scss/search.scss
+++ b/assets/scss/_search.scss
@@ -38,11 +38,15 @@
       }
     }
 
+    @media (max-width: 1000px) {
+      right: 40px;
+    }
+
     @media (max-width: 500px) {
       width: 40px;
 
       &.search--active {
-        width: calc(100% - 100px);
+        width: calc(100% - 80px);
       }
 
       .search__input {
@@ -90,7 +94,11 @@
 
   @media (min-width: 1001px) {
     margin-left: 360px;
-    margin-top: 0;
+    margin-top: 76;
+  }
+
+  @media (max-width: 1000px) {
+    margin-top: 140px;
   }
 
   &:empty {
diff --git a/assets/scss/_variables.scss b/assets/scss/_variables.scss
index 1bade8d..284ce0a 100644
--- a/assets/scss/_variables.scss
+++ b/assets/scss/_variables.scss
@@ -18,6 +18,9 @@ $color-twitter-blue-hover: #1A8CD2;
 $color-facebook-blue: #3B5998;
 $grey-bg-light: #f6f6f6;
 $grey-bg: #eaeaea;
+$grey-l: #eeeeee;
+$grey-xl: #f8f8f8;
+$grey-m: #cccccc;
 
 // Fonts
 $font-family-default: 'ProximaNova-Regular';
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index b5fd8d1..c2cc0b1 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -7,7 +7,9 @@ Version: 0.0.1
 
 @import './variables';
 @import './reset';
-@import './search.scss';
+@import './search';
+@import './header';
+@import './animations';
 
 body {
     margin: 0;
@@ -23,73 +25,86 @@ body {
 } 
 #content-wrap {
     position: relative;
+    padding-top: 76px;
+    transition: padding 300ms ease-in-out;
 
     #sidebar {
         width: 360px;
         position: fixed;
         left: 0;
-        top: 0;
+        top: 76px;
         bottom: 0;
         overflow: visible;
         box-shadow: 0 0 30px transparentize(black, .9);
         background: white;
         z-index: 10;
-
-        #menu-toggle {
-            display: none;
-            height: 50px;
-            width: 50px;
-            cursor: pointer;
-            z-index: 1;
-
-            .bar {
-                height: 3px;
-                width: 30px;
-                background: $black;
-                position: relative;
-                margin: auto;
-                transition: all 300ms ease-in-out;
-
-                &.top { top: 15px; }
-                &.middle { top: 20px; }
-                &.bottom { top: 25px; }
-            }
-            &:hover { .bar { background: $blue; } }
+        transition: top 300ms ease-in-out;
+        .overlay {
+          position: absolute;
+          top: 0;
+          left: 0;
+          height: 100%;
+          width: 100%;
+          background: white;
+          z-index: 1;
+          box-shadow: 0 0 30px rgba(0,0,0,0.1);
+          display: none;
         }
-        #logo {
+        &__header {
+            margin: 0 40px;
+            font-size: 22px;
+            font-family: $font-family-bold;
+            position: relative;
             z-index: 1;
-            a {
-                display: flex;
-                align-items: center;
-                padding: 40px;
-                border-bottom: 1px solid $grey-bg;
-                margin-bottom: 20px;
-                box-sizing: border-box;
-                
-
-                svg { flex: 1; fill: $blue; width: 60px;}
-                #logo-label {
-                    width: 120px;
-                    color: white;
-                    background-color: $blue;
-                    font-size: 12px;
-                    padding: 6px 20px;
-                    margin-left: 10px;
-                    border-radius: 100px;
-                    box-sizing: border-box;
-                    text-align: center;
-
-                    @media (max-width: 300px) {
-                      display: none;
-                    }
-                }
-            }
+            padding: 45px 0;
+        }
+        &__toggle {
+          display: none;
+          width: 17px;
+          height: 12px;
+          margin-right: 5px;
+          position: relative;
+          cursor: pointer;
+          .bar {
+              position: absolute;
+              height: 2px;
+              width: 17px;
+              border-radius: 2px;
+              background-color: white;
+              transition: all 300ms linear;
+              cursor: pointer;
+              overflow: hidden;
+              &:nth-child(1) {
+                  top: 0px;
+              }
+              &:nth-child(2) {
+                  top: 5px;
+              }
+              &:nth-child(3) {
+                  top: 10px;
+              }
+              background-color: $black;
+          }
+          &.open .bar {
+              &:nth-child(1) {
+                  top: 5px;
+                  transform: rotate(45deg);
+              }
+              &:nth-child(2) {
+                  top: 5px;
+                  width: 0;
+              }
+              &:nth-child(3) {
+                  top: 5px;
+                  transform: rotate(-45deg);
+              }
+          }
         }
         #docs-menu {
             background: white;
             overflow: auto;
             position: absolute;
-            top: 112px;
+            top: 90px;
             bottom: 0;
             right: 0;
             padding: 10px 0;
@@ -141,47 +156,52 @@ body {
         @media (max-width: 1000px) {
             left: 0;
             right: 0;
-            top: 0;
+            top: 76px;
             bottom: auto;
             align-items: center;
-            padding: 0 10px;
+            padding: 0 40px;
             width: auto;
             display: flex;
             flex-wrap: nowrap;
             height: 70px;
-            padding-right: 50px;
+            box-shadow: none;
+
+            .overlay {
+              display: block;
+            }
 
             #menu-toggle { display: block; }
-            #logo {
-                flex: 1;
-                border-left: 1px solid $grey-bg;
-                margin-left: 10px;
-                padding-left: 10px;
-
-                a {
-                    max-width: 270px;
-                    padding: 15px 10px;
-                    margin: 0;
-                    border: none;
-                }
+            #sidebar__toggle { display: inline-block; }
+            #sidebar__header {
+                font-size: 16px;
+                margin: 0;
+                padding: 0;
+                width: fit-content;
+                cursor: pointer;
             }
             #docs-menu {
                 position: fixed;
                 bottom: 0;
-                top: 70px;
+                top: 146px;
                 left: 0;
                 width: 360px;
-                transform: translateX(-400px);
+                transform: translateY(-120%);
                 padding: 30px 0;
                 box-shadow: 0 0 30px transparentize(black, .9);
                 overflow: auto;
-                transition: transform 300ms ease-in-out;
+                transition: transform 300ms ease-in-out, top 300ms ease-in-out;
 
                 &.open {
-                    transform: translateX(0);
+                    transform: translateY(0);
                 }
             }
         }
+        @media (max-width: 840px) {
+          top: 70px;
+          #docs-menu {
+            top: 140px;
+          }
+        }
         @media (max-width: 400px) {
             #docs-menu { width: 100%; }
         }
@@ -377,8 +397,9 @@ body {
             width: 230px;
             position: fixed;
             right: 0;
-            top: 30px;
+            top: 76px;
             overflow: auto;
+            padding-top: 32px;
             padding-right: 30px;
             nav {
               position: relative;
diff --git a/config.yml b/config.yml
index b8ec4c1..33f844a 100644
--- a/config.yml
+++ b/config.yml
@@ -8,6 +8,10 @@ params:
   facebookAuthorHandle: codemagicio
   appLoginLink: https://codemagic.io/
   appUserUrl: http://localhost:5000/user
+  backendURL: http://localhost:5000
+  landingURL: http://localhost:3000
+  appURL: http://localhost:3000
+  blogURL: http://localhost
   defaultFacebookImage: /uploads/2019/01/default-thumb.png
   defaultTwitterImage: /uploads/2019/02/twitter.png
   headerLinkTitle: Documentation
diff --git a/config/production/config.yml b/config/production/config.yml
index 705fcd3..74c220e 100644
--- a/config/production/config.yml
+++ b/config/production/config.yml
@@ -5,3 +5,7 @@ params:
   googleAnalyticsTrackingId: UA-125963734-1
   googleOptimizeId: GTM-TW39Z9J
   appUserUrl: https://api.codemagic.io/user
+  backendURL: https://api.codemagic.io
+  landingURL: https://codemagic.io
+  appURL: https://codemagic.io
+  blogURL: https://blog.codemagic.io
\ No newline at end of file
diff --git a/layouts/_default/baseof.html b/layouts/_default/baseof.html
index 9d00dab..e3114d6 100644
--- a/layouts/_default/baseof.html
+++ b/layouts/_default/baseof.html
@@ -5,20 +5,18 @@
     {{ .Render "head" }}
   </head>
   <body id="article-page" class="page">
-    <div id="content-wrap">
-      <div id="search-results"></div>
-      <aside id="sidebar">
-        <div id="menu-toggle">
-          <div class="bar top"></div>
-          <div class="bar middle"></div>
-          <div class="bar bottom"></div>
-        </div>
-        <div id="logo">
-          <a href="{{ site.Home.RelPermalink }}">
-            {{ $logo := resources.Get "media/logo.svg" }}
-            {{ $logo.Content | safeHTML }}
-            <span id="logo-label">{{ site.Param "headerLinkTitle" }}</span>
-          </a>
+    {{ partial "header" . }}
+    <div id="content-wrap" data-js-content-wrap>
+      <div id="search-results" data-js-search-results></div>
+      <aside id="sidebar" data-js-sidebar>
+        <div class="overlay"></div>
+        <div id="sidebar__header" data-js-docs-menu-toggle>
+          <div id="sidebar__toggle" data-js-docs-menu-toggle-icon>
+            <div class="bar"></div>
+            <div class="bar"></div>
+            <div class="bar"></div>
+          </div>
+          Codemagic Documentation
         </div>
         <div class="search search--header">
           <input class="search__input" type="text" placeholder="Search">
diff --git a/layouts/_default/single.html b/layouts/_default/single.html
index f32cae3..79cde3a 100644
--- a/layouts/_default/single.html
+++ b/layouts/_default/single.html
@@ -2,7 +2,7 @@
   <h1>{{ .Title }}</h1>
   {{ partial "content" . }}
   {{ with .TableOfContents }}
-    <aside id="toc">
+    <aside id="toc" data-js-toc>
       <div class="heading">Table of contents</div>
       {{ . }}
     </aside>
diff --git a/layouts/partials/codemagic-logo.html b/layouts/partials/codemagic-logo.html
new file mode 100644
index 0000000..1554bee
--- /dev/null
+++ b/layouts/partials/codemagic-logo.html
@@ -0,0 +1,119 @@
+<svg class="cm-logo" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 564.3 116.4" style="enable-background:new 0 0 564.3 116.4;" xml:space="preserve">
+	<g class="cm-logo__name">
+		<path class="letter" d="M20.8,34.9c3-1.6,6.4-2.5,9.9-2.4c3,0,6,0.7,8.7,2c1.6,0.8,3,1.9,4.2,3.1c2.1,2.1,5.4,2.1,7.5,0
+			c0.8-0.8,1.4-1.9,1.5-3.1c0.2-1.6-0.4-3.2-1.5-4.4c-1.8-1.8-3.9-3.4-6.1-4.5c-4.4-2.2-9.2-3.3-14.1-3.2c-5.5-0.1-11,1.2-15.9,3.8
+			C10.4,28.6,6.6,32.3,4,36.8c-2.7,4.7-4.1,10-4,15.3c-0.1,5.4,1.3,10.7,4,15.3c2.6,4.5,6.4,8.2,11,10.6c4.9,2.6,10.3,3.9,15.9,3.8
+			c4.9,0.1,9.8-1,14.1-3.2c2.3-1.2,4.4-2.7,6.2-4.6c1.1-1.2,1.6-2.7,1.5-4.3c-0.4-2.9-3-4.9-5.9-4.6c-1.2,0.1-2.2,0.7-3,1.5
+			c-1.2,1.3-2.7,2.4-4.3,3.2c-2.7,1.4-5.6,2-8.6,2c-3.4,0.1-6.8-0.8-9.9-2.4c-2.9-1.6-5.3-4-6.9-6.9c-1.7-3.2-2.6-6.8-2.5-10.4
+			c-0.1-3.6,0.8-7.1,2.5-10.3C15.6,38.9,17.9,36.5,20.8,34.9z"></path>
+		<path class="letter" d="M184.1,0c-3.1,0-5.7,2.5-5.7,5.7c0,0,0,0,0,0v25c-2.1-2.5-4.8-4.6-7.8-5.9c-3.5-1.6-7.3-2.4-11.1-2.4
+			c-5.2-0.1-10.4,1.2-14.9,3.7c-4.4,2.4-8,6.1-10.4,10.4c-2.7,4.7-4.2,10.1-4.3,15.5c0,5.5,1.5,10.8,4.3,15.6
+			c2.4,4.4,6,8.1,10.4,10.5c4.6,2.5,9.7,3.8,14.9,3.7c4,0,7.9-0.8,11.4-2.5c3.1-1.4,5.8-3.6,7.9-6.2v2.6c0,3,2.5,5.5,5.5,5.5
+			s5.5-2.5,5.5-5.5V5.7C189.8,2.5,187.3,0,184.1,0C184.1,0,184.1,0,184.1,0z M169.5,69.4c-2.8,1.7-5.9,2.5-9.1,2.5
+			c-3.3,0-6.5-0.8-9.4-2.5c-2.8-1.7-5.1-4.1-6.6-7c-1.7-3.2-2.5-6.7-2.5-10.3c-0.1-3.6,0.8-7.1,2.5-10.3c1.5-2.9,3.8-5.2,6.6-6.8
+			c2.9-1.6,6.1-2.5,9.4-2.4c3.2,0,6.4,0.8,9.1,2.4c2.8,1.6,5.1,4,6.6,6.9c1.7,3.2,2.5,6.7,2.4,10.3c0.1,3.6-0.8,7.1-2.4,10.3
+			C174.7,65.3,172.4,67.8,169.5,69.4L169.5,69.4z"></path>
+		<path class="letter" d="M240.7,26.2c-4.5-2.6-9.7-3.9-14.9-3.8c-5.2-0.1-10.4,1.2-15,3.8c-4.4,2.5-8,6.2-10.5,10.6
+			c-2.6,4.7-3.9,9.9-3.8,15.3c-0.1,5.4,1.3,10.7,3.9,15.4c2.6,4.5,6.4,8.2,11.1,10.6c9.2,4.5,19.9,5,29.4,1.4
+			c2.3-0.9,4.5-2.2,6.4-3.8c2.2-1.7,2.5-4.9,0.8-7c0,0-0.1-0.1-0.1-0.1c-1.7-2-4.7-2.3-6.8-0.8c-3.8,2.7-8.4,4.1-13.1,4
+			c-5,0.2-9.9-1.4-13.8-4.5c-3.5-2.8-5.8-6.8-6.4-11.2l0.1-0.1H251c2,0,3.6-1.6,3.6-3.6c0,0,0,0,0,0c0.1-5.4-1.1-10.8-3.6-15.6
+			C248.6,32.4,245.1,28.7,240.7,26.2z M244.1,47.4l-0.6,0.2h-35.4l-0.1-0.1c0.5-4.2,2.5-8,5.6-10.9c7-5.9,17.3-5.9,24.3,0
+			c3.1,2.8,5.1,6.7,5.6,10.8L244.1,47.4L244.1,47.4z"></path>
+		<path class="letter" d="M333.6,22.4c-4.6-0.1-9.1,0.9-13.2,2.9c-3.5,1.6-6.5,4.2-8.8,7.3c-1.9-3.2-4.6-5.7-7.8-7.4
+			c-3.8-1.9-7.9-2.8-12.1-2.8c-4.1-0.1-8.1,0.7-11.8,2.4c-2.9,1.3-5.5,3.3-7.5,5.7v-2.1c0-3-2.5-5.5-5.5-5.5s-5.5,2.5-5.5,5.5v47.4
+			c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5V51.2c0-6,1.5-10.6,4.5-13.8s7.1-4.8,12.2-4.8c4.6,0,8.2,1.4,10.6,4s3.7,6.8,3.7,12.2
+			v26.9c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5V51.2c0-6,1.5-10.6,4.5-13.8s7.1-4.8,12.2-4.8c4.6,0,8.2,1.4,10.6,4
+			s3.7,6.8,3.7,12.2v26.9c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5v-28c0-8.3-2.2-14.7-6.5-19S340.9,22.4,333.6,22.4z"></path>
+		<path class="letter" d="M389.8,22.4c-4.5,0-8.9,0.6-13.2,1.9c-2.5,0.7-4.8,1.7-7.1,3c-2.3,1.5-2.9,4.7-1.3,6.9c1.4,2,4,2.8,6.2,1.7
+			c1.4-0.8,2.9-1.5,4.4-2c3.1-1.1,6.5-1.6,9.8-1.7c4.9,0,8.6,1.2,11.1,3.4s3.7,5.6,3.7,9.9v1.4c0,0.1-0.1,0.1-0.1,0.1h-15.8
+			c-8.1,0-14.1,1.6-17.8,4.7c-3.8,3.1-5.9,7.7-5.7,12.6c-0.1,4.9,2.1,9.6,6,12.6c3.9,3.2,9.2,4.8,15.7,4.8c4,0.1,7.9-0.6,11.6-2.2
+			c2.6-1.1,4.9-2.8,6.7-5v1.1c0,3,2.4,5.4,5.4,5.4c3,0,5.4-2.4,5.4-5.4c0,0,0,0,0,0V46.2c0-7.8-2.2-13.8-6.5-17.8
+			S397.9,22.4,389.8,22.4z M403.5,55.9v7.3c-1.2,3-3.3,5.5-6,7.2c-3,1.8-6.5,2.7-10,2.6c-3.9,0-6.9-0.8-9-2.4
+			c-2.1-1.5-3.3-3.9-3.1-6.4c0-5.6,4.1-8.4,12.7-8.4h15.4C403.5,55.8,403.5,55.8,403.5,55.9z"></path>
+		<path class="letter" d="M476.2,22.9c-3,0-5.4,2.4-5.4,5.4c0,0,0,0,0,0v2.5c-2.2-2.6-5-4.7-8.2-6.1c-3.7-1.6-7.7-2.5-11.7-2.4
+			c-5.1-0.1-10.1,1.1-14.6,3.5c-4.3,2.3-8,5.7-10.4,10c-2.6,4.5-3.9,9.5-3.8,14.7c-0.1,5.2,1.3,10.2,3.9,14.7
+			c2.5,4.2,6.1,7.7,10.4,10c4.5,2.4,9.5,3.6,14.6,3.6c3.9,0,7.7-0.7,11.3-2.2c3.1-1.3,5.9-3.3,8.1-5.8V74c0,6.3-1.6,11.1-4.7,14.1
+			s-8,4.6-14.5,4.6c-4.1,0-8.1-0.7-12-2c-1.7-0.6-3.4-1.3-5-2.1c-2.5-1.4-5.6-0.6-7.1,1.8c-0.7,1.2-1,2.6-0.6,4
+			c0.3,1.3,1.1,2.5,2.3,3.2c2.2,1.3,4.6,2.3,7.1,2.9c5.1,1.5,10.3,2.3,15.6,2.2c10,0,17.6-2.5,22.6-7.3s7.6-12.5,7.6-22.6V28.4
+			C481.6,25.4,479.2,22.9,476.2,22.9C476.2,22.9,476.2,22.9,476.2,22.9z M470.4,50.6c0.1,3.3-0.8,6.6-2.4,9.4c-1.5,2.7-3.8,5-6.6,6.5
+			c-2.9,1.6-6.1,2.4-9.4,2.3c-3.3,0.1-6.6-0.7-9.5-2.3c-2.8-1.5-5.1-3.7-6.6-6.5c-1.7-2.9-2.5-6.1-2.5-9.4c0-5.6,1.7-9.9,5.1-13.1
+			c3.7-3.5,7.9-5,13.4-5c4.9-0.2,9.6,1.6,13.1,5C468.7,40.9,470.6,45.6,470.4,50.6z"></path>
+		<path class="letter" d="M497.5,22.9c-3.1,0-5.7,2.5-5.7,5.7v0v47c0,3.1,2.5,5.7,5.7,5.7s5.7-2.5,5.7-5.7v-47
+			C503.2,25.5,500.6,22.9,497.5,22.9L497.5,22.9z"></path>
+		<path class="letter" d="M561.9,66c-2.1-1.3-4.8-1-6.5,0.7c-1.2,1.3-2.7,2.4-4.3,3.2c-2.7,1.4-5.6,2-8.6,2c-3.4,0.1-6.8-0.8-9.9-2.4
+			c-2.9-1.6-5.3-4-6.8-6.9c-1.7-3.2-2.6-6.8-2.5-10.4c-0.1-3.6,0.8-7.1,2.5-10.3c1.6-2.9,3.9-5.3,6.8-6.9c3-1.6,6.4-2.5,9.9-2.4
+			c3,0,6,0.7,8.6,2c1.6,0.8,3,1.9,4.2,3.1c2.1,2.1,5.4,2.1,7.5,0c0.8-0.8,1.4-1.9,1.5-3.1c0.2-1.6-0.4-3.2-1.5-4.4
+			c-1.8-1.8-3.9-3.4-6.1-4.5c-4.4-2.2-9.2-3.3-14.1-3.2c-5.5-0.1-11,1.2-15.9,3.8c-4.6,2.4-8.3,6.1-11,10.6c-2.7,4.7-4.1,10-4,15.3
+			c-0.1,5.4,1.3,10.7,4,15.3c2.6,4.5,6.4,8.1,11,10.6c4.9,2.6,10.3,3.9,15.9,3.8c4.9,0.1,9.8-1,14.1-3.2c2.3-1.2,4.4-2.7,6.2-4.6
+			c1.1-1.1,1.6-2.7,1.5-4.3C564.1,68.2,563.2,66.8,561.9,66z"></path>
+	</g>
+	<g class="cm-logo__star">
+		<path class="base" d="M121.7,46.8l-16.6-8.1c-0.2-0.1-0.3-0.3-0.4-0.5l-8.2-16.6c-1.4-2.9-5-4.1-7.9-2.7
+			c-1.2,0.6-2.1,1.5-2.7,2.7l-8.2,16.6c-0.1,0.2-0.3,0.4-0.4,0.5l-16.6,8.2c-2.9,1.4-4.1,5-2.7,7.9c0.6,1.2,1.5,2.1,2.7,2.7l16.6,8.1
+			c0.2,0.1,0.3,0.3,0.4,0.4L86,82.6c1.4,2.9,5,4.1,7.9,2.7c1.2-0.6,2.1-1.5,2.7-2.7l8.1-16.6c0.1-0.2,0.3-0.4,0.4-0.4l16.6-8.2
+			c2.9-1.4,4.1-5,2.7-7.9C123.9,48.3,122.9,47.4,121.7,46.8z M109.4,48l-7.7,6.7c-1.5,1.4-2.6,3.2-3,5.2l-2,10
+			c-0.1,0.4-0.5,0.7-0.9,0.6c-0.2,0-0.3-0.1-0.4-0.3l-6.7-7.7c-1.4-1.5-3.2-2.6-5.2-3l-10-2c-0.4-0.1-0.7-0.5-0.6-0.9
+			c0-0.2,0.1-0.3,0.3-0.4l7.7-6.7c1.5-1.4,2.6-3.2,3-5.2l2-10c0.1-0.4,0.5-0.7,0.9-0.6c0.1,0,0.3,0.1,0.4,0.2l6.7,7.7
+			c1.4,1.5,3.2,2.6,5.2,3l10,2c0.4,0.1,0.7,0.5,0.6,0.9C109.6,47.8,109.5,47.9,109.4,48z"></path>
+		<path class="gradient" d="M121.7,46.8l-16.6-8.1c-0.2-0.1-0.3-0.3-0.4-0.5l-8.2-16.6c-1.4-2.9-5-4.1-7.9-2.7
+			c-1.2,0.6-2.1,1.5-2.7,2.7l-8.2,16.6c-0.1,0.2-0.3,0.4-0.4,0.5l-16.6,8.2c-2.9,1.4-4.1,5-2.7,7.9c0.6,1.2,1.5,2.1,2.7,2.7l16.6,8.1
+			c0.2,0.1,0.3,0.3,0.4,0.4L86,82.6c1.4,2.9,5,4.1,7.9,2.7c1.2-0.6,2.1-1.5,2.7-2.7l8.1-16.6c0.1-0.2,0.3-0.4,0.4-0.4l16.6-8.2
+			c2.9-1.4,4.1-5,2.7-7.9C123.9,48.3,122.9,47.4,121.7,46.8z M109.4,48l-7.7,6.7c-1.5,1.4-2.6,3.2-3,5.2l-2,10
+			c-0.1,0.4-0.5,0.7-0.9,0.6c-0.2,0-0.3-0.1-0.4-0.3l-6.7-7.7c-1.4-1.5-3.2-2.6-5.2-3l-10-2c-0.4-0.1-0.7-0.5-0.6-0.9
+			c0-0.2,0.1-0.3,0.3-0.4l7.7-6.7c1.5-1.4,2.6-3.2,3-5.2l2-10c0.1-0.4,0.5-0.7,0.9-0.6c0.1,0,0.3,0.1,0.4,0.2l6.7,7.7
+			c1.4,1.5,3.2,2.6,5.2,3l10,2c0.4,0.1,0.7,0.5,0.6,0.9C109.6,47.8,109.5,47.9,109.4,48z"></path>
+	</g>
+	<g class="cm-logo__slogan">
+		<path class="letter" d="M10.5,95.2h2.6v6.2c0.9-1.2,2.3-1.9,3.8-1.9c3,0,5.3,2.4,5.3,6.2s-2.2,6.2-5.3,6.2c-1.5,0-2.9-0.7-3.8-1.9v1.6
+			h-2.6V95.2z M16.1,109.6c2.1,0,3.4-1.6,3.4-3.9s-1.3-4-3.4-4c-1.2,0-2.3,0.6-3,1.6v4.8C13.8,109,14.9,109.5,16.1,109.6z"></path>
+		<path class="letter" d="M25.6,114.1c0.7,0.1,1.4-0.3,1.7-1l0.6-1.3l-4.9-12h2.8l3.5,8.9l3.5-8.9h2.8l-5.7,14c-0.6,1.7-2.3,2.8-4.1,2.7
+			c-0.5,0-1-0.1-1.5-0.2l0.4-2.3C25,114,25.3,114.1,25.6,114.1z"></path>
+		<path class="letter" d="M46.4,99.6v12h-2.9V95.2h3l8.4,11.6V95.2h2.9v16.4H55L46.4,99.6z"></path>
+		<path class="letter" d="M66.4,99.4c3.6,0,5.8,2.7,5.8,6.5v0.6h-9.2c0.2,1.9,1.8,3.4,3.8,3.3c1.2,0,2.4-0.5,3.4-1.3l1.2,1.7
+			c-1.3,1.2-3.1,1.8-4.8,1.7c-3.4,0.1-6.3-2.7-6.3-6.1C60.3,102.3,63,99.4,66.4,99.4z M63.1,104.6h6.7c0-1.8-1.5-3.2-3.2-3.1
+			c0,0-0.1,0-0.1,0C64.7,101.5,63.2,102.9,63.1,104.6z"></path>
+		<path class="letter" d="M73.1,99.7h2.8l3.5,8.9l3.5-8.9h2.8l-4.8,11.9H78L73.1,99.7z"></path>
+		<path class="letter" d="M92.5,99.4c3.6,0,5.8,2.7,5.8,6.5v0.6h-9.2c0.2,1.9,1.9,3.4,3.8,3.3c1.2,0,2.4-0.5,3.4-1.3l1.2,1.7
+			c-1.3,1.2-3.1,1.8-4.8,1.7c-3.4,0.1-6.3-2.7-6.3-6.1C86.4,102.3,89.1,99.4,92.5,99.4L92.5,99.4L92.5,99.4z M89.2,104.6h6.7
+			c0-1.8-1.4-3.2-3.2-3.1c0,0-0.1,0-0.1,0C90.7,101.5,89.2,102.9,89.2,104.6z"></path>
+		<path class="letter" d="M100.9,99.7h2.6v1.7c0.9-1.2,2.3-1.9,3.9-2v2.6c-0.3-0.1-0.5-0.1-0.8-0.1c-1.2,0.1-2.3,0.6-3,1.6v8.1H101
+			L100.9,99.7z"></path>
+		<path class="letter" d="M114.9,99.4c1.8,0,3.5,0.7,4.5,2.1l-1.7,1.6c-0.6-0.9-1.6-1.4-2.7-1.4c-2.2,0-3.6,1.6-3.6,3.9s1.4,4,3.6,4
+			c1.1,0,2.1-0.5,2.7-1.4l1.7,1.6c-1.1,1.4-2.8,2.2-4.5,2.1c-3.4,0-6.2-2.8-6.2-6.2C108.6,102.2,111.4,99.4,114.9,99.4L114.9,99.4z"></path>
+		<path class="letter" d="M120.9,105.6c0.1-3.4,2.9-6.1,6.2-6s6.1,2.9,6,6.2c-0.1,3.3-2.8,6-6.1,6c-3.3,0.1-6-2.5-6.1-5.8
+			C120.9,105.9,120.9,105.8,120.9,105.6z M130.5,105.6c0-2.1-1.2-3.9-3.4-3.9s-3.4,1.8-3.4,3.9s1.2,4,3.4,4
+			C129.2,109.6,130.5,107.7,130.5,105.6z"></path>
+		<path class="letter" d="M144.1,109.9c-0.9,1.2-2.3,1.9-3.8,1.9c-3.1,0-5.3-2.3-5.3-6.2s2.2-6.2,5.3-6.2c1.5,0,2.9,0.7,3.8,1.9v-6.2
+			h2.6v16.4h-2.6V109.9z M144.1,103.3c-0.7-1-1.9-1.6-3.1-1.6c-2,0-3.3,1.6-3.3,4s1.3,3.9,3.3,3.9c1.2,0,2.4-0.6,3.1-1.6V103.3z"></path>
+		<path class="letter" d="M161.2,105.8c0-3.7-2.3-6.5-5.8-6.5h0c-3.4,0.1-6.2,2.9-6.1,6.3c0.1,3.4,2.9,6.2,6.3,6.1
+			c1.8,0.1,3.5-0.6,4.8-1.7l-1.2-1.7c-0.9,0.8-2.1,1.3-3.4,1.3c-1.9,0.1-3.6-1.3-3.8-3.3h9.2V105.8z M152,104.6
+			c0.1-1.8,1.6-3.2,3.4-3.1c0,0,0.1,0,0.1,0c1.8,0,3.2,1.4,3.2,3.1H152z"></path>
+	</g>
+</svg>
+<svg id="vector-styles" style="height: 0; position: absolute">
+	<defs>
+		<linearGradient
+			id="cm_logo_star"
+			gradientUnits="userSpaceOnUse"
+			x1="57.4512"
+			y1="65.8962"
+			x2="125.0438"
+			y2="65.8962"
+			gradientTransform="matrix(1 0 0 -1 0 118)"
+		>
+			<stop offset="0" style="stop-color:#EC0C43"></stop>
+			<stop offset="1" style="stop-color:#FBB03B"></stop>
+		</linearGradient>
+		</defs>
+		<filter id="dropshadow" height="150%">
+			<feGaussianBlur in="SourceAlpha" stdDeviation="5"/>
+			<feOffset dx="0" dy="4" result="offsetblur"/>
+			<feComponentTransfer>
+				<feFuncA type="linear" slope="0.1"/>
+			</feComponentTransfer>
+			<feMerge> 
+				<feMergeNode/>
+				<feMergeNode in="SourceGraphic"/>
+			</feMerge>
+		</filter>
+	</svg>
\ No newline at end of file
diff --git a/layouts/partials/header.html b/layouts/partials/header.html
new file mode 100644
index 0000000..3d499b2
--- /dev/null
+++ b/layouts/partials/header.html
@@ -0,0 +1,37 @@
+<div id="nav-trigger"></div>
+<header id="header" data-js-header>
+    <div class="inner">
+        <a href='{{ site.Param "landingURL" }}/start' id="header-logo" onclick="sendGtag('Logo_clicked', 'CodemagicMenu')" target="_blank">{{ partial "codemagic-logo" . }}</a>
+        <div id="menu-toggle" data-js-header-menu-toggle>
+            <div class="bar"></div>
+            <div class="bar"></div>
+            <div class="bar"></div>
+        </div>
+        <div id="header-menu-wrap" data-js-header-menu-wrap>
+            <nav id="header-main-menu">
+                <a class="menu-link" href='{{ site.Param "landingURL" }}/pricing' onclick="sendGtag('Pricing_clicked', 'CodemagicMenu')" target="_blank">Pricing</a>
+                <a class="menu-link" href='{{ site.Param "landingURL" }}/business' onclick="sendGtag('Business_clicked', 'CodemagicMenu')" target="_blank">Business</a>
+                <a class="menu-link" href='/' onclick="sendGtag('Documentation_clicked', 'CodemagicMenu')">Documentation</a>
+                <a class="menu-link" href='{{ site.Param "blogURL" }}' onclick="sendGtag('Blog_clicked', 'CodemagicMenu')" target="_blank">Blog</a>
+            </nav>
+            <aside id="header-authentication" data-js-header-authentication>
+                <div id="header-auth-visitor" data-js-header-auth-visitor>
+                    <a class="auth-link" href='{{ site.Param "landingURL" }}/login' id="login-link" onclick="sendGtag('Login_clicked', 'CodemagicMenu')">Login</a>
+                    <a href='{{ site.Param "landingURL" }}/signup' id="signup-btn" class="btn" onclick="sendGtag('Signup_clicked', 'CodemagicMenu')">Sign
+                        up</a>
+                </div>
+                <a id="header-auth-user" href='{{ site.Param "landingURL" }}/apps' data-js-header-auth-user>
+                    <div class="label">Return to app</div>
+                    <div id="header-user-avatar" data-js-header-user-avatar></div>
+                </a>
+                <div id="header-auth-logout" data-js-header-auth-logout>
+                    Log out
+                </div>
+                <div id="header-auth-loading" data-js-header-auth-loading>
+                    <div class="grey-line" data-js-header-auth-loading-grey-line></div>
+                    <div class="red-line"></div>
+                </div>
+            </aside>
+        </div>
+    </div>
+</header>
\ No newline at end of file
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index ed13e67..a251274 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -1,4 +1,4 @@
-<nav id="docs-menu">
+<nav id="docs-menu" data-js-docs-menu>
   <div class="search search--sidebar">
     <input class="search__input" type="text" placeholder="Search">
     <div class="search__icon search__icon--search fas fa-search"></div>
@@ -8,9 +8,9 @@
   <ul>
     {{ $currentPage := . }}
     {{ range .Site.Menus.main }}
-      <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}">
-        <div class="category-name">{{ .Name }}</div>
-        <div class="category-posts">
+      <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}" data-js-docs-menu-item>
+        <div class="category-name" data-js-category-name>{{ .Name }}</div>
+        <div class="category-posts" data-js-category-posts>
           {{ range where site.Pages "Section" .Identifier -}}
             <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
           {{- end }}
diff --git a/layouts/partials/site-footer.html b/layouts/partials/site-footer.html
index a8c7425..b0851fa 100644
--- a/layouts/partials/site-footer.html
+++ b/layouts/partials/site-footer.html
@@ -1,4 +1,4 @@
-{{ $script := resources.Get "js/main.js" | fingerprint }}
+{{ $script := resources.Get "js/main.js" | resources.ExecuteAsTemplate "" . | minify | fingerprint }}
 <script src="{{ $script.RelPermalink }}" integrity="{{ $script.Data.Integrity }}"></script>
 
 {{ partial "search" . }}

commit b01770640d7bfbba0c23cd4b427b5c2d4752b923
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Sep 1 10:26:19 2020 +0300

    Revert "add menu from main page (#153)"
    
    This reverts commit b964b6fcb275f9d0326c46cb325f1e7e659fd7db.

diff --git a/assets/js/main.js b/assets/js/main.js
index 1e81239..d22d371 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -1,20 +1,19 @@
-const desktopScreenWidth = 1001;
-
 // Category toggle open
-var navCategory = $('[data-js-docs-menu-item]')
+var navCategory = $('#docs-menu li')
 navCategory.each(function() {
-  $('[data-js-category-name]', this).on('click', function() {
+  $('.category-name', this).on('click', function() {
     var $parent = $(this).parent()
 
-    $parent.find('[data-js-category-posts]').slideToggle(150, function complete() {
+    $parent.find('.category-posts').slideToggle(150, function complete() {
       $parent.toggleClass('open')
     })
   })
 })
 // Menu toggle
-$('[data-js-docs-menu-toggle]').on('click', function() {
-  $('[data-js-docs-menu-toggle-icon]').toggleClass('open')
-  $('[data-js-docs-menu]').toggleClass('open')
+var menuToggle = $('#menu-toggle')
+menuToggle.on('click', function(e) {
+  $(this).toggleClass('open')
+  $('#docs-menu').toggleClass('open')
 })
 
 // Create permalinks
@@ -72,185 +71,30 @@ $(document).ready(function() {
   contentTable.each(function() {
     $(this).wrap('<div class="table-wrap"></div>')
   })
-  elementsTopPosition()
 })
 
-$(document).ready(function() {
-
-  window.userRequest = fetchUser()
-
-  // Fetch user
-  async function fetchUser() {
-      const url = '{{ site.Param "backendURL" }}/user'
-      const timeout = 3000
-
-      const controller = new AbortController()
-      const signal = controller.signal
-
-      setTimeout(() => controller.abort(), timeout)
-
-      try {
-          const response = await fetch(url, {
-              mode: 'cors',
-              credentials: 'include',
-              headers: { Accept: 'application/json' },
-              signal,
-          })
-          try {
-              return { response, json: await response.json() }
-          } catch (error) {
-              return { response, error }
-          }
-      } catch (error) {
-          return { error }
-      }
-  }
-
-  // Menu toggle
-  $('[data-js-header-menu-toggle]').on('click', function() {
-      $(this).toggleClass('open')
-      const visible = $('[data-js-header-menu-wrap]').is(':visible')
-      if (visible) {
-          $('[data-js-header-menu-wrap]').slideUp(200)
-      } else {
-          $('[data-js-header-menu-wrap]').slideDown(200)
-      }
-  })
-
-  // Open extenral links in new tab
-  $('a').each(function() {
-      var hostName = window.location.hostname
-      var href = $(this).attr('href')
-      if (href && !href.includes(hostName) && !href.startsWith('/') && !href.startsWith('#')) {
-          $(this).attr('target', '_blank')
-      }
-  })
-
-  authenticateUser()
-
-  async function authenticateUser() {
-    const { response, json } = await window.userRequest
-    window.auth = { loaded: true }
-
-    if (response && response.ok && json && json.user) {
-        Object.assign(window.auth, json.user.user)
-        if (json.user.ok) {
-            window.loggedIn = true
-            window.auth._id = json.user._id
-            $('[data-js-header-auth-user]').addClass('transition-in')
-            $('[data-js-header-user-avatar]').html('<img src="' + auth.avatarUrl + '" alt=""/>')
-        } else {
-            window.loggedIn = false
-            $('[data-js-header-auth-visitor]').addClass('transition-in')
-        }
-    } else {
-        window.loggedIn = false
-        $('[data-js-header-auth-visitor]').addClass('transition-in')
-    }
-    $('[data-js-header-auth-loading]').addClass('transition-out')
-    setTimeout(function() {
-        $('[data-js-header-auth-loading-grey-line]').hide()
-    }, 1000)
-  }
-
-  $('[data-js-header-auth-logout]').on('click', userLogout)
-
-  async function userLogout() {
-    $('[data-js-header-authentication]').addClass('loading')
-    $('[data-js-header-auth-loading]')
-        .removeClass('transition-out')
-        .addClass('transition-in')
-    $('[data-js-header-auth-loading-grey-line]').show()
-    if ($(window).innerWidth() < 841) {
-        $('[data-js-header-menu-toggle]').removeClass('open')
-        $('[data-js-header-menu-wrap]').slideUp(200)
-    }
-    $('[data-js-header-menu-wrap]').slideUp(200)
-
-    const url = '{{ site.Param "backendURL" }}/logout'
-    const options = {
-        method: 'GET',
-        mode: 'cors',
-        credentials: 'include',
-        headers: { Accept: 'application/json' },
-    }
-    try {
-        await fetch(url, options)
-        $('[data-js-header-auth-user]')
-            .removeClass('transition-in')
-            .addClass('transition-out')
-        setTimeout(function() {
-            $('[data-js-header-auth-loading-grey-line]').hide()
-            $('[data-js-header-auth-visitor]')
-                .removeClass('transition-out')
-                .addClass('transition-in')
-        }, 1000)
-    } catch (error) {
-        location.reload()
-    } finally {
-        auth = { loaded: true }
-        window.loggedIn = false
-        $('[data-js-header-authentication]').removeClass('loading')
-        $('[data-js-header-auth-loading]')
-            .removeClass('transition-in')
-            .addClass('transition-out')
-    }
-  }
-})
+// Table of content
 
 let lastScrollPosition = 0
-const sidebar = $('[data-js-sidebar]')
-const header = $('[data-js-header]')
-const docsMenu = $('[data-js-docs-menu]')
-const contentWrap = $('[data-js-content-wrap]')
-const searchResults = $('[data-js-search-results]')
-
-if ($(window).scrollTop() === 0) {
-  header.css('top', 0)
-  sidebar.css('top', header.innerHeight())
-}
 
-$(window).on('scroll', function () {
-  const currentScrollPosition = $(window).scrollTop()
-  // do not consider scrolling bounce effect as scrolling
-  if (currentScrollPosition >= 0 && currentScrollPosition <= $('body').height() - $(window).height()) {
-      window.scrollingDown = currentScrollPosition > lastScrollPosition
-      lastScrollPosition = currentScrollPosition
-  }
+$(document).ready(function () {
+    elementsTopPosition()
 })
-
-$(window).on('load scroll resize', function() {
-  const headerHeight = header.innerHeight()
-  const sidebarHeight = sidebar.innerHeight()
-  if (window.innerWidth < desktopScreenWidth) {
-    if (window.scrollingDown) {
-      sidebar.css('top', 0)
-      header.css('top', -headerHeight)
-      docsMenu.css('top', sidebarHeight)
-      searchResults.css('margin-top', sidebarHeight)
-      contentWrap.css('paddingTop', 0)
-    } else {
-      header.css('top', 0)
-      sidebar.css('top', headerHeight)
-      docsMenu.css('top', headerHeight + sidebarHeight)
-      searchResults.css('margin-top', headerHeight + sidebarHeight)
-      contentWrap.css('paddingTop', headerHeight)
-    }
-  } else {
-    docsMenu.css('top', 90)
-    searchResults.css('margin-top', 76)
-  }
-  elementsTopPosition() // TOC
+$(window).on('load scroll resize', function () {
+    elementsTopPosition()
+})
+$(window).on('scroll', function () {
+    const currentScrollPosition = $(window).scrollTop()
+    window.scrollingDown = currentScrollPosition > lastScrollPosition
+    lastScrollPosition = currentScrollPosition
 })
-
-// Table of content
 
 // Adjust elements positions depending on content shown
 function elementsTopPosition() {
   const windowHeight = $(window).height()
   const topOfWindow = $(window).scrollTop()
   const footerPosition = $('#footer').offset().top
-  const toc = $('[data-js-toc]')
+  const toc = $('#toc')
   const progress = (topOfWindow / (footerPosition - windowHeight)) * 100
 
   if (toc.length) {
@@ -260,7 +104,7 @@ function elementsTopPosition() {
           heightDifference = tableOfContentHeight - windowHeight * 0.8
           contentTablePull = heightDifference * progress / 100
       }
-      const tableOfContentTop = 70 - contentTablePull
+      const tableOfContentTop = 30 - contentTablePull
       toc.css('top', tableOfContentTop)
   }
 }
@@ -302,4 +146,4 @@ $(window).ready(function () {
     document.querySelectorAll('#main-content h2, #main-content h3').forEach(function (header) {
         observer.observe(header);
     });
-});
+});
\ No newline at end of file
diff --git a/assets/scss/_animations.scss b/assets/scss/_animations.scss
deleted file mode 100644
index 6358fa0..0000000
--- a/assets/scss/_animations.scss
+++ /dev/null
@@ -1,62 +0,0 @@
-@keyframes fadeIn {
-    0% {
-        opacity: 0;
-    }
-    100% {
-        opacity: 1;
-    }
-}
-@keyframes fadeOut {
-    0% {
-        opacity: 1;
-    }
-    100% {
-        opacity: 0;
-    }
-}
-@keyframes rotate {
-    0% {
-        transform: rotate(0deg);
-    }
-    100% {
-        transform: rotate(360deg);
-    }
-}
-@keyframes authLoading {
-    10% {
-        left: 0;
-        right: 100%;
-    }
-    50% {
-        left: 0;
-        right: 0;
-    }
-    90% {
-        left: 100%;
-        right: 0;
-    }
-}
-@keyframes authTransitionOut {
-    0% {
-        left: 0;
-    }
-    100% {
-        left: 100%;
-    }
-}
-@keyframes moveUp {
-    0% {
-        transform: translateY(10px);
-    }
-    100% {
-        transform: translateY(0);
-    }
-}
-@keyframes moveDown {
-    0% {
-        transform: translateY(-10px);
-    }
-    100% {
-        transform: translateY(0);
-    }
-}
\ No newline at end of file
diff --git a/assets/scss/_header.scss b/assets/scss/_header.scss
deleted file mode 100644
index 9749cc3..0000000
--- a/assets/scss/_header.scss
+++ /dev/null
@@ -1,471 +0,0 @@
-#nav-trigger {
-    position: absolute;
-    top: 0;
-}
-.inner {
-    width: auto;
-    margin: auto 40px;
-}
-#header {
-    padding: 14px 0;
-    position: fixed;
-    top: 0;
-    left: 0;
-    right: 0;
-    font-weight: 600;
-    font-size: 14px;
-    font-family: $font-family-bold;
-    z-index: 14;
-    opacity: 0;
-    transform: translateY(-10px);
-    animation: fadeIn 600ms forwards, moveDown 600ms forwards;
-    transition: all 300ms ease-in-out;
-
-    .inner {
-        display: flex;
-        justify-content: space-between;
-        flex-wrap: wrap;
-        align-items: center;
-    }
-    background-color: white;
-    box-shadow: 0 0 20px -10px transparentize(black, 0.7);
-}
-#header-logo {
-    width: 140px;
-    margin-right: 50px;
-}
-#menu-toggle {
-    display: none;
-    width: 42px;
-    height: 42px;
-    margin-right: -5px;
-    position: relative;
-    cursor: pointer;
-
-    .bar {
-        position: absolute;
-        left: 4px;
-        right: 4px;
-        height: 4px;
-        width: 34px;
-        border-radius: 4px;
-        background-color: white;
-        transition: all 300ms linear;
-        cursor: pointer;
-        overflow: hidden;
-
-        &:nth-child(1) {
-            top: 11px;
-        }
-        &:nth-child(2) {
-            top: 20px;
-        }
-        &:nth-child(3) {
-            top: 29px;
-        }
-        background-color: $black;
-    }
-    &.open .bar {
-        &:nth-child(1) {
-            top: 21px;
-            transform: rotate(45deg);
-        }
-        &:nth-child(2) {
-            top: 20px;
-            width: 0;
-        }
-        &:nth-child(3) {
-            top: 21px;
-            transform: rotate(-45deg);
-        }
-    }
-    @media (max-width: 840px) {
-        display: block;
-    }
-}
-#header-menu-wrap {
-    flex: 1;
-    display: flex;
-    justify-content: space-between;
-    align-items: center;
-
-    @media (min-width: 841px) {
-        .menu-link,
-        #login-link,
-        .label {
-            position: relative;
-            display: inline-block;
-            height: 48px;
-            line-height: 48px;
-            padding: 0 24px;
-            color: $black;
-            cursor: pointer;
-
-            &:hover {
-                color: $blue;
-            }
-        }
-        display: flex !important;
-    }
-}
-#header-main-menu {
-    display: flex;
-}
-
-#login-link {
-    color: $black;
-}
-
-@media (max-width: 1024px) {
-    #header-logo {
-        margin-right: 20px;
-    }
-    #header-menu-wrap .menu-link,
-    #header-menu-wrap #login-link,
-    #header-menu-wrap .label {
-        padding: 0 10px;
-    }
-}
-@media (min-width: 841px) {
-    #signup-btn {
-        background-color: $blue;
-        color: white;
-
-        &:hover {
-            background-color: $blue-hover;
-        }
-    }
-    #header-auth-visitor,
-    #header-auth-user {
-        position: absolute;
-        top: 0;
-        right: 0;
-        width: 100%;
-        display: flex;
-        align-items: center;
-        justify-content: flex-end;
-        transform: translateY(-100px);
-        opacity: 0;
-
-        &.transition-in {
-            transform: translateY(0);
-            transition: transform 0ms linear 0ms;
-            animation: fadeIn 500ms forwards 300ms;
-        }
-        &.transition-out {
-            transform: translateY(-100px);
-            animation: fadeOut 500ms forwards;
-            transition: transform 0ms linear 500ms;
-        }
-    }
-    #header-auth-user {
-        color: white;
-        cursor: pointer;
-
-        .label {
-            cursor: pointer;
-            transition: all 300ms linear;
-        }
-
-        &:hover {
-            color: $yellow;
-        }
-        &.transition-in ~ #header-auth-logout {
-            display: block;
-        }
-    }
-    #header-user-avatar {
-        flex-shrink: 0;
-        width: 40px;
-        height: 40px;
-        border-radius: 100%;
-        overflow: hidden;
-        border: 2px solid transparentize(white, 0.9);
-        cursor: pointer;
-
-        img {
-            cursor: pointer;
-        }
-        @at-root #header-authentication.loading & {
-            cursor: default;
-            filter: grayscale(50);
-            opacity: 0.8;
-        }
-    }
-    #header-auth-loading {
-        position: absolute;
-        left: 0;
-        right: 0;
-        height: 100%;
-        animation: fadeIn 400ms forwards;
-
-        &.transition-out {
-            animation: authTransitionOut 300ms forwards;
-        }
-
-        .grey-line {
-            position: absolute;
-            height: 10px;
-            background-color: $grey-l;
-            left: 0;
-            top: 16px;
-            right: 100%;
-            animation: authLoading 2s infinite linear;
-        }
-    }
-    #header-auth-logout {
-        display: none;
-        position: absolute;
-        right: 0;
-        top: 100%;
-        background: #f4f4f4;
-        padding: 16px 20px;
-        border-radius: 4px;
-        font-size: 12px;
-        width: 100px;
-        line-height: 13px;
-        cursor: pointer;
-        opacity: 0;
-        transform: translateY(10px);
-        transition: color 300ms linear;
-
-        &:hover {
-            color: $red;
-        }
-        @at-root #header-authentication.loading & {
-            display: none;
-        }
-    }
-    #header-authentication {
-        width: 220px;
-        height: 48px;
-        position: relative;
-        overflow: hidden;
-
-        &:hover {
-            overflow: visible;
-
-            #header-auth-logout {
-                animation: fadeIn 300ms forwards, moveUp 600ms forwards;
-            }
-        }
-    }
-}
-@media (max-width: 840px) {
-    #header-menu-wrap {
-        display: none;
-        position: fixed;
-        background: #fff;
-        top: 0;
-        left: 0;
-        flex: none;
-        right: 100px;
-        box-shadow: 0 0 20px transparentize($black, 0.7);
-        height: 100vh;
-        overflow: auto;
-
-        .menu-link {
-            position: relative;
-            display: block;
-            color: $black;
-            height: 60px;
-            line-height: 60px;
-            padding: 0 50px;
-            border-bottom: 1px solid $grey-l;
-
-            &::after {
-                content: '\f061';
-                font-family: 'Font Awesome 5 Free';
-                position: absolute;
-                right: 50px;
-                transition: right 300ms ease-in-out;
-            }
-            &:hover,
-            &:focus {
-                background-color: $grey-xl;
-                color: $blue;
-                &::after {
-                    right: 46px;
-                }
-            }
-        }
-    }
-    #header-main-menu {
-        display: block;
-    }
-    #header-authentication {
-        margin-top: 20px;
-
-        &.loading {
-            #header-auth-user,
-            #header-auth-logout {
-                background-color: $grey-l;
-                color: $grey-m;
-                cursor: default;
-                pointer-events: none;
-
-                img {
-                    filter: grayscale(50);
-                }
-            }
-        }
-    }
-    #header-auth-visitor,
-    #header-auth-user,
-    #header-auth-logout,
-    #header-auth-loading {
-        display: none;
-    }
-
-    @mixin resposiveNavBtn() {
-        height: 60px;
-        line-height: 60px;
-        margin: 10px 50px;
-        border-radius: 6px;
-        text-align: center;
-        transition: all 300ms ease-in-out;
-        @media (max-width: 420px) {
-            margin: 10px;
-        }
-    }
-    #header-auth-visitor {
-        &.transition-in {
-            display: block;
-        }
-        &.transition-out {
-            display: none;
-        }
-    }
-    #login-link {
-        background-color: $grey-xl;
-        display: block;
-        @include resposiveNavBtn();
-
-        &:hover,
-        &:focus {
-            background-color: $grey-l;
-        }
-    }
-    #signup-btn {
-        background-color: $blue;
-        color: white;
-        display: block;
-        @include resposiveNavBtn();
-
-        &:hover,
-        &:focus {
-            background-color: $blue-hover;
-        }
-    }
-    #header-auth-user {
-        background-color: $blue;
-        color: white;
-        @include resposiveNavBtn();
-
-        .label {
-            display: inline-block;
-            vertical-align: middle;
-        }
-        &:hover,
-        &:focus {
-            background-color: $blue-hover;
-        }
-        &.transition-in {
-            display: block;
-
-            & ~ #header-auth-logout {
-                display: block;
-            }
-        }
-        &.transition-out {
-            display: none;
-        }
-    }
-    #header-auth-logout {
-        background-color: $grey-xl;
-        color: $black;
-        @include resposiveNavBtn();
-
-        &:hover,
-        &:focus {
-            background-color: $grey-l;
-            color: $red;
-        }
-    }
-    #header-user-avatar {
-        display: inline-block;
-        vertical-align: middle;
-        height: 40px;
-        width: 40px;
-        border-radius: 100%;
-        overflow: hidden;
-        border: 2px solid transparentize(white, 0.9);
-        cursor: pointer;
-
-        img {
-            vertical-align: top;
-        }
-    }
-}
-@media (max-width: 420px) {
-    #header-menu-wrap .menu-link {
-        padding: 0 20px;
-
-        &::after {
-            right: 20px;
-        }
-        &:hover::after {
-            right: 16px;
-        }
-    }
-}
-@media (max-width: 320px) {
-    #header-menu-wrap {
-        right: 75px;
-    }
-    #header-menu-wrap .menu-link::after,
-    #header-user-avatar {
-        display: none;
-    }
-    #menu-toggle {
-        margin-right: -15px;
-    }
-}
-
-.cm-logo {
-    .letter {
-        fill: $blue;
-        transition: fill 300ms ease-in-out;
-    }
-    &__star {
-        .base {
-            fill: $red;
-            transition: fill 300ms ease-in-out;
-        }
-        .gradient {
-            fill: url(#cm_logo_star);
-            transition: opacity 300ms ease-in-out;
-        }
-    }
-}
-
-.btn {
-    display: inline-block;
-    background-color: $grey-xl;
-    color: $black;
-    height: 48px;
-    line-height: 48px;
-    padding: 0 40px;
-    border-radius: 50px;
-    text-align: center;
-    cursor: pointer;
-    transition: all 160ms linear;
-
-    & > * {
-        cursor: pointer;
-    }
-}
-button:not(:disabled),
-button:not(:disabled) * {
-    cursor: pointer;
-}
\ No newline at end of file
diff --git a/assets/scss/_variables.scss b/assets/scss/_variables.scss
index 284ce0a..1bade8d 100644
--- a/assets/scss/_variables.scss
+++ b/assets/scss/_variables.scss
@@ -18,9 +18,6 @@ $color-twitter-blue-hover: #1A8CD2;
 $color-facebook-blue: #3B5998;
 $grey-bg-light: #f6f6f6;
 $grey-bg: #eaeaea;
-$grey-l: #eeeeee;
-$grey-xl: #f8f8f8;
-$grey-m: #cccccc;
 
 // Fonts
 $font-family-default: 'ProximaNova-Regular';
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index c2cc0b1..b5fd8d1 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -7,9 +7,7 @@ Version: 0.0.1
 
 @import './variables';
 @import './reset';
-@import './search';
-@import './header';
-@import './animations';
+@import './search.scss';
 
 body {
     margin: 0;
@@ -25,86 +23,73 @@ body {
 } 
 #content-wrap {
     position: relative;
-    padding-top: 76px;
-    transition: padding 300ms ease-in-out;
 
     #sidebar {
         width: 360px;
         position: fixed;
         left: 0;
-        top: 76px;
+        top: 0;
         bottom: 0;
         overflow: visible;
         box-shadow: 0 0 30px transparentize(black, .9);
         background: white;
         z-index: 10;
-        transition: top 300ms ease-in-out;
-        .overlay {
-          position: absolute;
-          top: 0;
-          left: 0;
-          height: 100%;
-          width: 100%;
-          background: white;
-          z-index: 1;
-          box-shadow: 0 0 30px rgba(0,0,0,0.1);
-          display: none;
-        }
-        &__header {
-            margin: 0 40px;
-            font-size: 22px;
-            font-family: $font-family-bold;
-            position: relative;
+
+        #menu-toggle {
+            display: none;
+            height: 50px;
+            width: 50px;
+            cursor: pointer;
             z-index: 1;
-            padding: 45px 0;
+
+            .bar {
+                height: 3px;
+                width: 30px;
+                background: $black;
+                position: relative;
+                margin: auto;
+                transition: all 300ms ease-in-out;
+
+                &.top { top: 15px; }
+                &.middle { top: 20px; }
+                &.bottom { top: 25px; }
+            }
+            &:hover { .bar { background: $blue; } }
         }
-        &__toggle {
-          display: none;
-          width: 17px;
-          height: 12px;
-          margin-right: 5px;
-          position: relative;
-          cursor: pointer;
-          .bar {
-              position: absolute;
-              height: 2px;
-              width: 17px;
-              border-radius: 2px;
-              background-color: white;
-              transition: all 300ms linear;
-              cursor: pointer;
-              overflow: hidden;
-              &:nth-child(1) {
-                  top: 0px;
-              }
-              &:nth-child(2) {
-                  top: 5px;
-              }
-              &:nth-child(3) {
-                  top: 10px;
-              }
-              background-color: $black;
-          }
-          &.open .bar {
-              &:nth-child(1) {
-                  top: 5px;
-                  transform: rotate(45deg);
-              }
-              &:nth-child(2) {
-                  top: 5px;
-                  width: 0;
-              }
-              &:nth-child(3) {
-                  top: 5px;
-                  transform: rotate(-45deg);
-              }
-          }
+        #logo {
+            z-index: 1;
+            a {
+                display: flex;
+                align-items: center;
+                padding: 40px;
+                border-bottom: 1px solid $grey-bg;
+                margin-bottom: 20px;
+                box-sizing: border-box;
+                
+
+                svg { flex: 1; fill: $blue; width: 60px;}
+                #logo-label {
+                    width: 120px;
+                    color: white;
+                    background-color: $blue;
+                    font-size: 12px;
+                    padding: 6px 20px;
+                    margin-left: 10px;
+                    border-radius: 100px;
+                    box-sizing: border-box;
+                    text-align: center;
+
+                    @media (max-width: 300px) {
+                      display: none;
+                    }
+                }
+            }
         }
         #docs-menu {
             background: white;
             overflow: auto;
             position: absolute;
-            top: 90px;
+            top: 112px;
             bottom: 0;
             right: 0;
             padding: 10px 0;
@@ -156,52 +141,47 @@ body {
         @media (max-width: 1000px) {
             left: 0;
             right: 0;
-            top: 76px;
+            top: 0;
             bottom: auto;
             align-items: center;
-            padding: 0 40px;
+            padding: 0 10px;
             width: auto;
             display: flex;
             flex-wrap: nowrap;
             height: 70px;
-            box-shadow: none;
-
-            .overlay {
-              display: block;
-            }
+            padding-right: 50px;
 
             #menu-toggle { display: block; }
-            #sidebar__toggle { display: inline-block; }
-            #sidebar__header {
-                font-size: 16px;
-                margin: 0;
-                padding: 0;
-                width: fit-content;
-                cursor: pointer;
+            #logo {
+                flex: 1;
+                border-left: 1px solid $grey-bg;
+                margin-left: 10px;
+                padding-left: 10px;
+
+                a {
+                    max-width: 270px;
+                    padding: 15px 10px;
+                    margin: 0;
+                    border: none;
+                }
             }
             #docs-menu {
                 position: fixed;
                 bottom: 0;
-                top: 146px;
+                top: 70px;
                 left: 0;
                 width: 360px;
-                transform: translateY(-120%);
+                transform: translateX(-400px);
                 padding: 30px 0;
                 box-shadow: 0 0 30px transparentize(black, .9);
                 overflow: auto;
-                transition: transform 300ms ease-in-out, top 300ms ease-in-out;
+                transition: transform 300ms ease-in-out;
 
                 &.open {
-                    transform: translateY(0);
+                    transform: translateX(0);
                 }
             }
         }
-        @media (max-width: 840px) {
-          top: 70px;
-          #docs-menu {
-            top: 140px;
-          }
-        }
         @media (max-width: 400px) {
             #docs-menu { width: 100%; }
         }
@@ -397,9 +377,8 @@ body {
             width: 230px;
             position: fixed;
             right: 0;
-            top: 76px;
+            top: 30px;
             overflow: auto;
-            padding-top: 32px;
             padding-right: 30px;
             nav {
               position: relative;
diff --git a/assets/scss/_search.scss b/assets/scss/search.scss
similarity index 93%
rename from assets/scss/_search.scss
rename to assets/scss/search.scss
index d9561a6..ef5459f 100644
--- a/assets/scss/_search.scss
+++ b/assets/scss/search.scss
@@ -38,15 +38,11 @@
       }
     }
 
-    @media (max-width: 1000px) {
-      right: 40px;
-    }
-
     @media (max-width: 500px) {
       width: 40px;
 
       &.search--active {
-        width: calc(100% - 80px);
+        width: calc(100% - 100px);
       }
 
       .search__input {
@@ -94,11 +90,7 @@
 
   @media (min-width: 1001px) {
     margin-left: 360px;
-    margin-top: 76;
-  }
-
-  @media (max-width: 1000px) {
-    margin-top: 140px;
+    margin-top: 0;
   }
 
   &:empty {
diff --git a/config.yml b/config.yml
index 33f844a..b8ec4c1 100644
--- a/config.yml
+++ b/config.yml
@@ -8,10 +8,6 @@ params:
   facebookAuthorHandle: codemagicio
   appLoginLink: https://codemagic.io/
   appUserUrl: http://localhost:5000/user
-  backendURL: http://localhost:5000
-  landingURL: http://localhost:3000
-  appURL: http://localhost:3000
-  blogURL: http://localhost
   defaultFacebookImage: /uploads/2019/01/default-thumb.png
   defaultTwitterImage: /uploads/2019/02/twitter.png
   headerLinkTitle: Documentation
diff --git a/config/production/config.yml b/config/production/config.yml
index e163819..705fcd3 100644
--- a/config/production/config.yml
+++ b/config/production/config.yml
@@ -1,9 +1,5 @@
 buildDrafts: false
 baseURL: https://docs.codemagic.io
-backendURL: https://api.codemagic.io
-landingURL: https://codemagic.io
-appURL: https://codemagic.io
-blogURL: https://blog.codemagic.io
 
 params:
   googleAnalyticsTrackingId: UA-125963734-1
diff --git a/layouts/_default/baseof.html b/layouts/_default/baseof.html
index e3114d6..9d00dab 100644
--- a/layouts/_default/baseof.html
+++ b/layouts/_default/baseof.html
@@ -5,18 +5,20 @@
     {{ .Render "head" }}
   </head>
   <body id="article-page" class="page">
-    {{ partial "header" . }}
-    <div id="content-wrap" data-js-content-wrap>
-      <div id="search-results" data-js-search-results></div>
-      <aside id="sidebar" data-js-sidebar>
-        <div class="overlay"></div>
-        <div id="sidebar__header" data-js-docs-menu-toggle>
-          <div id="sidebar__toggle" data-js-docs-menu-toggle-icon>
-            <div class="bar"></div>
-            <div class="bar"></div>
-            <div class="bar"></div>
-          </div>
-          Codemagic Documentation
+    <div id="content-wrap">
+      <div id="search-results"></div>
+      <aside id="sidebar">
+        <div id="menu-toggle">
+          <div class="bar top"></div>
+          <div class="bar middle"></div>
+          <div class="bar bottom"></div>
+        </div>
+        <div id="logo">
+          <a href="{{ site.Home.RelPermalink }}">
+            {{ $logo := resources.Get "media/logo.svg" }}
+            {{ $logo.Content | safeHTML }}
+            <span id="logo-label">{{ site.Param "headerLinkTitle" }}</span>
+          </a>
         </div>
         <div class="search search--header">
           <input class="search__input" type="text" placeholder="Search">
diff --git a/layouts/_default/single.html b/layouts/_default/single.html
index 79cde3a..f32cae3 100644
--- a/layouts/_default/single.html
+++ b/layouts/_default/single.html
@@ -2,7 +2,7 @@
   <h1>{{ .Title }}</h1>
   {{ partial "content" . }}
   {{ with .TableOfContents }}
-    <aside id="toc" data-js-toc>
+    <aside id="toc">
       <div class="heading">Table of contents</div>
       {{ . }}
     </aside>
diff --git a/layouts/partials/codemagic-logo.html b/layouts/partials/codemagic-logo.html
deleted file mode 100644
index 1554bee..0000000
--- a/layouts/partials/codemagic-logo.html
+++ /dev/null
@@ -1,119 +0,0 @@
-<svg class="cm-logo" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 564.3 116.4" style="enable-background:new 0 0 564.3 116.4;" xml:space="preserve">
-	<g class="cm-logo__name">
-		<path class="letter" d="M20.8,34.9c3-1.6,6.4-2.5,9.9-2.4c3,0,6,0.7,8.7,2c1.6,0.8,3,1.9,4.2,3.1c2.1,2.1,5.4,2.1,7.5,0
-			c0.8-0.8,1.4-1.9,1.5-3.1c0.2-1.6-0.4-3.2-1.5-4.4c-1.8-1.8-3.9-3.4-6.1-4.5c-4.4-2.2-9.2-3.3-14.1-3.2c-5.5-0.1-11,1.2-15.9,3.8
-			C10.4,28.6,6.6,32.3,4,36.8c-2.7,4.7-4.1,10-4,15.3c-0.1,5.4,1.3,10.7,4,15.3c2.6,4.5,6.4,8.2,11,10.6c4.9,2.6,10.3,3.9,15.9,3.8
-			c4.9,0.1,9.8-1,14.1-3.2c2.3-1.2,4.4-2.7,6.2-4.6c1.1-1.2,1.6-2.7,1.5-4.3c-0.4-2.9-3-4.9-5.9-4.6c-1.2,0.1-2.2,0.7-3,1.5
-			c-1.2,1.3-2.7,2.4-4.3,3.2c-2.7,1.4-5.6,2-8.6,2c-3.4,0.1-6.8-0.8-9.9-2.4c-2.9-1.6-5.3-4-6.9-6.9c-1.7-3.2-2.6-6.8-2.5-10.4
-			c-0.1-3.6,0.8-7.1,2.5-10.3C15.6,38.9,17.9,36.5,20.8,34.9z"></path>
-		<path class="letter" d="M184.1,0c-3.1,0-5.7,2.5-5.7,5.7c0,0,0,0,0,0v25c-2.1-2.5-4.8-4.6-7.8-5.9c-3.5-1.6-7.3-2.4-11.1-2.4
-			c-5.2-0.1-10.4,1.2-14.9,3.7c-4.4,2.4-8,6.1-10.4,10.4c-2.7,4.7-4.2,10.1-4.3,15.5c0,5.5,1.5,10.8,4.3,15.6
-			c2.4,4.4,6,8.1,10.4,10.5c4.6,2.5,9.7,3.8,14.9,3.7c4,0,7.9-0.8,11.4-2.5c3.1-1.4,5.8-3.6,7.9-6.2v2.6c0,3,2.5,5.5,5.5,5.5
-			s5.5-2.5,5.5-5.5V5.7C189.8,2.5,187.3,0,184.1,0C184.1,0,184.1,0,184.1,0z M169.5,69.4c-2.8,1.7-5.9,2.5-9.1,2.5
-			c-3.3,0-6.5-0.8-9.4-2.5c-2.8-1.7-5.1-4.1-6.6-7c-1.7-3.2-2.5-6.7-2.5-10.3c-0.1-3.6,0.8-7.1,2.5-10.3c1.5-2.9,3.8-5.2,6.6-6.8
-			c2.9-1.6,6.1-2.5,9.4-2.4c3.2,0,6.4,0.8,9.1,2.4c2.8,1.6,5.1,4,6.6,6.9c1.7,3.2,2.5,6.7,2.4,10.3c0.1,3.6-0.8,7.1-2.4,10.3
-			C174.7,65.3,172.4,67.8,169.5,69.4L169.5,69.4z"></path>
-		<path class="letter" d="M240.7,26.2c-4.5-2.6-9.7-3.9-14.9-3.8c-5.2-0.1-10.4,1.2-15,3.8c-4.4,2.5-8,6.2-10.5,10.6
-			c-2.6,4.7-3.9,9.9-3.8,15.3c-0.1,5.4,1.3,10.7,3.9,15.4c2.6,4.5,6.4,8.2,11.1,10.6c9.2,4.5,19.9,5,29.4,1.4
-			c2.3-0.9,4.5-2.2,6.4-3.8c2.2-1.7,2.5-4.9,0.8-7c0,0-0.1-0.1-0.1-0.1c-1.7-2-4.7-2.3-6.8-0.8c-3.8,2.7-8.4,4.1-13.1,4
-			c-5,0.2-9.9-1.4-13.8-4.5c-3.5-2.8-5.8-6.8-6.4-11.2l0.1-0.1H251c2,0,3.6-1.6,3.6-3.6c0,0,0,0,0,0c0.1-5.4-1.1-10.8-3.6-15.6
-			C248.6,32.4,245.1,28.7,240.7,26.2z M244.1,47.4l-0.6,0.2h-35.4l-0.1-0.1c0.5-4.2,2.5-8,5.6-10.9c7-5.9,17.3-5.9,24.3,0
-			c3.1,2.8,5.1,6.7,5.6,10.8L244.1,47.4L244.1,47.4z"></path>
-		<path class="letter" d="M333.6,22.4c-4.6-0.1-9.1,0.9-13.2,2.9c-3.5,1.6-6.5,4.2-8.8,7.3c-1.9-3.2-4.6-5.7-7.8-7.4
-			c-3.8-1.9-7.9-2.8-12.1-2.8c-4.1-0.1-8.1,0.7-11.8,2.4c-2.9,1.3-5.5,3.3-7.5,5.7v-2.1c0-3-2.5-5.5-5.5-5.5s-5.5,2.5-5.5,5.5v47.4
-			c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5V51.2c0-6,1.5-10.6,4.5-13.8s7.1-4.8,12.2-4.8c4.6,0,8.2,1.4,10.6,4s3.7,6.8,3.7,12.2
-			v26.9c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5V51.2c0-6,1.5-10.6,4.5-13.8s7.1-4.8,12.2-4.8c4.6,0,8.2,1.4,10.6,4
-			s3.7,6.8,3.7,12.2v26.9c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5v-28c0-8.3-2.2-14.7-6.5-19S340.9,22.4,333.6,22.4z"></path>
-		<path class="letter" d="M389.8,22.4c-4.5,0-8.9,0.6-13.2,1.9c-2.5,0.7-4.8,1.7-7.1,3c-2.3,1.5-2.9,4.7-1.3,6.9c1.4,2,4,2.8,6.2,1.7
-			c1.4-0.8,2.9-1.5,4.4-2c3.1-1.1,6.5-1.6,9.8-1.7c4.9,0,8.6,1.2,11.1,3.4s3.7,5.6,3.7,9.9v1.4c0,0.1-0.1,0.1-0.1,0.1h-15.8
-			c-8.1,0-14.1,1.6-17.8,4.7c-3.8,3.1-5.9,7.7-5.7,12.6c-0.1,4.9,2.1,9.6,6,12.6c3.9,3.2,9.2,4.8,15.7,4.8c4,0.1,7.9-0.6,11.6-2.2
-			c2.6-1.1,4.9-2.8,6.7-5v1.1c0,3,2.4,5.4,5.4,5.4c3,0,5.4-2.4,5.4-5.4c0,0,0,0,0,0V46.2c0-7.8-2.2-13.8-6.5-17.8
-			S397.9,22.4,389.8,22.4z M403.5,55.9v7.3c-1.2,3-3.3,5.5-6,7.2c-3,1.8-6.5,2.7-10,2.6c-3.9,0-6.9-0.8-9-2.4
-			c-2.1-1.5-3.3-3.9-3.1-6.4c0-5.6,4.1-8.4,12.7-8.4h15.4C403.5,55.8,403.5,55.8,403.5,55.9z"></path>
-		<path class="letter" d="M476.2,22.9c-3,0-5.4,2.4-5.4,5.4c0,0,0,0,0,0v2.5c-2.2-2.6-5-4.7-8.2-6.1c-3.7-1.6-7.7-2.5-11.7-2.4
-			c-5.1-0.1-10.1,1.1-14.6,3.5c-4.3,2.3-8,5.7-10.4,10c-2.6,4.5-3.9,9.5-3.8,14.7c-0.1,5.2,1.3,10.2,3.9,14.7
-			c2.5,4.2,6.1,7.7,10.4,10c4.5,2.4,9.5,3.6,14.6,3.6c3.9,0,7.7-0.7,11.3-2.2c3.1-1.3,5.9-3.3,8.1-5.8V74c0,6.3-1.6,11.1-4.7,14.1
-			s-8,4.6-14.5,4.6c-4.1,0-8.1-0.7-12-2c-1.7-0.6-3.4-1.3-5-2.1c-2.5-1.4-5.6-0.6-7.1,1.8c-0.7,1.2-1,2.6-0.6,4
-			c0.3,1.3,1.1,2.5,2.3,3.2c2.2,1.3,4.6,2.3,7.1,2.9c5.1,1.5,10.3,2.3,15.6,2.2c10,0,17.6-2.5,22.6-7.3s7.6-12.5,7.6-22.6V28.4
-			C481.6,25.4,479.2,22.9,476.2,22.9C476.2,22.9,476.2,22.9,476.2,22.9z M470.4,50.6c0.1,3.3-0.8,6.6-2.4,9.4c-1.5,2.7-3.8,5-6.6,6.5
-			c-2.9,1.6-6.1,2.4-9.4,2.3c-3.3,0.1-6.6-0.7-9.5-2.3c-2.8-1.5-5.1-3.7-6.6-6.5c-1.7-2.9-2.5-6.1-2.5-9.4c0-5.6,1.7-9.9,5.1-13.1
-			c3.7-3.5,7.9-5,13.4-5c4.9-0.2,9.6,1.6,13.1,5C468.7,40.9,470.6,45.6,470.4,50.6z"></path>
-		<path class="letter" d="M497.5,22.9c-3.1,0-5.7,2.5-5.7,5.7v0v47c0,3.1,2.5,5.7,5.7,5.7s5.7-2.5,5.7-5.7v-47
-			C503.2,25.5,500.6,22.9,497.5,22.9L497.5,22.9z"></path>
-		<path class="letter" d="M561.9,66c-2.1-1.3-4.8-1-6.5,0.7c-1.2,1.3-2.7,2.4-4.3,3.2c-2.7,1.4-5.6,2-8.6,2c-3.4,0.1-6.8-0.8-9.9-2.4
-			c-2.9-1.6-5.3-4-6.8-6.9c-1.7-3.2-2.6-6.8-2.5-10.4c-0.1-3.6,0.8-7.1,2.5-10.3c1.6-2.9,3.9-5.3,6.8-6.9c3-1.6,6.4-2.5,9.9-2.4
-			c3,0,6,0.7,8.6,2c1.6,0.8,3,1.9,4.2,3.1c2.1,2.1,5.4,2.1,7.5,0c0.8-0.8,1.4-1.9,1.5-3.1c0.2-1.6-0.4-3.2-1.5-4.4
-			c-1.8-1.8-3.9-3.4-6.1-4.5c-4.4-2.2-9.2-3.3-14.1-3.2c-5.5-0.1-11,1.2-15.9,3.8c-4.6,2.4-8.3,6.1-11,10.6c-2.7,4.7-4.1,10-4,15.3
-			c-0.1,5.4,1.3,10.7,4,15.3c2.6,4.5,6.4,8.1,11,10.6c4.9,2.6,10.3,3.9,15.9,3.8c4.9,0.1,9.8-1,14.1-3.2c2.3-1.2,4.4-2.7,6.2-4.6
-			c1.1-1.1,1.6-2.7,1.5-4.3C564.1,68.2,563.2,66.8,561.9,66z"></path>
-	</g>
-	<g class="cm-logo__star">
-		<path class="base" d="M121.7,46.8l-16.6-8.1c-0.2-0.1-0.3-0.3-0.4-0.5l-8.2-16.6c-1.4-2.9-5-4.1-7.9-2.7
-			c-1.2,0.6-2.1,1.5-2.7,2.7l-8.2,16.6c-0.1,0.2-0.3,0.4-0.4,0.5l-16.6,8.2c-2.9,1.4-4.1,5-2.7,7.9c0.6,1.2,1.5,2.1,2.7,2.7l16.6,8.1
-			c0.2,0.1,0.3,0.3,0.4,0.4L86,82.6c1.4,2.9,5,4.1,7.9,2.7c1.2-0.6,2.1-1.5,2.7-2.7l8.1-16.6c0.1-0.2,0.3-0.4,0.4-0.4l16.6-8.2
-			c2.9-1.4,4.1-5,2.7-7.9C123.9,48.3,122.9,47.4,121.7,46.8z M109.4,48l-7.7,6.7c-1.5,1.4-2.6,3.2-3,5.2l-2,10
-			c-0.1,0.4-0.5,0.7-0.9,0.6c-0.2,0-0.3-0.1-0.4-0.3l-6.7-7.7c-1.4-1.5-3.2-2.6-5.2-3l-10-2c-0.4-0.1-0.7-0.5-0.6-0.9
-			c0-0.2,0.1-0.3,0.3-0.4l7.7-6.7c1.5-1.4,2.6-3.2,3-5.2l2-10c0.1-0.4,0.5-0.7,0.9-0.6c0.1,0,0.3,0.1,0.4,0.2l6.7,7.7
-			c1.4,1.5,3.2,2.6,5.2,3l10,2c0.4,0.1,0.7,0.5,0.6,0.9C109.6,47.8,109.5,47.9,109.4,48z"></path>
-		<path class="gradient" d="M121.7,46.8l-16.6-8.1c-0.2-0.1-0.3-0.3-0.4-0.5l-8.2-16.6c-1.4-2.9-5-4.1-7.9-2.7
-			c-1.2,0.6-2.1,1.5-2.7,2.7l-8.2,16.6c-0.1,0.2-0.3,0.4-0.4,0.5l-16.6,8.2c-2.9,1.4-4.1,5-2.7,7.9c0.6,1.2,1.5,2.1,2.7,2.7l16.6,8.1
-			c0.2,0.1,0.3,0.3,0.4,0.4L86,82.6c1.4,2.9,5,4.1,7.9,2.7c1.2-0.6,2.1-1.5,2.7-2.7l8.1-16.6c0.1-0.2,0.3-0.4,0.4-0.4l16.6-8.2
-			c2.9-1.4,4.1-5,2.7-7.9C123.9,48.3,122.9,47.4,121.7,46.8z M109.4,48l-7.7,6.7c-1.5,1.4-2.6,3.2-3,5.2l-2,10
-			c-0.1,0.4-0.5,0.7-0.9,0.6c-0.2,0-0.3-0.1-0.4-0.3l-6.7-7.7c-1.4-1.5-3.2-2.6-5.2-3l-10-2c-0.4-0.1-0.7-0.5-0.6-0.9
-			c0-0.2,0.1-0.3,0.3-0.4l7.7-6.7c1.5-1.4,2.6-3.2,3-5.2l2-10c0.1-0.4,0.5-0.7,0.9-0.6c0.1,0,0.3,0.1,0.4,0.2l6.7,7.7
-			c1.4,1.5,3.2,2.6,5.2,3l10,2c0.4,0.1,0.7,0.5,0.6,0.9C109.6,47.8,109.5,47.9,109.4,48z"></path>
-	</g>
-	<g class="cm-logo__slogan">
-		<path class="letter" d="M10.5,95.2h2.6v6.2c0.9-1.2,2.3-1.9,3.8-1.9c3,0,5.3,2.4,5.3,6.2s-2.2,6.2-5.3,6.2c-1.5,0-2.9-0.7-3.8-1.9v1.6
-			h-2.6V95.2z M16.1,109.6c2.1,0,3.4-1.6,3.4-3.9s-1.3-4-3.4-4c-1.2,0-2.3,0.6-3,1.6v4.8C13.8,109,14.9,109.5,16.1,109.6z"></path>
-		<path class="letter" d="M25.6,114.1c0.7,0.1,1.4-0.3,1.7-1l0.6-1.3l-4.9-12h2.8l3.5,8.9l3.5-8.9h2.8l-5.7,14c-0.6,1.7-2.3,2.8-4.1,2.7
-			c-0.5,0-1-0.1-1.5-0.2l0.4-2.3C25,114,25.3,114.1,25.6,114.1z"></path>
-		<path class="letter" d="M46.4,99.6v12h-2.9V95.2h3l8.4,11.6V95.2h2.9v16.4H55L46.4,99.6z"></path>
-		<path class="letter" d="M66.4,99.4c3.6,0,5.8,2.7,5.8,6.5v0.6h-9.2c0.2,1.9,1.8,3.4,3.8,3.3c1.2,0,2.4-0.5,3.4-1.3l1.2,1.7
-			c-1.3,1.2-3.1,1.8-4.8,1.7c-3.4,0.1-6.3-2.7-6.3-6.1C60.3,102.3,63,99.4,66.4,99.4z M63.1,104.6h6.7c0-1.8-1.5-3.2-3.2-3.1
-			c0,0-0.1,0-0.1,0C64.7,101.5,63.2,102.9,63.1,104.6z"></path>
-		<path class="letter" d="M73.1,99.7h2.8l3.5,8.9l3.5-8.9h2.8l-4.8,11.9H78L73.1,99.7z"></path>
-		<path class="letter" d="M92.5,99.4c3.6,0,5.8,2.7,5.8,6.5v0.6h-9.2c0.2,1.9,1.9,3.4,3.8,3.3c1.2,0,2.4-0.5,3.4-1.3l1.2,1.7
-			c-1.3,1.2-3.1,1.8-4.8,1.7c-3.4,0.1-6.3-2.7-6.3-6.1C86.4,102.3,89.1,99.4,92.5,99.4L92.5,99.4L92.5,99.4z M89.2,104.6h6.7
-			c0-1.8-1.4-3.2-3.2-3.1c0,0-0.1,0-0.1,0C90.7,101.5,89.2,102.9,89.2,104.6z"></path>
-		<path class="letter" d="M100.9,99.7h2.6v1.7c0.9-1.2,2.3-1.9,3.9-2v2.6c-0.3-0.1-0.5-0.1-0.8-0.1c-1.2,0.1-2.3,0.6-3,1.6v8.1H101
-			L100.9,99.7z"></path>
-		<path class="letter" d="M114.9,99.4c1.8,0,3.5,0.7,4.5,2.1l-1.7,1.6c-0.6-0.9-1.6-1.4-2.7-1.4c-2.2,0-3.6,1.6-3.6,3.9s1.4,4,3.6,4
-			c1.1,0,2.1-0.5,2.7-1.4l1.7,1.6c-1.1,1.4-2.8,2.2-4.5,2.1c-3.4,0-6.2-2.8-6.2-6.2C108.6,102.2,111.4,99.4,114.9,99.4L114.9,99.4z"></path>
-		<path class="letter" d="M120.9,105.6c0.1-3.4,2.9-6.1,6.2-6s6.1,2.9,6,6.2c-0.1,3.3-2.8,6-6.1,6c-3.3,0.1-6-2.5-6.1-5.8
-			C120.9,105.9,120.9,105.8,120.9,105.6z M130.5,105.6c0-2.1-1.2-3.9-3.4-3.9s-3.4,1.8-3.4,3.9s1.2,4,3.4,4
-			C129.2,109.6,130.5,107.7,130.5,105.6z"></path>
-		<path class="letter" d="M144.1,109.9c-0.9,1.2-2.3,1.9-3.8,1.9c-3.1,0-5.3-2.3-5.3-6.2s2.2-6.2,5.3-6.2c1.5,0,2.9,0.7,3.8,1.9v-6.2
-			h2.6v16.4h-2.6V109.9z M144.1,103.3c-0.7-1-1.9-1.6-3.1-1.6c-2,0-3.3,1.6-3.3,4s1.3,3.9,3.3,3.9c1.2,0,2.4-0.6,3.1-1.6V103.3z"></path>
-		<path class="letter" d="M161.2,105.8c0-3.7-2.3-6.5-5.8-6.5h0c-3.4,0.1-6.2,2.9-6.1,6.3c0.1,3.4,2.9,6.2,6.3,6.1
-			c1.8,0.1,3.5-0.6,4.8-1.7l-1.2-1.7c-0.9,0.8-2.1,1.3-3.4,1.3c-1.9,0.1-3.6-1.3-3.8-3.3h9.2V105.8z M152,104.6
-			c0.1-1.8,1.6-3.2,3.4-3.1c0,0,0.1,0,0.1,0c1.8,0,3.2,1.4,3.2,3.1H152z"></path>
-	</g>
-</svg>
-<svg id="vector-styles" style="height: 0; position: absolute">
-	<defs>
-		<linearGradient
-			id="cm_logo_star"
-			gradientUnits="userSpaceOnUse"
-			x1="57.4512"
-			y1="65.8962"
-			x2="125.0438"
-			y2="65.8962"
-			gradientTransform="matrix(1 0 0 -1 0 118)"
-		>
-			<stop offset="0" style="stop-color:#EC0C43"></stop>
-			<stop offset="1" style="stop-color:#FBB03B"></stop>
-		</linearGradient>
-		</defs>
-		<filter id="dropshadow" height="150%">
-			<feGaussianBlur in="SourceAlpha" stdDeviation="5"/>
-			<feOffset dx="0" dy="4" result="offsetblur"/>
-			<feComponentTransfer>
-				<feFuncA type="linear" slope="0.1"/>
-			</feComponentTransfer>
-			<feMerge> 
-				<feMergeNode/>
-				<feMergeNode in="SourceGraphic"/>
-			</feMerge>
-		</filter>
-	</svg>
\ No newline at end of file
diff --git a/layouts/partials/header.html b/layouts/partials/header.html
deleted file mode 100644
index 3d499b2..0000000
--- a/layouts/partials/header.html
+++ /dev/null
@@ -1,37 +0,0 @@
-<div id="nav-trigger"></div>
-<header id="header" data-js-header>
-    <div class="inner">
-        <a href='{{ site.Param "landingURL" }}/start' id="header-logo" onclick="sendGtag('Logo_clicked', 'CodemagicMenu')" target="_blank">{{ partial "codemagic-logo" . }}</a>
-        <div id="menu-toggle" data-js-header-menu-toggle>
-            <div class="bar"></div>
-            <div class="bar"></div>
-            <div class="bar"></div>
-        </div>
-        <div id="header-menu-wrap" data-js-header-menu-wrap>
-            <nav id="header-main-menu">
-                <a class="menu-link" href='{{ site.Param "landingURL" }}/pricing' onclick="sendGtag('Pricing_clicked', 'CodemagicMenu')" target="_blank">Pricing</a>
-                <a class="menu-link" href='{{ site.Param "landingURL" }}/business' onclick="sendGtag('Business_clicked', 'CodemagicMenu')" target="_blank">Business</a>
-                <a class="menu-link" href='/' onclick="sendGtag('Documentation_clicked', 'CodemagicMenu')">Documentation</a>
-                <a class="menu-link" href='{{ site.Param "blogURL" }}' onclick="sendGtag('Blog_clicked', 'CodemagicMenu')" target="_blank">Blog</a>
-            </nav>
-            <aside id="header-authentication" data-js-header-authentication>
-                <div id="header-auth-visitor" data-js-header-auth-visitor>
-                    <a class="auth-link" href='{{ site.Param "landingURL" }}/login' id="login-link" onclick="sendGtag('Login_clicked', 'CodemagicMenu')">Login</a>
-                    <a href='{{ site.Param "landingURL" }}/signup' id="signup-btn" class="btn" onclick="sendGtag('Signup_clicked', 'CodemagicMenu')">Sign
-                        up</a>
-                </div>
-                <a id="header-auth-user" href='{{ site.Param "landingURL" }}/apps' data-js-header-auth-user>
-                    <div class="label">Return to app</div>
-                    <div id="header-user-avatar" data-js-header-user-avatar></div>
-                </a>
-                <div id="header-auth-logout" data-js-header-auth-logout>
-                    Log out
-                </div>
-                <div id="header-auth-loading" data-js-header-auth-loading>
-                    <div class="grey-line" data-js-header-auth-loading-grey-line></div>
-                    <div class="red-line"></div>
-                </div>
-            </aside>
-        </div>
-    </div>
-</header>
\ No newline at end of file
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index a251274..ed13e67 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -1,4 +1,4 @@
-<nav id="docs-menu" data-js-docs-menu>
+<nav id="docs-menu">
   <div class="search search--sidebar">
     <input class="search__input" type="text" placeholder="Search">
     <div class="search__icon search__icon--search fas fa-search"></div>
@@ -8,9 +8,9 @@
   <ul>
     {{ $currentPage := . }}
     {{ range .Site.Menus.main }}
-      <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}" data-js-docs-menu-item>
-        <div class="category-name" data-js-category-name>{{ .Name }}</div>
-        <div class="category-posts" data-js-category-posts>
+      <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}">
+        <div class="category-name">{{ .Name }}</div>
+        <div class="category-posts">
           {{ range where site.Pages "Section" .Identifier -}}
             <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
           {{- end }}
diff --git a/layouts/partials/site-footer.html b/layouts/partials/site-footer.html
index b0851fa..a8c7425 100644
--- a/layouts/partials/site-footer.html
+++ b/layouts/partials/site-footer.html
@@ -1,4 +1,4 @@
-{{ $script := resources.Get "js/main.js" | resources.ExecuteAsTemplate "" . | minify | fingerprint }}
+{{ $script := resources.Get "js/main.js" | fingerprint }}
 <script src="{{ $script.RelPermalink }}" integrity="{{ $script.Data.Integrity }}"></script>
 
 {{ partial "search" . }}

commit 1738a0ca4f40b1a0d9c8c857ff13f8acb592187e
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Sep 1 10:26:02 2020 +0300

    Revert "Revert "update backend ip address (#163)""
    
    This reverts commit 726635d0b1c8185e05822f65961b5f5b82d9faf8.

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 25c0005..6b37537 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -53,9 +53,9 @@ After you have added the public key to your repository settings, finish adding t
 
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
 
-1. `34.74.32.93` - used by our backend for getting basic information about the repository
+1. `34.74.4.65` - used by our backend for getting basic information about the repository
 2. `192.159.66.80/28` - used by our builder servers to download the code and build it
 
 ## Modifying repository access settings
 
-When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.
\ No newline at end of file
+When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.

commit 726635d0b1c8185e05822f65961b5f5b82d9faf8
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Sep 1 10:16:12 2020 +0300

    Revert "update backend ip address (#163)"
    
    This reverts commit 697d932194aaf0011c88344318cee92e8a92074b.

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 6b37537..25c0005 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -53,9 +53,9 @@ After you have added the public key to your repository settings, finish adding t
 
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
 
-1. `34.74.4.65` - used by our backend for getting basic information about the repository
+1. `34.74.32.93` - used by our backend for getting basic information about the repository
 2. `192.159.66.80/28` - used by our builder servers to download the code and build it
 
 ## Modifying repository access settings
 
-When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.
+When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.
\ No newline at end of file

commit b964b6fcb275f9d0326c46cb325f1e7e659fd7db
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Tue Sep 1 10:00:27 2020 +0300

    add menu from main page (#153)
    
    * add menu from main page
    
    * cleanup
    
    * animating burger-icon for content menu header
    
    * use rsjs approach
    
    * fix search results positions
    
    * polishing

diff --git a/assets/js/main.js b/assets/js/main.js
index d22d371..1e81239 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -1,19 +1,20 @@
+const desktopScreenWidth = 1001;
+
 // Category toggle open
-var navCategory = $('#docs-menu li')
+var navCategory = $('[data-js-docs-menu-item]')
 navCategory.each(function() {
-  $('.category-name', this).on('click', function() {
+  $('[data-js-category-name]', this).on('click', function() {
     var $parent = $(this).parent()
 
-    $parent.find('.category-posts').slideToggle(150, function complete() {
+    $parent.find('[data-js-category-posts]').slideToggle(150, function complete() {
       $parent.toggleClass('open')
     })
   })
 })
 // Menu toggle
-var menuToggle = $('#menu-toggle')
-menuToggle.on('click', function(e) {
-  $(this).toggleClass('open')
-  $('#docs-menu').toggleClass('open')
+$('[data-js-docs-menu-toggle]').on('click', function() {
+  $('[data-js-docs-menu-toggle-icon]').toggleClass('open')
+  $('[data-js-docs-menu]').toggleClass('open')
 })
 
 // Create permalinks
@@ -71,30 +72,185 @@ $(document).ready(function() {
   contentTable.each(function() {
     $(this).wrap('<div class="table-wrap"></div>')
   })
+  elementsTopPosition()
 })
 
-// Table of content
+$(document).ready(function() {
 
-let lastScrollPosition = 0
+  window.userRequest = fetchUser()
 
-$(document).ready(function () {
-    elementsTopPosition()
-})
-$(window).on('load scroll resize', function () {
-    elementsTopPosition()
+  // Fetch user
+  async function fetchUser() {
+      const url = '{{ site.Param "backendURL" }}/user'
+      const timeout = 3000
+
+      const controller = new AbortController()
+      const signal = controller.signal
+
+      setTimeout(() => controller.abort(), timeout)
+
+      try {
+          const response = await fetch(url, {
+              mode: 'cors',
+              credentials: 'include',
+              headers: { Accept: 'application/json' },
+              signal,
+          })
+          try {
+              return { response, json: await response.json() }
+          } catch (error) {
+              return { response, error }
+          }
+      } catch (error) {
+          return { error }
+      }
+  }
+
+  // Menu toggle
+  $('[data-js-header-menu-toggle]').on('click', function() {
+      $(this).toggleClass('open')
+      const visible = $('[data-js-header-menu-wrap]').is(':visible')
+      if (visible) {
+          $('[data-js-header-menu-wrap]').slideUp(200)
+      } else {
+          $('[data-js-header-menu-wrap]').slideDown(200)
+      }
+  })
+
+  // Open extenral links in new tab
+  $('a').each(function() {
+      var hostName = window.location.hostname
+      var href = $(this).attr('href')
+      if (href && !href.includes(hostName) && !href.startsWith('/') && !href.startsWith('#')) {
+          $(this).attr('target', '_blank')
+      }
+  })
+
+  authenticateUser()
+
+  async function authenticateUser() {
+    const { response, json } = await window.userRequest
+    window.auth = { loaded: true }
+
+    if (response && response.ok && json && json.user) {
+        Object.assign(window.auth, json.user.user)
+        if (json.user.ok) {
+            window.loggedIn = true
+            window.auth._id = json.user._id
+            $('[data-js-header-auth-user]').addClass('transition-in')
+            $('[data-js-header-user-avatar]').html('<img src="' + auth.avatarUrl + '" alt=""/>')
+        } else {
+            window.loggedIn = false
+            $('[data-js-header-auth-visitor]').addClass('transition-in')
+        }
+    } else {
+        window.loggedIn = false
+        $('[data-js-header-auth-visitor]').addClass('transition-in')
+    }
+    $('[data-js-header-auth-loading]').addClass('transition-out')
+    setTimeout(function() {
+        $('[data-js-header-auth-loading-grey-line]').hide()
+    }, 1000)
+  }
+
+  $('[data-js-header-auth-logout]').on('click', userLogout)
+
+  async function userLogout() {
+    $('[data-js-header-authentication]').addClass('loading')
+    $('[data-js-header-auth-loading]')
+        .removeClass('transition-out')
+        .addClass('transition-in')
+    $('[data-js-header-auth-loading-grey-line]').show()
+    if ($(window).innerWidth() < 841) {
+        $('[data-js-header-menu-toggle]').removeClass('open')
+        $('[data-js-header-menu-wrap]').slideUp(200)
+    }
+    $('[data-js-header-menu-wrap]').slideUp(200)
+
+    const url = '{{ site.Param "backendURL" }}/logout'
+    const options = {
+        method: 'GET',
+        mode: 'cors',
+        credentials: 'include',
+        headers: { Accept: 'application/json' },
+    }
+    try {
+        await fetch(url, options)
+        $('[data-js-header-auth-user]')
+            .removeClass('transition-in')
+            .addClass('transition-out')
+        setTimeout(function() {
+            $('[data-js-header-auth-loading-grey-line]').hide()
+            $('[data-js-header-auth-visitor]')
+                .removeClass('transition-out')
+                .addClass('transition-in')
+        }, 1000)
+    } catch (error) {
+        location.reload()
+    } finally {
+        auth = { loaded: true }
+        window.loggedIn = false
+        $('[data-js-header-authentication]').removeClass('loading')
+        $('[data-js-header-auth-loading]')
+            .removeClass('transition-in')
+            .addClass('transition-out')
+    }
+  }
 })
+
+let lastScrollPosition = 0
+const sidebar = $('[data-js-sidebar]')
+const header = $('[data-js-header]')
+const docsMenu = $('[data-js-docs-menu]')
+const contentWrap = $('[data-js-content-wrap]')
+const searchResults = $('[data-js-search-results]')
+
+if ($(window).scrollTop() === 0) {
+  header.css('top', 0)
+  sidebar.css('top', header.innerHeight())
+}
+
 $(window).on('scroll', function () {
-    const currentScrollPosition = $(window).scrollTop()
-    window.scrollingDown = currentScrollPosition > lastScrollPosition
-    lastScrollPosition = currentScrollPosition
+  const currentScrollPosition = $(window).scrollTop()
+  // do not consider scrolling bounce effect as scrolling
+  if (currentScrollPosition >= 0 && currentScrollPosition <= $('body').height() - $(window).height()) {
+      window.scrollingDown = currentScrollPosition > lastScrollPosition
+      lastScrollPosition = currentScrollPosition
+  }
+})
+
+$(window).on('load scroll resize', function() {
+  const headerHeight = header.innerHeight()
+  const sidebarHeight = sidebar.innerHeight()
+  if (window.innerWidth < desktopScreenWidth) {
+    if (window.scrollingDown) {
+      sidebar.css('top', 0)
+      header.css('top', -headerHeight)
+      docsMenu.css('top', sidebarHeight)
+      searchResults.css('margin-top', sidebarHeight)
+      contentWrap.css('paddingTop', 0)
+    } else {
+      header.css('top', 0)
+      sidebar.css('top', headerHeight)
+      docsMenu.css('top', headerHeight + sidebarHeight)
+      searchResults.css('margin-top', headerHeight + sidebarHeight)
+      contentWrap.css('paddingTop', headerHeight)
+    }
+  } else {
+    docsMenu.css('top', 90)
+    searchResults.css('margin-top', 76)
+  }
+  elementsTopPosition() // TOC
 })
 
+// Table of content
+
 // Adjust elements positions depending on content shown
 function elementsTopPosition() {
   const windowHeight = $(window).height()
   const topOfWindow = $(window).scrollTop()
   const footerPosition = $('#footer').offset().top
-  const toc = $('#toc')
+  const toc = $('[data-js-toc]')
   const progress = (topOfWindow / (footerPosition - windowHeight)) * 100
 
   if (toc.length) {
@@ -104,7 +260,7 @@ function elementsTopPosition() {
           heightDifference = tableOfContentHeight - windowHeight * 0.8
           contentTablePull = heightDifference * progress / 100
       }
-      const tableOfContentTop = 30 - contentTablePull
+      const tableOfContentTop = 70 - contentTablePull
       toc.css('top', tableOfContentTop)
   }
 }
@@ -146,4 +302,4 @@ $(window).ready(function () {
     document.querySelectorAll('#main-content h2, #main-content h3').forEach(function (header) {
         observer.observe(header);
     });
-});
\ No newline at end of file
+});
diff --git a/assets/scss/_animations.scss b/assets/scss/_animations.scss
new file mode 100644
index 0000000..6358fa0
--- /dev/null
+++ b/assets/scss/_animations.scss
@@ -0,0 +1,62 @@
+@keyframes fadeIn {
+    0% {
+        opacity: 0;
+    }
+    100% {
+        opacity: 1;
+    }
+}
+@keyframes fadeOut {
+    0% {
+        opacity: 1;
+    }
+    100% {
+        opacity: 0;
+    }
+}
+@keyframes rotate {
+    0% {
+        transform: rotate(0deg);
+    }
+    100% {
+        transform: rotate(360deg);
+    }
+}
+@keyframes authLoading {
+    10% {
+        left: 0;
+        right: 100%;
+    }
+    50% {
+        left: 0;
+        right: 0;
+    }
+    90% {
+        left: 100%;
+        right: 0;
+    }
+}
+@keyframes authTransitionOut {
+    0% {
+        left: 0;
+    }
+    100% {
+        left: 100%;
+    }
+}
+@keyframes moveUp {
+    0% {
+        transform: translateY(10px);
+    }
+    100% {
+        transform: translateY(0);
+    }
+}
+@keyframes moveDown {
+    0% {
+        transform: translateY(-10px);
+    }
+    100% {
+        transform: translateY(0);
+    }
+}
\ No newline at end of file
diff --git a/assets/scss/_header.scss b/assets/scss/_header.scss
new file mode 100644
index 0000000..9749cc3
--- /dev/null
+++ b/assets/scss/_header.scss
@@ -0,0 +1,471 @@
+#nav-trigger {
+    position: absolute;
+    top: 0;
+}
+.inner {
+    width: auto;
+    margin: auto 40px;
+}
+#header {
+    padding: 14px 0;
+    position: fixed;
+    top: 0;
+    left: 0;
+    right: 0;
+    font-weight: 600;
+    font-size: 14px;
+    font-family: $font-family-bold;
+    z-index: 14;
+    opacity: 0;
+    transform: translateY(-10px);
+    animation: fadeIn 600ms forwards, moveDown 600ms forwards;
+    transition: all 300ms ease-in-out;
+
+    .inner {
+        display: flex;
+        justify-content: space-between;
+        flex-wrap: wrap;
+        align-items: center;
+    }
+    background-color: white;
+    box-shadow: 0 0 20px -10px transparentize(black, 0.7);
+}
+#header-logo {
+    width: 140px;
+    margin-right: 50px;
+}
+#menu-toggle {
+    display: none;
+    width: 42px;
+    height: 42px;
+    margin-right: -5px;
+    position: relative;
+    cursor: pointer;
+
+    .bar {
+        position: absolute;
+        left: 4px;
+        right: 4px;
+        height: 4px;
+        width: 34px;
+        border-radius: 4px;
+        background-color: white;
+        transition: all 300ms linear;
+        cursor: pointer;
+        overflow: hidden;
+
+        &:nth-child(1) {
+            top: 11px;
+        }
+        &:nth-child(2) {
+            top: 20px;
+        }
+        &:nth-child(3) {
+            top: 29px;
+        }
+        background-color: $black;
+    }
+    &.open .bar {
+        &:nth-child(1) {
+            top: 21px;
+            transform: rotate(45deg);
+        }
+        &:nth-child(2) {
+            top: 20px;
+            width: 0;
+        }
+        &:nth-child(3) {
+            top: 21px;
+            transform: rotate(-45deg);
+        }
+    }
+    @media (max-width: 840px) {
+        display: block;
+    }
+}
+#header-menu-wrap {
+    flex: 1;
+    display: flex;
+    justify-content: space-between;
+    align-items: center;
+
+    @media (min-width: 841px) {
+        .menu-link,
+        #login-link,
+        .label {
+            position: relative;
+            display: inline-block;
+            height: 48px;
+            line-height: 48px;
+            padding: 0 24px;
+            color: $black;
+            cursor: pointer;
+
+            &:hover {
+                color: $blue;
+            }
+        }
+        display: flex !important;
+    }
+}
+#header-main-menu {
+    display: flex;
+}
+
+#login-link {
+    color: $black;
+}
+
+@media (max-width: 1024px) {
+    #header-logo {
+        margin-right: 20px;
+    }
+    #header-menu-wrap .menu-link,
+    #header-menu-wrap #login-link,
+    #header-menu-wrap .label {
+        padding: 0 10px;
+    }
+}
+@media (min-width: 841px) {
+    #signup-btn {
+        background-color: $blue;
+        color: white;
+
+        &:hover {
+            background-color: $blue-hover;
+        }
+    }
+    #header-auth-visitor,
+    #header-auth-user {
+        position: absolute;
+        top: 0;
+        right: 0;
+        width: 100%;
+        display: flex;
+        align-items: center;
+        justify-content: flex-end;
+        transform: translateY(-100px);
+        opacity: 0;
+
+        &.transition-in {
+            transform: translateY(0);
+            transition: transform 0ms linear 0ms;
+            animation: fadeIn 500ms forwards 300ms;
+        }
+        &.transition-out {
+            transform: translateY(-100px);
+            animation: fadeOut 500ms forwards;
+            transition: transform 0ms linear 500ms;
+        }
+    }
+    #header-auth-user {
+        color: white;
+        cursor: pointer;
+
+        .label {
+            cursor: pointer;
+            transition: all 300ms linear;
+        }
+
+        &:hover {
+            color: $yellow;
+        }
+        &.transition-in ~ #header-auth-logout {
+            display: block;
+        }
+    }
+    #header-user-avatar {
+        flex-shrink: 0;
+        width: 40px;
+        height: 40px;
+        border-radius: 100%;
+        overflow: hidden;
+        border: 2px solid transparentize(white, 0.9);
+        cursor: pointer;
+
+        img {
+            cursor: pointer;
+        }
+        @at-root #header-authentication.loading & {
+            cursor: default;
+            filter: grayscale(50);
+            opacity: 0.8;
+        }
+    }
+    #header-auth-loading {
+        position: absolute;
+        left: 0;
+        right: 0;
+        height: 100%;
+        animation: fadeIn 400ms forwards;
+
+        &.transition-out {
+            animation: authTransitionOut 300ms forwards;
+        }
+
+        .grey-line {
+            position: absolute;
+            height: 10px;
+            background-color: $grey-l;
+            left: 0;
+            top: 16px;
+            right: 100%;
+            animation: authLoading 2s infinite linear;
+        }
+    }
+    #header-auth-logout {
+        display: none;
+        position: absolute;
+        right: 0;
+        top: 100%;
+        background: #f4f4f4;
+        padding: 16px 20px;
+        border-radius: 4px;
+        font-size: 12px;
+        width: 100px;
+        line-height: 13px;
+        cursor: pointer;
+        opacity: 0;
+        transform: translateY(10px);
+        transition: color 300ms linear;
+
+        &:hover {
+            color: $red;
+        }
+        @at-root #header-authentication.loading & {
+            display: none;
+        }
+    }
+    #header-authentication {
+        width: 220px;
+        height: 48px;
+        position: relative;
+        overflow: hidden;
+
+        &:hover {
+            overflow: visible;
+
+            #header-auth-logout {
+                animation: fadeIn 300ms forwards, moveUp 600ms forwards;
+            }
+        }
+    }
+}
+@media (max-width: 840px) {
+    #header-menu-wrap {
+        display: none;
+        position: fixed;
+        background: #fff;
+        top: 0;
+        left: 0;
+        flex: none;
+        right: 100px;
+        box-shadow: 0 0 20px transparentize($black, 0.7);
+        height: 100vh;
+        overflow: auto;
+
+        .menu-link {
+            position: relative;
+            display: block;
+            color: $black;
+            height: 60px;
+            line-height: 60px;
+            padding: 0 50px;
+            border-bottom: 1px solid $grey-l;
+
+            &::after {
+                content: '\f061';
+                font-family: 'Font Awesome 5 Free';
+                position: absolute;
+                right: 50px;
+                transition: right 300ms ease-in-out;
+            }
+            &:hover,
+            &:focus {
+                background-color: $grey-xl;
+                color: $blue;
+                &::after {
+                    right: 46px;
+                }
+            }
+        }
+    }
+    #header-main-menu {
+        display: block;
+    }
+    #header-authentication {
+        margin-top: 20px;
+
+        &.loading {
+            #header-auth-user,
+            #header-auth-logout {
+                background-color: $grey-l;
+                color: $grey-m;
+                cursor: default;
+                pointer-events: none;
+
+                img {
+                    filter: grayscale(50);
+                }
+            }
+        }
+    }
+    #header-auth-visitor,
+    #header-auth-user,
+    #header-auth-logout,
+    #header-auth-loading {
+        display: none;
+    }
+
+    @mixin resposiveNavBtn() {
+        height: 60px;
+        line-height: 60px;
+        margin: 10px 50px;
+        border-radius: 6px;
+        text-align: center;
+        transition: all 300ms ease-in-out;
+        @media (max-width: 420px) {
+            margin: 10px;
+        }
+    }
+    #header-auth-visitor {
+        &.transition-in {
+            display: block;
+        }
+        &.transition-out {
+            display: none;
+        }
+    }
+    #login-link {
+        background-color: $grey-xl;
+        display: block;
+        @include resposiveNavBtn();
+
+        &:hover,
+        &:focus {
+            background-color: $grey-l;
+        }
+    }
+    #signup-btn {
+        background-color: $blue;
+        color: white;
+        display: block;
+        @include resposiveNavBtn();
+
+        &:hover,
+        &:focus {
+            background-color: $blue-hover;
+        }
+    }
+    #header-auth-user {
+        background-color: $blue;
+        color: white;
+        @include resposiveNavBtn();
+
+        .label {
+            display: inline-block;
+            vertical-align: middle;
+        }
+        &:hover,
+        &:focus {
+            background-color: $blue-hover;
+        }
+        &.transition-in {
+            display: block;
+
+            & ~ #header-auth-logout {
+                display: block;
+            }
+        }
+        &.transition-out {
+            display: none;
+        }
+    }
+    #header-auth-logout {
+        background-color: $grey-xl;
+        color: $black;
+        @include resposiveNavBtn();
+
+        &:hover,
+        &:focus {
+            background-color: $grey-l;
+            color: $red;
+        }
+    }
+    #header-user-avatar {
+        display: inline-block;
+        vertical-align: middle;
+        height: 40px;
+        width: 40px;
+        border-radius: 100%;
+        overflow: hidden;
+        border: 2px solid transparentize(white, 0.9);
+        cursor: pointer;
+
+        img {
+            vertical-align: top;
+        }
+    }
+}
+@media (max-width: 420px) {
+    #header-menu-wrap .menu-link {
+        padding: 0 20px;
+
+        &::after {
+            right: 20px;
+        }
+        &:hover::after {
+            right: 16px;
+        }
+    }
+}
+@media (max-width: 320px) {
+    #header-menu-wrap {
+        right: 75px;
+    }
+    #header-menu-wrap .menu-link::after,
+    #header-user-avatar {
+        display: none;
+    }
+    #menu-toggle {
+        margin-right: -15px;
+    }
+}
+
+.cm-logo {
+    .letter {
+        fill: $blue;
+        transition: fill 300ms ease-in-out;
+    }
+    &__star {
+        .base {
+            fill: $red;
+            transition: fill 300ms ease-in-out;
+        }
+        .gradient {
+            fill: url(#cm_logo_star);
+            transition: opacity 300ms ease-in-out;
+        }
+    }
+}
+
+.btn {
+    display: inline-block;
+    background-color: $grey-xl;
+    color: $black;
+    height: 48px;
+    line-height: 48px;
+    padding: 0 40px;
+    border-radius: 50px;
+    text-align: center;
+    cursor: pointer;
+    transition: all 160ms linear;
+
+    & > * {
+        cursor: pointer;
+    }
+}
+button:not(:disabled),
+button:not(:disabled) * {
+    cursor: pointer;
+}
\ No newline at end of file
diff --git a/assets/scss/search.scss b/assets/scss/_search.scss
similarity index 93%
rename from assets/scss/search.scss
rename to assets/scss/_search.scss
index ef5459f..d9561a6 100644
--- a/assets/scss/search.scss
+++ b/assets/scss/_search.scss
@@ -38,11 +38,15 @@
       }
     }
 
+    @media (max-width: 1000px) {
+      right: 40px;
+    }
+
     @media (max-width: 500px) {
       width: 40px;
 
       &.search--active {
-        width: calc(100% - 100px);
+        width: calc(100% - 80px);
       }
 
       .search__input {
@@ -90,7 +94,11 @@
 
   @media (min-width: 1001px) {
     margin-left: 360px;
-    margin-top: 0;
+    margin-top: 76;
+  }
+
+  @media (max-width: 1000px) {
+    margin-top: 140px;
   }
 
   &:empty {
diff --git a/assets/scss/_variables.scss b/assets/scss/_variables.scss
index 1bade8d..284ce0a 100644
--- a/assets/scss/_variables.scss
+++ b/assets/scss/_variables.scss
@@ -18,6 +18,9 @@ $color-twitter-blue-hover: #1A8CD2;
 $color-facebook-blue: #3B5998;
 $grey-bg-light: #f6f6f6;
 $grey-bg: #eaeaea;
+$grey-l: #eeeeee;
+$grey-xl: #f8f8f8;
+$grey-m: #cccccc;
 
 // Fonts
 $font-family-default: 'ProximaNova-Regular';
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index b5fd8d1..c2cc0b1 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -7,7 +7,9 @@ Version: 0.0.1
 
 @import './variables';
 @import './reset';
-@import './search.scss';
+@import './search';
+@import './header';
+@import './animations';
 
 body {
     margin: 0;
@@ -23,73 +25,86 @@ body {
 } 
 #content-wrap {
     position: relative;
+    padding-top: 76px;
+    transition: padding 300ms ease-in-out;
 
     #sidebar {
         width: 360px;
         position: fixed;
         left: 0;
-        top: 0;
+        top: 76px;
         bottom: 0;
         overflow: visible;
         box-shadow: 0 0 30px transparentize(black, .9);
         background: white;
         z-index: 10;
-
-        #menu-toggle {
-            display: none;
-            height: 50px;
-            width: 50px;
-            cursor: pointer;
-            z-index: 1;
-
-            .bar {
-                height: 3px;
-                width: 30px;
-                background: $black;
-                position: relative;
-                margin: auto;
-                transition: all 300ms ease-in-out;
-
-                &.top { top: 15px; }
-                &.middle { top: 20px; }
-                &.bottom { top: 25px; }
-            }
-            &:hover { .bar { background: $blue; } }
+        transition: top 300ms ease-in-out;
+        .overlay {
+          position: absolute;
+          top: 0;
+          left: 0;
+          height: 100%;
+          width: 100%;
+          background: white;
+          z-index: 1;
+          box-shadow: 0 0 30px rgba(0,0,0,0.1);
+          display: none;
         }
-        #logo {
+        &__header {
+            margin: 0 40px;
+            font-size: 22px;
+            font-family: $font-family-bold;
+            position: relative;
             z-index: 1;
-            a {
-                display: flex;
-                align-items: center;
-                padding: 40px;
-                border-bottom: 1px solid $grey-bg;
-                margin-bottom: 20px;
-                box-sizing: border-box;
-                
-
-                svg { flex: 1; fill: $blue; width: 60px;}
-                #logo-label {
-                    width: 120px;
-                    color: white;
-                    background-color: $blue;
-                    font-size: 12px;
-                    padding: 6px 20px;
-                    margin-left: 10px;
-                    border-radius: 100px;
-                    box-sizing: border-box;
-                    text-align: center;
-
-                    @media (max-width: 300px) {
-                      display: none;
-                    }
-                }
-            }
+            padding: 45px 0;
+        }
+        &__toggle {
+          display: none;
+          width: 17px;
+          height: 12px;
+          margin-right: 5px;
+          position: relative;
+          cursor: pointer;
+          .bar {
+              position: absolute;
+              height: 2px;
+              width: 17px;
+              border-radius: 2px;
+              background-color: white;
+              transition: all 300ms linear;
+              cursor: pointer;
+              overflow: hidden;
+              &:nth-child(1) {
+                  top: 0px;
+              }
+              &:nth-child(2) {
+                  top: 5px;
+              }
+              &:nth-child(3) {
+                  top: 10px;
+              }
+              background-color: $black;
+          }
+          &.open .bar {
+              &:nth-child(1) {
+                  top: 5px;
+                  transform: rotate(45deg);
+              }
+              &:nth-child(2) {
+                  top: 5px;
+                  width: 0;
+              }
+              &:nth-child(3) {
+                  top: 5px;
+                  transform: rotate(-45deg);
+              }
+          }
         }
         #docs-menu {
             background: white;
             overflow: auto;
             position: absolute;
-            top: 112px;
+            top: 90px;
             bottom: 0;
             right: 0;
             padding: 10px 0;
@@ -141,47 +156,52 @@ body {
         @media (max-width: 1000px) {
             left: 0;
             right: 0;
-            top: 0;
+            top: 76px;
             bottom: auto;
             align-items: center;
-            padding: 0 10px;
+            padding: 0 40px;
             width: auto;
             display: flex;
             flex-wrap: nowrap;
             height: 70px;
-            padding-right: 50px;
+            box-shadow: none;
+
+            .overlay {
+              display: block;
+            }
 
             #menu-toggle { display: block; }
-            #logo {
-                flex: 1;
-                border-left: 1px solid $grey-bg;
-                margin-left: 10px;
-                padding-left: 10px;
-
-                a {
-                    max-width: 270px;
-                    padding: 15px 10px;
-                    margin: 0;
-                    border: none;
-                }
+            #sidebar__toggle { display: inline-block; }
+            #sidebar__header {
+                font-size: 16px;
+                margin: 0;
+                padding: 0;
+                width: fit-content;
+                cursor: pointer;
             }
             #docs-menu {
                 position: fixed;
                 bottom: 0;
-                top: 70px;
+                top: 146px;
                 left: 0;
                 width: 360px;
-                transform: translateX(-400px);
+                transform: translateY(-120%);
                 padding: 30px 0;
                 box-shadow: 0 0 30px transparentize(black, .9);
                 overflow: auto;
-                transition: transform 300ms ease-in-out;
+                transition: transform 300ms ease-in-out, top 300ms ease-in-out;
 
                 &.open {
-                    transform: translateX(0);
+                    transform: translateY(0);
                 }
             }
         }
+        @media (max-width: 840px) {
+          top: 70px;
+          #docs-menu {
+            top: 140px;
+          }
+        }
         @media (max-width: 400px) {
             #docs-menu { width: 100%; }
         }
@@ -377,8 +397,9 @@ body {
             width: 230px;
             position: fixed;
             right: 0;
-            top: 30px;
+            top: 76px;
             overflow: auto;
+            padding-top: 32px;
             padding-right: 30px;
             nav {
               position: relative;
diff --git a/config.yml b/config.yml
index b8ec4c1..33f844a 100644
--- a/config.yml
+++ b/config.yml
@@ -8,6 +8,10 @@ params:
   facebookAuthorHandle: codemagicio
   appLoginLink: https://codemagic.io/
   appUserUrl: http://localhost:5000/user
+  backendURL: http://localhost:5000
+  landingURL: http://localhost:3000
+  appURL: http://localhost:3000
+  blogURL: http://localhost
   defaultFacebookImage: /uploads/2019/01/default-thumb.png
   defaultTwitterImage: /uploads/2019/02/twitter.png
   headerLinkTitle: Documentation
diff --git a/config/production/config.yml b/config/production/config.yml
index 705fcd3..e163819 100644
--- a/config/production/config.yml
+++ b/config/production/config.yml
@@ -1,5 +1,9 @@
 buildDrafts: false
 baseURL: https://docs.codemagic.io
+backendURL: https://api.codemagic.io
+landingURL: https://codemagic.io
+appURL: https://codemagic.io
+blogURL: https://blog.codemagic.io
 
 params:
   googleAnalyticsTrackingId: UA-125963734-1
diff --git a/layouts/_default/baseof.html b/layouts/_default/baseof.html
index 9d00dab..e3114d6 100644
--- a/layouts/_default/baseof.html
+++ b/layouts/_default/baseof.html
@@ -5,20 +5,18 @@
     {{ .Render "head" }}
   </head>
   <body id="article-page" class="page">
-    <div id="content-wrap">
-      <div id="search-results"></div>
-      <aside id="sidebar">
-        <div id="menu-toggle">
-          <div class="bar top"></div>
-          <div class="bar middle"></div>
-          <div class="bar bottom"></div>
-        </div>
-        <div id="logo">
-          <a href="{{ site.Home.RelPermalink }}">
-            {{ $logo := resources.Get "media/logo.svg" }}
-            {{ $logo.Content | safeHTML }}
-            <span id="logo-label">{{ site.Param "headerLinkTitle" }}</span>
-          </a>
+    {{ partial "header" . }}
+    <div id="content-wrap" data-js-content-wrap>
+      <div id="search-results" data-js-search-results></div>
+      <aside id="sidebar" data-js-sidebar>
+        <div class="overlay"></div>
+        <div id="sidebar__header" data-js-docs-menu-toggle>
+          <div id="sidebar__toggle" data-js-docs-menu-toggle-icon>
+            <div class="bar"></div>
+            <div class="bar"></div>
+            <div class="bar"></div>
+          </div>
+          Codemagic Documentation
         </div>
         <div class="search search--header">
           <input class="search__input" type="text" placeholder="Search">
diff --git a/layouts/_default/single.html b/layouts/_default/single.html
index f32cae3..79cde3a 100644
--- a/layouts/_default/single.html
+++ b/layouts/_default/single.html
@@ -2,7 +2,7 @@
   <h1>{{ .Title }}</h1>
   {{ partial "content" . }}
   {{ with .TableOfContents }}
-    <aside id="toc">
+    <aside id="toc" data-js-toc>
       <div class="heading">Table of contents</div>
       {{ . }}
     </aside>
diff --git a/layouts/partials/codemagic-logo.html b/layouts/partials/codemagic-logo.html
new file mode 100644
index 0000000..1554bee
--- /dev/null
+++ b/layouts/partials/codemagic-logo.html
@@ -0,0 +1,119 @@
+<svg class="cm-logo" x="0px" y="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 564.3 116.4" style="enable-background:new 0 0 564.3 116.4;" xml:space="preserve">
+	<g class="cm-logo__name">
+		<path class="letter" d="M20.8,34.9c3-1.6,6.4-2.5,9.9-2.4c3,0,6,0.7,8.7,2c1.6,0.8,3,1.9,4.2,3.1c2.1,2.1,5.4,2.1,7.5,0
+			c0.8-0.8,1.4-1.9,1.5-3.1c0.2-1.6-0.4-3.2-1.5-4.4c-1.8-1.8-3.9-3.4-6.1-4.5c-4.4-2.2-9.2-3.3-14.1-3.2c-5.5-0.1-11,1.2-15.9,3.8
+			C10.4,28.6,6.6,32.3,4,36.8c-2.7,4.7-4.1,10-4,15.3c-0.1,5.4,1.3,10.7,4,15.3c2.6,4.5,6.4,8.2,11,10.6c4.9,2.6,10.3,3.9,15.9,3.8
+			c4.9,0.1,9.8-1,14.1-3.2c2.3-1.2,4.4-2.7,6.2-4.6c1.1-1.2,1.6-2.7,1.5-4.3c-0.4-2.9-3-4.9-5.9-4.6c-1.2,0.1-2.2,0.7-3,1.5
+			c-1.2,1.3-2.7,2.4-4.3,3.2c-2.7,1.4-5.6,2-8.6,2c-3.4,0.1-6.8-0.8-9.9-2.4c-2.9-1.6-5.3-4-6.9-6.9c-1.7-3.2-2.6-6.8-2.5-10.4
+			c-0.1-3.6,0.8-7.1,2.5-10.3C15.6,38.9,17.9,36.5,20.8,34.9z"></path>
+		<path class="letter" d="M184.1,0c-3.1,0-5.7,2.5-5.7,5.7c0,0,0,0,0,0v25c-2.1-2.5-4.8-4.6-7.8-5.9c-3.5-1.6-7.3-2.4-11.1-2.4
+			c-5.2-0.1-10.4,1.2-14.9,3.7c-4.4,2.4-8,6.1-10.4,10.4c-2.7,4.7-4.2,10.1-4.3,15.5c0,5.5,1.5,10.8,4.3,15.6
+			c2.4,4.4,6,8.1,10.4,10.5c4.6,2.5,9.7,3.8,14.9,3.7c4,0,7.9-0.8,11.4-2.5c3.1-1.4,5.8-3.6,7.9-6.2v2.6c0,3,2.5,5.5,5.5,5.5
+			s5.5-2.5,5.5-5.5V5.7C189.8,2.5,187.3,0,184.1,0C184.1,0,184.1,0,184.1,0z M169.5,69.4c-2.8,1.7-5.9,2.5-9.1,2.5
+			c-3.3,0-6.5-0.8-9.4-2.5c-2.8-1.7-5.1-4.1-6.6-7c-1.7-3.2-2.5-6.7-2.5-10.3c-0.1-3.6,0.8-7.1,2.5-10.3c1.5-2.9,3.8-5.2,6.6-6.8
+			c2.9-1.6,6.1-2.5,9.4-2.4c3.2,0,6.4,0.8,9.1,2.4c2.8,1.6,5.1,4,6.6,6.9c1.7,3.2,2.5,6.7,2.4,10.3c0.1,3.6-0.8,7.1-2.4,10.3
+			C174.7,65.3,172.4,67.8,169.5,69.4L169.5,69.4z"></path>
+		<path class="letter" d="M240.7,26.2c-4.5-2.6-9.7-3.9-14.9-3.8c-5.2-0.1-10.4,1.2-15,3.8c-4.4,2.5-8,6.2-10.5,10.6
+			c-2.6,4.7-3.9,9.9-3.8,15.3c-0.1,5.4,1.3,10.7,3.9,15.4c2.6,4.5,6.4,8.2,11.1,10.6c9.2,4.5,19.9,5,29.4,1.4
+			c2.3-0.9,4.5-2.2,6.4-3.8c2.2-1.7,2.5-4.9,0.8-7c0,0-0.1-0.1-0.1-0.1c-1.7-2-4.7-2.3-6.8-0.8c-3.8,2.7-8.4,4.1-13.1,4
+			c-5,0.2-9.9-1.4-13.8-4.5c-3.5-2.8-5.8-6.8-6.4-11.2l0.1-0.1H251c2,0,3.6-1.6,3.6-3.6c0,0,0,0,0,0c0.1-5.4-1.1-10.8-3.6-15.6
+			C248.6,32.4,245.1,28.7,240.7,26.2z M244.1,47.4l-0.6,0.2h-35.4l-0.1-0.1c0.5-4.2,2.5-8,5.6-10.9c7-5.9,17.3-5.9,24.3,0
+			c3.1,2.8,5.1,6.7,5.6,10.8L244.1,47.4L244.1,47.4z"></path>
+		<path class="letter" d="M333.6,22.4c-4.6-0.1-9.1,0.9-13.2,2.9c-3.5,1.6-6.5,4.2-8.8,7.3c-1.9-3.2-4.6-5.7-7.8-7.4
+			c-3.8-1.9-7.9-2.8-12.1-2.8c-4.1-0.1-8.1,0.7-11.8,2.4c-2.9,1.3-5.5,3.3-7.5,5.7v-2.1c0-3-2.5-5.5-5.5-5.5s-5.5,2.5-5.5,5.5v47.4
+			c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5V51.2c0-6,1.5-10.6,4.5-13.8s7.1-4.8,12.2-4.8c4.6,0,8.2,1.4,10.6,4s3.7,6.8,3.7,12.2
+			v26.9c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5V51.2c0-6,1.5-10.6,4.5-13.8s7.1-4.8,12.2-4.8c4.6,0,8.2,1.4,10.6,4
+			s3.7,6.8,3.7,12.2v26.9c0,3,2.5,5.5,5.5,5.5h0.4c3,0,5.5-2.4,5.5-5.5v-28c0-8.3-2.2-14.7-6.5-19S340.9,22.4,333.6,22.4z"></path>
+		<path class="letter" d="M389.8,22.4c-4.5,0-8.9,0.6-13.2,1.9c-2.5,0.7-4.8,1.7-7.1,3c-2.3,1.5-2.9,4.7-1.3,6.9c1.4,2,4,2.8,6.2,1.7
+			c1.4-0.8,2.9-1.5,4.4-2c3.1-1.1,6.5-1.6,9.8-1.7c4.9,0,8.6,1.2,11.1,3.4s3.7,5.6,3.7,9.9v1.4c0,0.1-0.1,0.1-0.1,0.1h-15.8
+			c-8.1,0-14.1,1.6-17.8,4.7c-3.8,3.1-5.9,7.7-5.7,12.6c-0.1,4.9,2.1,9.6,6,12.6c3.9,3.2,9.2,4.8,15.7,4.8c4,0.1,7.9-0.6,11.6-2.2
+			c2.6-1.1,4.9-2.8,6.7-5v1.1c0,3,2.4,5.4,5.4,5.4c3,0,5.4-2.4,5.4-5.4c0,0,0,0,0,0V46.2c0-7.8-2.2-13.8-6.5-17.8
+			S397.9,22.4,389.8,22.4z M403.5,55.9v7.3c-1.2,3-3.3,5.5-6,7.2c-3,1.8-6.5,2.7-10,2.6c-3.9,0-6.9-0.8-9-2.4
+			c-2.1-1.5-3.3-3.9-3.1-6.4c0-5.6,4.1-8.4,12.7-8.4h15.4C403.5,55.8,403.5,55.8,403.5,55.9z"></path>
+		<path class="letter" d="M476.2,22.9c-3,0-5.4,2.4-5.4,5.4c0,0,0,0,0,0v2.5c-2.2-2.6-5-4.7-8.2-6.1c-3.7-1.6-7.7-2.5-11.7-2.4
+			c-5.1-0.1-10.1,1.1-14.6,3.5c-4.3,2.3-8,5.7-10.4,10c-2.6,4.5-3.9,9.5-3.8,14.7c-0.1,5.2,1.3,10.2,3.9,14.7
+			c2.5,4.2,6.1,7.7,10.4,10c4.5,2.4,9.5,3.6,14.6,3.6c3.9,0,7.7-0.7,11.3-2.2c3.1-1.3,5.9-3.3,8.1-5.8V74c0,6.3-1.6,11.1-4.7,14.1
+			s-8,4.6-14.5,4.6c-4.1,0-8.1-0.7-12-2c-1.7-0.6-3.4-1.3-5-2.1c-2.5-1.4-5.6-0.6-7.1,1.8c-0.7,1.2-1,2.6-0.6,4
+			c0.3,1.3,1.1,2.5,2.3,3.2c2.2,1.3,4.6,2.3,7.1,2.9c5.1,1.5,10.3,2.3,15.6,2.2c10,0,17.6-2.5,22.6-7.3s7.6-12.5,7.6-22.6V28.4
+			C481.6,25.4,479.2,22.9,476.2,22.9C476.2,22.9,476.2,22.9,476.2,22.9z M470.4,50.6c0.1,3.3-0.8,6.6-2.4,9.4c-1.5,2.7-3.8,5-6.6,6.5
+			c-2.9,1.6-6.1,2.4-9.4,2.3c-3.3,0.1-6.6-0.7-9.5-2.3c-2.8-1.5-5.1-3.7-6.6-6.5c-1.7-2.9-2.5-6.1-2.5-9.4c0-5.6,1.7-9.9,5.1-13.1
+			c3.7-3.5,7.9-5,13.4-5c4.9-0.2,9.6,1.6,13.1,5C468.7,40.9,470.6,45.6,470.4,50.6z"></path>
+		<path class="letter" d="M497.5,22.9c-3.1,0-5.7,2.5-5.7,5.7v0v47c0,3.1,2.5,5.7,5.7,5.7s5.7-2.5,5.7-5.7v-47
+			C503.2,25.5,500.6,22.9,497.5,22.9L497.5,22.9z"></path>
+		<path class="letter" d="M561.9,66c-2.1-1.3-4.8-1-6.5,0.7c-1.2,1.3-2.7,2.4-4.3,3.2c-2.7,1.4-5.6,2-8.6,2c-3.4,0.1-6.8-0.8-9.9-2.4
+			c-2.9-1.6-5.3-4-6.8-6.9c-1.7-3.2-2.6-6.8-2.5-10.4c-0.1-3.6,0.8-7.1,2.5-10.3c1.6-2.9,3.9-5.3,6.8-6.9c3-1.6,6.4-2.5,9.9-2.4
+			c3,0,6,0.7,8.6,2c1.6,0.8,3,1.9,4.2,3.1c2.1,2.1,5.4,2.1,7.5,0c0.8-0.8,1.4-1.9,1.5-3.1c0.2-1.6-0.4-3.2-1.5-4.4
+			c-1.8-1.8-3.9-3.4-6.1-4.5c-4.4-2.2-9.2-3.3-14.1-3.2c-5.5-0.1-11,1.2-15.9,3.8c-4.6,2.4-8.3,6.1-11,10.6c-2.7,4.7-4.1,10-4,15.3
+			c-0.1,5.4,1.3,10.7,4,15.3c2.6,4.5,6.4,8.1,11,10.6c4.9,2.6,10.3,3.9,15.9,3.8c4.9,0.1,9.8-1,14.1-3.2c2.3-1.2,4.4-2.7,6.2-4.6
+			c1.1-1.1,1.6-2.7,1.5-4.3C564.1,68.2,563.2,66.8,561.9,66z"></path>
+	</g>
+	<g class="cm-logo__star">
+		<path class="base" d="M121.7,46.8l-16.6-8.1c-0.2-0.1-0.3-0.3-0.4-0.5l-8.2-16.6c-1.4-2.9-5-4.1-7.9-2.7
+			c-1.2,0.6-2.1,1.5-2.7,2.7l-8.2,16.6c-0.1,0.2-0.3,0.4-0.4,0.5l-16.6,8.2c-2.9,1.4-4.1,5-2.7,7.9c0.6,1.2,1.5,2.1,2.7,2.7l16.6,8.1
+			c0.2,0.1,0.3,0.3,0.4,0.4L86,82.6c1.4,2.9,5,4.1,7.9,2.7c1.2-0.6,2.1-1.5,2.7-2.7l8.1-16.6c0.1-0.2,0.3-0.4,0.4-0.4l16.6-8.2
+			c2.9-1.4,4.1-5,2.7-7.9C123.9,48.3,122.9,47.4,121.7,46.8z M109.4,48l-7.7,6.7c-1.5,1.4-2.6,3.2-3,5.2l-2,10
+			c-0.1,0.4-0.5,0.7-0.9,0.6c-0.2,0-0.3-0.1-0.4-0.3l-6.7-7.7c-1.4-1.5-3.2-2.6-5.2-3l-10-2c-0.4-0.1-0.7-0.5-0.6-0.9
+			c0-0.2,0.1-0.3,0.3-0.4l7.7-6.7c1.5-1.4,2.6-3.2,3-5.2l2-10c0.1-0.4,0.5-0.7,0.9-0.6c0.1,0,0.3,0.1,0.4,0.2l6.7,7.7
+			c1.4,1.5,3.2,2.6,5.2,3l10,2c0.4,0.1,0.7,0.5,0.6,0.9C109.6,47.8,109.5,47.9,109.4,48z"></path>
+		<path class="gradient" d="M121.7,46.8l-16.6-8.1c-0.2-0.1-0.3-0.3-0.4-0.5l-8.2-16.6c-1.4-2.9-5-4.1-7.9-2.7
+			c-1.2,0.6-2.1,1.5-2.7,2.7l-8.2,16.6c-0.1,0.2-0.3,0.4-0.4,0.5l-16.6,8.2c-2.9,1.4-4.1,5-2.7,7.9c0.6,1.2,1.5,2.1,2.7,2.7l16.6,8.1
+			c0.2,0.1,0.3,0.3,0.4,0.4L86,82.6c1.4,2.9,5,4.1,7.9,2.7c1.2-0.6,2.1-1.5,2.7-2.7l8.1-16.6c0.1-0.2,0.3-0.4,0.4-0.4l16.6-8.2
+			c2.9-1.4,4.1-5,2.7-7.9C123.9,48.3,122.9,47.4,121.7,46.8z M109.4,48l-7.7,6.7c-1.5,1.4-2.6,3.2-3,5.2l-2,10
+			c-0.1,0.4-0.5,0.7-0.9,0.6c-0.2,0-0.3-0.1-0.4-0.3l-6.7-7.7c-1.4-1.5-3.2-2.6-5.2-3l-10-2c-0.4-0.1-0.7-0.5-0.6-0.9
+			c0-0.2,0.1-0.3,0.3-0.4l7.7-6.7c1.5-1.4,2.6-3.2,3-5.2l2-10c0.1-0.4,0.5-0.7,0.9-0.6c0.1,0,0.3,0.1,0.4,0.2l6.7,7.7
+			c1.4,1.5,3.2,2.6,5.2,3l10,2c0.4,0.1,0.7,0.5,0.6,0.9C109.6,47.8,109.5,47.9,109.4,48z"></path>
+	</g>
+	<g class="cm-logo__slogan">
+		<path class="letter" d="M10.5,95.2h2.6v6.2c0.9-1.2,2.3-1.9,3.8-1.9c3,0,5.3,2.4,5.3,6.2s-2.2,6.2-5.3,6.2c-1.5,0-2.9-0.7-3.8-1.9v1.6
+			h-2.6V95.2z M16.1,109.6c2.1,0,3.4-1.6,3.4-3.9s-1.3-4-3.4-4c-1.2,0-2.3,0.6-3,1.6v4.8C13.8,109,14.9,109.5,16.1,109.6z"></path>
+		<path class="letter" d="M25.6,114.1c0.7,0.1,1.4-0.3,1.7-1l0.6-1.3l-4.9-12h2.8l3.5,8.9l3.5-8.9h2.8l-5.7,14c-0.6,1.7-2.3,2.8-4.1,2.7
+			c-0.5,0-1-0.1-1.5-0.2l0.4-2.3C25,114,25.3,114.1,25.6,114.1z"></path>
+		<path class="letter" d="M46.4,99.6v12h-2.9V95.2h3l8.4,11.6V95.2h2.9v16.4H55L46.4,99.6z"></path>
+		<path class="letter" d="M66.4,99.4c3.6,0,5.8,2.7,5.8,6.5v0.6h-9.2c0.2,1.9,1.8,3.4,3.8,3.3c1.2,0,2.4-0.5,3.4-1.3l1.2,1.7
+			c-1.3,1.2-3.1,1.8-4.8,1.7c-3.4,0.1-6.3-2.7-6.3-6.1C60.3,102.3,63,99.4,66.4,99.4z M63.1,104.6h6.7c0-1.8-1.5-3.2-3.2-3.1
+			c0,0-0.1,0-0.1,0C64.7,101.5,63.2,102.9,63.1,104.6z"></path>
+		<path class="letter" d="M73.1,99.7h2.8l3.5,8.9l3.5-8.9h2.8l-4.8,11.9H78L73.1,99.7z"></path>
+		<path class="letter" d="M92.5,99.4c3.6,0,5.8,2.7,5.8,6.5v0.6h-9.2c0.2,1.9,1.9,3.4,3.8,3.3c1.2,0,2.4-0.5,3.4-1.3l1.2,1.7
+			c-1.3,1.2-3.1,1.8-4.8,1.7c-3.4,0.1-6.3-2.7-6.3-6.1C86.4,102.3,89.1,99.4,92.5,99.4L92.5,99.4L92.5,99.4z M89.2,104.6h6.7
+			c0-1.8-1.4-3.2-3.2-3.1c0,0-0.1,0-0.1,0C90.7,101.5,89.2,102.9,89.2,104.6z"></path>
+		<path class="letter" d="M100.9,99.7h2.6v1.7c0.9-1.2,2.3-1.9,3.9-2v2.6c-0.3-0.1-0.5-0.1-0.8-0.1c-1.2,0.1-2.3,0.6-3,1.6v8.1H101
+			L100.9,99.7z"></path>
+		<path class="letter" d="M114.9,99.4c1.8,0,3.5,0.7,4.5,2.1l-1.7,1.6c-0.6-0.9-1.6-1.4-2.7-1.4c-2.2,0-3.6,1.6-3.6,3.9s1.4,4,3.6,4
+			c1.1,0,2.1-0.5,2.7-1.4l1.7,1.6c-1.1,1.4-2.8,2.2-4.5,2.1c-3.4,0-6.2-2.8-6.2-6.2C108.6,102.2,111.4,99.4,114.9,99.4L114.9,99.4z"></path>
+		<path class="letter" d="M120.9,105.6c0.1-3.4,2.9-6.1,6.2-6s6.1,2.9,6,6.2c-0.1,3.3-2.8,6-6.1,6c-3.3,0.1-6-2.5-6.1-5.8
+			C120.9,105.9,120.9,105.8,120.9,105.6z M130.5,105.6c0-2.1-1.2-3.9-3.4-3.9s-3.4,1.8-3.4,3.9s1.2,4,3.4,4
+			C129.2,109.6,130.5,107.7,130.5,105.6z"></path>
+		<path class="letter" d="M144.1,109.9c-0.9,1.2-2.3,1.9-3.8,1.9c-3.1,0-5.3-2.3-5.3-6.2s2.2-6.2,5.3-6.2c1.5,0,2.9,0.7,3.8,1.9v-6.2
+			h2.6v16.4h-2.6V109.9z M144.1,103.3c-0.7-1-1.9-1.6-3.1-1.6c-2,0-3.3,1.6-3.3,4s1.3,3.9,3.3,3.9c1.2,0,2.4-0.6,3.1-1.6V103.3z"></path>
+		<path class="letter" d="M161.2,105.8c0-3.7-2.3-6.5-5.8-6.5h0c-3.4,0.1-6.2,2.9-6.1,6.3c0.1,3.4,2.9,6.2,6.3,6.1
+			c1.8,0.1,3.5-0.6,4.8-1.7l-1.2-1.7c-0.9,0.8-2.1,1.3-3.4,1.3c-1.9,0.1-3.6-1.3-3.8-3.3h9.2V105.8z M152,104.6
+			c0.1-1.8,1.6-3.2,3.4-3.1c0,0,0.1,0,0.1,0c1.8,0,3.2,1.4,3.2,3.1H152z"></path>
+	</g>
+</svg>
+<svg id="vector-styles" style="height: 0; position: absolute">
+	<defs>
+		<linearGradient
+			id="cm_logo_star"
+			gradientUnits="userSpaceOnUse"
+			x1="57.4512"
+			y1="65.8962"
+			x2="125.0438"
+			y2="65.8962"
+			gradientTransform="matrix(1 0 0 -1 0 118)"
+		>
+			<stop offset="0" style="stop-color:#EC0C43"></stop>
+			<stop offset="1" style="stop-color:#FBB03B"></stop>
+		</linearGradient>
+		</defs>
+		<filter id="dropshadow" height="150%">
+			<feGaussianBlur in="SourceAlpha" stdDeviation="5"/>
+			<feOffset dx="0" dy="4" result="offsetblur"/>
+			<feComponentTransfer>
+				<feFuncA type="linear" slope="0.1"/>
+			</feComponentTransfer>
+			<feMerge> 
+				<feMergeNode/>
+				<feMergeNode in="SourceGraphic"/>
+			</feMerge>
+		</filter>
+	</svg>
\ No newline at end of file
diff --git a/layouts/partials/header.html b/layouts/partials/header.html
new file mode 100644
index 0000000..3d499b2
--- /dev/null
+++ b/layouts/partials/header.html
@@ -0,0 +1,37 @@
+<div id="nav-trigger"></div>
+<header id="header" data-js-header>
+    <div class="inner">
+        <a href='{{ site.Param "landingURL" }}/start' id="header-logo" onclick="sendGtag('Logo_clicked', 'CodemagicMenu')" target="_blank">{{ partial "codemagic-logo" . }}</a>
+        <div id="menu-toggle" data-js-header-menu-toggle>
+            <div class="bar"></div>
+            <div class="bar"></div>
+            <div class="bar"></div>
+        </div>
+        <div id="header-menu-wrap" data-js-header-menu-wrap>
+            <nav id="header-main-menu">
+                <a class="menu-link" href='{{ site.Param "landingURL" }}/pricing' onclick="sendGtag('Pricing_clicked', 'CodemagicMenu')" target="_blank">Pricing</a>
+                <a class="menu-link" href='{{ site.Param "landingURL" }}/business' onclick="sendGtag('Business_clicked', 'CodemagicMenu')" target="_blank">Business</a>
+                <a class="menu-link" href='/' onclick="sendGtag('Documentation_clicked', 'CodemagicMenu')">Documentation</a>
+                <a class="menu-link" href='{{ site.Param "blogURL" }}' onclick="sendGtag('Blog_clicked', 'CodemagicMenu')" target="_blank">Blog</a>
+            </nav>
+            <aside id="header-authentication" data-js-header-authentication>
+                <div id="header-auth-visitor" data-js-header-auth-visitor>
+                    <a class="auth-link" href='{{ site.Param "landingURL" }}/login' id="login-link" onclick="sendGtag('Login_clicked', 'CodemagicMenu')">Login</a>
+                    <a href='{{ site.Param "landingURL" }}/signup' id="signup-btn" class="btn" onclick="sendGtag('Signup_clicked', 'CodemagicMenu')">Sign
+                        up</a>
+                </div>
+                <a id="header-auth-user" href='{{ site.Param "landingURL" }}/apps' data-js-header-auth-user>
+                    <div class="label">Return to app</div>
+                    <div id="header-user-avatar" data-js-header-user-avatar></div>
+                </a>
+                <div id="header-auth-logout" data-js-header-auth-logout>
+                    Log out
+                </div>
+                <div id="header-auth-loading" data-js-header-auth-loading>
+                    <div class="grey-line" data-js-header-auth-loading-grey-line></div>
+                    <div class="red-line"></div>
+                </div>
+            </aside>
+        </div>
+    </div>
+</header>
\ No newline at end of file
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
index ed13e67..a251274 100644
--- a/layouts/partials/sidebar.html
+++ b/layouts/partials/sidebar.html
@@ -1,4 +1,4 @@
-<nav id="docs-menu">
+<nav id="docs-menu" data-js-docs-menu>
   <div class="search search--sidebar">
     <input class="search__input" type="text" placeholder="Search">
     <div class="search__icon search__icon--search fas fa-search"></div>
@@ -8,9 +8,9 @@
   <ul>
     {{ $currentPage := . }}
     {{ range .Site.Menus.main }}
-      <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}">
-        <div class="category-name">{{ .Name }}</div>
-        <div class="category-posts">
+      <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}" data-js-docs-menu-item>
+        <div class="category-name" data-js-category-name>{{ .Name }}</div>
+        <div class="category-posts" data-js-category-posts>
           {{ range where site.Pages "Section" .Identifier -}}
             <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
           {{- end }}
diff --git a/layouts/partials/site-footer.html b/layouts/partials/site-footer.html
index a8c7425..b0851fa 100644
--- a/layouts/partials/site-footer.html
+++ b/layouts/partials/site-footer.html
@@ -1,4 +1,4 @@
-{{ $script := resources.Get "js/main.js" | fingerprint }}
+{{ $script := resources.Get "js/main.js" | resources.ExecuteAsTemplate "" . | minify | fingerprint }}
 <script src="{{ $script.RelPermalink }}" integrity="{{ $script.Data.Integrity }}"></script>
 
 {{ partial "search" . }}

commit 697d932194aaf0011c88344318cee92e8a92074b
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Mon Aug 31 14:26:40 2020 +0200

    update backend ip address (#163)

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 25c0005..6b37537 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -53,9 +53,9 @@ After you have added the public key to your repository settings, finish adding t
 
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
 
-1. `34.74.32.93` - used by our backend for getting basic information about the repository
+1. `34.74.4.65` - used by our backend for getting basic information about the repository
 2. `192.159.66.80/28` - used by our builder servers to download the code and build it
 
 ## Modifying repository access settings
 
-When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.
\ No newline at end of file
+When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.

commit 324a79b83e7d26a86c09fe17b27fe3f60b90d670
Author: Vladyslav Bondarenko <vladyslav@nevercode.io>
Date:   Thu Aug 27 11:21:36 2020 +0300

    highlight current section and scroll toc according to it (#161)

diff --git a/assets/js/main.js b/assets/js/main.js
index f3e1612..d22d371 100644
--- a/assets/js/main.js
+++ b/assets/js/main.js
@@ -72,3 +72,78 @@ $(document).ready(function() {
     $(this).wrap('<div class="table-wrap"></div>')
   })
 })
+
+// Table of content
+
+let lastScrollPosition = 0
+
+$(document).ready(function () {
+    elementsTopPosition()
+})
+$(window).on('load scroll resize', function () {
+    elementsTopPosition()
+})
+$(window).on('scroll', function () {
+    const currentScrollPosition = $(window).scrollTop()
+    window.scrollingDown = currentScrollPosition > lastScrollPosition
+    lastScrollPosition = currentScrollPosition
+})
+
+// Adjust elements positions depending on content shown
+function elementsTopPosition() {
+  const windowHeight = $(window).height()
+  const topOfWindow = $(window).scrollTop()
+  const footerPosition = $('#footer').offset().top
+  const toc = $('#toc')
+  const progress = (topOfWindow / (footerPosition - windowHeight)) * 100
+
+  if (toc.length) {
+      const tableOfContentHeight = $('#TableOfContents').height()
+      let contentTablePull = 0
+      if (tableOfContentHeight > windowHeight * 0.9) {
+          heightDifference = tableOfContentHeight - windowHeight * 0.8
+          contentTablePull = heightDifference * progress / 100
+      }
+      const tableOfContentTop = 30 - contentTablePull
+      toc.css('top', tableOfContentTop)
+  }
+}
+
+function isOnScreen(elem) {
+    if (elem.length === 0) {
+        return;
+    }
+    const viewportTop = $(window).scrollTop()
+    const viewportHeight = $(window).height()
+    const viewportBottom = viewportTop + viewportHeight
+    const top = $(elem).offset().top
+    const height = $(elem).height()
+    const bottom = top + height
+
+    return (top >= viewportTop && top < viewportBottom) ||
+        (bottom > viewportTop && bottom <= viewportBottom) ||
+        (height > viewportHeight && top <= viewportTop && bottom >= viewportBottom)
+}
+
+function setContentTableHeaderActive(id) {
+    $('#TableOfContents ul li a').removeClass('active');
+    $(`#TableOfContents ul li a[href="#${id}"]`).addClass('active');
+}
+
+// Sidemenu scroll spy
+$(window).ready(function () {
+    const observer = new IntersectionObserver(function (entries) {
+        headers = Array.from($('#main-content h2, #main-content h3'))
+        headersOnScreen = headers.filter(h => isOnScreen(h))
+        if (headersOnScreen.length) {
+            setContentTableHeaderActive(headersOnScreen[0].id)
+        } else if (entries[0].intersectionRatio == 0 && !window.scrollingDown) {
+            currentIndex = headers.findIndex(header => header.id === entries[0].target.getAttribute('id'))
+            previousHeader = currentIndex ? currentIndex - 1 : 0
+            setContentTableHeaderActive(headers[previousHeader].id)
+        }
+    });
+    document.querySelectorAll('#main-content h2, #main-content h3').forEach(function (header) {
+        observer.observe(header);
+    });
+});
\ No newline at end of file
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 0a85744..b5fd8d1 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -380,7 +380,20 @@ body {
             top: 30px;
             overflow: auto;
             padding-right: 30px;
-            bottom: 0;
+            nav {
+              position: relative;
+              padding-left: 10px;
+              &::before {
+                content: '';
+                position: absolute;
+                left: 0;
+                top: 0;
+                display: block;
+                border-right: 2px solid $grey-bg;
+                height: 100%;
+                transition: all 300ms ease-in-out;
+              }
+            }
 
             .heading {
                 color: #aaaaaa;
@@ -392,10 +405,30 @@ body {
             }
             a {
                 display: block;
+                position: relative;
                 color: $black;
-                padding: 5px;
                 font-size: 14px;
-                line-height: 1.25;
+                line-height: 20px;
+                padding: 5px;
+                color: $grey-text-light;
+                transition: all 300ms ease-in-out;
+                &:hover,
+                &.active:hover {
+                    color: $blue;
+                }
+                &.active {
+                    color: $black;
+                    font-family: $font-family-bold;
+                    &::before {
+                        content: '';
+                        position: absolute;
+                        left: -10px;
+                        top: 0;
+                        display: block;
+                        border-right: 2px solid $blue;
+                        height: 100%;
+                    }
+                }
             }
 
             ul, ol {
@@ -404,12 +437,13 @@ body {
               li {
                 padding: 0;
                 margin: 0;
+                li a {
+                  padding-left: 15px;
+                }
               }
             }
-
             ul ul {
-              margin: 5px 0;
-              padding-left: 15px;
+              margin: 0;
             }
         }
         @media (max-width: 1200px) {

commit 568542bcca25218408a310bd10d0b1154d73f490
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Fri Aug 21 15:54:13 2020 +0300

    New apple dev portal integration (#157)
    
    * Replace old content
    
    * Update docs for the new ADP integration
    
    * Update content/code-signing/ios-code-signing.md
    
    Co-authored-by: Priit Lätt <priit@nevercode.io>
    
    * Resolve issues
    
    * Editing
    
    * editing
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>
    Co-authored-by: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
    Co-authored-by: Priit Lätt <priit@nevercode.io>

diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 31a9a1f..39b4d04 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -34,45 +34,60 @@ For successful signing, the certificate and the provisioning profile must match
 In short, the purpose of the different provisioning profiles is the following:
 
 - **Development**: for testing the app on a real device while developing. 
-- **Ad Hoc:** for distributing the app to non-TestFlight testers (e.g. via [Testmagic](https://testmagic.io/)). The app must be built in **release** mode.
+- **Ad Hoc:** for distributing the app to non-TestFlight testers. The app must be built in **release** mode.
 - **App Store**: for distributing the app via TestFlight or the App Store. The app must be built in **release** mode.
 
 ## Automatic code signing
 
-Based on the selected provisioning profile type, Codemagic will create a development or a distribution certificate and a development, Ad hoc or App store provisioning profile. The provisioning profile (except for Distribution) will include all the devices you have registered on your Apple Developer account.
+Codemagic makes automatic code signing possible by connecting to [App Store Connect via its API](https://developer.apple.com/app-store-connect/api/) for creating and managing your code signing certificates and provisioning profiles. It is possible to set up several code signing identities and use different code signing settings per workflow.
 
-{{<notebox>}}
-To use automatic code signing, you are required to enable the **Apple Developer portal** integration.
-{{</notebox>}}
+The following sections describe how to set up automatic code signing for builds configured in the UI. If you're building with `codemagic.yaml`, please refer [here](../yaml/distribution#setting-up-code-signing-for-ios).
 
-### Enabling the Apple Developer Portal integration
+### Step 1. Creating an App Store API key for Codemagic
 
-Apple Developer Portal integration can be enabled in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to conveniently use the same Apple Developer Portal credentials for automatic code signing across all projects and workflows.
+It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api). To do so:
 
-1. In the list of available integrations, click the **Connect** button for **Developer Portal**.
-2. Enter your **Apple ID** (Apple Developer Portal username) and **password**.
-3. Click **Save**. Codemagic will attempt to establish a connection to Apple Developer Portal and will ask for a verification code for two-factor authentication or two-step verification. 
-    >If you have set up several trusted phone numbers, select the phone number to which the verification code will be sent.
-4. Enter the verification code and click **Save** one more time. On successful authentication, the Apple Developer Portal integration will be enabled.
+1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
+2. Click on the + sign to generate a new API key.
+3. Enter the name for the key and select an access level. We recommend choosing either `Developer` or `App Manager`, read more about Apple Developer Program role permissions [here](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
+4. Click **Generate**.
+5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key for later. Note that the key can only be downloaded once.
+
+{{<notebox >}} 
+Take note of the **Issuer ID** above the table of active keys as well as the **Key ID** of the generated key as these will be required when setting up the Apple Developer Portal integration in Codemagic UI.
+{{</notebox>}}
+
+### Step 2. Connecting the Apple Developer Portal integration for your team/account
 
-### Setting up automatic code signing
+The Apple Developer Portal integration can be enabled in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to conveniently use the same credentials for automatic code signing across different apps and workflows.
 
 {{<notebox >}} 
-The actions that Codemagic can perform on your behalf depend on your [Apple Developer Program user role](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
+Note that users who had previously set up the session-based intgeration have been automatically migrated to use the API-key based setup.
 {{</notebox>}}
 
+1. In the list of available integrations, click the **Connect** button for **Developer Portal**.
+2. In the **App Store Connect API key name**, provide a name for the key you are going to set up the integration with. This is for identifying the key in Codemagic.
+3. Enter the **Issuer ID** related to your Apple Developer account. You can find it above the table of active keys on the Keys tab of the [Users and Access](https://appstoreconnect.apple.com/access/api) page.
+4. Enter the **Key ID** of the key to be used for code signing.
+5. In the **API key** field, upload the private API key downloaded from App Store Connect.
+6. Click **Save** to finish the setup.
+
+If you work with multiple Apple Developer teams, you can add additional keys by clicking **Add another key** right after adding the first key and repeating the steps described above. You can delete existing keys or add new ones when you click **Manage keys** next to the Developer Portal integration in user or team settings.
+
+### Step 3. Enabling automatic code signing for workflow
+
+Once the Apple Developer Portal has been enabled for the account or team the app belongs to, you can easily enable automatic code signing per workflow.
+
 1. Go to **App settings > Publish > iOS code signing**.
 2. Select **Automatic** as the code signing method. If you haven't enabled the Apple Developer Portal integration yet, you will be asked to enable it before you can continue configuration.
-3. If you belong to several Apple Developer teams, select the right team in the **Developer portal team** field.
-4. Select the **provisioning profile type** used for provisioning the build. Codemagic will automatically select or generate a matching certificate for code signing.
+3. If you have several keys available, select the right key in the **App Store Connect API key** field.
+4. Select the **provisioning profile type** used for provisioning the build. Codemagic will automatically select or generate a matching certificate for code signing. The provisioning profiles (except for Distribution) will include all the devices you have registered on your Apple Developer account at the time of creating the profile.
 7. Enter your app's **bundle identifier** (optional). By default, Codemagic looks for it from your `project.pbxproj` file. 
 
     >Note that if your app contains app extensions, an additional provisioning profile is required for each extension. Codemagic will use the bundle identifier to find the relevant provisioning profiles. If your bundle identifier is `com.example.app`, the matching profiles are the ones with `com.example.app` and `com.example.app.*` as bundle identifier.
 
 8. Finally, click **Save** to finish the setup.
 
-{{< figure size="medium" src="../uploads/automatic_code_signing.png" caption="Automatic code signing setup" >}}
-
 As the next step, you can [configure publishing to App Store Connect](../publishing/publishing-to-app-store) to distribute the app via TestFlight or submit it to the App Store.
 
 ## Manual code signing
diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
index 219969b..969f4ed 100644
--- a/content/yaml/distribution.md
+++ b/content/yaml/distribution.md
@@ -6,9 +6,9 @@ weight: 8
 
 All Android and iOS applications have to be digitally signed before release to confirm their author and guarantee that the code has not been altered or corrupted since it was signed. In the case of mobile apps, this means that users can be assured that the apps they download from the App Store Connect or Google Play Store are from developers they can trust.
 
-For iOS, we use Codemagic CLI tools to perform code signing and publishing for iOS apps - these tools are open source and can also be [used locally](../yaml/runninglocally/) or in other environments. Android applications are usually signed using Gradle. This page here covers the most common scripts, but different options for code signing have also been covered extensively on our blog. For example, there is a [blog post](https://blog.codemagic.io/distributing-native-ios-sdk-with-flutter-module-using-codemagic/) about code signing iOS apps with `codemagic.yaml`. There are also [step-by-step instructions](https://blog.codemagic.io/the-simple-guide-to-android-code-signing/) available on our blog for Android code signing.
+For iOS, we use [Codemagic CLI tools](https://github.com/codemagic-ci-cd/cli-tools) to perform code signing and publishing for iOS apps ⏤ these tools are open source and can also be [used locally](../yaml/runninglocally/) or in other environments. Android applications are usually signed using Gradle. This page here covers the most common scripts, but different options for code signing have also been covered extensively on our blog. For example, there is a [blog post](https://blog.codemagic.io/distributing-native-ios-sdk-with-flutter-module-using-codemagic/) about code signing iOS apps with `codemagic.yaml`. There are also [step-by-step instructions](https://blog.codemagic.io/the-simple-guide-to-android-code-signing/) available on our blog for Android code signing.
 
-All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with custom scripts - for example, in addition to traditional solutions, there are also some examples about Firebase App Distribution [below](../yaml/distribution/#publishing).
+All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with custom scripts, see the examples [below](../yaml/distribution/#publishing).
 
 ## Setting up code signing for iOS
 
@@ -24,7 +24,7 @@ In order to use **automatic code signing** and have Codemagic manage signing cer
 
   1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
   2. Click on the + sign to generate a new API key.
-  3. Enter the name for the key and select an access level (`Admin` or `Developer`).
+  3. Enter the name for the key and select an access level (`Developer` or `App Manager`).
   4. Click **Generate**.
   5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key. Note that the key can only be downloaded once.
 
@@ -46,14 +46,14 @@ In order to use **automatic code signing** and have Codemagic manage signing cer
 Alternatively, each property can be specified in the scripts section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
 {{</notebox>}}
 
+### Setting up manual code signing
+
 In order to use **manual code signing**, [encrypt](../yaml/yaml/#encrypting-sensitive-data) your signing certificate, the certificate password (if the certificate is password-protected) and the provisioning profile, and set the encrypted values to the following environment variables:
 
     CM_CERTIFICATE: Encrypted(...)
     CM_CERTIFICATE_PASSWORD: Encrypted(...)
     CM_PROVISIONING_PROFILE: Encrypted(...)
 
-### Setting up manual code signing
-
 With the manual code signing method, you are required to upload the signing certificate and the matching provisioning profile(s) to Codemagic in order to receive signed builds.
 
     - find . -name "Podfile" -execdir pod install \;

commit 3ef69e2ada164e214b2503231b23946e184e497e
Author: Mart <martlaub@yahoo.com>
Date:   Wed Aug 19 17:49:06 2020 +0300

    Improve code element styling (#160)

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index ca1dd8f..0a85744 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -245,7 +245,12 @@ body {
                 -webkit-filter: drop-shadow(0 0 10px transparentize(black, 0.9));
                 max-width: 100%;
             }
-            a { color: #158fdc; }
+            a {
+              color: #158fdc;
+              code {
+                color: #158fdc;
+              }
+            }
             figure {
                 text-align: center;
 
@@ -277,10 +282,12 @@ body {
             code {
               font-family: monospace;
               background: $grey-bg-light;
+              color: #c71585;
               font-size: 0.9em;
-              padding: 5px 10px;
+              padding: 2px 4px;
               word-break: break-word;
               border-radius: 2px;
+              border: 1px solid $grey-bg;
             }
             pre {
                 background: $grey-bg;

commit ec7a4d69f80066b94a5f8af2842f02bf8a6c3ff1
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Wed Aug 19 14:31:14 2020 +0300

    Explain how to put env vars inside of app with example of google maps api key (#151)
    
    * init commit (java swift objective-c)
    
    * fix comments
    
    * fix comments

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 6d231cc..92ccb63 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -78,3 +78,40 @@ Flutter projects can be configured both in .yaml file as well as in the Codemagi
 4. Click **Save** to save the settings.
 
 ![](../uploads/env_vars.PNG)
+
+## Accessing environment variables from your application
+
+The following examples show how to place your Google Maps API key into an Android or iOS application from an environment variable. With this approach you will not have to store your secret key in the repository.
+
+1. Add your key as an environment variable with the name `MAPS_API_KEY`
+
+### Android
+
+2. Read the key from an environment variable to `build.gradle`
+
+        defaultConfig {
+            // Other values set here
+            resValue "string", "maps_api_key", "$System.env.MAPS_API_KEY"
+        }
+
+3. Read the key from the `build.gradle` value to `AndroidManifest.xml`
+
+        <meta-data android:name="com.google.android.geo.API_KEY"
+            android:value="@string/maps_api_key"/>
+
+### iOS (Swift)
+
+2. Read the key from the environment variable to `Info.plist`
+
+        <key>MAPS_API_KEY</key>
+        <string>$(MAPS_API_KEY)</string>
+
+3. Read the key from the `Info.plist` value to `AppDelegate.swift`
+
+        GMSServices.provideAPIKey(Bundle.main.object(forInfoDictionaryKey: "MAPS_API_KEY") as? String ?? "")
+
+### iOS (Objective-C)
+
+2.  Read your key from the environemnt variable to `AppDelegate.m` as in the [example](https://github.com/flutter/plugins/blob/master/packages/google_maps_flutter/google_maps_flutter/example/ios/Runner/AppDelegate.m).
+
+        [GMSServices provideAPIKey:[[NSProcessInfo processInfo] environment][@"MAPS_API_KEY"]];

commit 7c2c4f2419324fc4d4f288e414068036f7ebe951
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Aug 18 16:10:03 2020 +0300

    Update documentation for remote access UI changes (#159)
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>

diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index c1c181e..9c3211f 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -17,25 +17,25 @@ All virtual machines are located within the private network. In order to allow u
 
 ## Setting up SSH connection to the virtual machine
 
-Establishing an SSH connection to the virtual machine is possible only for manually triggered builds. Setting it up requires both enabling remote access in UI and running an automatically generated script in your terminal.
+Establishing an SSH connection to the virtual machine is possible only for manually triggered builds.
 
 1. Click **Start new build**.
-2. In the **Specify build configuration** popup, check **Enable remote access** and start the build.
-3. When the build has started, you will shortly see additional instructions for establishing SSH access. Run the automatically generated script in the terminal before the build finishes to establish an SSH connection to the machine running the build.
+2. In the **Specify build configuration** popup, review your build configuration and click **Start new build** once again.
+3. When the build has started, click **Explore build machine** above the build steps to see the instructions for establishing SSH access. Run the automatically generated script in the terminal before the build finishes to establish an SSH connection to the machine running the build.
 
 If you don't run the script before the build finishes, the unique SSH key expires and can't be used anymore. A new script will be generated every time you run the build, so previous scripts cannot be reused.
 
 {{<notebox>}}
-Note that the script for establishing SSH connection works natively on Linux and MacOS, but requires additional software like Git-bash on Windows.
+Note that the script for establishing SSH connection works natively on Linux and MacOS but requires additional software like Git-bash on Windows.
 {{</notebox>}}
 
 ## Setting up VNC connection to the virtual machine
 
-Establishing a VNC connection to the virtual machine is possible only for manually triggered builds. Setting it up requires enabling remote access in UI and configuring access on your VNC client.
+Establishing a VNC connection to the virtual machine is possible only for manually triggered builds.
 
 1. Click **Start new build**.
-2. In the **Specify build configuration** popup, check **Enable remote access** and start the build.
-3. Use the given **Host**, **Port**, **Username** and **Password** on your VNC client to establish the connection.
+2. In the **Specify build configuration** popup, review your build configuration and click **Start new build** once again.
+3. When the build has started, click **Explore build machine** above the build steps to see the instructions for setting up VNC access. Use the given **Host**, **Port**, **Username** and **Password** on your VNC client to establish the connection.
 
 {{<notebox>}}
 You can download VNC Viewer for Windows [here](https://www.realvnc.com/en/connect/download/viewer/windows/). Using VNC Viewer, make sure to add the values for **Host** and **Port** into the address field in this format: `<Host>:<Port>` (for example `192.159.66.83:16543`).

commit bf740daf88be04a9fda1f12aa8c68244be07cd38
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Tue Aug 18 14:21:10 2020 +0300

    remove absolute doc refs (#155)

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index 83f1f58..a4be533 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -8,7 +8,7 @@ If your project requires accessing any private Git submodules or dependencies, y
 
 1. [Create an SSH key pair](#generating-an-ssh-key) for use with Codemagic. Note that the SSH key **cannot** be password-protected.
 2. Add the **public key** to your repository settings. See how to do that on [GitHub](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account), [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), [GitLab](https://docs.gitlab.com/ee/ssh/README.html#adding-an-ssh-key-to-your-gitlab-account).
-3. Then in Codemagic, add the **private key** for accessing the repository as an [environment variable](https://docs.codemagic.io/building/environment-variables/). Make sure to check **Secure**. For example:
+3. Then in Codemagic, add the **private key** for accessing the repository as an [environment variable](../building/environment-variables/). Make sure to check **Secure**. For example:
 
         SSH_KEY = -----BEGIN OPENSSH PRIVATE KEY-----
         ...
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 9b7a907..11e6a9a 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -22,8 +22,8 @@ In the **Build section** of app settings, tick **Android** and then choose **And
 In order to upload your Android App Bundle to Google Play, you will need to:
 
 1. Build the app in **Release** mode.
-2. Set up [Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/) in Codemagic to sign the app bundle.
-3. Set up [publishing to Google Play](https://docs.codemagic.io/publishing/publishing-to-google-play/) in Codemagic to upload your app bundle to one of Google Play tracks.
+2. Set up [Android code signing](../code-signing/android-code-signing/) in Codemagic to sign the app bundle.
+3. Set up [publishing to Google Play](../publishing/publishing-to-google-play/) in Codemagic to upload your app bundle to one of Google Play tracks.
 4. [Enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423) to have Google sign the .apk(s) that are generated from the app bundle during installation.
 
 When you enroll an app into app signing by Google Play, Google will manage your app's signing key for you and use it to sign the .apk for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index 5e7e4bf..f42b0f9 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -23,4 +23,4 @@ Codemagic can detect your Flutter web project if it meets the following conditio
 
 ## Build artifacts
 
-At the end of a successful build, Codemagic generates a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](https://docs.codemagic.io/publishing/publishing-to-codemagic-static-pages/). You can also use custom script to publish to third-party hosting sites.
\ No newline at end of file
+At the end of a successful build, Codemagic generates a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](../publishing/publishing-to-codemagic-static-pages/). You can also use custom script to publish to third-party hosting sites.
\ No newline at end of file
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 2258c0a..e544fdf 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -10,9 +10,9 @@ Code signing is required for distributing your Android app to Google Play store.
 
 To receive a signed release .apk of your app on Codemagic, you will have to:
 
-1. [Prepare your Flutter project for code signing](https://docs.codemagic.io/code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing)
+1. [Prepare your Flutter project for code signing](#preparing-your-flutter-project-for-code-signing)
 
-2. [Set up Android code signing in Codemagic UI](https://docs.codemagic.io/code-signing/android-code-signing/#setting-up-android-code-signing-on-codemagic)
+2. [Set up Android code signing in Codemagic UI](#setting-up-android-code-signing-on-codemagic)
 
 For code signing, you need to upload the **keystore** containing your **certificate** and **key**. See the instructions for generating the keystore [here](#generating-a-keystore).
 
@@ -37,7 +37,7 @@ You need to upload the keystore and provide the keystore password, key alias and
 
 ## Preparing your Flutter project for code signing
 
-There are several approaches you can use to prepare your Flutter project for code signing, we have described two of these in this section. Note that whichever approach you use, you still need to [set up Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/#setting-up-android-code-signing-on-codemagic) in the Codemagic UI.
+There are several approaches you can use to prepare your Flutter project for code signing, we have described two of these in this section. Note that whichever approach you use, you still need to [set up Android code signing](#setting-up-android-code-signing-on-codemagic) in the Codemagic UI.
 
 ### Option 1. Configure signing following Flutter's documentation
 
@@ -45,7 +45,7 @@ You can follow the instructions in [Flutter's documentation](https://flutter.dev
 
 ### Option 2. Configure signing using environment variables
 
-Alternatively, you can use [environment variables](https://docs.codemagic.io/building/environment-variables/ 'Environment variables') to prepare your app for code signing.
+Alternatively, you can use [environment variables](../building/environment-variables/ 'Environment variables') to prepare your app for code signing.
 
 Set your signing configuration in `build.gradle` as follows:
 
diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index ff6db34..c3cf906 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -4,7 +4,7 @@ title: Load Firebase configuration
 weight: 1
 ---
 
-Instead of committing the Firebase config files to your repository, you can upload them to Codemagic as [environment variables](https://docs.codemagic.io/building/environment-variables/) and reference them in a custom script. Note that the Firebase config file (`google-services.json` for Android or `GoogleService-Info.plist` for iOS) must be Base64-encoded.
+Instead of committing the Firebase config files to your repository, you can upload them to Codemagic as [environment variables](../building/environment-variables/) and reference them in a custom script. Note that the Firebase config file (`google-services.json` for Android or `GoogleService-Info.plist` for iOS) must be Base64-encoded.
 
 1.  Save your Firebase config files as environment variables, e.g. `ANDROID_FIREBASE_SECRET` and `IOS_FIREBASE_SECRET`. Make sure to check **Secure**.
 2.  Add the following **pre-build** script echoing your variables to load the Firebase configuration in Codemagic.
diff --git a/content/getting-started/setting-up.md b/content/getting-started/setting-up.md
index f4d91d1..b624ecb 100644
--- a/content/getting-started/setting-up.md
+++ b/content/getting-started/setting-up.md
@@ -37,7 +37,7 @@ If it's a **non-Flutter project**, e.g. a native Android or iOS app or an app co
 1. Start your project by clicking **Set up build**. 
 2. Choose a suitable project type. 
 3. Download or copy the configuration file example.
-4. Use this file example to create a [`codemagic.yaml`](../building/yaml) file for the build configuration. Make all the necessary changes in your `codemagic.yaml` file to match your project. For example, if you have private dependencies, give Codemagic the necessary access rights and include these dependencies in the configuration file (read more about it [here](https://docs.codemagic.io/building/access-private-git-submodules/)). 
+4. Use this file example to create a [`codemagic.yaml`](../building/yaml) file for the build configuration. Make all the necessary changes in your `codemagic.yaml` file to match your project. For example, if you have private dependencies, give Codemagic the necessary access rights and include these dependencies in the configuration file (read more about it [here](../building/access-private-git-submodules/)). 
 5. When you are done, commit the configuration file to your repository. The name of the file must be `codemagic.yaml` and it must be located in the `root` directory of the repository.
 6. Choose the branch you pushed it into and click **Check for configuration file**. 
 7. When the system finds the configuration file, click **Start new build**.
diff --git a/content/publishing/publish-build-artifacts-to-amazon-s3.md b/content/publishing/publish-build-artifacts-to-amazon-s3.md
index a7b614b..5334e05 100644
--- a/content/publishing/publish-build-artifacts-to-amazon-s3.md
+++ b/content/publishing/publish-build-artifacts-to-amazon-s3.md
@@ -6,7 +6,7 @@ weight: 5
 
 You can use custom scripts to publish your app artifacts to external sources. Here's an example for publishing to [Amazon S3](https://aws.amazon.com/s3/).
 
-1.  You will first need to provide Codemagic access to your Amazon S3 account for publishing. In **App settings >** **Environment variables**, add your credentials as [environment variables](https://docs.codemagic.io/building/environment-variables/) named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` respectively. Make sure to check **Secure**.
+1.  You will first need to provide Codemagic access to your Amazon S3 account for publishing. In **App settings >** **Environment variables**, add your credentials as [environment variables](../building/environment-variables/) named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` respectively. Make sure to check **Secure**.
 2.  Click on the **+** sign before the Build section to expand the step and add the following **pre-build script**. `<FOLDER OR FILE>` refers to a specific folder or file to be synced. Replace `<BUCKET_NAME>` with your actual bucket name. Note that all the artifact files that Codemagic generates during the build are located in `FCI_BUILD_OUTPUT_DIR`.
 
         #!/bin/sh
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 2469f42..158b767 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -4,7 +4,7 @@ title: App Store Connect
 weight: 1
 ---
 
-Codemagic enables you to automatically publish your app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store. To do so, you must first set up [iOS code signing](https://docs.codemagic.io/code-signing/ios-code-signing/) and then configure publishing to App Store Connect.
+Codemagic enables you to automatically publish your app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store. To do so, you must first set up [iOS code signing](../code-signing/ios-code-signing/) and then configure publishing to App Store Connect.
 
 ## Requirements
 
@@ -12,7 +12,7 @@ Codemagic needs your **Apple ID** and [**app-specific password**](https://suppor
 
 In addition, the application must be **App Store ready** for build distribution, meaning that it must have all the correct icons and icon sizes, otherwise App Store Connect will tag the binary as invalid, and you will not be able to distribute it at all.
 
-It is also worth pointing out the necessity for each uploaded binary to have a **different version**, otherwise it will be refused by App Store Connect. See the [Build versioning](https://docs.codemagic.io/building/build-versioning/) article for instructions on incrementing app version with Codemagic.
+It is also worth pointing out the necessity for each uploaded binary to have a **different version**, otherwise it will be refused by App Store Connect. See the [Build versioning](../building/build-versioning/) article for instructions on incrementing app version with Codemagic.
 
 {{<notebox>}}Please note that you will need to create an **app record** in App Store Connect before you can automate publishing with Codemagic. It is recommended to upload the very first version of the app manually. {{</notebox>}}
 
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index 15b39a9..2f7a75c 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -4,7 +4,7 @@ title: Google Play
 weight: 2
 ---
 
-Codemagic enables you to automatically publish your app to the **internal**, **alpha**, **beta** and **production** tracks on Google Play. To do so, you must first [set up Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/ 'Android code signing') and then configure publishing to Google Play.
+Codemagic enables you to automatically publish your app to the **internal**, **alpha**, **beta** and **production** tracks on Google Play. To do so, you must first [set up Android code signing](../code-signing/android-code-signing/ 'Android code signing') and then configure publishing to Google Play.
 
 ## Requirements
 
@@ -12,7 +12,7 @@ You will need a **service account in Google Play Console** to obtain the **JSON
 
 Before releasing the app to Google Play, make sure that it meets the [Google Play's best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
 
-{{<notebox>}} Note that if you haven't published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](https://docs.codemagic.io/building/build-versioning/ 'Build versioning') on Codemagic. {{</notebox>}}
+{{<notebox>}} Note that if you haven't published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](../building/build-versioning/ 'Build versioning') on Codemagic. {{</notebox>}}
 
 ## Setting up a service account in Google Play Console
 
diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index f90b9f5..1aacb15 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -26,7 +26,7 @@ You can enable this feature in the UI by navigating to **App settings > Build tr
 
 ### New billing model
 
-We have moved to a post-paid billing model that comes with a more consistent billing experience and premium features, such as Mac Pro builds. Read more about what changed, who wins from this and how to take advantage of the new billing model on [our blog](https://blog.codemagic.io/codemagic-new-billing/). If you are interested in numbers, check out our updated [pricing page](https://codemagic.io/pricing/) for a quick overview of free and paid features. A short guide for selecting Mac Pro as the machine type is available in our [documentation](https://docs.codemagic.io/building/machine-type/).
+We have moved to a post-paid billing model that comes with a more consistent billing experience and premium features, such as Mac Pro builds. Read more about what changed, who wins from this and how to take advantage of the new billing model on [our blog](https://blog.codemagic.io/codemagic-new-billing/). If you are interested in numbers, check out our updated [pricing page](https://codemagic.io/pricing/) for a quick overview of free and paid features. A short guide for selecting Mac Pro as the machine type is available in our [documentation](../building/machine-type/).
 
 The new billing model will apply to all new users and teams signing up after 1st of June, 2020 as well as to existing users that have not purchased any paid build minutes or team seats. However, all existing users will be able to opt in for the improved billing model.
 If you have any questions or concerns, do not hesitate to reach out in our [#pricing channel](https://codemagicio.slack.com/archives/CHWC14F17).
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 00cc8ba..c1c181e 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -49,7 +49,7 @@ You can use the remote session to reproduce all commands run during the build, r
 
 * To access the clone of your project on the VM, run `cd $FCI_BUILD_DIR` in the terminal. 
 
-* The command `printenv` prints all the environment variables exported during the build. You can see some of Codemagic read-only environment variables explained [here](https://docs.codemagic.io/building/environment-variables/#codemagic-read-only-environment-variables).
+* The command `printenv` prints all the environment variables exported during the build. You can see some of Codemagic read-only environment variables explained [here](../building/environment-variables/#codemagic-read-only-environment-variables).
 
 * The `sudo` command is available so you can execute all commands with root privileges.
 
diff --git a/content/yaml/building-a-native-android-app.md b/content/yaml/building-a-native-android-app.md
index 527b8a0..dc843f6 100644
--- a/content/yaml/building-a-native-android-app.md
+++ b/content/yaml/building-a-native-android-app.md
@@ -14,5 +14,5 @@ The necessary command for building native Android application goes under `script
 To test, code sign and publish an Android app:
 
 * The code for testing an Android app also goes under `scripts`. A few examples of testing can be found [here](../yaml/testing).
-* All Android applications need to be signed before release. For Gradle code signing configuration refer to the [documentation](https://docs.codemagic.io/code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing). More information about code signing with YAML in general is [here](../yaml/distribution).
+* All Android applications need to be signed before release. For Gradle code signing configuration refer to the [documentation](../code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing). More information about code signing with YAML in general is [here](../yaml/distribution).
 * All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
\ No newline at end of file
diff --git a/content/yaml/yaml.md b/content/yaml/yaml.md
index 18faf78..4508317 100644
--- a/content/yaml/yaml.md
+++ b/content/yaml/yaml.md
@@ -162,7 +162,7 @@ See the default software versions on Codemagic build machines [here](../releases
 
 ### Cache
 
-`cache:` defines the paths to be cached and stored on Codemagic. See the recommended paths for [dependency caching](https://docs.codemagic.io/building/dependency-caching/).
+`cache:` defines the paths to be cached and stored on Codemagic. See the recommended paths for [dependency caching](../building/dependency-caching/).
 
     cache:
       cache_paths:

commit 1e40eeef43dd3dd4ce29aed00418a56d48cc96fa
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon Aug 17 20:18:27 2020 +0300

    base image update (#156)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index dda364f..508f434 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -24,7 +24,7 @@ weight: 2
 - docker `19.03.8`
 - fastlane `2.153.1`
 - firebase `7.6.2`
-- flutter `1.17.5 ($HOME/programs/flutter)`
+- flutter `1.20.2 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.27.0`
 - gradle `6.1.1`

commit b4cfd44263765e5ea418864bf5255cc76c6f9346
Author: madispp <madis@nevercode.io>
Date:   Thu Aug 13 00:23:04 2020 +0300

    add a note about enterprise IPA (#136)

diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 1fc3576..31a9a1f 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -78,6 +78,7 @@ As the next step, you can [configure publishing to App Store Connect](../publish
 ## Manual code signing
 
 With the manual code signing method, you are required to upload the signing certificate and the matching provisioning profile(s) to Codemagic in order to receive signed builds.
+This is required when distributing your app via Apple Developer Enterprise Program or Apple Business Manager. 
 
 >See how to [export certificates and provisioning profiles](#exporting-certificates-and-provisioning-profiles).
 

commit ada76f9a6bfc9b13b005567c5b9c298db0601de6
Author: Vladyslav Bondarenko <bva345@gmail.com>
Date:   Wed Aug 12 17:18:13 2020 +0300

    change font sizes according to the font sizes in blog (#150)

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 12e2e76..ca1dd8f 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -214,7 +214,7 @@ body {
           }
 
             h1 {
-                font-size: 50px;
+                font-size: 48px;
                 position: relative;
                 padding-bottom: 40px;
                 margin-top: 0;
@@ -230,11 +230,11 @@ body {
                     left: 0;
                 }
             }
-            h2 { font-size: 33px; }
-            h3 { font-size: 29px; }
-            h4 { font-size: 26px; }
-            h5 { font-size: 23px; }
-            h6 { font-size: 20px; }
+            h2 { font-size: 36px; }
+            h3 { font-size: 26px; }
+            h4 { font-size: 22px; }
+            h5 { font-size: 20px; }
+            h6 { font-size: 18px; }
 
 
             p, li { line-height: 28px; }
@@ -415,24 +415,18 @@ body {
         @media (max-width: 760px) {
             margin: 80px 0 0;
             main {
-                h1 { font-size: 40px; }
-                h2 { font-size: 33px; }
-                h3 { font-size: 29px; }
-                h4 { font-size: 26px; }
-                h5 { font-size: 23px; }
-                h6 { font-size: 20px; }
+                h1 { font-size: 30px; }
+                h2 { font-size: 24px; }
+                h3 { font-size: 21px; }
+                h4 { font-size: 18px; }
+                h5 { font-size: 18px; }
+                h6 { font-size: 18px; }
             }
         }
         @media (max-width: 480px) {
             main {
                 font-size: 14px;
                 padding: 32px 40px 50px 40px;
-                h1 { font-size: 30px; }
-                h2 { font-size: 26px; }
-                h3 { font-size: 24px; }
-                h4 { font-size: 22px; }
-                h5 { font-size: 20px; }
-                h6 { font-size: 18px; }
                 p, li { line-height: 22px; }
                 p, ul, ol, pre, hr, figure { margin: 20px auto; }
                 figure {

commit 8b8221cdd97087522f391a37f390677780b46adc
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Wed Aug 12 15:50:29 2020 +0300

    Editing

diff --git a/content/yaml/testing.md b/content/yaml/testing.md
index e1bb073..5decc7d 100644
--- a/content/yaml/testing.md
+++ b/content/yaml/testing.md
@@ -48,16 +48,16 @@ scripts:
     test_report: test-results/flutter.json
 ```
 
-## Flutter integration test
+## Flutter integration tests
 
-`flutter_driver` dependency allows you to run integration tests on a real device or emulator. Thus, Android application tests can be run on a Android emulator, iOS application tests can be run on an iOS simulator, and web application tests can be run on a web browser driver.
+The `flutter_driver` dependency allows you to run integration tests on a real device or emulator. Android application tests can be run on an Android emulator, iOS application tests can be run on an iOS simulator, and web application tests can be run on a web browser driver.
 
-### Running an iOS/Android application tests on a mobile simulator/emulator
+### Running iOS/Android application tests on a mobile simulator/emulator
 
         flutter emulators --launch apple_ios_simulator             # for android use: flutter emulators --launch emulator
         flutter drive --target=test_driver/my_drive_target.dart
 
-### Running a web application tests on a web browser driver
+### Running web application tests on a web browser driver
 
 Chrome
 
@@ -83,5 +83,5 @@ Safari
 
 
 {{<notebox>}}
-Make sure you use Flutter channel **Beta** or higher since Flutter for web is not yet available on **Stable**.
+Make sure to use Flutter channel **Beta** or higher since Flutter for web is not yet available on **Stable**.
 {{</notebox>}}
\ No newline at end of file

commit 88ae87138489df3112f40f8739205893dbd95795
Author: JuhanJohn <42038199+johnNever@users.noreply.github.com>
Date:   Wed Aug 12 15:20:38 2020 +0300

    Update common-issues.md (#138)
    
    * Update common-issues.md
    
    **Log output**:   format
    
    * Update common-issues.md
    
    * Update common-issues.md

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 9ed3ed4..683d47b 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -102,8 +102,11 @@ Associated Domains.
 
 **Log output**: 
 
-❌ error: Provisioning profile "CodeMagic" doesn't support the Associated Domains capability. (in target 'Runner' from project 'Runner') 
-❌ error: Provisioning profile "CodeMagic" doesn't include the com.apple.developer.associated-domains entitlement. (in target 'Runner' from project 'Runner')
+```
+❌ error: Provisioning profile "CodeMagic" doesn't support the Associated Domains capability. (in target 'Runner' from project 'Runner').
+ 
+❌ error: Provisioning profile "CodeMagic" doesn't include the com.apple.developer.associated-domains entitlement. (in target 'Runner' from project 'Runner').
+```
 
 **Solution**: 
 

commit 5a2f1804d8a28b1db8f5ec86532966bdf3f1cfd7
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Wed Aug 12 15:18:44 2020 +0300

    Editing of email & Slack publishing doc (#149)
    
    * Editing
    
    * editing
    
    * editing
    
    * change format of links
    
    * editing
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>

diff --git a/content/publishing/email-and-slack-notifications.md b/content/publishing/email-and-slack-notifications.md
index a7e31d9..43fce84 100644
--- a/content/publishing/email-and-slack-notifications.md
+++ b/content/publishing/email-and-slack-notifications.md
@@ -10,33 +10,40 @@ Email publishing settings can be found in **App settings > Publish > Email**.
 
 Email publishing is the only publishing option that is enabled by default. Codemagic uses the email specified as the default one in the service you used to log in (Github, Bitbucket, Gitlab). You can add multiple email addresses.
 
-If a build has finished successfully, release notes (if passed) and generated artifacts are published to the provided email.
+If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the provided email.
 
-If a build failed, you will be emailed a link for the build logs. Check **Publish artifacts even if tests fail** to publish artifacts even when one or more tests fail. If that option is unchecked, generated artifacts (if there are any) will be attached only to successful builds.
+If the build fails, you will be sent a link to the build logs. Check the **Publish artifacts even if tests fail** option in the UI to publish artifacts even when one or more tests fail. If that option is unchecked, generated artifacts (if there are any) will be attached only to successful builds.
+
+{{<notebox>}}
+See how to set up email publishing with YAML [here](../yaml/distribution/#publishing). Note that skipping publishing artifacts when tests fail is not available for YAML builds.
+{{</notebox>}}
 
 ### MS Teams
 
-To be able to receive emails from Codemagic to your MS Teams account, please go to your MS Teams account and make sure to choose **Anyone can send emails to this address** in **Get email address > advanced settings**.
+To be able to receive emails from Codemagic to your MS Teams account, please go to your MS Teams account and select **Anyone can send emails to this address** in **Get email address > Advanced settings**.
 
 Use only the part in angle brackets from the whole address line (e.g. `My awesome company <543l5kj43.some.address@somedomain.teams.ms>`).
 
 ## Slack
 
-Publishing settings for Slack can be found in **App settings > Publish > Slack**.
-
-To be able to use this publishing option for your personal applications, you need to enable Slack integration at **User settings > Integration > Slack**. Once your Slack workspace is connected, you can choose a channel that is going to be used for this. 
+In order to set up publishing to Slack, you first need to connect the Slack workspace in **User settings > Integrations > Slack** for your personal apps and in **Teams > Your_team > Team integrations > Slack** for the team apps. 
 
-Similarly, if you want to use this publishing option for an application which belongs to a team, you need to enable Slack integration at **Teams > Your_team > Team integrations > Slack**.
+Once your Slack workspace is connected, you can enable Slack publishing and select a channel for publishing in **App settings > Publish > Slack** when using the UI configuration.
 
-If a build finished successfully, release notes (if passed) and generated artifacts are published in the specified channel.
+If the build finishes successfully, release notes (if passed) and the generated artifacts will be published to the specified channel.
 
-If a build has failed, a link for the build logs is sent out. Check **Publish artifacts even if tests fail** to publish artifacts even when one or more tests fail. If the option is unchecked, generated artifacts (if any) will be attached to successful builds only.
+If the build fails, a link to the build logs is published. Check **Publish artifacts even if tests fail** to publish artifacts even when one or more tests fail. If the option is unchecked, generated artifacts (if any) will be attached to successful builds only.
 
 To receive a notification when a build starts, check the checkbox **Notify when build starts**.
 
-
 {{<notebox>}}
-* `app`, `ipa`, `apk`, archive with Flutter web build directory and Linux application bundle files will be published.
-* Email and Slack publishing settings can also be set from `codemagic.yaml`. More details [here](https://docs.codemagic.io/yaml/distribution/#publishing). Keep in mind that Slack integration still needs to be enabled.
-* All the artifacts found by patterns in `.yaml` configuration will be published. More information on artifacts with `.yaml` configuration is [here](https://docs.codemagic.io/yaml/yaml/#artifacts).
+* See how to set up Slack publishing and notifications with YAML [here](../yaml/distribution/#publishing). Note that connecting the Slack integration either in user or team settings in Codemagic UI is a prerequisite for publishing to Slack.
+* Skipping publishing artifacts when tests fail is not available for YAML builds.
 {{</notebox>}}
+
+## Published artifacts
+
+When you set up email or Slack publishing, Codemagic publishes the following artifacts:
+
+* `app`, `ipa`, `apk`, the archive with Flutter web build directory, Linux application bundle files
+* All the artifacts found by patterns in `codemagic.yaml`, read more about it [here](../yaml/yaml/#artifacts).
diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
index 26c3f57..219969b 100644
--- a/content/yaml/distribution.md
+++ b/content/yaml/distribution.md
@@ -153,13 +153,13 @@ Use the following script:
 
 {{<notebox>}}
 
-Slack publishing will only work after Slack integration is enabled. For personal applications it's done from **User settings > Integration > Slack**, and for applications which belong to a team it's done from **Teams > Your_team > Team integrations > Slack**.
+A prerequisite for Slack publishing is connecting the Slack workspace in **User settings > Integrations > Slack** for personal applications and in **Teams > Your_team > Team integrations > Slack** for team apps.
 
 {{</notebox>}}
 <br>
 
 {{<notebox>}}
-GitHub releases publishing only works for GitHub repositories.
+GitHub releases is available for GitHub repositories only.
 
 Publishing happens only for successful builds triggered on tag creation and is unavailable for manual builds.
 

commit 02a9cd8d9e373994cd52099aa8964a6441a22129
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Wed Aug 12 14:00:12 2020 +0300

    added a note to email/slack about artifact types being published (#145)
    
    * added note to email/slack
    
    * comment fixes

diff --git a/content/publishing/email-and-slack-notifications.md b/content/publishing/email-and-slack-notifications.md
index cd667a6..a7e31d9 100644
--- a/content/publishing/email-and-slack-notifications.md
+++ b/content/publishing/email-and-slack-notifications.md
@@ -24,10 +24,19 @@ Use only the part in angle brackets from the whole address line (e.g. `My awesom
 
 Publishing settings for Slack can be found in **App settings > Publish > Slack**.
 
-To be able to use this publishing option, you need to enable Slack integration at **User settings > Integration > Slack**. Once your Slack workspace is connected, you can choose a channel that is going to be used for this.
+To be able to use this publishing option for your personal applications, you need to enable Slack integration at **User settings > Integration > Slack**. Once your Slack workspace is connected, you can choose a channel that is going to be used for this. 
+
+Similarly, if you want to use this publishing option for an application which belongs to a team, you need to enable Slack integration at **Teams > Your_team > Team integrations > Slack**.
 
 If a build finished successfully, release notes (if passed) and generated artifacts are published in the specified channel.
 
 If a build has failed, a link for the build logs is sent out. Check **Publish artifacts even if tests fail** to publish artifacts even when one or more tests fail. If the option is unchecked, generated artifacts (if any) will be attached to successful builds only.
 
 To receive a notification when a build starts, check the checkbox **Notify when build starts**.
+
+
+{{<notebox>}}
+* `app`, `ipa`, `apk`, archive with Flutter web build directory and Linux application bundle files will be published.
+* Email and Slack publishing settings can also be set from `codemagic.yaml`. More details [here](https://docs.codemagic.io/yaml/distribution/#publishing). Keep in mind that Slack integration still needs to be enabled.
+* All the artifacts found by patterns in `.yaml` configuration will be published. More information on artifacts with `.yaml` configuration is [here](https://docs.codemagic.io/yaml/yaml/#artifacts).
+{{</notebox>}}
diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
index a11d657..26c3f57 100644
--- a/content/yaml/distribution.md
+++ b/content/yaml/distribution.md
@@ -130,7 +130,7 @@ Use the following script:
 
 ## Publishing
 
-`publishing:` for every successful build, you can publish the generated artifacts to external services. The available integrations currently are email, Slack, Google Play and App Store Connect.
+`publishing:` for every successful build, you can publish the generated artifacts to external services. The available integrations currently are email, Slack, Google Play, App Store Connect and Github releases.
 
     publishing:
       email:
@@ -151,6 +151,13 @@ Use the following script:
           - app-release.apk
           - '*.aab'
 
+{{<notebox>}}
+
+Slack publishing will only work after Slack integration is enabled. For personal applications it's done from **User settings > Integration > Slack**, and for applications which belong to a team it's done from **Teams > Your_team > Team integrations > Slack**.
+
+{{</notebox>}}
+<br>
+
 {{<notebox>}}
 GitHub releases publishing only works for GitHub repositories.
 
diff --git a/content/yaml/yaml.md b/content/yaml/yaml.md
index c28248c..18faf78 100644
--- a/content/yaml/yaml.md
+++ b/content/yaml/yaml.md
@@ -229,7 +229,7 @@ Configure the paths and names of the artifacts you would like to use in the foll
 There are several things to keep in mind about patterns:
 * The pattern can match several files or folders. If it picks up files or folders with the same name, the top level file or folder name will be suffixed with `_{number}`.
 * If one of the patterns includes another pattern, duplicate artifacts are not created.
-* `apk`, `aab`, `ipa`, `aar`, `app`, proguard mapping (`mapping.txt`), `flutter_drive.log`, `jar`, `zip`, `xarchive` and `dSYM.zip` files will be available as separate items in the Artifacts section on the build page. The rest of the artifacts will be included in an archive with the following name pattern: `{project-name}_{version}_artifacts.zip`.
+* `apk`, `aab`, `aar`, `ipa`, `app`, proguard mapping (`mapping.txt`), `flutter_drive.log`, `jar`, `zip`, `xarchive` and `dSYM.zip` files will be available as separate items in the Artifacts section on the build page. The rest of the artifacts will be included in an archive with the following name pattern: `{project-name}_{version}_artifacts.zip`.
 
 ### Publishing
 

commit 71535f5fa5a005fd2d34d47a58dc28ebcf503d77
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Wed Aug 12 13:58:02 2020 +0300

    Improvement/web drive tests (#146)
    
    * chrome and safari web drive tests
    
    * notebox
    
    * fix comments and be more precise

diff --git a/content/yaml/testing.md b/content/yaml/testing.md
index 1d0e606..e1bb073 100644
--- a/content/yaml/testing.md
+++ b/content/yaml/testing.md
@@ -48,7 +48,40 @@ scripts:
     test_report: test-results/flutter.json
 ```
 
-## Flutter drive test
+## Flutter integration test
 
-    flutter emulators --launch apple_ios_simulator                  # for android use: flutter emulators --launch emulator
-    flutter drive --target=test_driver/my_drive_target.dart
+`flutter_driver` dependency allows you to run integration tests on a real device or emulator. Thus, Android application tests can be run on a Android emulator, iOS application tests can be run on an iOS simulator, and web application tests can be run on a web browser driver.
+
+### Running an iOS/Android application tests on a mobile simulator/emulator
+
+        flutter emulators --launch apple_ios_simulator             # for android use: flutter emulators --launch emulator
+        flutter drive --target=test_driver/my_drive_target.dart
+
+### Running a web application tests on a web browser driver
+
+Chrome
+
+      scripts:
+        - echo 'previous step'
+        - name: 'Flutter drive web test'
+          script: |
+            chromedriver --port=4444 &
+            flutter config --enable-web
+            flutter drive --target=test_driver/button_pressing.dart -d chrome --browser-name chrome --release
+
+
+Safari
+
+      scripts:
+        - echo 'previous step'
+        - name: 'Flutter drive web test'
+          script: |
+            sudo safaridriver --enable
+            safaridriver --port 4444 &
+            flutter config --enable-web
+            flutter drive --target=test_driver/button_pressing.dart --browser-name safari --release
+
+
+{{<notebox>}}
+Make sure you use Flutter channel **Beta** or higher since Flutter for web is not yet available on **Stable**.
+{{</notebox>}}
\ No newline at end of file

commit db43de9e9bbf61dad17577450e71ac74074c911f
Author: madispp <madis@nevercode.io>
Date:   Wed Aug 12 13:26:42 2020 +0300

    document expanded yaml scripts (#144)

diff --git a/content/yaml/yaml.md b/content/yaml/yaml.md
index b4da4f7..c28248c 100644
--- a/content/yaml/yaml.md
+++ b/content/yaml/yaml.md
@@ -196,7 +196,18 @@ To avoid running builds on outdated commits, you can set `cancel_previous_builds
 
 ### Scripts
 
-Scripts specify what kind of application is built. This is where you can specify the commands to test, build and code sign your project. There are example scripts available for building a [Flutter application](./building-a-flutter-app/), [React Native application](./building-a-react-native-app/), [native Android application](./building-a-native-android-app/) or a [native iOS application](./building-a-native-ios-app/).
+Scripts specify what kind of application is built. This is where you can specify the commands to test, build and code sign your project.
+
+    scripts:
+      - flutter test
+      - |
+        #!/usr/bin/env python3
+
+        print('Multiline python script')
+      - name: Build for iOS
+        script: flutter build ios
+
+There are example scripts available for building a [Flutter application](./building-a-flutter-app/), [React Native application](./building-a-react-native-app/), [native Android application](./building-a-native-android-app/) or a [native iOS application](./building-a-native-ios-app/).
 
 ### Testing
 

commit 99cb2445093a140ecde7a98d18962d73dfc20dcd
Author: Madis Peebo <madis@nevercode.io>
Date:   Tue Aug 11 15:28:41 2020 +0300

    fix code spacing

diff --git a/content/rest-api/applications.md b/content/rest-api/applications.md
index d6d312e..2262515 100644
--- a/content/rest-api/applications.md
+++ b/content/rest-api/applications.md
@@ -78,7 +78,7 @@ Note that the variables will need to be re-generated when moving the app to a di
 
 ### CURL example
 
-```bash
+```
 curl 'https://api.codemagic.io/apps/your-app-id/encrypt-environment-variable' \
  -H 'X-Auth-Token: your-token' \
  -H 'Content-Type: application/json;charset=utf-8' \

commit 3f81a4ce9c9ba7951a7ebb3b71530ebc72ac338f
Author: madispp <madis@nevercode.io>
Date:   Tue Aug 11 15:14:27 2020 +0300

    Encrypt var api (#147)
    
    * add encrypted variable API endpoint documentation
    
    * wording
    
    * typo

diff --git a/content/rest-api/applications.md b/content/rest-api/applications.md
index e6bafcc..d6d312e 100644
--- a/content/rest-api/applications.md
+++ b/content/rest-api/applications.md
@@ -67,3 +67,26 @@ Adds a Git repository to the applications list.
     "appName": "my-repo"
 }
 ```
+
+## Encrypt an environment variable
+
+`POST /apps/:id/encrypt-environment-variable`
+
+Generates an encrypted string that will be decrypted inside our machines when building the app. It can be used in YAML environment variables without exposing the plain text content in version control.
+
+Note that the variables will need to be re-generated when moving the app to a different team.
+
+### CURL example
+
+```bash
+curl 'https://api.codemagic.io/apps/your-app-id/encrypt-environment-variable' \
+ -H 'X-Auth-Token: your-token' \
+ -H 'Content-Type: application/json;charset=utf-8' \
+ --data '{"value":"your value"}'
+```
+
+### Response
+
+```json
+{"encrypted":"Encrypted(Z0FBQUFBQmZMVkhwb3Q3QlJtRlVOeVFJcEJvTTRtWnZablpqMS0xN2V6dllTell1ODZSd2FUcnNqMUlZT09QY1paV0pjbVRfUlVJeDUxRWIzX1paOEZlc1dSdi1XMXlkUFVIdjNIZ2VqcE5Ja0tpMjlPWjhlSTQ9)"}
+```
\ No newline at end of file

commit a4006b078cd4f1311ed2835fbbd64c851db1af5a
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Tue Aug 11 15:04:33 2020 +0300

    consistency (#130)
    
    * new teams page
    
    * more info about team owner
    
    * updated
    
    * consistency
    
    * updated
    
    * updates
    
    * Added information about team roles + editing
    
    * Add a missing comma
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>
    Co-authored-by: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>

diff --git a/config.yml b/config.yml
index bbc3bad..b8ec4c1 100644
--- a/config.yml
+++ b/config.yml
@@ -56,12 +56,15 @@ menu:
     - identifier: rest-api
       name: Codemagic API
       weight: 8
+    - identifier: teams
+      name: Teams
+      weight: 9
     - identifier: troubleshooting
       name: Troubleshooting
-      weight: 9
+      weight: 10
     - identifier: releases-and-versions
       name: Releases and versions
-      weight: 10
+      weight: 11
 
 mediaTypes:
   video/mp4:
diff --git a/content/teams/teams.md b/content/teams/teams.md
new file mode 100644
index 0000000..13a21cb
--- /dev/null
+++ b/content/teams/teams.md
@@ -0,0 +1,68 @@
+---
+title: Working in teams
+weight: 1
+---
+
+If more than one developer is contributing to a project, it is wiser to set up a team so that everyone could work on the project together. Up to two seats in a team are free of charge, but it is possible to invite more members by purchasing additional seats. Billing information is available [here](https://codemagic.io/pricing/).
+
+{{<notebox>}}Note that teams who enabled billing before June, 2020, and have not yet migrated to the new billing, still operate under the previous billing system. Changing team roles and having multiple owners is not possible in such teams.{{</notebox>}}
+
+## Team roles
+
+Codemagic teams currently have the following team roles:
+
+* **Owner**. The user creating a team will become a team owner by default and has full access to all team, app and repository settings. Other members of the team can be upgraded to owners as well. Owners can select the repositories to be shared with the team, invite new team members, change their roles or remove existing members, including other team owners, manage team integrations and billing.
+
+* **Member**. A user with this role can view team settings, configure app settings and trigger new builds. Members cannot modify any team settings, billing details or repository settings other than app name.
+
+## Creating a new team
+
+To create a new team, navigate to the [Teams](https://codemagic.io/teams) page and click **Create new team**. Choose a suitable name for your team, check the relevant boxes to add the app(s) your team is going to work on and then click **Create team**. If you don't have any apps to share at this point, you can just add them later.
+
+{{<notebox>}}Keep in mind to review the filter settings on the Applications page to see your newly created team and shared team apps.{{</notebox>}}
+
+## Team settings
+
+On the team settings page, team owners can change the name of the team, add or remove shared applications, add or remove users, change user roles, manage billing and paid features, leave the team or delete it.
+
+### Modifying the team name
+
+To change the name of the team, click on its name field and change the name as you see fit. After you are done with the changes, click on the **Save changes** button at the bottom of the page.
+
+### Managing shared applications
+
+To add or remove shared applications, click on **Shared applications** to see the list of available applications. Check the repositories you wish to share with your team and uncheck the ones you wish to remove. Once done, click **Save changes**.
+
+{{<notebox>}}Note that unless you set up a repository integration in [Team integrations](#managing-team-integrations), Codemagic will use the primary team owner's credentials for accessing the repositories.{{</notebox>}}
+
+### Managing team members
+
+You can add additional users by clicking on **Invite team member**. An email invitation will be sent to the user to join the team.
+
+Owners can upgrade members to owners by clicking on the three dots next to their name and selecting **Upgrade to owner**, or downgrade other owners by selecting **Downgrade to member**. 
+
+To remove any team members, click on the three dots next to their name and select **Remove user**.
+
+### Managing team integrations
+
+In Team integrations, it is possible to set up integrations to be used with team apps.
+
+By default, team creator's credentials are used to access repository information. It is advisable to configure access to the shared repositories on the team level in the **Team integrations** section. Set up an integration with a service where your repositories are hosted by clicking **Connect** next to its name.
+
+### Billing
+
+Billing is managed separately for each team. To use the paid features, such as additional build minutes or additional team members, team owners will have to enable billing by clicking **Enable billing** on the right sidebar. 
+
+After billing is enabled, billing information (amount due, next payment date and billing history) will be visible on the right of the page. There, you can also click **Update billing details** to change the billing information or add additional details, such as company name, billing email, address and tax ID.
+
+To disable billing, click on the **Disable billing** button in the **Danger zone**. On disabling billing, you will be immediately charged for the used paid build minutes and paid team seats.
+
+## Leaving the team
+
+A team member can leave the team at any time by clicking **Leave team** in the lower part of the page. If the only team owner wants to leave the team, they first have to upgrade another member to the owner role or delete the team completely.
+
+## Deleting the team
+
+Only the team owner can delete the team. To do so, scroll down to the **Danger zone** and click **Delete team**.
+
+{{<notebox>}}Note that teams can only be deleted if they are empty (no members or shared applications) and billing has been disabled.{{</notebox>}}

commit 583137c51e9e65e337d3a413bc2a9337b243c168
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu Aug 6 16:43:54 2020 +0300

    added multiple languages (#143)
    
    * added multiple languages
    
    * fix comments
    
    * fix comments

diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
index 00c90b6..163511a 100644
--- a/content/publishing/publish-release-notes.md
+++ b/content/publishing/publish-release-notes.md
@@ -4,14 +4,42 @@ title: Publish release notes
 weight: 4
 ---
 
-Create a custom release notes file to notify users of the changes as you publish a new version of your app.
+Create custom release notes file(s) to notify users of the changes as you publish a new version of your app.
 
 Release notes can be published to:
 
-* **Email**. The release notes will be included in the publishing email if you have publishing to email configured in App settings > Publish > Email.
-* **Slack**. The release notes will be included in the Slack notification if you have Slack publishing configured in App settings > Publish > Slack.
-* **Google Play**. The release notes will be published to Google Play Console if you have Google Play publishing configured in App settings > Publish > Google Play. The content of the release notes file is published for `en-US`.
+* **email**. The release notes will be included in the publishing email of a successful build if you have the publishing configured in **App settings > Publish > Email**.
+* **Slack**. The release notes will be included in the Slack notification of a successful build if you have the publishing configured in **App settings > Publish > Slack**.
+* **GitHub Releases**. The release notes will be published to a release if you have the publishing configured in **App settings > Publish > GitHub releases**.
+* **Google Play**. The release notes will be published to Google Play Console if you have the publishing configured in **App settings > Publish > Google Play**.
 
 ## Setting up release notes
 
-Create a `release_notes.txt` file and add it to the root of the repository. When present, Codemagic will fetch the content of that file and publish it with the build.
\ No newline at end of file
+There are three supported options to set up release notes:
+
+1. Create a `release_notes.txt` file and add it to the root of your project. When it's present, Codemagic will fetch the content of that file and publish it with the build.
+    * For email, Slack and GitHub releases, it will be published as is.
+    * For Google Play it will be published under `en-US` language localization code.
+
+{{<notebox>}}
+Language localization code is referred to a BCP-47 language tag as used in Google Play Services.
+{{</notebox>}}
+
+2. Create a `release_notes_<language_localization_code>.txt` file for every language used, e.g. `release_notes_en-GB.txt`, `release_notes_it.txt`, and add them to the root of your project.
+    * Release notes with `en-US` language code will be published to email, Slack and GitHub releases in case file with `en-US` language code exists. If not, the first found release notes will be published.
+    * For Google Play, all the release notes will be published with corresponding language codes.
+
+3. Create a `release_notes.json` file with the following content:
+
+        [
+            {
+                "language": string, # Language localization code (a BCP-47 language tag)
+                "text": string      # The text in the given language
+            },
+            ...
+        ]
+
+    Add this file to the root of your project. Notes with missing `language` or `text` fields will not be taken into account. Please refer to the [list of supported languages](https://support.google.com/googleplay/android-developer/table/4419860?hl=en).
+
+    * Release notes with `en-US` language code will be published to email, Slack and GitHub releases, given that a file with `en-US` language code exists. If not, the first release notes will be published.
+    * For Google Play, all the found release notes will be published with corresponding language codes.

commit ed8485782121979e3c42cdac35b21f1a34eb2fe7
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu Aug 6 16:43:40 2020 +0300

    github release yaml (#142)
    
    * github release yaml
    
    * fix comments

diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
index 3cc0b46..a11d657 100644
--- a/content/yaml/distribution.md
+++ b/content/yaml/distribution.md
@@ -145,6 +145,20 @@ Use the following script:
       app_store_connect:                  # For iOS app
         apple_id: name@example.com        # Email address used for login
         password: Encrypted(...)          # App-specific password
+      github_releases:
+        prerelease: false
+        artifact_patterns:
+          - app-release.apk
+          - '*.aab'
+
+{{<notebox>}}
+GitHub releases publishing only works for GitHub repositories.
+
+Publishing happens only for successful builds triggered on tag creation and is unavailable for manual builds.
+
+Note that using `*` wildcard in the beginning of the pattern requires quotation marks around the pattern, otherwise it will violate the `yaml` syntax.
+{{</notebox>}}
+
 
 ### Publishing a Flutter package to pub.dev
 

commit 042b0376d022d679fadaabca15309d27f4b4efbd
Author: Dominik Roszkowski <dominik003@gmail.com>
Date:   Thu Aug 6 10:36:07 2020 +0200

    Add information about available devices (#141)
    
    * Add information about available devices
    
    * Update running-automated-tests.md

diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index c47e4a5..f2479a1 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -34,6 +34,25 @@ There are several options for running integration tests during the build. You ca
 * Android emulator
 * [AWS Device Farm](./aws) --- enables to run tests on physical Android and iOS devices. Requires an AWS account and additional setup.
 
+Devices available on the machine are:
+
+```
+emulator            • emulator      • Google • android
+apple_ios_simulator • iOS Simulator • Apple  • ios
+```
+
+It's recommended to launch desired emulator before the tests start:
+
+```sh
+flutter emulators --launch ios
+```
+
+or
+
+```
+flutter emulators --launch emulator
+```
+
 {{<notebox>}}
 
 **Tip**: You can set up separate [workflows](../getting-started/creating-workflows/) to run tests both on iOS and Android.

commit bbe6d3a400017f713902cfa77bd1b900ff88d3bb
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Wed Aug 5 16:16:43 2020 +0300

    github release docs (#137)
    
    * github release docs
    
    * fix comments
    
    * fix comments
    
    * fix comments

diff --git a/content/publishing/github-release.md b/content/publishing/github-release.md
new file mode 100644
index 0000000..b77030c
--- /dev/null
+++ b/content/publishing/github-release.md
@@ -0,0 +1,35 @@
+---
+description: Create GitHub release and upload generated artifacts when build was triggered on tag creation.
+title: GitHub releases
+weight: 9
+---
+
+Codemagic enables you to automatically create a GitHub release and upload generated artifacts when your build is triggered on tag creation. Read more about GitHub releases here: https://help.github.com/en/github/administering-a-repository/about-releases.
+
+## Requirements
+
+1. The setting is only available for GitHub repositories. 
+2. You need to enable automatic build triggering on tag creation. This setting can be found in **App settings > Build triggers > Trigger on tag creation**. Don't forget to add a branch pattern and ensure the webhook exists.
+
+## Setting up GitHub release publishing.
+
+The setting can be found in **App settings > Publish > GitHub releases**. To enable it, check the **Create a release and publish artifacts** checkbox. To notify users that the release is not ready for production and may be unstable, mark it as **pre-release** by enabling checkbox **Mark build as pre-release**.
+
+{{<notebox>}}
+
+Publishing to GitHub happens only for successful builds triggered on tag creation and is unavailable for manual builds. 
+
+{{</notebox>}}
+
+You can control which of the generated artifacts will be uploaded to the created release by defining artifact name glob patterns. You can use a specific name, e.g. `app-release.apk` or use glob patterns. Two patterns, `*.apk` and `*.ipa`, are added by default. To add a new pattern, enter the pattern and click **Add**. Don't forget to click **Save** when you are done. Note that you can delete added patterns anytime.
+
+{{<notebox>}}
+
+Next pattern wildcards are supported:
+
+1. `*`      matches everything
+2. `?`       matches any single character
+3. `[seq]`   matches any character in seq
+3. `[!seq]`  matches any character not in seq
+
+{{</notebox>}}

commit d00d7af43bac65d8a9e70fca7494157fb3afa2d0
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Wed Aug 5 12:17:06 2020 +0300

    base image update (#140)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 9d210a3..dda364f 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -28,7 +28,7 @@ weight: 2
 - gem `3.0.3`
 - git `2.27.0`
 - gradle `6.1.1`
-- homebrew `2.4.8`
+- homebrew `2.4.9`
 - jq
 - node `12.14.0`
 - npm `6.14.7`
@@ -41,6 +41,7 @@ weight: 2
 - unzip
 - wget
 - yarn `1.22.4`
+- yq
 - zip
 
 ## Xcode 11.6 (11E708)

commit 30c5ef6c06ccb8fee9c829a2f3dd22ffe34f9f6a
Author: JuhanJohn <42038199+johnNever@users.noreply.github.com>
Date:   Tue Aug 4 17:55:13 2020 +0300

    Update build-versioning.md

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index f326cfa..9c968e7 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -18,7 +18,7 @@ Here are some examples of the build arguments you can use to increment the app v
 `--build-name=1.0.0 --build-number=$BUILD_NUMBER`
 
 
-When build number should be fetched from *pubsec.yaml* 
+## When build number should be fetched from pubsec.yaml
 
 - add a prebuild script that install [yq](https://github.com/mikefarah/yq), a lightweight and portable command-line YAML processor, add the
 following command to the pre build script so yq can be installed. 
@@ -31,3 +31,21 @@ HOMEBREW_NO_AUTO_UPDATE=1 brew install yq
 The head to App settings > Build > and in the *Build arguments* field:
 
 `--build-number=$(cat ./pubspec.yaml | yq r - version)`  
+
+
+## Set Xcode project build number via command line
+
+Calling agvtool is another way of forcing Xcode to set the 
+build version for your next build. 
+
+```
+#!/bin/sh
+set -e
+set -x
+
+cd $FCI_BUILD_DIR/ios
+agvtool new-version -all $(($BUILD_NUMBER + 1))
+```
+
+
+

commit 306ebd7aa8a0804c84e32be1b0011ac5bc4bc077
Author: JuhanJohn <42038199+johnNever@users.noreply.github.com>
Date:   Tue Aug 4 17:46:22 2020 +0300

    Update build-versioning.md
    
    Add other version strategies.

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 98c77f9..f326cfa 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -15,4 +15,19 @@ Here are some examples of the build arguments you can use to increment the app v
 
 `--build-name=2.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER + 100))`
 
-`--build-name=1.0.0 --build-number=$BUILD_NUMBER`
\ No newline at end of file
+`--build-name=1.0.0 --build-number=$BUILD_NUMBER`
+
+
+When build number should be fetched from *pubsec.yaml* 
+
+- add a prebuild script that install [yq](https://github.com/mikefarah/yq), a lightweight and portable command-line YAML processor, add the
+following command to the pre build script so yq can be installed. 
+
+```
+#!/usr/bin/env sh
+HOMEBREW_NO_AUTO_UPDATE=1 brew install yq
+```
+
+The head to App settings > Build > and in the *Build arguments* field:
+
+`--build-number=$(cat ./pubspec.yaml | yq r - version)`  

commit dae9178852746351d04491a26d622de1826184b5
Author: JuhanJohn <42038199+johnNever@users.noreply.github.com>
Date:   Tue Aug 4 13:22:13 2020 +0300

    Update common-issues.md (#134)
    
    * Update common-issues.md
    
    This happens when using outdated provisioning profiles.
    
    Resources on the same issue:
    https://discuss.bitrise.io/t/provisioning-profile-app-name-doesnt-include-the-com-apple-developer-associated-domains-entitlement/3062
    
    https://developer.apple.com/documentation/xcode/adding_capabilities_to_your_app
    
    https://stackoverflow.com/questions/58737101/adding-associated-domains-entitlement-for-a-flutter-app
    
    * Update common-issues.md
    
    * Update common-issues.md

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index ea9cb04..9ed3ed4 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -92,3 +92,24 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
 * https://github.com/flutter/flutter/issues/35988
 
 This issue is known to be fixed on the `master` channel.
+
+## iOS build error with `Provisioning profile`
+
+**Description**:
+
+This issue takes place when trying to use an outdated **Provisioning profile** that does not include 
+Associated Domains. 
+
+**Log output**: 
+
+❌ error: Provisioning profile "CodeMagic" doesn't support the Associated Domains capability. (in target 'Runner' from project 'Runner') 
+❌ error: Provisioning profile "CodeMagic" doesn't include the com.apple.developer.associated-domains entitlement. (in target 'Runner' from project 'Runner')
+
+**Solution**: 
+
+ Log in to Apple Developer Account and verify :
+  - That you have the correct bundle Id.  
+  - If missing add the Associated Domain Entitlement from there.
+  - Update Provisioning profile and use it in to configure your project.
+
+ 

commit 73789e36230cc2bb7dd02c2fe9bdef1d2af49c79
Author: Priit Lätt <priit@nevercode.io>
Date:   Tue Aug 4 11:51:32 2020 +0300

    Remove App ID referenences from App Store Connect publishing sections (#135)

diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 0718c89..2469f42 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -8,7 +8,7 @@ Codemagic enables you to automatically publish your app to App Store Connect for
 
 ## Requirements
 
-Codemagic needs your **Apple ID** and [**app-specific password**](https://support.apple.com/en-us/HT204397) as well as your **app's unique identifier (app ID)** to perform publishing to App Store Connect on your behalf. Publishing to App Store Connect requires that the app be signed with App Store **distribution certificate**.
+Codemagic needs your **Apple ID** and [**app-specific password**](https://support.apple.com/en-us/HT204397) to perform publishing to App Store Connect on your behalf. Publishing to App Store Connect requires that the app be signed with App Store **distribution certificate**.
 
 In addition, the application must be **App Store ready** for build distribution, meaning that it must have all the correct icons and icon sizes, otherwise App Store Connect will tag the binary as invalid, and you will not be able to distribute it at all.
 
@@ -16,20 +16,11 @@ It is also worth pointing out the necessity for each uploaded binary to have a *
 
 {{<notebox>}}Please note that you will need to create an **app record** in App Store Connect before you can automate publishing with Codemagic. It is recommended to upload the very first version of the app manually. {{</notebox>}}
 
-## Finding your app ID
-
-1. Log in to [App Store Connect](https://appstoreconnect.apple.com/login).
-2. Navigate to **My Apps**.
-3. Select your app and click **App Information**.
-4. You can then see your app's identifier (confusingly named **Apple ID**) in the **General Information** section.
-
-{{< figure size="medium" src="../uploads/2019/03/app store connect_app ID.png" caption="Finding your app's unique identifier" >}}
-
 ## Setting up publishing to App Store Connect on Codemagic
 
 1. Navigate to the Publish section in app settings.
 2. Click **App Store Connect**.
-3. Enter your **Apple ID** (the email address used for login), your **app-specific password** and **App ID** (your app's unique identifier in App Store Connect).
+3. Enter your **Apple ID** (the email address used for login) and your **app-specific password**.
 4. Select **Enable App Store Connect publishing** at the top of the section to enable publishing.
 5. Click **Save** to finish the setup.
 
diff --git a/content/uploads/2019/03/app store connect_app ID.png b/content/uploads/2019/03/app store connect_app ID.png
deleted file mode 100644
index b84c9c3..0000000
Binary files a/content/uploads/2019/03/app store connect_app ID.png and /dev/null differ
diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
index 00d8f63..3cc0b46 100644
--- a/content/yaml/distribution.md
+++ b/content/yaml/distribution.md
@@ -143,7 +143,6 @@ Use the following script:
         credentials: Encrypted(...)
         track: alpha
       app_store_connect:                  # For iOS app
-        app_id: '...'                     # App's unique identifier in App Store Connect
         apple_id: name@example.com        # Email address used for login
         password: Encrypted(...)          # App-specific password
 
@@ -176,14 +175,14 @@ Android
       # publish the app to Firebase App Distribution
       apkPath=$(find build -name "*.apk" | head -1)
       echo "Found apk at $apkPath"
-        
+
       if [[ -z ${apkPath} ]]
       then
         echo "No apks were found, skip publishing to Firebase App Distribution"
       else
         echo "Publishing $apkPath to Firebase App Distribution"
         firebase appdistribution:distribute --app <your_android_application_firebase_id> --groups <your_android_testers_group> $apkPath
-      fi  
+      fi
 
 iOS
 
@@ -198,7 +197,7 @@ iOS
       else
         echo "Publishing $ipaPath to Firebase App Distribution"
         firebase appdistribution:distribute --app <your_ios_application_firebase_id> --groups <your_ios_testers_group> $ipaPath
-      fi 
+      fi
 
 #### Publishing an app with Fastlane
 

commit c4d5cbae7d4af7bdf4cee08c03294952a7087b8a
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon Aug 3 13:04:33 2020 +0300

    Improvement/rescan (#133)
    
    * init commit
    
    * changed content of rescan part
    
    * update
    
    * fix comments

diff --git a/content/getting-started/setting-up.md b/content/getting-started/setting-up.md
index e5ab5bf..f4d91d1 100644
--- a/content/getting-started/setting-up.md
+++ b/content/getting-started/setting-up.md
@@ -54,12 +54,12 @@ After the build has finished successfully, you will immediately have **artifacts
 
 ## Multiple projects in one repository
 
-Codemagic supports monorepos and is able to detect multiple Flutter projects in a repository provided that each project has its `pubspec.yaml` file.
+Codemagic supports monorepos and is able to detect multiple Flutter projects in a repository or projects not in the repository root provided that each project has its `pubspec.yaml` file with `flutter` dependency.
 
-The first build is run for the project whose `pubspec.yaml` file was found first. After the first build, you can select the project for building from the **Project file path** dropdown in the Build section of app settings.
+Initially, the only project path for every application is `.` — the root of the repository. We run scan during the first build and in case of multiple projects, the first build is run for the project with highest number of platforms (presence of `android`, `ios` etc. directories). You can select the project for building from the **Project path** dropdown in the Build section of app settings. If you have changed your project location in the repository, renamed its parent directory or added new projects, try **rescanning project paths**. There is a button for it on the right from the **Project path** dropdown. It asks you, which branch you want to search for projects, and will update the project paths according to the content of the chosen branch.
 
 {{<notebox>}}
-If your projects don't show up, try **rescanning the application**. This updates the repository settings in Codemagic, which is useful when you have moved or renamed your repository, moved the Flutter project inside the repository or renamed the folder containing the project. The **Rescan application** option is available in **App settings > Repository settings**.
+**Rescan** option is not available for repositories added from custom source. Instead, project paths are scanned on each new build and are updated on change.
 {{</notebox>}}
 
 ## Next steps

commit 34dc8546764eb40d017d7460bafed303c2b1547c
Author: madispp <madis@nevercode.io>
Date:   Fri Jul 31 12:24:55 2020 +0300

    add comment about new aab selection (#131)

diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 7de3dc8..9b7a907 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -15,7 +15,7 @@ Building an Android App Bundle requires additional configuration as described in
 
 ## Enable building app bundles in Codemagic
 
-In the **Build section** of app settings, tick **Android** and then check **Build Android App Bundles** under **Build for platforms**.
+In the **Build section** of app settings, tick **Android** and then choose **Android app bundle (AAB)** for the **Android build format**.
 
 ## Prepare the app bundle for uploading to Google Play
 

commit 719b05067404a464bb2480f83cf1b1412b70bafa
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Thu Jul 30 14:57:46 2020 +0300

    base image update (#132)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 4c62c00..9d210a3 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -13,7 +13,7 @@ weight: 2
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 43GB)`
+- Disk `322GB (Free Space: 50GB)`
 
 ## Pre-installed tools
 
@@ -22,18 +22,18 @@ weight: 2
 - curl
 - dart `2.8.4`
 - docker `19.03.8`
-- fastlane `2.150.3`
+- fastlane `2.153.1`
 - firebase `7.6.2`
 - flutter `1.17.5 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.27.0`
-- gradle `5.5.1`
-- homebrew `2.4.3`
+- gradle `6.1.1`
+- homebrew `2.4.8`
 - jq
 - node `12.14.0`
-- npm `6.14.5`
+- npm `6.14.7`
 - python `2.7.17`
-- python3 `3.7.8`
+- python3 `3.8.5`
 - ruby `2.6.5p114`
 - ssh
 - sudo
@@ -43,21 +43,16 @@ weight: 2
 - yarn `1.22.4`
 - zip
 
-## Xcode 11.5 (11E608c)
+## Xcode 11.6 (11E708)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
 
-Xcode path: `/Applications/Xcode-11.5.app`
+Xcode path: `/Applications/Xcode-11.6.app`
 
-With Xcode `11.5` build version `11E608c` the following runtimes and devices are installed:
+With Xcode `11.6` build version `11E708` the following runtimes and devices are installed:
 
 ### Runtimes
 
-- iOS 10.3
-- iOS 11.0
-- iOS 11.1
-- iOS 11.2
-- iOS 11.3
 - iOS 11.4
 - iOS 12.0
 - iOS 12.1
@@ -69,6 +64,7 @@ With Xcode `11.5` build version `11E608c` the following runtimes and devices are
 - iOS 13.3
 - iOS 13.4
 - iOS 13.5
+- iOS 13.6
 - tvOS 11.3
 - tvOS 13.4
 - watchOS 6.2
@@ -131,7 +127,7 @@ With Xcode `11.5` build version `11E608c` the following runtimes and devices are
 
 ## Other Xcode versions
 
-- 11.6 (11N700h) `/Applications/Xcode-11.6.app`
+- 11.5 (11E608c) `/Applications/Xcode-11.5.app`
 - 11.4.1 (11E503a) `/Applications/Xcode-11.4.app`
 - 11.3.1 (11C505) `/Applications/Xcode-11.3.app`
 - 11.2.1 (11B500) `/Applications/Xcode-11.2.1.app`

commit 4a88226328185f8fb972d3247736b8c6b0f81e89
Author: madispp <madis@nevercode.io>
Date:   Mon Jul 27 17:43:53 2020 +0300

    document YAML test report (#128)

diff --git a/content/yaml/testing.md b/content/yaml/testing.md
index af13dd0..1d0e606 100644
--- a/content/yaml/testing.md
+++ b/content/yaml/testing.md
@@ -18,7 +18,7 @@ For non-UI tests or unit testing:
 
     ./gradlew test
 
-UI tests (also known as instrumental tests):
+UI tests (also known as instrumented tests):
 
     ./gradlew connectedAndroidTest
 
@@ -32,8 +32,22 @@ UI tests (also known as instrumental tests):
         test | xcpretty
 
 ## Flutter test
+
     flutter test
 
+**Tip:** you can display Flutter test results visually in the build view if you use expanded form of the script in codemagic.yaml.
+Just include the `test_report` field with a glob pattern matching the test result file location:
+
+```yaml
+scripts:
+  - echo 'previous step'
+  - name: Unit tests
+    script: |
+      mkdir -p test-results
+      flutter test --machine > test-results/flutter.json
+    test_report: test-results/flutter.json
+```
+
 ## Flutter drive test
 
     flutter emulators --launch apple_ios_simulator                  # for android use: flutter emulators --launch emulator

commit 69661736063d183b81b2c2e235b6ccd38f6ee0c1
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Fri Jul 24 14:09:23 2020 +0300

    adjustments to native ios part (#124)
    
    * added path from xcodebuild and xcode-project
    
    * add -project option proposition
    
    * Editing
    
    * added dsym file info
    
    * added xcodebuild log file
    
    * remove  cd where it's not needed because all the scripts starts at  anyway
    
    * comment fixes
    
    * editing
    
    * editing
    
    * minor fix
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>

diff --git a/content/publishing/publish-build-artifacts-to-amazon-s3.md b/content/publishing/publish-build-artifacts-to-amazon-s3.md
index dc5d452..a7b614b 100644
--- a/content/publishing/publish-build-artifacts-to-amazon-s3.md
+++ b/content/publishing/publish-build-artifacts-to-amazon-s3.md
@@ -14,7 +14,6 @@ You can use custom scripts to publish your app artifacts to external sources. He
         set -e
         set -x
 
-        cd $FCI_BUILD_DIR
         sudo pip3 install awscli --upgrade
         aws s3 sync <FOLDER OR FILE> s3://<BUCKET_NAME>
 
diff --git a/content/yaml/building-a-native-android-app.md b/content/yaml/building-a-native-android-app.md
index 5ac3216..527b8a0 100644
--- a/content/yaml/building-a-native-android-app.md
+++ b/content/yaml/building-a-native-android-app.md
@@ -7,7 +7,7 @@ weight: 3
 
 The necessary command for building native Android application goes under `scripts` in the [overall architecture](../yaml/yaml/#template) in the `codemagic.yaml` file. For Android (built with gradle), the script looks like this:
 
-    - cd $FCI_BUILD_DIR && ./gradlew build
+    - ./gradlew build
 
 ## Testing, code signing and publishing an Android app
 
diff --git a/content/yaml/building-a-native-ios-app.md b/content/yaml/building-a-native-ios-app.md
index 5a08ea5..7e86748 100644
--- a/content/yaml/building-a-native-ios-app.md
+++ b/content/yaml/building-a-native-ios-app.md
@@ -14,19 +14,41 @@ Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/
 
 For building an unsigned iOS app (.app), you need to run the following command in the scripts section:
 
-    - |
-      cd $FCI_BUILD_DIR
-      xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" \
-                       -scheme "MyScheme" \
-                       CODE_SIGN_INDENTITY="" \
-                       CODE_SIGNING_REQUIRED=NO \
-                       CODE_SIGNING_ALLOWED=NO
+    scripts:
+        - xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" \
+                           -scheme "MyScheme" \
+                           CODE_SIGN_INDENTITY="" \
+                           CODE_SIGNING_REQUIRED=NO \
+                           CODE_SIGNING_ALLOWED=NO
+
+If you don't have a workspace, use `-project "MyXcodeProject.xcodeproj"` instead of the `-workspace "MyXcodeWorkspace.xcworkspace"` option.
+
+Your artifact will be generated at the default Xcode path. You can access it by adding the following pattern in the `artifacts` section of `codemagic.yaml`:
+
+    $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
+
+If you have Xcode Debugging Symbols enabled, the dSYM file will be generated in the same directory as the app and can be accessed with the following artifact pattern:
+
+    $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
 
 ## Building a native iOS app archive (.ipa)
 
-For building an archived iOS app (.ipa), you need to run the following command in the scripts section:
+For building an archived iOS app (.ipa) from your Xcode project, you need to run the following command in the scripts section:
+
+    - xcode-project build-ipa --project "MyXcodeProject.xcodeproj" --scheme "MyScheme"
+
+You can also build an archive from your Xcode workspace:
+
+    - xcode-project build-ipa --workspace "MyXcodeWorkspace.xcworkspace" --scheme "MyScheme"
+
+Please check [Codemagic CLI tools documentation](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/build-ipa.md#build-ipa) to learn about more optional arguments to `xcode-project build-ipa`.
+
+By default, your artifacts will be generated into `build/ios/ipa` but you can specify a different location using the [`--ipa-directory`](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/build-ipa.md#--ipa-directoryipa_directory) option. The Xcode build log can be made available with the `/tmp/xcodebuild_logs/*.log` pattern and the dSYM file will be still available at the default Xcode path.
 
-    - xcode-project build-ipa --project "$FCI_BUILD_DIR/MyXcodeProject.xcodeproj" --scheme "MyScheme"
+    artifacts:
+        - build/ios/ipa/*.ipa
+        - /tmp/xcodebuild_logs/*.log
+        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
 
 {{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}} 
 
diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
index c062b18..00d8f63 100644
--- a/content/yaml/distribution.md
+++ b/content/yaml/distribution.md
@@ -249,7 +249,7 @@ Encrypt and add to environment variables these credentials (the file is named so
 
 Decode application credentials for Firebase authorization:
 
-    echo $GOOGLE_APP_CREDENTIALS | base64 --decode > $FCI_BUILD_DIR/you/file/path.json
+    echo $GOOGLE_APP_CREDENTIALS | base64 --decode > $FCI_BUILD_DIR/your/file/path.json
 
 Build the application:
 
@@ -263,7 +263,7 @@ Call the `gradlew` task for distribution
 
     - |
         # distribute app to firebase with gradle plugin
-        cd $FCI_BUILD_DIR/android
+        cd android
         ./gradlew appDistributionUploadRelease
 
 {{<notebox>}}
@@ -277,7 +277,7 @@ And then export the filepath on the gradlew task
     - |
         # distribute app to firebase with gradle plugin
         export GOOGLE_APPLICATION_CREDENTIALS=/tmp/google-application-credentials.json
-        cd $FCI_BUILD_DIR/android
+        cd android
         ./gradlew appDistributionUploadRelease
 
 {{</notebox>}}

commit 03dd1ac9b3d9970bb345fef0579cb89bf491d8a0
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Fri Jul 24 10:25:45 2020 +0300

    Update modifying environment variables via GUI (#118)
    
    * Update modifying environment variables via GUI
    
    using GUI to modify environment variables is only available for Flutter projects not all projects. This is confusing and not clear at all from documentation. Separated, clarified and adjusted the sections to make more sense.
    
    * Update environment-variables.md
    
    Editing
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 1fcd1cc..6d231cc 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -9,26 +9,6 @@ weight: 4
 
 Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
 
-## Adding environment variables
-
-You can add environment variables in **App settings > Environment variables**.
-
-1. Enter the name and the value of the variable.
-2. Check **Secure** if you wish to hide the value in the UI and build logs and disable editing of the variable. Such variables can be accessed only by the builder VMs during the build.
-3. Click **Add**.
-
-![](../uploads/env_vars.PNG)
-
-To access a variable, add the `$` symbol in front of its name. For example, access `API_TOKEN` by using `$API_TOKEN`. Note that it is required to use quotation marks with multi-line variables when you are referencing them in custom scripts, as shown in the example below:
-
-    > MY_VAR="var
-    > value"
-    > echo $MY_VAR
-    < var value
-    > echo "$MY_VAR"
-    < var
-    < value
-
 ## Codemagic read-only environment variables
 
 Codemagic exports several read-only environment variables during the build that you can use in scripts to customize the build process. Environment variables added by user will override Codemagic defaults. You can check which environment variables are exported by inserting the following script before or after any of the default build steps:
@@ -75,3 +55,26 @@ Here you'll find some of the read-only environment variables explained.
             "bundleId": "io.codemagic.app"
         }
     ]                                                                                   
+
+## Using environment variables
+
+To access a variable, add the `$` symbol in front of its name. For example, access `API_TOKEN` by using `$API_TOKEN`. Note that it is required to use quotation marks with multi-line variables when you are referencing them in custom scripts, as shown in the example below:
+
+    > MY_VAR="var
+    > value"
+    > echo $MY_VAR
+    < var value
+    > echo "$MY_VAR"
+    < var
+    < value
+    
+## Adding environment variables to Flutter projects via UI
+
+Flutter projects can be configured both in .yaml file as well as in the Codemagic web app graphical user interface. You can add environment variables to your Flutter projects in **App settings > Environment variables**.
+
+1. Enter the name and the value of the variable.
+2. Check **Secure** if you wish to hide the value both in the UI and in build logs and disable editing of the variable. Such variables can be accessed only by the build machines during the build.
+3. Click **Add**.
+4. Click **Save** to save the settings.
+
+![](../uploads/env_vars.PNG)

commit b4de6743d26da3a56a4936acddd3d296098a13bf
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Fri Jul 24 10:19:38 2020 +0300

    change .keystore to .jks (#123)
    
    * change .keystore to .jks
    
    * Update android-code-signing.md

diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index e4b372f..2258c0a 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -31,7 +31,7 @@ You can create a keystore for signing your release builds with the Java Keytool
 
     keytool -genkey -v -keystore keystore_name.jks -alias alias_name -keyalg RSA -keysize 2048 -validity 10000
 
-Keytool then prompts you to enter your personal details for creating the certificate, provide an alias for the key as well as provide passwords for the keystore and the key. It then generates the keystore as a file called **keystore_name.keystore** in the directory you're in. The key is valid for 10,000 days.
+Keytool then prompts you to enter your personal details for creating the certificate, as well as provide passwords for the keystore and the key. It then generates the keystore as a file called **keystore_name.jks** in the directory you're in. The key is valid for 10,000 days.
 
 You need to upload the keystore and provide the keystore password, key alias and key password to have Codemagic sign your Android app on your behalf.
 

commit 7814a25d78dd7ea2a5829e467f9d9319ab241699
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Thu Jul 23 17:08:04 2020 +0300

    specify to add Port in VNC connection (#119)
    
    * specify to add Port in VNC connection
    
    * Update accessing-builder-machine-via-ssh.md
    
    Editing
    
    * Update accessing-builder-machine-via-ssh.md
    
    Editing
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index ac0b7e6..00cc8ba 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -38,7 +38,7 @@ Establishing a VNC connection to the virtual machine is possible only for manual
 3. Use the given **Host**, **Port**, **Username** and **Password** on your VNC client to establish the connection.
 
 {{<notebox>}}
-You can download a VNC client for Windows [here](https://www.realvnc.com/en/connect/download/viewer/windows/).
+You can download VNC Viewer for Windows [here](https://www.realvnc.com/en/connect/download/viewer/windows/). Using VNC Viewer, make sure to add the values for **Host** and **Port** into the address field in this format: `<Host>:<Port>` (for example `192.159.66.83:16543`).
 {{</notebox>}}
 
 New credentials will be generated every time you run the build, so previous credentials cannot be reused.
@@ -63,4 +63,4 @@ If you have finished debugging the build, don't forget to end the session to avo
 
 ## Closer look
 
-If you want to know more about setting up remote access, there is a detailed overview on both SSH and VNC connection <a href="https://blog.codemagic.io/remote-access-to-virtual-mac-build-machine/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','remote-access-to-virtual-mac-build-machine')">on our blog.</a>
\ No newline at end of file
+If you want to know more about setting up remote access, there is a detailed overview on both SSH and VNC connection <a href="https://blog.codemagic.io/remote-access-to-virtual-mac-build-machine/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','remote-access-to-virtual-mac-build-machine')">on our blog.</a>

commit 08f571c592f6c88132a09384882e6635e7cf0e7e
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu Jul 23 16:53:29 2020 +0300

    say to change custom script dir (#126)
    
    * say to change custom script dir
    
    * Update custom-scripts.md
    
    Editing
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/building/custom-scripts.md b/content/building/custom-scripts.md
index 6e32ca9..78bea38 100644
--- a/content/building/custom-scripts.md
+++ b/content/building/custom-scripts.md
@@ -7,6 +7,10 @@ You can customize the Codemagic workflow by running custom scripts before and af
 
 In the UI, the spots for injecting custom scripts are marked by **'+'** signs between the sections. Click on **'+'** to expand the section and add your script in the appropriate section. You can run custom scripts in post-clone, pre-test, post-test, pre-build, post-build, pre-publish and post-publish phases. The scripts can be run in any language, simply define the language with a shebang line. For example, `#!/usr/bin/env python`.
 
+{{<notebox>}}
+Please note that custom scripts are always executed from the absolute path to the cloned repository which is located at `/Users/builder/clone` and can also be accessed using the environment variable `FCI_BUILD_DIR`. If your project is not in the repository root and you want to access it from a script, you will need to move to the needed directory inside the script.
+{{</notebox>}}
+
 Using `codemagic.yaml` for build configuration allows for even greater customization of builds. Read more about it in [Configuration as code (YAML)](./yaml/).
 
 {{<notebox>}}

commit 30e00efeac91cb32714b765cf0f9518d38ee0e76
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu Jul 23 10:28:38 2020 +0300

    sylph version change (#122)
    
    * sylph version change
    
    * Editing
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>

diff --git a/content/testing/aws.md b/content/testing/aws.md
index 56a3f98..ff7a1a1 100644
--- a/content/testing/aws.md
+++ b/content/testing/aws.md
@@ -38,9 +38,24 @@ After the test run, you will see an overview of how many tests failed, passed or
 
 {{< figure size="medium" src="/uploads/aws_log.png" caption="" >}}
 
+## Changing the Flutter version used for testing
 
+Sylph comes with a predefined Flutter version set [here](https://github.com/mmcc007/sylph/blob/master/lib/resources/test_spec.yaml#L32) and doesn't yet support version changing.
 
+If you want to test your application with another Flutter version, follow these steps:
 
+1. Fork the [Sylph repository](https://github.com/mmcc007/sylph) and change the Flutter version in `test_spec.yaml` to the desired one. Note that the version name is followed with the channel name.
+2. In Codemagic, add a pre-test script to activate your fork. 
 
+    If you made your changes to the forked repository on the default branch, you can simply mention the git URL to activate it:
 
+    ```
+    pub global activate -s git https://github.com/your_username/sylph.git
+    ```
 
+    If you made your changes on a specific branch e.g. `flutter_1.17.5`, you can clone the specific branch and specify the path to the cloned repository:
+
+    ```
+    git clone --branch your_branch_name https://github.com/your_username/sylph.git $HOME/sylph
+    pub global activate -s path $HOME/sylph
+    ```
\ No newline at end of file

commit 0bc8192b596ca3441a576713c03a49df3136845f
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Wed Jul 22 15:09:33 2020 +0300

    Updating Codemagic permission for adding projects (#120)
    
    * Updating Codemagic permission for adding projects
    
    Searching for "can you add Codemagic with read only access" or similar results in Codemagic requires read/write permission to build your app." let's fix this by clarifying that Codemagic OAuth app requires read/write access, but GitHub app and adding projects via SSH requires read only access.
    
    I haven't checked what the layout looks like, please review
    
    * Update setting-up.md
    
    editing
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/getting-started/setting-up.md b/content/getting-started/setting-up.md
index 634cbd5..e5ab5bf 100644
--- a/content/getting-started/setting-up.md
+++ b/content/getting-started/setting-up.md
@@ -17,7 +17,8 @@ Codemagic allows you to build, test and publish a host of different applications
 Upon login, Codemagic will automatically display the list of apps in the [connected repositories](./signup#connecting-several-repository-accounts). If you want to build an app that is not available through the account you signed up with, you can [add the app from custom source](./adding-apps-from-custom-sources).
 
 {{<notebox>}}
-* If you can't see your app listed, it may be because you don't have sufficient permissions or Codemagic has no access to your team or organization. Codemagic requires read/write permission to build your app. Contact your repository admin to review the settings.
+* If you can't see your app listed, it may be because you don't have sufficient permissions or Codemagic has no access to your team or organization. Codemagic OAuth app requires read/write permission to build your app. Contact your repository admin to review the setting for GitHub organisations, see this [link](./github-organization-accounts).
+* You can add your project with read only access via [GitHub app](./codemagic-github-app) or [SSH connection](./adding-apps-from-custom-sources).
 * If your app requires accessing private Git submodules or dependencies, you need to give Codemagic access to them in order to build successfully. See how to do that [here](../building/access-private-git-submodules). 
 
 {{</notebox>}}

commit 90db38d4cf819b8ab80b8a6fbb92956ec846759a
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Wed Jul 22 12:11:03 2020 +0300

    update android code signing documentation (#121)

diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 54f6479..e4b372f 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -9,7 +9,7 @@ Code signing is required for distributing your Android app to Google Play store.
 ## Requirements
 
 To receive a signed release .apk of your app on Codemagic, you will have to:
- 
+
 1. [Prepare your Flutter project for code signing](https://docs.codemagic.io/code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing)
 
 2. [Set up Android code signing in Codemagic UI](https://docs.codemagic.io/code-signing/android-code-signing/#setting-up-android-code-signing-on-codemagic)
@@ -29,7 +29,7 @@ As a keystore can hold multiple keys, each key in it must have an **alias**. Bot
 
 You can create a keystore for signing your release builds with the Java Keytool utility by running the following command:
 
-    keytool -genkey -v -keystore keystore_name.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000
+    keytool -genkey -v -keystore keystore_name.jks -alias alias_name -keyalg RSA -keysize 2048 -validity 10000
 
 Keytool then prompts you to enter your personal details for creating the certificate, provide an alias for the key as well as provide passwords for the keystore and the key. It then generates the keystore as a file called **keystore_name.keystore** in the directory you're in. The key is valid for 10,000 days.
 
@@ -39,7 +39,7 @@ You need to upload the keystore and provide the keystore password, key alias and
 
 There are several approaches you can use to prepare your Flutter project for code signing, we have described two of these in this section. Note that whichever approach you use, you still need to [set up Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/#setting-up-android-code-signing-on-codemagic) in the Codemagic UI.
 
-### Option 1. Configure signing in `build.gradle`
+### Option 1. Configure signing following Flutter's documentation
 
 You can follow the instructions in [Flutter's documentation](https://flutter.dev/docs/deployment/android#signing-the-app) to configure code signing in Gradle. It's vital that you use the variable names suggested in Flutter documentation as Codemagic will reference them during the build. However, make sure to not commit your `key.properties` file to the repository, Codemagic will generate and populate the `key.properties` file during the build based on the input you provide in the UI.
 
@@ -47,20 +47,7 @@ You can follow the instructions in [Flutter's documentation](https://flutter.dev
 
 Alternatively, you can use [environment variables](https://docs.codemagic.io/building/environment-variables/ 'Environment variables') to prepare your app for code signing.
 
-1.  Set the following environment variables in Codemagic (using the values from generating your keystore file):
-
-        FCI_KEYSTORE_PASSWORD=myKeystorePassword
-        FCI_KEY_ALIAS=MyReleaseKey
-        FCI_KEY_PASSWORD=myKeypassword
-
-2.  Upload the contents of your base64-encoded keystore file to Codemagic as an environment variable with the name `FCI_KEYSTORE_FILE`.
-3.  Add a custom script for decoding the keystore file stored in `FCI_KEYSTORE_FILE`. For example, click on the '+' icon before **Test** and paste the following script into the **Post-clone script** field:
-
-        #!/usr/bin/env sh
-        set -e # exit on first failed commandset
-        echo $FCI_KEYSTORE_FILE | base64 --decode > $FCI_BUILD_DIR/keystore.jks
-
-4.  Set your signing configuration in `build.gradle` as follows:
+Set your signing configuration in `build.gradle` as follows:
 
 ```
       ...
@@ -71,7 +58,7 @@ Alternatively, you can use [environment variables](https://docs.codemagic.io/bui
            signingConfigs {
                release {
                    if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
-                       storeFile file(System.getenv()["FCI_BUILD_DIR"] + "/keystore.jks")
+                       storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                        storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                        keyAlias System.getenv()["FCI_KEY_ALIAS"]
                        keyPassword System.getenv()["FCI_KEY_PASSWORD"]

commit 97c06b8121873658d4ddca5eb65622b31590a16f
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Tue Jul 21 11:08:52 2020 +0300

    Fix build-universal-apk usage (#115)
    
    * build-universal-apk should uses --bundle option. Also it can generate multiple apks. Also glob pattern can be used as path
    
    * changed APK to .apk and comment fixes

diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 45e466b..7de3dc8 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -3,7 +3,7 @@ title: Building Android App Bundles
 weight: 6
 ---
 
-You can build your app in [Android App Bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
+You can build your app in [Android App Bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app  .apk(s) will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
 
 {{<notebox>}}
 
@@ -24,6 +24,6 @@ In order to upload your Android App Bundle to Google Play, you will need to:
 1. Build the app in **Release** mode.
 2. Set up [Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/) in Codemagic to sign the app bundle.
 3. Set up [publishing to Google Play](https://docs.codemagic.io/publishing/publishing-to-google-play/) in Codemagic to upload your app bundle to one of Google Play tracks.
-4. [Enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423) to have Google sign the APKs that are generated from the app bundle during installation.
+4. [Enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423) to have Google sign the .apk(s) that are generated from the app bundle during installation.
 
-When you enroll an app into app signing by Google Play, Google will manage your app's signing key for you and use it to sign the APKs for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
+When you enroll an app into app signing by Google Play, Google will manage your app's signing key for you and use it to sign the .apk for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index ce74053..54f6479 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -8,7 +8,7 @@ Code signing is required for distributing your Android app to Google Play store.
 
 ## Requirements
 
-To receive a signed release APK of your app on Codemagic, you will have to:
+To receive a signed release .apk of your app on Codemagic, you will have to:
  
 1. [Prepare your Flutter project for code signing](https://docs.codemagic.io/code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing)
 
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index cae91c1..15b39a9 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -44,6 +44,6 @@ The very first version of the app must be added to Google Play manually. You can
    - Alpha --- publish for testing with a small group of trusted users
    - Beta --- publish for testing to a wider set of users
    - Production --- release the app to production
-5. If you want to publish the APK even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
+5. If you want to publish the .apk even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
 6. Select **Enable Google Play publishing** at the top of the section to enable publishing.
 7. Click **Save** to finish the setup.
diff --git a/content/yaml/building-a-flutter-app.md b/content/yaml/building-a-flutter-app.md
index c1af43f..9ca47e2 100644
--- a/content/yaml/building-a-flutter-app.md
+++ b/content/yaml/building-a-flutter-app.md
@@ -16,17 +16,19 @@ Set up local properties
 
     - flutter build apk --release
 
-### Building universal .apk from an existing app bundle with user-specified keys
+### Building universal .apk(s) from existing app bundle(s) with user-specified keys
 
-If your app settings in Codemagic have building Android App Bundles enabled, we will automatically include a script for generating a signed `app-universal.apk` during the YAML export. If you are creating a YAML file from a scratch, add the following script to receive that file:
+If your app settings in Codemagic have building Android App Bundles enabled, we will automatically include a script for generating a signed `app-universal.apk` during the YAML export. If you are creating a YAML file from a scratch, add the following script to receive the .apk file(s):
 
     - android-app-bundle build-universal-apk \
-        --pattern 'project_directory/build/**/outputs/**/*.aab' \
+        --bundle 'project_directory/build/**/outputs/**/*.aab' \
         --ks /tmp/keystore.keystore \
         --ks-pass $CM_KEYSTORE_PASSWORD \
         --ks-key-alias $CM_KEY_ALIAS_USERNAME \
         --key-pass $CM_KEY_ALIAS_PASSWORD
 
+Please make sure to wrap the `--bundle` pattern in single quotes. If `--bundle` option is not specified, default glob pattern `**/*.aab` will be used.
+
 More information about Android code signing can be found [here](../yaml/distribution/#setting-up-code-signing-for-android).
 
 {{<notebox>}}
diff --git a/content/yaml/runninglocally.md b/content/yaml/runninglocally.md
index 4052275..d7b8080 100644
--- a/content/yaml/runninglocally.md
+++ b/content/yaml/runninglocally.md
@@ -29,22 +29,30 @@ To initialize keychain at system default keychain path with empty keychain passw
     keychain initialize
     keychain add-certificates --certificate /path/to/certificate.p12 --certificate-password CERTIFICATE_PASSWORD
 
+Note that `--certificate` option can be either a path literal, or a glob pattern to match certificates.
+
 To use the provisioning profile from `/path/to/profile.mobileprovision` in your Xcode project `/path/to/MyProject.xcodeproj` and generate an .ipa archive using `MyScheme` scheme, use [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) with the following command:
 
     xcode-project use-profiles --project /path/to/MyProject.xcodeproj --profile /path/to/profile.mobileprovision
     xcode-project build-ipa --project /path/to/MyProject.xcodeproj --scheme MyScheme
 
-## Generate a universal APK with user specified keys from app bundle
+Note that `--project` option can be either a path literal, or a glob pattern to match projects in working directory (Default is `**/*.xcodeproj`).
+
+`--profile` option can be a glob pattern as well (Default is `$HOME/Library/MobileDevice/Provisioning Profiles/*.mobileprovision`).
 
-To build an APK from the app bundle `/path/to/my-app.aab` with keystore `/path/to/keystore.keystore`, `KEYSTORE_PASSWORD`, `KEY_ALIAS` and `KEY_PASSWORD`, use the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) tool:
+## Generate universal .apk(s) with user specified keys from app bundle
+
+To build .apk files(s) from the app bundle(s) found with `/path/to/**/*.aab` glob pattern with keystore `/path/to/keystore.keystore`, `KEYSTORE_PASSWORD`, `KEY_ALIAS` and `KEY_PASSWORD`, use the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) tool:
 
     android-app-bundle build-universal-apk \
-        --bundle 'path/to/my-app.aab' \
+        --bundle '/path/to/**/*.aab' \
         --ks /path/to/keystore.keystore \
         --ks-pass KEYSTORE_PASSWORD \
         --ks-key-alias KEY_ALIAS \
         --key-pass KEY_PASSWORD
 
+If `--bundle` option is not specified, default glob pattern `**/*.aab` will be used. Please make sure to wrap the pattern in single quotes.
+
 {{<notebox>}}
 Alternatively to entering `ISSUER_ID`, `KEY_IDENTIFIER`, `PRIVATE_KEY`, `CERTIFICATE_PASSWORD`,  `KEYSTORE_PASSWORD`, `KEY_PASSWORD` in plaintext, it may also be specified using an `@env:` prefix followed by an environment variable name, or `@file:` prefix followed by a path to the file containing the value. Example: `@env:<variable>` uses the value in the environment variable named `<variable>`, and `@file:<file_path>` uses the value from file at `<file_path>`.
 

commit c87cd3c29555a776ff498db5ae42abc0b5dfc64a
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Tue Jul 21 09:46:21 2020 +0300

    added a link to react native (#117)
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 8b9e100..f90b9f5 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -12,8 +12,7 @@ Codemagic launches a new project setup guide that makes building and configuring
 
 To give all mobile projects an even smoother and faster lift-off, we have updated our first build flow. Instead of having a default workflow without any configuration, you can just click **Set up build** when starting your first build, select the project type that you’re about to build, update it based on your needs and start building!
 
-If you are not building a Flutter project, you still need to use the `codemagic.yaml` file to configure the workflow, but with a click of a button, you will get a template that suits your selected project type that you can modify according to your needs. You can read step-by-step examples of using the `codemagic.yaml` file to configure [native Android](https://blog.codemagic.io/native-android-getting-started-guide-with-codemagic-cicd/) and [native iOS](https://blog.codemagic.io/native-ios-getting-started-guide-with-codemagic/) apps on our blog.
-<!--- I'll add React Native link as well when the article arrives in the second half of July. --> 
+If you are not building a Flutter project, you still need to use the `codemagic.yaml` file to configure the workflow, but with a click of a button, you will get a template that suits your selected project type that you can modify according to your needs. You can read step-by-step examples of using the `codemagic.yaml` file to configure [native Android](https://blog.codemagic.io/native-android-getting-started-guide-with-codemagic-cicd/), [native iOS](https://blog.codemagic.io/native-ios-getting-started-guide-with-codemagic/) and [React Native](https://blog.codemagic.io/react-native-getting-started-guide-with-codemagic/) apps on our blog.
 
 ### Cancel pending builds
 

commit 2565d0a1f181a4c60f8eb7c479ae57f835e01037
Author: VeArnold <56921374+VeArnold@users.noreply.github.com>
Date:   Tue Jul 21 09:45:07 2020 +0300

    Update Native iOS and Native Android documentation for clarity (#114)
    
    * update sample for native ios app
    
    * change native android and native ios docs to include changing directory
    
    * format code snippet for native ios yaml
    
    Co-authored-by: Arnold Veltmann <arnold@nevercode.io>

diff --git a/content/yaml/building-a-native-android-app.md b/content/yaml/building-a-native-android-app.md
index 527b8a0..5ac3216 100644
--- a/content/yaml/building-a-native-android-app.md
+++ b/content/yaml/building-a-native-android-app.md
@@ -7,7 +7,7 @@ weight: 3
 
 The necessary command for building native Android application goes under `scripts` in the [overall architecture](../yaml/yaml/#template) in the `codemagic.yaml` file. For Android (built with gradle), the script looks like this:
 
-    - ./gradlew build
+    - cd $FCI_BUILD_DIR && ./gradlew build
 
 ## Testing, code signing and publishing an Android app
 
diff --git a/content/yaml/building-a-native-ios-app.md b/content/yaml/building-a-native-ios-app.md
index f62ad15..5a08ea5 100644
--- a/content/yaml/building-a-native-ios-app.md
+++ b/content/yaml/building-a-native-ios-app.md
@@ -14,13 +14,19 @@ Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/
 
 For building an unsigned iOS app (.app), you need to run the following command in the scripts section:
 
-    - xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" -scheme "MyScheme" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
+    - |
+      cd $FCI_BUILD_DIR
+      xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" \
+                       -scheme "MyScheme" \
+                       CODE_SIGN_INDENTITY="" \
+                       CODE_SIGNING_REQUIRED=NO \
+                       CODE_SIGNING_ALLOWED=NO
 
 ## Building a native iOS app archive (.ipa)
 
 For building an archived iOS app (.ipa), you need to run the following command in the scripts section:
 
-    - xcode-project build-ipa --project "MyXcodeProject.xcodeproj" --scheme "MyScheme"
+    - xcode-project build-ipa --project "$FCI_BUILD_DIR/MyXcodeProject.xcodeproj" --scheme "MyScheme"
 
 {{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}} 
 

commit 08ad040c884e332933ce7d91db798cb1c68306c2
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Fri Jul 17 11:58:19 2020 +0300

    key to cancel previous builds in yaml was wrong, fixed it

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 4dbdecd..8b9e100 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -19,7 +19,7 @@ If you are not building a Flutter project, you still need to use the `codemagic.
 
 We have added a much-requested feature to cancel ongoing and queued webhook-triggered builds on push and pull request commit when a new build has been triggered for the same branch. This is convenient when you’re making several commits and don’t want to wait for the previous builds to finish while you’re only interested in the build for the most recent commit. 
 
-You can enable this feature in the UI by navigating to **App settings > Build triggers > Automatic build triggering** and selecting **Cancel outdated webhook builds**, or by setting `cancel_pending_builds: true` in the [triggering section](../yaml/yaml/#triggering) of the YAML file.
+You can enable this feature in the UI by navigating to **App settings > Build triggers > Automatic build triggering** and selecting **Cancel outdated webhook builds**, or by setting `cancel_previous_builds: true` in the [triggering section](../yaml/yaml/#triggering) of the YAML file.
 
 > If you’re interested in running builds in parallel, get in touch with our sales team through the [Codemagic business page](https://codemagic.io/business/).
 
diff --git a/content/yaml/yaml.md b/content/yaml/yaml.md
index 0da54e9..b4da4f7 100644
--- a/content/yaml/yaml.md
+++ b/content/yaml/yaml.md
@@ -90,7 +90,7 @@ This is the skeleton structure of `codemagic.yaml`:
             - pattern: '*'
               include: true
               source: true
-          cancel_pending_builds: false
+          cancel_previous_builds: false
         scripts:
           - ...
         artifacts:
@@ -175,7 +175,7 @@ See the default software versions on Codemagic build machines [here](../releases
 
 A branch pattern can match the name of a particular branch, or you can use wildcard symbols to create a pattern that matches several branches. Note that for **pull request builds**, you have to specify whether the watched branch is the source or the target of the pull request.
 
-To avoid running builds on outdated commits, you can set `cancel_pending_builds` to automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch.
+To avoid running builds on outdated commits, you can set `cancel_previous_builds` to automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch.
 
     triggering:
       events:                       # List the events that trigger builds
@@ -192,7 +192,7 @@ To avoid running builds on outdated commits, you can set `cancel_pending_builds`
         - pattern: included-source
           include: true
           source: true
-      cancel_pending_builds: false  # Set to `true` to automatically cancel outdated webhook builds
+      cancel_previous_builds: false  # Set to `true` to automatically cancel outdated webhook builds
 
 ### Scripts
 

commit b0cb49cd42e0c3558f7ada373765a104cdd4cfee
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Thu Jul 16 12:59:31 2020 +0300

    just changed format->bold (#111)
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>

diff --git a/content/publishing/email-and-slack-notifications.md b/content/publishing/email-and-slack-notifications.md
index 1ec6176..cd667a6 100644
--- a/content/publishing/email-and-slack-notifications.md
+++ b/content/publishing/email-and-slack-notifications.md
@@ -16,15 +16,15 @@ If a build failed, you will be emailed a link for the build logs. Check **Publis
 
 ### MS Teams
 
-To be able to receive emails from Codemagic to your MS Teams account, please go to your MS Teams account and make sure to choose **Anyone can send emails to this address** in `Get email address` -> `advanced settings`.
+To be able to receive emails from Codemagic to your MS Teams account, please go to your MS Teams account and make sure to choose **Anyone can send emails to this address** in **Get email address > advanced settings**.
 
 Use only the part in angle brackets from the whole address line (e.g. `My awesome company <543l5kj43.some.address@somedomain.teams.ms>`).
 
 ## Slack
 
-Publishing settings for Slack can be found in `App settings > Publish > Slack`.
+Publishing settings for Slack can be found in **App settings > Publish > Slack**.
 
-To be able to use this publishing option, you need to enable Slack integration at `User settings > Integration > Slack`. Once your Slack workspace is connected, you can choose a channel that is going to be used for this.
+To be able to use this publishing option, you need to enable Slack integration at **User settings > Integration > Slack**. Once your Slack workspace is connected, you can choose a channel that is going to be used for this.
 
 If a build finished successfully, release notes (if passed) and generated artifacts are published in the specified channel.
 

commit 01497f3aaace35ac7ef2ddd8fb50e02521ab271d
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Thu Jul 16 12:58:49 2020 +0300

    release notes update (#110)
    
    * release notes update
    
    * changed link
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 11e6cc1..4dbdecd 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,6 +4,25 @@ title: Release notes
 weight: 1
 ---
 
+## July 2020
+
+### New project setup guide
+
+Codemagic launches a new project setup guide that makes building and configuring your **Flutter, native iOS, Android** and **React Native** projects even easier.
+
+To give all mobile projects an even smoother and faster lift-off, we have updated our first build flow. Instead of having a default workflow without any configuration, you can just click **Set up build** when starting your first build, select the project type that you’re about to build, update it based on your needs and start building!
+
+If you are not building a Flutter project, you still need to use the `codemagic.yaml` file to configure the workflow, but with a click of a button, you will get a template that suits your selected project type that you can modify according to your needs. You can read step-by-step examples of using the `codemagic.yaml` file to configure [native Android](https://blog.codemagic.io/native-android-getting-started-guide-with-codemagic-cicd/) and [native iOS](https://blog.codemagic.io/native-ios-getting-started-guide-with-codemagic/) apps on our blog.
+<!--- I'll add React Native link as well when the article arrives in the second half of July. --> 
+
+### Cancel pending builds
+
+We have added a much-requested feature to cancel ongoing and queued webhook-triggered builds on push and pull request commit when a new build has been triggered for the same branch. This is convenient when you’re making several commits and don’t want to wait for the previous builds to finish while you’re only interested in the build for the most recent commit. 
+
+You can enable this feature in the UI by navigating to **App settings > Build triggers > Automatic build triggering** and selecting **Cancel outdated webhook builds**, or by setting `cancel_pending_builds: true` in the [triggering section](../yaml/yaml/#triggering) of the YAML file.
+
+> If you’re interested in running builds in parallel, get in touch with our sales team through the [Codemagic business page](https://codemagic.io/business/).
+
 ## June 2020
 
 ### New billing model

commit b26d74660de9d5eeb063e841262054e1d889eab1
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Jul 16 12:58:36 2020 +0300

    improve code samples (#112)
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>

diff --git a/content/yaml/runninglocally.md b/content/yaml/runninglocally.md
index 24578d7..4052275 100644
--- a/content/yaml/runninglocally.md
+++ b/content/yaml/runninglocally.md
@@ -14,7 +14,12 @@ Requires: Python ≥ 3.7
 
 To fetch (or create and download) the provisioning profile(s) and certificate for `MY_BUNDLE_ID` app, use the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) tool.
 
-    app-store-connect fetch-signing-files --issuer-id ISSUER_ID --key-id KEY_IDENTIFIER --private-key PRIVATE_KEY --certificate-key PRIVATE_KEY MY_BUNDLE_ID
+    app-store-connect fetch-signing-files \
+        --issuer-id ISSUER_ID \
+        --key-id KEY_IDENTIFIER \
+        --private-key PRIVATE_KEY \
+        --certificate-key PRIVATE_KEY \
+        MY_BUNDLE_ID
 
  By default, your certificate will be saved to `$HOME/Library/MobileDevice/Certificates` and the provisioning profile(s) will be saved to `$HOME/Library/MobileDevice/Provisioning Profiles`.
  Refer to [Setting up code signing for iOS](/yaml/distribution/) for more information about accessing App Store Connect.
@@ -34,7 +39,7 @@ To use the provisioning profile from `/path/to/profile.mobileprovision` in your
 To build an APK from the app bundle `/path/to/my-app.aab` with keystore `/path/to/keystore.keystore`, `KEYSTORE_PASSWORD`, `KEY_ALIAS` and `KEY_PASSWORD`, use the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) tool:
 
     android-app-bundle build-universal-apk \
-        --pattern 'path/to/my-app.aab' \
+        --bundle 'path/to/my-app.aab' \
         --ks /path/to/keystore.keystore \
         --ks-pass KEYSTORE_PASSWORD \
         --ks-key-alias KEY_ALIAS \

commit 0dfaf5dc8ea9cf70086ca461f59d290d999d72f1
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Jul 14 16:24:52 2020 +0300

    Document cancelling pending builds (#109)
    
    * Document cancelling pending builds
    
    * Editing
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index d88ef48..7b66114 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -38,7 +38,9 @@ Under Automatic build triggering, you can select when to trigger builds.
 
 **Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
 
-If you don't check any of these triggering options, you will have to run builds manually for this workflow.
+**Cancel outdated webhook builds**. When checked, Codemagic will automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch. We recommend enabling this feature when you're making several commits, each of which triggers a build.
+
+If you don't enable any automatic build triggers, you can only start builds manually for this workflow.
 
 ## Webhooks
 
diff --git a/content/yaml/yaml.md b/content/yaml/yaml.md
index b318073..0da54e9 100644
--- a/content/yaml/yaml.md
+++ b/content/yaml/yaml.md
@@ -90,6 +90,7 @@ This is the skeleton structure of `codemagic.yaml`:
             - pattern: '*'
               include: true
               source: true
+          cancel_pending_builds: false
         scripts:
           - ...
         artifacts:
@@ -174,12 +175,14 @@ See the default software versions on Codemagic build machines [here](../releases
 
 A branch pattern can match the name of a particular branch, or you can use wildcard symbols to create a pattern that matches several branches. Note that for **pull request builds**, you have to specify whether the watched branch is the source or the target of the pull request.
 
+To avoid running builds on outdated commits, you can set `cancel_pending_builds` to automatically cancel all ongoing and queued builds triggered by webhooks on push or pull request commit when a more recent build has been triggered for the same branch.
+
     triggering:
-      events:                # List the events that trigger builds
+      events:                       # List the events that trigger builds
         - push
         - pull_request
         - tag
-      branch_patterns:       # Include or exclude watched branches
+      branch_patterns:              # Include or exclude watched branches
         - pattern: '*'
           include: true
           source: true
@@ -189,11 +192,11 @@ A branch pattern can match the name of a particular branch, or you can use wildc
         - pattern: included-source
           include: true
           source: true
-
+      cancel_pending_builds: false  # Set to `true` to automatically cancel outdated webhook builds
 
 ### Scripts
 
-Scripts specify what kind of application is built.  This is where you can specify the commands to test, build and code sign your project. There are example scripts available for building a [Flutter application](./building-a-flutter-app/), [React Native application](./building-a-react-native-app/), [native Android application](./building-a-native-android-app/) or a [native iOS application](./building-a-native-ios-app/).
+Scripts specify what kind of application is built. This is where you can specify the commands to test, build and code sign your project. There are example scripts available for building a [Flutter application](./building-a-flutter-app/), [React Native application](./building-a-react-native-app/), [native Android application](./building-a-native-android-app/) or a [native iOS application](./building-a-native-ios-app/).
 
 ### Testing
 

commit ac14aeba61b64870d43c5c5c58c69aa4a584da1f
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon Jul 13 16:42:41 2020 +0300

    base image update (#107)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 87d817c..4c62c00 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -13,7 +13,7 @@ weight: 2
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 48GB)`
+- Disk `322GB (Free Space: 43GB)`
 
 ## Pre-installed tools
 
@@ -22,18 +22,18 @@ weight: 2
 - curl
 - dart `2.8.4`
 - docker `19.03.8`
-- fastlane `2.149.1`
+- fastlane `2.150.3`
 - firebase `7.6.2`
-- flutter `1.17.4 ($HOME/programs/flutter)`
+- flutter `1.17.5 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.27.0`
 - gradle `5.5.1`
-- homebrew `2.3.0`
+- homebrew `2.4.3`
 - jq
 - node `12.14.0`
-- npm `6.14.4`
+- npm `6.14.5`
 - python `2.7.17`
-- python3 `3.7.7`
+- python3 `3.7.8`
 - ruby `2.6.5p114`
 - ssh
 - sudo
@@ -131,10 +131,10 @@ With Xcode `11.5` build version `11E608c` the following runtimes and devices are
 
 ## Other Xcode versions
 
+- 11.6 (11N700h) `/Applications/Xcode-11.6.app`
 - 11.4.1 (11E503a) `/Applications/Xcode-11.4.app`
 - 11.3.1 (11C505) `/Applications/Xcode-11.3.app`
 - 11.2.1 (11B500) `/Applications/Xcode-11.2.1.app`
 - 11.1 (11A1027) `/Applications/Xcode-11.1.app`
 - 11.0 (11A420a) `/Applications/Xcode-11.app`
-- 10.3 (10G8) `/Applications/Xcode-10.3.app`
 

commit 38593ffe08b8a71c88065d0d61d950752392e970
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu Jul 9 11:07:54 2020 +0300

    Notifications docs (#106)
    
    * init commit
    
    * init docs for email/slack. the purpose is just to mention MS Teams email thing
    
    * comment fixes
    
    * comment fixes
    
    * language
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>

diff --git a/content/publishing/email-and-slack-notifications.md b/content/publishing/email-and-slack-notifications.md
new file mode 100644
index 0000000..1ec6176
--- /dev/null
+++ b/content/publishing/email-and-slack-notifications.md
@@ -0,0 +1,33 @@
+---
+description: Receive artifacts of successful builds and build status updates with email or Slack.
+title: Email and Slack notifications
+weight: 8
+---
+
+## Email
+
+Email publishing settings can be found in **App settings > Publish > Email**.
+
+Email publishing is the only publishing option that is enabled by default. Codemagic uses the email specified as the default one in the service you used to log in (Github, Bitbucket, Gitlab). You can add multiple email addresses.
+
+If a build has finished successfully, release notes (if passed) and generated artifacts are published to the provided email.
+
+If a build failed, you will be emailed a link for the build logs. Check **Publish artifacts even if tests fail** to publish artifacts even when one or more tests fail. If that option is unchecked, generated artifacts (if there are any) will be attached only to successful builds.
+
+### MS Teams
+
+To be able to receive emails from Codemagic to your MS Teams account, please go to your MS Teams account and make sure to choose **Anyone can send emails to this address** in `Get email address` -> `advanced settings`.
+
+Use only the part in angle brackets from the whole address line (e.g. `My awesome company <543l5kj43.some.address@somedomain.teams.ms>`).
+
+## Slack
+
+Publishing settings for Slack can be found in `App settings > Publish > Slack`.
+
+To be able to use this publishing option, you need to enable Slack integration at `User settings > Integration > Slack`. Once your Slack workspace is connected, you can choose a channel that is going to be used for this.
+
+If a build finished successfully, release notes (if passed) and generated artifacts are published in the specified channel.
+
+If a build has failed, a link for the build logs is sent out. Check **Publish artifacts even if tests fail** to publish artifacts even when one or more tests fail. If the option is unchecked, generated artifacts (if any) will be attached to successful builds only.
+
+To receive a notification when a build starts, check the checkbox **Notify when build starts**.

commit edc437bd865ad5d193c3f380ced6d90e3264fed1
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Thu Jul 9 10:40:37 2020 +0300

    removed outdated screenshot (#108)
    
    * removed outdated screenshot
    
    * changed the sentence
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>

diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 3ddbf6c..45e466b 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -15,9 +15,7 @@ Building an Android App Bundle requires additional configuration as described in
 
 ## Enable building app bundles in Codemagic
 
-In the Build section of app settings, check **Build Android App Bundles** under Build for platforms.
-
-![](../uploads/androi_app_bundles.PNG)
+In the **Build section** of app settings, tick **Android** and then check **Build Android App Bundles** under **Build for platforms**.
 
 ## Prepare the app bundle for uploading to Google Play
 

commit b7a74f9bb521f7df8ab77e46896378ee43e26e0c
Author: rimanteval <rvalancauskaite@gmail.com>
Date:   Fri Jul 3 17:15:14 2020 +0300

    remove unfinished file

diff --git a/content/publishing/publish-email.md b/content/publishing/publish-email.md
deleted file mode 100644
index 98a1694..0000000
--- a/content/publishing/publish-email.md
+++ /dev/null
@@ -1,56 +0,0 @@
----
-description: Build status notifications
-title: Build status notifications
-weight: 8
----
-
-## Slack
-
-## Email
-
-### Email MS Teams
-
-Codemagic enables you to 
-Codemagic enables you to automatically publish your app to the **internal**, **alpha**, **beta** and **production** tracks on Google Play. To do so, you must first [set up Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/ 'Android code signing') and then configure publishing to Google Play.
-
-## Requirements
-
-You will need a **service account in Google Play Console** to obtain the **JSON credentials file**. See how to do that [here.](#setting-up-a-service-account-in-google-play-console) In addition, you must build the app in **release mode** and set up **Android code signing**.
-
-Before releasing the app to Google Play, make sure that it meets the [Google Play's best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
-
-{{<notebox>}} Note that if you haven't published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](https://docs.codemagic.io/building/build-versioning/ 'Build versioning') on Codemagic. {{</notebox>}}
-
-## Setting up a service account in Google Play Console
-
-1. In Google Play Console, navigate to Settings > API access.
-2. Click on the **Create Service Account** button and follow the link to Google API Console.
-3. In Google API Console, click on the **Create Service Account** button.
-4. Fill in **Service account name** and choose Service Accounts > Service Account User from the Role dropdown. Make sure to check **Furnish a new private key** and select **JSON** as key type.
-   
-   {{< figure size="medium" src="../uploads/2019/03/create-service-account-2018-marked.png" caption="Create service account" >}}
-   
-5. Click **Create** and download the created JSON credentials file. You will need this file to set up publishing to Google Play on Codemagic.
-6. Back in Google Play Console, click **Done** to close the dialog.
-7. Find the new service account and click **Grant Access**.
-8. Select **Release manager** from the Role dropdown and click **Add user**.
-
-## Setting up publishing to Google Play on Codemagic
-
-Once you configure publishing to Google Play, Codemagic will automatically distribute the app to Google Play every time you build the workflow.
-
-{{<notebox>}}
-The very first version of the app must be added to Google Play manually. You can download the **app_release.apk** from the build artifacts.
-{{</notebox>}}
-
-1. Navigate to the Publish section in app settings.
-2. Click **Google Play** to expand the options.
-3. Upload your credentials JSON file.
-4. Select a **track** for publishing.
-   - Internal --- publish for internal testing and QA
-   - Alpha --- publish for testing with a small group of trusted users
-   - Beta --- publish for testing to a wider set of users
-   - Production --- release the app to production
-5. If you want to publish the APK even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
-6. Select **Enable Google Play publishing** at the top of the section to enable publishing.
-7. Click **Save** to finish the setup.

commit 35a598b8b3d36a255350404562d6aa4c2ab12666
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Fri Jul 3 17:12:20 2020 +0300

    all the yaml changes (#102)
    
    * yaml changes
    
    * changes in yaml
    
    * templates
    
    * added a page
    
    * templates: added ios project template, moved add-to-app templates in the end, description to package publishing, chapter with building for native
    
    * minor changes
    
    * hierarchy
    
    * split templates into small chunks. added drive test to tests. added pub.dev credentials to environment variables
    
    * added links to cli tools
    
    * fix and prettiry cli-tools links. use android-app-bundle instead of being deprecated universal-apk
    
    * using cli-tools locally
    
    * restructure a bit
    
    * added value alternatives note, git changelog example
    
    * .
    
    * .
    
    * cleaning
    
    * + Flutter test
    
    * added link
    
    * a lot of overall changes
    
    * minor changes
    
    * minor edits
    
    * added path to previous
    
    * .
    
    * minor changes
    
    * .
    
    * firebase app distribution, cli for ios and android, gradle for android
    
    * publish to firebase app distribution using fastlane
    
    * minor update on text
    
    * build flow changes
    
    * fixed headers size
    
    * step 99
    
    * minor changes
    
    * added app store connect
    
    * .
    
    * move keychain link, add xcodebuild command for unsigned ios app
    
    * comment fixes
    
    * app description changes
    
    * .
    
    * app store connect
    
    * move code signing separately and some small fixes
    
    * small comment fixes
    
    * aesthetic fixes + new build flow changes
    
    * added introduction to distribution page
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>
    Co-authored-by: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
    Co-authored-by: Rimante Valancauskaite <rimante@MacBook-Pro.lan>
    Co-authored-by: rimanteval <rvalancauskaite@gmail.com>

diff --git a/Documentation Workspace.code-workspace b/Documentation Workspace.code-workspace
new file mode 100644
index 0000000..362d7c2
--- /dev/null
+++ b/Documentation Workspace.code-workspace	
@@ -0,0 +1,7 @@
+{
+	"folders": [
+		{
+			"path": "."
+		}
+	]
+}
\ No newline at end of file
diff --git a/config.yml b/config.yml
index bcfc6ae..bbc3bad 100644
--- a/config.yml
+++ b/config.yml
@@ -38,27 +38,30 @@ menu:
     - identifier: building
       name: Build configuration
       weight: 2
+    - identifier: yaml
+      name: Codemagic with YAML
+      weight: 3
     - identifier: testing
       name: Testing
-      weight: 3
+      weight: 4
     - identifier: code-signing
       name: Code signing
-      weight: 4
+      weight: 5
     - identifier: publishing
       name: Publishing
-      weight: 5
+      weight: 6
     - identifier: custom-scripts
       name: Custom script examples
-      weight: 6
+      weight: 7
     - identifier: rest-api
       name: Codemagic API
-      weight: 7
+      weight: 8
     - identifier: troubleshooting
       name: Troubleshooting
-      weight: 8
+      weight: 9
     - identifier: releases-and-versions
       name: Releases and versions
-      weight: 9
+      weight: 10
 
 mediaTypes:
   video/mp4:
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index ca45aad..3ddbf6c 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -1,17 +1,17 @@
 ---
-title: Building Android app bundles
+title: Building Android App Bundles
 weight: 6
 ---
 
-You can build your app in [Android app bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
+You can build your app in [Android App Bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
 
 {{<notebox>}}
 
-Android app bundles are supported starting from Flutter v1.1.5.
+Android App Bundles are supported starting from Flutter v1.1.5.
 
 {{</notebox>}}
 
-Building an Android app bundle requires additional configuration as described in the sections below.
+Building an Android App Bundle requires additional configuration as described in the sections below.
 
 ## Enable building app bundles in Codemagic
 
@@ -21,7 +21,7 @@ In the Build section of app settings, check **Build Android App Bundles** under
 
 ## Prepare the app bundle for uploading to Google Play
 
-In order to upload your Android app bundle to Google Play, you will need to:
+In order to upload your Android App Bundle to Google Play, you will need to:
 
 1. Build the app in **Release** mode.
 2. Set up [Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/) in Codemagic to sign the app bundle.
diff --git a/content/building/yaml.md b/content/building/yaml.md
deleted file mode 100644
index d9f425e..0000000
--- a/content/building/yaml.md
+++ /dev/null
@@ -1,370 +0,0 @@
----
-title: Configuration as code (YAML)
-description: Customize the build and configure all your workflows in a single file.
-weight: 1
----
-
-`codemagic.yaml` is an advanced option for customizing the build and configuring all your workflows in a single file. The file can be committed to version control, and when detected in repository, will be used to configure the build instead of the settings in the UI.
-
-{{<notebox>}}
-
-**Limitations**
-
-The YAML feature currently has the following limitations:
-
-* Exporting configuration from UI is supported for Flutter-based Android, iOS and web apps.
-* The exported configuration is not identical to the settings in UI and lacks the configuration for some features, such as **Stop build if tests fail** and publishing to Codemagic Static Pages.
-
-{{</notebox>}}
-
-## Exporting current configuration as YAML
-
-You can get started with YAML easily if you have an existing project set up on Codemagic. 
-
-1. Navigate to your app settings.
-2. Click **Download configuration** on the right sidebar in the **Configuration as code** section.
-
-Note that in order to use the file for build configuration on Codemagic, it has to be committed to your repository. The name of the file must be `codemagic.yaml` and it must be located in the root directory of the repository.
-
-## Encrypting sensitive data
-
-During the export, Codemagic automatically encrypts the secret environment variables in your build configuration. 
-
-If you wish to add new environment variables to the YAML file, you can encrypt them via Codemagic UI. 
-
-1. Navigate to your app settings.
-2. Click **Encrypt environment variables** on the right sidebar in the **Configuration as code (beta)** section.
-3. Paste the value of the variable in the field or upload it as a file.
-4. Click **Encrypt**. 
-5. Copy the encrypted value and paste it to the configuration file.
-
-An example of an encrypted value:
-
-```
-Encrypted(Z0FBQUFBQmRyY1FLWXIwVEhqdWphdjRhQ0xubkdoOGJ2bThkNmh4YmdXbFB3S2wyNTN2OERoV3c0YWU0OVBERG42d3Rfc2N0blNDX3FfblZxbUc4d2pWUHJBSVppbXNXNC04U1VqcGlnajZ2VnJVMVFWc3lZZ289)
-```
-
-{{<notebox>}}Note that when the value is uploaded as a file, it is encoded to `base64`.{{</notebox>}}
-
-Writing the base64-encoded environment variable to a file can be done like this:
-
-```
-scripts:
-  - echo $MY_FILE | base64 --decode > my-file.json
-```
-
-## Building with YAML
-
-When detected in repository, `codemagic.yaml` is automatically used for configuring builds that are triggered in response to the events defined in the file. Any configuration in the UI is ignored.
-
-You can also use `codemagic.yaml` for manual builds.
-
-1. In your app settings, click **Start new build**. 
-2. In the **Specify build configuration** popup, select a **branch**.
-3. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml**.
-4. Then select the YAML **workflow**.
-5. Finally, click **Start new build** to build the workflow.
-
-## Template
-
-This is the skeleton structure of `codemagic.yaml`.
-
-    workflows:
-      my-workflow:
-        name: My workflow name
-        instance_type: mac_mini
-        max_build_duration: 60
-        environment:
-          vars:
-            PUBLIC_ENV_VAR: "value here"
-          flutter: stable
-          xcode: latest
-        cache:
-          cache_paths:
-            - ~/.pub-cache
-        triggering:
-          events:
-            - push
-          branch_patterns:
-            - pattern: '*'
-              include: true
-              source: true
-        scripts:
-          - ...
-        artifacts:
-          - build/**/outputs/**/*.aab
-        publishing:
-          email:
-            recipients:
-              - name@example.com
-
-### Workflows
-
-You can use `codemagic.yaml` to define several workflows for building a project. Each workflow describes the entire build pipeline from triggers to publishing.
-
-    workflows:
-      my-workflow:                # workflow ID
-        name: My workflow name    # workflow name displayed in UI
-        instance_type: mac_mini   # machine type to use (currently supported: `mac_mini` and `mac_pro`)
-        max_build_duration: 60    # build duration in minutes (min 1, max 120)
-        environment:
-        cache:
-        triggering:
-        branch_patterns:
-        scripts:
-        artifacts:
-        publishing:
-
-The main sections in each workflow are described below.
-
-### Environment
-
-`environment:` Contains your environment variables and enables to specify the version of Flutter, Xcode, CocoaPods, Node and nmp used for building. This is also where you can add credentials and API keys required for code signing. Make sure to [encrypt the values](#encrypting-sensitive-data) of variables that hold sensitive data. 
-
-    environment:
-      vars:             # Define your environment variables here
-        PUBLIC_ENV_VAR: "value here"
-        SECRET_ENV_VAR: Encrypted(...)
-        
-        # Android code signing
-        CM_KEYSTORE: Encrypted(...)
-        CM_KEYSTORE_PASSWORD: Encrypted(...)
-        CM_KEY_ALIAS_PASSWORD: Encrypted(...)
-        CM_KEY_ALIAS_USERNAME: Encrypted(...)
-        
-        # iOS automatic code signing
-        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
-        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
-        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
-        CERTIFICATE_PRIVATE_KEY: Encrypted(...)
-
-        # iOS manual code signing
-        CM_CERTIFICATE: Encrypted(...)
-        CM_CERTIFICATE_PASSWORD: Encrypted(...)
-        CM_PROVISIONING_PROFILE: Encrypted(...)
-
-      flutter: stable   # Define the channel name or version (e.g. v1.13.4)
-      xcode: latest     # Define latest, edge or version (e.g. 11.2)
-      cocoapods: 1.9.1  # Define default or version
-      node: 12.14.0     # Define default, latest, current, lts, carbon (or another stream), nightly or version
-      npm: 6.13.7       # Define default, latest, next, lts or version
-
-{{<notebox>}}
-See the default software versions on Codemagic build machines [here](../releases-and-versions/versions/).
-{{</notebox>}}
-
-#### Setting up code signing for iOS
-
-In order to use **automatic code signing** and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect and define the environment variables listed below. Make sure to [encrypt](#encrypting-sensitive-data) the values of the variables before adding them to the configuration file.
-
-* `APP_STORE_CONNECT_PRIVATE_KEY`
-
-  It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api).
-
-  1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
-  2. Click on the '+' sign to generate a new API key. 
-  3. Enter the name for the key and select an access level (`Admin` or `Developer`).
-  4. Click **Generate**.
-  5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key. Note that the key can only be downloaded once.
-
-* `APP_STORE_CONNECT_KEY_IDENTIFIER`
-
-  In **App Store Connect > Users and Access > Keys**, this is the **Key ID** of the key.
-
-* `APP_STORE_CONNECT_ISSUER_ID`
-
-  In **App Store Connect > Users and Access > Keys**, this is the **Issuer ID** displayed above the table of active keys.
-
-* `CERTIFICATE_PRIVATE_KEY`
-
-  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal:
-
-      ssh-keygen -t rsa -b 2048 -f ~/Desktop/codemagic_private_key -q -N ""
-
-{{<notebox>}}
-Alternatively, each property can be specified in the [scripts](#scripts) section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
-{{</notebox>}}
-
-In order to use **manual code signing**, [encrypt](https://docs.codemagic.io/building/yaml/#encrypting-sensitive-data) your signing certificate, the certificate password (if the certificate is password-protected) and the provisioning profile, and set the encrypted values to the following environment variables:
-
-    CM_CERTIFICATE: Encrypted(...)
-    CM_CERTIFICATE_PASSWORD: Encrypted(...)
-    CM_PROVISIONING_PROFILE: Encrypted(...)
-
-### Cache
-
-`cache:` Enables to define the paths to be cached and stored on Codemagic. See the recommended paths for [dependency caching](./dependency-caching).
-
-    cache:
-      cache_paths:
-        - ~/.pub-cache
-        - ...
-
-### Triggering
-
-`triggering:` Defines the events for automatic build triggering and the watched branches. If no events are defined, you can start builds only manually. 
-
-A branch pattern can match the name of a particular branch, or you can use wildcard symbols to create a pattern that matches several branches. Note that for **pull request builds**, it is required to specify whether the watched branch is the source or the target of pull request.
-
-    triggering:
-      events:                # List the events that trigger builds
-        - push
-        - pull_request
-        - tag
-      branch_patterns:       # Include or exclude watched branches
-        - pattern: '*'
-          include: true
-          source: true
-        - pattern: excluded-target
-          include: false
-          source: false
-        - pattern: included-source
-          include: true
-          source: true
-
-### Scripts
-
-`scripts:` Contains the scripts and commands to be run during the build. This is where you can specify the commands to test, build and code sign your project. 
-
-#### Building for Android
-
-Below is an example of building a Flutter app for Android.
-
-    scripts:
-      - |
-        # set up debug key.properties
-        keytool -genkeypair \
-          -alias androiddebugkey \
-          -keypass android \
-          -keystore ~/.android/debug.keystore \
-          -storepass android \
-          -dname 'CN=Android Debug,O=Android,C=US' \
-          -keyalg 'RSA' \
-          -keysize 2048 \
-          -validity 10000
-      - |
-        # set up local properties
-        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
-      - flutter packages pub get
-      - flutter test
-      - flutter build apk --release
-
-**Note on building Android app bundles**
-
-If your app settings in Codemagic have building Android app bundles enabled, we will automatically include a script for generating a signed `app-universal.apk` during the YAML export. If you're creating a YAML file from a scratch, add the script below to receive this file:
-
-    # generate signed universal apk with user specified keys
-    universal-apk generate \
-          --ks /tmp/keystore.keystore \
-          --ks-pass $CM_KEYSTORE_PASSWORD \
-          --ks-key-alias $CM_KEY_ALIAS_USERNAME \
-          --key-pass $CM_KEY_ALIAS_PASSWORD \
-          --pattern 'build/**/outputs/**/*.aab'
-  
-#### Building for iOS
-
-{{<notebox>}}
-Codemagic uses the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) utility for generating and managing certificates and provisioning profiles and performing code signing.
-{{</notebox>}}
-
-Below is an example of building a Flutter app for iOS with automatic code signing. 
-
-    scripts:
-          - flutter packages pub get
-          - flutter analyze
-          - flutter test
-          - find . -name "Podfile" -execdir pod install \;
-          - keychain initialize
-          - app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID
-                --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
-                --create  # Allow creating resources if existing are not found.
-          - keychain add-certificates
-          - flutter build ios --debug --flavor dev --no-codesign
-          - xcode-project use-profiles
-          - xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
-
-* The available provisioning profile types are described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store).
-
-Below is an example of building a Flutter app for iOS with manual code signing.
-
-    scripts:
-      - flutter packages pub get
-      - flutter analyze
-      - flutter test
-      - find . -name "Podfile" -execdir pod install \;
-      - keychain initialize
-      - |
-        # set up provisioning profiles
-        PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
-        mkdir -p "$PROFILES_HOME"
-        PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
-        echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
-        echo "Saved provisioning profile $PROFILE_PATH"
-      - |
-        # set up signing certificate
-        echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
-
-        # when using a password-protected certificate
-        keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
-        # when using a certificate that is not password-protected
-        keychain add-certificates --certificate /tmp/certificate.p12
-
-      - flutter build ios --debug --flavor dev --no-codesign
-      - xcode-project use-profiles
-      - xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
-
-#### Running custom scripts
-
-You can run scripts in languages other than shell (`sh`) by defining the languge with a shebang line or by launching a script file present in your repository.
-
-For example, you can write a build script with Dart like this:
-
-    scripts:
-        - |
-          #!/usr/local/bin/dart
-
-          void main() {
-            print('Hello, World!');
-          }
-
-### Artifacts
-
-`artifacts:` Configure the paths and names of the artifacts you would like to use in the following steps, e.g. for publishing, or have available for download on the build page. All paths are relative to the clone directory, but absolute paths are supported as well. You can also use environment variables in artifact patterns.
-
-    artifacts:
-      - build/**/outputs/**/*.apk                   # relative path for a project in root directory
-      - subfolder_name/build/**/outputs/**/*.apk    # relative path for a project in subfolder
-      - build/**/outputs/**/*.aab
-      - build/**/outputs/**/mapping.txt
-      - build/ios/ipa/*.ipa
-      - /tmp/xcodebuild_logs/*.log
-      - flutter_drive.log
-
-* The pattern can match several files or folders. If it picks up files or folders with the same name, the top level file or folder name will be suffixed with `_{number}`.
-* If one of the patterns includes another pattern, duplicate artifacts are not created.
-* `apk`, `aab`, `ipa`, `aar`, `app`, proguard mapping (`mapping.txt`), `flutter_drive.log`, `jar`, `zip`, `xarchive` and `dSYM.zip` files will be available as separate items in the Artifacts section on the build page. The rest of the artifacts will be included in an archive with the following name pattern: `{project-name}_{version}_artifacts.zip`.
-
-### Publishing
-
-`publishing:` For every successful build, you can publish the generated artifacts to external services. The available integrations currently are email, Slack, Google Play, App Store Connect and Codemagic Static Pages.
-
-    publishing:
-      email:
-        recipients:
-          - name@example.com
-      slack:
-        channel: '#channel-name'
-        notify_on_build_start: true
-      google_play:                        # For Android app
-        credentials: Encrypted(...)
-        track: alpha
-      app_store_connect:                  # For iOS app
-        app_id: '...'                     # App's unique identifier in App Store Connect
-        apple_id: name@example.com        # Email address used for login
-        password: Encrypted(...)          # App-specific password
-
-### Examples
-
-Some examples about using YAML can be found here:
-* <a href="https://blog.codemagic.io/distributing-module-yaml/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-module-yaml')">Native Android project</a> 
-* <a href="https://blog.codemagic.io/distributing-native-ios-sdk-with-flutter-module-using-codemagic/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-native-ios-sdk-with-flutter-module-using-codemagic')">Native iOS project</a>
\ No newline at end of file
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 5752122..ce74053 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -21,7 +21,7 @@ As a keystore can hold multiple keys, each key in it must have an **alias**. Bot
 {{<notebox>}}
 
 - Please note that every app must be signed using the same key throughout its lifespan.
-- If you're building Android app bundles, you additionally need to [enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423).
+- If you're building Android App Bundles, you additionally need to [enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423).
 
 {{</notebox>}}
 
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 862b237..25c0005 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -20,7 +20,7 @@ You can add apps from public or private Git-based repositories.
 3. If it's a private repository that requires username and password for authentication, check **Private repository** and enter the **Username** and **Password**. Leave this option unchecked for public repositories.
 4. Click **Add application**.
 
-Your app will be then listed on the Applications page and you can immediately start running builds.
+Your app will be then listed on the Applications page and you can then continue configuring your project by clicking on **Configure for building**.
 
 ## Connecting repository via SSH
 
@@ -34,7 +34,7 @@ Your app will be then listed on the Applications page and you can immediately st
     **Alternatively**, you can click **Generate key pair** and have Codemagic create an SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
 4. Click **Add application**.
 
-Your app will be then listed on the Applications page and you can immediately start running builds.
+Your app will be then listed on the Applications page and you can then continue configuring your project by clicking on **Configure for building**.
 
 {{<notebox>}}If you need to update the private key in Codemagic, you can upload or generate a new one in **App settings > Repository settings > Repository access settings**.{{</notebox>}}
 
diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
deleted file mode 100644
index dee0769..0000000
--- a/content/getting-started/getting-started.md
+++ /dev/null
@@ -1,51 +0,0 @@
----
-description: How to set up your projects to build, test and publish them with Codemagic
-title: Setting up projects
-weight: 2
----
-
-Codemagic allows you to build, test and publish Flutter apps (Android, iOS, web, macOS, Linux), Flutter widgets, native Android and iOS apps and native apps containing Flutter modules. Projects can be configured via GUI (Flutter projects only) or using [`codemagic.yaml`](../building/yaml) (all projects).
-
-Upon login, Codemagic will automatically display the list of apps in the [connected repositories](./signup#connecting-several-repository-accounts). If you want to build an app that is not available through the account you signed up with, you can [add the app from custom source](./adding-apps-from-custom-sources).
-
-{{< figure size="" src="../uploads/2019/07/app_dashboard.PNG" caption="Codemagic Applications page" >}}
-
-{{<notebox>}}
-* If you can't see your app listed, it may be because you don't have sufficient permissions or Codemagic has no access to your team or organization. Codemagic requires read/write permission to build your app. Contact your repository admin to review the settings.
-* If your app requires accessing private Git submodules or dependencies, you need to give Codemagic access to them in order to build successfully. See how to do that [here](../building/access-private-git-submodules). 
-
-{{</notebox>}}
-
-## Running the first build
-
-* If it's a **Flutter project**, you can start the very first build with preconfigured defaults by clicking **Start your first build** on the Applications page. This will run a debug build of your master branch for the available platforms using the latest stable version of Flutter. [Tests](../testing/running-automated-tests) are disabled by default. Alternatively, you can click the **gear icon** to configure app settings, e.g. change the Flutter or Xcode version, prior to building. 
-
-    Note that if the repository contains multiple projects, you can select the right project after the first build, read more about it [below](#multiple-projects-in-one-repository).
-
-* If it's a **non-Flutter project**, e.g. a native Android or iOS app or an app containing Flutter modules, you must first create a [codemagic.yaml](../building/yaml) file for build configuration and commit it to your repository. Then, click the **gear icon** > **Start your first build** in app settings to select a branch and YAML configuration to build.
-
-As the build starts, you can monitor the build progress right in your browser and expand each build step for more details.
-
-After the build has finished successfully, you will immediately have **artifacts** available for download which you will also receive on the email that was configured for the app repository.
-
-## Multiple projects in one repository
-
-Codemagic supports monorepos and is able to detect multiple Flutter projects in a repository provided that each project has its `pubspec.yaml` file.
-
-The first build is run for the project whose `pubspec.yaml` file was found first. After the first build, you can select the project for building from the **Project file path** dropdown in the Build section of app settings.
-
-{{< figure size="medium" src="../uploads/flutter-multiproject.png" caption="Select which project to build" >}}
-
-## Next steps
-
-You can then continue to customize how you want Codemagic to build, test and publish your project using either the GUI or `codemagic.yaml`. Note that you can also add custom build steps in the GUI by expanding sections before or after the default build steps visible in App settings.
-
-* Enable [automatic builds](../building/automatic-build-triggering)
-* Enable [automated tests](../testing/running-automated-tests)
-* Set up [workflows](./creating-workflows) for your project
-* Set up code signing for [Android](../code-signing/android-code-signing) and [iOS](../code-signing/ios-code-signing)
-* Set up [publishing to Google Play](../publishing/publishing-to-google-play)
-* Set up [publishing to App Store Connect](../publishing/publishing-to-app-store)
-* [Increment build version](../building/build-versioning)
-* Browse the list of [Codemagic read-only environment variables](../building/environment-variables)
-* See the list of [preinstalled software and versions](../releases-and-versions/versions)
diff --git a/content/getting-started/setting-up.md b/content/getting-started/setting-up.md
new file mode 100644
index 0000000..634cbd5
--- /dev/null
+++ b/content/getting-started/setting-up.md
@@ -0,0 +1,78 @@
+---
+description: How to set up your projects to build, test and publish them with Codemagic
+title: Setting up projects
+weight: 2
+aliases:
+ - /getting-started/getting-started
+---
+
+Codemagic allows you to build, test and publish a host of different applications that can be configured via GUI (Flutter projects only) or using [`codemagic.yaml`](../building/yaml) (all projects). The list of available projects is as follows: 
+* Flutter apps (Android, iOS, web, macOS, Linux)
+* Flutter widgets
+* Flutter packages/plugins
+* native Android and iOS apps
+* native apps containing Flutter modules
+* React Native apps
+
+Upon login, Codemagic will automatically display the list of apps in the [connected repositories](./signup#connecting-several-repository-accounts). If you want to build an app that is not available through the account you signed up with, you can [add the app from custom source](./adding-apps-from-custom-sources).
+
+{{<notebox>}}
+* If you can't see your app listed, it may be because you don't have sufficient permissions or Codemagic has no access to your team or organization. Codemagic requires read/write permission to build your app. Contact your repository admin to review the settings.
+* If your app requires accessing private Git submodules or dependencies, you need to give Codemagic access to them in order to build successfully. See how to do that [here](../building/access-private-git-submodules). 
+
+{{</notebox>}}
+
+## Running the first build
+
+### Flutter project
+
+If it's a **Flutter project**, you can configure your project by clicking **Set up build**. Then you have to select your app type (**Flutter app**) and on the application settings page you can click **Start new build**. This will run a debug build of your master branch for the available platforms using the latest stable version of Flutter. [Tests](../testing/running-automated-tests) are disabled by default. If you want to change the preconfigured settings, e.g. the Flutter or Xcode version, you can configure everything prior to building. 
+
+> Note that if the repository contains multiple projects, you can select the right project after the first build, read more about it [below](#multiple-projects-in-one-repository).
+
+### Non-Flutter project
+
+If it's a **non-Flutter project**, e.g. a native Android or iOS app or an app containing Flutter modules, follow these steps: 
+1. Start your project by clicking **Set up build**. 
+2. Choose a suitable project type. 
+3. Download or copy the configuration file example.
+4. Use this file example to create a [`codemagic.yaml`](../building/yaml) file for the build configuration. Make all the necessary changes in your `codemagic.yaml` file to match your project. For example, if you have private dependencies, give Codemagic the necessary access rights and include these dependencies in the configuration file (read more about it [here](https://docs.codemagic.io/building/access-private-git-submodules/)). 
+5. When you are done, commit the configuration file to your repository. The name of the file must be `codemagic.yaml` and it must be located in the `root` directory of the repository.
+6. Choose the branch you pushed it into and click **Check for configuration file**. 
+7. When the system finds the configuration file, click **Start new build**.
+
+{{<notebox>}}
+There will also be an automatic **Getting started guide** that guides you through this process step-by-step.
+{{</notebox>}}
+
+### Monitoring the build
+
+As the build starts, you can monitor the build progress right in your browser and expand each build step for more details.
+
+After the build has finished successfully, you will immediately have **artifacts** available for download. You will also receive the artifacts on the email that was used for the app repository.
+
+## Multiple projects in one repository
+
+Codemagic supports monorepos and is able to detect multiple Flutter projects in a repository provided that each project has its `pubspec.yaml` file.
+
+The first build is run for the project whose `pubspec.yaml` file was found first. After the first build, you can select the project for building from the **Project file path** dropdown in the Build section of app settings.
+
+{{<notebox>}}
+If your projects don't show up, try **rescanning the application**. This updates the repository settings in Codemagic, which is useful when you have moved or renamed your repository, moved the Flutter project inside the repository or renamed the folder containing the project. The **Rescan application** option is available in **App settings > Repository settings**.
+{{</notebox>}}
+
+## Next steps
+
+After the initial setup, you can continue to customize how you want Codemagic to build, test and publish your project using either the GUI or `codemagic.yaml`. Note that you can also add custom build steps in the GUI by expanding sections before or after the default build steps visible in App settings. 
+
+Here is a short overview about how to:
+
+* enable [automatic builds](../building/automatic-build-triggering)
+* enable [automated tests](../testing/running-automated-tests)
+* set up [workflows](./creating-workflows) for your project
+* set up code signing for [Android](../code-signing/android-code-signing) and [iOS](../code-signing/ios-code-signing)
+* set up [publishing to Google Play](../publishing/publishing-to-google-play)
+* set up [publishing to App Store Connect](../publishing/publishing-to-app-store)
+* [increment build version](../building/build-versioning)
+
+Before getting started, you might also want to check out the [read-only environment variables](../building/environment-variables) and the list of our [preinstalled software and versions](../releases-and-versions/versions).
diff --git a/content/publishing/publish-email.md b/content/publishing/publish-email.md
new file mode 100644
index 0000000..98a1694
--- /dev/null
+++ b/content/publishing/publish-email.md
@@ -0,0 +1,56 @@
+---
+description: Build status notifications
+title: Build status notifications
+weight: 8
+---
+
+## Slack
+
+## Email
+
+### Email MS Teams
+
+Codemagic enables you to 
+Codemagic enables you to automatically publish your app to the **internal**, **alpha**, **beta** and **production** tracks on Google Play. To do so, you must first [set up Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/ 'Android code signing') and then configure publishing to Google Play.
+
+## Requirements
+
+You will need a **service account in Google Play Console** to obtain the **JSON credentials file**. See how to do that [here.](#setting-up-a-service-account-in-google-play-console) In addition, you must build the app in **release mode** and set up **Android code signing**.
+
+Before releasing the app to Google Play, make sure that it meets the [Google Play's best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
+
+{{<notebox>}} Note that if you haven't published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](https://docs.codemagic.io/building/build-versioning/ 'Build versioning') on Codemagic. {{</notebox>}}
+
+## Setting up a service account in Google Play Console
+
+1. In Google Play Console, navigate to Settings > API access.
+2. Click on the **Create Service Account** button and follow the link to Google API Console.
+3. In Google API Console, click on the **Create Service Account** button.
+4. Fill in **Service account name** and choose Service Accounts > Service Account User from the Role dropdown. Make sure to check **Furnish a new private key** and select **JSON** as key type.
+   
+   {{< figure size="medium" src="../uploads/2019/03/create-service-account-2018-marked.png" caption="Create service account" >}}
+   
+5. Click **Create** and download the created JSON credentials file. You will need this file to set up publishing to Google Play on Codemagic.
+6. Back in Google Play Console, click **Done** to close the dialog.
+7. Find the new service account and click **Grant Access**.
+8. Select **Release manager** from the Role dropdown and click **Add user**.
+
+## Setting up publishing to Google Play on Codemagic
+
+Once you configure publishing to Google Play, Codemagic will automatically distribute the app to Google Play every time you build the workflow.
+
+{{<notebox>}}
+The very first version of the app must be added to Google Play manually. You can download the **app_release.apk** from the build artifacts.
+{{</notebox>}}
+
+1. Navigate to the Publish section in app settings.
+2. Click **Google Play** to expand the options.
+3. Upload your credentials JSON file.
+4. Select a **track** for publishing.
+   - Internal --- publish for internal testing and QA
+   - Alpha --- publish for testing with a small group of trusted users
+   - Beta --- publish for testing to a wider set of users
+   - Production --- release the app to production
+5. If you want to publish the APK even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
+6. Select **Enable Google Play publishing** at the top of the section to enable publishing.
+7. Click **Save** to finish the setup.
diff --git a/content/yaml/building-a-flutter-app.md b/content/yaml/building-a-flutter-app.md
new file mode 100644
index 0000000..c1af43f
--- /dev/null
+++ b/content/yaml/building-a-flutter-app.md
@@ -0,0 +1,67 @@
+---
+title: Building a Flutter app
+description: Building a Flutter app with YAML.
+weight: 2
+---
+
+With `codemagic.yaml`, you can use Codemagic to build, test and publish Flutter apps. You can read more about how to use `codemagic.yaml` and see the structure of the file [here](../yaml/yaml). The necessary command for building an application goes under `scripts` in the [overall architecture](../yaml/yaml/#template) in the `codemagic.yaml` file. Here are some examples for the most common Flutter builds.
+
+## Android builds
+
+Set up local properties
+
+    - echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
+
+### Building .apk
+
+    - flutter build apk --release
+
+### Building universal .apk from an existing app bundle with user-specified keys
+
+If your app settings in Codemagic have building Android App Bundles enabled, we will automatically include a script for generating a signed `app-universal.apk` during the YAML export. If you are creating a YAML file from a scratch, add the following script to receive that file:
+
+    - android-app-bundle build-universal-apk \
+        --pattern 'project_directory/build/**/outputs/**/*.aab' \
+        --ks /tmp/keystore.keystore \
+        --ks-pass $CM_KEYSTORE_PASSWORD \
+        --ks-key-alias $CM_KEY_ALIAS_USERNAME \
+        --key-pass $CM_KEY_ALIAS_PASSWORD
+
+More information about Android code signing can be found [here](../yaml/distribution/#setting-up-code-signing-for-android).
+
+{{<notebox>}}
+Codemagic uses the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) utility to build universal .apk files from Android App Bundles.
+{{</notebox>}}
+
+## iOS builds
+
+### Building an unsigned application .app
+
+      - flutter build ios --debug --no-codesign
+
+### Building a signed iOS application archive .ipa
+
+{{<notebox>}}
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
+{{</notebox>}}
+
+      - xcode-project use-profiles
+      - xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
+
+{{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}}
+
+## Web builds
+
+    - |
+      flutter config --enable-web
+      flutter build web --release
+      cd build/web
+      7z a -r ../web.zip ./*
+
+## Testing, code signing and publishing a Flutter app
+
+To test, code sign and publish a Flutter app:
+
+* Testing examples for a flutter app can be found [here](../yaml/testing/#flutter-test).
+* All iOS and Android applications need to be signed before release. Different script examples are available [here](../yaml/distribution/).
+* All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with [custom scripts](../yaml/running-a-custom-script/). Script examples for different options are available [here](../yaml/distribution/#publishing-a-flutter-package-to-pubdev).
diff --git a/content/yaml/building-a-native-android-app.md b/content/yaml/building-a-native-android-app.md
new file mode 100644
index 0000000..527b8a0
--- /dev/null
+++ b/content/yaml/building-a-native-android-app.md
@@ -0,0 +1,18 @@
+---
+title: Building a native Android app
+description: Building an Android app with YAML.
+weight: 3
+---
+## Building an Android app
+
+The necessary command for building native Android application goes under `scripts` in the [overall architecture](../yaml/yaml/#template) in the `codemagic.yaml` file. For Android (built with gradle), the script looks like this:
+
+    - ./gradlew build
+
+## Testing, code signing and publishing an Android app
+
+To test, code sign and publish an Android app:
+
+* The code for testing an Android app also goes under `scripts`. A few examples of testing can be found [here](../yaml/testing).
+* All Android applications need to be signed before release. For Gradle code signing configuration refer to the [documentation](https://docs.codemagic.io/code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing). More information about code signing with YAML in general is [here](../yaml/distribution).
+* All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
\ No newline at end of file
diff --git a/content/yaml/building-a-native-ios-app.md b/content/yaml/building-a-native-ios-app.md
new file mode 100644
index 0000000..f62ad15
--- /dev/null
+++ b/content/yaml/building-a-native-ios-app.md
@@ -0,0 +1,33 @@
+---
+title: Building a native iOS app
+description: Building an iOS app with YAML.
+weight: 4
+---
+
+With `codemagic.yaml`, you can use Codemagic to build, test and publish native iOS apps. You can read more about how to use `codemagic.yaml` and see the structure of the file [here](../yaml/yaml).
+
+{{<notebox>}}
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
+{{</notebox>}}
+
+## Building an unsigned native iOS app (.app)
+
+For building an unsigned iOS app (.app), you need to run the following command in the scripts section:
+
+    - xcodebuild build -workspace "MyXcodeWorkspace.xcworkspace" -scheme "MyScheme" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
+
+## Building a native iOS app archive (.ipa)
+
+For building an archived iOS app (.ipa), you need to run the following command in the scripts section:
+
+    - xcode-project build-ipa --project "MyXcodeProject.xcodeproj" --scheme "MyScheme"
+
+{{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}} 
+
+## Testing, code signing and publishing an iOS app
+
+To test, code sign and publish an iOS app:
+
+* The code for testing an iOS app also goes under `scripts`, before build commands. An example for testing an iOS app can be found [here](../yaml/testing/#native-ios).
+* All iOS applications need to be signed before release. A full example of iOS code singing with YAML is available [here](../yaml/distribution).
+* All generated artifacts can be published to external services. The available integrations currently are email, Slack and App Store Connect. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
diff --git a/content/yaml/building-a-react-native-app.md b/content/yaml/building-a-react-native-app.md
new file mode 100644
index 0000000..7265ecc
--- /dev/null
+++ b/content/yaml/building-a-react-native-app.md
@@ -0,0 +1,37 @@
+---
+title: Building a React Native app
+description: Building a React Native app with YAML.
+weight: 5
+---
+
+React Native is a cross-platform solution that allows you to build apps for both iOS and Android faster using a single language. When working with YAML, the basics are still the same, the build scripts are added to the `scripts` section in the [overall architecture](../yaml/yaml/#template).
+
+## Android
+
+Set up local properties
+
+    - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
+
+Building an Android application:
+
+    - cd android && ./gradlew build
+
+## iOS
+
+{{<notebox>}}
+Codemagic uses the [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) to prepare iOS application code signing properties for build.
+{{</notebox>}}
+
+Script for building an iOS application:
+
+    - xcode-project build-ipa --workspace "ios/MyReact.xcworkspace" --scheme "MyReact"
+
+{{<notebox>}}Read more about different schemes in [Apple documentation](https://help.apple.com/xcode/mac/current/#/dev0bee46f46).{{</notebox>}} 
+
+## Testing, code signing and publishing
+
+To test and publish a React Native app:
+
+* The code for testing a React Native app also goes under `scripts`, before build commands. An example for testing a React Naive app can be found [here](../yaml/testing/#react-native-unit-test).
+* All iOS and Android applications need to be signed before release. Different script examples are available [here](../yaml/distribution/).
+* All generated artifacts can be published to external services. The available integrations currently are email, Slack and Google Play. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Script examples for all of them are available [here](../yaml/distribution/#publishing).
diff --git a/content/yaml/distribution.md b/content/yaml/distribution.md
new file mode 100644
index 0000000..c062b18
--- /dev/null
+++ b/content/yaml/distribution.md
@@ -0,0 +1,290 @@
+---
+title: Code signing and publishing
+description: Code signing and publishing with YAML.
+weight: 8
+---
+
+All Android and iOS applications have to be digitally signed before release to confirm their author and guarantee that the code has not been altered or corrupted since it was signed. In the case of mobile apps, this means that users can be assured that the apps they download from the App Store Connect or Google Play Store are from developers they can trust.
+
+For iOS, we use Codemagic CLI tools to perform code signing and publishing for iOS apps - these tools are open source and can also be [used locally](../yaml/runninglocally/) or in other environments. Android applications are usually signed using Gradle. This page here covers the most common scripts, but different options for code signing have also been covered extensively on our blog. For example, there is a [blog post](https://blog.codemagic.io/distributing-native-ios-sdk-with-flutter-module-using-codemagic/) about code signing iOS apps with `codemagic.yaml`. There are also [step-by-step instructions](https://blog.codemagic.io/the-simple-guide-to-android-code-signing/) available on our blog for Android code signing.
+
+All generated artifacts can be published to external services. The available integrations currently are email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with custom scripts - for example, in addition to traditional solutions, there are also some examples about Firebase App Distribution [below](../yaml/distribution/#publishing).
+
+## Setting up code signing for iOS
+
+{{<notebox>}}
+Codemagic uses the [keychain](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md#keychain) utility to manage macOS keychains and certificates.
+{{</notebox>}}
+
+In order to use **automatic code signing** and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect and define the environment variables listed below. Make sure to [encrypt](#encrypting-sensitive-data) the values of the variables before adding them to the configuration file.
+
+* `APP_STORE_CONNECT_PRIVATE_KEY`
+
+  It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api). To do so:
+
+  1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
+  2. Click on the + sign to generate a new API key.
+  3. Enter the name for the key and select an access level (`Admin` or `Developer`).
+  4. Click **Generate**.
+  5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key. Note that the key can only be downloaded once.
+
+* `APP_STORE_CONNECT_KEY_IDENTIFIER`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Key ID** of the key.
+
+* `APP_STORE_CONNECT_ISSUER_ID`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Issuer ID** displayed above the table of active keys.
+
+* `CERTIFICATE_PRIVATE_KEY`
+
+  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal:
+
+      ssh-keygen -t rsa -b 2048 -f ~/Desktop/codemagic_private_key -q -N ""
+
+{{<notebox>}}
+Alternatively, each property can be specified in the scripts section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
+{{</notebox>}}
+
+In order to use **manual code signing**, [encrypt](../yaml/yaml/#encrypting-sensitive-data) your signing certificate, the certificate password (if the certificate is password-protected) and the provisioning profile, and set the encrypted values to the following environment variables:
+
+    CM_CERTIFICATE: Encrypted(...)
+    CM_CERTIFICATE_PASSWORD: Encrypted(...)
+    CM_PROVISIONING_PROFILE: Encrypted(...)
+
+### Setting up manual code signing
+
+With the manual code signing method, you are required to upload the signing certificate and the matching provisioning profile(s) to Codemagic in order to receive signed builds.
+
+    - find . -name "Podfile" -execdir pod install \;
+    - keychain initialize
+    - |
+      # set up provisioning profiles
+      PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+      mkdir -p "$PROFILES_HOME"
+      PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+      echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+      echo "Saved provisioning profile $PROFILE_PATH"
+    - |
+      # set up signing certificate
+      echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+
+      # when using a password-protected certificate
+      keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+      # when using a certificate that is not password-protected
+      keychain add-certificates --certificate /tmp/certificate.p12
+
+### Setting up automatic code signing
+
+{{<notebox>}}
+Codemagic uses the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) utility for generating and managing certificates and provisioning profiles and performing code signing.
+{{</notebox>}}
+
+    - find . -name "Podfile" -execdir pod install \;
+    - keychain initialize
+    - app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID (use "$(xcode-project detect-bundle-id)" if not specified)
+      --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
+      --create  # Allow creating resources if existing are not found.
+    - keychain add-certificates
+
+The available provisioning profile types are described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store).
+
+## Setting up code signing for Android
+
+The following templates show code signing using `key.properties`.
+
+### Set up default debug key.properties
+
+    - |
+      # set up debug key.properties
+      keytool -genkeypair \
+        -alias androiddebugkey \
+        -keypass android \
+        -keystore ~/.android/debug.keystore \
+        -storepass android \
+        -dname 'CN=Android Debug,O=Android,C=US' \
+        -keyalg 'RSA' \
+        -keysize 2048 \
+        -validity 10000
+
+### Set up code signing with user specified keys
+
+In order to do code signing [encrypt](../yaml/yaml/#encrypting-sensitive-data) your keystore file, keystore password (if keystore is password protected), key alias and key alias password (if key alias is password protected) and set the encrypted values to the following environment variables:
+
+    CM_KEYSTORE: Encrypted(...)
+    CM_KEYSTORE_PASSWORD: Encrypted(...)
+    CM_KEY_ALIAS_USERNAME: Encrypted(...)
+    CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+
+Use the following script:
+
+    - |
+      # set up key.properties
+      echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
+      cat >> "$FCI_BUILD_DIR/project_directory/android/key.properties" <<EOF
+      storePassword=$CM_KEYSTORE_PASSWORD
+      keyPassword=$CM_KEY_ALIAS_PASSWORD
+      keyAlias=$CM_KEY_ALIAS_USERNAME
+      storeFile=/tmp/keystore.keystore
+      EOF
+
+## Publishing
+
+`publishing:` for every successful build, you can publish the generated artifacts to external services. The available integrations currently are email, Slack, Google Play and App Store Connect.
+
+    publishing:
+      email:
+        recipients:
+          - name@example.com
+      slack:
+        channel: '#channel-name'
+        notify_on_build_start: true
+      google_play:                        # For Android app
+        credentials: Encrypted(...)
+        track: alpha
+      app_store_connect:                  # For iOS app
+        app_id: '...'                     # App's unique identifier in App Store Connect
+        apple_id: name@example.com        # Email address used for login
+        password: Encrypted(...)          # App-specific password
+
+### Publishing a Flutter package to pub.dev
+
+In order to get publishing permissions, first you will need to log in to pub.dev locally. It can be done with running `pub publish --dry-run`.
+After that `credentials.json` will be generated which you can use to log in without the need of Google confirmation through browser.
+
+`credentials.json` can be found in the pub cache directory (`~/.pub-cache/credentials.json` on MacOS and Linux, `%APPDATA%\Pub\Cache\credentials.json` on Windows)
+
+    - echo $CREDENTIALS | base64 --decode > "$FLUTTER_ROOT/.pub-cache/credentials.json"
+    - flutter pub publish --dry-run
+    - flutter pub publish -f
+
+### Publishing an app to Firebase App Distribution
+
+If you use a Firebase service, encrypt `google-services.json` as `ANDROID_FIREBASE_SECRET` environment variable for Android
+or `GoogleService-Info.plist` as `IOS_FIREBASE_SECRET` for iOS.
+
+    echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
+    echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+
+#### Publishing an app using Firebase CLI
+
+Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documentation](https://firebase.google.com/docs/cli#cli-ci-systems) for details.
+
+Android
+
+    - |
+      # publish the app to Firebase App Distribution
+      apkPath=$(find build -name "*.apk" | head -1)
+      echo "Found apk at $apkPath"
+        
+      if [[ -z ${apkPath} ]]
+      then
+        echo "No apks were found, skip publishing to Firebase App Distribution"
+      else
+        echo "Publishing $apkPath to Firebase App Distribution"
+        firebase appdistribution:distribute --app <your_android_application_firebase_id> --groups <your_android_testers_group> $apkPath
+      fi  
+
+iOS
+
+    - |
+      # publish the app to Firebase App Distribution
+      ipaPath=$(find build -name "*.ipa" | head -1)
+      echo "Found ipa at $ipaPath"
+
+      if [[ -z ${ipaPath} ]]
+      then
+        echo "No ipas were found, skip publishing to Firebase App Distribution"
+      else
+        echo "Publishing $ipaPath to Firebase App Distribution"
+        firebase appdistribution:distribute --app <your_ios_application_firebase_id> --groups <your_ios_testers_group> $ipaPath
+      fi 
+
+#### Publishing an app with Fastlane
+
+Make sure to encrypt `FIREBASE_TOKEN` as an environment variable. Check [documentation](https://firebase.google.com/docs/cli#cli-ci-systems) for details.
+
+Before running a lane, you should install Fastlane Firebase app distribution plugin
+
+        - |
+          # install fastlane-plugin-firebase_app_distribution
+          gem install bundler
+          sudo gem install fastlane-plugin-firebase_app_distribution --user-install
+
+Then you need to call a lane. This code is similar for Android and iOS.
+
+Android
+
+    - |
+      # execute fastlane android publishing task
+      cd android
+      bundle install
+      bundle exec fastlane <your_android_lane>
+
+iOS
+
+    - |
+      # execute fastlane ios publishing task
+      cd ios
+      bundle install
+      bundle exec fastlane <your_ios_lane>
+
+
+#### Publishing an Android app with Gradle
+
+To authorize an application for Firebase App Distribution, use [Google service account](https://firebase.google.com/docs/app-distribution/android/distribute-gradle#authenticate_using_a_service_account).
+Encrypt and add to environment variables these credentials (the file is named something like `yourappname-6e632def9ad4.json`) as `GOOGLE_APP_CREDENTIALS`. Specify the filepath in your `build.gradle` in `firebaseAppDistribution` as `serviceCredentialsFile="your/file/path.json"`.
+
+    buildTypes {
+        ...
+        release {
+            ...
+            firebaseAppDistribution {
+                ...
+                serviceCredentialsFile="<your/file/path.json>"
+            }
+        }
+
+ Note that in case the credentials file is not specified in `firebaseAppDistribution` build type, it will search the filepath in `GOOGLE_APPLICATION_CREDENTIALS` environment variable.
+
+Decode application credentials for Firebase authorization:
+
+    echo $GOOGLE_APP_CREDENTIALS | base64 --decode > $FCI_BUILD_DIR/you/file/path.json
+
+Build the application:
+
+    - |
+        # set up local properties
+        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
+    - flutter packages pub get
+    - flutter build apk --release
+
+Call the `gradlew` task for distribution
+
+    - |
+        # distribute app to firebase with gradle plugin
+        cd $FCI_BUILD_DIR/android
+        ./gradlew appDistributionUploadRelease
+
+{{<notebox>}}
+
+If you didn't specify `serviceCredentialsFile`, you may export it to random location like `/tmp/google-application-credentials.json`
+
+    echo $GOOGLE_APP_CREDENTIALS | base64 --decode > /tmp/google-application-credentials.json
+
+And then export the filepath on the gradlew task
+
+    - |
+        # distribute app to firebase with gradle plugin
+        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/google-application-credentials.json
+        cd $FCI_BUILD_DIR/android
+        ./gradlew appDistributionUploadRelease
+
+{{</notebox>}}
+
+## Examples
+
+More detailed examples about using YAML for code signing and publishing can be found here:
+
+* <a href="https://blog.codemagic.io/distributing-module-yaml/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-module-yaml')">Native Android project</a>
+* <a href="https://blog.codemagic.io/distributing-native-ios-sdk-with-flutter-module-using-codemagic/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-native-ios-sdk-with-flutter-module-using-codemagic/')">Native iOS project</a>
\ No newline at end of file
diff --git a/content/yaml/running-a-custom-script.md b/content/yaml/running-a-custom-script.md
new file mode 100644
index 0000000..54e4837
--- /dev/null
+++ b/content/yaml/running-a-custom-script.md
@@ -0,0 +1,16 @@
+---
+title: Running a custom script
+description: Custom scripts with YAML.
+weight: 6
+---
+
+You can run shell (`sh`) scripts directly in your `.yaml` file, or run scripts in other languages by defining the language with a shebang line or by launching a script file present in your repository.
+
+For example, you can write a build script with Dart like this:
+
+    - |
+      #!/usr/local/bin/dart
+
+      void main() {
+        print('Hello, World!');
+      }
\ No newline at end of file
diff --git a/content/yaml/runninglocally.md b/content/yaml/runninglocally.md
new file mode 100644
index 0000000..24578d7
--- /dev/null
+++ b/content/yaml/runninglocally.md
@@ -0,0 +1,53 @@
+---
+title: Using Codemagic CLI tools locally
+description: Using Codemagic CLI tools locally or in other environments.
+weight: 9
+---
+
+[codemagic-cli-tools](https://pypi.org/project/codemagic-cli-tools/) is a set of tools to simplify builds at Codemagic. They can be installed with pip (`pip3 install codemagic-cli-tools`) and run locally. For more information, review the full documentation on [CLI tools](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs#cli-tools).
+
+{{<notebox>}}
+Requires: Python ≥ 3.7
+{{</notebox>}}
+
+## Build and code sign an Xcode project
+
+To fetch (or create and download) the provisioning profile(s) and certificate for `MY_BUNDLE_ID` app, use the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) tool.
+
+    app-store-connect fetch-signing-files --issuer-id ISSUER_ID --key-id KEY_IDENTIFIER --private-key PRIVATE_KEY --certificate-key PRIVATE_KEY MY_BUNDLE_ID
+
+ By default, your certificate will be saved to `$HOME/Library/MobileDevice/Certificates` and the provisioning profile(s) will be saved to `$HOME/Library/MobileDevice/Provisioning Profiles`.
+ Refer to [Setting up code signing for iOS](/yaml/distribution/) for more information about accessing App Store Connect.
+
+To initialize keychain at system default keychain path with empty keychain password and add your `certificate.p12` with certificate password, use the [keychain](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/keychain/README.md#keychain) tool with the following command:
+
+    keychain initialize
+    keychain add-certificates --certificate /path/to/certificate.p12 --certificate-password CERTIFICATE_PASSWORD
+
+To use the provisioning profile from `/path/to/profile.mobileprovision` in your Xcode project `/path/to/MyProject.xcodeproj` and generate an .ipa archive using `MyScheme` scheme, use [xcode-project](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/xcode-project/README.md#xcode-project) with the following command:
+
+    xcode-project use-profiles --project /path/to/MyProject.xcodeproj --profile /path/to/profile.mobileprovision
+    xcode-project build-ipa --project /path/to/MyProject.xcodeproj --scheme MyScheme
+
+## Generate a universal APK with user specified keys from app bundle
+
+To build an APK from the app bundle `/path/to/my-app.aab` with keystore `/path/to/keystore.keystore`, `KEYSTORE_PASSWORD`, `KEY_ALIAS` and `KEY_PASSWORD`, use the [android-app-bundle](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/android-app-bundle#android-app-bundle) tool:
+
+    android-app-bundle build-universal-apk \
+        --pattern 'path/to/my-app.aab' \
+        --ks /path/to/keystore.keystore \
+        --ks-pass KEYSTORE_PASSWORD \
+        --ks-key-alias KEY_ALIAS \
+        --key-pass KEY_PASSWORD
+
+{{<notebox>}}
+Alternatively to entering `ISSUER_ID`, `KEY_IDENTIFIER`, `PRIVATE_KEY`, `CERTIFICATE_PASSWORD`,  `KEYSTORE_PASSWORD`, `KEY_PASSWORD` in plaintext, it may also be specified using an `@env:` prefix followed by an environment variable name, or `@file:` prefix followed by a path to the file containing the value. Example: `@env:<variable>` uses the value in the environment variable named `<variable>`, and `@file:<file_path>` uses the value from file at `<file_path>`.
+
+Please refer to [documentation](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs#cli-tools) for more details.
+{{</notebox>}}
+
+## Generate a changelog text from Git history
+
+To generate a changelog text from Git history, use the [git-changelog](https://github.com/codemagic-ci-cd/cli-tools/tree/master/docs/git-changelog#git-changelog) tool. For example, to generate a changelog to `CHANGELOG` file starting from the previous tag, use:
+
+    git-changelog generate --previous-commit `git rev-list --tags --skip=1  --max-count=1` > CHANGELOG
diff --git a/content/yaml/testing.md b/content/yaml/testing.md
new file mode 100644
index 0000000..af13dd0
--- /dev/null
+++ b/content/yaml/testing.md
@@ -0,0 +1,40 @@
+---
+title: Testing
+description: Testing with YAML.
+weight: 7
+---
+
+Test scripts are added under `scripts` in the [overall architecture](../yaml/yaml/#template), before the build commands.
+
+## React Native unit test
+
+This is a basic example with jest, given that jest tests are defined in the `package.json` file.
+
+    npm test
+
+## Native Android
+
+For non-UI tests or unit testing:
+
+    ./gradlew test
+
+UI tests (also known as instrumental tests):
+
+    ./gradlew connectedAndroidTest
+
+## Native iOS
+
+    xcodebuild \
+        -workspace MyAwesomeApp.xcworkspace \
+        -scheme MyAwesomeApp \
+        -sdk iphonesimulator \
+        -destination 'platform=iOS Simulator,name=iPhone 6,OS=8.1' \
+        test | xcpretty
+
+## Flutter test
+    flutter test
+
+## Flutter drive test
+
+    flutter emulators --launch apple_ios_simulator                  # for android use: flutter emulators --launch emulator
+    flutter drive --target=test_driver/my_drive_target.dart
diff --git a/content/yaml/yaml.md b/content/yaml/yaml.md
new file mode 100644
index 0000000..b318073
--- /dev/null
+++ b/content/yaml/yaml.md
@@ -0,0 +1,224 @@
+---
+title: Configuration as code (YAML)
+description: Customize the build and configure all your workflows in a single file.
+weight: 1
+aliases:
+  - '../building/yaml'
+---
+
+`codemagic.yaml` is an advanced option for customizing the build and configuring all your workflows in a single file. This file can be committed to version control, and when it is detected in the repository it will be referenced to configure the build (instead of using the settings in the UI).
+
+{{<notebox>}}
+
+The YAML feature currently has the following **limitations**:
+
+* Exporting configuration from UI is supported for Flutter-based Android, iOS and web apps.
+* The exported configuration is not identical to the settings in UI and lacks the configuration for some features, such as **Stop build if tests fail** and publishing to Codemagic Static Pages.
+
+{{</notebox>}}
+
+## Exporting current configuration as YAML
+
+You can get started with YAML easily if you have an existing project set up on Codemagic. 
+
+1. Navigate to your app settings.
+2. Click **Download configuration** on the right sidebar in the **Configuration as code** section.
+
+Note that in order to use the file for build configuration on Codemagic, it has to be committed to your repository. The name of the file must be `codemagic.yaml` and it must be located in the root directory of the repository.
+
+## Encrypting sensitive data
+
+During the export, Codemagic automatically encrypts the secret environment variables in your build configuration. 
+
+If you wish to add new environment variables to the YAML file, you can encrypt them via Codemagic UI. 
+
+1. Navigate to your app settings.
+2. Click **Encrypt environment variables** on the right sidebar in the **Configuration as code** section.
+3. Paste the value of the variable in the field or upload it as a file.
+4. Click **Encrypt**. 
+5. Copy the encrypted value and paste it to the configuration file.
+
+The encrypted value will look something like this:
+
+```
+Encrypted(Z0FBQUFBQmRyY1FLWXIwVEhqdWphdjRhQ0xubkdoOGJ2bThkNmh4YmdXbFB3S2wyNTN2OERoV3c0YWU0OVBERG42d3Rfc2N0blNDX3FfblZxbUc4d2pWUHJBSVppbXNXNC04U1VqcGlnajZ2VnJVMVFWc3lZZ289)
+```
+
+{{<notebox>}}Note that when the value is uploaded as a file, it is encoded to `base64`.{{</notebox>}}
+
+Writing the base64-encoded environment variable to a file can be done like this:
+
+```
+scripts:
+  - echo $MY_FILE | base64 --decode > my-file.json
+```
+
+## Building with YAML
+
+When detected in repository, `codemagic.yaml` is automatically used for configuring builds that are triggered in response to the events defined in the file. Any configuration in the UI is ignored.
+
+You can also use `codemagic.yaml` for manual builds.
+
+1. In your app settings, click **Set up build**. 
+2. Choose a suitable **project type**.
+3. Select a branch in the dropdown on the left of the **Check for configuration file** button.
+4. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml**.
+5. Then select the YAML **workflow**.
+6. Finally, click **Start new build** to build the app.
+
+## Template
+
+This is the skeleton structure of `codemagic.yaml`:
+
+    workflows:
+      my-workflow:
+        name: My workflow name
+        instance_type: mac_mini
+        max_build_duration: 60
+        environment:
+          vars:
+            PUBLIC_ENV_VAR: "value here"
+          flutter: stable
+          xcode: latest
+        cache:
+          cache_paths:
+            - ~/.pub-cache
+        triggering:
+          events:
+            - push
+          branch_patterns:
+            - pattern: '*'
+              include: true
+              source: true
+        scripts:
+          - ...
+        artifacts:
+          - build/**/outputs/**/*.aab
+        publishing:
+          email:
+            recipients:
+              - name@example.com
+
+
+### Workflows
+
+You can use `codemagic.yaml` to define several workflows for building a project. Each workflow describes the entire build pipeline from triggers to publishing.
+
+    workflows:
+      my-workflow:                # workflow ID
+        name: My workflow name    # workflow name displayed in UI
+        instance_type: mac_mini   # machine type to use (currently supported: `mac_mini` and `mac_pro`)
+        max_build_duration: 60    # build duration in minutes (min 1, max 120)
+        environment:
+        cache:
+        triggering:
+        branch_patterns:
+        scripts:
+        artifacts:
+        publishing:
+
+The main sections in each workflow are described below.
+
+### Environment
+
+`environment:` contains all the environment variables and enables to specify the version of Flutter, Xcode, CocoaPods, Node and npm used for building. This is also where you can add credentials and API keys required for code signing. Make sure to [encrypt the values](#encrypting-sensitive-data) of variables that hold sensitive data. 
+
+    environment:
+      vars:             # Define your environment variables here
+        PUBLIC_ENV_VAR: "value here"
+        SECRET_ENV_VAR: Encrypted(...)
+        
+        # Android code signing
+        CM_KEYSTORE: Encrypted(...)
+        CM_KEYSTORE_PASSWORD: Encrypted(...)
+        CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+        CM_KEY_ALIAS_USERNAME: Encrypted(...)
+        
+        # iOS automatic code signing
+        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
+        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
+        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
+        CERTIFICATE_PRIVATE_KEY: Encrypted(...)
+
+        # iOS manual code signing
+        CM_CERTIFICATE: Encrypted(...)
+        CM_CERTIFICATE_PASSWORD: Encrypted(...)
+        CM_PROVISIONING_PROFILE: Encrypted(...)
+
+        # publishing a package to pub.dev
+        CREDENTIALS: Encrypted(...)
+
+      flutter: stable   # Define the channel name or version (e.g. v1.13.4)
+      xcode: latest     # Define latest, edge or version (e.g. 11.2)
+      cocoapods: 1.9.1  # Define default or version
+      node: 12.14.0     # Define default, latest, current, lts, carbon (or another stream), nightly or version
+      npm: 6.13.7       # Define default, latest, next, lts or version
+
+{{<notebox>}}
+See the default software versions on Codemagic build machines [here](../releases-and-versions/versions/).
+{{</notebox>}}
+
+
+### Cache
+
+`cache:` defines the paths to be cached and stored on Codemagic. See the recommended paths for [dependency caching](https://docs.codemagic.io/building/dependency-caching/).
+
+    cache:
+      cache_paths:
+        - ~/.pub-cache
+        - ...
+
+### Triggering
+
+`triggering:` defines the events for automatic build triggering and watched branches. If no events are defined, you can start builds only manually. 
+
+A branch pattern can match the name of a particular branch, or you can use wildcard symbols to create a pattern that matches several branches. Note that for **pull request builds**, you have to specify whether the watched branch is the source or the target of the pull request.
+
+    triggering:
+      events:                # List the events that trigger builds
+        - push
+        - pull_request
+        - tag
+      branch_patterns:       # Include or exclude watched branches
+        - pattern: '*'
+          include: true
+          source: true
+        - pattern: excluded-target
+          include: false
+          source: false
+        - pattern: included-source
+          include: true
+          source: true
+
+
+### Scripts
+
+Scripts specify what kind of application is built.  This is where you can specify the commands to test, build and code sign your project. There are example scripts available for building a [Flutter application](./building-a-flutter-app/), [React Native application](./building-a-react-native-app/), [native Android application](./building-a-native-android-app/) or a [native iOS application](./building-a-native-ios-app/).
+
+### Testing
+
+There are two types of tests that users can run when developing mobile apps, unit tests (for testing code) and instrumentation tests (for testing the UI and the application in general). These tests take place in a simulator (iOS) or emulator (Android), depending on the platform. Examples of testing are available [here](./testing/).
+
+### Artifacts
+
+Configure the paths and names of the artifacts you would like to use in the following steps, e.g. for publishing, or have available for download on the build page. All paths are relative to the clone directory, but absolute paths are supported as well. You can also use environment variables in artifact patterns.
+
+    artifacts:
+      - build/**/outputs/**/*.apk                   # relative path for a project in root directory
+      - subfolder_name/build/**/outputs/**/*.apk    # relative path for a project in subfolder
+      - build/**/outputs/**/*.aab
+      - build/**/outputs/**/mapping.txt
+      - build/ios/ipa/*.ipa
+      - /tmp/xcodebuild_logs/*.log
+      - flutter_drive.log
+
+There are several things to keep in mind about patterns:
+* The pattern can match several files or folders. If it picks up files or folders with the same name, the top level file or folder name will be suffixed with `_{number}`.
+* If one of the patterns includes another pattern, duplicate artifacts are not created.
+* `apk`, `aab`, `ipa`, `aar`, `app`, proguard mapping (`mapping.txt`), `flutter_drive.log`, `jar`, `zip`, `xarchive` and `dSYM.zip` files will be available as separate items in the Artifacts section on the build page. The rest of the artifacts will be included in an archive with the following name pattern: `{project-name}_{version}_artifacts.zip`.
+
+### Publishing
+
+Both Android and iOS apps need to be signed before releasing. This confirms the author of the code and guarantees that the code has not been tampered with since it was signed. After code signing, the generated artifacts can be easily published to external services. The available integrations are currently email, Slack, Google Play and App Store Connect. It is also possible to publish elsewhere with custom scripts (e.g. Firebase App Distribution). Both code singing and publishing is explained [here](./distribution/) in more detail.
+
+

commit f1d0405f642235021929f64809ecaf42e47ca321
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Tue Jun 30 11:24:00 2020 +0300

    updated release notes (#103)
    
    * updated release notes
    
    * link to pricing channel
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 0278610..11e6cc1 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,6 +4,20 @@ title: Release notes
 weight: 1
 ---
 
+## June 2020
+
+### New billing model
+
+We have moved to a post-paid billing model that comes with a more consistent billing experience and premium features, such as Mac Pro builds. Read more about what changed, who wins from this and how to take advantage of the new billing model on [our blog](https://blog.codemagic.io/codemagic-new-billing/). If you are interested in numbers, check out our updated [pricing page](https://codemagic.io/pricing/) for a quick overview of free and paid features. A short guide for selecting Mac Pro as the machine type is available in our [documentation](https://docs.codemagic.io/building/machine-type/).
+
+The new billing model will apply to all new users and teams signing up after 1st of June, 2020 as well as to existing users that have not purchased any paid build minutes or team seats. However, all existing users will be able to opt in for the improved billing model.
+If you have any questions or concerns, do not hesitate to reach out in our [#pricing channel](https://codemagicio.slack.com/archives/CHWC14F17).
+
+### Adding company details to the invoice
+
+We are continuing to improve our new billing model, and the first improvement is here!
+You can now provide your company details, such as company name, address or VAT number, in order to see them on the invoice and specify a billing email for receiving invoices. You can enter the company details in team or user settings when enabling billing and adding a new credit card, or by clicking **Update billing details** on the right sidebar when you have already enabled billing.
+
 ## May 2020
 
 ### Increase or decrease maximum build duration

commit fc478904bad99faaa6b1e25fd31376145c012f12
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Fri Jun 19 14:04:39 2020 +0300

    base image update (#100)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index c6868f0..87d817c 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -24,7 +24,7 @@ weight: 2
 - docker `19.03.8`
 - fastlane `2.149.1`
 - firebase `7.6.2`
-- flutter `1.17.3 ($HOME/programs/flutter)`
+- flutter `1.17.4 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.27.0`
 - gradle `5.5.1`

commit ab503dbeaa4c81d2b36e3ee41e7a476156dc2d1b
Author: Vladimir Markov <remarkov@users.noreply.github.com>
Date:   Wed Jun 17 16:24:36 2020 +0200

    add instance type to yaml (#99)

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 8863ca9..d9f425e 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -72,6 +72,7 @@ This is the skeleton structure of `codemagic.yaml`.
     workflows:
       my-workflow:
         name: My workflow name
+        instance_type: mac_mini
         max_build_duration: 60
         environment:
           vars:
@@ -104,6 +105,7 @@ You can use `codemagic.yaml` to define several workflows for building a project.
     workflows:
       my-workflow:                # workflow ID
         name: My workflow name    # workflow name displayed in UI
+        instance_type: mac_mini   # machine type to use (currently supported: `mac_mini` and `mac_pro`)
         max_build_duration: 60    # build duration in minutes (min 1, max 120)
         environment:
         cache:

commit 738401d41d29341cc2a1fcbfe65d367aaefc51c0
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu Jun 11 11:54:14 2020 +0300

    fix 2 broken links (nbsp) and prettifying 1 link (#98)

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 3b2b9ba..8863ca9 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -180,7 +180,7 @@ In order to use **automatic code signing** and have Codemagic manage signing cer
       ssh-keygen -t rsa -b 2048 -f ~/Desktop/codemagic_private_key -q -N ""
 
 {{<notebox>}}
-Alternatively, each property can be specified in the [scripts](#scripts) section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch%E2%80%91signing%E2%80%91files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
+Alternatively, each property can be specified in the [scripts](#scripts) section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
 {{</notebox>}}
 
 In order to use **manual code signing**, [encrypt](https://docs.codemagic.io/building/yaml/#encrypting-sensitive-data) your signing certificate, the certificate password (if the certificate is password-protected) and the provisioning profile, and set the encrypted values to the following environment variables:
@@ -262,7 +262,7 @@ If your app settings in Codemagic have building Android app bundles enabled, we
 #### Building for iOS
 
 {{<notebox>}}
-Codemagic uses the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md) utility for generating and managing certificates and provisioning profiles and performing code signing.
+Codemagic uses the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md#app-store-connect) utility for generating and managing certificates and provisioning profiles and performing code signing.
 {{</notebox>}}
 
 Below is an example of building a Flutter app for iOS with automatic code signing. 
@@ -281,7 +281,7 @@ Below is an example of building a Flutter app for iOS with automatic code signin
           - xcode-project use-profiles
           - xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
 
-* The available provisioning profile types are described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch%E2%80%91signing%E2%80%91files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store).
+* The available provisioning profile types are described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store).
 
 Below is an example of building a Flutter app for iOS with manual code signing.
 

commit f705e51bc67774b1b374e4cbcf06753601d1b419
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Wed Jun 10 14:44:57 2020 +0300

    added /builds endpoint to refer on from /builds POST (#97)

diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index f4efe2a..089fb0f 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -1,108 +1,127 @@
----
-title: Builds
-weight: 3
----
-
-APIs for managing builds are currently available for developers to preview. During the preview period, the API may change without advance notice.
-
-## Start a new build
-
-`POST /builds`
-
-### Parameters
-
-| **Name**      | **Type** | **Description** |
-| ------------- | -------- | --------------- |
-| `appId`       | `string` | **Required.** The application identifier. |
-| `workflowId`  | `string` | **Required.** The workflow identifier as specified in YAML file. |
-| `branch`      | `string` | **Required.** The branch name. |
-| `environment` | `object` | Optional. Specify environment variables and software versions to override values defined in workflow settings. | 
-
-### Curl request
-
-```bash
-curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --data '{"appId": "<app_id>","workflowId": "<workflow_id>","branch": "<git_branch_name>"}' https://api.codemagic.io/builds
-```
-
-### Example
-
-```javascript
-{
-    "appId": "5c9c064185dd2310123b8e96",
-    "workflowId": "release",
-    "branch": "master",
-    "environment": {
-        "variables": {
-            "ENVIRONMENT_VARIABLE_1": "...",
-            "ENVIRONMENT_VARIABLE_2": "..."
-        },
-        "softwareVersions": {
-            "xcode": "11.4.1",
-            "flutter": "v1.12.13+hotfix.9"
-        }
-    }
-}
-```
-
-### Response
-
-```javascript
-{
-    "application": {
-        "_id": "5c9c064185dd2310123b8e96",
-        "appName": "my-repo"
-    },
-    "build": {
-        "_id": "5c9c025185ed4300133b2a17",
-        "appId": "5c9c064185dd2310123b8e96",
-        "branch": "master",
-        "index": 1,
-        "status": "queued"
-    }
-}
-```
-
-## Get build status
-
-`GET /builds/:id`
-
-Returns the build information of an already running build on Codemagic.
-
-### Curl request
-
-```bash
-curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request GET https://api.codemagic.io/builds/<build_id>
-```
-
-### Response
-
-```javascript
-{
-   "application":{
-      "_id":"5d85eaa0e941e00019e81bc2",
-      "appName":"counter_flutter"
-   },
-   "build":{
-      "_id":"5ec8eea2261f342603f4d0bc",
-      "startedAt":"2020-05-23T09:36:39.028+0000",
-      "status":"building",
-      "workflowId":"5d85f242e941e00019e81bd2"
-   }
-}
-```
-
-## Cancel build
-
-`POST /builds/:id/cancel`
-
-### Curl request
-
-```bash
-curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request POST https://api.codemagic.io/builds/<build_id>/cancel
-```
-
-The request will return `208 Already Reported` if the build has already finished.
-
-{{<notebox>}}
-If you have multiple similar workflows for the same project, you can configure your workflows dynamically using API calls, read more about it <a href="https://blog.codemagic.io/dynamic-workflows-with-codemagic-api/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','dynamic-workflows-with-codemagic-api')">here</a>.
-{{</notebox>}}
\ No newline at end of file
+---
+title: Builds
+weight: 3
+---
+
+APIs for managing builds are currently available for developers to preview. During the preview period, the API may change without advance notice.
+
+## Start a new build
+
+`POST /builds`
+
+### Parameters
+
+| **Name**      | **Type** | **Description** |
+| ------------- | -------- | --------------- |
+| `appId`       | `string` | **Required.** The application identifier. |
+| `workflowId`  | `string` | **Required.** The workflow identifier as specified in YAML file. |
+| `branch`      | `string` | **Required.** The branch name. |
+| `environment` | `object` | Optional. Specify environment variables and software versions to override values defined in workflow settings. | 
+
+### Curl request
+
+```bash
+curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --data '{"appId": "<app_id>","workflowId": "<workflow_id>","branch": "<git_branch_name>"}' https://api.codemagic.io/builds
+```
+
+### Example
+
+```javascript
+{
+    "appId": "5c9c064185dd2310123b8e96",
+    "workflowId": "release",
+    "branch": "master",
+    "environment": {
+        "variables": {
+            "ENVIRONMENT_VARIABLE_1": "...",
+            "ENVIRONMENT_VARIABLE_2": "..."
+        },
+        "softwareVersions": {
+            "xcode": "11.4.1",
+            "flutter": "v1.12.13+hotfix.9"
+        }
+    }
+}
+```
+
+### Response
+
+The request is asynchronous. To find the started build you can find the most recent build fetching the next [endpoint](#get-build-statuses).
+
+## Get build statuses
+
+`GET /builds`
+
+Return information of already running builds on Codemagic.
+
+### Curl request
+
+```bash
+curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request GET https://api.codemagic.io/builds
+```
+
+### Response
+
+```javascript
+{
+   "applications": [
+        {
+           "_id":"5d85eaa0e941e00019e81bc2",
+           "appName":"counter_flutter"
+        },
+   ],
+   "builds": [
+        {
+            "_id":"5ec8eea2261f342603f4d0bc",
+            "startedAt":"2020-05-23T09:36:39.028+0000",
+            "status":"building",
+            "workflowId":"5d85f242e941e00019e81bd2"
+        },
+   ]
+}
+```
+
+## Get build status
+
+`GET /builds/:id`
+
+Returns the build information of an already running build on Codemagic.
+
+### Curl request
+
+```bash
+curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request GET https://api.codemagic.io/builds/<build_id>
+```
+
+### Response
+
+```javascript
+{
+   "application":{
+      "_id":"5d85eaa0e941e00019e81bc2",
+      "appName":"counter_flutter"
+   },
+   "build":{
+      "_id":"5ec8eea2261f342603f4d0bc",
+      "startedAt":"2020-05-23T09:36:39.028+0000",
+      "status":"building",
+      "workflowId":"5d85f242e941e00019e81bd2"
+   }
+}
+```
+
+## Cancel build
+
+`POST /builds/:id/cancel`
+
+### Curl request
+
+```bash
+curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request POST https://api.codemagic.io/builds/<build_id>/cancel
+```
+
+The request will return `208 Already Reported` if the build has already finished.
+
+{{<notebox>}}
+If you have multiple similar workflows for the same project, you can configure your workflows dynamically using API calls, read more about it <a href="https://blog.codemagic.io/dynamic-workflows-with-codemagic-api/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','dynamic-workflows-with-codemagic-api')">here</a>.
+{{</notebox>}}

commit 3d9774b9616b9f8aaa19224444ebfad2e791dd0d
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon Jun 8 13:32:22 2020 +0300

    base image update (#96)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 8a8bb09..c6868f0 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -24,7 +24,7 @@ weight: 2
 - docker `19.03.8`
 - fastlane `2.149.1`
 - firebase `7.6.2`
-- flutter `1.17.2 ($HOME/programs/flutter)`
+- flutter `1.17.3 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.27.0`
 - gradle `5.5.1`

commit fb9fed1be11a14b57334ac167e781c68c8e45b3f
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon Jun 8 13:18:53 2020 +0300

    base image update (#95)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 326b933..8a8bb09 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -13,22 +13,22 @@ weight: 2
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 46GB)`
+- Disk `322GB (Free Space: 48GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
-- cocoapods `1.9.1`
+- cocoapods `1.9.3`
 - curl
-- dart `2.8.2`
+- dart `2.8.4`
 - docker `19.03.8`
-- fastlane `2.148.1`
+- fastlane `2.149.1`
 - firebase `7.6.2`
-- flutter `1.17.1 ($HOME/programs/flutter)`
+- flutter `1.17.2 ($HOME/programs/flutter)`
 - gem `3.0.3`
-- git `2.26.2`
+- git `2.27.0`
 - gradle `5.5.1`
-- homebrew `2.2.17`
+- homebrew `2.3.0`
 - jq
 - node `12.14.0`
 - npm `6.14.4`
@@ -43,13 +43,13 @@ weight: 2
 - yarn `1.22.4`
 - zip
 
-## Xcode 11.4.1 (11E503a)
+## Xcode 11.5 (11E608c)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
 
-Xcode path: `/Applications/Xcode-11.4.app`
+Xcode path: `/Applications/Xcode-11.5.app`
 
-With Xcode `11.4.1` build version `11E503a` the following runtimes and devices are installed:
+With Xcode `11.5` build version `11E608c` the following runtimes and devices are installed:
 
 ### Runtimes
 
@@ -68,6 +68,7 @@ With Xcode `11.4.1` build version `11E503a` the following runtimes and devices a
 - iOS 13.2
 - iOS 13.3
 - iOS 13.4
+- iOS 13.5
 - tvOS 11.3
 - tvOS 13.4
 - watchOS 6.2
@@ -130,7 +131,7 @@ With Xcode `11.4.1` build version `11E503a` the following runtimes and devices a
 
 ## Other Xcode versions
 
-- 11.5 (11E608c) `/Applications/Xcode-11.5.app`
+- 11.4.1 (11E503a) `/Applications/Xcode-11.4.app`
 - 11.3.1 (11C505) `/Applications/Xcode-11.3.app`
 - 11.2.1 (11B500) `/Applications/Xcode-11.2.1.app`
 - 11.1 (11A1027) `/Applications/Xcode-11.1.app`

commit b2bbd6121bf6b002407803fab012fa2047f635e2
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Jun 4 16:23:43 2020 +0300

    Remove beta label

diff --git a/content/building/yaml.md b/content/building/yaml.md
index cd8c09d..3b2b9ba 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -22,7 +22,7 @@ The YAML feature currently has the following limitations:
 You can get started with YAML easily if you have an existing project set up on Codemagic. 
 
 1. Navigate to your app settings.
-2. Click **Download configuration** on the right sidebar in the **Configuration as code (beta)** section.
+2. Click **Download configuration** on the right sidebar in the **Configuration as code** section.
 
 Note that in order to use the file for build configuration on Codemagic, it has to be committed to your repository. The name of the file must be `codemagic.yaml` and it must be located in the root directory of the repository.
 

commit f9aa4567d938f8a153b8f97c683264e0c7a1fda8
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Mon Jun 1 23:09:13 2020 +0300

    Added links (#94)
    
    * Added links
    
    * fixed tag
    
    * changed yaml links
    
    * note change in builds
    
    * reverted back to previous
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>

diff --git a/content/building/yaml.md b/content/building/yaml.md
index e24a556..cd8c09d 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -360,3 +360,9 @@ For example, you can write a build script with Dart like this:
         app_id: '...'                     # App's unique identifier in App Store Connect
         apple_id: name@example.com        # Email address used for login
         password: Encrypted(...)          # App-specific password
+
+### Examples
+
+Some examples about using YAML can be found here:
+* <a href="https://blog.codemagic.io/distributing-module-yaml/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-module-yaml')">Native Android project</a> 
+* <a href="https://blog.codemagic.io/distributing-native-ios-sdk-with-flutter-module-using-codemagic/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','distributing-native-ios-sdk-with-flutter-module-using-codemagic')">Native iOS project</a>
\ No newline at end of file
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 99c38ae..1fc3576 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -112,3 +112,7 @@ To export the provisioning profile:
 2. Navigate to **Certificates, Identifiers & Profiles > Profiles**.
 3. Select the provisioning profile you would like to export and click **Download**.
 4. Save it to have it ready.
+
+## Additional information
+
+More information about iOS code signing is available <a href="https://blog.codemagic.io/how-to-code-sign-publish-ios-apps/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','how-to-code-sign-publish-ios-apps')">here</a>.
diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 2bf21a7..0278610 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -17,7 +17,7 @@ Note that timeouts do not consume any build minutes. See the relevant documentat
 
 You can now configure your build and Flutter/Xcode/Cocoapods versions dynamically using API. If you have several similar workflows, you can now combine them into one and create parametrized API calls. This way you can run your workflows without having to change the settings in UI or in `codemagic.yaml`.
 
-See [our documentation](../rest-api/builds/) for more information.
+See [our documentation](../rest-api/builds/) or the <a href="https://blog.codemagic.io/dynamic-workflows-with-codemagic-api/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','dynamic-workflows-with-codemagic-api')">article about dynamic workflows</a> for more information.
 
 ## March 2020
 
@@ -37,7 +37,7 @@ We have good news to everyone developing on Windows or Linux. You can now launch
 
 * Set up CocoaPods, etc.
 
-Your project is already available on the machine, so it’s easy to run your iOS app on simulator. See the [documentation](../troubleshooting/accessing-builder-machine-via-ssh).
+Your project is already available on the machine, so it’s easy to run your iOS app on simulator. To find out more, see the [documentation](../troubleshooting/accessing-builder-machine-via-ssh) or <a href="https://blog.codemagic.io/remote-access-to-virtual-mac-build-machine/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','remote-access-to-virtual-mac-build-machine')">our detailed blog post about remote access.</a> 
 
 ### Toggles for enabling/disabling publishing options
 
@@ -51,7 +51,7 @@ We have developed a variety of CLI utilities to assist with building, code signi
 
 ### YAML for iOS
 
-In addition to using `codemagic.yaml` for building Android and web projects, you can now use it build, code sign and publish iOS apps. Read more about how to get started with YAML [here](../building/yaml).
+In addition to using `codemagic.yaml` for building Android and web projects, you can now use it to build, code sign and publish iOS apps. If you are interested in getting started with YAML, check out our [documentation](../building/yaml) or <a href="https://blog.codemagic.io/how-to-add-flutter-modules-to-native-ios-project-and-test-it-on-codemagic/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','how-to-add-flutter-modules-to-native-ios-project-and-test-it-on-codemagic')">this article</a> about using YAML when building a Native iOS project.
 
 ## January 2020
 
diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index e76ed01..f4efe2a 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -102,3 +102,7 @@ curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --reques
 ```
 
 The request will return `208 Already Reported` if the build has already finished.
+
+{{<notebox>}}
+If you have multiple similar workflows for the same project, you can configure your workflows dynamically using API calls, read more about it <a href="https://blog.codemagic.io/dynamic-workflows-with-codemagic-api/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','dynamic-workflows-with-codemagic-api')">here</a>.
+{{</notebox>}}
\ No newline at end of file
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 31b9049..ac0b7e6 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -59,4 +59,8 @@ The SSH or VNC session remains active for a maximum of 20 minutes after all buil
 
 {{<notebox>}}
 If you have finished debugging the build, don't forget to end the session to avoid losing build time.
-{{</notebox>}}
\ No newline at end of file
+{{</notebox>}}
+
+## Closer look
+
+If you want to know more about setting up remote access, there is a detailed overview on both SSH and VNC connection <a href="https://blog.codemagic.io/remote-access-to-virtual-mac-build-machine/" target="_blank" onclick="sendGtag('Link_in_docs_clicked','remote-access-to-virtual-mac-build-machine')">on our blog.</a>
\ No newline at end of file

commit 1c3f5895b032918de9695fc4650ebe10ea24af7f
Author: Souvik Biswas <sbis1999@gmail.com>
Date:   Tue Jun 2 01:35:55 2020 +0530

    Update Codemagic API Docs (#91)
    
    * Added Retrieve application section
    
    * Add curl request to start build
    
    * Add curl request to cancel build
    
    * Add get build status call
    
    * Remove a less useful call

diff --git a/content/rest-api/applications.md b/content/rest-api/applications.md
index 086f1bb..e6bafcc 100644
--- a/content/rest-api/applications.md
+++ b/content/rest-api/applications.md
@@ -5,6 +5,40 @@ weight: 2
 
 APIs for managing applications are currently available for developers to preview. During the preview period, the API may change without advance notice.
 
+## Retrieve an application
+
+`GET /apps/:id`
+
+Returns an application information based upon the application id supplied.
+
+### Curl request
+
+```bash
+curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request GET https://api.codemagic.io/apps/<app_id>
+```
+
+### Response
+
+```javascript
+{
+   "application":{
+      "_id":"5d85eaa0e941e00019e81bc2",
+      "appName":"counter_flutter",
+      "branches":[
+         "master"
+      ],
+      "workflowIds":[
+         "5d85f242e941e00019e81bd2"
+      ],
+      "workflows":{
+         "5d85f242e941e00019e81bd2":{
+            "name":"Android Workflow"
+         }
+      }
+   }
+}
+```
+
 ## Add a new application
 
 `POST /apps`
diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index 99b6fb6..e76ed01 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -18,6 +18,12 @@ APIs for managing builds are currently available for developers to preview. Duri
 | `branch`      | `string` | **Required.** The branch name. |
 | `environment` | `object` | Optional. Specify environment variables and software versions to override values defined in workflow settings. | 
 
+### Curl request
+
+```bash
+curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --data '{"appId": "<app_id>","workflowId": "<workflow_id>","branch": "<git_branch_name>"}' https://api.codemagic.io/builds
+```
+
 ### Example
 
 ```javascript
@@ -56,8 +62,43 @@ APIs for managing builds are currently available for developers to preview. Duri
 }
 ```
 
+## Get build status
+
+`GET /builds/:id`
+
+Returns the build information of an already running build on Codemagic.
+
+### Curl request
+
+```bash
+curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request GET https://api.codemagic.io/builds/<build_id>
+```
+
+### Response
+
+```javascript
+{
+   "application":{
+      "_id":"5d85eaa0e941e00019e81bc2",
+      "appName":"counter_flutter"
+   },
+   "build":{
+      "_id":"5ec8eea2261f342603f4d0bc",
+      "startedAt":"2020-05-23T09:36:39.028+0000",
+      "status":"building",
+      "workflowId":"5d85f242e941e00019e81bd2"
+   }
+}
+```
+
 ## Cancel build
 
 `POST /builds/:id/cancel`
 
+### Curl request
+
+```bash
+curl -H "Content-Type: application/json" -H "x-auth-token: <API Token>" --request POST https://api.codemagic.io/builds/<build_id>/cancel
+```
+
 The request will return `208 Already Reported` if the build has already finished.

commit 564f3513ceb2672818f006ca07d7aa94f46538a0
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Mon Jun 1 15:53:14 2020 +0300

    Machine type (#92)
    
    * Machine type + pic
    
    * removed pic, changed notebox
    
    * added that workflow-based
    
    * Update machine-type.md
    
    Formatting
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/building/machine-type.md b/content/building/machine-type.md
new file mode 100644
index 0000000..c9352b6
--- /dev/null
+++ b/content/building/machine-type.md
@@ -0,0 +1,13 @@
+---
+description: Choose between Mac Mini or Mac Pro
+title: Machine type
+weight: 12
+---
+
+You can choose between Mac Mini or Mac Pro when running the build. Specifications for these machines are available [here](../releases-and-versions/versions/#hardware). 
+
+The machine type can be chosen in the drop-down menu on the right of the screen, under the workflow settings. This setting is workflow-based and will be used by default for all builds of this workflow, both the manually started ones and the ones that are triggered automatically.
+
+{{<notebox>}}
+Mac Pro machines are available for teams and users that have enabled billing in team or user settings respectively.
+{{</notebox>}}
diff --git a/content/uploads/2020/05/machine.png b/content/uploads/2020/05/machine.png
new file mode 100644
index 0000000..569c2a1
Binary files /dev/null and b/content/uploads/2020/05/machine.png differ

commit 7b1e57d520076e825c27a12800a2469d34408948
Author: Madis Peebo <madis@nevercode.io>
Date:   Wed May 27 13:38:58 2020 +0300

    permit unsafe HTML in markdown, and gtag events

diff --git a/config.yml b/config.yml
index 4c86209..bcfc6ae 100644
--- a/config.yml
+++ b/config.yml
@@ -100,3 +100,8 @@ deployment:
     - pattern: '^.+\\.xml$'
       contentType: 'application/rss+xml; charset=utf-8'
       gzip: true
+
+markup:
+    goldmark:
+        renderer:
+            unsafe: true
diff --git a/layouts/partials/analytics.html b/layouts/partials/analytics.html
index c1dec9f..9729285 100644
--- a/layouts/partials/analytics.html
+++ b/layouts/partials/analytics.html
@@ -56,6 +56,17 @@
   })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js')
   fbq('init', '2000132876774057')
   fbq('track', 'PageView')
+
+  // Google Tag event
+  function sendGtag(action, label, nonInteraction) {
+    var pageName = 'docs-' + window.location.pathname
+    var eventParameters = { event_category: pageName, event_label: label }
+    if (nonInteraction) {
+      eventParameters.non_interaction = true
+    }
+    window.gtag('event', action, eventParameters)
+  }
+
 </script>
     
 <noscript>

commit 7081a912f0e9904fdbbedb5df0571345f974f8eb
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Tue May 26 18:53:02 2020 +0300

    explain project path to load firebase config (#93)
    
    * fix/make_load_firebase_configuration_less_ambuigous
    
    * wording
    
    Co-authored-by: rimanteval <41963508+rimanteval@users.noreply.github.com>

diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index 99a0727..ff6db34 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -10,10 +10,17 @@ Instead of committing the Firebase config files to your repository, you can uplo
 2.  Add the following **pre-build** script echoing your variables to load the Firebase configuration in Codemagic.
 
         #!/usr/bin/env sh
+        set -e # exit on first failed command
+
+        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
+        echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+
+    In case your project is in a nested folder structure, it has to be reflected and the script should be following: 
 
+        #!/usr/bin/env sh
         set -e # exit on first failed command
-        
-        PROJECT_ROOT=$FCI_BUILD_DIR/myproject           # ADD YOUR PROJECT FOLDER PATH HERE
+
+        PROJECT_ROOT=$FCI_BUILD_DIR/myproject/path      # ADD YOUR PROJECT FOLDER PATH HERE
 
         echo $ANDROID_FIREBASE_SECRET | base64 --decode > $PROJECT_ROOT/android/app/google-services.json
         echo $IOS_FIREBASE_SECRET | base64 --decode > $PROJECT_ROOT/ios/Runner/GoogleService-Info.plist

commit 8f7a5c42b9e6bd48d158cdf0a11d53d2fd5c1a89
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Fri May 22 14:06:32 2020 +0300

    base image update (#90)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 4fa7619..326b933 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -13,22 +13,22 @@ weight: 2
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 47GB)`
+- Disk `322GB (Free Space: 46GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
 - cocoapods `1.9.1`
 - curl
-- dart `2.8.1`
+- dart `2.8.2`
 - docker `19.03.8`
-- fastlane `2.146.1`
+- fastlane `2.148.1`
 - firebase `7.6.2`
 - flutter `1.17.1 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.26.2`
 - gradle `5.5.1`
-- homebrew `2.2.15`
+- homebrew `2.2.17`
 - jq
 - node `12.14.0`
 - npm `6.14.4`
@@ -130,7 +130,7 @@ With Xcode `11.4.1` build version `11E503a` the following runtimes and devices a
 
 ## Other Xcode versions
 
-- 11.5 (11N605f) `/Applications/Xcode-11.5.app`
+- 11.5 (11E608c) `/Applications/Xcode-11.5.app`
 - 11.3.1 (11C505) `/Applications/Xcode-11.3.app`
 - 11.2.1 (11B500) `/Applications/Xcode-11.2.1.app`
 - 11.1 (11A1027) `/Applications/Xcode-11.1.app`

commit da081a0cc2f63b15d3ce9fd22b26053ac52c28d0
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Thu May 14 21:08:30 2020 +0300

    base image update (#89)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 5fdf0c9..4fa7619 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -13,7 +13,7 @@ weight: 2
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 48GB)`
+- Disk `322GB (Free Space: 47GB)`
 
 ## Pre-installed tools
 
@@ -24,7 +24,7 @@ weight: 2
 - docker `19.03.8`
 - fastlane `2.146.1`
 - firebase `7.6.2`
-- flutter `1.17.0 ($HOME/programs/flutter)`
+- flutter `1.17.1 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.26.2`
 - gradle `5.5.1`

commit 0abbcea09dbd752b06fd66098c90ebdb491c806c
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Wed May 13 15:28:35 2020 +0300

    Remove beta for yaml

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 6aeafad..e24a556 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -10,7 +10,7 @@ weight: 1
 
 **Limitations**
 
-The YAML feature is currently in *beta* and has the following limitations:
+The YAML feature currently has the following limitations:
 
 * Exporting configuration from UI is supported for Flutter-based Android, iOS and web apps.
 * The exported configuration is not identical to the settings in UI and lacks the configuration for some features, such as **Stop build if tests fail** and publishing to Codemagic Static Pages.

commit 1f7e3893a71a12a4775501c5d8143c6217223387
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Wed May 13 10:10:25 2020 +0300

    Updated readme.md for Windows users (#88)
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>

diff --git a/readme.md b/readme.md
index 7c3111b..26f5b50 100644
--- a/readme.md
+++ b/readme.md
@@ -19,12 +19,18 @@ Please follow the format of existing issues for consistency.
 
 ## Development
 
-Development requires [Hugo static site generator](https://gohugo.io) v0.61.0 from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew
+Development requires [Hugo static site generator](https://gohugo.io) v0.61.0 from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew for Linux and macOS users.
 
 ```
 brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/79894aee20a146d6cf7db7b4a362e7d491f499a1/Formula/hugo.rb
 ```
 
+Windows users can install [Chocolatey](https://chocolatey.org/install). After that Hugo can be installed with
+
+```
+choco install hugo-extended --version 0.61.0
+```
+
 For general info see [Hugo documentation](https://gohugo.io/documentation/).
 
 Content is in `content` in [CommonMark](https://commonmark.org/help/) markdown format, as implemented by [goldmark](https://github.com/yuin/goldmark);
@@ -33,10 +39,14 @@ Layout templates are in `layouts` in HTML format and go template syntax for "act
 
 ## Preview
 
-Preview the site in http://localhost:1313/ by launching:
+Linux and macOS users can preview the site in http://localhost:1313/ by launching:
 ```
 ./serve.sh
 ```
+Windows users launch:
+```
+./serve.cmd
+```
 
 It will usually refresh automatically when anything is changed
 

commit 3c836264c4e26b9fb337d8e10f3420b2106fac7b
Author: Rrrrents <65161685+Rrrrents@users.noreply.github.com>
Date:   Wed May 13 10:09:18 2020 +0300

    April and May release notes (#87)
    
    * April and May release notes
    
    * Update release-notes.md
    
    formatting
    
    Co-authored-by: Reena Purret <purret_reena@yahoo.com>
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 2ac4a25..2bf21a7 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,6 +4,21 @@ title: Release notes
 weight: 1
 ---
 
+## May 2020
+
+### Increase or decrease maximum build duration
+
+You can now have control over the maximum build duration and set a different value per each workflow. If the build reaches the set limit, it will end with a timeout. The default value is 60 minutes and the maximum value is 120 minutes.
+Note that timeouts do not consume any build minutes. See the relevant documentation [here](../building/timeout/).
+
+## April 2020
+
+### Dynamic workflows with Codemagic API
+
+You can now configure your build and Flutter/Xcode/Cocoapods versions dynamically using API. If you have several similar workflows, you can now combine them into one and create parametrized API calls. This way you can run your workflows without having to change the settings in UI or in `codemagic.yaml`.
+
+See [our documentation](../rest-api/builds/) for more information.
+
 ## March 2020
 
 ### More options to configure your build environment
@@ -127,4 +142,4 @@ The improved documentation site includes:
 
 ### Automatic builds on tag creation -- GitLab and Bitbucket
 
-In addition to GitHub apps, we now support automatic builds on tag creation also for GitLab and Bitbucket apps. Whenever you create a tag via UI or using command line, Codemagic will automatically pick up and build the tagged commit. Read more about it [here](../building/automatic-build-triggering/#build-triggers).
\ No newline at end of file
+In addition to GitHub apps, we now support automatic builds on tag creation also for GitLab and Bitbucket apps. Whenever you create a tag via UI or using command line, Codemagic will automatically pick up and build the tagged commit. Read more about it [here](../building/automatic-build-triggering/#build-triggers).

commit dc1d8a771be17ae0412b2aa4114a2fda8c4bfee3
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Mon May 11 17:49:55 2020 +0300

    document max build duration setting (#85)
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index edfbb81..98c77f9 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,6 +1,6 @@
 ---
 title: Build versioning
-weight: 11
+weight: 10
 ---
 
 If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using the `BUILD_NUMBER` read-only environment variable in **build arguments**.
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 0a5c8e0..1eef4f0 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -1,7 +1,7 @@
 ---
 description: Store your dependencies on Codemagic for a faster build time.
 title: Dependency caching
-weight: 10
+weight: 9
 ---
 
 You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
diff --git a/content/building/timeout.md b/content/building/timeout.md
new file mode 100644
index 0000000..684d7c3
--- /dev/null
+++ b/content/building/timeout.md
@@ -0,0 +1,17 @@
+---
+description: Limit the maximum duration of builds
+title: Build timeout settings
+weight: 11
+---
+
+By default, Codemagic builds are set to time out after 60 minutes. You can decrease or increase the maximum build duration **per workflow**.
+
+* If you're building via UI, you can adjust the maximum build duration in **App settings > Workflow settings > Max build duration**. Move the slider right or left to increase or decrease the maximum build duration. The minimum build duration is 30 min and the maximum is 120 min.
+* If you're using `codemagic.yaml`, you can change the respective setting in the [workflow section](./yaml#workflows).
+
+{{<notebox>}}
+Note that builds that end with timeout do not consume any build minutes.
+{{</notebox>}}
+
+
+
diff --git a/content/building/yaml.md b/content/building/yaml.md
index f3971bb..6aeafad 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -72,6 +72,7 @@ This is the skeleton structure of `codemagic.yaml`.
     workflows:
       my-workflow:
         name: My workflow name
+        max_build_duration: 60
         environment:
           vars:
             PUBLIC_ENV_VAR: "value here"
@@ -103,6 +104,7 @@ You can use `codemagic.yaml` to define several workflows for building a project.
     workflows:
       my-workflow:                # workflow ID
         name: My workflow name    # workflow name displayed in UI
+        max_build_duration: 60    # build duration in minutes (min 1, max 120)
         environment:
         cache:
         triggering:

commit 78c7314454fc0be08847caf3b255032b5444dbcc
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon May 11 12:57:32 2020 +0300

    base image update (#83)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 2b4e5ec..5fdf0c9 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -13,22 +13,22 @@ weight: 2
 
 - System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 38GB)`
+- Disk `322GB (Free Space: 48GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
 - cocoapods `1.9.1`
 - curl
-- dart `2.7.2`
+- dart `2.8.1`
 - docker `19.03.8`
-- fastlane `2.145.0`
+- fastlane `2.146.1`
 - firebase `7.6.2`
-- flutter `1.12.13+hotfix.9 ($HOME/programs/flutter)`
+- flutter `1.17.0 ($HOME/programs/flutter)`
 - gem `3.0.3`
-- git `2.26.1`
+- git `2.26.2`
 - gradle `5.5.1`
-- homebrew `2.2.13`
+- homebrew `2.2.15`
 - jq
 - node `12.14.0`
 - npm `6.14.4`
@@ -130,10 +130,10 @@ With Xcode `11.4.1` build version `11E503a` the following runtimes and devices a
 
 ## Other Xcode versions
 
+- 11.5 (11N605f) `/Applications/Xcode-11.5.app`
 - 11.3.1 (11C505) `/Applications/Xcode-11.3.app`
 - 11.2.1 (11B500) `/Applications/Xcode-11.2.1.app`
 - 11.1 (11A1027) `/Applications/Xcode-11.1.app`
 - 11.0 (11A420a) `/Applications/Xcode-11.app`
 - 10.3 (10G8) `/Applications/Xcode-10.3.app`
 
-

commit 7f8d44edaa49db7e2ce23294c28694934c39d486
Author: Priit Lätt <priit@nevercode.io>
Date:   Fri May 8 16:09:12 2020 +0300

    Remove deprecated Xcode versions (#82)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index a8e90f4..2b4e5ec 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -135,7 +135,5 @@ With Xcode `11.4.1` build version `11E503a` the following runtimes and devices a
 - 11.1 (11A1027) `/Applications/Xcode-11.1.app`
 - 11.0 (11A420a) `/Applications/Xcode-11.app`
 - 10.3 (10G8) `/Applications/Xcode-10.3.app`
-- 10.2.1 (10E1001) `/Applications/Xcode-10.2.app`
-- 10.1 (10B61) `/Applications/Xcode-10.1.app`
-- 10.0 (10A255) `/Applications/Xcode-10.app`
+
 

commit 1c0c1b1c456e9efee4b7e9befb78789801d58226
Author: Geoffrey Arthaud <garthaud@gmail.com>
Date:   Thu May 7 08:12:11 2020 +0200

    Corrected typo on dependency-caching.md (#81)

diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 10c4993..0a5c8e0 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -30,6 +30,6 @@ Caching `$HOME/Library/Developer/Xcode/DerivedData` won't help to speed up iOS b
 3. Enter the path(s) to the dependencies to be cached and click **Add**. Note that you can delete added paths anytime.
 4. Click **Save** to save the settings.
 
-## Removing cashed dependencies
+## Removing cached dependencies
 
 In order to clear the collected cache, navigate to the **Dependency caching** section in app settings and click **Clear cache**. During the next build, dependencies will be downloaded afresh.

commit 55c885864a643cf645ee9c187ec8198cabd87d8f
Author: sanni prasad <prasadsunny1@gmail.com>
Date:   Sun Apr 26 13:56:17 2020 +0530

    Update the link to flutter website (#80)
    
    Changed the domain name from flutter.io to flutter.dev

diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 22ecd48..5752122 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -41,7 +41,7 @@ There are several approaches you can use to prepare your Flutter project for cod
 
 ### Option 1. Configure signing in `build.gradle`
 
-You can follow the instructions in [Flutter's documentation](https://flutter.io/docs/deployment/android#signing-the-app) to configure code signing in Gradle. It's vital that you use the variable names suggested in Flutter documentation as Codemagic will reference them during the build. However, make sure to not commit your `key.properties` file to the repository, Codemagic will generate and populate the `key.properties` file during the build based on the input you provide in the UI.
+You can follow the instructions in [Flutter's documentation](https://flutter.dev/docs/deployment/android#signing-the-app) to configure code signing in Gradle. It's vital that you use the variable names suggested in Flutter documentation as Codemagic will reference them during the build. However, make sure to not commit your `key.properties` file to the repository, Codemagic will generate and populate the `key.properties` file during the build based on the input you provide in the UI.
 
 ### Option 2. Configure signing using environment variables
 

commit 210777648aca05951a05cfc1993f64a36fa01d92
Author: Priit Lätt <priit@nevercode.io>
Date:   Thu Apr 23 18:23:55 2020 +0300

    Update `POST /builds` parameters (#79)

diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
index 42428c0..99b6fb6 100644
--- a/content/rest-api/builds.md
+++ b/content/rest-api/builds.md
@@ -11,11 +11,12 @@ APIs for managing builds are currently available for developers to preview. Duri
 
 ### Parameters
 
-| **Name**     | **Type** | **Description** |
-| ------------ | -------- | --------------- |
-| `appId`      | `string` | **Required.** The application identifier. |
-| `workflowId` | `string` | **Required.** The workflow identifier as specified in YAML file. |
-| `branch`     | `string` | **Required.** The branch name. |
+| **Name**      | **Type** | **Description** |
+| ------------- | -------- | --------------- |
+| `appId`       | `string` | **Required.** The application identifier. |
+| `workflowId`  | `string` | **Required.** The workflow identifier as specified in YAML file. |
+| `branch`      | `string` | **Required.** The branch name. |
+| `environment` | `object` | Optional. Specify environment variables and software versions to override values defined in workflow settings. | 
 
 ### Example
 
@@ -23,7 +24,17 @@ APIs for managing builds are currently available for developers to preview. Duri
 {
     "appId": "5c9c064185dd2310123b8e96",
     "workflowId": "release",
-    "branch": "master"
+    "branch": "master",
+    "environment": {
+        "variables": {
+            "ENVIRONMENT_VARIABLE_1": "...",
+            "ENVIRONMENT_VARIABLE_2": "..."
+        },
+        "softwareVersions": {
+            "xcode": "11.4.1",
+            "flutter": "v1.12.13+hotfix.9"
+        }
+    }
 }
 ```
 

commit adc79acbabbc56f6ebbf77d2f13266b78458fdb6
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Wed Apr 22 17:50:59 2020 +0300

    base image update (#78)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index fe4decd..a8e90f4 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -11,9 +11,9 @@ weight: 2
 
 ## System
 
-- System version `macOS 10.15.4 (19E266)`
+- System version `macOS 10.15.4 (19E287)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 39GB)`
+- Disk `322GB (Free Space: 38GB)`
 
 ## Pre-installed tools
 
@@ -22,16 +22,16 @@ weight: 2
 - curl
 - dart `2.7.2`
 - docker `19.03.8`
-- fastlane `2.144.0`
+- fastlane `2.145.0`
 - firebase `7.6.2`
 - flutter `1.12.13+hotfix.9 ($HOME/programs/flutter)`
 - gem `3.0.3`
-- git `2.26.0`
+- git `2.26.1`
 - gradle `5.5.1`
-- homebrew `2.2.11`
+- homebrew `2.2.13`
 - jq
 - node `12.14.0`
-- npm `6.13.7`
+- npm `6.14.4`
 - python `2.7.17`
 - python3 `3.7.7`
 - ruby `2.6.5p114`
@@ -43,13 +43,13 @@ weight: 2
 - yarn `1.22.4`
 - zip
 
-## Xcode 11.4 (11E146)
+## Xcode 11.4.1 (11E503a)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
 
 Xcode path: `/Applications/Xcode-11.4.app`
 
-With Xcode `11.4` build version `11E146` the following runtimes and devices are installed:
+With Xcode `11.4.1` build version `11E503a` the following runtimes and devices are installed:
 
 ### Runtimes
 
@@ -81,7 +81,7 @@ With Xcode `11.4` build version `11E146` the following runtimes and devices are
 - iPhone 6
 - iPhone 6s
 - iPhone 6s Plus
-- iPhone SE
+- iPhone SE (1st generation)
 - iPhone 7
 - iPhone 7 Plus
 - iPhone 8
@@ -93,6 +93,7 @@ With Xcode `11.4` build version `11E146` the following runtimes and devices are
 - iPhone 11
 - iPhone 11 Pro
 - iPhone 11 Pro Max
+- iPhone SE (2nd generation)
 - iPad 2
 - iPad Retina
 - iPad Air

commit 7e3e6e7ea3965cb44abc079b481d4b2d5f51a246
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Wed Apr 22 11:39:44 2020 +0300

    editing

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index b7d45cc..83f1f58 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -6,7 +6,7 @@ weight: 5
 
 If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully.
 
-1. [Create a SSH key pair](#generating-a-ssh-key) for use with Codemagic. Note that the SSH key **cannot** be password-protected.
+1. [Create an SSH key pair](#generating-an-ssh-key) for use with Codemagic. Note that the SSH key **cannot** be password-protected.
 2. Add the **public key** to your repository settings. See how to do that on [GitHub](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account), [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), [GitLab](https://docs.gitlab.com/ee/ssh/README.html#adding-an-ssh-key-to-your-gitlab-account).
 3. Then in Codemagic, add the **private key** for accessing the repository as an [environment variable](https://docs.codemagic.io/building/environment-variables/). Make sure to check **Secure**. For example:
 
@@ -28,7 +28,7 @@ If you wish to use a **custom** environment variable name without the suffix `_S
         eval `ssh-agent -s`
         ssh-add /tmp/ssh_key
 
-## Generating a SSH key
+## Generating an SSH key
 
 Different repository hosting services have different minimum requirements for the length of the SSH key, varying from 2048 bits to 4096 bits. We recommend creating a 4096 bit key for increased security. Run the command below in your terminal to create a 4096 bit SSH key:
 
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index c2fbeca..862b237 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -31,7 +31,7 @@ Your app will be then listed on the Applications page and you can immediately st
 2. Enter the **Repository URL** for **cloning** the repository. Usually, the URL is in this format: ` git@example.com:username/repo.git `.
 3. Upload the **SSH private key** file. If your key is password-protected, enter the **Private key passphrase**. 
 
-    **Alternatively**, you can click **Generate key pair** and have Codemagic create a SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
+    **Alternatively**, you can click **Generate key pair** and have Codemagic create an SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
 4. Click **Add application**.
 
 Your app will be then listed on the Applications page and you can immediately start running builds.

commit d0aac59fce1bf49429c0795a1f2866444bdcd490
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Wed Apr 22 11:36:04 2020 +0300

    Add info about changing repository access settings (#76)
    
    * Add info about changing repository access settings
    
    * editing
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index ef2094f..c2fbeca 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -18,7 +18,7 @@ You can add apps from public or private Git-based repositories.
 
 2. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
 3. If it's a private repository that requires username and password for authentication, check **Private repository** and enter the **Username** and **Password**. Leave this option unchecked for public repositories.
-4. Click **Add app**.
+4. Click **Add application**.
 
 Your app will be then listed on the Applications page and you can immediately start running builds.
 
@@ -29,18 +29,18 @@ Your app will be then listed on the Applications page and you can immediately st
     {{< figure size="medium" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
 
 2. Enter the **Repository URL** for **cloning** the repository. Usually, the URL is in this format: ` git@example.com:username/repo.git `.
-3. Upload the **SSH private key** file. If your key is password-protected, enter the **SSH key password**. 
+3. Upload the **SSH private key** file. If your key is password-protected, enter the **Private key passphrase**. 
 
-    **Alternatively**, you can click **Generate SSH key** and add the public key to your repository, read more about it [below](#generating-the-ssh-key-in-codemagic).
-4. Click **Add app**.
+    **Alternatively**, you can click **Generate key pair** and have Codemagic create a SSH key pair for you, read more about it [below](#generating-a-key-pair-in-codemagic).
+4. Click **Add application**.
 
 Your app will be then listed on the Applications page and you can immediately start running builds.
 
-{{<notebox>}}If you need to update the SSH key, you can upload a new one in **App settings > Repository settings > Update SSH key**.{{</notebox>}}
+{{<notebox>}}If you need to update the private key in Codemagic, you can upload or generate a new one in **App settings > Repository settings > Repository access settings**.{{</notebox>}}
 
-### Generating the SSH key in Codemagic
+### Generating a key pair in Codemagic
 
-On clicking **Generate SSH key**, Codemagic creates a secure 4096 bit key pair. The private key will be used in Codemagic and the public key must be added to your repository settings. Click **Copy to clipboard** to copy the public key.
+On clicking **Generate key pair**, Codemagic creates a secure 4096 bit SSH key pair. The private key will be used in Codemagic and the public key must be added to your repository settings. Click **Copy to clipboard** to copy the public key.
 
 * If your repository is hosted on [GitHub](https://developer.github.com/v3/guides/managing-deploy-keys/#setup-2), [GitLab](https://www.deployhq.com/support/projects/updating-your-project-repository/uploading-your-public-key-to-gitlab-manually) or [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), add the public key to your repository's access/deployment keys.
 * For self-hosted repositories, request your git server admins to allow access for the provided public key.
@@ -55,3 +55,7 @@ To allow Codemagic access the private repository, the following IP addresses nee
 
 1. `34.74.32.93` - used by our backend for getting basic information about the repository
 2. `192.159.66.80/28` - used by our builder servers to download the code and build it
+
+## Modifying repository access settings
+
+When you have moved your repository or need to update the username/password or private key used to access it, you can change the access details in **App settings > Repository settings > Repository access settings**. Once you have changed the relevant settings, click **Update access settings**. Codemagic will verify it has access to the repository using the updated details before saving the settings.
\ No newline at end of file

commit dc7f6e8ae461093302977de01b49ec025d59cf17
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Wed Apr 22 10:38:53 2020 +0300

    Workarounds for incorrect verification code error (#77)
    
    * Workarounds for incorrect verification code error
    
    * editing
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 12df96a..ea9cb04 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -4,6 +4,20 @@ title: Common issues
 weight: 1
 ---
 
+## Two-factor authentication for Apple Developer Portal integration fails
+
+Recently, Apple changed their private API which affects the way third-party systems offer two-factor authentication for Apple Developer Portal. This may result in two-factor authentication failing for the Apple Developer Portal integration in Codemagic despite entering a correct authentication code.
+
+        Apple Developer Portal authentication failed
+        Two factor authentication failed for user@domain.com: Incorrect Verification Code: Incorrect verification code
+
+If you see the error message above and are convinced you have entered the correct authentication code, you can try the following workarounds:
+
+ * Change your Apple Developer Portal password
+ * Log out from all the devices except the one you want to use for receiving the authentication code
+
+If the suggestions above do not work for you, you can export your current UI configuration and switch to building using `codemagic.yaml`, see more information in [Configuration as code (YAML)](../building/yaml).
+
 ## iOS code signing troubleshooting
 
 This is the list of the most common issues that may cause iOS code signing errors during a CI build.
@@ -23,33 +37,6 @@ This is the list of the most common issues that may cause iOS code signing error
 
 * **The bundle ID you have entered in automatic code signing setup on Codemagic does not match the bundle ID in the build configuration that is used for archiving the app with Xcode.** Codemagic assigns provisioning profiles to the build targets and configurations before building the iOS app. That assignment is based on the bundle ID match in both provisioning profile and the build configuration. In the case signing configuration is not assigned to the build target/configuration that is used for archiving, the build will fail.
 
-## iOS build hangs at `Xcode build done`
-
-**Description**:
-When building for iOS, the build gets stuck after showing `Xcode build done` in the log but does not finish and eventually times out.
-
-**Log output**: 
-
-    == Building for iOS ==
-
-    == /usr/local/bin/flutter build ios --release --no-codesign ==
-    Warning: Building for device with codesigning disabled. You will have to manually codesign before deploying to device.
-    Building net.butterflyapp.trainer for device (ios-release)...
-    Running pod install...                                              3.7s
-    Running Xcode build...                                          
-    Xcode build done.                                           203.6s
-
-**Flutter**: `1.7.8+hotfix.3`, `1.7.8+hotfix.4`, `1.9.1+hotfix.2`, `1.9.1+hotfix.4`, `1.9.1+hotfix.5`
-
-**Xcode**: N/A
-
-**Solution**: This is a known issue that occurs randomly and can be traced back to Flutter:
-
-* https://github.com/flutter/flutter/issues/28415
-* https://github.com/flutter/flutter/issues/35988
-
-This issue is known to be fixed on the `master` channel.
-
 ## Version inconsistency between local and Codemagic
 
 **Description**:
@@ -78,3 +65,30 @@ Codemagic runs `./gradlew --version` on the builder side to check if it's suitab
 * Make a fix for the issue found.
 * Commit changes to the repo.
 * Run the build again in Codemagic.
+
+## iOS build hangs at `Xcode build done`
+
+**Description**:
+When building for iOS, the build gets stuck after showing `Xcode build done` in the log but does not finish and eventually times out.
+
+**Log output**: 
+
+    == Building for iOS ==
+
+    == /usr/local/bin/flutter build ios --release --no-codesign ==
+    Warning: Building for device with codesigning disabled. You will have to manually codesign before deploying to device.
+    Building net.butterflyapp.trainer for device (ios-release)...
+    Running pod install...                                              3.7s
+    Running Xcode build...                                          
+    Xcode build done.                                           203.6s
+
+**Flutter**: `1.7.8+hotfix.3`, `1.7.8+hotfix.4`, `1.9.1+hotfix.2`, `1.9.1+hotfix.4`, `1.9.1+hotfix.5`
+
+**Xcode**: N/A
+
+**Solution**: This is a known issue that occurs randomly and can be traced back to Flutter:
+
+* https://github.com/flutter/flutter/issues/28415
+* https://github.com/flutter/flutter/issues/35988
+
+This issue is known to be fixed on the `master` channel.

commit a0fec2e7fdab66c5d05ad0fcfdb6810b8694adf8
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Tue Apr 21 22:40:03 2020 +0300

    Update cache docs (#75)
    
    * add Xcode DerivedData info
    
    * changed dart cache path to correct one, added cocoapods cache to the table
    
    * deleted 'limitations'
    
    * Update dependency-caching.md
    
    editing
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index cc89a91..10c4993 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -6,14 +6,22 @@ weight: 10
 
 You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
 
+
 You can add paths to be cached, for example:
 
 | **Path**                                    | **Description**                                  |
 | ------------------------------------------- | ------------------------------------------------ |
-| `$FCI_BUILD_DIR/build`                      | Build cache                                      |
-| `$HOME/.pub-cache`                          | Dart cache                                       |
-| `$HOME/Library/Developer/Xcode/DerivedData` | Xcode cache                                      |
+| `$FLUTTER_ROOT/.pub-cache`                  | Dart cache                                       |
 | `$HOME/.gradle/caches`                      | Gradle cache. Note: do not cache `$HOME/.gradle` |
+| `$HOME/Library/Caches/CocoaPods`            | CocoaPods cache                                  |
+
+&nbsp;
+
+{{<notebox>}}
+
+Caching `$HOME/Library/Developer/Xcode/DerivedData` won't help to speed up iOS builds with Xcode 10.2 or later.
+
+{{</notebox>}}
 
 ## Enabling dependency caching
 

commit 4241b74245782a22978311b3f1f6e001aca323ba
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Thu Apr 9 10:37:57 2020 +0300

    Update Testmagic iOS link in docs. (#74)
    
    People ask for the Testmagic link in Slack because of this part in the documentation. - added link to testflight here so they don't have to go to Slack and keep Slack channel for discussions.

diff --git a/content/testing/beta-testing-with-testmagic.md b/content/testing/beta-testing-with-testmagic.md
index 435f688..896a345 100644
--- a/content/testing/beta-testing-with-testmagic.md
+++ b/content/testing/beta-testing-with-testmagic.md
@@ -4,7 +4,7 @@ title: Beta testing with Testmagic
 weight: 6
 ---
 
-Codemagic is seamlessly integrated with [Testmagic](https://testmagic.io/), a simple mobile app for viewing, testing and distributing your Codemagic builds. You can download it from [Google Play](https://play.google.com/store/apps/details?id=io.nevercode.testmagic&hl=en) for Android and request the app download link for iOS via the #testmagic channel in our [Slack community](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc).
+Codemagic is seamlessly integrated with [Testmagic](https://testmagic.io/), a simple mobile app for viewing, testing and distributing your Codemagic builds. You can download it from [Google Play](https://play.google.com/store/apps/details?id=io.nevercode.testmagic&hl=en) for Android or join the testflight group for iOS - [link](https://testflight.apple.com/join/lEQLSjoe). For discussions, join #testmagic channel in our [Slack community](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc).
 
 With Testmagic, you can:
 

commit 423b275063794723f7ca0d05c38c6aae0b2decee
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Thu Apr 2 18:24:12 2020 +0300

    base image update (#73)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 789b6b7..fe4decd 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -13,7 +13,7 @@ weight: 2
 
 - System version `macOS 10.15.4 (19E266)`
 - Kernel version `Darwin 19.4.0`
-- Disk `322GB (Free Space: 40GB)`
+- Disk `322GB (Free Space: 39GB)`
 
 ## Pre-installed tools
 
@@ -24,7 +24,7 @@ weight: 2
 - docker `19.03.8`
 - fastlane `2.144.0`
 - firebase `7.6.2`
-- flutter `1.12.13+hotfix.8 ($HOME/programs/flutter)`
+- flutter `1.12.13+hotfix.9 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.26.0`
 - gradle `5.5.1`

commit a523e617db317c46dd451ffd1193428608e9fb97
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Thu Apr 2 17:32:40 2020 +0300

    base image update (#72)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 0549ed0..789b6b7 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -11,24 +11,24 @@ weight: 2
 
 ## System
 
-- System version `macOS 10.15.3 (19D76)`
-- Kernel version `Darwin 19.3.0`
-- Disk `322GB (Free Space: 44GB)`
+- System version `macOS 10.15.4 (19E266)`
+- Kernel version `Darwin 19.4.0`
+- Disk `322GB (Free Space: 40GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
 - cocoapods `1.9.1`
 - curl
-- dart `2.7.1`
+- dart `2.7.2`
 - docker `19.03.8`
-- fastlane `2.143.0`
+- fastlane `2.144.0`
 - firebase `7.6.2`
 - flutter `1.12.13+hotfix.8 ($HOME/programs/flutter)`
 - gem `3.0.3`
-- git `2.25.1`
+- git `2.26.0`
 - gradle `5.5.1`
-- homebrew `2.2.10`
+- homebrew `2.2.11`
 - jq
 - node `12.14.0`
 - npm `6.13.7`
@@ -43,13 +43,13 @@ weight: 2
 - yarn `1.22.4`
 - zip
 
-## Xcode 11.3.1 (11C505)
+## Xcode 11.4 (11E146)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
 
-Xcode path: `/Applications/Xcode-11.3.app`
+Xcode path: `/Applications/Xcode-11.4.app`
 
-With Xcode `11.3.1` build version `11C505` the following runtimes and devices are installed:
+With Xcode `11.4` build version `11E146` the following runtimes and devices are installed:
 
 ### Runtimes
 
@@ -67,9 +67,10 @@ With Xcode `11.3.1` build version `11C505` the following runtimes and devices ar
 - iOS 13.1
 - iOS 13.2
 - iOS 13.3
+- iOS 13.4
 - tvOS 11.3
-- tvOS 13.3
-- watchOS 6.1
+- tvOS 13.4
+- watchOS 6.2
 
 ### Devices
 
@@ -106,8 +107,10 @@ With Xcode `11.3.1` build version `11C505` the following runtimes and devices ar
 - iPad Pro (10.5-inch)
 - iPad (6th generation)
 - iPad (7th generation)
-- iPad Pro (11-inch)
+- iPad Pro (11-inch) (1st generation)
 - iPad Pro (12.9-inch) (3rd generation)
+- iPad Pro (11-inch) (2nd generation)
+- iPad Pro (12.9-inch) (4th generation)
 - iPad mini (5th generation)
 - iPad Air (3rd generation)
 - Apple TV
@@ -126,7 +129,7 @@ With Xcode `11.3.1` build version `11C505` the following runtimes and devices ar
 
 ## Other Xcode versions
 
-- 11.4 (11N132i) `/Applications/Xcode-11.4.app`
+- 11.3.1 (11C505) `/Applications/Xcode-11.3.app`
 - 11.2.1 (11B500) `/Applications/Xcode-11.2.1.app`
 - 11.1 (11A1027) `/Applications/Xcode-11.1.app`
 - 11.0 (11A420a) `/Applications/Xcode-11.app`

commit 397923146c6a348d9e6ac5186f0063cef9f61cb3
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Wed Apr 1 18:13:05 2020 +0300

    Specify user roles and private key instructions (#71)
    
    * Specify user roles and private key instructions
    
    * Update key info
    
    * Editing
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>

diff --git a/content/building/yaml.md b/content/building/yaml.md
index a054253..f3971bb 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -151,7 +151,7 @@ See the default software versions on Codemagic build machines [here](../releases
 
 #### Setting up code signing for iOS
 
-In order to use **automatic code signing** and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect and define the environment variables listed below.
+In order to use **automatic code signing** and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect and define the environment variables listed below. Make sure to [encrypt](#encrypting-sensitive-data) the values of the variables before adding them to the configuration file.
 
 * `APP_STORE_CONNECT_PRIVATE_KEY`
 
@@ -173,7 +173,9 @@ In order to use **automatic code signing** and have Codemagic manage signing cer
 
 * `CERTIFICATE_PRIVATE_KEY`
 
-  A RSA 2048 bit private key to be included in the signing certificate. Read more about it [here](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d). Tutorial for creating the 2048 bit RSA key - [link] (https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent)
+  A RSA 2048 bit private key to be included in the [signing certificate](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d) that Codemagic creates. You can use an existing key or create a new 2048 bit RSA key by running the following command in your terminal:
+
+      ssh-keygen -t rsa -b 2048 -f ~/Desktop/codemagic_private_key -q -N ""
 
 {{<notebox>}}
 Alternatively, each property can be specified in the [scripts](#scripts) section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch%E2%80%91signing%E2%80%91files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 538bae6..99c38ae 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -57,6 +57,10 @@ Apple Developer Portal integration can be enabled in **User settings > Integrati
 
 ### Setting up automatic code signing
 
+{{<notebox >}} 
+The actions that Codemagic can perform on your behalf depend on your [Apple Developer Program user role](https://help.apple.com/app-store-connect/#/deve5f9a89d7).
+{{</notebox>}}
+
 1. Go to **App settings > Publish > iOS code signing**.
 2. Select **Automatic** as the code signing method. If you haven't enabled the Apple Developer Portal integration yet, you will be asked to enable it before you can continue configuration.
 3. If you belong to several Apple Developer teams, select the right team in the **Developer portal team** field.

commit cac8dfc1a55df5f922cff88d17c0e43a36260187
Merge: c7c7388 e20faa0
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Wed Apr 1 18:10:50 2020 +0300

    Merge branch 'master' of github.com:codemagic-ci-cd/codemagic-docs

commit c7c738832abee51137106c8a930fdf1d0245d098
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Wed Apr 1 18:10:44 2020 +0300

    Editing

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index 28b5340..b7d45cc 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -30,7 +30,7 @@ If you wish to use a **custom** environment variable name without the suffix `_S
 
 ## Generating a SSH key
 
-Different repository hosting services have different minimum requirements for the length of the SSH key, varying from 2048 bits to 4096 bits. We recommend creating a 4096 bit key for increased security. Run the script below in your terminal to create a 4096 bit SSH key:
+Different repository hosting services have different minimum requirements for the length of the SSH key, varying from 2048 bits to 4096 bits. We recommend creating a 4096 bit key for increased security. Run the command below in your terminal to create a 4096 bit SSH key:
 
         ssh-keygen -t rsa -b 4096 -f ~/Desktop/codemagic_ssh_key -q -N ""
 

commit e20faa0138830d776c5b93be90adb1394bf4cff2
Author: Martin Jeret <martin.jeret@gmail.com>
Date:   Tue Mar 31 18:12:43 2020 +0300

    Update yaml.md (#70)

diff --git a/content/building/yaml.md b/content/building/yaml.md
index ed4a4f2..a054253 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -173,7 +173,7 @@ In order to use **automatic code signing** and have Codemagic manage signing cer
 
 * `CERTIFICATE_PRIVATE_KEY`
 
-  A RSA 2048 bit private key to be included in the signing certificate. Read more about it [here](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d).
+  A RSA 2048 bit private key to be included in the signing certificate. Read more about it [here](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d). Tutorial for creating the 2048 bit RSA key - [link] (https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent)
 
 {{<notebox>}}
 Alternatively, each property can be specified in the [scripts](#scripts) section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch%E2%80%91signing%E2%80%91files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.

commit 6ddca82efca28062178d51a6d95943b548867431
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Mon Mar 30 16:24:38 2020 +0300

    Fix broken links

diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index e2f1ac5..538bae6 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -69,7 +69,7 @@ Apple Developer Portal integration can be enabled in **User settings > Integrati
 
 {{< figure size="medium" src="../uploads/automatic_code_signing.png" caption="Automatic code signing setup" >}}
 
-As the next step, you can [configure publishing to App Store Connect](./publishing/publishing-to-app-store) to distribute the app via TestFlight or submit it to the App Store.
+As the next step, you can [configure publishing to App Store Connect](../publishing/publishing-to-app-store) to distribute the app via TestFlight or submit it to the App Store.
 
 ## Manual code signing
 
@@ -87,7 +87,7 @@ With the manual code signing method, you are required to upload the signing cert
 
 {{< figure size="medium" src="../uploads/manual_code_signing.png" caption="Manual code signing setup" >}}
 
-Codemagic will now create a signed `.ipa` file with every build. Note that you must also [set up publishing to App Store Connect](./publishing/publishing-to-app-store) to distribute the app via TestFlight or submit it to the App Store.
+Codemagic will now create a signed `.ipa` file with every build. Note that you must also [set up publishing to App Store Connect](../publishing/publishing-to-app-store) to distribute the app via TestFlight or submit it to the App Store.
 
 #### Exporting certificates and provisioning profiles
 

commit a6148ca388dba250a012d9777d0affabe4bc5885
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Mon Mar 30 16:23:15 2020 +0300

    Fix brokn links

diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index bcfc28b..e2f1ac5 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -69,7 +69,7 @@ Apple Developer Portal integration can be enabled in **User settings > Integrati
 
 {{< figure size="medium" src="../uploads/automatic_code_signing.png" caption="Automatic code signing setup" >}}
 
-As the next step, you can [configure publishing to App Store Connect](./publishing/publish-app-artifacts-to-app-center) to distribute your app to testers via TestFlight or submit it to App Store.
+As the next step, you can [configure publishing to App Store Connect](./publishing/publishing-to-app-store) to distribute the app via TestFlight or submit it to the App Store.
 
 ## Manual code signing
 
@@ -87,7 +87,7 @@ With the manual code signing method, you are required to upload the signing cert
 
 {{< figure size="medium" src="../uploads/manual_code_signing.png" caption="Manual code signing setup" >}}
 
-Codemagic will now create a signed `.ipa` file with every build. Note that you must also [set up publishing to App Store Connect](./publishing/publish-app-artifacts-to-app-center) to distribute the app via TestFlight or submit it to the App Store.
+Codemagic will now create a signed `.ipa` file with every build. Note that you must also [set up publishing to App Store Connect](./publishing/publishing-to-app-store) to distribute the app via TestFlight or submit it to the App Store.
 
 #### Exporting certificates and provisioning profiles
 

commit 71e7c2bf6b486a08036a27d8e755d5b7617d50fb
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Mon Mar 30 16:14:51 2020 +0300

    Remove cashed dependencies (#69)
    
    * Remove cashed dependencies
    
    * Replace image
    
    * editing
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>

diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 0cd51f3..cc89a91 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -18,8 +18,10 @@ You can add paths to be cached, for example:
 ## Enabling dependency caching
 
 1. In your app settings, open the **Dependency caching** section.
-   ![](../uploads/2019/04/caching_enabled.PNG)
-   
 2. Check the **Enable dependency caching** option. By default, caching is disabled.
 3. Enter the path(s) to the dependencies to be cached and click **Add**. Note that you can delete added paths anytime.
 4. Click **Save** to save the settings.
+
+## Removing cashed dependencies
+
+In order to clear the collected cache, navigate to the **Dependency caching** section in app settings and click **Clear cache**. During the next build, dependencies will be downloaded afresh.
diff --git a/content/uploads/2019/04/caching_enabled.PNG b/content/uploads/2019/04/caching_enabled.PNG
deleted file mode 100644
index 4b4a90f..0000000
Binary files a/content/uploads/2019/04/caching_enabled.PNG and /dev/null differ
diff --git a/content/uploads/2020/dependency-cache.png b/content/uploads/2020/dependency-cache.png
new file mode 100644
index 0000000..64e8627
Binary files /dev/null and b/content/uploads/2020/dependency-cache.png differ

commit e5fc00a001594439254e4ed631c362ac36141725
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Mon Mar 30 09:37:27 2020 +0300

    Fix typo

diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index c403455..bcfc28b 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -47,7 +47,7 @@ To use automatic code signing, you are required to enable the **Apple Developer
 
 ### Enabling the Apple Developer Portal integration
 
-Apple Developer Portal integration can be enabled in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to convneniently use the same Apple Developer Portal credentials for automatic code signing across all projects and workflows.
+Apple Developer Portal integration can be enabled in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to conveniently use the same Apple Developer Portal credentials for automatic code signing across all projects and workflows.
 
 1. In the list of available integrations, click the **Connect** button for **Developer Portal**.
 2. Enter your **Apple ID** (Apple Developer Portal username) and **password**.

commit cf21e875b00d75c2f68482339a50faa572b98e32
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Tue Mar 24 18:28:33 2020 +0200

    No dot removal from the middle of a word (#66)
    
    Would allow to search for strings like `codemagic.yaml` and `app-release.apk`.

diff --git a/assets/js/search.js b/assets/js/search.js
index 19b53f0..49e8f8b 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -109,7 +109,7 @@ function prunePlugins (builder) {
 function trimmerDashSupport (builder) {
   var pipelineFunction = function(token) {
     return token.update(function (str) {
-      return str.replace(/[^A-Za-z0-9_\-\$#!\/]+/, '').replace(/[^A-Za-z0-9_]+$/, '')
+      return str.replace(/^[^A-Za-z0-9_\-\$#!\/]+/, '').replace(/[^A-Za-z0-9_]+$/, '')
     })
   }
   lunr.Pipeline.registerFunction(pipelineFunction, 'trimmer-dash-support')

commit 1c4248adc7fe7bd799c780ceb76781c901ff715f
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Tue Mar 24 18:04:50 2020 +0200

    Incomplete matching search (#65)
    
    * Index substrings from left edge
    
    * Avoid quick saturation for frequent words
    
    * Split in multiple plugins
    
    * Improve tokenization
    
    * Improved handling for dashes and underscores
    
    * custom trimmer with dash support
    
    * move tokenizer right before invoking lunr
    
    * Support for ... searches
    
    * Support for #!\usr search queries
    
    * Remove '<' and '>' from query
    
    * '=' separator
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>

diff --git a/assets/js/search.js b/assets/js/search.js
index bef2f34..19b53f0 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -99,30 +99,98 @@ function updateInputs(query) {
   }
 }
 
-function matchPositionObject(builder) {
+function prunePlugins (builder) {
+  builder.pipeline.remove(lunr.stemmer)
+  builder.pipeline.remove(lunr.trimmer)
+  builder.pipeline.remove(lunr.stopWordFilter)
+  builder.searchPipeline.remove(lunr.stemmer)
+}
+
+function trimmerDashSupport (builder) {
+  var pipelineFunction = function(token) {
+    return token.update(function (str) {
+      return str.replace(/[^A-Za-z0-9_\-\$#!\/]+/, '').replace(/[^A-Za-z0-9_]+$/, '')
+    })
+  }
+  lunr.Pipeline.registerFunction(pipelineFunction, 'trimmer-dash-support')
+  builder.pipeline.add(pipelineFunction)
+}
+
+function addPositionMetadata(builder) {
   var pipelineFunction = function(token) {
     var p = token.metadata.position
     token.metadata.positionObject = { start: p[0], length: p[1] }
     return token
   }
-  lunr.Pipeline.registerFunction(pipelineFunction, 'positionObjMetadata')
-  builder.pipeline.before(lunr.stemmer, pipelineFunction)
+  lunr.Pipeline.registerFunction(pipelineFunction, 'position-metadata')
+  builder.pipeline.add(pipelineFunction)
   builder.metadataWhitelist.push('positionObject')
+}
+
+function splitSearchWords(builder) {
+  var pipelineFunction = function (token) {
+    words = token.toString().split(' ')
+    tokens = Array(words.length).fill().map(function(x, i) {
+      return token.clone(function (str) {
+        return words[i]
+      })
+    })
+    return tokens
+  }
+  lunr.Pipeline.registerFunction(pipelineFunction, 'split-search-words')
+  builder.searchPipeline.add(pipelineFunction)
+}
+
+function lowerCaseSearchPipeline (builder) {
+  var pipelineFunction = function (token) {
+    return token.update(function (str) {
+      return str.toLowerCase()
+    })
+  }
+  lunr.Pipeline.registerFunction(pipelineFunction, 'lower-case-search-pipeline')
+  builder.searchPipeline.add(pipelineFunction)
+}
 
-  var removeLeadingDot = function(query) {
-    query.str = query.str.replace(/^\./, '')
+function formatSearchWord(builder) {
+  var pipelineFunction = function(query) {
+    query.str = query.str.replace(/^[\.<]+/, '').replace(/>/, '')
     return query
   }
-  lunr.Pipeline.registerFunction(removeLeadingDot, 'removeLeadingDot')
-  builder.searchPipeline.before(lunr.stemmer, removeLeadingDot)
+  lunr.Pipeline.registerFunction(pipelineFunction, 'format-search-word')
+  builder.searchPipeline.add(pipelineFunction)
+}
+
+function edgeNgramTokenizer(builder) {
+  var pipelineFunction = function(token) {
+    tokens = Array(token.toString().length).fill().map(function(x, i) {
+      return token.clone(function(str) {
+        return str.slice(0, i + 1)
+      })
+    })
+    return tokens
+  }
+  lunr.Pipeline.registerFunction(pipelineFunction, 'edge-ngram-tokenizer')
+  builder.pipeline.add(pipelineFunction)
 }
 
 function getSearchIndex(pages) {
+  lunr.tokenizer.separator = /[\s;\&=]+/
   var lunrIndex = lunr(function() {
-    this.use(matchPositionObject)
     this.ref('uri')
     this.field('title', { boost: 15 })
     this.field('content', { boost: 5 })
+
+    this.use(prunePlugins)
+    this.use(trimmerDashSupport)
+    this.use(edgeNgramTokenizer)
+    this.use(addPositionMetadata)
+
+    this.use(splitSearchWords)
+    this.use(lowerCaseSearchPipeline)
+    this.use(formatSearchWord)
+
+    this.k1(0.5)
+
     pages.forEach(this.add, this)
   })
   var pageIndex = pages.reduce(function(all, page) {
@@ -272,7 +340,9 @@ function getResults(index, query) {
   }
 
   return index.lunrIndex
-    .search(query)
+    .query(function (lunrQuery) {
+      lunrQuery.term(query)
+    })
     .slice(0, 16)
     .map(function(result) {
       var positions = { title: [], content: [] }

commit 841513cde22412b7f0238b50f045b25ddb8b392f
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Mon Mar 23 13:31:15 2020 +0200

    Search works for query with a dot (#64)
    
    * Search works for query with a dot
    
    * Remove dots from search query
    
    * Remove only leading dot
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>

diff --git a/assets/js/search.js b/assets/js/search.js
index 7fcaaae..bef2f34 100644
--- a/assets/js/search.js
+++ b/assets/js/search.js
@@ -108,6 +108,13 @@ function matchPositionObject(builder) {
   lunr.Pipeline.registerFunction(pipelineFunction, 'positionObjMetadata')
   builder.pipeline.before(lunr.stemmer, pipelineFunction)
   builder.metadataWhitelist.push('positionObject')
+
+  var removeLeadingDot = function(query) {
+    query.str = query.str.replace(/^\./, '')
+    return query
+  }
+  lunr.Pipeline.registerFunction(removeLeadingDot, 'removeLeadingDot')
+  builder.searchPipeline.before(lunr.stemmer, removeLeadingDot)
 }
 
 function getSearchIndex(pages) {

commit 760d99d26e97ebbff4e55f276b5df878bbf1f7b2
Author: Madis Peebo <madis@nevercode.io>
Date:   Mon Mar 23 13:19:26 2020 +0200

    fix old search

diff --git a/layouts/partials/search.html b/layouts/partials/search.html
index b367a3b..9e22ef4 100644
--- a/layouts/partials/search.html
+++ b/layouts/partials/search.html
@@ -2,9 +2,10 @@
 <script src="https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.min.js" integrity="sha384-iqnguDoMujGknA4B5Jk7pbSn7sb7M8Tc0zVsTNQXm629Xx00jGEpD9TsZXbfNjKO" crossorigin="anonymous"></script>
 
 {{ $script := resources.Get "js/search.js" | minify | fingerprint }}
-<script src="{{ $script.RelPermalink }}" integrity="{{ $script.Data.Integrity }}" />
+<script src="{{ $script.RelPermalink }}" integrity="{{ $script.Data.Integrity }}" ></script>
 
 {{ $index := (site.Home.OutputFormats.Get "json").RelPermalink }}
+
 <script type="text/javascript">
   window.initSearch('{{ $index }}')
 </script>

commit 55df2a265c5f212f917c30e879ef784017517410
Merge: ae0a909 18886a3
Author: Madis Peebo <madis@nevercode.io>
Date:   Mon Mar 23 11:57:00 2020 +0200

    Merge branch 'master' of github.com:codemagic-ci-cd/codemagic-docs

commit ae0a909dc061ac391cf88be3691fbc7abd2200d7
Author: Madis Peebo <madis@nevercode.io>
Date:   Mon Mar 23 11:56:56 2020 +0200

    make doc scrollable

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 10aeb3c..12e2e76 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -373,6 +373,7 @@ body {
             top: 30px;
             overflow: auto;
             padding-right: 30px;
+            bottom: 0;
 
             .heading {
                 color: #aaaaaa;

commit 18886a3fcab05cb7e24c17469bbc38aea73d511a
Author: madispp <madis@nevercode.io>
Date:   Sun Mar 22 14:26:51 2020 +0200

    Update readme.md

diff --git a/readme.md b/readme.md
index 0b16850..7c3111b 100644
--- a/readme.md
+++ b/readme.md
@@ -27,7 +27,7 @@ brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/79894aee20
 
 For general info see [Hugo documentation](https://gohugo.io/documentation/).
 
-Content is in `content` in blackfriday markdown format ([basic markdown example](https://github.com/markdownlint/markdownlint/blob/master/example/markdown_spec.md));
+Content is in `content` in [CommonMark](https://commonmark.org/help/) markdown format, as implemented by [goldmark](https://github.com/yuin/goldmark);
 
 Layout templates are in `layouts` in HTML format and go template syntax for "actions" ([Hugo documentation](https://gohugo.io/templates/introduction/)).
 

commit a3cfeb3ee067080290ae22b05a799489d201f17a
Author: madispp <madis@nevercode.io>
Date:   Sun Mar 22 14:25:10 2020 +0200

    Update readme.md

diff --git a/readme.md b/readme.md
index f23548a..0b16850 100644
--- a/readme.md
+++ b/readme.md
@@ -29,7 +29,7 @@ For general info see [Hugo documentation](https://gohugo.io/documentation/).
 
 Content is in `content` in blackfriday markdown format ([basic markdown example](https://github.com/markdownlint/markdownlint/blob/master/example/markdown_spec.md));
 
-Layout templates are in `layouts` in ACE format instead of HTML ([documentation](https://github.com/yosssi/ace/blob/master/documentation/syntax.md)) and with go template syntax for "actions" ([Hugo documentation](https://gohugo.io/templates/introduction/)).
+Layout templates are in `layouts` in HTML format and go template syntax for "actions" ([Hugo documentation](https://gohugo.io/templates/introduction/)).
 
 ## Preview
 

commit 10694822485b3fd717b66d66b63e9217284675ad
Author: Madis Peebo <madis@nevercode.io>
Date:   Sun Mar 22 14:21:44 2020 +0200

    convert ace to html

diff --git a/layouts/_default/404.ace b/layouts/_default/404.ace
deleted file mode 100644
index 46c631e..0000000
--- a/layouts/_default/404.ace
+++ /dev/null
@@ -1,2 +0,0 @@
-h1 404
-{{ .Content }}
\ No newline at end of file
diff --git a/layouts/_default/404.html b/layouts/_default/404.html
new file mode 100644
index 0000000..48222a8
--- /dev/null
+++ b/layouts/_default/404.html
@@ -0,0 +1,2 @@
+<h1>404</h1>
+{{ .Content }}
\ No newline at end of file
diff --git a/layouts/_default/baseof.ace b/layouts/_default/baseof.ace
deleted file mode 100644
index f83df7d..0000000
--- a/layouts/_default/baseof.ace
+++ /dev/null
@@ -1,30 +0,0 @@
-= doctype html
-html
-  head
-    {{ .Render "head" }}
-    body#article-page.page
-      #content-wrap
-        #search-results
-        aside#sidebar
-          #menu-toggle
-            .bar.top
-            .bar.middle
-            .bar.bottom
-          #logo
-            a href={{ site.Home.RelPermalink }}
-              {{ $logo := resources.Get "media/logo.svg" }}
-              {{ $logo.Content | safeHTML }}
-              span#logo-label {{ site.Param "headerLinkTitle" }}
-
-          div.search.search--header
-            input.search__input type="text" placeholder="Search"
-            .search__icon.search__icon--search.fas.fa-search
-            .search__icon.search__icon--clear.fas.fa-times
-          {{ partial "sidebar" . }}
-        #main-content
-          main
-            = yield main
-      footer#footer
-        {{ partial "footer" . }}
-      {{ partial "analytics" . }}
-      {{ partial "site-footer" . }}
diff --git a/layouts/_default/baseof.html b/layouts/_default/baseof.html
new file mode 100644
index 0000000..9d00dab
--- /dev/null
+++ b/layouts/_default/baseof.html
@@ -0,0 +1,42 @@
+<!doctype html>
+
+<html>
+  <head>
+    {{ .Render "head" }}
+  </head>
+  <body id="article-page" class="page">
+    <div id="content-wrap">
+      <div id="search-results"></div>
+      <aside id="sidebar">
+        <div id="menu-toggle">
+          <div class="bar top"></div>
+          <div class="bar middle"></div>
+          <div class="bar bottom"></div>
+        </div>
+        <div id="logo">
+          <a href="{{ site.Home.RelPermalink }}">
+            {{ $logo := resources.Get "media/logo.svg" }}
+            {{ $logo.Content | safeHTML }}
+            <span id="logo-label">{{ site.Param "headerLinkTitle" }}</span>
+          </a>
+        </div>
+        <div class="search search--header">
+          <input class="search__input" type="text" placeholder="Search">
+          <div class="search__icon search__icon--search fas fa-search"></div>
+          <div class="search__icon search__icon--clear fas fa-times"></div>
+        </div>
+        {{ partial "sidebar" . }}
+      </aside>
+      <div id="main-content">
+        <main>
+          {{ block "main" . }}{{ end }}
+        </main>
+      </div>
+    </div>
+    <footer id="footer">
+      {{ partial "footer" . }}
+    </footer>
+    {{ partial "analytics" . }}
+    {{ partial "site-footer" . }}
+  </body>
+</html>
diff --git a/layouts/_default/head.ace b/layouts/_default/head.ace
deleted file mode 100644
index 8692132..0000000
--- a/layouts/_default/head.ace
+++ /dev/null
@@ -1,13 +0,0 @@
-{{ partial "common-head" . }}
-
-{{ $scssOptions := (dict "outputStyle" "compressed" "enableSourceMap" true) }}
-{{ $mainStyles := resources.Get "scss/main.scss" | toCSS $scssOptions | resources.ExecuteAsTemplate "" . | fingerprint }}
-link rel="stylesheet" href={{ $mainStyles.RelPermalink }} integrity={{ $mainStyles.Data.Integrity }}
-{{ $fontStyles := resources.Get "fonts/proximanova/proximanova.scss" | toCSS $scssOptions | resources.ExecuteAsTemplate "" . | fingerprint }}
-link rel="stylesheet" href={{ $fontStyles.RelPermalink }} integrity={{ $fontStyles.Data.Integrity }}
-
-link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous"
-
-script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"
-
-script async= src="https://www.googletagmanager.com/gtag/js?id={{ site.Param "googleAnalyticsTrackingId" }}"
diff --git a/layouts/_default/head.html b/layouts/_default/head.html
new file mode 100644
index 0000000..1a9b40c
--- /dev/null
+++ b/layouts/_default/head.html
@@ -0,0 +1,13 @@
+{{ partial "common-head" . }}
+
+{{ $scssOptions := (dict "outputStyle" "compressed" "enableSourceMap" true) }}
+{{ $mainStyles := resources.Get "scss/main.scss" | toCSS $scssOptions | resources.ExecuteAsTemplate "" . | fingerprint }}
+<link rel="stylesheet" href="{{ $mainStyles.RelPermalink }}" integrity="{{ $mainStyles.Data.Integrity }}" />
+{{ $fontStyles := resources.Get "fonts/proximanova/proximanova.scss" | toCSS $scssOptions | resources.ExecuteAsTemplate "" . | fingerprint }}
+<link rel="stylesheet" href="{{ $fontStyles.RelPermalink }}" integrity="{{ $fontStyles.Data.Integrity }}" />
+
+<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous" />
+
+<script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
+
+<script async="" src="https://www.googletagmanager.com/gtag/js?id={{ site.Param "googleAnalyticsTrackingId" }}"></script>
diff --git a/layouts/_default/index.ace b/layouts/_default/index.ace
deleted file mode 100644
index 8695444..0000000
--- a/layouts/_default/index.ace
+++ /dev/null
@@ -1,3 +0,0 @@
-= content main
-  h1 {{ .Title }}
-  {{ .Content }}
diff --git a/layouts/_default/index.html b/layouts/_default/index.html
new file mode 100644
index 0000000..4cfd224
--- /dev/null
+++ b/layouts/_default/index.html
@@ -0,0 +1,4 @@
+{{ define "main" }}
+  <h1>{{ .Title }}</h1>
+  {{ .Content }}
+{{ end }}
diff --git a/layouts/_default/list.ace b/layouts/_default/list.html
similarity index 74%
rename from layouts/_default/list.ace
rename to layouts/_default/list.html
index ced1401..f3a5e0d 100644
--- a/layouts/_default/list.ace
+++ b/layouts/_default/list.html
@@ -1,6 +1,7 @@
-= content main
-  .container
+{{ define "main" }}
+  <div class="container">
     {{ .Content }}
+  </div>
   
   {{ $descendants := slice }}
   {{ range site.RegularPages }}
@@ -8,4 +9,4 @@
       {{ $descendants = $descendants | append . }}
     {{ end }}
   {{ end }}
-
+{{ end }}
\ No newline at end of file
diff --git a/layouts/_default/single.ace b/layouts/_default/single.ace
deleted file mode 100644
index 287043c..0000000
--- a/layouts/_default/single.ace
+++ /dev/null
@@ -1,8 +0,0 @@
-= content main
-  h1 {{ .Title }}
-  {{ partial "content" . }}
-  {{ with .TableOfContents }}
-    aside#toc
-      .heading Table of contents
-      {{ . }}
-  {{ end }}
diff --git a/layouts/_default/single.html b/layouts/_default/single.html
new file mode 100644
index 0000000..f32cae3
--- /dev/null
+++ b/layouts/_default/single.html
@@ -0,0 +1,10 @@
+{{ define "main" }}
+  <h1>{{ .Title }}</h1>
+  {{ partial "content" . }}
+  {{ with .TableOfContents }}
+    <aside id="toc">
+      <div class="heading">Table of contents</div>
+      {{ . }}
+    </aside>
+  {{ end }}
+{{ end }}
diff --git a/layouts/partials/analytics.ace b/layouts/partials/analytics.html
similarity index 90%
rename from layouts/partials/analytics.ace
rename to layouts/partials/analytics.html
index aa0f4c6..c1dec9f 100644
--- a/layouts/partials/analytics.ace
+++ b/layouts/partials/analytics.html
@@ -1,4 +1,4 @@
-= javascript
+<script type="text/javascript">
   const userFetchTimeoutMs = 3000
   const analyticsId = '{{ site.Param "googleAnalyticsTrackingId" }}'
   const optimizeId = '{{ site.Param "googleOptimizeId" }}'
@@ -56,6 +56,8 @@
   })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js')
   fbq('init', '2000132876774057')
   fbq('track', 'PageView')
+</script>
     
-noscript
-  img height="1" width="1" src="https://www.facebook.com/tr?id=2000132876774057&ev=PageView&noscript=1"
+<noscript>
+  <img height="1" width="1" src="https://www.facebook.com/tr?id=2000132876774057&ev=PageView&noscript=1" />
+</noscript>
\ No newline at end of file
diff --git a/layouts/partials/common-head.ace b/layouts/partials/common-head.ace
deleted file mode 100644
index a037ef4..0000000
--- a/layouts/partials/common-head.ace
+++ /dev/null
@@ -1,22 +0,0 @@
-meta charset=utf-8
-
-meta name=viewport content="width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes"
-meta http-equiv="X-UA-Compatible" content="IE=edge"
-
-{{ $icon := resources.Get "media/favicon.ico" | fingerprint }}
-link rel=icon type="image/x-icon" href={{ $icon.RelPermalink }}
-
-{{ with .Description }}
-  meta name=description content={{ . }}
-{{ end }}
-title {{ with .Title }}{{ . }}{{ end }}{{ if and .Title site.Title (not .IsHome) }} - {{ site.Title }}{{ end }}
-{{ with .Param "canonical" | default .Permalink }}
-  link rel=canonical href={{ . }}
-{{ end }}
-
-{{ range .AlternativeOutputFormats -}}
-  {{ printf `<link rel="%s" type="%s" href="%s" title="%s" />` .Rel .MediaType.Type .RelPermalink site.Title | safeHTML }}
-{{ end -}}
-
-{{ partial "opengraph" . }}
-{{ partial "twitter_cards" . }}
diff --git a/layouts/partials/common-head.html b/layouts/partials/common-head.html
new file mode 100644
index 0000000..7503336
--- /dev/null
+++ b/layouts/partials/common-head.html
@@ -0,0 +1,22 @@
+<meta charset="utf-8" />
+
+<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes" />
+<meta http-equiv="X-UA-Compatible" content="IE=edge" />
+
+{{ $icon := resources.Get "media/favicon.ico" | fingerprint }}
+<link rel="icon" type="image/x-icon" href="{{ $icon.RelPermalink }}" />
+
+{{ with .Description }}
+  <meta name="description" content="{{ . }}" />
+{{ end }}
+<title>{{ with .Title }}{{ . }}{{ end }}{{ if and .Title site.Title (not .IsHome) }} - {{ site.Title }}{{ end }}</title>
+{{ with .Param "canonical" | default .Permalink }}
+  <link rel="canonical" href="{{ . }}" />
+{{ end }}
+
+{{ range .AlternativeOutputFormats -}}
+  {{ printf `<link rel="%s" type="%s" href="%s" title="%s" />` .Rel .MediaType.Type .RelPermalink site.Title | safeHTML }}
+{{ end -}}
+
+{{ partial "opengraph" . }}
+{{ partial "twitter_cards" . }}
diff --git a/layouts/partials/header.ace b/layouts/partials/header.ace
deleted file mode 100644
index 4edf0a9..0000000
--- a/layouts/partials/header.ace
+++ /dev/null
@@ -1,11 +0,0 @@
-
-header.site-header.grey-box
-  nav.global-nav
-  .search
-    input#search type=text placeholder=search
-    ul.list-unstyled#search-results
-
-  {{ with site.Title }}
-    a.site-header--title href={{ site.Home.RelPermalink }}
-      h1 {{ . }}
-  {{ end }}
diff --git a/layouts/partials/opengraph.ace b/layouts/partials/opengraph.ace
deleted file mode 100644
index 961c82d..0000000
--- a/layouts/partials/opengraph.ace
+++ /dev/null
@@ -1,79 +0,0 @@
-{{ with .Param "facebook_title" | default .Title }}
-  meta property=og:title content={{ . }}
-{{ end }}
-
-{{ with .Param "facebook_description" | default .Description | default (site.Param "description") }}
-  meta property=og:description content={{ . }}
-{{ end }}
-
-meta property="og:type" content="{{ if .IsPage }}article{{ else }}website{{ end }}"
-meta property="og:url" content="{{ .Permalink }}"
-{{ with .Param "facebook_image" | default (site.Param "defaultFacebookImage") }}
-  meta property="og:image" content="{{ . | absURL }}"
-{{ end }}
-
-{{ if .IsPage }}
-  {{ if not .PublishDate.IsZero }}
-    meta property=article:published_time content={{ .PublishDate.Format "2006-01-02T15:04:05-07:00" | safeHTML }}
-  {{ else if not .Date.IsZero }}
-    meta property=article:published_time content={{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}
-  {{ end }}
-  
-  {{ if not .Lastmod.IsZero }}
-    meta property=article:modified_time content={{ .Lastmod.Format "2006-01-02T15:04:05-07:00" | safeHTML }}
-  {{ end }}
-{{ else if not .Date.IsZero }}
-  meta property=og:updated_time content={{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}
-{{ end }}
-
-{{ with .Params.audio }}
-  meta property=og:audio content={{ . | absURL }}
-{{ end }}
-{{ with site.Param "locale" }}
-  meta property=og:locale content={{ . }}
-{{ end }}
-{{ with site.Param "title" }}
-  meta property=og:site_name content={{ . }}
-{{ end }}
-{{ with .Params.videos }}
-  {{ range . }}
-    meta property="og:video" content="{{ . | absURL }}"
-  {{ end }}
-{{ end }}
-
-/ If it is part of a series, link to related articles
-{{ $permalink := .Permalink }}
-{{ $siteSeries := site.Taxonomies.series }}
-{{ with .Params.series }}
-  {{ range $name := . }}
-    {{ $series := index $siteSeries $name }}
-    {{ range $page := first 6 $series.Pages }}
-      {{ if ne $page.Permalink $permalink }}
-        meta property="og:see_also" content="{{ $page.Permalink }}"
-      {{ end }}
-    {{ end }}
-  {{ end }}
-{{ end }}
-
-{{ if .IsPage }}
-
-  {{ with site.Param "facebookAuthorHandle" }}
-    meta property="article:publisher" content="https://www.facebook.com/{{ . }}"
-  {{ end }}
-
-  {{ with .Section }}
-    meta property="article:section" content={{ (index (where site.Menus.main ".Identifier" .) 0).Name }}
-  {{ end }}
-
-  {{ with .Params.tags }}
-    {{ range first 6 . }}
-      meta property="article:tag" content="{{ . }}"
-    {{ end }}
-  {{ end }}
-
-{{ end }}
-
-/ Facebook Page Admin ID for Domain Insights
-{{ with site.Social.facebook_admin }}
-  meta property="fb:admins" content="{{ . }}"
-{{ end }}
\ No newline at end of file
diff --git a/layouts/partials/opengraph.html b/layouts/partials/opengraph.html
new file mode 100644
index 0000000..f441179
--- /dev/null
+++ b/layouts/partials/opengraph.html
@@ -0,0 +1,79 @@
+{{ with .Param "facebook_title" | default .Title }}
+  <meta property="og:title" content="{{ . }}" />
+{{ end }}
+
+{{ with .Param "facebook_description" | default .Description | default (site.Param "description") }}
+  <meta property="og:description" content="{{ . }}" />
+{{ end }}
+
+<meta property="og:type" content="{{ if .IsPage }}article{{ else }}website{{ end }}" />
+<meta property="og:url" content="{{ .Permalink }}" />
+{{ with .Param "facebook_image" | default (site.Param "defaultFacebookImage") }}
+  <meta property="og:image" content="{{ . | absURL }}" />
+{{ end }}
+
+{{ if .IsPage }}
+  {{ if not .PublishDate.IsZero }}
+    <meta property=article:published_time content="{{ .PublishDate.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />
+  {{ else if not .Date.IsZero }}
+    <meta property=article:published_time content="{{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />
+  {{ end }}
+  
+  {{ if not .Lastmod.IsZero }}
+    <meta property=article:modified_time content="{{ .Lastmod.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />
+  {{ end }}
+{{ else if not .Date.IsZero }}
+  <meta property="og:updated_time" content="{{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />
+{{ end }}
+
+{{ with .Params.audio }}
+  <meta property="og:audio" content="{{ . | absURL }}" />
+{{ end }}
+{{ with site.Param "locale" }}
+  <meta property="og:locale" content="{{ . }}" />
+{{ end }}
+{{ with site.Param "title" }}
+  <meta property="og:site_name" content="{{ . }}" />
+{{ end }}
+{{ with .Params.videos }}
+  {{ range . }}
+    <meta property="og:video" content="{{ . | absURL }}" />
+  {{ end }}
+{{ end }}
+
+{{/*  If it is part of a series, link to related articles */}}
+{{ $permalink := .Permalink }}
+{{ $siteSeries := site.Taxonomies.series }}
+{{ with .Params.series }}
+  {{ range $name := . }}
+    {{ $series := index $siteSeries $name }}
+    {{ range $page := first 6 $series.Pages }}
+      {{ if ne $page.Permalink $permalink }}
+        <meta property="og:see_also" content="{{ $page.Permalink }}" />
+      {{ end }}
+    {{ end }}
+  {{ end }}
+{{ end }}
+
+{{ if .IsPage }}
+
+  {{ with site.Param "facebookAuthorHandle" }}
+    <meta property="article:publisher" content="https://www.facebook.com/{{ . }}" />
+  {{ end }}
+
+  {{ with .Section }}
+    <meta property="article:section" content="{{ (index (where site.Menus.main ".Identifier" .) 0).Name }}" />
+  {{ end }}
+
+  {{ with .Params.tags }}
+    {{ range first 6 . }}
+      <meta property="article:tag" content="{{ . }}" />
+    {{ end }}
+  {{ end }}
+
+{{ end }}
+
+{{/* Facebook Page Admin ID for Domain Insights */}}
+{{ with site.Social.facebook_admin }}
+  <meta property="fb:admins" content="{{ . }}" />
+{{ end }}
diff --git a/layouts/partials/search.ace b/layouts/partials/search.ace
deleted file mode 100644
index 2ae4d6d..0000000
--- a/layouts/partials/search.ace
+++ /dev/null
@@ -1,9 +0,0 @@
-script src="https://cdnjs.cloudflare.com/ajax/libs/lunr.js/2.3.6/lunr.min.js" integrity="sha384-YdPYeaxM24+H15hfctQFgRYpwaquoibf+6a8fpgW6ZW6urvEZaYICEzGPAql4qQm" crossorigin="anonymous"
-script src="https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.min.js" integrity="sha384-iqnguDoMujGknA4B5Jk7pbSn7sb7M8Tc0zVsTNQXm629Xx00jGEpD9TsZXbfNjKO" crossorigin="anonymous"
-
-{{ $script := resources.Get "js/search.js" | minify | fingerprint }}
-script src={{ $script.RelPermalink }} integrity={{ $script.Data.Integrity }}
-
-{{ $index := (site.Home.OutputFormats.Get "json").RelPermalink }}
-= javascript
-  window.initSearch('{{ $index }}')
diff --git a/layouts/partials/search.html b/layouts/partials/search.html
new file mode 100644
index 0000000..b367a3b
--- /dev/null
+++ b/layouts/partials/search.html
@@ -0,0 +1,11 @@
+<script src="https://cdnjs.cloudflare.com/ajax/libs/lunr.js/2.3.6/lunr.min.js" integrity="sha384-YdPYeaxM24+H15hfctQFgRYpwaquoibf+6a8fpgW6ZW6urvEZaYICEzGPAql4qQm" crossorigin="anonymous"></script>
+<script src="https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.min.js" integrity="sha384-iqnguDoMujGknA4B5Jk7pbSn7sb7M8Tc0zVsTNQXm629Xx00jGEpD9TsZXbfNjKO" crossorigin="anonymous"></script>
+
+{{ $script := resources.Get "js/search.js" | minify | fingerprint }}
+<script src="{{ $script.RelPermalink }}" integrity="{{ $script.Data.Integrity }}" />
+
+{{ $index := (site.Home.OutputFormats.Get "json").RelPermalink }}
+<script type="text/javascript">
+  window.initSearch('{{ $index }}')
+</script>
+  
diff --git a/layouts/partials/section-header.ace b/layouts/partials/section-header.ace
deleted file mode 100644
index bee7890..0000000
--- a/layouts/partials/section-header.ace
+++ /dev/null
@@ -1,4 +0,0 @@
-header.grey-box
-  {{ with .Title }}
-    h2 {{ . }}
-  {{ end }}
\ No newline at end of file
diff --git a/layouts/partials/sidebar.ace b/layouts/partials/sidebar.ace
deleted file mode 100644
index 5b6b99f..0000000
--- a/layouts/partials/sidebar.ace
+++ /dev/null
@@ -1,16 +0,0 @@
-nav#docs-menu
-  .search.search--sidebar
-    input.search__input type=text placeholder="Search"
-    .search__icon.search__icon--search.fas.fa-search
-    .search__icon.search__icon--clear.fas.fa-times
-
-  ul
-    {{ $currentPage := . }}
-    {{ range .Site.Menus.main }}
-      li class={{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}
-        .category-name {{ .Name }}
-        .category-posts
-          {{ range where site.Pages "Section" .Identifier }}
-            a class={{ if eq $currentPage .}}active{{ end }} href={{ .RelPermalink }} {{ .Title }}
-          {{ end }}
-    {{ end }}
diff --git a/layouts/partials/sidebar.html b/layouts/partials/sidebar.html
new file mode 100644
index 0000000..ed13e67
--- /dev/null
+++ b/layouts/partials/sidebar.html
@@ -0,0 +1,21 @@
+<nav id="docs-menu">
+  <div class="search search--sidebar">
+    <input class="search__input" type="text" placeholder="Search">
+    <div class="search__icon search__icon--search fas fa-search"></div>
+    <div class="search__icon search__icon--clear fas fa-times"></div>
+  </div>
+
+  <ul>
+    {{ $currentPage := . }}
+    {{ range .Site.Menus.main }}
+      <li class="{{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}">
+        <div class="category-name">{{ .Name }}</div>
+        <div class="category-posts">
+          {{ range where site.Pages "Section" .Identifier -}}
+            <a class="{{ if eq $currentPage .}}active{{ end }}" href="{{ .RelPermalink }}">{{ .Title }}</a>
+          {{- end }}
+        </div>
+      </li>
+    {{ end }}
+  </ul>
+</nav>
diff --git a/layouts/partials/site-footer.ace b/layouts/partials/site-footer.ace
deleted file mode 100644
index 1dc4158..0000000
--- a/layouts/partials/site-footer.ace
+++ /dev/null
@@ -1,4 +0,0 @@
-{{ $script := resources.Get "js/main.js" | fingerprint }}
-script src={{ $script.RelPermalink }} integrity={{ $script.Data.Integrity }}
-
-{{ partial "search" . }}
diff --git a/layouts/partials/site-footer.html b/layouts/partials/site-footer.html
new file mode 100644
index 0000000..a8c7425
--- /dev/null
+++ b/layouts/partials/site-footer.html
@@ -0,0 +1,4 @@
+{{ $script := resources.Get "js/main.js" | fingerprint }}
+<script src="{{ $script.RelPermalink }}" integrity="{{ $script.Data.Integrity }}"></script>
+
+{{ partial "search" . }}
diff --git a/layouts/partials/twitter_cards.ace b/layouts/partials/twitter_cards.ace
deleted file mode 100644
index bf7be72..0000000
--- a/layouts/partials/twitter_cards.ace
+++ /dev/null
@@ -1,20 +0,0 @@
-{{ with .Param "twitter_title" | default .Title }}
-  meta name=twitter:title content={{ . }}
-{{ end }}
-
-{{ with .Param "twitterDescription" | default .Description | default (site.Param "description") }}
-  meta name=twitter:description content={{ . }}
-{{ end }}
-
-{{ with .Param "twitter_image" | default (site.Param "defaultTwitterImage") }}
-  meta name=twitter:card content=summary
-  / summary_large_image is not suitable
-  meta property=twitter:image content={{ . | absURL }}
-{{ end }}
-
-{{ with .Site.Social.twitter }}
-  meta name=twitter:site content=@{{ . }}
-{{ end }}
-
-meta name=twitter:site content=@{{ site.Param "twitterShareHandle" }}
-meta name=twitter:creator content=@{{ site.Param "twitterShareHandle" }}
diff --git a/layouts/partials/twitter_cards.html b/layouts/partials/twitter_cards.html
new file mode 100644
index 0000000..e5ded1e
--- /dev/null
+++ b/layouts/partials/twitter_cards.html
@@ -0,0 +1,20 @@
+{{ with .Param "twitter_title" | default .Title }}
+  <meta name="twitter:title" content="{{ . }}" />
+{{ end }}
+
+{{ with .Param "twitterDescription" | default .Description | default (site.Param "description") }}
+  <meta name="twitter:description" content="{{ . }}" />
+{{ end }}
+
+{{ with .Param "twitter_image" | default (site.Param "defaultTwitterImage") }}
+  <meta name="twitter:card" content="summary" />
+  {{/* summary_large_image is not suitable */}}
+  <meta property="twitter:image" content="{{ . | absURL }}" />
+{{ end }}
+
+{{ with .Site.Social.twitter }}
+  <meta name="twitter:site" content="@{{ . }}" />
+{{ end }}
+
+<meta name="twitter:site" content="@{{ site.Param "twitterShareHandle" }}" />
+<meta name="twitter:creator" content="@{{ site.Param "twitterShareHandle" }}" />
diff --git a/layouts/shortcodes/carousel.ace b/layouts/shortcodes/carousel.ace
deleted file mode 100644
index 1e229eb..0000000
--- a/layouts/shortcodes/carousel.ace
+++ /dev/null
@@ -1,2 +0,0 @@
-.img-carousel
-  {{ .Inner | markdownify }}
\ No newline at end of file
diff --git a/layouts/shortcodes/carousel.html b/layouts/shortcodes/carousel.html
new file mode 100644
index 0000000..d9ac470
--- /dev/null
+++ b/layouts/shortcodes/carousel.html
@@ -0,0 +1,3 @@
+<div class="img-carousel">
+  {{ .Inner | markdownify }}
+</div>
diff --git a/layouts/shortcodes/drive.ace b/layouts/shortcodes/drive.ace
deleted file mode 100644
index a763728..0000000
--- a/layouts/shortcodes/drive.ace
+++ /dev/null
@@ -1,12 +0,0 @@
-
-{{ $id := .Get 0 }}
-{{ $ratio := .Get "ratio" | default 1.6 }}
-{{ $height := div 100 $ratio | lang.NumFmt 2 | safeHTMLAttr }}
-
-{{ if $id }}
-  figure style="position: relative; padding-bottom: {{ $height }}%; height: 0; overflow: hidden;"
-    iframe style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" src="https://drive.google.com/file/d/{{ $id }}/preview" allowtransparency="true"
-{{ else }}
-  {{ errorf "missing id \"%s\" in drive shortcode for page \"%s\"" $id .Page.File.Path }}
-{{ end }}
-
diff --git a/layouts/shortcodes/drive.html b/layouts/shortcodes/drive.html
new file mode 100644
index 0000000..d644c36
--- /dev/null
+++ b/layouts/shortcodes/drive.html
@@ -0,0 +1,12 @@
+
+{{ $id := .Get 0 }}
+{{ $ratio := .Get "ratio" | default 1.6 }}
+{{ $height := div 100 $ratio | lang.NumFmt 2 | safeHTMLAttr }}
+
+{{ if $id }}
+  <figure style="position: relative; padding-bottom: {{ $height }}%; height: 0; overflow: hidden;">
+    <iframe style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" src="https://drive.google.com/file/d/{{ $id }}/preview" allowtransparency="true"></iframe>
+  </figure>
+{{ else }}
+  {{ errorf "missing id \"%s\" in drive shortcode for page \"%s\"" $id .Page.File.Path }}
+{{ end }}
diff --git a/layouts/shortcodes/figure.ace b/layouts/shortcodes/figure.ace
deleted file mode 100644
index 3673b3a..0000000
--- a/layouts/shortcodes/figure.ace
+++ /dev/null
@@ -1,11 +0,0 @@
-{{ $src := .Get "src" }}
-{{ $size := .Get "size" }}
-{{ $title := .Get "title" }}
-{{ $caption := .Get "caption" }}
-{{ $align := .Get "align" }}
-
-figure class="size-{{ $size }}" class="align-{{ $align }}"
-  img src={{ $src }} alt={{ $caption }} title={{ $title }}
-  {{ with $caption }}
-    figcaption {{ . }}
-  {{ end }} 
diff --git a/layouts/shortcodes/figure.html b/layouts/shortcodes/figure.html
new file mode 100644
index 0000000..b80512b
--- /dev/null
+++ b/layouts/shortcodes/figure.html
@@ -0,0 +1,12 @@
+{{ $src := .Get "src" }}
+{{ $size := .Get "size" }}
+{{ $title := .Get "title" }}
+{{ $caption := .Get "caption" }}
+{{ $align := .Get "align" }}
+
+<figure class="size-{{ $size }} align-{{ $align }}">
+  <img src="{{ $src }}" alt="{{ $caption }}" title="{{ $title }}">
+  {{ with $caption -}}
+    <figcaption>{{ . }}</figcaption>
+  {{- end }} 
+</figure>
diff --git a/layouts/shortcodes/link.ace b/layouts/shortcodes/link.ace
deleted file mode 100644
index 713f8fd..0000000
--- a/layouts/shortcodes/link.ace
+++ /dev/null
@@ -1,2 +0,0 @@
-a href={{ .Get 0 | ref . }}
-  {{ .Inner | default (.Get 0 | ref . | absURL) }}
\ No newline at end of file
diff --git a/layouts/shortcodes/link.html b/layouts/shortcodes/link.html
new file mode 100644
index 0000000..e8673ea
--- /dev/null
+++ b/layouts/shortcodes/link.html
@@ -0,0 +1,3 @@
+<a href="{{ .Get 0 | ref . }}">
+  {{ .Inner | default (.Get 0 | ref . | absURL) }}
+</a>
diff --git a/layouts/shortcodes/notebox.ace b/layouts/shortcodes/notebox.ace
deleted file mode 100644
index fe68e83..0000000
--- a/layouts/shortcodes/notebox.ace
+++ /dev/null
@@ -1,2 +0,0 @@
-.notebox
-  {{ .Inner | markdownify }}
\ No newline at end of file
diff --git a/layouts/shortcodes/notebox.html b/layouts/shortcodes/notebox.html
new file mode 100644
index 0000000..370e322
--- /dev/null
+++ b/layouts/shortcodes/notebox.html
@@ -0,0 +1,3 @@
+<div class="notebox">
+  {{ .Inner | markdownify }}
+</div>
diff --git a/layouts/shortcodes/spotify.ace b/layouts/shortcodes/spotify.ace
deleted file mode 100644
index 122a28d..0000000
--- a/layouts/shortcodes/spotify.ace
+++ /dev/null
@@ -1,4 +0,0 @@
-{{ $id := .Get 0 }}
-
-.spotify-embed-container
-  iframe src="https://open.spotify.com/embed/episode/{{ $id }}" height="232" frameborder="0" allowtransparency="true" allow="encrypted-media"
diff --git a/layouts/shortcodes/spotify.html b/layouts/shortcodes/spotify.html
new file mode 100644
index 0000000..3fb56e2
--- /dev/null
+++ b/layouts/shortcodes/spotify.html
@@ -0,0 +1,5 @@
+{{ $id := .Get 0 }}
+
+<div class="spotify-embed-container">
+  <iframe src="https://open.spotify.com/embed/episode/{{ $id }}" height="232" frameborder="0" allowtransparency="true" allow="encrypted-media"></iframe>
+</div>
diff --git a/layouts/shortcodes/video-gif.ace b/layouts/shortcodes/video-gif.html
similarity index 53%
rename from layouts/shortcodes/video-gif.ace
rename to layouts/shortcodes/video-gif.html
index 78e49cd..8c1b8bf 100644
--- a/layouts/shortcodes/video-gif.ace
+++ b/layouts/shortcodes/video-gif.html
@@ -1,4 +1,4 @@
-/ ffmpeg -f gif -i DevJoke-1-2.gif -pix_fmt yuv420p -c:v libx264 -movflags +faststart -filter:v crop='floor(in_w/2)*2:floor(in_h/2)*2' DevJoke-1-2.mp4
+{{/* ffmpeg -f gif -i DevJoke-1-2.gif -pix_fmt yuv420p -c:v libx264 -movflags +faststart -filter:v crop='floor(in_w/2)*2:floor(in_h/2)*2' DevJoke-1-2.mp4 */}}
 
 {{ $src := .Get "src" }}
 {{ $size := .Get "size" }}
@@ -11,15 +11,13 @@
 {{ $i := (site.GetPage "section" "uploads").Resources.GetMatch $path }}
 
 {{ if $i }}
-  figure class="size-{{ $size }}" class="align-{{ $align }}"
-    video src={{ $i.RelPermalink }} loop= muted= autoplay= playsinline=
-    {{ with $caption }}
-      figcaption {{ . }}
-    {{ end }} 
+  <figure class="size-{{ $size }}" class="align-{{ $align }}">
+    <video src="{{ $i.RelPermalink }}" loop="" muted="" autoplay="" playsinline=""></video>
+    {{ with $caption -}}
+      <figcaption>{{ . }}</figcaption>
+    {{- end }} 
+  </figure>
 
 {{ else }}
   {{ errorf "missing file for path \"%s\" in video-gif shortcode for page \"%s\"" $src .Page.File.Path }}
 {{ end }}
-
-
-

commit 375e4a8fa2ed763bb32b210b9c3384c1fac50ac6
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Thu Mar 19 16:24:24 2020 +0200

    add march features

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 3000beb..2ac4a25 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,6 +4,30 @@ title: Release notes
 weight: 1
 ---
 
+## March 2020
+
+### More options to configure your build environment
+
+We recently updated the UI in the Build section of app settings with a dropdown field for `CocoaPods` version selection to make it easier to build with the versions required by your app. With `codemagic.yaml`, you have even more options available and can define which `Flutter`, `Xcode`, `CocoaPods`, `Node` and `npm` version to use for the build. See how to define software versions in YAML file [here](../building/yaml#environment).
+
+### Remote access to build machine via VNC
+
+We have good news to everyone developing on Windows or Linux. You can now launch and interact with graphical applications on the remote macOS machine running your build and perform actions you can only do on mac hardware:
+
+* Configure Xcode project settings
+
+* Create a developer certificate for iOS code signing
+
+* Launch iOS app on simulator
+
+* Set up CocoaPods, etc.
+
+Your project is already available on the machine, so it’s easy to run your iOS app on simulator. See the [documentation](../troubleshooting/accessing-builder-machine-via-ssh).
+
+### Toggles for enabling/disabling publishing options
+
+We have improved Codemagic UI for publishing options and added the **Enabled** checkbox to the settings that allows to easily enable or disable an option. This way you no longer have to delete the configuration in order to turn off the feature for a workflow. In addition, the enabled/disabled status is displayed for each publishing option when you open the Publish section, so you can have a better overview of what the workflow is configured to do.
+
 ## February 2020
 
 ### Codemagic CLI tools

commit c031ee8785a449523549726c1242de748ad27a5e
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Mar 19 11:57:43 2020 +0200

    Add new tools to environment section (#63)
    
    * Add new tools to environment section
    
    * fix typo
    
    * Update content/building/yaml.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>
    Co-authored-by: Priit Lätt <priit@nevercode.io>

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 76b2167..ed4a4f2 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -115,7 +115,7 @@ The main sections in each workflow are described below.
 
 ### Environment
 
-`environment:` Contains your environment variables and enables to specify the version of Flutter used for building. This is also where you can add credentials and API keys required for code signing. Make sure to [encrypt the values](#encrypting-sensitive-data) of variables that hold sensitive data. 
+`environment:` Contains your environment variables and enables to specify the version of Flutter, Xcode, CocoaPods, Node and nmp used for building. This is also where you can add credentials and API keys required for code signing. Make sure to [encrypt the values](#encrypting-sensitive-data) of variables that hold sensitive data. 
 
     environment:
       vars:             # Define your environment variables here
@@ -141,6 +141,13 @@ The main sections in each workflow are described below.
 
       flutter: stable   # Define the channel name or version (e.g. v1.13.4)
       xcode: latest     # Define latest, edge or version (e.g. 11.2)
+      cocoapods: 1.9.1  # Define default or version
+      node: 12.14.0     # Define default, latest, current, lts, carbon (or another stream), nightly or version
+      npm: 6.13.7       # Define default, latest, next, lts or version
+
+{{<notebox>}}
+See the default software versions on Codemagic build machines [here](../releases-and-versions/versions/).
+{{</notebox>}}
 
 #### Setting up code signing for iOS
 

commit a4558a0c7372c0d78da68973befbb09b01a943cd
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Thu Mar 19 10:01:10 2020 +0200

    base image update (#62)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index e7f601e..0549ed0 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -13,34 +13,34 @@ weight: 2
 
 - System version `macOS 10.15.3 (19D76)`
 - Kernel version `Darwin 19.3.0`
-- Disk `322GB (Free Space: 49GB)`
+- Disk `322GB (Free Space: 44GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
-- cocoapods `1.8.4`
+- cocoapods `1.9.1`
 - curl
 - dart `2.7.1`
-- docker `19.03.5`
-- fastlane `2.141.0`
+- docker `19.03.8`
+- fastlane `2.143.0`
 - firebase `7.6.2`
 - flutter `1.12.13+hotfix.8 ($HOME/programs/flutter)`
 - gem `3.0.3`
-- git `2.25.0`
+- git `2.25.1`
 - gradle `5.5.1`
-- homebrew `2.2.5`
+- homebrew `2.2.10`
 - jq
 - node `12.14.0`
 - npm `6.13.7`
 - python `2.7.17`
-- python3 `3.7.6`
+- python3 `3.7.7`
 - ruby `2.6.5p114`
 - ssh
 - sudo
 - tar
 - unzip
 - wget
-- yarn `1.22.0`
+- yarn `1.22.4`
 - zip
 
 ## Xcode 11.3.1 (11C505)
@@ -126,7 +126,7 @@ With Xcode `11.3.1` build version `11C505` the following runtimes and devices ar
 
 ## Other Xcode versions
 
-- 11.4 (11N111s) `/Applications/Xcode-11.4.app`
+- 11.4 (11N132i) `/Applications/Xcode-11.4.app`
 - 11.2.1 (11B500) `/Applications/Xcode-11.2.1.app`
 - 11.1 (11A1027) `/Applications/Xcode-11.1.app`
 - 11.0 (11A420a) `/Applications/Xcode-11.app`

commit f39ac3f531a0ea8647ac1c6f8e02f39d5e916bf2
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Wed Mar 18 10:57:43 2020 +0200

    VNC access (#60)
    
    * inital text
    
    * edit
    
    * changes
    
    * fix
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>

diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 1407cd1..31b9049 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -1,30 +1,27 @@
 ---
 description:
-  'Establish SSH access to the builder virtual machine to inspect your
-  build.  '
-title: Accessing virtual machine via SSH
+  'Establish SSH or VNC access to the virtual build machine'
+title: Remote access to build machine
 weight: 2
 ---
 
-Establishing SSH access to the virtual machine running the build is a secure way for inspecting your build during runtime and for a short time after the build has finished. Building in SSH mode gives you the following advantages:
+You can establish remote access to the virtual build machine running your build either via SSH or using a VNC client. 
 
-- See the processes running during the CI job
-- Reproduce all commands run during the build
-- Debug your custom scripts
+The **SSH access** allows you to access the build machine only through a terminal and run commands on it. This is a great option for debugging your builds. You can see the processes running during the CI job, reproduce all commands run during the build or debug your custom scripts.
 
-## How SSH access works
+The **VNC client** allows you to graphically access the remote build machine. It has multiple versions of Xcode and iOS simulators preinstalled, so you can run and test your iOS apps or change Xcode configuration files without owning a Mac yourself. 
 
-All virtual machines are located within the private network. In order to allow users to connect to the virtual machine, Codemagic creates a temporary SSH tunnel through the public gateway. A unique SSH key is generated before each build which is valid for the duration of the build. The SSH tunnel and the unique key are revoked after the build is finished and cannot be reused.
+## How remote access to build machines works
+
+All virtual machines are located within the private network. In order to allow users to connect to the virtual machine, Codemagic allows a temporary SSH or VNC access through the public gateway using a unique SSH key or user credentails that are generated before each build. The unique key and user credentials are valid for the duration of the build only and are revoked after the build is finished.
 
 ## Setting up SSH connection to the virtual machine
 
-Establishing an SSH connection to the virtual machine is possible only for manually triggered builds. Setting it up requires both enabling the SSH mode in UI and running an automatically generated script in your terminal.
+Establishing an SSH connection to the virtual machine is possible only for manually triggered builds. Setting it up requires both enabling remote access in UI and running an automatically generated script in your terminal.
 
-1. In your app settings, click **Start new build**.
-2. In the **Specify build configuration** popup, check **Enable SSH access** and start the build.
-   {{< figure size="medium" src="../uploads/2019/07/enable_ssh_access.PNG" caption="" >}}
+1. Click **Start new build**.
+2. In the **Specify build configuration** popup, check **Enable remote access** and start the build.
 3. When the build has started, you will shortly see additional instructions for establishing SSH access. Run the automatically generated script in the terminal before the build finishes to establish an SSH connection to the machine running the build.
-   {{< figure size="medium" src="../uploads/2019/07/ssh_access_script.PNG" caption="" >}}
 
 If you don't run the script before the build finishes, the unique SSH key expires and can't be used anymore. A new script will be generated every time you run the build, so previous scripts cannot be reused.
 
@@ -32,18 +29,34 @@ If you don't run the script before the build finishes, the unique SSH key expire
 Note that the script for establishing SSH connection works natively on Linux and MacOS, but requires additional software like Git-bash on Windows.
 {{</notebox>}}
 
-## SSH session time limit
+## Setting up VNC connection to the virtual machine
+
+Establishing a VNC connection to the virtual machine is possible only for manually triggered builds. Setting it up requires enabling remote access in UI and configuring access on your VNC client.
 
-The SSH session remains active for a maximum of 20 minutes after all build steps are completed or until the maximum build duration limit is reached, whichever comes first. If you log out from the virtual machine during an active SSH session, the build is finished automatically and you cannot access the builder via SSH for this session. You would have to run a new build to establish a new SSH connection.
+1. Click **Start new build**.
+2. In the **Specify build configuration** popup, check **Enable remote access** and start the build.
+3. Use the given **Host**, **Port**, **Username** and **Password** on your VNC client to establish the connection.
 
 {{<notebox>}}
-If you have finished debugging the build, don't forget to end the session to avoid losing build time.
+You can download a VNC client for Windows [here](https://www.realvnc.com/en/connect/download/viewer/windows/).
 {{</notebox>}}
 
-## Debugging via SSH
+New credentials will be generated every time you run the build, so previous credentials cannot be reused.
+
+## Using the remote build machine
+
+You can use the remote session to reproduce all commands run during the build, rerun the build with a different configuration or even set up platform-specific files, e.g. CocoaPods. When accessing the build machine via the VNC client, you can use the Search functionality to easily find and launch Safari or Chrome, Xcode, Simulator or any other applications on the build machine.
 
-You can use the SSH session to reproduce all commands run during the build, rerun the build with a different configuration or even set up platform-specific files, e.g. CocoaPods.
+* To access the clone of your project on the VM, run `cd $FCI_BUILD_DIR` in the terminal. 
 
-To access the clone of your project on the VM, run `cd $FCI_BUILD_DIR` in the terminal. The command `printenv` prints all the environment variables exported during the build. You can see some of Codemagic read-only environment variables explained [here](https://docs.codemagic.io/building/environment-variables/#codemagic-read-only-environment-variables).
+* The command `printenv` prints all the environment variables exported during the build. You can see some of Codemagic read-only environment variables explained [here](https://docs.codemagic.io/building/environment-variables/#codemagic-read-only-environment-variables).
 
-Note that the `sudo` command is available so you can execute all commands with root privileges.
+* The `sudo` command is available so you can execute all commands with root privileges.
+
+## Remote access session time limit
+
+The SSH or VNC session remains active for a maximum of 20 minutes after all build steps are completed or until the maximum build duration limit is reached, whichever comes first. If you log out from the virtual machine during an active VNC or SSH session, the build is finished automatically and you cannot access the builder for this session. You would have to run a new build to establish a new remote access connection.
+
+{{<notebox>}}
+If you have finished debugging the build, don't forget to end the session to avoid losing build time.
+{{</notebox>}}
\ No newline at end of file

commit 619e80616fa776854870fa5f88a5163932cfc928
Author: Artemii <40743076+artemii-yanushevskyi@users.noreply.github.com>
Date:   Wed Mar 18 10:48:31 2020 +0200

    Instructions to add Webhooks for different providers (#61)
    
    * instructions for different providers
    
    * webhook is added to repository on enabling triggering options
    
    * failure to add
    
    * editing
    
    Co-authored-by: Artemii Yanushevskyi <artemii@nevercode.io>
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 2d981a3..d88ef48 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -42,16 +42,21 @@ If you don't check any of these triggering options, you will have to run builds
 
 ## Webhooks
 
-For accounts with sufficient permissions, Codemagic creates the webhooks necessary for automatic build triggering during the initial build run. However, in some cases, such as when you add an app from a custom source, you may have to manually set up the webhook to enable automatic builds in response to events in the repository.
+Codemagic automatically adds webhooks to GitHub, GitLab, and Bitbucket after you have enabled any of the triggers in **App settings** > **Automatic build triggering**.
 
-To set up a webhook for automatic build triggering on Codemagic, you must register the Codemagic **payload URL** in your repository settings and select Repository push, Branch push and PR merge events.
+In case of failure to add a webhook, you should manually set up the webhook in your repository hosting service to enable automatic builds in response to events in the repository.
+
+* **GitHub**: Open your project and navigate to **Settings** > **Webhooks** > **Add webhook**, paste the **payload URL** from below, make sure **Content type** is `application/json` and select the following events: **Branch or tag creation**, **Pull requests**, **Pushes**.
+
+* **GitLab**: Navigate to **Settings** > **Webhooks**, paste the **payload URL** and check the following boxes in the **Trigger** section: **Push events**, **Tag push events**, **Merge request events**. Also, be sure to enable **SSL verification**.
+
+* **Bitbucket**: Open your application repository, go to **Settings** > **Webhooks** (in **Workflow** section) > **Add webhook**, then enter an arbitrary title for the webhook and paste the **payload URL** in the **URL** field. For **Triggers**, select **Choose from a full list of triggers** and select the following events: **Push** in the **Repository** section and **Created**, **Updated**, **Merged** in the **Pull Request** section.
 
 {{<notebox>}}
-The payload URL has the following format:  
-`https://api.codemagic.io/hooks/[appId]`
-{{</notebox>}}
+The payload URL has the following format: `https://api.codemagic.io/hooks/[appId]`. 
 
 You can find your app ID in the browser URL after `app/` when you open the app on Codemagic: `https://codemagic.io/app/[appId]`
+{{</notebox>}}
 
 ## Custom build triggers
 

commit 3229811112b68f0cbbbacd4c4b4b188ea3d3d8ed
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Fri Mar 13 16:36:03 2020 +0200

    SSH key gen (#58)
    
    * initial text
    
    * added manual links
    
    * editing
    
    * editing
    
    Co-authored-by: Helina Ariva <helinaariva@Helinas-Air.lan>

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 0182db0..ef2094f 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -17,13 +17,7 @@ You can add apps from public or private Git-based repositories.
     {{< figure size="medium" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
 
 2. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
-
-    {{< figure size="medium" src="../uploads/add_app_nourl.png" caption="" >}}
-
 3. If it's a private repository that requires username and password for authentication, check **Private repository** and enter the **Username** and **Password**. Leave this option unchecked for public repositories.
-
-    {{< figure size="medium" src="../uploads/add_app_private.png" caption="" >}}
-
 4. Click **Add app**.
 
 Your app will be then listed on the Applications page and you can immediately start running builds.
@@ -35,19 +29,26 @@ Your app will be then listed on the Applications page and you can immediately st
     {{< figure size="medium" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
 
 2. Enter the **Repository URL** for **cloning** the repository. Usually, the URL is in this format: ` git@example.com:username/repo.git `.
+3. Upload the **SSH private key** file. If your key is password-protected, enter the **SSH key password**. 
 
-    {{< figure size="medium" src="../uploads/add_app_nourl.png" caption="" >}}
-
-3. Upload the **SSH private key** file. If your key is password-protected, enter the **SSH key password**.
-
-    {{< figure size="medium" src="../uploads/add-app-from-custom-source2.png" caption="" >}}
-
+    **Alternatively**, you can click **Generate SSH key** and add the public key to your repository, read more about it [below](#generating-the-ssh-key-in-codemagic).
 4. Click **Add app**.
 
 Your app will be then listed on the Applications page and you can immediately start running builds.
 
 {{<notebox>}}If you need to update the SSH key, you can upload a new one in **App settings > Repository settings > Update SSH key**.{{</notebox>}}
 
+### Generating the SSH key in Codemagic
+
+On clicking **Generate SSH key**, Codemagic creates a secure 4096 bit key pair. The private key will be used in Codemagic and the public key must be added to your repository settings. Click **Copy to clipboard** to copy the public key.
+
+* If your repository is hosted on [GitHub](https://developer.github.com/v3/guides/managing-deploy-keys/#setup-2), [GitLab](https://www.deployhq.com/support/projects/updating-your-project-repository/uploading-your-public-key-to-gitlab-manually) or [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), add the public key to your repository's access/deployment keys.
+* For self-hosted repositories, request your git server admins to allow access for the provided public key.
+
+After you have added the public key to your repository settings, finish adding the app by clicking **Add application**.
+
+{{<notebox>}}Don't close the **Add application from custom source** module before you have finished adding the app, otherwise you'll need to start over and generate a new SSH key.{{</notebox>}}
+
 ## Repositories behind firewall
 
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:

commit c9f59cabca05fdf118333be8c7d5ef2e0e261a12
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Wed Mar 4 16:34:00 2020 +0200

    remove some screenshots and added toggl steps (#57)
    
    * remove some screenshots and added toggl steps
    
    * typos
    
    * accommodate for UI changes
    
    * remove a Save step

diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index a1730ce..22ecd48 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -98,10 +98,10 @@ Alternatively, you can use [environment variables](https://docs.codemagic.io/bui
 
 You are required to upload your keystore file and provide details about your key in order to receive signed builds on Codemagic.
 
-{{< figure size="" src="../uploads/2019/03/code signing.PNG" caption="" >}}
-
 1. Navigate to the **Publish** section in app settings.
 2. Click **Android code signing**.
 3. Upload your release keystore file.
 4. Enter the **keystore password**, **key alias** and **key password**.
-5. Click **Save** to finish the setup.
+5. Select **Enable Android code signing** at the top of the section to enable code signing.
+6. Click **Save** to finish the setup.
+
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index a026f73..0718c89 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -30,7 +30,8 @@ It is also worth pointing out the necessity for each uploaded binary to have a *
 1. Navigate to the Publish section in app settings.
 2. Click **App Store Connect**.
 3. Enter your **Apple ID** (the email address used for login), your **app-specific password** and **App ID** (your app's unique identifier in App Store Connect).
-4. Click **Save** to finish the setup.
+4. Select **Enable App Store Connect publishing** at the top of the section to enable publishing.
+5. Click **Save** to finish the setup.
 
 Once you have successfully set up publishing to App Store Connect, Codemagic will automatically distribute the app to App Store Connect every time you build the workflow. Note that you must manually submit the app to App Store in App Store Connect.
 
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index ccc8350..ac599ee 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -7,9 +7,9 @@ weight: 3
 You can publish your web app to a custom subdomain of `codemagic.app` for easy access.
 
 1. Go to **App settings > Publish > Codemagic Static Pages** to configure publishing to Codemagic Static Pages.  
-   ![](../uploads/2019/05/staticpages_conf.png)
 2. Choose a subdomain name and enter it in the **Web page subdomain** field. By default, we suggest your app name as the subdomain name.
 3. Check **Publish artifacts even if tests fail** to publish the build even when one or more tests fail. Leaving this option unchecked will publish only successful builds that pass the tests, if any.
-4. Click **Save** to finish the setup. On saving, we'll check the availability of the subdomain name and inform you if the name is already taken.
+4. Select **Enable Codemagic Static Pages publishing** at the top of the section to enable publishing.
+5. Click **Save** to finish the setup. On saving, we'll check the availability of the subdomain name and inform you if the name is already taken.
 
 Now each time you run a build of your web app on Codemagic, you'll see the web app artifact being published to the web page in Codemagic logs and can immediately access the app at the specified URL.
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index 3076803..cae91c1 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -45,6 +45,5 @@ The very first version of the app must be added to Google Play manually. You can
    - Beta --- publish for testing to a wider set of users
    - Production --- release the app to production
 5. If you want to publish the APK even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
-6. Click **Save** to finish the setup.
-
-{{< figure size="medium" src="../uploads/2019/03/google play.png" caption="" >}}
+6. Select **Enable Google Play publishing** at the top of the section to enable publishing.
+7. Click **Save** to finish the setup.

commit 810817b9fd46dd484933e71a35247504d8c70c40
Author: Madis Peebo <madis@nevercode.io>
Date:   Wed Mar 4 15:48:31 2020 +0200

    fix action config

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index db0be6c..9f79349 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -13,7 +13,8 @@ jobs:
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     steps:
       - uses: actions/checkout@v2
-        fetch-depth: 0
+        with:
+          fetch-depth: 0
       - run: curl --location https://github.com/gohugoio/hugo/releases/download/v0.61.0/hugo_extended_0.61.0_Linux-64bit.tar.gz | tar -vxzO hugo > hugo && chmod a+x hugo
       - run: ./hugo --environment production --minify
       - run: ./hugo deploy --environment production --invalidateCDN true --maxDeletes -1

commit 7092b1fe3ed0b0d4f4d97c14051a1ee0bc3e2407
Author: Madis Peebo <madis@nevercode.io>
Date:   Wed Mar 4 15:47:30 2020 +0200

    fetch all history for correct last modified date

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index ba4f096..db0be6c 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -13,6 +13,7 @@ jobs:
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     steps:
       - uses: actions/checkout@v2
+        fetch-depth: 0
       - run: curl --location https://github.com/gohugoio/hugo/releases/download/v0.61.0/hugo_extended_0.61.0_Linux-64bit.tar.gz | tar -vxzO hugo > hugo && chmod a+x hugo
       - run: ./hugo --environment production --minify
       - run: ./hugo deploy --environment production --invalidateCDN true --maxDeletes -1

commit f9fb9b4b795361984961465023e47a731d9b422e
Author: Bassam <Bassam.Mednini.1997@gmail.com>
Date:   Wed Mar 4 10:01:10 2020 +0100

    Correction for git command (#59)
    
    The git command contains twice "your-username" but you need the username only at the beginning.

diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index 2865197..9bc5eb6 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -29,7 +29,7 @@ Pushing git tags from Codemagic to repository requires **write access** to the r
         then
           new_version=v1.0.$BUILD_NUMBER
           git tag $new_version
-          git push "https://your-username:$APP_PASSWORD_ENV_VARIABLE@your-git-service.com/your-username/your-repo.git" --tags
+          git push "https://your-username:$APP_PASSWORD_ENV_VARIABLE@your-git-service.com/your-repo.git" --tags
         fi
     Where:
 

commit f8d5d24566a3d8fbb518e4b119b1d76f2f9a2879
Author: madispp <madis@nevercode.io>
Date:   Tue Mar 3 15:16:35 2020 +0200

    fix typo

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 3e8cfff..1fcd1cc 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -63,7 +63,7 @@ Here you'll find some of the read-only environment variables explained.
 | FCI_KEYSTORE_PATH        | Path of the file in our VM                                                                                      |
 | FCI_ARTIFACT_LINKS       | Information about generated build artifacts that is available in post-publishing step. Read more about it below. |
 
-`$FCI_ARTIFACT_LINKS` environment variable value is a JSON encoded list in the follwoing form: 
+`$FCI_ARTIFACT_LINKS` environment variable value is a JSON encoded list in the following form: 
 
     [
         {

commit 3771a47f835c0ffe69c95106c1b73176935f8a79
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Feb 27 10:37:22 2020 +0200

    Support yaml for custom repos

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 752a6bc..76b2167 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -14,7 +14,6 @@ The YAML feature is currently in *beta* and has the following limitations:
 
 * Exporting configuration from UI is supported for Flutter-based Android, iOS and web apps.
 * The exported configuration is not identical to the settings in UI and lacks the configuration for some features, such as **Stop build if tests fail** and publishing to Codemagic Static Pages.
-* YAML configuration is not yet available for apps from custom sources.
 
 {{</notebox>}}
 
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index eb4b594..0182db0 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -7,11 +7,7 @@ weight: 4
 You can add apps from public or private Git-based repositories. 
 
 {{<notebox>}}
-Note that apps added from custom sources have some limitations.
-
-* Webhooks for automatic build triggering need to be [set up manually](../building/automatic-build-triggering/#webhooks).
-* Using `codemagic.yaml` for build configuration is not supported yet.  
-
+* Note that webhooks for automatic build triggering need to be [set up manually](../building/automatic-build-triggering/#webhooks).
 {{</notebox>}}
 
 ## Connecting repository via HTTP/HTTPS

commit 82754ea343d1570a388812ed387dfa9108e27d1b
Author: Madis Peebo <madis@nevercode.io>
Date:   Thu Feb 20 12:34:30 2020 +0200

    add explicit env arguments to deployment

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 781b62b..ba4f096 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -11,9 +11,8 @@ jobs:
     env:
       AWS_ACCESS_KEY_ID: AKIAVIULH47FJUBBUV5U
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
-      HUGO_ENV: PRODUCTION
     steps:
       - uses: actions/checkout@v2
       - run: curl --location https://github.com/gohugoio/hugo/releases/download/v0.61.0/hugo_extended_0.61.0_Linux-64bit.tar.gz | tar -vxzO hugo > hugo && chmod a+x hugo
-      - run: ./hugo --minify
-      - run: ./hugo deploy --invalidateCDN true --maxDeletes -1
+      - run: ./hugo --environment production --minify
+      - run: ./hugo deploy --environment production --invalidateCDN true --maxDeletes -1

commit 13d152c67e32197de8d2b15c8f342eb24c177090
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Tue Feb 18 12:04:25 2020 +0200

    upload new ssh key

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 259e740..eb4b594 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -50,6 +50,8 @@ Your app will be then listed on the Applications page and you can immediately st
 
 Your app will be then listed on the Applications page and you can immediately start running builds.
 
+{{<notebox>}}If you need to update the SSH key, you can upload a new one in **App settings > Repository settings > Update SSH key**.{{</notebox>}}
+
 ## Repositories behind firewall
 
 To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:

commit fc91222cdebdbdbb5375e78ce43d50611bd5be2c
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Mon Feb 17 15:32:05 2020 +0200

    Advanced configuration is moved to sidebar (#55)
    
    * changed docs as advanced configuration is moved to sidebar and not in beta anymore
    
    * fixed wording in navigation
    
    * returned beta

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 8897ab0..752a6bc 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -23,10 +23,9 @@ The YAML feature is currently in *beta* and has the following limitations:
 You can get started with YAML easily if you have an existing project set up on Codemagic. 
 
 1. Navigate to your app settings.
-2. Expand the **Advanced configuration (beta)** tab.
-3. Click **Download configuration** and save the generated `codemagic.yaml` file to a suitable location. 
+2. Click **Download configuration** on the right sidebar in the **Configuration as code (beta)** section.
 
-Note that in order to use the file for build configuration on Codemagic, it has to be committed to your repository. The name of the file must be `codemagic.yaml` and it must be located in the root directory of the project. 
+Note that in order to use the file for build configuration on Codemagic, it has to be committed to your repository. The name of the file must be `codemagic.yaml` and it must be located in the root directory of the repository.
 
 ## Encrypting sensitive data
 
@@ -34,10 +33,11 @@ During the export, Codemagic automatically encrypts the secret environment varia
 
 If you wish to add new environment variables to the YAML file, you can encrypt them via Codemagic UI. 
 
-1. In your app settings > Advanced configuration (beta), click **Encrypt environment variables**.
-2. Paste the value of the variable in the field or upload it as a file.
-3. Click **Encrypt**. 
-4. Copy the encrypted value and paste it to the configuration file.
+1. Navigate to your app settings.
+2. Click **Encrypt environment variables** on the right sidebar in the **Configuration as code (beta)** section.
+3. Paste the value of the variable in the field or upload it as a file.
+4. Click **Encrypt**. 
+5. Copy the encrypted value and paste it to the configuration file.
 
 An example of an encrypted value:
 

commit d699e0c25b5fb2b994b343c862d93590638417e3
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon Feb 17 11:07:31 2020 +0200

    base image update (#56)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 4339f2d..e7f601e 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -11,9 +11,9 @@ weight: 2
 
 ## System
 
-- System version `macOS 10.14.6 (18G2022)`
-- Kernel version `Darwin 18.7.0`
-- Disk `322GB (Free Space: 46GB)`
+- System version `macOS 10.15.3 (19D76)`
+- Kernel version `Darwin 19.3.0`
+- Disk `322GB (Free Space: 49GB)`
 
 ## Pre-installed tools
 
@@ -22,16 +22,16 @@ weight: 2
 - curl
 - dart `2.7.1`
 - docker `19.03.5`
-- fastlane `2.140.0`
+- fastlane `2.141.0`
 - firebase `7.6.2`
 - flutter `1.12.13+hotfix.8 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.25.0`
 - gradle `5.5.1`
-- homebrew `2.2.4`
+- homebrew `2.2.5`
 - jq
 - node `12.14.0`
-- npm `6.13.6`
+- npm `6.13.7`
 - python `2.7.17`
 - python3 `3.7.6`
 - ruby `2.6.5p114`
@@ -40,7 +40,7 @@ weight: 2
 - tar
 - unzip
 - wget
-- yarn `1.21.1`
+- yarn `1.22.0`
 - zip
 
 ## Xcode 11.3.1 (11C505)
@@ -53,9 +53,6 @@ With Xcode `11.3.1` build version `11C505` the following runtimes and devices ar
 
 ### Runtimes
 
-- iOS 10.0
-- iOS 10.1
-- iOS 10.2
 - iOS 10.3
 - iOS 11.0
 - iOS 11.1
@@ -129,6 +126,7 @@ With Xcode `11.3.1` build version `11C505` the following runtimes and devices ar
 
 ## Other Xcode versions
 
+- 11.4 (11N111s) `/Applications/Xcode-11.4.app`
 - 11.2.1 (11B500) `/Applications/Xcode-11.2.1.app`
 - 11.1 (11A1027) `/Applications/Xcode-11.1.app`
 - 11.0 (11A420a) `/Applications/Xcode-11.app`
@@ -136,5 +134,4 @@ With Xcode `11.3.1` build version `11C505` the following runtimes and devices ar
 - 10.2.1 (10E1001) `/Applications/Xcode-10.2.app`
 - 10.1 (10B61) `/Applications/Xcode-10.1.app`
 - 10.0 (10A255) `/Applications/Xcode-10.app`
-- 9.4.1 (9F2000) `/Applications/Xcode-9.4.app`
 

commit 8a78f2a95b7020b6508a4a36711355de3d43deec
Author: Stanislav Bondarenko <bondarenko.stanislav.96@gmail.com>
Date:   Thu Feb 13 13:04:00 2020 +0200

    removed default cache path (#54)

diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 7d4c759..0cd51f3 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -6,11 +6,7 @@ weight: 10
 
 You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
 
-By default, Codemagic offers to cache the following path:
-
-`$FCI_BUILD_DIR/build`
-
-You can add other paths to be cached, for example:
+You can add paths to be cached, for example:
 
 | **Path**                                    | **Description**                                  |
 | ------------------------------------------- | ------------------------------------------------ |

commit e87883e54a7632717722dc4b90f28c9d98a777d8
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Thu Feb 13 12:45:58 2020 +0200

    adopt example for projects not in the root folder (#53)
    
    * Update load-firebase-configuration.md
    
    * Update load-firebase-configuration.md
    
    * Update load-firebase-configuration.md
    
    Co-authored-by: rimanteval <41963508+rimanteval@users.noreply.github.com>

diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index 651f90b..99a0727 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -11,10 +11,12 @@ Instead of committing the Firebase config files to your repository, you can uplo
 
         #!/usr/bin/env sh
 
-        set -e # exit on first failed commandset
+        set -e # exit on first failed command
+        
+        PROJECT_ROOT=$FCI_BUILD_DIR/myproject           # ADD YOUR PROJECT FOLDER PATH HERE
 
-        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
-        echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $PROJECT_ROOT/android/app/google-services.json
+        echo $IOS_FIREBASE_SECRET | base64 --decode > $PROJECT_ROOT/ios/Runner/GoogleService-Info.plist
 
 {{<notebox>}}
 

commit 33c6171ba687e45131744b9a3bb978a84425deef
Author: Daniel Schroeder <me@danielschroeder.org>
Date:   Wed Feb 12 13:18:49 2020 -0800

    Fixed broken link (#51)
    
    * fixed broken link in custom scripts doc page
    
    * Update link title to Configuration as code (YAML)

diff --git a/content/building/custom-scripts.md b/content/building/custom-scripts.md
index 6746a30..6e32ca9 100644
--- a/content/building/custom-scripts.md
+++ b/content/building/custom-scripts.md
@@ -7,7 +7,7 @@ You can customize the Codemagic workflow by running custom scripts before and af
 
 In the UI, the spots for injecting custom scripts are marked by **'+'** signs between the sections. Click on **'+'** to expand the section and add your script in the appropriate section. You can run custom scripts in post-clone, pre-test, post-test, pre-build, post-build, pre-publish and post-publish phases. The scripts can be run in any language, simply define the language with a shebang line. For example, `#!/usr/bin/env python`.
 
-Using `codemagic.yaml` for build configuration allows for even greater customization of builds. Read more about it in [Advanced configuration with YAML](./yaml.md).
+Using `codemagic.yaml` for build configuration allows for even greater customization of builds. Read more about it in [Configuration as code (YAML)](./yaml/).
 
 {{<notebox>}}
 You can see some sample scripts in the **Custom scripts examples** category.

commit eb9c7e026917d483fa26567031f9ed159963d5e1
Author: Priit Lätt <priit@nevercode.io>
Date:   Wed Feb 12 15:03:20 2020 +0200

    Update Flutter version (#52)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 9ede84f..4339f2d 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -24,7 +24,7 @@ weight: 2
 - docker `19.03.5`
 - fastlane `2.140.0`
 - firebase `7.6.2`
-- flutter `1.12.13+hotfix.7 ($HOME/programs/flutter)`
+- flutter `1.12.13+hotfix.8 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.25.0`
 - gradle `5.5.1`

commit 5fe5cc13fa3b1b0ee14acf6c7ce3cbd863c721c5
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Wed Feb 12 14:00:29 2020 +0200

    Drop requiring custom ios scheme env var

diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
deleted file mode 100644
index 579c9f5..0000000
--- a/content/building/specifying-custom-ios-scheme.md
+++ /dev/null
@@ -1,18 +0,0 @@
----
-title: Specifying custom iOS scheme
-weight: 7
----
-
-By default, Codemagic builds the iOS app using the `Runner` scheme. You can specify a custom iOS scheme for the `xcodebuild` command with the `FCI_FLUTTER_SCHEME` environment variable. A different iOS scheme can be specified for each workflow.
-
-For example, to change default scheme to custom scheme named `Staging`
-
-![](../uploads/custom_ios_scheme.png)
-
-{{<notebox>}}
-
-Don't forget to click **Save** after adding the variable.
-
-{{</notebox>}}
-
-You can read more about environment variables and how to use them in the [Environment variables](https://docs.codemagic.io/building/environment-variables/) section.

commit af3c495ffafd170f70de22dccb2b8219ef80532f
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Tue Feb 11 13:25:14 2020 +0200

    FCI_ARTIFACT_LINKS (#50)
    
    * FCI_ARTIFACT_LINKS
    
    * Update content/building/environment-variables.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    * Update content/building/environment-variables.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    * Update content/building/environment-variables.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    * Update content/building/environment-variables.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    * Formatting
    
    Co-authored-by: Priit Lätt <lattpriit@gmail.com>

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 1ebd50a..3e8cfff 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -61,3 +61,17 @@ Here you'll find some of the read-only environment variables explained.
 | FCI_KEY_PASSWORD         | Password of Android key as configured in the UI                                                                 |
 | FCI_KEY_ALIAS            | Alias of the key as configured in the UI                                                                        |
 | FCI_KEYSTORE_PATH        | Path of the file in our VM                                                                                      |
+| FCI_ARTIFACT_LINKS       | Information about generated build artifacts that is available in post-publishing step. Read more about it below. |
+
+`$FCI_ARTIFACT_LINKS` environment variable value is a JSON encoded list in the follwoing form: 
+
+    [
+        {
+            "name": "Codemagic_Release.ipa",
+            "type": "ipa",
+            "url": "https://api.codemagic.io/artifacts/2e7564b2-9ffa-40c2-b9e0-8980436ac717/81c5a723-b162-488a-854e-3f5f7fdfb22f/Codemagic_Release.ipa",
+            "md5": "d2884be6985dad3ffc4d6f85b3a3642a",
+            "versionName": "1.0.2",
+            "bundleId": "io.codemagic.app"
+        }
+    ]                                                                                   

commit 1b83c2148fed86f90e839d26b2234355e9f12899
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Feb 11 13:15:41 2020 +0200

    ios yaml and CLI tools release notes

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index d8fea2b..3000beb 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,6 +4,16 @@ title: Release notes
 weight: 1
 ---
 
+## February 2020
+
+### Codemagic CLI tools
+
+We have developed a variety of CLI utilities to assist with building, code signing and publishing apps, collectively known as Codemagic CLI tools: https://github.com/codemagic-ci-cd/cli-tools. The CLI tools are open source, so you are welcome to install them locally as well as share feedback and contribute.
+
+### YAML for iOS
+
+In addition to using `codemagic.yaml` for building Android and web projects, you can now use it build, code sign and publish iOS apps. Read more about how to get started with YAML [here](../building/yaml).
+
 ## January 2020
 
 ### Rescan application

commit 470071e12fc74f06fcc67d6963d0decae0004306
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Tue Feb 11 12:45:30 2020 +0200

    Ios yaml (#49)
    
    * Add iOS
    
    * Update examples
    
    * Formatting
    
    * Revise based on feedback
    
    * Update content/building/yaml.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    * Update content/building/yaml.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    * Update content/building/yaml.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    * Update content/building/yaml.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    * Update content/building/yaml.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    * Update content/building/yaml.md
    
    Co-Authored-By: Priit Lätt <priit@nevercode.io>
    
    * Revisions based on feedback
    
    * Move info about custom scripts
    
    * Remove publishing to static pages
    
    Co-authored-by: Priit Lätt <lattpriit@gmail.com>

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 80068e1..8897ab0 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -12,9 +12,9 @@ weight: 1
 
 The YAML feature is currently in *beta* and has the following limitations:
 
-* Only Android and web app configuration can be exported. The commands for building and code signing iOS apps are currently not generated and you cannot configure iOS publishing in YAML yet.
-* The exported configuration is not identical to the settings in UI and lacks the configuration for some features, such as **Stop build if tests fail**.
-* YAML configuration cannot be used with apps from custom sources.
+* Exporting configuration from UI is supported for Flutter-based Android, iOS and web apps.
+* The exported configuration is not identical to the settings in UI and lacks the configuration for some features, such as **Stop build if tests fail** and publishing to Codemagic Static Pages.
+* YAML configuration is not yet available for apps from custom sources.
 
 {{</notebox>}}
 
@@ -77,9 +77,10 @@ This is the skeleton structure of `codemagic.yaml`.
           vars:
             PUBLIC_ENV_VAR: "value here"
           flutter: stable
+          xcode: latest
         cache:
           cache_paths:
-            - $FCI_BUILD_DIR/build
+            - ~/.pub-cache
         triggering:
           events:
             - push
@@ -108,24 +109,75 @@ You can use `codemagic.yaml` to define several workflows for building a project.
         triggering:
         branch_patterns:
         scripts:
-        publishing:
         artifacts:
+        publishing:
 
 The main sections in each workflow are described below.
 
 ### Environment
 
-`environment:` Contains your environment variables and enables to specify the version of Flutter used for building. Make sure to [encrypt the values](#encrypting-sensitive-data) of variables that hold sensitive data. 
+`environment:` Contains your environment variables and enables to specify the version of Flutter used for building. This is also where you can add credentials and API keys required for code signing. Make sure to [encrypt the values](#encrypting-sensitive-data) of variables that hold sensitive data. 
 
     environment:
-      vars:                 # Define your environment variables here
+      vars:             # Define your environment variables here
         PUBLIC_ENV_VAR: "value here"
         SECRET_ENV_VAR: Encrypted(...)
+        
+        # Android code signing
         CM_KEYSTORE: Encrypted(...)
         CM_KEYSTORE_PASSWORD: Encrypted(...)
         CM_KEY_ALIAS_PASSWORD: Encrypted(...)
         CM_KEY_ALIAS_USERNAME: Encrypted(...)
-      flutter: stable       # Define the channel name or version
+        
+        # iOS automatic code signing
+        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
+        APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(...)
+        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
+        CERTIFICATE_PRIVATE_KEY: Encrypted(...)
+
+        # iOS manual code signing
+        CM_CERTIFICATE: Encrypted(...)
+        CM_CERTIFICATE_PASSWORD: Encrypted(...)
+        CM_PROVISIONING_PROFILE: Encrypted(...)
+
+      flutter: stable   # Define the channel name or version (e.g. v1.13.4)
+      xcode: latest     # Define latest, edge or version (e.g. 11.2)
+
+#### Setting up code signing for iOS
+
+In order to use **automatic code signing** and have Codemagic manage signing certificates and provisioning profiles on your behalf, you need to configure API access to App Store Connect and define the environment variables listed below.
+
+* `APP_STORE_CONNECT_PRIVATE_KEY`
+
+  It is recommended to create a dedicated App Store Connect API key for Codemagic in [App Store Connect](https://appstoreconnect.apple.com/access/api).
+
+  1. Log in to App Store Connect and navigate to **Users and Access > Keys**.
+  2. Click on the '+' sign to generate a new API key. 
+  3. Enter the name for the key and select an access level (`Admin` or `Developer`).
+  4. Click **Generate**.
+  5. As soon as the key is generated, you can see it added in the list of active keys. Click **Download API Key** to save the private key. Note that the key can only be downloaded once.
+
+* `APP_STORE_CONNECT_KEY_IDENTIFIER`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Key ID** of the key.
+
+* `APP_STORE_CONNECT_ISSUER_ID`
+
+  In **App Store Connect > Users and Access > Keys**, this is the **Issuer ID** displayed above the table of active keys.
+
+* `CERTIFICATE_PRIVATE_KEY`
+
+  A RSA 2048 bit private key to be included in the signing certificate. Read more about it [here](https://help.apple.com/xcode/mac/current/#/dev1c7c2c67d).
+
+{{<notebox>}}
+Alternatively, each property can be specified in the [scripts](#scripts) section as a command argument to programs with dedicated flags. See the details [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch%E2%80%91signing%E2%80%91files.md#--issuer-idissuer_id). In that case, the environment variables will be fallbacks for missing values in scripts.
+{{</notebox>}}
+
+In order to use **manual code signing**, [encrypt](https://docs.codemagic.io/building/yaml/#encrypting-sensitive-data) your signing certificate, the certificate password (if the certificate is password-protected) and the provisioning profile, and set the encrypted values to the following environment variables:
+
+    CM_CERTIFICATE: Encrypted(...)
+    CM_CERTIFICATE_PASSWORD: Encrypted(...)
+    CM_PROVISIONING_PROFILE: Encrypted(...)
 
 ### Cache
 
@@ -133,8 +185,8 @@ The main sections in each workflow are described below.
 
     cache:
       cache_paths:
-        - $FCI_BUILD_DIR/build
-        - $FCI_BUILD_DIR/build/dir/to/cache
+        - ~/.pub-cache
+        - ...
 
 ### Triggering
 
@@ -160,7 +212,11 @@ A branch pattern can match the name of a particular branch, or you can use wildc
 
 ### Scripts
 
-`scripts:` Contains the scripts and commands to be run during the build. This is where you can specify the commands to test, build and code sign your project. Below is an example for building a Flutter app in debug mode for Android.
+`scripts:` Contains the scripts and commands to be run during the build. This is where you can specify the commands to test, build and code sign your project. 
+
+#### Building for Android
+
+Below is an example of building a Flutter app for Android.
 
     scripts:
       - |
@@ -181,6 +237,72 @@ A branch pattern can match the name of a particular branch, or you can use wildc
       - flutter test
       - flutter build apk --release
 
+**Note on building Android app bundles**
+
+If your app settings in Codemagic have building Android app bundles enabled, we will automatically include a script for generating a signed `app-universal.apk` during the YAML export. If you're creating a YAML file from a scratch, add the script below to receive this file:
+
+    # generate signed universal apk with user specified keys
+    universal-apk generate \
+          --ks /tmp/keystore.keystore \
+          --ks-pass $CM_KEYSTORE_PASSWORD \
+          --ks-key-alias $CM_KEY_ALIAS_USERNAME \
+          --key-pass $CM_KEY_ALIAS_PASSWORD \
+          --pattern 'build/**/outputs/**/*.aab'
+  
+#### Building for iOS
+
+{{<notebox>}}
+Codemagic uses the [app-store-connect](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md) utility for generating and managing certificates and provisioning profiles and performing code signing.
+{{</notebox>}}
+
+Below is an example of building a Flutter app for iOS with automatic code signing. 
+
+    scripts:
+          - flutter packages pub get
+          - flutter analyze
+          - flutter test
+          - find . -name "Podfile" -execdir pod install \;
+          - keychain initialize
+          - app-store-connect fetch-signing-files "io.codemagic.app" \  # Fetch signing files for specified bundle ID
+                --type IOS_APP_DEVELOPMENT \  # Specify provisioning profile type*
+                --create  # Allow creating resources if existing are not found.
+          - keychain add-certificates
+          - flutter build ios --debug --flavor dev --no-codesign
+          - xcode-project use-profiles
+          - xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
+
+* The available provisioning profile types are described [here](https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch%E2%80%91signing%E2%80%91files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store).
+
+Below is an example of building a Flutter app for iOS with manual code signing.
+
+    scripts:
+      - flutter packages pub get
+      - flutter analyze
+      - flutter test
+      - find . -name "Podfile" -execdir pod install \;
+      - keychain initialize
+      - |
+        # set up provisioning profiles
+        PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
+        mkdir -p "$PROFILES_HOME"
+        PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
+        echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
+        echo "Saved provisioning profile $PROFILE_PATH"
+      - |
+        # set up signing certificate
+        echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
+
+        # when using a password-protected certificate
+        keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
+        # when using a certificate that is not password-protected
+        keychain add-certificates --certificate /tmp/certificate.p12
+
+      - flutter build ios --debug --flavor dev --no-codesign
+      - xcode-project use-profiles
+      - xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
+
+#### Running custom scripts
+
 You can run scripts in languages other than shell (`sh`) by defining the languge with a shebang line or by launching a script file present in your repository.
 
 For example, you can write a build script with Dart like this:
@@ -193,33 +315,18 @@ For example, you can write a build script with Dart like this:
             print('Hello, World!');
           }
 
-**Note on building Android app bundles**
-
-If your app settings in Codemagic have building Android app bundles enabled, we will automatically include a script for generating a signed `app-universal.apk` during the YAML export. This file is required for publishing to Google Play. If you're creating a YAML file from a scratch, add the script below to receive this file:
-
-    # fetch codemagic helper scripts
-    rm -rf ~/codemagic-build-scripts
-    git clone https://github.com/NevercodeHQ/codemagic-build-scripts.git ~/codemagic-build-scripts/ --depth 1
-    
-    # generate signed universal apk with user specified keys
-    ~/codemagic-build-scripts/android/generate-universal-apks \
-      --ks /tmp/keystore.keystore \
-      --ks-pass $CM_KEYSTORE_PASSWORD \
-      --ks-key-alias $CM_KEY_ALIAS_USERNAME \
-      --key-pass $CM_KEY_ALIAS_PASSWORD \
-      --pattern 'build/**/outputs/**/*.aab'
-  
 ### Artifacts
 
 `artifacts:` Configure the paths and names of the artifacts you would like to use in the following steps, e.g. for publishing, or have available for download on the build page. All paths are relative to the clone directory, but absolute paths are supported as well. You can also use environment variables in artifact patterns.
 
-
     artifacts:
       - build/**/outputs/**/*.apk                   # relative path for a project in root directory
+      - subfolder_name/build/**/outputs/**/*.apk    # relative path for a project in subfolder
       - build/**/outputs/**/*.aab
       - build/**/outputs/**/mapping.txt
+      - build/ios/ipa/*.ipa
+      - /tmp/xcodebuild_logs/*.log
       - flutter_drive.log
-      - subfolder_name/build/**/outputs/**/*.apk    # relative path for a project in subfolder
 
 * The pattern can match several files or folders. If it picks up files or folders with the same name, the top level file or folder name will be suffixed with `_{number}`.
 * If one of the patterns includes another pattern, duplicate artifacts are not created.
@@ -227,18 +334,19 @@ If your app settings in Codemagic have building Android app bundles enabled, we
 
 ### Publishing
 
-`publishing:` For every successful build, you can publish the generated artifacts to external services. The available integrations currently are email, Slack, Google Play and Codemagic Static Pages.
+`publishing:` For every successful build, you can publish the generated artifacts to external services. The available integrations currently are email, Slack, Google Play, App Store Connect and Codemagic Static Pages.
 
     publishing:
       email:
         recipients:
           - name@example.com
       slack:
-        channel: '#slack-test'
+        channel: '#channel-name'
         notify_on_build_start: true
       google_play:                        # For Android app
         credentials: Encrypted(...)
         track: alpha
-      static_page:                        # For web app
-        subdomain: my-subdomain
-
+      app_store_connect:                  # For iOS app
+        app_id: '...'                     # App's unique identifier in App Store Connect
+        apple_id: name@example.com        # Email address used for login
+        password: Encrypted(...)          # App-specific password

commit 985dcaa3edcae37d083a21a906f2c2235189efbc
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Fri Feb 7 10:16:03 2020 +0200

    Rewrite iOS code signing (#47)
    
    * first update
    
    * Update screenshots
    
    * Update notebox
    
    * Update
    
    * Minor revision

diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 741b8b5..c403455 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -4,21 +4,28 @@ title: iOS code signing
 weight: 1
 ---
 
-Code signing is required for installing your iOS app on real devices and publishing it to App Store. It enables to identify who developed the app and ensure that all the changes to the app come from you or your team.
+Code signing is required by Apple for integrating app services, installing your iOS app on real devices, and for uploading it to App Store Connect so that it can be distributed through TestFlight or App Store. It enables to identify who developed the app and ensure that all the changes to the app come from you or your team.
 
-To receive a signed `.ipa` file of your app on Codemagic, you need to set up code signing. When you build without code signing, you will receive only `Runner.app` that runs on simulators only.
+To receive a signed `.ipa` file of your app on Codemagic, you need to set up code signing.
 
-## Requirements
+## Prerequisites
 
-Before you can start signing or distributing your app, you need to [enroll as an iOS developer](https://developer.apple.com/programs/enroll/) and [register an app ID](https://developer.apple.com/account/ios/identifier/bundle/create) in Apple Developer portal. Then, you need a **signing certificate** and a **provisioning profile** to sign the build.
+Before you can start signing or distributing your app, there are a few things you need.
 
-{{<notebox>}}  
-With our **automatic code signing** feature, Codemagic will create both the certificate and the provisioning profile for you on your behalf. When using our **manual code signing** method, you will need to first export the certificate and the provisioning profile in order to upload them, see [how to export the certificate and the provisioning profile](#exporting-signing-certificate-and-provisioning-profile).  
-{{</notebox>}}
+* [Apple Developer Program](https://developer.apple.com/programs/enroll/) membership
+* An [app ID](https://developer.apple.com/account/resources/identifiers/bundleId/add/) for your iOS app in Apple Developer portal 
+* A **signing certificate** (`Personal Information Exchange, .p12`)
+* A **provisioning profile** (`.mobileprovision`)
+
+The signing certificates — development or distribution — help to identify who built the code. 
 
-The certificate is issued by Apple and enables to identify who developed the code. Codemagic expects your certificate to be in **Personal Information Exchange (.p12)** format.
+A provisioning profile — development or distribution — contains information about the app ID, the devices on which the app can be installed and the certificates that can be used for signing the app. Note that if your app contains app extensions, you need an additional provisioning profile for each app extension.
 
-A provisioning profile contains information about the app ID, the devices on which the app can be installed and the certificates that can be used for signing the app. There are separate certificates and provisioning profiles for development and distribution. Note that if your app contains app extensions, you need an additional provisioning profile for each app extension. The provisioning profile must have the **.mobileprovision** extension.
+{{<notebox >}} 
+With **automatic code signing**, Codemagic will create both the certificate and the provisioning profile for you on your behalf without requiring a Mac.
+
+With **manual code signing**, you need to upload the signing files manually.
+{{</notebox>}}
 
 For successful signing, the certificate and the provisioning profile must match in the following way:
 
@@ -32,70 +39,72 @@ In short, the purpose of the different provisioning profiles is the following:
 
 ## Automatic code signing
 
-With the automatic code signing feature, Codemagic will generate a signing certificate and a matching provisioning profile for you in-app and use them for code signing during the build. Depending on the selected provisioning profile type, Codemagic will create a development or a distribution certificate and a development, Ad hoc or App store provisioning profile. The provisioning profile (except for Distribution) will include all the devices you have registered on your Apple Developer account.
+Based on the selected provisioning profile type, Codemagic will create a development or a distribution certificate and a development, Ad hoc or App store provisioning profile. The provisioning profile (except for Distribution) will include all the devices you have registered on your Apple Developer account.
 
 {{<notebox>}}
-**Apple Developer Portal integration**
-
-To use automatic code signing, you are required to enable the **Developer Portal** integration in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to convneniently use the same Apple Developer Portal credentials for automatic code signing across all projects and workflows.
-
-If you have previously set up workflow-specific credentials, you can remove them in the iOS automatic code signing settings after setting up the integration.
+To use automatic code signing, you are required to enable the **Apple Developer portal** integration.
 {{</notebox>}}
 
 ### Enabling the Apple Developer Portal integration
 
+Apple Developer Portal integration can be enabled in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to convneniently use the same Apple Developer Portal credentials for automatic code signing across all projects and workflows.
+
 1. In the list of available integrations, click the **Connect** button for **Developer Portal**.
-2. Enter your **Apple ID** and **password**.
-3. Click **Save**. Codemagic will attempt to establish a connection to Apple Developer Portal and will ask for a verification code for two-factor authentication or two-step verification. **Note** that if you have set up several trusted phone numbers, you can select a phone number for receiving the verification code.
-4. Enter the verification code that was sent to you and click **Save** one more time. On successful authentication, the Apple Developer Portal integration will be enabled.
+2. Enter your **Apple ID** (Apple Developer Portal username) and **password**.
+3. Click **Save**. Codemagic will attempt to establish a connection to Apple Developer Portal and will ask for a verification code for two-factor authentication or two-step verification. 
+    >If you have set up several trusted phone numbers, select the phone number to which the verification code will be sent.
+4. Enter the verification code and click **Save** one more time. On successful authentication, the Apple Developer Portal integration will be enabled.
+
+### Setting up automatic code signing
 
-### Setting up automatic code signing for a workflow
+1. Go to **App settings > Publish > iOS code signing**.
+2. Select **Automatic** as the code signing method. If you haven't enabled the Apple Developer Portal integration yet, you will be asked to enable it before you can continue configuration.
+3. If you belong to several Apple Developer teams, select the right team in the **Developer portal team** field.
+4. Select the **provisioning profile type** used for provisioning the build. Codemagic will automatically select or generate a matching certificate for code signing.
+7. Enter your app's **bundle identifier** (optional). By default, Codemagic looks for it from your `project.pbxproj` file. 
 
-1. Go to your **App settings**.
-2. Make sure that you have **Release** mode selected in **Build** settings.
-   ![Selecting Release mode in Build configuration](/uploads/build_configuration-1.png)
+    >Note that if your app contains app extensions, an additional provisioning profile is required for each extension. Codemagic will use the bundle identifier to find the relevant provisioning profiles. If your bundle identifier is `com.example.app`, the matching profiles are the ones with `com.example.app` and `com.example.app.*` as bundle identifier.
 
-3. In the **Publish** section, click on iOS code signing to expand this step.
-   ![Selecting iOS code signing in the Publish section](/uploads/publish_ioscodesigning-1.png)
+8. Finally, click **Save** to finish the setup.
 
-4. Select **Automatic** as the code signing method.
-   ![Automatic code signing setup for iOS](/uploads/2fa_ios_code_signing.png)
-5. Enter your **Apple ID** (Apple developer portal username) and **Apple developer portal password**.
-6. Then choose the **provisioning profile type**.
-7. You can also enter your app's **bundle identifier** (optional). By default, Codemagic detects it automatically from your repository.
-8. Finally, click **Save** to finish the setup. If your Apple developer account has two-step verification or two-step authentication enabled, you will be asked to enter your verification code in a popup and click **Save** again.
+{{< figure size="medium" src="../uploads/automatic_code_signing.png" caption="Automatic code signing setup" >}}
 
-As the next step, you can configure publishing to App Store Connect to distribute your signed app to testers or submit it for review.
+As the next step, you can [configure publishing to App Store Connect](./publishing/publish-app-artifacts-to-app-center) to distribute your app to testers via TestFlight or submit it to App Store.
 
 ## Manual code signing
 
-With the manual code signing method, you are required to upload the signing certificate and the matching provisioning profile to Codemagic in order to receive signed builds for the workflow at hand.
+With the manual code signing method, you are required to upload the signing certificate and the matching provisioning profile(s) to Codemagic in order to receive signed builds.
+
+>See how to [export certificates and provisioning profiles](#exporting-certificates-and-provisioning-profiles).
+
+### Setting up manual code signing
 
-1. In your App settings, navigate to the Publish section.
-2. Click on **iOS code signing** to expand this step.
-3. Select **Manual** as the code signing method.
-4. Upload your signing certificate (in `.p12` format) and provisioning profile (`.mobileprovision`). Note that if your app contains app extensions, you are required to upload an additional provisioning profile for each extension.
+1. Go to **App settings > Publish > iOS code signing**.
+2. Select **Manual** as the code signing method.
+3. Upload your signing certificate (in `.p12` format). If your certificate is password-protected, enter the **Certificate password**. 
+4. Upload your provisioning profile (`.mobileprovision`). Note that if your app contains app extensions, you are required to upload an additional provisioning profile for each extension.
 5. Click **Save** to finish the setup.
 
-{{< figure size="medium" src="../uploads/2019/03/manual_code_signing.PNG" caption="Manual code signing setup" >}}
+{{< figure size="medium" src="../uploads/manual_code_signing.png" caption="Manual code signing setup" >}}
 
-Codemagic will now create a signed `.ipa` file with every build. Note that you must also set up publishing to App Store Connect to distribute the app to the App Store.
+Codemagic will now create a signed `.ipa` file with every build. Note that you must also [set up publishing to App Store Connect](./publishing/publish-app-artifacts-to-app-center) to distribute the app via TestFlight or submit it to the App Store.
 
-## Exporting signing certificate and provisioning profile
+#### Exporting certificates and provisioning profiles
 
-You will need a Mac to generate the signing certificate.
+>If you don't have an existing certificate, you will have to first [generate the signing certificate](https://help.apple.com/xcode/mac/current/#/dev154b28f09) using Xcode.
 
 To export the signing certificate:
 
 1. Open **Keychain Access** by searching for it in Spotlight.
-2. Select **My Certificates** in the **Category** submenu on the left sidebar. The name of the certificate should start with **iPhone Developer** or **iPhone Distribution**.
-3. Select **File** > **Export Items** from the OSX menu bar.
-4. Save the certificate when prompted. Be sure to leave the file format filled as **Personal Information Exchange (.p12)** because saving the certificate with the **.cer** extension will not include your private key.
-   {{< figure size="medium" src="../uploads/2019/03/keychain_certificate.PNG" caption="" >}}
+2. Select **My Certificates** in the **Category** submenu on the left sidebar. 
+3. Locate your certificate. The name of the certificate should start with **iPhone Developer** or **iPhone Distribution**.
+3. Click on the certificate and select **File > Export Items** from the OSX menu bar.
+4. You are then prompted to save the certificate. Be sure to leave the file format field filled as `Personal Information Exchange (.p12)` because saving the certificate with the `.cer` extension will not include your private key.
 5. Enter the certificate export password when prompted (optional).
 
-You can manage your distribution profiles in [Apple Developer portal](https://developer.apple.com/account/ios/profile/profileList.action).
+To export the provisioning profile:
 
-1. In the Provisioning Profiles section, select the appropriate provisioning profile type.
-2. Click on the provisioning profile you would like to export and click **Download**.
-3. Save it to have it ready.
+1. Log in to Apple Developer portal.
+2. Navigate to **Certificates, Identifiers & Profiles > Profiles**.
+3. Select the provisioning profile you would like to export and click **Download**.
+4. Save it to have it ready.
diff --git a/content/uploads/2019/03/manual_code_signing.PNG b/content/uploads/2019/03/manual_code_signing.PNG
deleted file mode 100644
index b543544..0000000
Binary files a/content/uploads/2019/03/manual_code_signing.PNG and /dev/null differ
diff --git a/content/uploads/automatic_code_signing.png b/content/uploads/automatic_code_signing.png
new file mode 100644
index 0000000..64c0c2d
Binary files /dev/null and b/content/uploads/automatic_code_signing.png differ
diff --git a/content/uploads/manual_code_signing.png b/content/uploads/manual_code_signing.png
new file mode 100644
index 0000000..f239b7a
Binary files /dev/null and b/content/uploads/manual_code_signing.png differ

commit e28b0d6235fd73f35b52bcc327e3bbc489866f25
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Feb 6 11:44:39 2020 +0200

    Change wording

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 2f08aec..259e740 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -10,7 +10,8 @@ You can add apps from public or private Git-based repositories.
 Note that apps added from custom sources have some limitations.
 
 * Webhooks for automatic build triggering need to be [set up manually](../building/automatic-build-triggering/#webhooks).
-* Using `codemagic.yaml` for build configuration is currently not supported.  
+* Using `codemagic.yaml` for build configuration is not supported yet.  
+
 {{</notebox>}}
 
 ## Connecting repository via HTTP/HTTPS

commit 9dff7c504bef0b94b56e71ebc82a068cfc6b1e1c
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Feb 6 11:26:05 2020 +0200

    Adding apps from custom sources (#48)
    
    * Update clone URL information
    
    * Edit wording
    
    * Add http/https option
    
    * Fix URL

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 76eb103..2f08aec 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -4,33 +4,48 @@ title: Adding apps from custom sources
 weight: 4
 ---
 
-You can add apps from public or private Git-based repositories. This includes repositories requiring **SSH key authentication**. 
+You can add apps from public or private Git-based repositories. 
 
 {{<notebox>}}
 Note that apps added from custom sources have some limitations.
 
 * Webhooks for automatic build triggering need to be [set up manually](../building/automatic-build-triggering/#webhooks).
-* [Automatic builds](../building/automatic-build-triggering) are available on code push and tag creation but not on pull request creation or update.   
+* Using `codemagic.yaml` for build configuration is currently not supported.  
 {{</notebox>}}
 
-To add an app from custom source:
+## Connecting repository via HTTP/HTTPS
 
 1. Click **Add app from custom source** on the Applications page.
 
-    {{< figure size="" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
+    {{< figure size="medium" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
 
-2. Then, fill in all the required fields.
+2. Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Usually, the URL is in this format: `https://example.com/path/to/repository.git`.
 
-    {{< figure size="" src="../uploads/add-app-from-custom-source2.png" caption="" >}}
+    {{< figure size="medium" src="../uploads/add_app_nourl.png" caption="" >}}
 
-    * Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Depending on whether you're accessing a public or a private repo, choose either the HTTPS or SSH URL. The most common URL formats are as follows:
-    `https://example.com/username/repo.git` or ` git@example.com:username/repo.git `. 
+3. If it's a private repository that requires username and password for authentication, check **Private repository** and enter the **Username** and **Password**. Leave this option unchecked for public repositories.
 
-    * If a private key is required to access the repository or any private submodules in it, upload the **SSH private key** file.
+    {{< figure size="medium" src="../uploads/add_app_private.png" caption="" >}}
 
-    * If the SSH key is password-protected, you'll be also asked to enter the **SSH key password**.
+4. Click **Add app**.
 
-3. Click **Add app**.
+Your app will be then listed on the Applications page and you can immediately start running builds.
+
+## Connecting repository via SSH
+
+1. Click **Add app from custom source** on the Applications page.
+
+    {{< figure size="medium" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
+
+2. Enter the **Repository URL** for **cloning** the repository. Usually, the URL is in this format: ` git@example.com:username/repo.git `.
+
+    {{< figure size="medium" src="../uploads/add_app_nourl.png" caption="" >}}
+
+3. Upload the **SSH private key** file. If your key is password-protected, enter the **SSH key password**.
+
+    {{< figure size="medium" src="../uploads/add-app-from-custom-source2.png" caption="" >}}
+
+4. Click **Add app**.
 
 Your app will be then listed on the Applications page and you can immediately start running builds.
 
diff --git a/content/uploads/add_app_nourl.png b/content/uploads/add_app_nourl.png
new file mode 100644
index 0000000..ff0c0b0
Binary files /dev/null and b/content/uploads/add_app_nourl.png differ
diff --git a/content/uploads/add_app_private.png b/content/uploads/add_app_private.png
new file mode 100644
index 0000000..a9f2258
Binary files /dev/null and b/content/uploads/add_app_private.png differ

commit 8dc94c6a2454647bbb9574f00c32b427b1dacb87
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Feb 6 11:16:40 2020 +0200

    Change page name for yaml configuration

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 9629975..80068e1 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -1,5 +1,6 @@
 ---
-title: Advanced configuration with YAML
+title: Configuration as code (YAML)
+description: Customize the build and configure all your workflows in a single file.
 weight: 1
 ---
 

commit b5b90ef888a0b2288ff7ac126cf184fb1cc1fed6
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Wed Feb 5 12:43:06 2020 +0200

    Add missing quotes

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 3311304..9629975 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -74,7 +74,7 @@ This is the skeleton structure of `codemagic.yaml`.
         name: My workflow name
         environment:
           vars:
-            PUBLIC_ENV_VAR: value here
+            PUBLIC_ENV_VAR: "value here"
           flutter: stable
         cache:
           cache_paths:

commit 27054d3fbad9dcba2bc13ab46b2d50da51786536
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Wed Feb 5 12:39:37 2020 +0200

    Add missing quotes

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 7c28d8a..3311304 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -118,7 +118,7 @@ The main sections in each workflow are described below.
 
     environment:
       vars:                 # Define your environment variables here
-        PUBLIC_ENV_VAR: value here
+        PUBLIC_ENV_VAR: "value here"
         SECRET_ENV_VAR: Encrypted(...)
         CM_KEYSTORE: Encrypted(...)
         CM_KEYSTORE_PASSWORD: Encrypted(...)

commit 89a917e5e53410195053caf2afba5f6e54f204fa
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Wed Feb 5 11:17:57 2020 +0200

    Add custom scripts page

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index 816a15b..28b5340 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -1,7 +1,7 @@
 ---
 description: Access any private Git submodules or dependencies in Codemagic
 title: Accessing private repositories
-weight: 4
+weight: 5
 ---
 
 If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully.
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 98c77f9..edfbb81 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,6 +1,6 @@
 ---
 title: Build versioning
-weight: 10
+weight: 11
 ---
 
 If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using the `BUILD_NUMBER` read-only environment variable in **build arguments**.
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 5677236..ca45aad 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -1,6 +1,6 @@
 ---
 title: Building Android app bundles
-weight: 5
+weight: 6
 ---
 
 You can build your app in [Android app bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
diff --git a/content/building/building-for-desktop.md b/content/building/building-for-desktop.md
index c82f428..498e51d 100644
--- a/content/building/building-for-desktop.md
+++ b/content/building/building-for-desktop.md
@@ -1,7 +1,7 @@
 ---
 description: Build a Flutter app for desktop with Codemagic.
 title: Building for desktop
-weight: 8
+weight: 9
 ---
 
 You can use Codemagic to build Flutter desktop apps for macOS and Linux. Building Windows apps is not yet supported. 
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index 4236489..5e7e4bf 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -1,7 +1,7 @@
 ---
 description: Build a Flutter web app with Codemagic.
 title: Building for the web
-weight: 7
+weight: 8
 ---
 
 You can build, test and publish Flutter web apps with Codemagic.
diff --git a/content/building/custom-scripts.md b/content/building/custom-scripts.md
new file mode 100644
index 0000000..6746a30
--- /dev/null
+++ b/content/building/custom-scripts.md
@@ -0,0 +1,16 @@
+---
+title: Running custom scripts
+weight: 3
+---
+
+You can customize the Codemagic workflow by running custom scripts before and after the default build steps.
+
+In the UI, the spots for injecting custom scripts are marked by **'+'** signs between the sections. Click on **'+'** to expand the section and add your script in the appropriate section. You can run custom scripts in post-clone, pre-test, post-test, pre-build, post-build, pre-publish and post-publish phases. The scripts can be run in any language, simply define the language with a shebang line. For example, `#!/usr/bin/env python`.
+
+Using `codemagic.yaml` for build configuration allows for even greater customization of builds. Read more about it in [Advanced configuration with YAML](./yaml.md).
+
+{{<notebox>}}
+You can see some sample scripts in the **Custom scripts examples** category.
+{{</notebox>}}
+
+
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 20e95a5..7d4c759 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -1,7 +1,7 @@
 ---
 description: Store your dependencies on Codemagic for a faster build time.
 title: Dependency caching
-weight: 9
+weight: 10
 ---
 
 You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 212d9f6..1ebd50a 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -4,7 +4,7 @@ description:
   not want to store in the repository. You can also use Codemagic read-only environment
   variables to customize your builds.
 title: Environment variables
-weight: 3
+weight: 4
 ---
 
 Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
index 41f6cac..579c9f5 100644
--- a/content/building/specifying-custom-ios-scheme.md
+++ b/content/building/specifying-custom-ios-scheme.md
@@ -1,6 +1,6 @@
 ---
 title: Specifying custom iOS scheme
-weight: 6
+weight: 7
 ---
 
 By default, Codemagic builds the iOS app using the `Runner` scheme. You can specify a custom iOS scheme for the `xcodebuild` command with the `FCI_FLUTTER_SCHEME` environment variable. A different iOS scheme can be specified for each workflow.
diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
index fc1d9ef..dee0769 100644
--- a/content/getting-started/getting-started.md
+++ b/content/getting-started/getting-started.md
@@ -4,7 +4,7 @@ title: Setting up projects
 weight: 2
 ---
 
-Codemagic allows you to build, test and publish Flutter apps (Android, iOS, web, macOS, Linux), native Android and iOS apps, native apps containing Flutter modules, Flutter widgets and Flutter packages. Projects can be configured via GUI (Flutter projects only) or using [`codemagic.yaml`](../building/yaml) (all projects).
+Codemagic allows you to build, test and publish Flutter apps (Android, iOS, web, macOS, Linux), Flutter widgets, native Android and iOS apps and native apps containing Flutter modules. Projects can be configured via GUI (Flutter projects only) or using [`codemagic.yaml`](../building/yaml) (all projects).
 
 Upon login, Codemagic will automatically display the list of apps in the [connected repositories](./signup#connecting-several-repository-accounts). If you want to build an app that is not available through the account you signed up with, you can [add the app from custom source](./adding-apps-from-custom-sources).
 
@@ -28,7 +28,7 @@ As the build starts, you can monitor the build progress right in your browser an
 
 After the build has finished successfully, you will immediately have **artifacts** available for download which you will also receive on the email that was configured for the app repository.
 
-### Multiple projects in one repository
+## Multiple projects in one repository
 
 Codemagic supports monorepos and is able to detect multiple Flutter projects in a repository provided that each project has its `pubspec.yaml` file.
 

commit 808ac93945cb7e710f5c9e671379f3c80852fe9c
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Wed Feb 5 10:11:25 2020 +0200

    Rescan application

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 3c33cfc..d8fea2b 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -6,6 +6,10 @@ weight: 1
 
 ## January 2020
 
+### Rescan application
+
+Rescanning the application updates the repository settings in Codemagic. This is useful when you have moved or renamed your repository, moved the Flutter project inside the repository or renamed the folder containing the project. The **Rescan application** option is available in **App settings > Repository settings**. Additionally, you can now see the path of the `pubspec.yaml` file that is used for building in **App settings > Build > Project file path**.
+
 ### GitHub releases
 
 The Publish section in app settings now contains an integration with GitHub for publishing Android artifacts to a GitHub release. Publishing to GitHub happens only for successful builds triggered on tag creation and is unavailable for manual builds. Read more about GitHub releases here: https://help.github.com/en/github/administering-a-repository/about-releases.

commit 9771a557f10c9a540c8477a61a0f7ee2e9710c44
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Tue Feb 4 14:18:03 2020 +0200

    base image update (#46)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index a1084a8..9ede84f 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -13,27 +13,27 @@ weight: 2
 
 - System version `macOS 10.14.6 (18G2022)`
 - Kernel version `Darwin 18.7.0`
-- Disk `322GB (Free Space: 51GB)`
+- Disk `322GB (Free Space: 46GB)`
 
 ## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
 - cocoapods `1.8.4`
 - curl
-- dart `2.7.0`
+- dart `2.7.1`
 - docker `19.03.5`
-- fastlane `2.138.0`
+- fastlane `2.140.0`
 - firebase `7.6.2`
 - flutter `1.12.13+hotfix.7 ($HOME/programs/flutter)`
 - gem `3.0.3`
-- git `2.24.1`
+- git `2.25.0`
 - gradle `5.5.1`
-- homebrew `2.2.1`
+- homebrew `2.2.4`
 - jq
 - node `12.14.0`
-- npm `6.13.4`
+- npm `6.13.6`
 - python `2.7.17`
-- python3 `3.7.5`
+- python3 `3.7.6`
 - ruby `2.6.5p114`
 - ssh
 - sudo
@@ -43,13 +43,13 @@ weight: 2
 - yarn `1.21.1`
 - zip
 
-## Xcode 11.3 (11C29)
+## Xcode 11.3.1 (11C505)
 
 This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
 
 Xcode path: `/Applications/Xcode-11.3.app`
 
-With Xcode `11.3` build version `11C29` the following runtimes and devices are installed:
+With Xcode `11.3.1` build version `11C505` the following runtimes and devices are installed:
 
 ### Runtimes
 

commit 9b4f8eb0a27ae649a15cfa8364b0b416900f60ee
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Feb 4 11:19:13 2020 +0200

    add new features

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 17515d1..3c33cfc 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,6 +4,27 @@ title: Release notes
 weight: 1
 ---
 
+## January 2020
+
+### GitHub releases
+
+The Publish section in app settings now contains an integration with GitHub for publishing Android artifacts to a GitHub release. Publishing to GitHub happens only for successful builds triggered on tag creation and is unavailable for manual builds. Read more about GitHub releases here: https://help.github.com/en/github/administering-a-repository/about-releases.
+
+### Codemagic API key
+
+We have made Codemagic API key available from the UI, which will make integrating Codemagic to your workflows even easier. The key is available in **User settings > Integrations > Codemagic API**. Currently, the API key can be used to set up custom build triggers, read more about it [here](../building/automatic-build-triggering/#custom-build-triggers).
+
+### Transfer personal paid minutes to team
+
+You can now transfer all personal paid build minutes to your team account from user settings and team settings.
+Note that you will see the **Transfer** button only if you have any minutes to transfer and are part of a team.
+
+## December 2019
+
+### Mac Pro trial
+
+Codemagic now has Mac Pro build machines available for business plan users. To test out Mac Pros, all users and teams get 3 Mac Pro builds without any additional cost as a one-time offer. You can choose to run a build on a Mac Pro when starting build manually. 
+
 ## November 2019
 
 ### Make builds public

commit 86e6a1861d5ba31dd10590b43401aa5b94158d59
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Jan 31 14:57:58 2020 +0200

    Fix noteboxes

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index 079f7e3..816a15b 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -14,9 +14,9 @@ If your project requires accessing any private Git submodules or dependencies, y
         ...
         -----END OPENSSH PRIVATE KEY-----
 
-    {{% notebox %}}
+    {{<notebox>}}
 Note that the `-----END OPENSSH PRIVATE KEY-----` line needs to be followed by an empty line for the key to be usable.
-{{% /notebox %}}
+{{</notebox>}}
 
 All environment variables whose name has the suffix `_SSH_KEY` will be automatically added to the SSH agent and will be ready for use during the whole build process. Check the `Preparing build machine` step in build logs to verify that the key has been successfully added to the SSH agent.
 
diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 2b237b9..2d981a3 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -46,10 +46,10 @@ For accounts with sufficient permissions, Codemagic creates the webhooks necessa
 
 To set up a webhook for automatic build triggering on Codemagic, you must register the Codemagic **payload URL** in your repository settings and select Repository push, Branch push and PR merge events.
 
-{{% notebox %}}
+{{<notebox>}}
 The payload URL has the following format:  
 `https://api.codemagic.io/hooks/[appId]`
-{{% /notebox %}}
+{{</notebox>}}
 
 You can find your app ID in the browser URL after `app/` when you open the app on Codemagic: `https://codemagic.io/app/[appId]`
 
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 2b527b1..98c77f9 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -7,7 +7,7 @@ If you are going to publish your app to App Store Connect or Google Play, each u
 
 The `BUILD_NUMBER` read-only environment variable holds the total count of builds (including the ongoing build) for this project in Codemagic. In other words, if you have triggered 10 builds for some project in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`.
 
-{{% notebox %}} Please note that the number of builds in `BUILD_NUMBER` is counted separately for each workflow. {{% /notebox %}}
+{{<notebox>}} Please note that the number of builds in `BUILD_NUMBER` is counted separately for each workflow. {{</notebox>}}
 
 ## Incrementing app version
 
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 9fb0023..5677236 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -5,11 +5,11 @@ weight: 5
 
 You can build your app in [Android app bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
 
-{{% notebox %}}
+{{<notebox>}}
 
 Android app bundles are supported starting from Flutter v1.1.5.
 
-{{% /notebox %}}
+{{</notebox>}}
 
 Building an Android app bundle requires additional configuration as described in the sections below.
 
diff --git a/content/building/building-for-desktop.md b/content/building/building-for-desktop.md
index c19ddd8..c82f428 100644
--- a/content/building/building-for-desktop.md
+++ b/content/building/building-for-desktop.md
@@ -6,9 +6,9 @@ weight: 8
 
 You can use Codemagic to build Flutter desktop apps for macOS and Linux. Building Windows apps is not yet supported. 
 
-{{% notebox %}}
+{{<notebox>}}
 Read more about Flutter's desktop support and the required settings for enabling it in Flutter's wiki about [desktop shells](https://github.com/flutter/flutter/wiki/Desktop-shells).
-{{% /notebox %}}
+{{</notebox>}}
 
 ## Project structure requirements
 
@@ -25,10 +25,10 @@ Codemagic can detect your Flutter desktop project if it meets the following cond
 4. Select the build mode.
 5. Click **Save** to finish build configuration. You are now ready to run the build.
 
-{{% notebox %}}
+{{<notebox>}}
 * Note that if your project has any tests, you can enable them in **App settings > Test**.
 * Code signing for desktop apps is not yet supported.
-{{% /notebox %}}
+{{</notebox>}}
 
 ## Build artifacts
 
diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
index cf19e84..41f6cac 100644
--- a/content/building/specifying-custom-ios-scheme.md
+++ b/content/building/specifying-custom-ios-scheme.md
@@ -9,10 +9,10 @@ For example, to change default scheme to custom scheme named `Staging`
 
 ![](../uploads/custom_ios_scheme.png)
 
-{{% notebox %}}
+{{<notebox>}}
 
 Don't forget to click **Save** after adding the variable.
 
-{{% /notebox %}}
+{{</notebox>}}
 
 You can read more about environment variables and how to use them in the [Environment variables](https://docs.codemagic.io/building/environment-variables/) section.
diff --git a/content/building/yaml.md b/content/building/yaml.md
index 9d9cabd..7c28d8a 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -5,7 +5,7 @@ weight: 1
 
 `codemagic.yaml` is an advanced option for customizing the build and configuring all your workflows in a single file. The file can be committed to version control, and when detected in repository, will be used to configure the build instead of the settings in the UI.
 
-{{% notebox %}}
+{{<notebox>}}
 
 **Limitations**
 
@@ -15,7 +15,7 @@ The YAML feature is currently in *beta* and has the following limitations:
 * The exported configuration is not identical to the settings in UI and lacks the configuration for some features, such as **Stop build if tests fail**.
 * YAML configuration cannot be used with apps from custom sources.
 
-{{% /notebox %}}
+{{</notebox>}}
 
 ## Exporting current configuration as YAML
 
@@ -44,7 +44,7 @@ An example of an encrypted value:
 Encrypted(Z0FBQUFBQmRyY1FLWXIwVEhqdWphdjRhQ0xubkdoOGJ2bThkNmh4YmdXbFB3S2wyNTN2OERoV3c0YWU0OVBERG42d3Rfc2N0blNDX3FfblZxbUc4d2pWUHJBSVppbXNXNC04U1VqcGlnajZ2VnJVMVFWc3lZZ289)
 ```
 
-{{% notebox %}}Note that when the value is uploaded as a file, it is encoded to `base64`.{{% /notebox %}}
+{{<notebox>}}Note that when the value is uploaded as a file, it is encoded to `base64`.{{</notebox>}}
 
 Writing the base64-encoded environment variable to a file can be done like this:
 
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 711ef00..a1730ce 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -18,12 +18,12 @@ For code signing, you need to upload the **keystore** containing your **certific
 
 As a keystore can hold multiple keys, each key in it must have an **alias**. Both the keystore file and the key alias are protected by **passwords**.
 
-{{% notebox %}}
+{{<notebox>}}
 
 - Please note that every app must be signed using the same key throughout its lifespan.
 - If you're building Android app bundles, you additionally need to [enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423).
 
-{{% /notebox %}}
+{{</notebox>}}
 
 ## Generating a keystore
 
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 6ff9f2e..741b8b5 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -12,9 +12,9 @@ To receive a signed `.ipa` file of your app on Codemagic, you need to set up cod
 
 Before you can start signing or distributing your app, you need to [enroll as an iOS developer](https://developer.apple.com/programs/enroll/) and [register an app ID](https://developer.apple.com/account/ios/identifier/bundle/create) in Apple Developer portal. Then, you need a **signing certificate** and a **provisioning profile** to sign the build.
 
-{{% notebox %}}  
+{{<notebox>}}  
 With our **automatic code signing** feature, Codemagic will create both the certificate and the provisioning profile for you on your behalf. When using our **manual code signing** method, you will need to first export the certificate and the provisioning profile in order to upload them, see [how to export the certificate and the provisioning profile](#exporting-signing-certificate-and-provisioning-profile).  
-{{% /notebox %}}
+{{</notebox>}}
 
 The certificate is issued by Apple and enables to identify who developed the code. Codemagic expects your certificate to be in **Personal Information Exchange (.p12)** format.
 
@@ -34,13 +34,13 @@ In short, the purpose of the different provisioning profiles is the following:
 
 With the automatic code signing feature, Codemagic will generate a signing certificate and a matching provisioning profile for you in-app and use them for code signing during the build. Depending on the selected provisioning profile type, Codemagic will create a development or a distribution certificate and a development, Ad hoc or App store provisioning profile. The provisioning profile (except for Distribution) will include all the devices you have registered on your Apple Developer account.
 
-{{% notebox %}}
+{{<notebox>}}
 **Apple Developer Portal integration**
 
 To use automatic code signing, you are required to enable the **Developer Portal** integration in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to convneniently use the same Apple Developer Portal credentials for automatic code signing across all projects and workflows.
 
 If you have previously set up workflow-specific credentials, you can remove them in the iOS automatic code signing settings after setting up the integration.
-{{% /notebox %}}
+{{</notebox>}}
 
 ### Enabling the Apple Developer Portal integration
 
diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index 9a7d117..2865197 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -6,7 +6,7 @@ weight: 2
 
 You can use Codemagic to create a Git tag and push it to your repository.
 
-{{% notebox %}}
+{{<notebox>}}
 
 Pushing git tags from Codemagic to repository requires **write access** to the repository. Depending on the Git service and authentication method, Codemagic may not have write access to your repository and you may need to grant it separately in your Git service settings. We recommend that you create a dedicated app password / personal access token for Codemagic.
 
@@ -14,7 +14,7 @@ Pushing git tags from Codemagic to repository requires **write access** to the r
 * For repositories hosted on GitHub, create a [personal access token](https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line) with **repo** scope.
 * For repositories hosted on GitLab, create a [personal access token](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html) with **write_repository** scope.
 
-{{% /notebox %}}
+{{</notebox>}}
 
 1. Add your app password / personal access token to Codemagic as a secure [environment variable](../building/environment-variables).
 
@@ -41,6 +41,6 @@ Pushing git tags from Codemagic to repository requires **write access** to the r
 
     Before creating the tag, the script will check if the build was successful.
 
-{{% notebox %}}
+{{<notebox>}}
 Make sure to use the `https` repository URL for pushing. Using the `ssh` format is not supported with app passwords or personal access tokens
-{{% /notebox %}}
+{{</notebox>}}
diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index 126740e..651f90b 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -16,10 +16,10 @@ Instead of committing the Firebase config files to your repository, you can uplo
         echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
         echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
 
-{{% notebox %}}
+{{<notebox>}}
 
 `post-clone script failed on base64 decode. The command could not be found`
 If you received this error message when using the script above, it may be due to some invisible Unicode characters in the script after copy-pasting it. Try removing the space between the `base64` command and the `--decode` option and then adding it back.
-{{% /notebox %}}
+{{</notebox>}}
 
 For more details about using base64 and loading the Firebase configuration in Codemagic, see the step-by-step guide [here](https://blog.codemagic.io/how-to-load-firebase-config-in-codemagic-with-environment-variables/).
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index acf7774..76eb103 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -6,12 +6,12 @@ weight: 4
 
 You can add apps from public or private Git-based repositories. This includes repositories requiring **SSH key authentication**. 
 
-{{% notebox %}}
+{{<notebox>}}
 Note that apps added from custom sources have some limitations.
 
 * Webhooks for automatic build triggering need to be [set up manually](../building/automatic-build-triggering/#webhooks).
 * [Automatic builds](../building/automatic-build-triggering) are available on code push and tag creation but not on pull request creation or update.   
-{{% /notebox %}}
+{{</notebox>}}
 
 To add an app from custom source:
 
diff --git a/content/getting-started/codemagic-github-app.md b/content/getting-started/codemagic-github-app.md
index f55b204..db3fd27 100644
--- a/content/getting-started/codemagic-github-app.md
+++ b/content/getting-started/codemagic-github-app.md
@@ -39,9 +39,9 @@ The restrictions you configure in GitHub app apply to the repositories you share
 
 If you have enabled the GitHub integration for your team, the connected account makes use of OAuth permissions and the restrictions you configure in GitHub app do not apply.
 
-{{% notebox %}}
+{{<notebox>}}
 Currently, Codemagic has no way of knowing whether it has access to team apps before the build is started. Due to this, team apps to which you have revoked access in the GitHub app may not appear grayed out in the UI.
-{{% /notebox %}}
+{{</notebox>}}
 
 ## Disabling Codemagic CI/CD GitHub app integration
 
diff --git a/content/getting-started/creating-workflows.md b/content/getting-started/creating-workflows.md
index 1fd4810..2a5ec35 100644
--- a/content/getting-started/creating-workflows.md
+++ b/content/getting-started/creating-workflows.md
@@ -20,6 +20,6 @@ To switch between workflows, click on the workflow name below the app name in ap
 
 ![](../uploads/select_workflow_ed.png)
 
-{{% notebox %}}
+{{<notebox>}}
 Note that while your workflows started out as duplicates, they become separate entities once created. Any changes made to one workflow won't affect any of the others.
-{{% /notebox %}}
+{{</notebox>}}
diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
index 3ec0672..fc1d9ef 100644
--- a/content/getting-started/getting-started.md
+++ b/content/getting-started/getting-started.md
@@ -10,11 +10,11 @@ Upon login, Codemagic will automatically display the list of apps in the [connec
 
 {{< figure size="" src="../uploads/2019/07/app_dashboard.PNG" caption="Codemagic Applications page" >}}
 
-{{% notebox %}}
+{{<notebox>}}
 * If you can't see your app listed, it may be because you don't have sufficient permissions or Codemagic has no access to your team or organization. Codemagic requires read/write permission to build your app. Contact your repository admin to review the settings.
 * If your app requires accessing private Git submodules or dependencies, you need to give Codemagic access to them in order to build successfully. See how to do that [here](../building/access-private-git-submodules). 
 
-{{% /notebox %}}
+{{</notebox>}}
 
 ## Running the first build
 
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 23e5e97..3846e4e 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -7,11 +7,11 @@ weight: 1
 
 You can sign up with your [GitHub](https://github.com/), [GitLab](https://about.gitlab.com/) or [Bitbucket](https://bitbucket.org/) account via OAuth. On signup, Codemagic asks for **read/write** permission to access your repositories and create webhooks for automatic building. You will need to authorize Codemagic in order to connect your GitHub/GitLab/Bitbucket account to your Codemagic account.
 
-{{% notebox %}}
+{{<notebox>}}
 
 Please be assured that Codemagic will not store any of your source code or use your data for any other purpose than providing continuous integration and delivery service to you.
 
-{{% /notebox %}}
+{{</notebox>}}
 
 ## Sign up via Codemagic GitHub app
 
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 68fa20e..a026f73 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -14,7 +14,7 @@ In addition, the application must be **App Store ready** for build distribution,
 
 It is also worth pointing out the necessity for each uploaded binary to have a **different version**, otherwise it will be refused by App Store Connect. See the [Build versioning](https://docs.codemagic.io/building/build-versioning/) article for instructions on incrementing app version with Codemagic.
 
-{{% notebox %}}Please note that you will need to create an **app record** in App Store Connect before you can automate publishing with Codemagic. It is recommended to upload the very first version of the app manually. {{% /notebox %}}
+{{<notebox>}}Please note that you will need to create an **app record** in App Store Connect before you can automate publishing with Codemagic. It is recommended to upload the very first version of the app manually. {{</notebox>}}
 
 ## Finding your app ID
 
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index 69c3ba3..3076803 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -12,7 +12,7 @@ You will need a **service account in Google Play Console** to obtain the **JSON
 
 Before releasing the app to Google Play, make sure that it meets the [Google Play's best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
 
-{{% notebox %}} Note that if you haven't published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](https://docs.codemagic.io/building/build-versioning/ 'Build versioning') on Codemagic. {{% /notebox %}}
+{{<notebox>}} Note that if you haven't published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](https://docs.codemagic.io/building/build-versioning/ 'Build versioning') on Codemagic. {{</notebox>}}
 
 ## Setting up a service account in Google Play Console
 
@@ -32,9 +32,9 @@ Before releasing the app to Google Play, make sure that it meets the [Google Pla
 
 Once you configure publishing to Google Play, Codemagic will automatically distribute the app to Google Play every time you build the workflow.
 
-{{% notebox %}}
+{{<notebox>}}
 The very first version of the app must be added to Google Play manually. You can download the **app_release.apk** from the build artifacts.
-{{% /notebox %}}
+{{</notebox>}}
 
 1. Navigate to the Publish section in app settings.
 2. Click **Google Play** to expand the options.
diff --git a/content/testing/aws.md b/content/testing/aws.md
index 09dd30f..56a3f98 100644
--- a/content/testing/aws.md
+++ b/content/testing/aws.md
@@ -7,18 +7,18 @@ weight: 5
 
 You can run Flutter integration tests on physical Android and iOS devices on [AWS Device Farm](https://aws.amazon.com/device-farm/) thanks to the integration with [Sylph](https://github.com/mmcc007/sylph). 
 
-{{% notebox %}}
+{{<notebox>}}
 Using AWS Device Farm requires having an AWS account. You are billed separately by AWS for device usage. See the AWS Device Farm [pricing page](https://aws.amazon.com/device-farm/pricing/) for more information.
-{{% /notebox %}}
+{{</notebox>}}
 
 ## Requirements
 
 * An IAM user with Device Farm permissions is required. Follow the instructions outlined in the [setup document](https://docs.aws.amazon.com/devicefarm/latest/developerguide/setting-up.html) to create an IAM user with access to Device Farm and make note of the **access key ID** and **secret access key**.
 * `sylph.yaml` file in the repository for AWS Device Farm configuration (optional). The `sylph.yaml` templates are available on [GitHub](https://github.com/mmcc007/sylph/tree/master/example).
 
-{{% notebox %}}
+{{<notebox>}}
 We strongly advise you to set up an IAM user with a policy to access Device Farm and no other AWS permissions. Don't use your AWS root account credentials to link Codemagic with Device Farm.
-{{% /notebox %}}
+{{</notebox>}}
 
 ## AWS Device Farm setup on Codemagic
 
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index 9cbed1c..c47e4a5 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -16,11 +16,11 @@ Unit and widget tests: `project_root/test`
 
 Integration tests (Flutter Driver tests): `project_root/test_driver`
 
-{{% notebox %}}
+{{<notebox>}}
 
 If your Flutter project is in a subdirectory of the repository, Codemagic cannot detect your tests automatically unless you add at least one test file in the `project_root/test` or `project_root/test_driver` folder.
 
-{{% /notebox %}}
+{{</notebox>}}
 
 ### Specifying the test target
 
@@ -34,11 +34,11 @@ There are several options for running integration tests during the build. You ca
 * Android emulator
 * [AWS Device Farm](./aws) --- enables to run tests on physical Android and iOS devices. Requires an AWS account and additional setup.
 
-{{% notebox %}}
+{{<notebox>}}
 
 **Tip**: You can set up separate [workflows](../getting-started/creating-workflows/) to run tests both on iOS and Android.
 
-{{% /notebox %}}
+{{</notebox>}}
 
 ### Stop build if tests fail
 
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 2e52539..1407cd1 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -28,17 +28,17 @@ Establishing an SSH connection to the virtual machine is possible only for manua
 
 If you don't run the script before the build finishes, the unique SSH key expires and can't be used anymore. A new script will be generated every time you run the build, so previous scripts cannot be reused.
 
-{{% notebox %}}
+{{<notebox>}}
 Note that the script for establishing SSH connection works natively on Linux and MacOS, but requires additional software like Git-bash on Windows.
-{{% /notebox %}}
+{{</notebox>}}
 
 ## SSH session time limit
 
 The SSH session remains active for a maximum of 20 minutes after all build steps are completed or until the maximum build duration limit is reached, whichever comes first. If you log out from the virtual machine during an active SSH session, the build is finished automatically and you cannot access the builder via SSH for this session. You would have to run a new build to establish a new SSH connection.
 
-{{% notebox %}}
+{{<notebox>}}
 If you have finished debugging the build, don't forget to end the session to avoid losing build time.
-{{% /notebox %}}
+{{</notebox>}}
 
 ## Debugging via SSH
 

commit 27f222d5edb757e74c8ac822e00c97d6f8dea5d3
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Wed Jan 29 12:46:19 2020 +0200

    update (#45)

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 370afe3..2b527b1 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -15,6 +15,4 @@ Here are some examples of the build arguments you can use to increment the app v
 
 `--build-name=2.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER + 100))`
 
-`--build-name=1.0.0 --build-number=$BUILD_NUMBER`
-
-`--build-number=$(git rev-list HEAD --count)`
+`--build-name=1.0.0 --build-number=$BUILD_NUMBER`
\ No newline at end of file

commit e81e05f385cf9281fd0d93acb0ecc15ef24c9e92
Author: Priit Lätt <priit@nevercode.io>
Date:   Tue Jan 28 13:47:16 2020 +0200

    Update pre-installed Flutter version

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 4bbc86e..a1084a8 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -24,7 +24,7 @@ weight: 2
 - docker `19.03.5`
 - fastlane `2.138.0`
 - firebase `7.6.2`
-- flutter `1.12.13+hotfix.5 ($HOME/programs/flutter)`
+- flutter `1.12.13+hotfix.7 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.24.1`
 - gradle `5.5.1`

commit 28a1856324c339d1138894f90bc744f628406512
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Mon Jan 27 15:21:02 2020 +0200

    Codemagic API (#44)
    
    * WIP rest api
    
    * fix headers
    
    * add some apps and builds endpoints
    
    * fix endpoint url
    
    * Editing
    
    * Editing

diff --git a/config.yml b/config.yml
index 8ad18de..4c86209 100644
--- a/config.yml
+++ b/config.yml
@@ -50,12 +50,15 @@ menu:
     - identifier: custom-scripts
       name: Custom script examples
       weight: 6
+    - identifier: rest-api
+      name: Codemagic API
+      weight: 7
     - identifier: troubleshooting
       name: Troubleshooting
-      weight: 7
+      weight: 8
     - identifier: releases-and-versions
       name: Releases and versions
-      weight: 8
+      weight: 9
 
 mediaTypes:
   video/mp4:
diff --git a/content/rest-api/applications.md b/content/rest-api/applications.md
new file mode 100644
index 0000000..086f1bb
--- /dev/null
+++ b/content/rest-api/applications.md
@@ -0,0 +1,35 @@
+---
+title: Applications
+weight: 2
+---
+
+APIs for managing applications are currently available for developers to preview. During the preview period, the API may change without advance notice.
+
+## Add a new application
+
+`POST /apps`
+
+Adds a Git repository to the applications list.
+
+### Parameters
+
+| **Name**        | **Type** | **Description** |
+| --------------- | -------- | --------------- |
+| `repositoryUrl` | `string` | **Required.** SSH or HTTPS URL for cloning the repository. |
+
+### Example
+
+```javascript
+{
+    "repositoryUrl": "git@github.com:my-organization/my-repo.git"
+}
+```
+
+### Response
+
+```javascript
+{
+    "_id": "5c9c064185dd2310123b8e96",
+    "appName": "my-repo"
+}
+```
diff --git a/content/rest-api/builds.md b/content/rest-api/builds.md
new file mode 100644
index 0000000..42428c0
--- /dev/null
+++ b/content/rest-api/builds.md
@@ -0,0 +1,52 @@
+---
+title: Builds
+weight: 3
+---
+
+APIs for managing builds are currently available for developers to preview. During the preview period, the API may change without advance notice.
+
+## Start a new build
+
+`POST /builds`
+
+### Parameters
+
+| **Name**     | **Type** | **Description** |
+| ------------ | -------- | --------------- |
+| `appId`      | `string` | **Required.** The application identifier. |
+| `workflowId` | `string` | **Required.** The workflow identifier as specified in YAML file. |
+| `branch`     | `string` | **Required.** The branch name. |
+
+### Example
+
+```javascript
+{
+    "appId": "5c9c064185dd2310123b8e96",
+    "workflowId": "release",
+    "branch": "master"
+}
+```
+
+### Response
+
+```javascript
+{
+    "application": {
+        "_id": "5c9c064185dd2310123b8e96",
+        "appName": "my-repo"
+    },
+    "build": {
+        "_id": "5c9c025185ed4300133b2a17",
+        "appId": "5c9c064185dd2310123b8e96",
+        "branch": "master",
+        "index": 1,
+        "status": "queued"
+    }
+}
+```
+
+## Cancel build
+
+`POST /builds/:id/cancel`
+
+The request will return `208 Already Reported` if the build has already finished.
diff --git a/content/rest-api/overview.md b/content/rest-api/overview.md
new file mode 100644
index 0000000..98254a0
--- /dev/null
+++ b/content/rest-api/overview.md
@@ -0,0 +1,17 @@
+---
+title: Overview
+description: Overview of Codemagic API.
+weight: 1
+---
+
+Users can make calls to Codemagic REST API for better integration with other tools. Codemagic API can be accessed from `https://api.codemagic.io`. Any communication with it takes place over HTTPS. All data is sent and received as JSON.
+
+## Authentication
+
+When making calls to REST API methods, an access token must be included as an HTTP header in every call in order for the call to be successful.
+
+```
+x-auth-token: my-secret-token
+```
+
+The access token is available via UI in **User settings > Integrations > Codemagic API > Show**.
\ No newline at end of file

commit 03640ca3d7a57742af877d6095c25eb1746b47f7
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jan 24 16:10:56 2020 +0200

    specify currently used hugo version

diff --git a/readme.md b/readme.md
index 4821f6f..f23548a 100644
--- a/readme.md
+++ b/readme.md
@@ -19,10 +19,10 @@ Please follow the format of existing issues for consistency.
 
 ## Development
 
-Development requires [Hugo static site generator](https://gohugo.io) latest from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew
+Development requires [Hugo static site generator](https://gohugo.io) v0.61.0 from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew
 
 ```
-brew install hugo
+brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/79894aee20a146d6cf7db7b4a362e7d491f499a1/Formula/hugo.rb
 ```
 
 For general info see [Hugo documentation](https://gohugo.io/documentation/).

commit b2423253b0d3527dc80703fb405f63081b559258
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Thu Jan 23 14:52:03 2020 +0200

    upgrade github actions

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 5cd542a..781b62b 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -13,7 +13,7 @@ jobs:
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       HUGO_ENV: PRODUCTION
     steps:
-      - uses: actions/checkout@master
+      - uses: actions/checkout@v2
       - run: curl --location https://github.com/gohugoio/hugo/releases/download/v0.61.0/hugo_extended_0.61.0_Linux-64bit.tar.gz | tar -vxzO hugo > hugo && chmod a+x hugo
       - run: ./hugo --minify
       - run: ./hugo deploy --invalidateCDN true --maxDeletes -1

commit 76f6801a53a5f0d5f3fe613353bba50f5c12932e
Author: madispp <madis@nevercode.io>
Date:   Thu Jan 23 12:14:25 2020 +0200

    Update adding-apps-from-custom-sources.md
    
    add spaces to git URL to work around the automatic `mailto:` linking feature of this version of Hugo

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 65c4251..acf7774 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -24,7 +24,7 @@ To add an app from custom source:
     {{< figure size="" src="../uploads/add-app-from-custom-source2.png" caption="" >}}
 
     * Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Depending on whether you're accessing a public or a private repo, choose either the HTTPS or SSH URL. The most common URL formats are as follows:
-    `https://example.com/username/repo.git` or `git@example.com:username/repo.git`. 
+    `https://example.com/username/repo.git` or ` git@example.com:username/repo.git `. 
 
     * If a private key is required to access the repository or any private submodules in it, upload the **SSH private key** file.
 

commit 14a2323e5f4df3848c5242c46bd9a3b45d9bc8d9
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Jan 23 12:11:51 2020 +0200

    Update clone URL information (#43)
    
    * Update clone URL information
    
    * Edit wording
    
    Co-authored-by: madispp <madispp@gmail.com>

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 35b146c..65c4251 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -23,8 +23,8 @@ To add an app from custom source:
 
     {{< figure size="" src="../uploads/add-app-from-custom-source2.png" caption="" >}}
 
-    * Enter the **Repository URL** for cloning the repository. The URL should be in the following format:
-    `https://example.com/username/repo.git` or ` git@example.com/username/repo.git `. 
+    * Enter the **Repository URL** for **cloning** the repository. You can find the URL from your repository on clicking **Clone** / **Clone or download**. Depending on whether you're accessing a public or a private repo, choose either the HTTPS or SSH URL. The most common URL formats are as follows:
+    `https://example.com/username/repo.git` or `git@example.com:username/repo.git`. 
 
     * If a private key is required to access the repository or any private submodules in it, upload the **SSH private key** file.
 

commit ba6e1f91ce4b2dce7a725e70fa7a07a0837fc8c5
Author: Madis Peebo <madis@nevercode.io>
Date:   Tue Jan 21 16:34:50 2020 +0200

    add bug workaround

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 191193f..35b146c 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -24,7 +24,7 @@ To add an app from custom source:
     {{< figure size="" src="../uploads/add-app-from-custom-source2.png" caption="" >}}
 
     * Enter the **Repository URL** for cloning the repository. The URL should be in the following format:
-    `https://example.com/username/repo.git` or `git@example.com/username/repo.git`. 
+    `https://example.com/username/repo.git` or ` git@example.com/username/repo.git `. 
 
     * If a private key is required to access the repository or any private submodules in it, upload the **SSH private key** file.
 

commit ca218ee1999513af66094c359fa09712f6a379d1
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Fri Jan 17 19:38:43 2020 +0200

    Accessing private dependencies (#42)
    
    * Update ssh key info
    
    * Add info about generating ssh key
    
    * Add info about SSH key generation
    
    * Fix numbering
    
    * Add links to gh, bb, gl

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index 692ae27..079f7e3 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -4,19 +4,34 @@ title: Accessing private repositories
 weight: 4
 ---
 
-If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully. 
-You can do that by saving the SSH key to your repository as a secure [environment variable](https://docs.codemagic.io/building/environment-variables/), i.e. `SSH_KEY`. All environment variables whose name has the suffix `_SSH_KEY` will be automatically added to the SSH agent and will be ready for use during the whole build process.
+If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully.
 
-1.  Save the SSH key (e.g. `SSH_KEY`) for accessing the repository as an environment variable. Make sure to check **Secure**.
+1. [Create a SSH key pair](#generating-a-ssh-key) for use with Codemagic. Note that the SSH key **cannot** be password-protected.
+2. Add the **public key** to your repository settings. See how to do that on [GitHub](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account), [Bitbucket](https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html), [GitLab](https://docs.gitlab.com/ee/ssh/README.html#adding-an-ssh-key-to-your-gitlab-account).
+3. Then in Codemagic, add the **private key** for accessing the repository as an [environment variable](https://docs.codemagic.io/building/environment-variables/). Make sure to check **Secure**. For example:
 
         SSH_KEY = -----BEGIN OPENSSH PRIVATE KEY-----
         ...
         -----END OPENSSH PRIVATE KEY-----
 
-2.  If you wish to use a **custom** environment variable name without the suffix `_SSH_KEY`, add the following **post-clone** script to add the key to the SSH agent.
+    {{% notebox %}}
+Note that the `-----END OPENSSH PRIVATE KEY-----` line needs to be followed by an empty line for the key to be usable.
+{{% /notebox %}}
+
+All environment variables whose name has the suffix `_SSH_KEY` will be automatically added to the SSH agent and will be ready for use during the whole build process. Check the `Preparing build machine` step in build logs to verify that the key has been successfully added to the SSH agent.
+
+If you wish to use a **custom** environment variable name without the suffix `_SSH_KEY`, add the following **post-clone** script to add the key to the SSH agent.
 
         #!/usr/bin/env sh
         echo "${CUSTOM_SSH_KEY_NAME}" > /tmp/ssh_key
         chmod 600 /tmp/ssh_key
         eval `ssh-agent -s`
         ssh-add /tmp/ssh_key
+
+## Generating a SSH key
+
+Different repository hosting services have different minimum requirements for the length of the SSH key, varying from 2048 bits to 4096 bits. We recommend creating a 4096 bit key for increased security. Run the script below in your terminal to create a 4096 bit SSH key:
+
+        ssh-keygen -t rsa -b 4096 -f ~/Desktop/codemagic_ssh_key -q -N ""
+
+This will create two new files on your desktop: `codemagic_ssh_key` (private key) and `codemagic_ssh_key.pub` (public key). 
\ No newline at end of file

commit d6bb3abff2c4146aab6a7c5e8655e63b11254f67
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Jan 17 11:03:16 2020 +0200

    Specify Apple ID

diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index f9e4d4c..68fa20e 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -29,7 +29,7 @@ It is also worth pointing out the necessity for each uploaded binary to have a *
 
 1. Navigate to the Publish section in app settings.
 2. Click **App Store Connect**.
-3. Enter your **Apple ID** (for login), your **app-specific password** and **App ID** (your app's unique identifier in App Store Connect).
+3. Enter your **Apple ID** (the email address used for login), your **app-specific password** and **App ID** (your app's unique identifier in App Store Connect).
 4. Click **Save** to finish the setup.
 
 Once you have successfully set up publishing to App Store Connect, Codemagic will automatically distribute the app to App Store Connect every time you build the workflow. Note that you must manually submit the app to App Store in App Store Connect.

commit e6f58760fdde062b28a05f342825296a15a57bd3
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Tue Jan 14 16:00:34 2020 +0200

    fix image url (#41)
    
    * fix image url
    
    * Added missing image file

diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index 295edda..69c3ba3 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -20,7 +20,9 @@ Before releasing the app to Google Play, make sure that it meets the [Google Pla
 2. Click on the **Create Service Account** button and follow the link to Google API Console.
 3. In Google API Console, click on the **Create Service Account** button.
 4. Fill in **Service account name** and choose Service Accounts > Service Account User from the Role dropdown. Make sure to check **Furnish a new private key** and select **JSON** as key type.
-   ![](../uploads/2019/03/create service account 2018_marked.png)
+   
+   {{< figure size="medium" src="../uploads/2019/03/create-service-account-2018-marked.png" caption="Create service account" >}}
+   
 5. Click **Create** and download the created JSON credentials file. You will need this file to set up publishing to Google Play on Codemagic.
 6. Back in Google Play Console, click **Done** to close the dialog.
 7. Find the new service account and click **Grant Access**.
diff --git a/content/uploads/2019/03/create-service-account-2018-marked.png b/content/uploads/2019/03/create-service-account-2018-marked.png
new file mode 100644
index 0000000..028d976
Binary files /dev/null and b/content/uploads/2019/03/create-service-account-2018-marked.png differ

commit a37f1e0f49506de0699c15dbcedd114bf439a0ba
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Mon Jan 13 15:42:09 2020 +0200

    Create LICENSE (#40)

diff --git a/LICENSE b/LICENSE
new file mode 100644
index 0000000..16d96f0
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,21 @@
+MIT License
+
+Copyright (c) 2020 Codemagic
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.

commit 87265a807d182671377b61223bd274b1cac30fa0
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Mon Jan 13 14:54:39 2020 +0200

    fix image url (#37)

diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 05fb1cc..f9e4d4c 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -23,7 +23,7 @@ It is also worth pointing out the necessity for each uploaded binary to have a *
 3. Select your app and click **App Information**.
 4. You can then see your app's identifier (confusingly named **Apple ID**) in the **General Information** section.
 
-![Finding your app's unique identifier](../uploads/2019/03/app store connect_app ID.png)
+{{< figure size="medium" src="../uploads/2019/03/app store connect_app ID.png" caption="Finding your app's unique identifier" >}}
 
 ## Setting up publishing to App Store Connect on Codemagic
 

commit 14e2fb49fed5c485d0c4069b1e945933fb4fb81a
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Mon Jan 13 14:26:18 2020 +0200

    add DCO

diff --git a/.github/dco.yml b/.github/dco.yml
new file mode 100644
index 0000000..4ac50ad
--- /dev/null
+++ b/.github/dco.yml
@@ -0,0 +1,3 @@
+require:
+  members: false
+

commit 0ca80c5280a14dbf338f904aa2f6eb0b329ae960
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Sun Jan 12 12:10:00 2020 +0200

    base image update (#36)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 5942e38..4bbc86e 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -27,7 +27,7 @@ weight: 2
 - flutter `1.12.13+hotfix.5 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.24.1`
-- gradle `N/A`
+- gradle `5.5.1`
 - homebrew `2.2.1`
 - jq
 - node `12.14.0`
@@ -137,3 +137,4 @@ With Xcode `11.3` build version `11C29` the following runtimes and devices are i
 - 10.1 (10B61) `/Applications/Xcode-10.1.app`
 - 10.0 (10A255) `/Applications/Xcode-10.app`
 - 9.4.1 (9F2000) `/Applications/Xcode-9.4.app`
+

commit 82b2379a6b9276fd8373d36c83716a1425388189
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Fri Jan 10 11:25:59 2020 +0200

    Custom trigger update (#35)
    
    * minor updates/fix
    
    * fix
    
    * change yaml trigger text
    
    * text reformation
    
    * merge
    
    * Update automatic-build-triggering.md
    
    Text formatting
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 2874940..2b237b9 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -69,52 +69,21 @@ Content:
 
 Header:
 
-`"x-auth-token": "-----id-----"`
-
-You can find the `workflowId` and `appId` from your **App settings** > **Workflow settings** > **Build status badge** > **Badge markdown**.
-
-Badge markdown has the following format: `(api.codemagic.io/apps/[appId]/[workflowId]/status_badge.svg)`
+`"x-auth-token": "----token----"`
 
 `x-auth-token` is available via **User settings** > **Integrations** > **Codemagic API** > **Show**.
 
+You can find the `workflowId` and `appId` from your **App settings** > **Workflow settings** > **Build status badge** > **Badge markdown**.
 
-## Custom build triggers with YAML configuration
-
-You can also configure custom build triggers when using `codemagic.yaml` file for build configuration. 
-Build triggering in response to custom events can be set up by sending a `POST` request to the `https://api.codemagic.io/builds` endpoint. 
-
-`POST https://api.codemagic.io/builds`
-
-Content:
-
-        {
-        "appId": "----appId----",
-        "fileWorkflowId": "Workflow name in YAML file",
-        "branch": "master"
-        }
-
-Header:
-
-`"x-auth-token": "-----id-----"`
+Badge markdown has the following format: `(api.codemagic.io/apps/[appId]/[workflowId]/status_badge.svg)`
 
-The `fileWorkflowId` is the `workflow ID` provided in your `codemagic.yaml` configuration file shown below:
+For use with YAML configuration, `workflowId` is the workflow ID in your `codemagic.yaml` configuration file shown below:
 ```
 workflows:
   my-workflow:                # workflow ID 
     name: My workflow name    # workflow name displayed in UI
-    environment:
-    cache:
-    triggering:
-    branch_patterns:
-    scripts:
-    publishing:
-    artifacts:
 ```
 
-The `appId` can be found from the URL of your app build: `https://codemagic.io/app/[appId]`
-
-`x-auth-token` is available via **User settings** > **Integrations** > **Codemagic API** > **Show**.
-
 ## Skipping builds
 
 If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.

commit a62844dd102551ba8968214313fc87c840c9d276
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Jan 10 11:01:01 2020 +0200

    Rephrase to improve clarity

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index ffa5bd7..370afe3 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -3,7 +3,7 @@ title: Build versioning
 weight: 10
 ---
 
-If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using **build arguments** and the `BUILD_NUMBER` environment variable.
+If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using the `BUILD_NUMBER` read-only environment variable in **build arguments**.
 
 The `BUILD_NUMBER` read-only environment variable holds the total count of builds (including the ongoing build) for this project in Codemagic. In other words, if you have triggered 10 builds for some project in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`.
 

commit 2b64211629ad79a066ae188a377d1b7fe4e1de7e
Author: Madis Peebo <madis@nevercode.io>
Date:   Thu Jan 9 17:23:54 2020 +0200

    do not minify logo

diff --git a/layouts/_default/baseof.ace b/layouts/_default/baseof.ace
index 8cb5c05..f83df7d 100644
--- a/layouts/_default/baseof.ace
+++ b/layouts/_default/baseof.ace
@@ -12,7 +12,7 @@ html
             .bar.bottom
           #logo
             a href={{ site.Home.RelPermalink }}
-              {{ $logo := resources.Get "media/logo.svg" | minify }}
+              {{ $logo := resources.Get "media/logo.svg" }}
               {{ $logo.Content | safeHTML }}
               span#logo-label {{ site.Param "headerLinkTitle" }}
 

commit 689598315c5bded762fa87c686bfed16f66a0daf
Author: madispp <madis@nevercode.io>
Date:   Thu Jan 9 17:10:59 2020 +0200

    Hugo 61 (#34)
    
    * upgrade hugo
    
    * invalidate cd with deployment

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 2eb9e06..5cd542a 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -11,15 +11,9 @@ jobs:
     env:
       AWS_ACCESS_KEY_ID: AKIAVIULH47FJUBBUV5U
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
+      HUGO_ENV: PRODUCTION
     steps:
       - uses: actions/checkout@master
-      - run: curl --location --remote-name https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_extended_0.58.3_Linux-64bit.deb
-      - run: sudo dpkg -i hugo_extended_0.58.3_Linux-64bit.deb
-      - run: sudo apt-get install -f
-      - run: hugo --minify
-        working-directory: ${{ github.workspace }}
-      - run: sudo pip install awscli
-      - run: aws s3 sync public s3://docs.codemagic.io
-        working-directory: ${{ github.workspace }}
-      - run: aws cloudfront create-invalidation --distribution-id EM3VDRI1IYP45 --paths '/*'
-
+      - run: curl --location https://github.com/gohugoio/hugo/releases/download/v0.61.0/hugo_extended_0.61.0_Linux-64bit.tar.gz | tar -vxzO hugo > hugo && chmod a+x hugo
+      - run: ./hugo --minify
+      - run: ./hugo deploy --invalidateCDN true --maxDeletes -1
diff --git a/.s3deploy.yml b/.s3deploy.yml
deleted file mode 100644
index c562bf8..0000000
--- a/.s3deploy.yml
+++ /dev/null
@@ -1,29 +0,0 @@
-routes:
-  - route: "^.+\\.(js|css|svg|ttf|woff|woff2)$"
-    #  cache static assets for 20 years since they are fingerprinted
-    headers:
-      Cache-Control: "max-age=630720000, no-transform, public"
-    gzip: true
-  - route: "^.+\\.(ico|pdf|jpg|JPG|jpeg|png|PNG|gif|GIF|mp4|mov|mkv)$"
-    #  images 1 week for now because content images are not fingerprinted
-    # but without gzip
-    headers:
-      Cache-Control: "max-age=604800, no-transform, public"
-    gzip: false
-  - route: "^.+\\.(html|xml|json)$"
-    # 5 minutes for main content and design like pages and search index
-    headers:
-      Cache-Control: "max-age=300, no-transform, public"
-    gzip: true
-  - route: "^sitemap\\.xml$"
-    # sitemap
-    headers:
-      Cache-Control: "max-age=300, no-transform, public"
-      Content-Type: "application/xml; charset=utf-8"
-    gzip: true
-  - route: "^.+\\.xml$"
-    # rss
-    headers:
-      Cache-Control: "max-age=300, no-transform, public"
-      Content-Type: "application/rss+xml; charset=utf-8"
-    gzip: true
diff --git a/config.yml b/config.yml
index fcb2edc..8ad18de 100644
--- a/config.yml
+++ b/config.yml
@@ -67,3 +67,33 @@ disableKinds:
   - taxonomy
   - taxonomyTerm
   - section
+
+deployment:
+  order:
+    - '.*\.jpe?g$'
+    - '.*\.gif$'
+    - '.*\.png$'
+    - '.*\.mp4$'
+    - '.*\.mov$'
+
+  targets:
+    - name: 'docs.codemagic.io'
+      URL: s3://docs.codemagic.io?region=us-east-1
+      cloudFrontDistributionID: EM3VDRI1IYP45
+
+  matchers:
+    # static assets are fingerprinted, cache them for 1 year
+    - pattern: '^.+\\.(js|css|svg|ttf|woff|woff2)$'
+      cacheControl: 'max-age=31536000, no-transform, public'
+      gzip: true
+    # content images are not fingerprinted yet, cache them for 1 week
+    - pattern: '^.+\\.(ico|pdf|jpg|JPG|jpeg|png|PNG|gif|GIF|mp4|mov|mkv)$'
+      cacheControl: 'max-age=604800, no-transform, public'
+      gzip: false
+    # main content
+    - pattern: '^.+\\.(html|xml|json)$'
+      gzip: true
+    # rss
+    - pattern: '^.+\\.xml$'
+      contentType: 'application/rss+xml; charset=utf-8'
+      gzip: true

commit 9548c5f87062d4eceefad3e790d2e64f6728000b
Author: madispp <madis@nevercode.io>
Date:   Thu Jan 9 10:09:07 2020 +0200

    Git page metadata and small UI adjustments (#33)
    
    * add git page metadata
    
    * fix toc spacing
    
    * remove extra metadata

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index e877b5c..10aeb3c 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -367,11 +367,12 @@ body {
             }
         }
         #toc {
-            width: 260px;
+            width: 230px;
             position: fixed;
             right: 0;
             top: 30px;
             overflow: auto;
+            padding-right: 30px;
 
             .heading {
                 color: #aaaaaa;
@@ -384,26 +385,27 @@ body {
             a {
                 display: block;
                 color: $black;
-                padding: 5px 15px;
+                padding: 5px;
                 font-size: 14px;
-
-                &.item-H2 {  }
-                &.item-H3 { margin-left: 5px; }
-                &.item-H4 { margin-left: 10px; }
-                &.item-H5 { margin-left: 15px; }
-                &.item-H6 { margin-left: 20px; }
+                line-height: 1.25;
             }
 
             ul, ol {
               list-style-type: none;
               padding-left: 0;
               li {
+                padding: 0;
                 margin: 0;
               }
             }
+
+            ul ul {
+              margin: 5px 0;
+              padding-left: 15px;
+            }
         }
         @media (max-width: 1200px) {
-            main { width: 100%; padding: 32px 70px 50px 40px; }
+            main { width: 100%; padding: 32px 70px 16px 40px; }
             #toc { display: none; }
         }
         @media (max-width: 1000px) {
@@ -444,4 +446,30 @@ body {
         }
     }
 }
-#footer { font-family: inherit; }
+#footer {
+  box-sizing: border-box;
+  margin-left: 390px;
+  margin-right: 32px;
+  padding: 32px 40px;
+  
+  border-top: 1px solid #EEE;
+  font-size: 18px;
+
+  @media (max-width: 1000px){
+    margin: 100px 50px 0;
+  }
+    
+  a {
+    color: #0957FF;
+  }
+
+  .page-metadata {
+    font-size: .9em;
+    line-height: 1.5;
+  }
+
+  .edit-link {
+    font-weight: bold;
+    display: inline-block;
+  }
+}
diff --git a/config.yml b/config.yml
index 4a6d454..fcb2edc 100644
--- a/config.yml
+++ b/config.yml
@@ -14,6 +14,8 @@ params:
   locale: en_GB
   googleAnalyticsTrackingId: UA-125963734-2
   googleOptimizeId: 'GTM-M67KWVX'
+  pageRepoCommitPrefix: 'https://github.com/codemagic-ci-cd/codemagic-docs/commit/'
+  pageRepoEditPrefix: 'https://github.com/codemagic-ci-cd/codemagic-docs/edit/master/content/'
 imaging:
   resampleFilter: linear
   quality: 90
@@ -25,6 +27,7 @@ outputs:
 buildDrafts: true
 defaultContentLanguage: en
 disable404: true
+enableGitInfo: true
 
 sectionPagesMenu: main
 menu:
diff --git a/layouts/_default/baseof.ace b/layouts/_default/baseof.ace
index 98eff57..8cb5c05 100644
--- a/layouts/_default/baseof.ace
+++ b/layouts/_default/baseof.ace
@@ -25,5 +25,6 @@ html
           main
             = yield main
       footer#footer
+        {{ partial "footer" . }}
       {{ partial "analytics" . }}
-    {{ partial "footer" . }}
+      {{ partial "site-footer" . }}
diff --git a/layouts/partials/footer.html b/layouts/partials/footer.html
new file mode 100644
index 0000000..17afe8b
--- /dev/null
+++ b/layouts/partials/footer.html
@@ -0,0 +1,15 @@
+{{ if .IsPage }}
+  <section class="page-metadata">
+    <p>
+      Page last updated on {{ .Lastmod.Format "January 2, 2006" }}.
+      <a
+        href="{{ site.Params.pageRepoEditPrefix }}{{ .File.Path }}"
+        class="edit-link"
+        target="_blank"
+        rel="noopener noreferrer"
+      > 
+        Improve this page&nbsp;<i class="fas fa-edit"></i>
+      </a>
+    </p>
+  </section>
+{{ end }}
diff --git a/layouts/partials/footer.ace b/layouts/partials/site-footer.ace
similarity index 100%
rename from layouts/partials/footer.ace
rename to layouts/partials/site-footer.ace

commit c849408fd6358bf0d2f0ac3303af2a581347cd12
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Jan 9 10:01:04 2020 +0200

    Mention monorepos

diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
index ce57881..3ec0672 100644
--- a/content/getting-started/getting-started.md
+++ b/content/getting-started/getting-started.md
@@ -30,7 +30,7 @@ After the build has finished successfully, you will immediately have **artifacts
 
 ### Multiple projects in one repository
 
-Codemagic is able to detect multiple Flutter projects in a repository provided that each project has its `pubspec.yaml` file.
+Codemagic supports monorepos and is able to detect multiple Flutter projects in a repository provided that each project has its `pubspec.yaml` file.
 
 The first build is run for the project whose `pubspec.yaml` file was found first. After the first build, you can select the project for building from the **Project file path** dropdown in the Build section of app settings.
 

commit 7c6ed46b342a5a3c3ebbf0435abe56ec4fce2535
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Wed Jan 8 16:38:27 2020 +0200

    minor updates/fix (#32)
    
    * minor updates/fix
    
    * fix

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 93e1d5b..2874940 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -71,11 +71,12 @@ Header:
 
 `"x-auth-token": "-----id-----"`
 
-You can find the `WorkflowId` and `appId` from your settings: **App settings** > **Workflow settings** > **Build status badge** > **Badge markdown**. 
+You can find the `workflowId` and `appId` from your **App settings** > **Workflow settings** > **Build status badge** > **Badge markdown**.
 
 Badge markdown has the following format: `(api.codemagic.io/apps/[appId]/[workflowId]/status_badge.svg)`
 
-Contact the Codemagic team to obtain the `x-auth-token`.
+`x-auth-token` is available via **User settings** > **Integrations** > **Codemagic API** > **Show**.
+
 
 ## Custom build triggers with YAML configuration
 
@@ -112,6 +113,8 @@ workflows:
 
 The `appId` can be found from the URL of your app build: `https://codemagic.io/app/[appId]`
 
+`x-auth-token` is available via **User settings** > **Integrations** > **Codemagic API** > **Show**.
+
 ## Skipping builds
 
 If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 32954cf..12df96a 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -18,6 +18,7 @@ This is the list of the most common issues that may cause iOS code signing error
 
     Check your app's entitlements by going to **Apple Developer portal > Certificates, identifier & profiles > Identifiers > App ID**.
 
+
 * **You haven't specified the iOS scheme to be used for the `archive` action of Xcode build.**  This applies when your app has custom iOS schemes. By default, Codemagic builds the `Runner` scheme, but you can use the `FCI_FLUTTER_SCHEME` [environment variable](../building/environment-variables) to specify another scheme.
 
 * **The bundle ID you have entered in automatic code signing setup on Codemagic does not match the bundle ID in the build configuration that is used for archiving the app with Xcode.** Codemagic assigns provisioning profiles to the build targets and configurations before building the iOS app. That assignment is based on the bundle ID match in both provisioning profile and the build configuration. In the case signing configuration is not assigned to the build target/configuration that is used for archiving, the build will fail.

commit d67125cc0b1980e81479348cb7cdb40249a173e6
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Wed Jan 8 16:33:40 2020 +0200

    Fix link

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 6a9e5b9..32954cf 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -18,7 +18,7 @@ This is the list of the most common issues that may cause iOS code signing error
 
     Check your app's entitlements by going to **Apple Developer portal > Certificates, identifier & profiles > Identifiers > App ID**.
 
-* **You haven't specified the iOS scheme to be used for the `archive` action of Xcode build.**  This applies when your app has custom iOS schemes. By default, Codemagic builds the `Runner` scheme, but you can use the `FCI_FLUTTER_SCHEME` [environment variable](..\building\environment-variables) to specify another scheme.
+* **You haven't specified the iOS scheme to be used for the `archive` action of Xcode build.**  This applies when your app has custom iOS schemes. By default, Codemagic builds the `Runner` scheme, but you can use the `FCI_FLUTTER_SCHEME` [environment variable](../building/environment-variables) to specify another scheme.
 
 * **The bundle ID you have entered in automatic code signing setup on Codemagic does not match the bundle ID in the build configuration that is used for archiving the app with Xcode.** Codemagic assigns provisioning profiles to the build targets and configurations before building the iOS app. That assignment is based on the bundle ID match in both provisioning profile and the build configuration. In the case signing configuration is not assigned to the build target/configuration that is used for archiving, the build will fail.
 

commit c3bf7412d742d32ad0878ae48df2c21d579a652f
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Wed Jan 8 14:43:15 2020 +0200

    Fix formatting

diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index e789d90..9cbed1c 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -29,6 +29,7 @@ In App settings > Test, you will see the **Flutter test target** and **Flutter d
 ### Running Flutter Driver tests
 
 There are several options for running integration tests during the build. You can select one option per workflow:
+
 * iOS simulator (selected by default)
 * Android emulator
 * [AWS Device Farm](./aws) --- enables to run tests on physical Android and iOS devices. Requires an AWS account and additional setup.

commit cae55a256a82f603c6e72f814737389578cbcbc3
Author: Daniel Schroeder <me@danielschroeder.org>
Date:   Wed Jan 8 00:55:17 2020 -0800

    Add Documentation For Custom Build Triggers with YAML Configuration (#31)
    
    * YAML for custom build triggers
    
    * YAML for custom build triggers
    
    * test
    
    * Update automatic-build-triggering.md
    
    Formatting
    
    Co-authored-by: helinanever <36853001+helinanever@users.noreply.github.com>

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index fa38563..93e1d5b 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -77,6 +77,41 @@ Badge markdown has the following format: `(api.codemagic.io/apps/[appId]/[workfl
 
 Contact the Codemagic team to obtain the `x-auth-token`.
 
+## Custom build triggers with YAML configuration
+
+You can also configure custom build triggers when using `codemagic.yaml` file for build configuration. 
+Build triggering in response to custom events can be set up by sending a `POST` request to the `https://api.codemagic.io/builds` endpoint. 
+
+`POST https://api.codemagic.io/builds`
+
+Content:
+
+        {
+        "appId": "----appId----",
+        "fileWorkflowId": "Workflow name in YAML file",
+        "branch": "master"
+        }
+
+Header:
+
+`"x-auth-token": "-----id-----"`
+
+The `fileWorkflowId` is the `workflow ID` provided in your `codemagic.yaml` configuration file shown below:
+```
+workflows:
+  my-workflow:                # workflow ID 
+    name: My workflow name    # workflow name displayed in UI
+    environment:
+    cache:
+    triggering:
+    branch_patterns:
+    scripts:
+    publishing:
+    artifacts:
+```
+
+The `appId` can be found from the URL of your app build: `https://codemagic.io/app/[appId]`
+
 ## Skipping builds
 
 If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.

commit 5218c6866e21200488dcc5e269b44904d5b27954
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Tue Jan 7 10:14:02 2020 +0200

    new base image report template (#30)
    
    * WIP new base image report
    
    * Formatting
    
    * add hardware specification
    
    * Update versions.md
    
    * Update versions.md
    
    * script generated report
    
    * Formatting

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 72dc735..5942e38 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -1,57 +1,139 @@
 ---
-description: A list of software and versions available out-of-the-box on Codemagic.
-title: Software versions
+description: A list of tools available out-of-the-box on Codemagic build machines.
+title: macOS build machine specification
 weight: 2
 ---
-**Dart and Flutter**
 
-- Dart `2.7.0`
-- Flutter `1.12.13+hotfix.5 ($HOME/programs/flutter)`
+## Hardware
 
-**iOS tools**
+- Mac Mini `2.3GHz Quad Core / 8GB`
+- Mac Pro `3.7GHz Quad Core / 32GB`
 
-- Xcode
+## System
 
-`9.4.1 (9F2000) (/Applications/Xcode-9.4.app)`
+- System version `macOS 10.14.6 (18G2022)`
+- Kernel version `Darwin 18.7.0`
+- Disk `322GB (Free Space: 51GB)`
 
-`10.0 (10A255) (/Applications/Xcode-10.app)`
-
-`10.1 (10B61) (/Applications/Xcode-10.1.app)`
-
-`10.2.1 (10E1001) (/Applications/Xcode-10.2.app)`
-
-`10.3 (10G8) (/Applications/Xcode-10.3.app)`
-
-`11.0 (11A420a) (/Applications/Xcode-11.app)`
-
-`11.1 (11A1027) (/Applications/Xcode-11.1.app)`
-
-`11.2.1 (11B500) (/Applications/Xcode-11.2.1.app)`
-
-`11.3 (11C29) (/Applications/Xcode-11.3.app)`
-
-
-- CocoaPods `1.8.4`
-
-**Android tools**
+## Pre-installed tools
 
 - Android tools `$HOME/programs/android-sdk-macosx`
-
-**Other tools**
-
-- curl `7.54.0`
+- cocoapods `1.8.4`
+- curl
+- dart `2.7.0`
+- docker `19.03.5`
 - fastlane `2.138.0`
 - firebase `7.6.2`
+- flutter `1.12.13+hotfix.5 ($HOME/programs/flutter)`
 - gem `3.0.3`
 - git `2.24.1`
-- gradle `5.5.1`
+- gradle `N/A`
 - homebrew `2.2.1`
-- jq `1.6`
+- jq
 - node `12.14.0`
 - npm `6.13.4`
 - python `2.7.17`
 - python3 `3.7.5`
 - ruby `2.6.5p114`
-- ssh `7.9p1`
-- wget `1.20.3`
+- ssh
+- sudo
+- tar
+- unzip
+- wget
 - yarn `1.21.1`
+- zip
+
+## Xcode 11.3 (11C29)
+
+This is the Xcode version used by default when you select `latest` in build settings. Other available versions are listed [here](#other-xcode-versions).
+
+Xcode path: `/Applications/Xcode-11.3.app`
+
+With Xcode `11.3` build version `11C29` the following runtimes and devices are installed:
+
+### Runtimes
+
+- iOS 10.0
+- iOS 10.1
+- iOS 10.2
+- iOS 10.3
+- iOS 11.0
+- iOS 11.1
+- iOS 11.2
+- iOS 11.3
+- iOS 11.4
+- iOS 12.0
+- iOS 12.1
+- iOS 12.2
+- iOS 12.4
+- iOS 13.0
+- iOS 13.1
+- iOS 13.2
+- iOS 13.3
+- tvOS 11.3
+- tvOS 13.3
+- watchOS 6.1
+
+### Devices
+
+- iPhone 4s
+- iPhone 5
+- iPhone 5s
+- iPhone 6 Plus
+- iPhone 6
+- iPhone 6s
+- iPhone 6s Plus
+- iPhone SE
+- iPhone 7
+- iPhone 7 Plus
+- iPhone 8
+- iPhone 8 Plus
+- iPhone X
+- iPhone Xs
+- iPhone Xs Max
+- iPhone Xʀ
+- iPhone 11
+- iPhone 11 Pro
+- iPhone 11 Pro Max
+- iPad 2
+- iPad Retina
+- iPad Air
+- iPad mini 2
+- iPad mini 3
+- iPad mini 4
+- iPad Air 2
+- iPad Pro (9.7-inch)
+- iPad Pro (12.9-inch)
+- iPad (5th generation)
+- iPad Pro (12.9-inch) (2nd generation)
+- iPad Pro (10.5-inch)
+- iPad (6th generation)
+- iPad (7th generation)
+- iPad Pro (11-inch)
+- iPad Pro (12.9-inch) (3rd generation)
+- iPad mini (5th generation)
+- iPad Air (3rd generation)
+- Apple TV
+- Apple TV 4K
+- Apple TV 4K (at 1080p)
+- Apple Watch - 38mm
+- Apple Watch - 42mm
+- Apple Watch Series 2 - 38mm
+- Apple Watch Series 2 - 42mm
+- Apple Watch Series 3 - 38mm
+- Apple Watch Series 3 - 42mm
+- Apple Watch Series 4 - 40mm
+- Apple Watch Series 4 - 44mm
+- Apple Watch Series 5 - 40mm
+- Apple Watch Series 5 - 44mm
+
+## Other Xcode versions
+
+- 11.2.1 (11B500) `/Applications/Xcode-11.2.1.app`
+- 11.1 (11A1027) `/Applications/Xcode-11.1.app`
+- 11.0 (11A420a) `/Applications/Xcode-11.app`
+- 10.3 (10G8) `/Applications/Xcode-10.3.app`
+- 10.2.1 (10E1001) `/Applications/Xcode-10.2.app`
+- 10.1 (10B61) `/Applications/Xcode-10.1.app`
+- 10.0 (10A255) `/Applications/Xcode-10.app`
+- 9.4.1 (9F2000) `/Applications/Xcode-9.4.app`

commit d42276ee785d6f149ed96f7e8da86b174b9cb3c0
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Mon Jan 6 12:53:01 2020 +0200

    Fix typo

diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index 8f7f122..9a7d117 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -29,7 +29,7 @@ Pushing git tags from Codemagic to repository requires **write access** to the r
         then
           new_version=v1.0.$BUILD_NUMBER
           git tag $new_version
-          git push "https://your-username:$APP_PASSWORD_ENV_VARIABLE@your-git-service.com/your-username/your-repo.git" -tags
+          git push "https://your-username:$APP_PASSWORD_ENV_VARIABLE@your-git-service.com/your-username/your-repo.git" --tags
         fi
     Where:
 

commit 7e03d3d3366179019153ffe068cc21394898a095
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Thu Jan 2 14:48:50 2020 +0200

    update ios automatic codesigning from blog (#29)
    
    * update ios automatic codesigning from blog
    
    * minor numbering fix

diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 0b740a2..20e95a5 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -22,9 +22,8 @@ You can add other paths to be cached, for example:
 ## Enabling dependency caching
 
 1. In your app settings, open the **Dependency caching** section.
-
    ![](../uploads/2019/04/caching_enabled.PNG)
-
+   
 2. Check the **Enable dependency caching** option. By default, caching is disabled.
 3. Enter the path(s) to the dependencies to be cached and click **Add**. Note that you can delete added paths anytime.
 4. Click **Save** to save the settings.
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 0d12499..6ff9f2e 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -51,13 +51,19 @@ If you have previously set up workflow-specific credentials, you can remove them
 
 ### Setting up automatic code signing for a workflow
 
-1. In your app settings, navigate to the **Publish** section.
-2. Click on **iOS code signing** to expand this step.
-3. Select **Automatic** as the code signing method. If you haven't enabled the Apple Developer Portal integration yet, you will be asked to enable it before you can continue configuration.
-4. If you belong to more than one team, select the **Developer portal team**.
-5. Select the provisioning profile type.
-6. You can also enter your app's **Bundle identifier** (optional). By default, Codemagic looks for it from your `project.pbxproj`file.
-7. Click **Save** to finish the setup.
+1. Go to your **App settings**.
+2. Make sure that you have **Release** mode selected in **Build** settings.
+   ![Selecting Release mode in Build configuration](/uploads/build_configuration-1.png)
+
+3. In the **Publish** section, click on iOS code signing to expand this step.
+   ![Selecting iOS code signing in the Publish section](/uploads/publish_ioscodesigning-1.png)
+
+4. Select **Automatic** as the code signing method.
+   ![Automatic code signing setup for iOS](/uploads/2fa_ios_code_signing.png)
+5. Enter your **Apple ID** (Apple developer portal username) and **Apple developer portal password**.
+6. Then choose the **provisioning profile type**.
+7. You can also enter your app's **bundle identifier** (optional). By default, Codemagic detects it automatically from your repository.
+8. Finally, click **Save** to finish the setup. If your Apple developer account has two-step verification or two-step authentication enabled, you will be asked to enter your verification code in a popup and click **Save** again.
 
 As the next step, you can configure publishing to App Store Connect to distribute your signed app to testers or submit it for review.
 
diff --git a/content/uploads/2fa_ios_code_signing.png b/content/uploads/2fa_ios_code_signing.png
new file mode 100644
index 0000000..e2aa1e8
Binary files /dev/null and b/content/uploads/2fa_ios_code_signing.png differ
diff --git a/content/uploads/build_configuration-1.png b/content/uploads/build_configuration-1.png
new file mode 100644
index 0000000..533b975
Binary files /dev/null and b/content/uploads/build_configuration-1.png differ
diff --git a/content/uploads/publish_ioscodesigning-1.png b/content/uploads/publish_ioscodesigning-1.png
new file mode 100644
index 0000000..237e5a3
Binary files /dev/null and b/content/uploads/publish_ioscodesigning-1.png differ

commit 521fdec0e173f0e9628d9f895e469c1be2acbce0
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Thu Jan 2 11:12:51 2020 +0200

    update custom ios scheme (#28)

diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
index 6017ef9..cf19e84 100644
--- a/content/building/specifying-custom-ios-scheme.md
+++ b/content/building/specifying-custom-ios-scheme.md
@@ -5,4 +5,14 @@ weight: 6
 
 By default, Codemagic builds the iOS app using the `Runner` scheme. You can specify a custom iOS scheme for the `xcodebuild` command with the `FCI_FLUTTER_SCHEME` environment variable. A different iOS scheme can be specified for each workflow.
 
+For example, to change default scheme to custom scheme named `Staging`
+
+![](../uploads/custom_ios_scheme.png)
+
+{{% notebox %}}
+
+Don't forget to click **Save** after adding the variable.
+
+{{% /notebox %}}
+
 You can read more about environment variables and how to use them in the [Environment variables](https://docs.codemagic.io/building/environment-variables/) section.
diff --git a/content/uploads/custom_ios_scheme.png b/content/uploads/custom_ios_scheme.png
new file mode 100644
index 0000000..23d1f15
Binary files /dev/null and b/content/uploads/custom_ios_scheme.png differ

commit 12541283507d59b737a71e55de89d1cc0d090e7d
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon Dec 30 15:20:50 2019 +0200

    base image update (#27)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index edc7643..72dc735 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -5,7 +5,7 @@ weight: 2
 ---
 **Dart and Flutter**
 
-- Dart `2.6.1`
+- Dart `2.7.0`
 - Flutter `1.12.13+hotfix.5 ($HOME/programs/flutter)`
 
 **iOS tools**
@@ -28,7 +28,8 @@ weight: 2
 
 `11.2.1 (11B500) (/Applications/Xcode-11.2.1.app)`
 
-`11.3 (11C24b) (/Applications/Xcode-11.3.app)`
+`11.3 (11C29) (/Applications/Xcode-11.3.app)`
+
 
 - CocoaPods `1.8.4`
 
@@ -38,18 +39,19 @@ weight: 2
 
 **Other tools**
 
-- fastlane `2.136.0`
-- wget `1.20.3`
 - curl `7.54.0`
-- ssh `7.9p1`
-- git `2.24.0`
-- homebrew `2.1.16`
+- fastlane `2.138.0`
+- firebase `7.6.2`
+- gem `3.0.3`
+- git `2.24.1`
+- gradle `5.5.1`
+- homebrew `2.2.1`
+- jq `1.6`
+- node `12.14.0`
+- npm `6.13.4`
 - python `2.7.17`
 - python3 `3.7.5`
-- node `12.10.0`
-- npm `6.13.1`
-- yarn `1.19.1`
-- gem `3.0.3`
 - ruby `2.6.5p114`
-- firebase `7.6.2`
-- gradle `5.5.1`
+- ssh `7.9p1`
+- wget `1.20.3`
+- yarn `1.21.1`

commit 7c04e39190348a8d7dddfb1521a7abc4c8d85fbe
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Fri Dec 27 17:14:04 2019 +0200

    Getting started docs (#25)
    
    * automatic build trigger update
    
    * Update
    
    * Update getting started
    
    * Updates
    
    * Improve consistency
    
    * Fix typo
    
    * Improve getting started page
    
    Co-authored-by: rimanteval <41963508+rimanteval@users.noreply.github.com>

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 3abb2ec..fa38563 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -48,10 +48,34 @@ To set up a webhook for automatic build triggering on Codemagic, you must regist
 
 {{% notebox %}}
 The payload URL has the following format:  
-`https://api.codemagic.io/hooks/[yourappID]`
+`https://api.codemagic.io/hooks/[appId]`
 {{% /notebox %}}
 
-You can find your app ID in the browser URL after `app/` when you open the app on Codemagic: `https://codemagic.io/app/[yourappID]`
+You can find your app ID in the browser URL after `app/` when you open the app on Codemagic: `https://codemagic.io/app/[appId]`
+
+## Custom build triggers
+
+Build triggering in response to custom events can be set up by sending a `POST` request to the `https://api.codemagic.io/builds` endpoint. 
+
+`POST https://api.codemagic.io/builds`
+
+Content:
+
+        {
+        "appId": "----appId----",
+        "workflowId": "-----workflowId-----,
+        "branch": "masters"
+        }
+
+Header:
+
+`"x-auth-token": "-----id-----"`
+
+You can find the `WorkflowId` and `appId` from your settings: **App settings** > **Workflow settings** > **Build status badge** > **Badge markdown**. 
+
+Badge markdown has the following format: `(api.codemagic.io/apps/[appId]/[workflowId]/status_badge.svg)`
+
+Contact the Codemagic team to obtain the `x-auth-token`.
 
 ## Skipping builds
 
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 00e7fc8..191193f 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -4,20 +4,35 @@ title: Adding apps from custom sources
 weight: 4
 ---
 
-You can add apps from public or private Git-based repositories. This includes repositories requiring **SSH key authentication**. Click **Add app from custom source** on the Applications page to get started.
+You can add apps from public or private Git-based repositories. This includes repositories requiring **SSH key authentication**. 
 
-{{< figure size="" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
+{{% notebox %}}
+Note that apps added from custom sources have some limitations.
 
-Then, fill in all the required fields.
+* Webhooks for automatic build triggering need to be [set up manually](../building/automatic-build-triggering/#webhooks).
+* [Automatic builds](../building/automatic-build-triggering) are available on code push and tag creation but not on pull request creation or update.   
+{{% /notebox %}}
 
-{{< figure size="" src="../uploads/add-app-from-custom-source2.png" caption="" >}}
+To add an app from custom source:
 
-1. Enter the Git URL for cloning the repository. The URL should be in the following format: `https://example.com/username/repo.git` or `git@example.com/username/repo.git`. 
-2. If a private key is required to access the repository or any private submodules in it, upload the **SSH private key** file.
-3. If the SSH key is password-protected, you'll be also asked to enter the **SSH key password**.
-4. Click **Add app**.
+1. Click **Add app from custom source** on the Applications page.
 
-Your app will be then listed on the Applications page and you can immediately start running builds. Note that in order to enable automatic builds, you will need to manually [set up webhooks](../building/automatic-build-triggering#webhooks).
+    {{< figure size="" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
+
+2. Then, fill in all the required fields.
+
+    {{< figure size="" src="../uploads/add-app-from-custom-source2.png" caption="" >}}
+
+    * Enter the **Repository URL** for cloning the repository. The URL should be in the following format:
+    `https://example.com/username/repo.git` or `git@example.com/username/repo.git`. 
+
+    * If a private key is required to access the repository or any private submodules in it, upload the **SSH private key** file.
+
+    * If the SSH key is password-protected, you'll be also asked to enter the **SSH key password**.
+
+3. Click **Add app**.
+
+Your app will be then listed on the Applications page and you can immediately start running builds.
 
 ## Repositories behind firewall
 
diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
index faeaaf5..ce57881 100644
--- a/content/getting-started/getting-started.md
+++ b/content/getting-started/getting-started.md
@@ -1,25 +1,51 @@
 ---
-description: Running the first build on Codemagic without any configuration
-title: Running the first build
+description: How to set up your projects to build, test and publish them with Codemagic
+title: Setting up projects
 weight: 2
 ---
 
-Upon login, Codemagic will automatically display the list of apps in your repository. 
+Codemagic allows you to build, test and publish Flutter apps (Android, iOS, web, macOS, Linux), native Android and iOS apps, native apps containing Flutter modules, Flutter widgets and Flutter packages. Projects can be configured via GUI (Flutter projects only) or using [`codemagic.yaml`](../building/yaml) (all projects).
+
+Upon login, Codemagic will automatically display the list of apps in the [connected repositories](./signup#connecting-several-repository-accounts). If you want to build an app that is not available through the account you signed up with, you can [add the app from custom source](./adding-apps-from-custom-sources).
+
+{{< figure size="" src="../uploads/2019/07/app_dashboard.PNG" caption="Codemagic Applications page" >}}
 
 {{% notebox %}}
-If you can't see your app listed, it may be because you don't have sufficient permissions or Codemagic has no access to your team or organization. Codemagic requires read/write permission to build your app. Contact your repository admin to review the settings.
+* If you can't see your app listed, it may be because you don't have sufficient permissions or Codemagic has no access to your team or organization. Codemagic requires read/write permission to build your app. Contact your repository admin to review the settings.
+* If your app requires accessing private Git submodules or dependencies, you need to give Codemagic access to them in order to build successfully. See how to do that [here](../building/access-private-git-submodules). 
+
 {{% /notebox %}}
 
-Select a Flutter app and start the very first build with preconfigured defaults by clicking **Start your first build**.
+## Running the first build
 
-{{< figure size="" src="../uploads/2019/07/app_dashboard.PNG" caption="Codemagic Applications page" >}}
+* If it's a **Flutter project**, you can start the very first build with preconfigured defaults by clicking **Start your first build** on the Applications page. This will run a debug build of your master branch for the available platforms using the latest stable version of Flutter. [Tests](../testing/running-automated-tests) are disabled by default. Alternatively, you can click the **gear icon** to configure app settings, e.g. change the Flutter or Xcode version, prior to building. 
+
+    Note that if the repository contains multiple projects, you can select the right project after the first build, read more about it [below](#multiple-projects-in-one-repository).
 
-Codemagic will then fetch your app sources, create **webhooks** for automatic building and run a debug build of your master branch for both iOS and Android using the latest stable version of Flutter. If you have any **tests** in your project, these will be run too. All the while, you can monitor the build progress step by step right in your browser and expand each step for more details.
+* If it's a **non-Flutter project**, e.g. a native Android or iOS app or an app containing Flutter modules, you must first create a [codemagic.yaml](../building/yaml) file for build configuration and commit it to your repository. Then, click the **gear icon** > **Start your first build** in app settings to select a branch and YAML configuration to build.
 
-{{< figure size="" src="../uploads/2019/07/build_log_publishing.png" caption="Overview of a successful build" >}}
+As the build starts, you can monitor the build progress right in your browser and expand each build step for more details.
 
 After the build has finished successfully, you will immediately have **artifacts** available for download which you will also receive on the email that was configured for the app repository.
 
-You can then continue to customize how you want Codemagic to build, test and publish your app in **App settings**.
+### Multiple projects in one repository
+
+Codemagic is able to detect multiple Flutter projects in a repository provided that each project has its `pubspec.yaml` file.
+
+The first build is run for the project whose `pubspec.yaml` file was found first. After the first build, you can select the project for building from the **Project file path** dropdown in the Build section of app settings.
+
+{{< figure size="medium" src="../uploads/flutter-multiproject.png" caption="Select which project to build" >}}
+
+## Next steps
+
+You can then continue to customize how you want Codemagic to build, test and publish your project using either the GUI or `codemagic.yaml`. Note that you can also add custom build steps in the GUI by expanding sections before or after the default build steps visible in App settings.
 
-{{< figure size="" src="../uploads/2019/07/app_settings.png" caption="App settings page" >}}
+* Enable [automatic builds](../building/automatic-build-triggering)
+* Enable [automated tests](../testing/running-automated-tests)
+* Set up [workflows](./creating-workflows) for your project
+* Set up code signing for [Android](../code-signing/android-code-signing) and [iOS](../code-signing/ios-code-signing)
+* Set up [publishing to Google Play](../publishing/publishing-to-google-play)
+* Set up [publishing to App Store Connect](../publishing/publishing-to-app-store)
+* [Increment build version](../building/build-versioning)
+* Browse the list of [Codemagic read-only environment variables](../building/environment-variables)
+* See the list of [preinstalled software and versions](../releases-and-versions/versions)
diff --git a/content/getting-started/github-organization-accounts.md b/content/getting-started/github-organization-accounts.md
index ca0f39d..778e398 100644
--- a/content/getting-started/github-organization-accounts.md
+++ b/content/getting-started/github-organization-accounts.md
@@ -6,7 +6,7 @@ weight: 7
 
 Organizations can restrict access to third-party OAuth applications. As a member, you can request that organization admins authorize the application for use in that organization.
 
-1. In your GItHub settings, navigate to **Organization settings** > **Third-party access**.
+1. In your GitHub settings, navigate to **Organization settings** > **Third-party access**.
 2. If you don't see Codemagic listed there, go to **Personal settings** > **Applications** > **Authorized OAuth Apps**.
 3. Click on the Codemagic app.
 4. Under **Organization access**, click **Request access** > **Request approval from owners**.
diff --git a/content/getting-started/multiple-projects-in-one-repository.md b/content/getting-started/multiple-projects-in-one-repository.md
deleted file mode 100644
index 65c9663..0000000
--- a/content/getting-started/multiple-projects-in-one-repository.md
+++ /dev/null
@@ -1,10 +0,0 @@
----
-title: Multiple projects in one repository
-weight: 5
----
-
-Codemagic is able to detect multiple projects in a repository provided that each project has its `pubspec.yaml` file.
-
-The first build is run for the project whose `pubspec.yaml` file was found first. After the first build, you can select the project for building from the **Project file path** dropdown in the Build section of app settings.
-
-{{< figure size="medium" src="../uploads/2019/03/multiple_projects_dark.png" caption="Select which project to build" >}}
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index d3b5732..e789d90 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -6,7 +6,7 @@ title: Running automated tests
 weight: 1
 ---
 
-Codemagic supports running **unit**, **integration** and **widget** tests. When testing is enabled, tests are run automatically every time your project is built. You can configure the test settings in **App settings > Test**.
+Codemagic supports running **unit**, **integration** and **widget** tests as well as static code analysis with [**flutter analyze**](./static-code-analysis). When testing is enabled, tests are run automatically every time your project is built. You can configure the test settings in **App settings > Test**.
 
 ### Detecting tests
 
@@ -24,7 +24,7 @@ If your Flutter project is in a subdirectory of the repository, Codemagic cannot
 
 ### Specifying the test target
 
-In App settings > Test, you will see the **Flutter test target** and **Flutter drive target** fields displayed if the respective tests are detected. You can specify an exact target to run a specific test.
+In App settings > Test, you will see the **Flutter test target** and **Flutter drive target** fields displayed if the respective tests are detected. You can specify the exact target to run a specific test.
 
 ### Running Flutter Driver tests
 
diff --git a/content/testing/static-code-analysis.md b/content/testing/static-code-analysis.md
index 05e65e2..b3ecc33 100644
--- a/content/testing/static-code-analysis.md
+++ b/content/testing/static-code-analysis.md
@@ -6,9 +6,9 @@ weight: 2
 
 Test your code with `flutter analyze` to find possible mistakes. You can read more about this feature in [Dart documentation](https://dart.dev/guides/language/analysis-options). By default, static code analysis is disabled and has to be enabled in **App settings > Test** by checking the **Enable Flutter analyzer** option.
 
-{{< figure size="medium" src="../uploads/2019/05/flutter_analyze.PNG" caption="" >}}
+To run `flutter analyze`, Codemagic specifies the `analyze` command in the **Flutter analyze arguments** field. You can pass additional arguments to customize static code analysis. For example, adding `--write=analyzer-output.txt` prints the results of static code analysis into a text file. 
 
-To run `flutter analyze`, Codemagic specifies the `analyze` command in the **Flutter analyze arguments** field. You can pass additional arguments to customize static code analysis. For example, adding `--write=analyzer-output.txt` prints the results of static code analysis into a text file. If you check **Stop build if tests fail**, the build will fail in the case any issues are detected during static code analysis.
+If you check **Stop build if tests fail**, the build will fail if any issues are detected during static code analysis.
 
 When enabled, `flutter analyze` will be run with each build. You can see the results and the logs of the analysis under the **Running tests** step in build overview.
 
diff --git a/content/uploads/add-app-from-custom-source1.png b/content/uploads/add-app-from-custom-source1.png
index abcb32d..47bd1fe 100644
Binary files a/content/uploads/add-app-from-custom-source1.png and b/content/uploads/add-app-from-custom-source1.png differ
diff --git a/content/uploads/flutter-multiproject.png b/content/uploads/flutter-multiproject.png
new file mode 100644
index 0000000..ec350c8
Binary files /dev/null and b/content/uploads/flutter-multiproject.png differ

commit 1bc80430afc1cd7fc3262a3a4857783edabc09c0
Author: Jainam Jhaveri <engineerjainam@gmail.com>
Date:   Tue Dec 17 21:19:12 2019 +0530

    Update add-a-git-tag-with-app-version.md (#26)
    
    Fix a typo greate -> create

diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index 291d9e6..8f7f122 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -4,7 +4,7 @@ title: Add a Git tag with app version
 weight: 2
 ---
 
-You can use Codemagic to greate a Git tag and push it to your repository.
+You can use Codemagic to create a Git tag and push it to your repository.
 
 {{% notebox %}}
 
@@ -43,4 +43,4 @@ Pushing git tags from Codemagic to repository requires **write access** to the r
 
 {{% notebox %}}
 Make sure to use the `https` repository URL for pushing. Using the `ssh` format is not supported with app passwords or personal access tokens
-{{% /notebox %}}
\ No newline at end of file
+{{% /notebox %}}

commit 78e43e89f6facec5ab4b0db91e4acc202a5d3655
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Dec 13 14:00:39 2019 +0200

    Formatting

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index bd9bac2..edc7643 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -30,7 +30,6 @@ weight: 2
 
 `11.3 (11C24b) (/Applications/Xcode-11.3.app)`
 
-
 - CocoaPods `1.8.4`
 
 **Android tools**

commit 9ec3fb8e264c33fb640a4d1b40c8367bd4adcca9
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Dec 13 14:00:19 2019 +0200

    Move fastlane

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index a7257e0..bd9bac2 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -33,14 +33,13 @@ weight: 2
 
 - CocoaPods `1.8.4`
 
-- Fastlane `2.136.0`
-
 **Android tools**
 
 - Android tools `$HOME/programs/android-sdk-macosx`
 
 **Other tools**
 
+- fastlane `2.136.0`
 - wget `1.20.3`
 - curl `7.54.0`
 - ssh `7.9p1`

commit 9484fd9fc24088e85a8b3e74700e3248dc66b4bf
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Fri Dec 13 14:18:31 2019 +0300

    base image update (#24)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 6c2cf24..a7257e0 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -6,7 +6,7 @@ weight: 2
 **Dart and Flutter**
 
 - Dart `2.6.1`
-- Flutter `1.9.1+hotfix.6 ($HOME/programs/flutter)`
+- Flutter `1.12.13+hotfix.5 ($HOME/programs/flutter)`
 
 **iOS tools**
 
@@ -33,6 +33,8 @@ weight: 2
 
 - CocoaPods `1.8.4`
 
+- Fastlane `2.136.0`
+
 **Android tools**
 
 - Android tools `$HOME/programs/android-sdk-macosx`

commit 7ed10565c1a914c7c183eb4bab31c6d293ee7bc1
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Fri Dec 6 14:21:06 2019 +0200

    Common issue update (#23)
    
    * Updated common issues with new common issue
    
    * relocated custom script files and updated accessing git submodoules
    
    * changed description and merged
    
    * fixed/merged
    
    * Change weight
    
    * common-issue-update
    
    * Update common-issues.md
    
    * Update access-private-git-submodules.md
    
    * Update with new screenshots

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index d67be2f..00e7fc8 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -4,15 +4,15 @@ title: Adding apps from custom sources
 weight: 4
 ---
 
-You can add apps from other public or private Git-based repositories. This includes repositories requiring **SSH key authentication**. Click **Add app from custom source** on the Applications page to get started.
+You can add apps from public or private Git-based repositories. This includes repositories requiring **SSH key authentication**. Click **Add app from custom source** on the Applications page to get started.
 
-{{< figure size="medium" src="../uploads/2019/03/add_app_light-1.PNG" caption="" >}}
+{{< figure size="" src="../uploads/add-app-from-custom-source1.png" caption="" >}}
 
 Then, fill in all the required fields.
 
-{{< figure size="medium" src="../uploads/2019/03/app_using_ssh_authentication.PNG" caption="" >}}
+{{< figure size="" src="../uploads/add-app-from-custom-source2.png" caption="" >}}
 
-1. Enter the checkout URL of the repository.
+1. Enter the Git URL for cloning the repository. The URL should be in the following format: `https://example.com/username/repo.git` or `git@example.com/username/repo.git`. 
 2. If a private key is required to access the repository or any private submodules in it, upload the **SSH private key** file.
 3. If the SSH key is password-protected, you'll be also asked to enter the **SSH key password**.
 4. Click **Add app**.
diff --git a/content/uploads/add-app-from-custom-source1.png b/content/uploads/add-app-from-custom-source1.png
new file mode 100644
index 0000000..abcb32d
Binary files /dev/null and b/content/uploads/add-app-from-custom-source1.png differ
diff --git a/content/uploads/add-app-from-custom-source2.png b/content/uploads/add-app-from-custom-source2.png
new file mode 100644
index 0000000..a516d43
Binary files /dev/null and b/content/uploads/add-app-from-custom-source2.png differ

commit 901351a1539ebf1b1b6a38ea89bbaa96acf1ef4e
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Thu Dec 5 13:09:28 2019 +0200

    Common issue update (#22)
    
    * Updated common issues with new common issue
    
    * relocated custom script files and updated accessing git submodoules
    
    * changed description and merged
    
    * fixed/merged
    
    * Change weight
    
    * common-issue-update
    
    * Update common-issues.md
    
    * Update access-private-git-submodules.md

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
index c154634..692ae27 100644
--- a/content/building/access-private-git-submodules.md
+++ b/content/building/access-private-git-submodules.md
@@ -13,7 +13,7 @@ You can do that by saving the SSH key to your repository as a secure [environmen
         ...
         -----END OPENSSH PRIVATE KEY-----
 
-1.  If you wish to use a **custom** environment variable name without the suffix `_SSH_KEY`, add the following **post-clone** script to add the key to the SSH agent.
+2.  If you wish to use a **custom** environment variable name without the suffix `_SSH_KEY`, add the following **post-clone** script to add the key to the SSH agent.
 
         #!/usr/bin/env sh
         echo "${CUSTOM_SSH_KEY_NAME}" > /tmp/ssh_key
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 5492f02..6a9e5b9 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -56,7 +56,9 @@ Builds succeed locally but not on Codemagic and throw vague errors, such as `Gra
 
 **Cause**: These issues are likely caused because plugin and gradle versions used locally are different from the versions used on Codemagic. If you are using a gradle version that is different from Codemagic, you have to define it in `gradle wrapper`. Otherwise, Codemagic ignores your `build.gradle` file and your build won't work properly. See which [software versions Codemagic uses](../releases-and-versions/versions/).
 
-**Solution**: First, you need to make sure that the `gradlew` file isn't in `.gitignore`. Look for `**/android/gradlew`, and if it's in `.gitignore`, delete it from there. Then run `./gradlew wrapper --gradle-version [your gradle version]` locally to create `gradlew` and `gradle-wrapper.properties` files in your repository. Commit the changes and rerun your Codemagic build. 
+**Solution**: First, you need to make sure that the `gradlew` file isn't in `.gitignore`. Look for `**/android/gradlew`, and if it's in `.gitignore`, delete it from there. Then add `!gradle-wrapper.jar` to a new line in `.gitignore` to create an exception so that `gradle-wrapper.jar` would also be excluded from `.gitignore`.
+
+Run `./gradlew wrapper --gradle-version [your gradle version]` locally to create `gradlew` and `gradle-wrapper.properties` files in your repository. Commit the changes and rerun your Codemagic build. 
 
 **Additional steps**: Additional steps are required if you see the following error during the build process:
 

commit a6e522a19ae6aa9850f8e83f67497b25f13d514b
Author: madispp <madis@nevercode.io>
Date:   Wed Dec 4 17:44:12 2019 +0200

    clarify that yaml-encrypted file is base64 (#21)

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 40fd983..9d9cabd 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -40,7 +40,18 @@ If you wish to add new environment variables to the YAML file, you can encrypt t
 
 An example of an encrypted value:
 
-```Encrypted(Z0FBQUFBQmRyY1FLWXIwVEhqdWphdjRhQ0xubkdoOGJ2bThkNmh4YmdXbFB3S2wyNTN2OERoV3c0YWU0OVBERG42d3Rfc2N0blNDX3FfblZxbUc4d2pWUHJBSVppbXNXNC04U1VqcGlnajZ2VnJVMVFWc3lZZ289)```
+```
+Encrypted(Z0FBQUFBQmRyY1FLWXIwVEhqdWphdjRhQ0xubkdoOGJ2bThkNmh4YmdXbFB3S2wyNTN2OERoV3c0YWU0OVBERG42d3Rfc2N0blNDX3FfblZxbUc4d2pWUHJBSVppbXNXNC04U1VqcGlnajZ2VnJVMVFWc3lZZ289)
+```
+
+{{% notebox %}}Note that when the value is uploaded as a file, it is encoded to `base64`.{{% /notebox %}}
+
+Writing the base64-encoded environment variable to a file can be done like this:
+
+```
+scripts:
+  - echo $MY_FILE | base64 --decode > my-file.json
+```
 
 ## Building with YAML
 

commit f88cd32eae2344c0b9067e7414dd9eceb9fbce25
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Thu Nov 28 15:20:40 2019 +0200

    Custom script access git submodule update (#19)
    
    * Updated common issues with new common issue
    
    * relocated custom script files and updated accessing git submodoules
    
    * changed description and merged
    
    * fixed/merged
    
    * Change weight

diff --git a/content/building/access-private-git-submodules.md b/content/building/access-private-git-submodules.md
new file mode 100644
index 0000000..c154634
--- /dev/null
+++ b/content/building/access-private-git-submodules.md
@@ -0,0 +1,22 @@
+---
+description: Access any private Git submodules or dependencies in Codemagic
+title: Accessing private repositories
+weight: 4
+---
+
+If your project requires accessing any private Git submodules or dependencies, you'll need to grant Codemagic access to them in order to build successfully. 
+You can do that by saving the SSH key to your repository as a secure [environment variable](https://docs.codemagic.io/building/environment-variables/), i.e. `SSH_KEY`. All environment variables whose name has the suffix `_SSH_KEY` will be automatically added to the SSH agent and will be ready for use during the whole build process.
+
+1.  Save the SSH key (e.g. `SSH_KEY`) for accessing the repository as an environment variable. Make sure to check **Secure**.
+
+        SSH_KEY = -----BEGIN OPENSSH PRIVATE KEY-----
+        ...
+        -----END OPENSSH PRIVATE KEY-----
+
+1.  If you wish to use a **custom** environment variable name without the suffix `_SSH_KEY`, add the following **post-clone** script to add the key to the SSH agent.
+
+        #!/usr/bin/env sh
+        echo "${CUSTOM_SSH_KEY_NAME}" > /tmp/ssh_key
+        chmod 600 /tmp/ssh_key
+        eval `ssh-agent -s`
+        ssh-add /tmp/ssh_key
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 41b1ccd..ffa5bd7 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,6 +1,6 @@
 ---
 title: Build versioning
-weight: 9
+weight: 10
 ---
 
 If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using **build arguments** and the `BUILD_NUMBER` environment variable.
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index b83f3a9..9fb0023 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -1,6 +1,6 @@
 ---
 title: Building Android app bundles
-weight: 4
+weight: 5
 ---
 
 You can build your app in [Android app bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
diff --git a/content/building/building-for-desktop.md b/content/building/building-for-desktop.md
index 798d6db..c19ddd8 100644
--- a/content/building/building-for-desktop.md
+++ b/content/building/building-for-desktop.md
@@ -1,7 +1,7 @@
 ---
 description: Build a Flutter app for desktop with Codemagic.
 title: Building for desktop
-weight: 7
+weight: 8
 ---
 
 You can use Codemagic to build Flutter desktop apps for macOS and Linux. Building Windows apps is not yet supported. 
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index 579daa3..4236489 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -1,7 +1,7 @@
 ---
 description: Build a Flutter web app with Codemagic.
 title: Building for the web
-weight: 6
+weight: 7
 ---
 
 You can build, test and publish Flutter web apps with Codemagic.
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 17aa8c3..0b740a2 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -1,7 +1,7 @@
 ---
 description: Store your dependencies on Codemagic for a faster build time.
 title: Dependency caching
-weight: 8
+weight: 9
 ---
 
 You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
index c699973..6017ef9 100644
--- a/content/building/specifying-custom-ios-scheme.md
+++ b/content/building/specifying-custom-ios-scheme.md
@@ -1,6 +1,6 @@
 ---
 title: Specifying custom iOS scheme
-weight: 5
+weight: 6
 ---
 
 By default, Codemagic builds the iOS app using the `Runner` scheme. You can specify a custom iOS scheme for the `xcodebuild` command with the `FCI_FLUTTER_SCHEME` environment variable. A different iOS scheme can be specified for each workflow.
diff --git a/content/custom-scripts/access-private-git-submodules.md b/content/custom-scripts/access-private-git-submodules.md
deleted file mode 100644
index b54e602..0000000
--- a/content/custom-scripts/access-private-git-submodules.md
+++ /dev/null
@@ -1,21 +0,0 @@
----
-description: Access private Git submodules in Codemagic
-title: Access private Git submodules
-weight: 1
----
-
-You can access private Git submodules in Codemagic by saving the SSH key to your repository as an [environment variable](https://docs.codemagic.io/building/environment-variables/) and referencing it in a custom **post-clone** script.
-
-1.  Save the SSH key (e.g. `SUBMODULE_SSH_KEY`) for accessing the repository as an environment variable. Make sure to check **Secure**.
-
-        SUBMODULE_SSH_KEY = -----BEGIN OPENSSH PRIVATE KEY-----
-        ...
-        -----END OPENSSH PRIVATE KEY-----
-
-1.  Add the following **post-clone** script to enable fetching sources from private Git submodules.
-
-           #!/usr/bin/env sh
-
-           echo "${SUBMODULE_SSH_KEY}" > /tmp/submodule.key
-           chmod 600 /tmp/submodule.key
-           ssh-agent bash -c 'ssh-add "/tmp/submodule.key"; git submodule update --init --recursive'
diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index ed94bbb..126740e 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -1,7 +1,7 @@
 ---
 description: Load your Firebase configuration files to Codemagic
 title: Load Firebase configuration
-weight: 6
+weight: 1
 ---
 
 Instead of committing the Firebase config files to your repository, you can upload them to Codemagic as [environment variables](https://docs.codemagic.io/building/environment-variables/) and reference them in a custom script. Note that the Firebase config file (`google-services.json` for Android or `GoogleService-Info.plist` for iOS) must be Base64-encoded.
diff --git a/content/custom-scripts/run-static-code-analysis.md b/content/custom-scripts/run-static-code-analysis.md
index bbe9e5a..69095bc 100644
--- a/content/custom-scripts/run-static-code-analysis.md
+++ b/content/custom-scripts/run-static-code-analysis.md
@@ -1,7 +1,7 @@
 ---
 draft: true
 title: Run static code analysis
-weight: 7
+weight:
 ---
 
 You can use this **pre-test** script to run static code analysis with `flutter analyze`.
diff --git a/content/custom-scripts/upload-custom-artifacts.md b/content/custom-scripts/upload-custom-artifacts.md
index 9123ac0..8b602f0 100644
--- a/content/custom-scripts/upload-custom-artifacts.md
+++ b/content/custom-scripts/upload-custom-artifacts.md
@@ -1,7 +1,7 @@
 ---
 description: Upload files to be included in your build artifacts ZIP file
 title: Upload custom artifacts
-weight: 7
+weight: 3
 ---
 
 You can use a custom script to upload custom artifacts, such as screenshots, to `$FCI_EXPORT_DIR` and include them in the build artifacts ZIP file generated by Codemagic.
diff --git a/content/custom-scripts/beta-deployment-with-fastlane.md b/content/publishing/beta-deployment-with-fastlane.md
similarity index 98%
rename from content/custom-scripts/beta-deployment-with-fastlane.md
rename to content/publishing/beta-deployment-with-fastlane.md
index 5a8ea83..cbafc85 100644
--- a/content/custom-scripts/beta-deployment-with-fastlane.md
+++ b/content/publishing/beta-deployment-with-fastlane.md
@@ -1,7 +1,7 @@
 ---
 description: Run fastlane scripts to deploy to beta distribution services 
 title: Run fastlane for beta deployment
-weight: 5
+weight: 7
 ---
 
 If your Flutter app has an existing *fastlane* setup for beta deployment, you can easily run *fastlane* scripts as part of the Codemagic build process and publish to Crashlytics, for example. Note that our builder machines have *fastlane* pre-installed. You can use the pre-publish script example below to execute `fastlane beta` for successful Android builds.
diff --git a/content/custom-scripts/publish-app-artifacts-to-app-center.md b/content/publishing/publish-app-artifacts-to-app-center.md
similarity index 99%
rename from content/custom-scripts/publish-app-artifacts-to-app-center.md
rename to content/publishing/publish-app-artifacts-to-app-center.md
index dd066a6..783b6d7 100644
--- a/content/custom-scripts/publish-app-artifacts-to-app-center.md
+++ b/content/publishing/publish-app-artifacts-to-app-center.md
@@ -1,7 +1,7 @@
 ---
 description: Upload your apk or ipa file to App Center
 title: Publish app artifacts to App Center
-weight: 3
+weight: 6
 ---
 
 As a custom build step, Codemagic can publish your app artifact to App Center using the [App Center Command Line Interface](https://github.com/microsoft/appcenter-cli). An **App Center API token** is required for publishing. It is advisable to create a new token for use on Codemagic, see the commands related to API tokens [here](https://github.com/microsoft/appcenter-cli#commands) or manage your tokens in [App Center settings](https://appcenter.ms/settings/apitokens).
diff --git a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md b/content/publishing/publish-build-artifacts-to-amazon-s3.md
similarity index 99%
rename from content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
rename to content/publishing/publish-build-artifacts-to-amazon-s3.md
index e780600..dc5d452 100644
--- a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
+++ b/content/publishing/publish-build-artifacts-to-amazon-s3.md
@@ -1,7 +1,7 @@
 ---
 description: You can use custom scripts to publish app artifacts to external services.
 title: Publish build artifacts to Amazon S3
-weight: 4
+weight: 5
 ---
 
 You can use custom scripts to publish your app artifacts to external sources. Here's an example for publishing to [Amazon S3](https://aws.amazon.com/s3/).
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 6ce5a63..5492f02 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -74,4 +74,4 @@ Codemagic runs `./gradlew --version` on the builder side to check if it's suitab
 
 * Make a fix for the issue found.
 * Commit changes to the repo.
-* Run the build again in Codemagic.
\ No newline at end of file
+* Run the build again in Codemagic.

commit 1e43e96c390148fce16c232b6072c2a3e15a6cf7
Merge: 4fd1e71 50bb0c5
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Nov 28 13:05:31 2019 +0200

    Merge branch 'master' of github.com:codemagic-ci-cd/codemagic-docs

commit 4fd1e71ef0b5e9ed322dcd42be391e57042741b0
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Nov 28 13:05:26 2019 +0200

    Fix typo

diff --git a/content/custom-scripts/publish-app-artifacts-to-app-center.md b/content/custom-scripts/publish-app-artifacts-to-app-center.md
index e9e48a6..85c9f9c 100644
--- a/content/custom-scripts/publish-app-artifacts-to-app-center.md
+++ b/content/custom-scripts/publish-app-artifacts-to-app-center.md
@@ -22,7 +22,7 @@ echo "Found apk at $apkPath"
 
 if [[ -z ${apkPath} ]]
 then
-    echo "No ipas were found, skip publishing to App Center"
+    echo "No apks were found, skip publishing to App Center"
 else
     echo "Publishing $apkPath to App Center"
     appcenter distribute release \

commit 50bb0c5c31793ea5471c9282bb05a9d571e53307
Author: Priit Lätt <priit@nevercode.io>
Date:   Wed Nov 27 16:13:03 2019 +0200

    Fix path where ipas are looked up from (#18)

diff --git a/content/custom-scripts/publish-app-artifacts-to-app-center.md b/content/custom-scripts/publish-app-artifacts-to-app-center.md
index e9e48a6..70e5e5b 100644
--- a/content/custom-scripts/publish-app-artifacts-to-app-center.md
+++ b/content/custom-scripts/publish-app-artifacts-to-app-center.md
@@ -43,7 +43,7 @@ echo 'Installing App Center CLI tools'
 npm install -g appcenter-cli
 
 echo "Find build artifacts"
-ipaPath=$(find build -name "*.ipa" | head -1)
+ipaPath=$(find ~/ipas -name "*.ipa" | head -1)
 echo "Found ipa at $ipaPath"
 
 if [[ -z ${ipaPath} ]]
@@ -61,4 +61,4 @@ else
 fi
 ```
 
-This way, you can use Codemagic to automate publishing of your Android or iOS app to App Center.
\ No newline at end of file
+This way, you can use Codemagic to automate publishing of your Android or iOS app to App Center.

commit c85fb063ec791b5b8246cac32977664234bfb597
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Mon Nov 25 19:25:16 2019 +0200

    Updated common issues with new common issue (#17)

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index d0ea09b..6ce5a63 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -48,3 +48,30 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
 * https://github.com/flutter/flutter/issues/35988
 
 This issue is known to be fixed on the `master` channel.
+
+## Version inconsistency between local and Codemagic
+
+**Description**:
+Builds succeed locally but not on Codemagic and throw vague errors, such as `Gradle task bundleRelease failed with exit code 1`, or build is successful but some functions aren't working. 
+
+**Cause**: These issues are likely caused because plugin and gradle versions used locally are different from the versions used on Codemagic. If you are using a gradle version that is different from Codemagic, you have to define it in `gradle wrapper`. Otherwise, Codemagic ignores your `build.gradle` file and your build won't work properly. See which [software versions Codemagic uses](../releases-and-versions/versions/).
+
+**Solution**: First, you need to make sure that the `gradlew` file isn't in `.gitignore`. Look for `**/android/gradlew`, and if it's in `.gitignore`, delete it from there. Then run `./gradlew wrapper --gradle-version [your gradle version]` locally to create `gradlew` and `gradle-wrapper.properties` files in your repository. Commit the changes and rerun your Codemagic build. 
+
+**Additional steps**: Additional steps are required if you see the following error during the build process:
+
+`Error! Failed to check gradle version. Malformed executable tmpABCDEF/gradlew`
+
+Codemagic runs `./gradlew --version` on the builder side to check if it's suitable for execution. If you see the error message shown above, there is something wrong with checking the gradle version.
+
+**To investigate and fix the issues**:
+
+* Make a clean clone of the repository and execute the following commands:
+
+        cd <project_root>
+        chmod +x gradlew
+        ./gradlew --version
+
+* Make a fix for the issue found.
+* Commit changes to the repo.
+* Run the build again in Codemagic.
\ No newline at end of file

commit 88b0493d514656c3a446b6db84dc14048e185c15
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Thu Nov 21 11:57:59 2019 +0200

    base image update (#16)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 5352054..6c2cf24 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -47,7 +47,7 @@ weight: 2
 - python `2.7.17`
 - python3 `3.7.5`
 - node `12.10.0`
-- npm `6.13.0`
+- npm `6.13.1`
 - yarn `1.19.1`
 - gem `3.0.3`
 - ruby `2.6.5p114`

commit 6147323aae0f03bac21231ceb8ec22a47f88f629
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Mon Nov 18 17:26:12 2019 +0200

    base image update (#15)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index fd4f906..5352054 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -5,7 +5,7 @@ weight: 2
 ---
 **Dart and Flutter**
 
-- Dart `2.6.0`
+- Dart `2.6.1`
 - Flutter `1.9.1+hotfix.6 ($HOME/programs/flutter)`
 
 **iOS tools**
@@ -26,9 +26,9 @@ weight: 2
 
 `11.1 (11A1027) (/Applications/Xcode-11.1.app)`
 
-`11.2 (11B52) (/Applications/Xcode-11.2.app)`
+`11.2.1 (11B500) (/Applications/Xcode-11.2.1.app)`
 
-`11.2.1 (11B53) (/Applications/Xcode-11.2.1.app)`
+`11.3 (11C24b) (/Applications/Xcode-11.3.app)`
 
 
 - CocoaPods `1.8.4`

commit 33a3cd67a6d7bf8add1eec8a40d090c7b3ce9df1
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Nov 15 10:59:50 2019 +0200

    Update with new features

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 4a3f061..17515d1 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,8 +4,24 @@ title: Release notes
 weight: 1
 ---
 
+## November 2019
+
+### Make builds public
+
+You can now share your Codemagic builds publicly via a **direct link** to the build or by displaying a **build status badge** in your repository. Anyone accessing the link will be able to see the build logs and download build artifacts. This is a great option for sharing your open-source projects and getting feedback from fellow Flutter developers.
+
+This feature is workflow-specific. In your Workflow settings, click the **Make builds public** toggle to make all existing and future build logs and artifacts of the workflow publicly accessible. Your app and its settings will remain private. Note that direct links to build artifacts and log files will remain accessible even when you disable the feature.
+
+### Download build step logs
+
+We have added the option to download the log of each build step. This makes it easier to view very large log files, search inside them or compare the logs of successful and failed builds.
+
 ## October 2019
 
+### SMS verification for two-factor authentication
+
+Codemagic supports receiving verification codes for two-factor authentication via SMS. This is a good option for those who don’t have their Apple device at hand but have registered a trusted phone number to receive verification codes. If you have multiple trusted phone numbers available, you can choose the number to which the verification code will be sent.
+
 ### Apple Developer Portal integration
 
 With the Apple Developer Portal integration, users can use the same credentials for automatic iOS code signing across all apps on user's personal account or in a team without having to enter them in app settings. Read more about [automatic code signing with Apple Developer Portal integration](../code-signing/ios-code-sining/#automatic-code-signing). 
@@ -24,7 +40,7 @@ Teams on Codemagic now have Magic seats available in addition to regular team se
 
 ## September 2019
 
-### Codemagic CI/CD GitHub app (beta)
+### Codemagic CI/CD GitHub app *beta*
 
 In addition to GitHub OAuth integration, you can now use Codemagic via the GitHub app. The [Codemagic CI/CD GitHub app](https://github.com/marketplace/codemagic-ci-cd) requires less permissions than the GitHub OAuth integration and enables you to configure which repositories Codemagic can access. Read more about the benefits of Codemagic GitHub app on our [blog](https://blog.codemagic.io/codemagic-github-app/) and see our [documentation](../getting-started/codemagic-github-app) for details about the integration. 
 

commit f4eaa875d36a4415d6690e9f2e3e304528955eba
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Nov 12 13:57:45 2019 +0200

    Fix link

diff --git a/content/testing/aws.md b/content/testing/aws.md
index 6ba9656..09dd30f 100644
--- a/content/testing/aws.md
+++ b/content/testing/aws.md
@@ -14,7 +14,7 @@ Using AWS Device Farm requires having an AWS account. You are billed separately
 ## Requirements
 
 * An IAM user with Device Farm permissions is required. Follow the instructions outlined in the [setup document](https://docs.aws.amazon.com/devicefarm/latest/developerguide/setting-up.html) to create an IAM user with access to Device Farm and make note of the **access key ID** and **secret access key**.
-* `sylph.yaml` file in the repository for AWS Device Farm configuration (optional). The `sylph.yaml` template is available on [GitHub](https://github.com/mmcc007/sylph/blob/master/example/sylph.yaml).
+* `sylph.yaml` file in the repository for AWS Device Farm configuration (optional). The `sylph.yaml` templates are available on [GitHub](https://github.com/mmcc007/sylph/tree/master/example).
 
 {{% notebox %}}
 We strongly advise you to set up an IAM user with a policy to access Device Farm and no other AWS permissions. Don't use your AWS root account credentials to link Codemagic with Device Farm.

commit 7d95f78f66f7b6f450a05bb79b0851b9b074b071
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Nov 8 15:57:47 2019 +0200

    Add publishing of release notes

diff --git a/content/publishing/publish-release-notes.md b/content/publishing/publish-release-notes.md
new file mode 100644
index 0000000..00c90b6
--- /dev/null
+++ b/content/publishing/publish-release-notes.md
@@ -0,0 +1,17 @@
+---
+description: Publish release notes with the build.
+title: Publish release notes
+weight: 4
+---
+
+Create a custom release notes file to notify users of the changes as you publish a new version of your app.
+
+Release notes can be published to:
+
+* **Email**. The release notes will be included in the publishing email if you have publishing to email configured in App settings > Publish > Email.
+* **Slack**. The release notes will be included in the Slack notification if you have Slack publishing configured in App settings > Publish > Slack.
+* **Google Play**. The release notes will be published to Google Play Console if you have Google Play publishing configured in App settings > Publish > Google Play. The content of the release notes file is published for `en-US`.
+
+## Setting up release notes
+
+Create a `release_notes.txt` file and add it to the root of the repository. When present, Codemagic will fetch the content of that file and publish it with the build.
\ No newline at end of file
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index b6e02ee..05fb1cc 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -1,6 +1,6 @@
 ---
 description: Deploy the Flutter app to App Store and TestFlight
-title: Publishing to App Store
+title: App Store Connect
 weight: 1
 ---
 
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index e0e2f7c..ccc8350 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -1,6 +1,6 @@
 ---
 description: Publish each new version of your web app to a custom subdomain.
-title: Publishing to Codemagic Static Pages
+title: Codemagic Static Pages
 weight: 3
 ---
 
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index b637a5e..295edda 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -1,6 +1,6 @@
 ---
 description: Deploy the Flutter app to Google Play
-title: Publishing to Google Play
+title: Google Play
 weight: 2
 ---
 

commit 6e31000e2aac2b557f89b88565707f5c22bb9e4a
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Fri Nov 8 10:30:23 2019 +0200

    base image update (#14)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 35b5933..fd4f906 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -5,7 +5,7 @@ weight: 2
 ---
 **Dart and Flutter**
 
-- Dart `2.5.2`
+- Dart `2.6.0`
 - Flutter `1.9.1+hotfix.6 ($HOME/programs/flutter)`
 
 **iOS tools**
@@ -26,7 +26,9 @@ weight: 2
 
 `11.1 (11A1027) (/Applications/Xcode-11.1.app)`
 
-`11.2 (11B44) (/Applications/Xcode-11.2.app)`
+`11.2 (11B52) (/Applications/Xcode-11.2.app)`
+
+`11.2.1 (11B53) (/Applications/Xcode-11.2.1.app)`
 
 
 - CocoaPods `1.8.4`
@@ -40,12 +42,14 @@ weight: 2
 - wget `1.20.3`
 - curl `7.54.0`
 - ssh `7.9p1`
-- git `2.23.0`
-- homebrew `2.1.14`
-- python `2.7.16`
-- python3 `3.7.4`
+- git `2.24.0`
+- homebrew `2.1.16`
+- python `2.7.17`
+- python3 `3.7.5`
 - node `12.10.0`
-- npm `6.11.3`
+- npm `6.13.0`
 - yarn `1.19.1`
-- gem `2.5.2.2`
-- ruby `2.3.6p384`
+- gem `3.0.3`
+- ruby `2.6.5p114`
+- firebase `7.6.2`
+- gradle `5.5.1`

commit 5eae03b3aba7c78d4da0042dd06c5b676f758e47
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Nov 5 09:51:20 2019 +0200

    Fix typo

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 729c634..40fd983 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -86,7 +86,7 @@ This is the skeleton structure of `codemagic.yaml`.
 
 ### Workflows
 
-You can use `Codemagic.yaml` to define several workflows for building a project. Each workflow describes the entire build pipeline from triggers to publishing.
+You can use `codemagic.yaml` to define several workflows for building a project. Each workflow describes the entire build pipeline from triggers to publishing.
 
     workflows:
       my-workflow:                # workflow ID

commit 780a265674c22fc14319293b1dc1db19f73aaefa
Merge: 8e3b496 c0f8110
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Mon Nov 4 17:56:26 2019 +0200

    Merge branch 'master' of github.com:codemagic-ci-cd/codemagic-docs

commit 8e3b496f93ae1fc42b54cb00fe8d7a2daab717f2
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Mon Nov 4 17:55:36 2019 +0200

    fix typo

diff --git a/content/building/yaml.md b/content/building/yaml.md
index 5cec7af..729c634 100644
--- a/content/building/yaml.md
+++ b/content/building/yaml.md
@@ -3,7 +3,7 @@ title: Advanced configuration with YAML
 weight: 1
 ---
 
-`Codemagic.yaml` is an advanced option for customizing the build and configuring all your workflows in a single file. The file can be committed to version control, and when detected in repository, will be used to configure the build instead of the settings in the UI.
+`codemagic.yaml` is an advanced option for customizing the build and configuring all your workflows in a single file. The file can be committed to version control, and when detected in repository, will be used to configure the build instead of the settings in the UI.
 
 {{% notebox %}}
 

commit c0f8110e482038f2f90006bae53207d5e2ca31ef
Author: Madis Peebo <madis@nevercode.io>
Date:   Mon Nov 4 16:52:30 2019 +0200

    fix url

diff --git a/config/production/config.yml b/config/production/config.yml
index 2db4b9e..705fcd3 100644
--- a/config/production/config.yml
+++ b/config/production/config.yml
@@ -4,4 +4,4 @@ baseURL: https://docs.codemagic.io
 params:
   googleAnalyticsTrackingId: UA-125963734-1
   googleOptimizeId: GTM-TW39Z9J
-  appUserUrl: https://api.codemagic.io/user/
+  appUserUrl: https://api.codemagic.io/user
diff --git a/layouts/partials/analytics.ace b/layouts/partials/analytics.ace
index 8b94d78..aa0f4c6 100644
--- a/layouts/partials/analytics.ace
+++ b/layouts/partials/analytics.ace
@@ -58,4 +58,4 @@
   fbq('track', 'PageView')
     
 noscript
-  img height="1" width="1" src="https://www.facebook.com/tr?id=2000132876774057&ev=PageView&noscript=1"
\ No newline at end of file
+  img height="1" width="1" src="https://www.facebook.com/tr?id=2000132876774057&ev=PageView&noscript=1"

commit 918d7396a0cc5c4f5565457db9ec74ceb51cf325
Merge: ba79e91 6421854
Author: Madis Peebo <madis@nevercode.io>
Date:   Mon Nov 4 16:50:24 2019 +0200

    Merge branch 'analytics'

commit 6421854fa07f28e62c38c50b08d2dc4ec8eeb128
Author: Madis Peebo <madis@nevercode.io>
Date:   Mon Nov 4 16:49:51 2019 +0200

    add new optimize id

diff --git a/config.yml b/config.yml
index a41dba9..4a6d454 100644
--- a/config.yml
+++ b/config.yml
@@ -13,8 +13,7 @@ params:
   headerLinkTitle: Documentation
   locale: en_GB
   googleAnalyticsTrackingId: UA-125963734-2
-  googleTagManagerTrackingId: GTM-PFJ47PW
-  googleOptimizeId: 'GTM-PZPXGKT'
+  googleOptimizeId: 'GTM-M67KWVX'
 imaging:
   resampleFilter: linear
   quality: 90
diff --git a/config/production/config.yml b/config/production/config.yml
index 23d0207..2db4b9e 100644
--- a/config/production/config.yml
+++ b/config/production/config.yml
@@ -3,6 +3,5 @@ baseURL: https://docs.codemagic.io
 
 params:
   googleAnalyticsTrackingId: UA-125963734-1
-  googleTagManagerTrackingId: GTM-TW39Z9J
   googleOptimizeId: GTM-TW39Z9J
   appUserUrl: https://api.codemagic.io/user/
diff --git a/layouts/partials/analytics.ace b/layouts/partials/analytics.ace
index 932aeb6..8b94d78 100644
--- a/layouts/partials/analytics.ace
+++ b/layouts/partials/analytics.ace
@@ -1,22 +1,61 @@
 = javascript
+  const userFetchTimeoutMs = 3000
   const analyticsId = '{{ site.Param "googleAnalyticsTrackingId" }}'
-  const gtagId = '{{ site.Param "googleOptimizeId" }}'
+  const optimizeId = '{{ site.Param "googleOptimizeId" }}'
   const appUserUrl = '{{ site.Param "appUserUrl" }}'
 
   window.dataLayer = window.dataLayer || []
   function gtag() {
     window.dataLayer.push(arguments)
   }
-  gtag('config', analyticsId, { 'optimize_id': gtagId, 'custom_map': { 'dimension1': 'user_state' } })
-  gtag('js', new Date())
-
   ;(async function() {
     try {
-      const r = await fetch(appUserUrl, { mode: 'cors', credentials: 'include', headers: { 'Accept': 'application/json' } })
-      const response = await r.json()
+      const response = await fetchJson(appUserUrl, userFetchTimeoutMs)
       if (response.user.ok) {
-        window.dataLayer.push({'user_state': 'User'})
-        gtag('event', 'Detect User', { 'event_label': 'User', 'non_interaction': true })
+        window.dataLayer.push({ user_state: 'User' })
       }
-    } catch (error) {}
+    } finally {
+      gtag('config', analyticsId, {
+        optimize_id: optimizeId,
+        custom_map: { dimension1: 'user_state' }
+      })
+      gtag('js', new Date())
+    }
   })()
+
+  async function fetchJson(url, timeout) {
+    const options = {
+      mode: 'cors',
+      credentials: 'include',
+      headers: { Accept: 'application/json' }
+    }
+    const controller = new AbortController()
+    const signal = controller.signal
+
+    setTimeout(() => controller.abort(), timeout)
+
+    const response = await fetch(url, { ...options, signal })
+    return response.json()
+  }
+
+  !(function(f, b, e, v, n, t, s) {
+    if (f.fbq) return
+    n = f.fbq = function() {
+        n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
+    }
+    if (!f._fbq) f._fbq = n
+    n.push = n
+    n.loaded = !0
+    n.version = '2.0'
+    n.queue = []
+    t = b.createElement(e)
+    t.async = !0
+    t.src = v
+    s = b.getElementsByTagName(e)[0]
+    s.parentNode.insertBefore(t, s)
+  })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js')
+  fbq('init', '2000132876774057')
+  fbq('track', 'PageView')
+    
+noscript
+  img height="1" width="1" src="https://www.facebook.com/tr?id=2000132876774057&ev=PageView&noscript=1"
\ No newline at end of file
diff --git a/layouts/partials/common-head.ace b/layouts/partials/common-head.ace
index b6685dc..a037ef4 100644
--- a/layouts/partials/common-head.ace
+++ b/layouts/partials/common-head.ace
@@ -20,27 +20,3 @@ title {{ with .Title }}{{ . }}{{ end }}{{ if and .Title site.Title (not .IsHome)
 
 {{ partial "opengraph" . }}
 {{ partial "twitter_cards" . }}
-
-
-= javascript
-  !(function(f, b, e, v, n, t, s) {
-    if (f.fbq) return
-    n = f.fbq = function() {
-        n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
-    }
-    if (!f._fbq) f._fbq = n
-    n.push = n
-    n.loaded = !0
-    n.version = '2.0'
-    n.queue = []
-    t = b.createElement(e)
-    t.async = !0
-    t.src = v
-    s = b.getElementsByTagName(e)[0]
-    s.parentNode.insertBefore(t, s)
-  })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js')
-  fbq('init', '2000132876774057')
-  fbq('track', 'PageView')
-    
-noscript
-  img height="1" width="1" src="https://www.facebook.com/tr?id=2000132876774057&ev=PageView&noscript=1"
\ No newline at end of file

commit ba79e9159577ce084cb38357122fe9ec71d5abf1
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Mon Nov 4 15:08:09 2019 +0200

    Yaml (#13)
    
    * Add yaml
    
    * added template
    
    * Update
    
    * WIP
    
    * Updates
    
    * Yaml updates
    
    * Script for Android app bundles
    
    * Remove redundant section
    
    * Fixes
    
    * Final fixes

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 1bec801..3abb2ec 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -1,6 +1,6 @@
 ---
 title: Automatic build triggering
-weight: 1
+weight: 2
 ---
 
 In order to fully automate your CI/CD pipeline, you can set up automatic build triggering by configuring which branches to track and when to trigger builds.
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 0227452..41b1ccd 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,6 +1,6 @@
 ---
 title: Build versioning
-weight: 8
+weight: 9
 ---
 
 If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using **build arguments** and the `BUILD_NUMBER` environment variable.
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 5cad1f6..b83f3a9 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -1,6 +1,6 @@
 ---
 title: Building Android app bundles
-weight: 3
+weight: 4
 ---
 
 You can build your app in [Android app bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
diff --git a/content/building/building-for-desktop.md b/content/building/building-for-desktop.md
index 15e0015..798d6db 100644
--- a/content/building/building-for-desktop.md
+++ b/content/building/building-for-desktop.md
@@ -1,7 +1,7 @@
 ---
 description: Build a Flutter app for desktop with Codemagic.
 title: Building for desktop
-weight: 6
+weight: 7
 ---
 
 You can use Codemagic to build Flutter desktop apps for macOS and Linux. Building Windows apps is not yet supported. 
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index 357f6bc..579daa3 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -1,7 +1,7 @@
 ---
 description: Build a Flutter web app with Codemagic.
 title: Building for the web
-weight: 5
+weight: 6
 ---
 
 You can build, test and publish Flutter web apps with Codemagic.
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index b0e836c..17aa8c3 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -1,7 +1,7 @@
 ---
 description: Store your dependencies on Codemagic for a faster build time.
 title: Dependency caching
-weight: 7
+weight: 8
 ---
 
 You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index df1cbd5..212d9f6 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -4,7 +4,7 @@ description:
   not want to store in the repository. You can also use Codemagic read-only environment
   variables to customize your builds.
 title: Environment variables
-weight: 2
+weight: 3
 ---
 
 Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
index 4bdfaa6..c699973 100644
--- a/content/building/specifying-custom-ios-scheme.md
+++ b/content/building/specifying-custom-ios-scheme.md
@@ -1,6 +1,6 @@
 ---
 title: Specifying custom iOS scheme
-weight: 4
+weight: 5
 ---
 
 By default, Codemagic builds the iOS app using the `Runner` scheme. You can specify a custom iOS scheme for the `xcodebuild` command with the `FCI_FLUTTER_SCHEME` environment variable. A different iOS scheme can be specified for each workflow.
diff --git a/content/building/yaml.md b/content/building/yaml.md
new file mode 100644
index 0000000..5cec7af
--- /dev/null
+++ b/content/building/yaml.md
@@ -0,0 +1,232 @@
+---
+title: Advanced configuration with YAML
+weight: 1
+---
+
+`Codemagic.yaml` is an advanced option for customizing the build and configuring all your workflows in a single file. The file can be committed to version control, and when detected in repository, will be used to configure the build instead of the settings in the UI.
+
+{{% notebox %}}
+
+**Limitations**
+
+The YAML feature is currently in *beta* and has the following limitations:
+
+* Only Android and web app configuration can be exported. The commands for building and code signing iOS apps are currently not generated and you cannot configure iOS publishing in YAML yet.
+* The exported configuration is not identical to the settings in UI and lacks the configuration for some features, such as **Stop build if tests fail**.
+* YAML configuration cannot be used with apps from custom sources.
+
+{{% /notebox %}}
+
+## Exporting current configuration as YAML
+
+You can get started with YAML easily if you have an existing project set up on Codemagic. 
+
+1. Navigate to your app settings.
+2. Expand the **Advanced configuration (beta)** tab.
+3. Click **Download configuration** and save the generated `codemagic.yaml` file to a suitable location. 
+
+Note that in order to use the file for build configuration on Codemagic, it has to be committed to your repository. The name of the file must be `codemagic.yaml` and it must be located in the root directory of the project. 
+
+## Encrypting sensitive data
+
+During the export, Codemagic automatically encrypts the secret environment variables in your build configuration. 
+
+If you wish to add new environment variables to the YAML file, you can encrypt them via Codemagic UI. 
+
+1. In your app settings > Advanced configuration (beta), click **Encrypt environment variables**.
+2. Paste the value of the variable in the field or upload it as a file.
+3. Click **Encrypt**. 
+4. Copy the encrypted value and paste it to the configuration file.
+
+An example of an encrypted value:
+
+```Encrypted(Z0FBQUFBQmRyY1FLWXIwVEhqdWphdjRhQ0xubkdoOGJ2bThkNmh4YmdXbFB3S2wyNTN2OERoV3c0YWU0OVBERG42d3Rfc2N0blNDX3FfblZxbUc4d2pWUHJBSVppbXNXNC04U1VqcGlnajZ2VnJVMVFWc3lZZ289)```
+
+## Building with YAML
+
+When detected in repository, `codemagic.yaml` is automatically used for configuring builds that are triggered in response to the events defined in the file. Any configuration in the UI is ignored.
+
+You can also use `codemagic.yaml` for manual builds.
+
+1. In your app settings, click **Start new build**. 
+2. In the **Specify build configuration** popup, select a **branch**.
+3. If a `codemagic.yaml` file is found in that branch, you can click **Select workflow from codemagic.yaml**.
+4. Then select the YAML **workflow**.
+5. Finally, click **Start new build** to build the workflow.
+
+## Template
+
+This is the skeleton structure of `codemagic.yaml`.
+
+    workflows:
+      my-workflow:
+        name: My workflow name
+        environment:
+          vars:
+            PUBLIC_ENV_VAR: value here
+          flutter: stable
+        cache:
+          cache_paths:
+            - $FCI_BUILD_DIR/build
+        triggering:
+          events:
+            - push
+          branch_patterns:
+            - pattern: '*'
+              include: true
+              source: true
+        scripts:
+          - ...
+        artifacts:
+          - build/**/outputs/**/*.aab
+        publishing:
+          email:
+            recipients:
+              - name@example.com
+
+### Workflows
+
+You can use `Codemagic.yaml` to define several workflows for building a project. Each workflow describes the entire build pipeline from triggers to publishing.
+
+    workflows:
+      my-workflow:                # workflow ID
+        name: My workflow name    # workflow name displayed in UI
+        environment:
+        cache:
+        triggering:
+        branch_patterns:
+        scripts:
+        publishing:
+        artifacts:
+
+The main sections in each workflow are described below.
+
+### Environment
+
+`environment:` Contains your environment variables and enables to specify the version of Flutter used for building. Make sure to [encrypt the values](#encrypting-sensitive-data) of variables that hold sensitive data. 
+
+    environment:
+      vars:                 # Define your environment variables here
+        PUBLIC_ENV_VAR: value here
+        SECRET_ENV_VAR: Encrypted(...)
+        CM_KEYSTORE: Encrypted(...)
+        CM_KEYSTORE_PASSWORD: Encrypted(...)
+        CM_KEY_ALIAS_PASSWORD: Encrypted(...)
+        CM_KEY_ALIAS_USERNAME: Encrypted(...)
+      flutter: stable       # Define the channel name or version
+
+### Cache
+
+`cache:` Enables to define the paths to be cached and stored on Codemagic. See the recommended paths for [dependency caching](./dependency-caching).
+
+    cache:
+      cache_paths:
+        - $FCI_BUILD_DIR/build
+        - $FCI_BUILD_DIR/build/dir/to/cache
+
+### Triggering
+
+`triggering:` Defines the events for automatic build triggering and the watched branches. If no events are defined, you can start builds only manually. 
+
+A branch pattern can match the name of a particular branch, or you can use wildcard symbols to create a pattern that matches several branches. Note that for **pull request builds**, it is required to specify whether the watched branch is the source or the target of pull request.
+
+    triggering:
+      events:                # List the events that trigger builds
+        - push
+        - pull_request
+        - tag
+      branch_patterns:       # Include or exclude watched branches
+        - pattern: '*'
+          include: true
+          source: true
+        - pattern: excluded-target
+          include: false
+          source: false
+        - pattern: included-source
+          include: true
+          source: true
+
+### Scripts
+
+`scripts:` Contains the scripts and commands to be run during the build. This is where you can specify the commands to test, build and code sign your project. Below is an example for building a Flutter app in debug mode for Android.
+
+    scripts:
+      - |
+        # set up debug key.properties
+        keytool -genkeypair \
+          -alias androiddebugkey \
+          -keypass android \
+          -keystore ~/.android/debug.keystore \
+          -storepass android \
+          -dname 'CN=Android Debug,O=Android,C=US' \
+          -keyalg 'RSA' \
+          -keysize 2048 \
+          -validity 10000
+      - |
+        # set up local properties
+        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
+      - flutter packages pub get
+      - flutter test
+      - flutter build apk --release
+
+You can run scripts in languages other than shell (`sh`) by defining the languge with a shebang line or by launching a script file present in your repository.
+
+For example, you can write a build script with Dart like this:
+
+    scripts:
+        - |
+          #!/usr/local/bin/dart
+
+          void main() {
+            print('Hello, World!');
+          }
+
+**Note on building Android app bundles**
+
+If your app settings in Codemagic have building Android app bundles enabled, we will automatically include a script for generating a signed `app-universal.apk` during the YAML export. This file is required for publishing to Google Play. If you're creating a YAML file from a scratch, add the script below to receive this file:
+
+    # fetch codemagic helper scripts
+    rm -rf ~/codemagic-build-scripts
+    git clone https://github.com/NevercodeHQ/codemagic-build-scripts.git ~/codemagic-build-scripts/ --depth 1
+    
+    # generate signed universal apk with user specified keys
+    ~/codemagic-build-scripts/android/generate-universal-apks \
+      --ks /tmp/keystore.keystore \
+      --ks-pass $CM_KEYSTORE_PASSWORD \
+      --ks-key-alias $CM_KEY_ALIAS_USERNAME \
+      --key-pass $CM_KEY_ALIAS_PASSWORD \
+      --pattern 'build/**/outputs/**/*.aab'
+  
+### Artifacts
+
+`artifacts:` Configure the paths and names of the artifacts you would like to use in the following steps, e.g. for publishing, or have available for download on the build page. All paths are relative to the clone directory, but absolute paths are supported as well. You can also use environment variables in artifact patterns.
+
+
+    artifacts:
+      - build/**/outputs/**/*.apk                   # relative path for a project in root directory
+      - build/**/outputs/**/*.aab
+      - build/**/outputs/**/mapping.txt
+      - flutter_drive.log
+      - subfolder_name/build/**/outputs/**/*.apk    # relative path for a project in subfolder
+
+* The pattern can match several files or folders. If it picks up files or folders with the same name, the top level file or folder name will be suffixed with `_{number}`.
+* If one of the patterns includes another pattern, duplicate artifacts are not created.
+* `apk`, `aab`, `ipa`, `aar`, `app`, proguard mapping (`mapping.txt`), `flutter_drive.log`, `jar`, `zip`, `xarchive` and `dSYM.zip` files will be available as separate items in the Artifacts section on the build page. The rest of the artifacts will be included in an archive with the following name pattern: `{project-name}_{version}_artifacts.zip`.
+
+### Publishing
+
+`publishing:` For every successful build, you can publish the generated artifacts to external services. The available integrations currently are email, Slack, Google Play and Codemagic Static Pages.
+
+    publishing:
+      email:
+        recipients:
+          - name@example.com
+      slack:
+        channel: '#slack-test'
+        notify_on_build_start: true
+      google_play:                        # For Android app
+        credentials: Encrypted(...)
+        track: alpha
+      static_page:                        # For web app
+        subdomain: my-subdomain
+

commit 16551f37a771ee6f5e64d1183591a33e4898cc94
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Oct 29 10:28:40 2019 +0200

    Update

diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index d035f46..711ef00 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -8,7 +8,11 @@ Code signing is required for distributing your Android app to Google Play store.
 
 ## Requirements
 
-To receive a signed release APK of your app on Codemagic, you will have to 1) [prepare your Flutter project for code signing](https://docs.codemagic.io/code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing), and 2) [set up Android code signing in Codemagic UI](https://docs.codemagic.io/code-signing/android-code-signing/#setting-up-android-code-signing-on-codemagic).
+To receive a signed release APK of your app on Codemagic, you will have to:
+ 
+1. [Prepare your Flutter project for code signing](https://docs.codemagic.io/code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing)
+
+2. [Set up Android code signing in Codemagic UI](https://docs.codemagic.io/code-signing/android-code-signing/#setting-up-android-code-signing-on-codemagic)
 
 For code signing, you need to upload the **keystore** containing your **certificate** and **key**. See the instructions for generating the keystore [here](#generating-a-keystore).
 
@@ -16,7 +20,8 @@ As a keystore can hold multiple keys, each key in it must have an **alias**. Bot
 
 {{% notebox %}}
 
-Please note that every app must be signed using the same key throughout its lifespan.
+- Please note that every app must be signed using the same key throughout its lifespan.
+- If you're building Android app bundles, you additionally need to [enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423).
 
 {{% /notebox %}}
 
@@ -34,11 +39,11 @@ You need to upload the keystore and provide the keystore password, key alias and
 
 There are several approaches you can use to prepare your Flutter project for code signing, we have described two of these in this section. Note that whichever approach you use, you still need to [set up Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/#setting-up-android-code-signing-on-codemagic) in the Codemagic UI.
 
-### Configure signing in build.gradle
+### Option 1. Configure signing in `build.gradle`
 
 You can follow the instructions in [Flutter's documentation](https://flutter.io/docs/deployment/android#signing-the-app) to configure code signing in Gradle. It's vital that you use the variable names suggested in Flutter documentation as Codemagic will reference them during the build. However, make sure to not commit your `key.properties` file to the repository, Codemagic will generate and populate the `key.properties` file during the build based on the input you provide in the UI.
 
-### Configure signing using environment variables
+### Option 2. Configure signing using environment variables
 
 Alternatively, you can use [environment variables](https://docs.codemagic.io/building/environment-variables/ 'Environment variables') to prepare your app for code signing.
 
@@ -49,7 +54,7 @@ Alternatively, you can use [environment variables](https://docs.codemagic.io/bui
         FCI_KEY_PASSWORD=myKeypassword
 
 2.  Upload the contents of your base64-encoded keystore file to Codemagic as an environment variable with the name `FCI_KEYSTORE_FILE`.
-3.  Add a custom script for decoding the keystore file stored in `FCI_KEYSTORE_FILE`. For example, click on the + icon before **Test** and paste the following script into the **Post-clone script** field:
+3.  Add a custom script for decoding the keystore file stored in `FCI_KEYSTORE_FILE`. For example, click on the '+' icon before **Test** and paste the following script into the **Post-clone script** field:
 
         #!/usr/bin/env sh
         set -e # exit on first failed commandset
@@ -95,10 +100,8 @@ You are required to upload your keystore file and provide details about your key
 
 {{< figure size="" src="../uploads/2019/03/code signing.PNG" caption="" >}}
 
-1. Navigate to the Publish section in app settings.
+1. Navigate to the **Publish** section in app settings.
 2. Click **Android code signing**.
 3. Upload your release keystore file.
 4. Enter the **keystore password**, **key alias** and **key password**.
 5. Click **Save** to finish the setup.
-
-{{% notebox %}}Please note that every app must be signed using the same key throughout its lifespan. {{% /notebox %}}

commit 12234eb390276735356b8fedd8c3bec9e841e956
Author: Madis Peebo <madis@nevercode.io>
Date:   Mon Oct 28 16:32:14 2019 +0200

    send user state with dataLayer instead of event

diff --git a/layouts/partials/analytics.ace b/layouts/partials/analytics.ace
index d7dfce3..932aeb6 100644
--- a/layouts/partials/analytics.ace
+++ b/layouts/partials/analytics.ace
@@ -15,7 +15,8 @@
       const r = await fetch(appUserUrl, { mode: 'cors', credentials: 'include', headers: { 'Accept': 'application/json' } })
       const response = await r.json()
       if (response.user.ok) {
-        gtag('event', 'Detect User', { 'event_label': 'User', 'user_state': 'User', 'non_interaction': true })
+        window.dataLayer.push({'user_state': 'User'})
+        gtag('event', 'Detect User', { 'event_label': 'User', 'non_interaction': true })
       }
     } catch (error) {}
   })()

commit fdc81c29ce2836937b53e06a83e39e614ac03092
Author: Madis Peebo <madis@nevercode.io>
Date:   Mon Oct 28 14:27:15 2019 +0200

    Only send event for logged in user

diff --git a/config.yml b/config.yml
index 9e9fd05..a41dba9 100644
--- a/config.yml
+++ b/config.yml
@@ -14,7 +14,7 @@ params:
   locale: en_GB
   googleAnalyticsTrackingId: UA-125963734-2
   googleTagManagerTrackingId: GTM-PFJ47PW
-  googleOptimizeTrackingId: 'GTM-PZPXGKT'
+  googleOptimizeId: 'GTM-PZPXGKT'
 imaging:
   resampleFilter: linear
   quality: 90
diff --git a/config/production/config.yml b/config/production/config.yml
index f7984a7..23d0207 100644
--- a/config/production/config.yml
+++ b/config/production/config.yml
@@ -4,5 +4,5 @@ baseURL: https://docs.codemagic.io
 params:
   googleAnalyticsTrackingId: UA-125963734-1
   googleTagManagerTrackingId: GTM-TW39Z9J
-  googleOptimizeTrackingId: GTM-TW39Z9J
+  googleOptimizeId: GTM-TW39Z9J
   appUserUrl: https://api.codemagic.io/user/
diff --git a/layouts/partials/analytics.ace b/layouts/partials/analytics.ace
index 8c1316a..d7dfce3 100644
--- a/layouts/partials/analytics.ace
+++ b/layouts/partials/analytics.ace
@@ -1,31 +1,21 @@
 = javascript
   const analyticsId = '{{ site.Param "googleAnalyticsTrackingId" }}'
-  const gtagId = '{{ site.Param "googleOptimizeTrackingId" }}'
+  const gtagId = '{{ site.Param "googleOptimizeId" }}'
   const appUserUrl = '{{ site.Param "appUserUrl" }}'
 
   window.dataLayer = window.dataLayer || []
   function gtag() {
     window.dataLayer.push(arguments)
   }
-  gtag('config', analyticsId, {
-    optimize_id: gtagId,
-    custom_map: { dimension1: 'userState' }
-  })
+  gtag('config', analyticsId, { 'optimize_id': gtagId, 'custom_map': { 'dimension1': 'user_state' } })
   gtag('js', new Date())
 
   ;(async function() {
-    let userState = null
     try {
-      const r = await fetch(appUserUrl, {
-        mode: 'cors',
-        credentials: 'include',
-        headers: { Accept: 'application/json' }
-      })
+      const r = await fetch(appUserUrl, { mode: 'cors', credentials: 'include', headers: { 'Accept': 'application/json' } })
       const response = await r.json()
-      userState = response.user.ok ? 'Logged In' : 'Guest'
-    } catch (error) {
-      userState = 'Unknown'
-    } finally {
-      gtag('event', 'FetchUser', { 'userState': userState, 'non_interaction': true })
-    }
+      if (response.user.ok) {
+        gtag('event', 'Detect User', { 'event_label': 'User', 'user_state': 'User', 'non_interaction': true })
+      }
+    } catch (error) {}
   })()

commit aa0c3c10be738a38033c9eaacd71646e49a53b89
Author: Madis Peebo <madis@nevercode.io>
Date:   Mon Oct 28 13:41:21 2019 +0200

    Add analytics and user detection

diff --git a/config.yml b/config.yml
index 55ee63e..9e9fd05 100644
--- a/config.yml
+++ b/config.yml
@@ -7,12 +7,14 @@ params:
   twitterShareHandle: codemagicio
   facebookAuthorHandle: codemagicio
   appLoginLink: https://codemagic.io/
+  appUserUrl: http://localhost:5000/user
   defaultFacebookImage: /uploads/2019/01/default-thumb.png
   defaultTwitterImage: /uploads/2019/02/twitter.png
   headerLinkTitle: Documentation
   locale: en_GB
   googleAnalyticsTrackingId: UA-125963734-2
-  googleTagManagerTrackingId: ''
+  googleTagManagerTrackingId: GTM-PFJ47PW
+  googleOptimizeTrackingId: 'GTM-PZPXGKT'
 imaging:
   resampleFilter: linear
   quality: 90
diff --git a/config/production/config.yml b/config/production/config.yml
index 322aa91..f7984a7 100644
--- a/config/production/config.yml
+++ b/config/production/config.yml
@@ -4,3 +4,5 @@ baseURL: https://docs.codemagic.io
 params:
   googleAnalyticsTrackingId: UA-125963734-1
   googleTagManagerTrackingId: GTM-TW39Z9J
+  googleOptimizeTrackingId: GTM-TW39Z9J
+  appUserUrl: https://api.codemagic.io/user/
diff --git a/layouts/partials/analytics.ace b/layouts/partials/analytics.ace
index bce21dd..8c1316a 100644
--- a/layouts/partials/analytics.ace
+++ b/layouts/partials/analytics.ace
@@ -1,9 +1,31 @@
 = javascript
-  window.dataLayer = window.dataLayer || [];
-  function gtag() { window.dataLayer.push(arguments); }
-  gtag('js', new Date());
-  gtag(
-    'config',
-    '{{ site.Param "googleAnalyticsTrackingId" }}',
-    {'optimize_id': '{{ site.Param "googleTagManagerTrackingId" }}'},
-  );
+  const analyticsId = '{{ site.Param "googleAnalyticsTrackingId" }}'
+  const gtagId = '{{ site.Param "googleOptimizeTrackingId" }}'
+  const appUserUrl = '{{ site.Param "appUserUrl" }}'
+
+  window.dataLayer = window.dataLayer || []
+  function gtag() {
+    window.dataLayer.push(arguments)
+  }
+  gtag('config', analyticsId, {
+    optimize_id: gtagId,
+    custom_map: { dimension1: 'userState' }
+  })
+  gtag('js', new Date())
+
+  ;(async function() {
+    let userState = null
+    try {
+      const r = await fetch(appUserUrl, {
+        mode: 'cors',
+        credentials: 'include',
+        headers: { Accept: 'application/json' }
+      })
+      const response = await r.json()
+      userState = response.user.ok ? 'Logged In' : 'Guest'
+    } catch (error) {
+      userState = 'Unknown'
+    } finally {
+      gtag('event', 'FetchUser', { 'userState': userState, 'non_interaction': true })
+    }
+  })()

commit 5078823d4148c119f257580017387839273fa31c
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Oct 25 13:58:33 2019 +0300

    Fixed formatting

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index d0a2fc1..d0ea09b 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -43,7 +43,8 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
 **Xcode**: N/A
 
 **Solution**: This is a known issue that occurs randomly and can be traced back to Flutter:
-https://github.com/flutter/flutter/issues/28415
-https://github.com/flutter/flutter/issues/35988
+
+* https://github.com/flutter/flutter/issues/28415
+* https://github.com/flutter/flutter/issues/35988
 
 This issue is known to be fixed on the `master` channel.

commit 54be81c68733c5e8bd4dfaf8ce90e5a7d48c24b6
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Oct 25 12:21:59 2019 +0300

    Specified Flutter versions

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index a066190..d0a2fc1 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -38,7 +38,7 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
     Running Xcode build...                                          
     Xcode build done.                                           203.6s
 
-**Flutter**: `1.7.8+hotfix.3`, `1.7.8+hotfix.4`, `1.9.1+hotfix.2`, `1.9.1+hotfix.4`
+**Flutter**: `1.7.8+hotfix.3`, `1.7.8+hotfix.4`, `1.9.1+hotfix.2`, `1.9.1+hotfix.4`, `1.9.1+hotfix.5`
 
 **Xcode**: N/A
 

commit 91f893a728daaf7861a35ca96bee60bc0b74729c
Merge: b17972d ef7624e
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Oct 25 11:37:10 2019 +0300

    Merge branch 'master' of github.com:codemagic-ci-cd/codemagic-docs

commit b17972dfc5c852cd2a11fdad333d78b841839816
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Oct 25 11:37:05 2019 +0300

    Added new releases

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 74c6a82..4a3f061 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -6,6 +6,18 @@ weight: 1
 
 ## October 2019
 
+### Apple Developer Portal integration
+
+With the Apple Developer Portal integration, users can use the same credentials for automatic iOS code signing across all apps on user's personal account or in a team without having to enter them in app settings. Read more about [automatic code signing with Apple Developer Portal integration](../code-signing/ios-code-sining/#automatic-code-signing). 
+
+### Changing the app icon
+
+We have added the option to change the app icon displayed on Codemagic. This can be done under Repository settings via the **Change application icon** option which enables you to upload a new image. The image must be in `png` format and can be up to 1MB in size. 
+
+### Codemagic YAML configuration *beta*
+
+You can now export your Codemagic configuration from app settings as a `codemagic.yaml` file and keep it in your repository for build configuration. Exporting build configuration is currently supported for Android and web apps only. We invite our users to try it out and share the feedback with us.
+
 ### Concurrent builds for teams
 
 Teams on Codemagic now have Magic seats available in addition to regular team seats. Purchasing a Magic seat increases your team's build concurrency by 1, allowing to run several builds in parallel. Read more about Magic seats on our [blog](https://blog.codemagic.io/get-additional-build-concurrency-with-magic-seats/) and check out the pricing details [here](https://codemagic.io/pricing/).

commit ef7624ece0508eccda611731d5980cade8975deb
Author: Nevercode <56913310+nevercode-team@users.noreply.github.com>
Date:   Fri Oct 25 11:27:00 2019 +0300

    base image update (#12)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 54cb0e1..35b5933 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -6,7 +6,7 @@ weight: 2
 **Dart and Flutter**
 
 - Dart `2.5.2`
-- Flutter `1.9.1+hotfix.4 ($HOME/programs/flutter)`
+- Flutter `1.9.1+hotfix.6 ($HOME/programs/flutter)`
 
 **iOS tools**
 
@@ -29,7 +29,7 @@ weight: 2
 `11.2 (11B44) (/Applications/Xcode-11.2.app)`
 
 
-- CocoaPods `1.8.3`
+- CocoaPods `1.8.4`
 
 **Android tools**
 

commit c9256fe0c4b924a040360022e087b1b00493974e
Author: rimanteval <41963508+rimanteval@users.noreply.github.com>
Date:   Thu Oct 24 17:30:59 2019 +0300

    Added FLUTTER_ROOT environment variable (#10)
    
    * Update environment-variables.md
    
    * Update environment-variables.md

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 08275d2..df1cbd5 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -44,6 +44,7 @@ Here you'll find some of the read-only environment variables explained.
 | CI                       | true                                                                                                            |
 | CONTINUOUS_INTEGRATION   | true                                                                                                            |
 | BUILD_NUMBER             | Number of the build for this project in Codemagic                                                               |
+| FLUTTER_ROOT             | Absolute path to Flutter SDK                                                                                    |
 | FCI_BRANCH               | The current branch being built, for pull requests it is the destination branch                                  |
 | FCI_COMMIT               | Commit hash that is currently being built by Codemagic, for pull request builds it is the hash of the source commit |
 | FCI_CLONE_UNSHALLOW      | If set to `true`, performs a full clone of the repository instead of top 50 commits                              |

commit dfe8c58ba2e63ef55056acedc2182f5c3558a983
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Oct 24 17:08:16 2019 +0300

    Apple developer portal integration (#11)

diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index a3b5a6a..0d12499 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -8,7 +8,7 @@ Code signing is required for installing your iOS app on real devices and publish
 
 To receive a signed `.ipa` file of your app on Codemagic, you need to set up code signing. When you build without code signing, you will receive only `Runner.app` that runs on simulators only.
 
-### Requirements
+## Requirements
 
 Before you can start signing or distributing your app, you need to [enroll as an iOS developer](https://developer.apple.com/programs/enroll/) and [register an app ID](https://developer.apple.com/account/ios/identifier/bundle/create) in Apple Developer portal. Then, you need a **signing certificate** and a **provisioning profile** to sign the build.
 
@@ -30,33 +30,38 @@ In short, the purpose of the different provisioning profiles is the following:
 - **Ad Hoc:** for distributing the app to non-TestFlight testers (e.g. via [Testmagic](https://testmagic.io/)). The app must be built in **release** mode.
 - **App Store**: for distributing the app via TestFlight or the App Store. The app must be built in **release** mode.
 
-### Setting up automatic code signing
+## Automatic code signing
 
 With the automatic code signing feature, Codemagic will generate a signing certificate and a matching provisioning profile for you in-app and use them for code signing during the build. Depending on the selected provisioning profile type, Codemagic will create a development or a distribution certificate and a development, Ad hoc or App store provisioning profile. The provisioning profile (except for Distribution) will include all the devices you have registered on your Apple Developer account.
 
-To set up automatic code signing:
-
-1. In your App settings, navigate to the Publish section.
-2. Click on **iOS code signing** to expand this step.
-3. Select **Automatic** as the code signing method.
-4. Enter your **Apple ID** (Apple Developer portal username) and **Apple Developer portal password**.
-5. Select the provisioning profile type. Note that **Development** requires building your app in **debug** mode, while **Ad hoc** and **App store** require selecting **release** mode in the Build section.
-6. You can also enter your app's **bundle identifier** (optional). By default, Codemagic detects it automatically from your `project.pbxproj`file.
-7. Click **Save** to finish the setup.
+{{% notebox %}}
+**Apple Developer Portal integration**
 
-{{< figure size="medium" src="../uploads/2019/03/automatic_code_signing2.PNG" caption="Automatic code signing setup" >}}
+To use automatic code signing, you are required to enable the **Developer Portal** integration in **User settings > Integrations** for personal projects and in **Team settings > Team integrations** for projects shared in the team (if you're the team owner). This allows you to convneniently use the same Apple Developer Portal credentials for automatic code signing across all projects and workflows.
 
-{{% notebox %}}
-If your Apple developer account has **two-step verification** or **two-step authentication** enabled, you will be asked to enter your verification code in a popup and click **Save** again. Note that the length of the session depends on Apple and is limited to approximately a day. When the session expires, you will need to verify the login again. Simply click **Save** in the iOS code signing settings to display the verification popup.
+If you have previously set up workflow-specific credentials, you can remove them in the iOS automatic code signing settings after setting up the integration.
 {{% /notebox %}}
 
-After you have successfully established connection to Apple developer portal, you will have the option to specify the **Developer portal team**. Make sure to click **Save** again to save the changes.
+### Enabling the Apple Developer Portal integration
+
+1. In the list of available integrations, click the **Connect** button for **Developer Portal**.
+2. Enter your **Apple ID** and **password**.
+3. Click **Save**. Codemagic will attempt to establish a connection to Apple Developer Portal and will ask for a verification code for two-factor authentication or two-step verification. **Note** that if you have set up several trusted phone numbers, you can select a phone number for receiving the verification code.
+4. Enter the verification code that was sent to you and click **Save** one more time. On successful authentication, the Apple Developer Portal integration will be enabled.
+
+### Setting up automatic code signing for a workflow
 
-{{< figure size="medium" src="../uploads/team_selection_edited.png" caption="Apple developer portal team selection" >}}
+1. In your app settings, navigate to the **Publish** section.
+2. Click on **iOS code signing** to expand this step.
+3. Select **Automatic** as the code signing method. If you haven't enabled the Apple Developer Portal integration yet, you will be asked to enable it before you can continue configuration.
+4. If you belong to more than one team, select the **Developer portal team**.
+5. Select the provisioning profile type.
+6. You can also enter your app's **Bundle identifier** (optional). By default, Codemagic looks for it from your `project.pbxproj`file.
+7. Click **Save** to finish the setup.
 
 As the next step, you can configure publishing to App Store Connect to distribute your signed app to testers or submit it for review.
 
-### Setting up manual code signing
+## Manual code signing
 
 With the manual code signing method, you are required to upload the signing certificate and the matching provisioning profile to Codemagic in order to receive signed builds for the workflow at hand.
 
@@ -70,7 +75,7 @@ With the manual code signing method, you are required to upload the signing cert
 
 Codemagic will now create a signed `.ipa` file with every build. Note that you must also set up publishing to App Store Connect to distribute the app to the App Store.
 
-### Exporting signing certificate and provisioning profile
+## Exporting signing certificate and provisioning profile
 
 You will need a Mac to generate the signing certificate.
 

commit c80377b424f929fb6111b2a87f713e466d93d5ce
Author: Madis Peebo <madis@nevercode.io>
Date:   Thu Oct 24 14:36:22 2019 +0300

    fix null issue

diff --git a/config.yml b/config.yml
index 2d0f161..55ee63e 100644
--- a/config.yml
+++ b/config.yml
@@ -12,7 +12,7 @@ params:
   headerLinkTitle: Documentation
   locale: en_GB
   googleAnalyticsTrackingId: UA-125963734-2
-  googleTagManagerTrackingId: null
+  googleTagManagerTrackingId: ''
 imaging:
   resampleFilter: linear
   quality: 90

commit c5703466643c2748b6f5834f3fa70447c4e8c607
Author: Madis Peebo <madis@nevercode.io>
Date:   Thu Oct 24 14:24:32 2019 +0300

    add analytics

diff --git a/config.yml b/config.yml
index 16c9f8d..2d0f161 100644
--- a/config.yml
+++ b/config.yml
@@ -11,6 +11,8 @@ params:
   defaultTwitterImage: /uploads/2019/02/twitter.png
   headerLinkTitle: Documentation
   locale: en_GB
+  googleAnalyticsTrackingId: UA-125963734-2
+  googleTagManagerTrackingId: null
 imaging:
   resampleFilter: linear
   quality: 90
diff --git a/config/production/config.yml b/config/production/config.yml
index 557bb8f..322aa91 100644
--- a/config/production/config.yml
+++ b/config/production/config.yml
@@ -1,2 +1,6 @@
 buildDrafts: false
 baseURL: https://docs.codemagic.io
+
+params:
+  googleAnalyticsTrackingId: UA-125963734-1
+  googleTagManagerTrackingId: GTM-TW39Z9J
diff --git a/layouts/_default/baseof.ace b/layouts/_default/baseof.ace
index fe96461..98eff57 100644
--- a/layouts/_default/baseof.ace
+++ b/layouts/_default/baseof.ace
@@ -25,4 +25,5 @@ html
           main
             = yield main
       footer#footer
+      {{ partial "analytics" . }}
     {{ partial "footer" . }}
diff --git a/layouts/_default/head.ace b/layouts/_default/head.ace
index b9ff113..8692132 100644
--- a/layouts/_default/head.ace
+++ b/layouts/_default/head.ace
@@ -9,3 +9,5 @@ link rel="stylesheet" href={{ $fontStyles.RelPermalink }} integrity={{ $fontStyl
 link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous"
 
 script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"
+
+script async= src="https://www.googletagmanager.com/gtag/js?id={{ site.Param "googleAnalyticsTrackingId" }}"
diff --git a/layouts/partials/analytics.ace b/layouts/partials/analytics.ace
new file mode 100644
index 0000000..bce21dd
--- /dev/null
+++ b/layouts/partials/analytics.ace
@@ -0,0 +1,9 @@
+= javascript
+  window.dataLayer = window.dataLayer || [];
+  function gtag() { window.dataLayer.push(arguments); }
+  gtag('js', new Date());
+  gtag(
+    'config',
+    '{{ site.Param "googleAnalyticsTrackingId" }}',
+    {'optimize_id': '{{ site.Param "googleTagManagerTrackingId" }}'},
+  );
diff --git a/readme.md b/readme.md
index 561cebe..4821f6f 100644
--- a/readme.md
+++ b/readme.md
@@ -40,3 +40,12 @@ Preview the site in http://localhost:1313/ by launching:
 
 It will usually refresh automatically when anything is changed
 
+For testing things that require a subdomain, add a subdomain to your hosts file:
+
+```bash
+# example for MacOS
+
+sudo sh -c "echo '127.0.0.1\tdocs.codemagic.local' >> /etc/hosts"
+```
+
+and preview the site in http://docs.codemagic.local:1313/ instead.

commit 2b080f621d90958fee87bf98518122a71242571f
Author: Madis Peebo <madis@nevercode.io>
Date:   Tue Oct 22 16:04:26 2019 +0300

    remove "smart" quotes and such characters
    markdown parser will generate them automatically when converting to HTML

diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 813aeb5..5cad1f6 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -3,7 +3,7 @@ title: Building Android app bundles
 weight: 3
 ---
 
-You can build your app in [Android app bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user’s device configuration when the app is installed from Google Play Store.
+You can build your app in [Android app bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user's device configuration when the app is installed from Google Play Store.
 
 {{% notebox %}}
 
@@ -28,4 +28,4 @@ In order to upload your Android app bundle to Google Play, you will need to:
 3. Set up [publishing to Google Play](https://docs.codemagic.io/publishing/publishing-to-google-play/) in Codemagic to upload your app bundle to one of Google Play tracks.
 4. [Enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423) to have Google sign the APKs that are generated from the app bundle during installation.
 
-When you enroll an app into app signing by Google Play, Google will manage your app’s signing key for you and use it to sign the APKs for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
+When you enroll an app into app signing by Google Play, Google will manage your app's signing key for you and use it to sign the APKs for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 02e7b67..d035f46 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -36,7 +36,7 @@ There are several approaches you can use to prepare your Flutter project for cod
 
 ### Configure signing in build.gradle
 
-You can follow the instructions in [Flutter’s documentation](https://flutter.io/docs/deployment/android#signing-the-app) to configure code signing in Gradle. It's vital that you use the variable names suggested in Flutter documentation as Codemagic will reference them during the build. However, make sure to not commit your `key.properties` file to the repository, Codemagic will generate and populate the `key.properties` file during the build based on the input you provide in the UI.
+You can follow the instructions in [Flutter's documentation](https://flutter.io/docs/deployment/android#signing-the-app) to configure code signing in Gradle. It's vital that you use the variable names suggested in Flutter documentation as Codemagic will reference them during the build. However, make sure to not commit your `key.properties` file to the repository, Codemagic will generate and populate the `key.properties` file during the build based on the input you provide in the UI.
 
 ### Configure signing using environment variables
 
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index d1a1196..a3b5a6a 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -41,7 +41,7 @@ To set up automatic code signing:
 3. Select **Automatic** as the code signing method.
 4. Enter your **Apple ID** (Apple Developer portal username) and **Apple Developer portal password**.
 5. Select the provisioning profile type. Note that **Development** requires building your app in **debug** mode, while **Ad hoc** and **App store** require selecting **release** mode in the Build section.
-6. You can also enter your app’s **bundle identifier** (optional). By default, Codemagic detects it automatically from your `project.pbxproj`file.
+6. You can also enter your app's **bundle identifier** (optional). By default, Codemagic detects it automatically from your `project.pbxproj`file.
 7. Click **Save** to finish the setup.
 
 {{< figure size="medium" src="../uploads/2019/03/automatic_code_signing2.PNG" caption="Automatic code signing setup" >}}
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 41819b0..d67be2f 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -14,7 +14,7 @@ Then, fill in all the required fields.
 
 1. Enter the checkout URL of the repository.
 2. If a private key is required to access the repository or any private submodules in it, upload the **SSH private key** file.
-3. If the SSH key is password-protected, you’ll be also asked to enter the **SSH key password**.
+3. If the SSH key is password-protected, you'll be also asked to enter the **SSH key password**.
 4. Click **Add app**.
 
 Your app will be then listed on the Applications page and you can immediately start running builds. Note that in order to enable automatic builds, you will need to manually [set up webhooks](../building/automatic-build-triggering#webhooks).
diff --git a/content/getting-started/codemagic-github-app.md b/content/getting-started/codemagic-github-app.md
index e100dbb..f55b204 100644
--- a/content/getting-started/codemagic-github-app.md
+++ b/content/getting-started/codemagic-github-app.md
@@ -31,7 +31,7 @@ You can change repository access settings in Codemagic CI/CD app on GitHub anyti
 
 The settings you configure in Codemagic CI/CD GitHub app prevail over the GitHub OAuth integration settings.
 
-If you revoke access to previously shared repositories, you will still see all your apps and build history but won’t be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter. Apps connected through your Bitbucket or GitLab account as well as apps added from custom sources will remain available as is.
+If you revoke access to previously shared repositories, you will still see all your apps and build history but won't be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter. Apps connected through your Bitbucket or GitLab account as well as apps added from custom sources will remain available as is.
 
 ### Team apps
 
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 6dbd4cf..23e5e97 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -25,4 +25,4 @@ You can connect several repository accounts (GitHub, GitHub app, GitLab, Bitbuck
 2. Click on your account avatar at the bottom left and open **User settings**.
 3. In the **Integrations** section, click **Connect** next to the account you would like to connect to Codemagic.
 
-Once you have connected another account to your Codemagic account, you can log in to Codemagic with either of these accounts. Email notifications with build status reports will be sent to the email address that’s connected with the repository from which you build.
+Once you have connected another account to your Codemagic account, you can log in to Codemagic with either of these accounts. Email notifications with build status reports will be sent to the email address that's connected with the repository from which you build.
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 8c49291..b6e02ee 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -8,7 +8,7 @@ Codemagic enables you to automatically publish your app to App Store Connect for
 
 ## Requirements
 
-Codemagic needs your **Apple ID** and [**app-specific password**](https://support.apple.com/en-us/HT204397) as well as your **app’s unique identifier (app ID)** to perform publishing to App Store Connect on your behalf. Publishing to App Store Connect requires that the app be signed with App Store **distribution certificate**.
+Codemagic needs your **Apple ID** and [**app-specific password**](https://support.apple.com/en-us/HT204397) as well as your **app's unique identifier (app ID)** to perform publishing to App Store Connect on your behalf. Publishing to App Store Connect requires that the app be signed with App Store **distribution certificate**.
 
 In addition, the application must be **App Store ready** for build distribution, meaning that it must have all the correct icons and icon sizes, otherwise App Store Connect will tag the binary as invalid, and you will not be able to distribute it at all.
 
@@ -21,7 +21,7 @@ It is also worth pointing out the necessity for each uploaded binary to have a *
 1. Log in to [App Store Connect](https://appstoreconnect.apple.com/login).
 2. Navigate to **My Apps**.
 3. Select your app and click **App Information**.
-4. You can then see your app’s identifier (confusingly named **Apple ID**) in the **General Information** section.
+4. You can then see your app's identifier (confusingly named **Apple ID**) in the **General Information** section.
 
 ![Finding your app's unique identifier](../uploads/2019/03/app store connect_app ID.png)
 
@@ -29,7 +29,7 @@ It is also worth pointing out the necessity for each uploaded binary to have a *
 
 1. Navigate to the Publish section in app settings.
 2. Click **App Store Connect**.
-3. Enter your **Apple ID** (for login), your **app-specific password** and **App ID** (your app’s unique identifier in App Store Connect).
+3. Enter your **Apple ID** (for login), your **app-specific password** and **App ID** (your app's unique identifier in App Store Connect).
 4. Click **Save** to finish the setup.
 
 Once you have successfully set up publishing to App Store Connect, Codemagic will automatically distribute the app to App Store Connect every time you build the workflow. Note that you must manually submit the app to App Store in App Store Connect.
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index d928b2a..e0e2f7c 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -12,4 +12,4 @@ You can publish your web app to a custom subdomain of `codemagic.app` for easy a
 3. Check **Publish artifacts even if tests fail** to publish the build even when one or more tests fail. Leaving this option unchecked will publish only successful builds that pass the tests, if any.
 4. Click **Save** to finish the setup. On saving, we'll check the availability of the subdomain name and inform you if the name is already taken.
 
-Now each time you run a build of your web app on Codemagic, you’ll see the web app artifact being published to the web page in Codemagic logs and can immediately access the app at the specified URL.
+Now each time you run a build of your web app on Codemagic, you'll see the web app artifact being published to the web page in Codemagic logs and can immediately access the app at the specified URL.
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index b4e8948..b637a5e 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -10,9 +10,9 @@ Codemagic enables you to automatically publish your app to the **internal**, **a
 
 You will need a **service account in Google Play Console** to obtain the **JSON credentials file**. See how to do that [here.](#setting-up-a-service-account-in-google-play-console) In addition, you must build the app in **release mode** and set up **Android code signing**.
 
-Before releasing the app to Google Play, make sure that it meets the [Google Play’s best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
+Before releasing the app to Google Play, make sure that it meets the [Google Play's best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
 
-{{% notebox %}} Note that if you haven’t published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](https://docs.codemagic.io/building/build-versioning/ 'Build versioning') on Codemagic. {{% /notebox %}}
+{{% notebox %}} Note that if you haven't published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](https://docs.codemagic.io/building/build-versioning/ 'Build versioning') on Codemagic. {{% /notebox %}}
 
 ## Setting up a service account in Google Play Console
 
@@ -38,10 +38,10 @@ The very first version of the app must be added to Google Play manually. You can
 2. Click **Google Play** to expand the options.
 3. Upload your credentials JSON file.
 4. Select a **track** for publishing.
-   - Internal — publish for internal testing and QA
-   - Alpha — publish for testing with a small group of trusted users
-   - Beta — publish for testing to a wider set of users
-   - Production — release the app to production
+   - Internal --- publish for internal testing and QA
+   - Alpha --- publish for testing with a small group of trusted users
+   - Beta --- publish for testing to a wider set of users
+   - Production --- release the app to production
 5. If you want to publish the APK even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
 6. Click **Save** to finish the setup.
 
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index d4bf6e6..d3b5732 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -31,7 +31,7 @@ In App settings > Test, you will see the **Flutter test target** and **Flutter d
 There are several options for running integration tests during the build. You can select one option per workflow:
 * iOS simulator (selected by default)
 * Android emulator
-* [AWS Device Farm](./aws) — enables to run tests on physical Android and iOS devices. Requires an AWS account and additional setup.
+* [AWS Device Farm](./aws) --- enables to run tests on physical Android and iOS devices. Requires an AWS account and additional setup.
 
 {{% notebox %}}
 
diff --git a/content/testing/testing-widgets.md b/content/testing/testing-widgets.md
index f4baab9..1a4a8de 100644
--- a/content/testing/testing-widgets.md
+++ b/content/testing/testing-widgets.md
@@ -15,4 +15,4 @@ To test widgets, the following is required:
 
 Your widget repository is automatically detected just as any other repository, but there are differences in the build process. Technically, Codemagic will only fetch the sources, install the dependencies and run the tests. If there are failing tests, you will receive the test report on your email.
 
-After the first build, you can change the Flutter version (by default, it’s `channel Stable`) and configure email publishing and Slack for receiving status reports.
+After the first build, you can change the Flutter version (by default, it's `channel Stable`) and configure email publishing and Slack for receiving status reports.
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 8d226a1..a066190 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -12,11 +12,11 @@ This is the list of the most common issues that may cause iOS code signing error
 
 * **The uploaded certificate and provisioning profile do not match.** For example, you're using a development certificate and a distribution profile to sign the build, or the certificate used for signing is not included in the provisioning profile.
 
-* **You don’t have the required entitlements enabled for your app in Apple Developer portal.** In such cases, you will often see an error message similar to this one:
+* **You don't have the required entitlements enabled for your app in Apple Developer portal.** In such cases, you will often see an error message similar to this one:
 
-    > Code Signing Error: “Runner” requires a provisioning profile with the Push Notifications feature. Select a provisioning profile in the Signing & Capabilities editor.
+    > Code Signing Error: "Runner" requires a provisioning profile with the Push Notifications feature. Select a provisioning profile in the Signing & Capabilities editor.
 
-    Check your app’s entitlements by going to **Apple Developer portal > Certificates, identifier & profiles > Identifiers > App ID**.
+    Check your app's entitlements by going to **Apple Developer portal > Certificates, identifier & profiles > Identifiers > App ID**.
 
 * **You haven't specified the iOS scheme to be used for the `archive` action of Xcode build.**  This applies when your app has custom iOS schemes. By default, Codemagic builds the `Runner` scheme, but you can use the `FCI_FLUTTER_SCHEME` [environment variable](..\building\environment-variables) to specify another scheme.
 

commit 17003c1356bfef3116e316e56f9daba7bfb48499
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Oct 22 15:31:32 2019 +0300

    Remove invisible character

diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index ce3cfec..02e7b67 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -53,7 +53,7 @@ Alternatively, you can use [environment variables](https://docs.codemagic.io/bui
 
         #!/usr/bin/env sh
         set -e # exit on first failed commandset
-        echo $FCI_KEYSTORE_FILE | base64 --decode > $FCI_BUILD_DIR/keystore.jks
+        echo $FCI_KEYSTORE_FILE | base64 --decode > $FCI_BUILD_DIR/keystore.jks
 
 4.  Set your signing configuration in `build.gradle` as follows:
 

commit 29e40ef6c787e82746ec61dd12db26a44f94d1fb
Author: Madis Peebo <madis@nevercode.io>
Date:   Tue Oct 22 13:39:34 2019 +0300

    add blockquote style

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index 3d8ff78..e877b5c 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -317,6 +317,16 @@ body {
               }
             }
 
+            blockquote {
+              overflow: auto;
+              padding: 20px 20px;
+              border-left: 10px solid $grey-bg;
+              background: $grey-bg-light;
+
+              p:first-child {margin-top: 0}
+              p:last-child {margin-bottom: 0}
+            }
+
             .table-wrap {
                 overflow-x: auto;
             }

commit 09ec51ba2dc7b94fbc75a6e72a671ee3b4e3a817
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Oct 22 11:33:38 2019 +0300

    Fix formatting

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 78ace3d..8d226a1 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -14,7 +14,7 @@ This is the list of the most common issues that may cause iOS code signing error
 
 * **You don’t have the required entitlements enabled for your app in Apple Developer portal.** In such cases, you will often see an error message similar to this one:
 
-        Code Signing Error: “Runner” requires a provisioning profile with the Push Notifications feature. Select a provisioning profile in the Signing & Capabilities editor.
+    > Code Signing Error: “Runner” requires a provisioning profile with the Push Notifications feature. Select a provisioning profile in the Signing & Capabilities editor.
 
     Check your app’s entitlements by going to **Apple Developer portal > Certificates, identifier & profiles > Identifiers > App ID**.
 

commit 0a40863b083ec2ae0eb120feccfc0b593c6a0253
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Mon Oct 21 11:51:29 2019 +0300

    Remove invisible character

diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index 960cb30..ed94bbb 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -13,8 +13,8 @@ Instead of committing the Firebase config files to your repository, you can uplo
 
         set -e # exit on first failed commandset
 
-        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
-        echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
+        echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
 
 {{% notebox %}}
 

commit 4ad8e758080a7663dca6c2830f6ece33c7cadc0e
Merge: 3fc4031 f60eba8
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Sun Oct 20 14:44:38 2019 +0300

    Merge branch 'master' of github.com:codemagic-ci-cd/codemagic-docs

commit 3fc4031bf0f14251b844f74c3fc700afe6aa9a8d
Author: Helina Ariva <helinaariva@Helinas-Air.lan>
Date:   Sun Oct 20 14:44:23 2019 +0300

    Common iOS code signing issues

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 7273e2f..78ace3d 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -4,6 +4,24 @@ title: Common issues
 weight: 1
 ---
 
+## iOS code signing troubleshooting
+
+This is the list of the most common issues that may cause iOS code signing errors during a CI build.
+
+* **The uploaded certificate is in a wrong format or corrupt.** Codemagic looks for a certificate in Personal Information Exchange (`.p12`) format. See [how to export the certificate](../code-signing/ios-code-signing/#exporting-signing-certificate-and-provisioning-profile).
+
+* **The uploaded certificate and provisioning profile do not match.** For example, you're using a development certificate and a distribution profile to sign the build, or the certificate used for signing is not included in the provisioning profile.
+
+* **You don’t have the required entitlements enabled for your app in Apple Developer portal.** In such cases, you will often see an error message similar to this one:
+
+        Code Signing Error: “Runner” requires a provisioning profile with the Push Notifications feature. Select a provisioning profile in the Signing & Capabilities editor.
+
+    Check your app’s entitlements by going to **Apple Developer portal > Certificates, identifier & profiles > Identifiers > App ID**.
+
+* **You haven't specified the iOS scheme to be used for the `archive` action of Xcode build.**  This applies when your app has custom iOS schemes. By default, Codemagic builds the `Runner` scheme, but you can use the `FCI_FLUTTER_SCHEME` [environment variable](..\building\environment-variables) to specify another scheme.
+
+* **The bundle ID you have entered in automatic code signing setup on Codemagic does not match the bundle ID in the build configuration that is used for archiving the app with Xcode.** Codemagic assigns provisioning profiles to the build targets and configurations before building the iOS app. That assignment is based on the bundle ID match in both provisioning profile and the build configuration. In the case signing configuration is not assigned to the build target/configuration that is used for archiving, the build will fail.
+
 ## iOS build hangs at `Xcode build done`
 
 **Description**:
@@ -20,7 +38,7 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
     Running Xcode build...                                          
     Xcode build done.                                           203.6s
 
-**Flutter**: 1.7.8+hotfix.3, 1.7.8+hotfix.4, 1.9.1+hotfix.2
+**Flutter**: `1.7.8+hotfix.3`, `1.7.8+hotfix.4`, `1.9.1+hotfix.2`, `1.9.1+hotfix.4`
 
 **Xcode**: N/A
 
@@ -28,4 +46,4 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
 https://github.com/flutter/flutter/issues/28415
 https://github.com/flutter/flutter/issues/35988
 
-This issue is known to be fixed on the master channel.
\ No newline at end of file
+This issue is known to be fixed on the `master` channel.

commit f60eba8d9c408b9781da42345c9eb558ed5dc03b
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Thu Oct 17 14:43:33 2019 +0300

    repositories behind firewall (#8)
    
    * add IP addresses
    
    * Added IP addresses

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index af3b01e..41819b0 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -18,3 +18,10 @@ Then, fill in all the required fields.
 4. Click **Add app**.
 
 Your app will be then listed on the Applications page and you can immediately start running builds. Note that in order to enable automatic builds, you will need to manually [set up webhooks](../building/automatic-build-triggering#webhooks).
+
+## Repositories behind firewall
+
+To allow Codemagic access the private repository, the following IP addresses need to be whitelisted:
+
+1. `34.74.32.93` - used by our backend for getting basic information about the repository
+2. `192.159.66.80/28` - used by our builder servers to download the code and build it

commit f6ef9046ad88b3ee26d409b9a353156bafa38820
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Oct 17 14:40:24 2019 +0300

    Fix

diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index cbbf84a..d1a1196 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -26,7 +26,7 @@ For successful signing, the certificate and the provisioning profile must match
 
 In short, the purpose of the different provisioning profiles is the following:
 
-- **Development**: for testing the app on a real device while developing. The app must be built in **debug** mode.
+- **Development**: for testing the app on a real device while developing. 
 - **Ad Hoc:** for distributing the app to non-TestFlight testers (e.g. via [Testmagic](https://testmagic.io/)). The app must be built in **release** mode.
 - **App Store**: for distributing the app via TestFlight or the App Store. The app must be built in **release** mode.
 

commit 9b06c2c1e5adaa9c73dce8be755b8424c6868542
Merge: 3544218 061602d
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Oct 17 11:15:36 2019 +0300

    Merge branch 'master' of github.com:codemagic-ci-cd/codemagic-docs

commit 061602d34b968d72b1f205198042bc26e46d5d46
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Thu Oct 17 09:36:29 2019 +0300

    base image update (#7)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index feb1982..54cb0e1 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -1,49 +1,51 @@
----
-description: A list of software and versions available out-of-the-box on Codemagic.
-title: Software versions
-weight: 2
----
-**Dart and Flutter**
-
-- Dart `2.5.0`
-- Flutter `1.9.1+hotfix.4 ($HOME/programs/flutter)`
-
-**iOS tools**
-
-- Xcode
-
-`9.4.1 (9F2000) (/Applications/Xcode-9.4.app)`
-
-`10.0 (10A255) (/Applications/Xcode-10.app)`
-
-`10.1 (10B61) (/Applications/Xcode-10.1.app)`
-
-`10.2.1 (10E1001) (/Applications/Xcode-10.2.app)`
-
-`10.3 (10G8) (/Applications/Xcode-10.3.app)`
-
-`11.0 (11A420a) (/Applications/Xcode-11.app)`
-
-`11.1 (11A1027) (/Applications/Xcode-11.1.app)`
-
-
-- CocoaPods `1.7.5`
-
-**Android tools**
-
-- Android tools `$HOME/programs/android-sdk-macosx`
-
-**Other tools**
-
-- wget `1.20.3`
-- curl `7.54.0`
-- ssh `7.9p1`
-- git `2.23.0`
-- homebrew `2.1.11`
-- python `2.7.16`
-- python3 `3.7.4`
-- node `12.10.0`
-- npm `6.11.3`
-- yarn `1.17.3`
-- gem `2.5.2.2`
-- ruby `2.3.6p384`
\ No newline at end of file
+---
+description: A list of software and versions available out-of-the-box on Codemagic.
+title: Software versions
+weight: 2
+---
+**Dart and Flutter**
+
+- Dart `2.5.2`
+- Flutter `1.9.1+hotfix.4 ($HOME/programs/flutter)`
+
+**iOS tools**
+
+- Xcode
+
+`9.4.1 (9F2000) (/Applications/Xcode-9.4.app)`
+
+`10.0 (10A255) (/Applications/Xcode-10.app)`
+
+`10.1 (10B61) (/Applications/Xcode-10.1.app)`
+
+`10.2.1 (10E1001) (/Applications/Xcode-10.2.app)`
+
+`10.3 (10G8) (/Applications/Xcode-10.3.app)`
+
+`11.0 (11A420a) (/Applications/Xcode-11.app)`
+
+`11.1 (11A1027) (/Applications/Xcode-11.1.app)`
+
+`11.2 (11B44) (/Applications/Xcode-11.2.app)`
+
+
+- CocoaPods `1.8.3`
+
+**Android tools**
+
+- Android tools `$HOME/programs/android-sdk-macosx`
+
+**Other tools**
+
+- wget `1.20.3`
+- curl `7.54.0`
+- ssh `7.9p1`
+- git `2.23.0`
+- homebrew `2.1.14`
+- python `2.7.16`
+- python3 `3.7.4`
+- node `12.10.0`
+- npm `6.11.3`
+- yarn `1.19.1`
+- gem `2.5.2.2`
+- ruby `2.3.6p384`

commit cdfe5bb889c511889f3955a7aaee59a1e1311f9b
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Wed Oct 16 20:39:11 2019 +0300

    migrate to github actions

diff --git a/deploy.sh b/deploy.sh
deleted file mode 100755
index b1753b9..0000000
--- a/deploy.sh
+++ /dev/null
@@ -1,14 +0,0 @@
-#! /bin/sh
-
-set -ex
-
-cd "${0%/*}"
-
-# requires env variables AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, CF_DISTRIBUTION_ID
-
-s3deploy \
-  -bucket docs.codemagic.io \
-  -public-access \
-  -region us-east-1 \
-  -source public \
-  -distribution-id "$CF_DISTRIBUTION_ID"

commit d077237a9e4f06ac4d45bfb36421ada60d4d9f76
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Wed Oct 16 20:20:54 2019 +0300

    WIP use extended version of hugo

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index cdae506..2eb9e06 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -13,8 +13,8 @@ jobs:
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     steps:
       - uses: actions/checkout@master
-      - run: curl --location --remote-name https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_0.58.3_Linux-64bit.deb
-      - run: sudo dpkg -i hugo_0.58.3_Linux-64bit.deb
+      - run: curl --location --remote-name https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_extended_0.58.3_Linux-64bit.deb
+      - run: sudo dpkg -i hugo_extended_0.58.3_Linux-64bit.deb
       - run: sudo apt-get install -f
       - run: hugo --minify
         working-directory: ${{ github.workspace }}

commit c48c4d1407e434fb11e740c35b63b0a462b00d21
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Wed Oct 16 20:17:39 2019 +0300

    WIP fix path

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index b0310d3..cdae506 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -16,8 +16,10 @@ jobs:
       - run: curl --location --remote-name https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_0.58.3_Linux-64bit.deb
       - run: sudo dpkg -i hugo_0.58.3_Linux-64bit.deb
       - run: sudo apt-get install -f
+      - run: hugo --minify
+        working-directory: ${{ github.workspace }}
       - run: sudo pip install awscli
-      - run: aws s3 sync build s3://docs.codemagic.io
+      - run: aws s3 sync public s3://docs.codemagic.io
         working-directory: ${{ github.workspace }}
       - run: aws cloudfront create-invalidation --distribution-id EM3VDRI1IYP45 --paths '/*'
 

commit 17c3274bbf81ae570943090adfa2dfb9d7d0668b
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Wed Oct 16 20:10:31 2019 +0300

    WIP fix file format

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 6914035..b0310d3 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -5,8 +5,6 @@ on:
     branches:
       - master
 
-env:
-
 jobs:
   build:
     runs-on: ubuntu-latest

commit ed20fd1acd0d64a1ae83c407051ddcbfb801ea09
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Wed Oct 16 20:09:32 2019 +0300

    WIP upload to s3

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index f842dcf..6914035 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -5,14 +5,21 @@ on:
     branches:
       - master
 
+env:
+
 jobs:
   build:
     runs-on: ubuntu-latest
+    env:
+      AWS_ACCESS_KEY_ID: AKIAVIULH47FJUBBUV5U
+      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     steps:
       - uses: actions/checkout@master
       - run: curl --location --remote-name https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_0.58.3_Linux-64bit.deb
       - run: sudo dpkg -i hugo_0.58.3_Linux-64bit.deb
       - run: sudo apt-get install -f
-      - run: ./deploy.sh
+      - run: sudo pip install awscli
+      - run: aws s3 sync build s3://docs.codemagic.io
         working-directory: ${{ github.workspace }}
+      - run: aws cloudfront create-invalidation --distribution-id EM3VDRI1IYP45 --paths '/*'
 

commit 83b326ce13355ad961248d5c13bfa124faaad6da
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Wed Oct 16 19:56:15 2019 +0300

    WIP fix working directory

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index e600cda..f842dcf 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -14,4 +14,5 @@ jobs:
       - run: sudo dpkg -i hugo_0.58.3_Linux-64bit.deb
       - run: sudo apt-get install -f
       - run: ./deploy.sh
-        working-directory: $GITHUB_WORKSPACE
+        working-directory: ${{ github.workspace }}
+

commit e9673e01a2491fafc3465e1215ad4324338f0094
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Wed Oct 16 19:53:02 2019 +0300

    WIP set working directory

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 906ff51..e600cda 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -9,7 +9,9 @@ jobs:
   build:
     runs-on: ubuntu-latest
     steps:
+      - uses: actions/checkout@master
       - run: curl --location --remote-name https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_0.58.3_Linux-64bit.deb
       - run: sudo dpkg -i hugo_0.58.3_Linux-64bit.deb
       - run: sudo apt-get install -f
       - run: ./deploy.sh
+        working-directory: $GITHUB_WORKSPACE

commit 77bd190be83a6ba41198984551b232b87db48d8b
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Wed Oct 16 19:40:09 2019 +0300

    WIP follow redirects to download hugo

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index d6ee4d9..906ff51 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -9,7 +9,7 @@ jobs:
   build:
     runs-on: ubuntu-latest
     steps:
-      - run: curl --remote-name https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_0.58.3_Linux-64bit.deb
+      - run: curl --location --remote-name https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_0.58.3_Linux-64bit.deb
       - run: sudo dpkg -i hugo_0.58.3_Linux-64bit.deb
       - run: sudo apt-get install -f
       - run: ./deploy.sh

commit 798794199bcccd47e9435a1fe6109b0d8e220bb6
Author: Mikhail Tokarev <mikhail.tokarev@gmail.com>
Date:   Wed Oct 16 19:36:18 2019 +0300

    WIP install hugo with sudo

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 7619fda..d6ee4d9 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -10,6 +10,6 @@ jobs:
     runs-on: ubuntu-latest
     steps:
       - run: curl --remote-name https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_0.58.3_Linux-64bit.deb
-      - run: dpkg -i hugo_0.58.3_Linux-64bit.deb
-      - run: apt-get install -f
+      - run: sudo dpkg -i hugo_0.58.3_Linux-64bit.deb
+      - run: sudo apt-get install -f
       - run: ./deploy.sh

commit 7d7c4002d69b1ad0d4e739b9dbdc4dbf148e9d0c
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Wed Oct 16 19:32:23 2019 +0300

    WIP deploy via GitHub actions

diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
new file mode 100644
index 0000000..7619fda
--- /dev/null
+++ b/.github/workflows/deploy.yml
@@ -0,0 +1,15 @@
+name: Site Deployment
+
+on:
+  push:
+    branches:
+      - master
+
+jobs:
+  build:
+    runs-on: ubuntu-latest
+    steps:
+      - run: curl --remote-name https://github.com/gohugoio/hugo/releases/download/v0.58.3/hugo_0.58.3_Linux-64bit.deb
+      - run: dpkg -i hugo_0.58.3_Linux-64bit.deb
+      - run: apt-get install -f
+      - run: ./deploy.sh

commit 35442181eb7101e02219953e99ced2a53ee9fafb
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Wed Oct 16 09:29:44 2019 +0300

    Fixed on master

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 65214b4..7273e2f 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -28,4 +28,4 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
 https://github.com/flutter/flutter/issues/28415
 https://github.com/flutter/flutter/issues/35988
 
-Downgrading to earlier Flutter versions can help.
\ No newline at end of file
+This issue is known to be fixed on the master channel.
\ No newline at end of file

commit 4a7938e10a216e7c6128f54138f6cb5c4f1eb97c
Author: Madis Peebo <madis@nevercode.io>
Date:   Thu Oct 10 14:51:39 2019 +0300

    improve image shadow

diff --git a/assets/scss/main.scss b/assets/scss/main.scss
index c610900..3d8ff78 100644
--- a/assets/scss/main.scss
+++ b/assets/scss/main.scss
@@ -241,7 +241,8 @@ body {
             p, ul, ol, pre, hr, figure { margin: 20px auto; }
             img {
                 border-radius: 2px;
-                box-shadow: 0 0 30px transparentize(black, .9);
+                filter: drop-shadow(0 0 10px transparentize(black, 0.9));
+                -webkit-filter: drop-shadow(0 0 10px transparentize(black, 0.9));
                 max-width: 100%;
             }
             a { color: #158fdc; }

commit 863dba979c46c11a57b4a43c3f3b54fef667e79b
Author: Madis Peebo <madis@nevercode.io>
Date:   Thu Oct 10 14:49:02 2019 +0300

    fix formatting

diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index bdc8ba3..291d9e6 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -20,29 +20,27 @@ Pushing git tags from Codemagic to repository requires **write access** to the r
 
 2. Click on the '**+**' sign between **Build** and **Publish** in your app settings and add the following **Pre-publish** script.  Note that you need to replace the placeholders with your actual environment variable name and Git service details.
 
-```
-       #!/usr/bin/env sh
+        #!/usr/bin/env sh
 
-       set -e # exit on first failed commandset
-       set -x # print all executed commands to the log
+        set -e # exit on first failed commandset
+        set -x # print all executed commands to the log
 
-       if [ "$FCI_BUILD_STEP_STATUS" == "success" ]
-       then
-         new_version=v1.0.$BUILD_NUMBER
-         git tag $new_version
-         git push "https://your-username:$APP_PASSWORD_ENV_VARIABLE@your-git-service.com/your-username/your-repo.git" -tags
-       fi
-```
-Where:
+        if [ "$FCI_BUILD_STEP_STATUS" == "success" ]
+        then
+          new_version=v1.0.$BUILD_NUMBER
+          git tag $new_version
+          git push "https://your-username:$APP_PASSWORD_ENV_VARIABLE@your-git-service.com/your-username/your-repo.git" -tags
+        fi
+    Where:
 
-* `BUILD_NUMBER` is the read-only environment variable that holds the total count of builds for this project in Codemagic.
-* `your-username` is your Git service username
-* `APP_PASSWORD_ENV_VARIABLE` is the name of the environment variable that holds your app password / personal access token.
-* `your-git-service.com` is the name of your Git service, e.g. github.com, bitbucket.com or gitlab.com.
-* `your-repo` is the name of your repository
+    * `BUILD_NUMBER` is the read-only environment variable that holds the total count of builds for this project in Codemagic.
+    * `your-username` is your Git service username
+    * `APP_PASSWORD_ENV_VARIABLE` is the name of the environment variable that holds your app password / personal access token.
+    * `your-git-service.com` is the name of your Git service, e.g. github.com, bitbucket.com or gitlab.com.
+    * `your-repo` is the name of your repository
 
-Before creating the tag, the script will check if the build was successful.
+    Before creating the tag, the script will check if the build was successful.
 
 {{% notebox %}}
-Make sure to use the `https` or `git` protocol to push the tag, using `ssh` is not supported.
+Make sure to use the `https` repository URL for pushing. Using the `ssh` format is not supported with app passwords or personal access tokens
 {{% /notebox %}}
\ No newline at end of file

commit 245ed08c268b2a7449e1d5cea35486a7d1160912
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Oct 10 13:58:46 2019 +0300

    Add information about write access

diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index 706f4eb..bdc8ba3 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -4,10 +4,21 @@ title: Add a Git tag with app version
 weight: 2
 ---
 
-You can use this **pre-publish** script to create a Git tag referencing your app version and push it to your repository. Before creating the tag, the script will check if the build was successful.
+You can use Codemagic to greate a Git tag and push it to your repository.
 
-1. In **App settings > Environment variables**, save your Git service username and email address as [environment variables](https://docs.codemagic.io/building/environment-variables/) (e.g. `GIT_USERNAME` and `GIT_EMAIL`).
-2. Click on the + sign between **Build** and **Publish** and add the following **pre-publish** script.
+{{% notebox %}}
+
+Pushing git tags from Codemagic to repository requires **write access** to the repository. Depending on the Git service and authentication method, Codemagic may not have write access to your repository and you may need to grant it separately in your Git service settings. We recommend that you create a dedicated app password / personal access token for Codemagic.
+
+* For repositories hosted on Bitbucket, create an [app password](https://confluence.atlassian.com/bitbucket/app-passwords-828781300.html) with **write** permission for repositories.
+* For repositories hosted on GitHub, create a [personal access token](https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line) with **repo** scope.
+* For repositories hosted on GitLab, create a [personal access token](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html) with **write_repository** scope.
+
+{{% /notebox %}}
+
+1. Add your app password / personal access token to Codemagic as a secure [environment variable](../building/environment-variables).
+
+2. Click on the '**+**' sign between **Build** and **Publish** in your app settings and add the following **Pre-publish** script.  Note that you need to replace the placeholders with your actual environment variable name and Git service details.
 
 ```
        #!/usr/bin/env sh
@@ -18,9 +29,20 @@ You can use this **pre-publish** script to create a Git tag referencing your app
        if [ "$FCI_BUILD_STEP_STATUS" == "success" ]
        then
          new_version=v1.0.$BUILD_NUMBER
-         git config --global user.name $GIT_USERNAME
-         git config --global user.email $GIT_EMAIL
          git tag $new_version
-         git push --tags
+         git push "https://your-username:$APP_PASSWORD_ENV_VARIABLE@your-git-service.com/your-username/your-repo.git" -tags
        fi
 ```
+Where:
+
+* `BUILD_NUMBER` is the read-only environment variable that holds the total count of builds for this project in Codemagic.
+* `your-username` is your Git service username
+* `APP_PASSWORD_ENV_VARIABLE` is the name of the environment variable that holds your app password / personal access token.
+* `your-git-service.com` is the name of your Git service, e.g. github.com, bitbucket.com or gitlab.com.
+* `your-repo` is the name of your repository
+
+Before creating the tag, the script will check if the build was successful.
+
+{{% notebox %}}
+Make sure to use the `https` or `git` protocol to push the tag, using `ssh` is not supported.
+{{% /notebox %}}
\ No newline at end of file

commit 8505e394ddeaf0de00665a27030a8b9514835f0e
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Oct 8 16:03:46 2019 +0300

    Update scripts

diff --git a/content/custom-scripts/publish-app-artifacts-to-app-center.md b/content/custom-scripts/publish-app-artifacts-to-app-center.md
index dfad4b9..e9e48a6 100644
--- a/content/custom-scripts/publish-app-artifacts-to-app-center.md
+++ b/content/custom-scripts/publish-app-artifacts-to-app-center.md
@@ -20,14 +20,19 @@ echo "Find build artifacts"
 apkPath=$(find build -name "*.apk" | head -1)
 echo "Found apk at $apkPath"
 
-echo "Publishing $apkPath to App Center"
-appcenter distribute release \
-    --group Collaborators \
-    --file $apkPath \
-    --release-notes 'App submission via Codemagic' \
-    --app <username_or_organization>/<application_identifier> \
-    --token $APP_CENTER_TOKEN \
-    --quiet
+if [[ -z ${apkPath} ]]
+then
+    echo "No ipas were found, skip publishing to App Center"
+else
+    echo "Publishing $apkPath to App Center"
+    appcenter distribute release \
+        --group Collaborators \
+        --file "${apkPath}" \
+        --release-notes 'App submission via Codemagic' \
+        --app <username_or_organization>/<application_identifier> \
+        --token "${APP_CENTER_TOKEN}" \
+        --quiet
+fi
 ```
 
 **Example script for publishing ipa**
@@ -41,14 +46,19 @@ echo "Find build artifacts"
 ipaPath=$(find build -name "*.ipa" | head -1)
 echo "Found ipa at $ipaPath"
 
-echo "Publishing $ipaPath to App Center"
-appcenter distribute release \
-    --group Collaborators \
-    --file $ipaPath \
-    --release-notes 'App submission via Codemagic' \
-    --app <username_or_organization>/<application_identifier> \
-    --token $APP_CENTER_TOKEN \
-    --quiet
+if [[ -z ${ipaPath} ]]
+then
+    echo "No ipas were found, skip publishing to App Center"
+else
+    echo "Publishing $ipaPath to App Center"
+    appcenter distribute release \
+        --group Collaborators \
+        --file "${ipaPath}" \
+        --release-notes 'App submission via Codemagic' \
+        --app <username_or_organization>/<application_identifier> \
+        --token "${APP_CENTER_TOKEN}" \
+        --quiet
+fi
 ```
 
 This way, you can use Codemagic to automate publishing of your Android or iOS app to App Center.
\ No newline at end of file

commit e78cf7d6f70ab077cdbe833ca63b60b1266d5120
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Oct 8 15:59:03 2019 +0300

    Remove invisible characters

diff --git a/content/custom-scripts/publish-app-artifacts-to-app-center.md b/content/custom-scripts/publish-app-artifacts-to-app-center.md
index 5efcd69..dfad4b9 100644
--- a/content/custom-scripts/publish-app-artifacts-to-app-center.md
+++ b/content/custom-scripts/publish-app-artifacts-to-app-center.md
@@ -33,14 +33,14 @@ appcenter distribute release \
 **Example script for publishing ipa**
 ```
 #!/usr/bin/env zsh
-​
+
 echo 'Installing App Center CLI tools'
 npm install -g appcenter-cli
-​
+
 echo "Find build artifacts"
 ipaPath=$(find build -name "*.ipa" | head -1)
 echo "Found ipa at $ipaPath"
-​
+
 echo "Publishing $ipaPath to App Center"
 appcenter distribute release \
     --group Collaborators \

commit da1c6e3cc075f9775d0074d85aa6bf8af160958e
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Oct 8 13:42:54 2019 +0300

    Trigger on push field change

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 1e720ff..1bec801 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -28,7 +28,7 @@ To add a new branch pattern:
 
 Under Automatic build triggering, you can select when to trigger builds.
 
-**Trigger on every push**. When checked, a build will be started every time you commit code to any of the tracked branches.
+**Trigger on push**. When checked, a build will be started every time you commit code to any of the tracked branches.
 
 **Trigger on pull request update** (not supported for apps from custom sources). When checked, your workflow is run when a pull request is opened or updated to verify the resulting merge commit. 
 

commit d251c51ff2db389e48691838fe7378a3ded9e33f
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Tue Oct 8 13:34:29 2019 +0300

    Change in PR builds

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 6a11d6c..1e720ff 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -20,7 +20,7 @@ To add a new branch pattern:
 1. Navigate to **App settings >** **Build triggers**.
 2. Enter a pattern matching the name of one or more branches in the project.
 3. Select **Include** or **Exclude** from the dropdown to limit the set of targeted branches by either including or excluding the matching branches.
-4. For pull request builds, select whether the tracked branch is the **Source** or the **Target** branch of the pull request. This setting has no effect on other types of builds.
+4. For **pull request builds**, select whether the tracked branch is the **Source** or the **Target** branch of the pull request. This setting has no effect on other types of builds.
 5. Click **Add pattern** to save it. You can always edit or delete added patterns.
 6. Click **Save** at the end of the section for the changes to take effect.
 
@@ -28,13 +28,13 @@ To add a new branch pattern:
 
 Under Automatic build triggering, you can select when to trigger builds.
 
-![](../uploads/build_triggers.png)
-
 **Trigger on every push**. When checked, a build will be started every time you commit code to any of the tracked branches.
 
-**Trigger on pull request update** (not supported for apps from custom sources). When checked, your workflow is run when a pull request is opened or updated.
+**Trigger on pull request update** (not supported for apps from custom sources). When checked, your workflow is run when a pull request is opened or updated to verify the resulting merge commit. 
+
+* For triggering pull requests, you can specify whether each branch pattern matches the **source** or the **target** branch of the pull request.
 
-**Skip building platforms on pull request update**. When checked, only tests are run for the opened or updated pull request (merge request in GitLab jargon) without building for platforms. When unchecked, we build for platforms and generate artifacts but publishing to app stores is not available.
+* If you want to only run tests for pull requests and skip building for platforms, select **Run tests only** under Build > Build for platforms.
 
 **Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
 

commit 3326f967b48bdee5ab1cae2a1f1de60fdc37a92e
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Oct 4 17:00:42 2019 +0300

    PR builds

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index e0c07bc..6a11d6c 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -34,7 +34,7 @@ Under Automatic build triggering, you can select when to trigger builds.
 
 **Trigger on pull request update** (not supported for apps from custom sources). When checked, your workflow is run when a pull request is opened or updated.
 
-**Skip building platforms on pull request update**. When checked, only tests are run for the opened or updated pull request (merge request in GitLab jargon) without building for platforms.
+**Skip building platforms on pull request update**. When checked, only tests are run for the opened or updated pull request (merge request in GitLab jargon) without building for platforms. When unchecked, we build for platforms and generate artifacts but publishing to app stores is not available.
 
 **Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
 

commit 1419e46134151498643cd6189af97829bfc7ee6d
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Oct 4 16:15:39 2019 +0300

    PR builds update

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 5ff6a81..e0c07bc 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -28,11 +28,13 @@ To add a new branch pattern:
 
 Under Automatic build triggering, you can select when to trigger builds.
 
-![](../uploads/trigger_on_tag_creation.png)
+![](../uploads/build_triggers.png)
 
 **Trigger on every push**. When checked, a build will be started every time you commit code to any of the tracked branches.
 
-**Trigger on pull request update** (not supported for apps from custom sources). When checked, Codemagic will run the tests for the opened or updated pull request (merge request in GitLab jargon) without building the Android or the iOS app and pass the result back to the repository.
+**Trigger on pull request update** (not supported for apps from custom sources). When checked, your workflow is run when a pull request is opened or updated.
+
+**Skip building platforms on pull request update**. When checked, only tests are run for the opened or updated pull request (merge request in GitLab jargon) without building for platforms.
 
 **Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
 
diff --git a/content/uploads/automatic build triggering.PNG b/content/uploads/automatic build triggering.PNG
deleted file mode 100644
index 9c1cacb..0000000
Binary files a/content/uploads/automatic build triggering.PNG and /dev/null differ
diff --git a/content/uploads/build_triggers.png b/content/uploads/build_triggers.png
new file mode 100644
index 0000000..041baee
Binary files /dev/null and b/content/uploads/build_triggers.png differ

commit 29a9016cf95edd7ebcb7a78d5275d27939282f6b
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Oct 4 14:59:25 2019 +0300

    Fix a typo

diff --git a/content/custom-scripts/publish-app-artifacts-to-app-center.md b/content/custom-scripts/publish-app-artifacts-to-app-center.md
index 05c5110..5efcd69 100644
--- a/content/custom-scripts/publish-app-artifacts-to-app-center.md
+++ b/content/custom-scripts/publish-app-artifacts-to-app-center.md
@@ -4,7 +4,7 @@ title: Publish app artifacts to App Center
 weight: 3
 ---
 
-As a custom build step, Codemagic can publish your app artifact to App Center using the [App Center Command Line Interface](https://github.com/microsoft/appcenter-cli). An **App Center API token** is required for publishing. It is advisable to create a new token for use on Codemagic, see the commands related to API tokens [here](https://github.com/microsoft/appcenter-cli#commands) or manage your tokens in [App Center settings](https://appcenter.ms/settings/apitokens).š
+As a custom build step, Codemagic can publish your app artifact to App Center using the [App Center Command Line Interface](https://github.com/microsoft/appcenter-cli). An **App Center API token** is required for publishing. It is advisable to create a new token for use on Codemagic, see the commands related to API tokens [here](https://github.com/microsoft/appcenter-cli#commands) or manage your tokens in [App Center settings](https://appcenter.ms/settings/apitokens).
 
 1. Add your App Center API token to Codemagic as a secure [environment variable](../building/environment-variables) with the name `APP_CENTER_TOKEN`.
 2. In your app settings, expand the step between Build and Publish and add the respective **post-build** script.

commit 6885c9df51e9fe0757fb311f00a20c82042ae61f
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Oct 4 14:55:46 2019 +0300

    Add UI link

diff --git a/content/custom-scripts/publish-app-artifacts-to-app-center.md b/content/custom-scripts/publish-app-artifacts-to-app-center.md
index eb3d28c..05c5110 100644
--- a/content/custom-scripts/publish-app-artifacts-to-app-center.md
+++ b/content/custom-scripts/publish-app-artifacts-to-app-center.md
@@ -4,7 +4,7 @@ title: Publish app artifacts to App Center
 weight: 3
 ---
 
-As a custom build step, Codemagic can publish your app artifact to App Center using the [App Center Command Line Interface](https://github.com/microsoft/appcenter-cli). An **App Center API token** is required for publishing. It is advisable to create a new token for use on Codemagic, see the commands related to API tokens [here](https://github.com/microsoft/appcenter-cli#commands). 
+As a custom build step, Codemagic can publish your app artifact to App Center using the [App Center Command Line Interface](https://github.com/microsoft/appcenter-cli). An **App Center API token** is required for publishing. It is advisable to create a new token for use on Codemagic, see the commands related to API tokens [here](https://github.com/microsoft/appcenter-cli#commands) or manage your tokens in [App Center settings](https://appcenter.ms/settings/apitokens).š
 
 1. Add your App Center API token to Codemagic as a secure [environment variable](../building/environment-variables) with the name `APP_CENTER_TOKEN`.
 2. In your app settings, expand the step between Build and Publish and add the respective **post-build** script.

commit 3a2145e50a56a0205668d45fcb88dab8acfc727e
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Fri Oct 4 13:42:01 2019 +0300

    Added script for App Center publishing

diff --git a/content/custom-scripts/beta-deployment-with-fastlane.md b/content/custom-scripts/beta-deployment-with-fastlane.md
index 534f458..5a8ea83 100644
--- a/content/custom-scripts/beta-deployment-with-fastlane.md
+++ b/content/custom-scripts/beta-deployment-with-fastlane.md
@@ -1,7 +1,7 @@
 ---
 description: Run fastlane scripts to deploy to beta distribution services 
 title: Run fastlane for beta deployment
-weight: 4
+weight: 5
 ---
 
 If your Flutter app has an existing *fastlane* setup for beta deployment, you can easily run *fastlane* scripts as part of the Codemagic build process and publish to Crashlytics, for example. Note that our builder machines have *fastlane* pre-installed. You can use the pre-publish script example below to execute `fastlane beta` for successful Android builds.
diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index 4481695..960cb30 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -1,7 +1,7 @@
 ---
 description: Load your Firebase configuration files to Codemagic
 title: Load Firebase configuration
-weight: 5
+weight: 6
 ---
 
 Instead of committing the Firebase config files to your repository, you can upload them to Codemagic as [environment variables](https://docs.codemagic.io/building/environment-variables/) and reference them in a custom script. Note that the Firebase config file (`google-services.json` for Android or `GoogleService-Info.plist` for iOS) must be Base64-encoded.
diff --git a/content/custom-scripts/publish-app-artifacts-to-app-center.md b/content/custom-scripts/publish-app-artifacts-to-app-center.md
new file mode 100644
index 0000000..eb3d28c
--- /dev/null
+++ b/content/custom-scripts/publish-app-artifacts-to-app-center.md
@@ -0,0 +1,54 @@
+---
+description: Upload your apk or ipa file to App Center
+title: Publish app artifacts to App Center
+weight: 3
+---
+
+As a custom build step, Codemagic can publish your app artifact to App Center using the [App Center Command Line Interface](https://github.com/microsoft/appcenter-cli). An **App Center API token** is required for publishing. It is advisable to create a new token for use on Codemagic, see the commands related to API tokens [here](https://github.com/microsoft/appcenter-cli#commands). 
+
+1. Add your App Center API token to Codemagic as a secure [environment variable](../building/environment-variables) with the name `APP_CENTER_TOKEN`.
+2. In your app settings, expand the step between Build and Publish and add the respective **post-build** script.
+
+**Example script for publishing apk**
+```
+#!/usr/bin/env zsh
+
+echo 'Installing App Center CLI tools'
+npm install -g appcenter-cli
+
+echo "Find build artifacts"
+apkPath=$(find build -name "*.apk" | head -1)
+echo "Found apk at $apkPath"
+
+echo "Publishing $apkPath to App Center"
+appcenter distribute release \
+    --group Collaborators \
+    --file $apkPath \
+    --release-notes 'App submission via Codemagic' \
+    --app <username_or_organization>/<application_identifier> \
+    --token $APP_CENTER_TOKEN \
+    --quiet
+```
+
+**Example script for publishing ipa**
+```
+#!/usr/bin/env zsh
+​
+echo 'Installing App Center CLI tools'
+npm install -g appcenter-cli
+​
+echo "Find build artifacts"
+ipaPath=$(find build -name "*.ipa" | head -1)
+echo "Found ipa at $ipaPath"
+​
+echo "Publishing $ipaPath to App Center"
+appcenter distribute release \
+    --group Collaborators \
+    --file $ipaPath \
+    --release-notes 'App submission via Codemagic' \
+    --app <username_or_organization>/<application_identifier> \
+    --token $APP_CENTER_TOKEN \
+    --quiet
+```
+
+This way, you can use Codemagic to automate publishing of your Android or iOS app to App Center.
\ No newline at end of file
diff --git a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
index 9a50031..e780600 100644
--- a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
+++ b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
@@ -1,7 +1,7 @@
 ---
 description: You can use custom scripts to publish app artifacts to external services.
 title: Publish build artifacts to Amazon S3
-weight: 3
+weight: 4
 ---
 
 You can use custom scripts to publish your app artifacts to external sources. Here's an example for publishing to [Amazon S3](https://aws.amazon.com/s3/).
diff --git a/content/custom-scripts/upload-custom-artifacts.md b/content/custom-scripts/upload-custom-artifacts.md
index ac09d6c..9123ac0 100644
--- a/content/custom-scripts/upload-custom-artifacts.md
+++ b/content/custom-scripts/upload-custom-artifacts.md
@@ -1,7 +1,7 @@
 ---
 description: Upload files to be included in your build artifacts ZIP file
 title: Upload custom artifacts
-weight: 6
+weight: 7
 ---
 
 You can use a custom script to upload custom artifacts, such as screenshots, to `$FCI_EXPORT_DIR` and include them in the build artifacts ZIP file generated by Codemagic.

commit 3a3a5d170158433bb55cf93c81836890682c6805
Author: Helina Ariva <helinaariva@Helinas-MacBook-Air.local>
Date:   Thu Oct 3 11:57:56 2019 +0300

    Magic seats and new Flutter version

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 664acd1..74c6a82 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,6 +4,12 @@ title: Release notes
 weight: 1
 ---
 
+## October 2019
+
+### Concurrent builds for teams
+
+Teams on Codemagic now have Magic seats available in addition to regular team seats. Purchasing a Magic seat increases your team's build concurrency by 1, allowing to run several builds in parallel. Read more about Magic seats on our [blog](https://blog.codemagic.io/get-additional-build-concurrency-with-magic-seats/) and check out the pricing details [here](https://codemagic.io/pricing/).
+
 ## September 2019
 
 ### Codemagic CI/CD GitHub app (beta)
diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 7123df1..feb1982 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -6,7 +6,7 @@ weight: 2
 **Dart and Flutter**
 
 - Dart `2.5.0`
-- Flutter `1.9.1+hotfix.2 ($HOME/programs/flutter)`
+- Flutter `1.9.1+hotfix.4 ($HOME/programs/flutter)`
 
 **iOS tools**
 

commit f78397a2e004ed6b225a71b0c64b3eb6b32423bb
Author: helinanever <36853001+helinanever@users.noreply.github.com>
Date:   Thu Sep 26 18:07:41 2019 +0300

    GitHub app (#6)
    
    * Added info about Codemagic GitHub app
    
    * Text editing
    
    * Add info about account deletion
    
    * Add GitHub app release notes

diff --git a/content/getting-started/automatic-language-detection.md b/content/getting-started/automatic-language-detection.md
index 9e0343e..70b5d6f 100644
--- a/content/getting-started/automatic-language-detection.md
+++ b/content/getting-started/automatic-language-detection.md
@@ -1,6 +1,6 @@
 ---
 title: Automatic language detection
-weight: 7
+weight: 8
 ---
 
 Codemagic enables you to sort the list of apps detected in your repositories based on the repository language so you can display your Flutter apps only. This can be done if your apps have **Dart** set as the project language in GitHub/Bitbucket. While GitHub determines your project language automatically based on the files and directories in your repository, the project language for apps hosted on Bitbucket has to be set manually in the repository settings to benefit from this sorting option.
diff --git a/content/getting-started/codemagic-github-app.md b/content/getting-started/codemagic-github-app.md
new file mode 100644
index 0000000..e100dbb
--- /dev/null
+++ b/content/getting-started/codemagic-github-app.md
@@ -0,0 +1,50 @@
+---
+description: Configure repository access and customize your CI flow
+title: Codemagic GitHub app (beta)
+weight: 6
+---
+
+Codemagic CI/CD GitHub app is an integration with GitHub which enables you to make the most out of the two services for your CI flow. The GitHub app requires less permissions than the OAuth integration and enables you to grant access to select repositories only.
+
+## Installing Codemagic CI/CD GitHub app
+
+There are two options for installing the Codemagic GitHub app.
+
+**Option 1: Install Codemagic CI/CD on GitHub**
+
+1. Log in to your GitHub account.
+2. Open the [Codemagic CI/CD app on Marketplace](https://github.com/marketplace/codemagic-ci-cd).
+3. Scroll down and click **Install it for free**.
+4. Review your order and click **Complete order and begin installation**.
+5. Next, select the repositories to which you want to give Codemagic access and click **Install & Authorize** to finish installation.
+
+You will then be logged in and redirected to your Applications page on Codemagic so that you can start building right away. The next time you want to log in to Codemagic via the GitHub app, you can click the **Log in with GitHub App** link on the login page.
+
+You can change repository access settings in Codemagic CI/CD app on GitHub anytime by navigating to Settings > Applications > Installed GitHub Apps > Codemagic CI/CD, or by going to [https://github.com/apps/codemagic-ci-cd](https://github.com/apps/codemagic-ci-cd).
+
+**Option 2. Sign up to Codemagic using GitHub app**
+
+1. Click **Join using GitHub App** at [codemagic.io/signup](https://codemagic.io/signup). You will be authorized via GitHub without granting any access to your repositories. 
+2. In Codemagic, go to User settings > Integrations and click **Install GitHub App**. You will be redirected to GitHub to select the repositories you want to grant access to and finish the installation. **Note** that you can also proceed without installing the app. This way, you can only build apps shared with you in a team you belong to or add apps from custom sources.
+
+## Revoking access to previously shared repositories
+
+The settings you configure in Codemagic CI/CD GitHub app prevail over the GitHub OAuth integration settings.
+
+If you revoke access to previously shared repositories, you will still see all your apps and build history but won’t be able to build the apps to which Codemagic no longer has access. Such apps will be grayed out and will show up on the Applications page with the **Removed from repository** filter. Apps connected through your Bitbucket or GitLab account as well as apps added from custom sources will remain available as is.
+
+### Team apps
+
+The restrictions you configure in GitHub app apply to the repositories you share in your team on Codemagic only if you don't have the GitHub integration enabled for your team in Team settings > Team integrations.
+
+If you have enabled the GitHub integration for your team, the connected account makes use of OAuth permissions and the restrictions you configure in GitHub app do not apply.
+
+{{% notebox %}}
+Currently, Codemagic has no way of knowing whether it has access to team apps before the build is started. Due to this, team apps to which you have revoked access in the GitHub app may not appear grayed out in the UI.
+{{% /notebox %}}
+
+## Disabling Codemagic CI/CD GitHub app integration
+
+You can disable the Codemagic CI/CD GitHub app integration in Codemagic by navigating to User settings > Integrations > GitHub App and clicking **Disconnect**. This annuls all settings configured for the Codemagic app in GitHub but won't delete your buid history.
+
+The GitHub app integration is also disabled when you **uninstall** the Codemagic CI/CD app in GitHub. You can still log in to Codemagic with the GitHub app and see your build history if Codemagic CI/CD remains an **authorized GitHub app** in GitHub. Please note that unless you have other active integrations (e.g. GitHub, Bitbucket or GitLab OAuth integration), your Codemagic account will be deleted in two weeks. You can cancel account deletion by navigating to User settings > Delete account and clicking **Cancel deletion** before the two weeks are up.
\ No newline at end of file
diff --git a/content/getting-started/flutter-project-requirements.md b/content/getting-started/flutter-project-requirements.md
index 74857db..8433022 100644
--- a/content/getting-started/flutter-project-requirements.md
+++ b/content/getting-started/flutter-project-requirements.md
@@ -2,7 +2,7 @@
 description:
   Ensure your Flutter project is ready for continuous integration and continuous delivery
 title: Flutter project requirements
-weight: 8
+weight: 9
 ---
 
 To ensure that your app is ready for implementing continuous integration and continuous delivery and for automating the release process with Codemagic, please follow these guides in Flutter documentation:
diff --git a/content/getting-started/github-organization-accounts.md b/content/getting-started/github-organization-accounts.md
index d318f40..ca0f39d 100644
--- a/content/getting-started/github-organization-accounts.md
+++ b/content/getting-started/github-organization-accounts.md
@@ -1,7 +1,7 @@
 ---
 description: Grant your GitHub organization access to Codemagic CI/CD oAuth app
 title: GitHub organization accounts
-weight: 6
+weight: 7
 ---
 
 Organizations can restrict access to third-party OAuth applications. As a member, you can request that organization admins authorize the application for use in that organization.
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index d9775c5..6dbd4cf 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -3,10 +3,9 @@ description: Sign up for Codemagic CI/CD
 title: Signup
 weight: 1
 ---
+## Sign up via OAuth
 
-You can sign up with your [GitHub](https://github.com/), [GitLab](https://about.gitlab.com/) or [Bitbucket](https://bitbucket.org/) account.
-
-On signup, Codemagic asks for **read/write** permission to access your repository and create webhooks for automatic building. You will need to authorize Codemagic in order to connect your GitHub/GitLab/Bitbucket account to your Codemagic account.
+You can sign up with your [GitHub](https://github.com/), [GitLab](https://about.gitlab.com/) or [Bitbucket](https://bitbucket.org/) account via OAuth. On signup, Codemagic asks for **read/write** permission to access your repositories and create webhooks for automatic building. You will need to authorize Codemagic in order to connect your GitHub/GitLab/Bitbucket account to your Codemagic account.
 
 {{% notebox %}}
 
@@ -14,9 +13,13 @@ Please be assured that Codemagic will not store any of your source code or use y
 
 {{% /notebox %}}
 
+## Sign up via Codemagic GitHub app
+
+You can become a Codemagic user by installing the Codemagic CI/CD app on GitHub or clicking **Join using GitHub App** at [https://codemagic.io/signup](https://codemagic.io/signup). The GitHub app has several advantages over the OAuth integration as you can grant Codemagic access to select repositories and only **read** access to your code is required. For details and installation instructions, see the [Codemagic GitHub app](./codemagic-github-app) section in our documentation.
+
 ## Connecting several repository accounts
 
-You can connect several repository accounts (GitHub, GitLab, Bitbucket) with one Codemagic account.
+You can connect several repository accounts (GitHub, GitHub app, GitLab, Bitbucket) with one Codemagic account.
 
 1. Log in to Codemagic with the account you signed up.
 2. Click on your account avatar at the bottom left and open **User settings**.
diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 47340ae..664acd1 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -6,6 +6,10 @@ weight: 1
 
 ## September 2019
 
+### Codemagic CI/CD GitHub app (beta)
+
+In addition to GitHub OAuth integration, you can now use Codemagic via the GitHub app. The [Codemagic CI/CD GitHub app](https://github.com/marketplace/codemagic-ci-cd) requires less permissions than the GitHub OAuth integration and enables you to configure which repositories Codemagic can access. Read more about the benefits of Codemagic GitHub app on our [blog](https://blog.codemagic.io/codemagic-github-app/) and see our [documentation](../getting-started/codemagic-github-app) for details about the integration. 
+
 ### Testing on real devices with AWS Device Farm and Sylph
 
 We have added the option to run Flutter Driver tests on physical Android and iOS devices on AWS Device Farm. This is done thanks to integration with [Sylph](https://github.com/mmcc007/sylph) which makes it possible to configure the test run using a `sylph.yaml` file. See more details in [Testing on AWS Device Farm](../testing/aws).

commit 093f8360bb7ef1094ef19c25acf48a77f65a3115
Author: Helina Ariva <helina@nevercode.io>
Date:   Thu Sep 26 17:22:41 2019 +0300

    Update versions

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 3bb17a1..7123df1 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -12,14 +12,6 @@ weight: 2
 
 - Xcode
 
-`9.0.1 (9A1004) (/Applications/Xcode-9.app)`
-
-`9.1 (9B55) (/Applications/Xcode-9.1.app)`
-
-`9.2 (9C40b) (/Applications/Xcode-9.2.app)`
-
-`9.3.1 (9E501) (/Applications/Xcode-9.3.app)`
-
 `9.4.1 (9F2000) (/Applications/Xcode-9.4.app)`
 
 `10.0 (10A255) (/Applications/Xcode-10.app)`
@@ -32,6 +24,8 @@ weight: 2
 
 `11.0 (11A420a) (/Applications/Xcode-11.app)`
 
+`11.1 (11A1027) (/Applications/Xcode-11.1.app)`
+
 
 - CocoaPods `1.7.5`
 
@@ -48,9 +42,8 @@ weight: 2
 - homebrew `2.1.11`
 - python `2.7.16`
 - python3 `3.7.4`
-- node `10.16.3`
+- node `12.10.0`
 - npm `6.11.3`
 - yarn `1.17.3`
 - gem `2.5.2.2`
-- ruby `2.3.6p384`
-
+- ruby `2.3.6p384`
\ No newline at end of file

commit 5b123050315458fa65776bdd3f24bdd75aafa15f
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Sep 20 11:59:47 2019 +0300

    Updated Flutter version

diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
index 4178eab..65214b4 100644
--- a/content/troubleshooting/common-issues.md
+++ b/content/troubleshooting/common-issues.md
@@ -20,7 +20,7 @@ When building for iOS, the build gets stuck after showing `Xcode build done` in
     Running Xcode build...                                          
     Xcode build done.                                           203.6s
 
-**Flutter**: 1.7.8+hotfix.3, 1.7.8+hotfix.4
+**Flutter**: 1.7.8+hotfix.3, 1.7.8+hotfix.4, 1.9.1+hotfix.2
 
 **Xcode**: N/A
 

commit 5875eefc6a45115677ebed3cfc230ff4983cde67
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Sep 20 11:58:30 2019 +0300

    Added AWS Device Farm and Sylph

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index 3979fb8..47340ae 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -6,6 +6,10 @@ weight: 1
 
 ## September 2019
 
+### Testing on real devices with AWS Device Farm and Sylph
+
+We have added the option to run Flutter Driver tests on physical Android and iOS devices on AWS Device Farm. This is done thanks to integration with [Sylph](https://github.com/mmcc007/sylph) which makes it possible to configure the test run using a `sylph.yaml` file. See more details in [Testing on AWS Device Farm](../testing/aws).
+
 ### Support for macOS and Linux apps
 
 Building Flutter desktop apps for macOS and Linux is now supported on Codemagic, see instructions [here](../building/building-for-desktop). You can also watch a [demo](https://blog.codemagic.io/codemagic-ci-cd-releases-support-for-flutter-desktop/) of building a desktop app on Codemagic and installing and running it on macOS.

commit e264ea24af87316c7943a9adb8b2f8ba6da08b8c
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Sep 20 11:23:22 2019 +0300

    Added a note about iOS builds

diff --git a/content/testing/aws.md b/content/testing/aws.md
index 647f249..6ba9656 100644
--- a/content/testing/aws.md
+++ b/content/testing/aws.md
@@ -28,6 +28,8 @@ We strongly advise you to set up an IAM user with a policy to access Device Farm
 4. Enter your **AWS access key ID** and **AWS secret access Key** to the respective fields.
 5. Click **Save** to finish the setup.
 
+For testing on **iOS devices**, additional configuration is needed. Follow the instructions in the [iOS builds](https://github.com/mmcc007/sylph#ios-builds) section in Sylph readme and add the required environment variables to Codemagic in **App settings** > **Environment variables**.
+
 During the build, Codemagic searches the repository for a `sylph.yaml` file to configure the AWS Device Farm test run and generates a default configuration file if no existing configuration is found. By default, we run the tests in your `project_root/test_driver` folder on Google Pixel 2 (OS 8.0.0) regardless of the build platforms you have selected. 
 
 ## Test logs

commit 223d171dc5b2b6bd9e1e67b150a7fe47bc53f9b9
Author: Priit Lätt <priit@nevercode.io>
Date:   Thu Sep 19 17:43:23 2019 +0300

    Update versions.md (#4)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index cd8439a..3bb17a1 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -12,25 +12,26 @@ weight: 2
 
 - Xcode
 
-`9.0.1   (/Applications/Xcode-9.app)`
+`9.0.1 (9A1004) (/Applications/Xcode-9.app)`
 
-`9.1     (/Applications/Xcode-9.1.app)`
+`9.1 (9B55) (/Applications/Xcode-9.1.app)`
 
-`9.2     (/Applications/Xcode-9.2.app)`
+`9.2 (9C40b) (/Applications/Xcode-9.2.app)`
 
-`9.3.1   (/Applications/Xcode-9.3.app)`
+`9.3.1 (9E501) (/Applications/Xcode-9.3.app)`
 
-`9.4.1   (/Applications/Xcode-9.4.app)`
+`9.4.1 (9F2000) (/Applications/Xcode-9.4.app)`
 
-`10.0    (/Applications/Xcode-10.app)`
+`10.0 (10A255) (/Applications/Xcode-10.app)`
 
-`10.1    (/Applications/Xcode-10.1.app)`
+`10.1 (10B61) (/Applications/Xcode-10.1.app)`
 
-`10.2.1  (/Applications/Xcode-10.2.app)`
+`10.2.1 (10E1001) (/Applications/Xcode-10.2.app)`
 
-`10.3    (/Applications/Xcode-10.3.app)`
+`10.3 (10G8) (/Applications/Xcode-10.3.app)`
+
+`11.0 (11A420a) (/Applications/Xcode-11.app)`
 
-`11.0    (/Applications/Xcode-11.app)`
 
 - CocoaPods `1.7.5`
 
@@ -40,14 +41,16 @@ weight: 2
 
 **Other tools**
 
-- wget
-- curl
-- ssh
-- git
-- homebrew
-- python `2.7.16`, `3.7.4`
-- node `v10.16.0`
-- npm `6.10.2`
+- wget `1.20.3`
+- curl `7.54.0`
+- ssh `7.9p1`
+- git `2.23.0`
+- homebrew `2.1.11`
+- python `2.7.16`
+- python3 `3.7.4`
+- node `10.16.3`
+- npm `6.11.3`
 - yarn `1.17.3`
 - gem `2.5.2.2`
-- ruby `2.3.6p384`
\ No newline at end of file
+- ruby `2.3.6p384`
+

commit 20dfd1e52771d422f3aa5b699daccf729f8097c5
Author: Helina Ariva <helina@nevercode.io>
Date:   Thu Sep 19 13:16:49 2019 +0300

    Text editing

diff --git a/content/testing/aws.md b/content/testing/aws.md
index 2bbd5b5..647f249 100644
--- a/content/testing/aws.md
+++ b/content/testing/aws.md
@@ -20,7 +20,7 @@ Using AWS Device Farm requires having an AWS account. You are billed separately
 We strongly advise you to set up an IAM user with a policy to access Device Farm and no other AWS permissions. Don't use your AWS root account credentials to link Codemagic with Device Farm.
 {{% /notebox %}}
 
-## AWS Device Farm Setup on Codemagic
+## AWS Device Farm setup on Codemagic
 
 1. Navigate to **App settings** > **Test**.
 2. At the top of the section, select **Enable Flutter Driver tests** to enable running integration tests for this workflow.

commit 43160818b7f520e1a1549a3ba906bf3ce149ee82
Author: Helina Ariva <helina@nevercode.io>
Date:   Thu Sep 19 10:17:22 2019 +0300

    Text editing

diff --git a/content/testing/aws.md b/content/testing/aws.md
index 3298eaf..2bbd5b5 100644
--- a/content/testing/aws.md
+++ b/content/testing/aws.md
@@ -5,7 +5,7 @@ title: Testing on AWS Device Farm
 weight: 5
 ---
 
-You can run Flutter integration tests on physical Android and iOS devices on [AWS Device Farm](https://aws.amazon.com/device-farm/) thanks to our integration with [Sylph](https://github.com/mmcc007/sylph). 
+You can run Flutter integration tests on physical Android and iOS devices on [AWS Device Farm](https://aws.amazon.com/device-farm/) thanks to the integration with [Sylph](https://github.com/mmcc007/sylph). 
 
 {{% notebox %}}
 Using AWS Device Farm requires having an AWS account. You are billed separately by AWS for device usage. See the AWS Device Farm [pricing page](https://aws.amazon.com/device-farm/pricing/) for more information.

commit 2ce369a644ac0d84d7f3888d17afde965e0ce307
Author: Helina Ariva <helina@nevercode.io>
Date:   Thu Sep 19 10:10:54 2019 +0300

    Added information about AWD Device Farm

diff --git a/content/testing/aws.md b/content/testing/aws.md
new file mode 100644
index 0000000..3298eaf
--- /dev/null
+++ b/content/testing/aws.md
@@ -0,0 +1,44 @@
+---
+description:
+  Run Flutter Driver tests on physical Android and iOS devices.
+title: Testing on AWS Device Farm
+weight: 5
+---
+
+You can run Flutter integration tests on physical Android and iOS devices on [AWS Device Farm](https://aws.amazon.com/device-farm/) thanks to our integration with [Sylph](https://github.com/mmcc007/sylph). 
+
+{{% notebox %}}
+Using AWS Device Farm requires having an AWS account. You are billed separately by AWS for device usage. See the AWS Device Farm [pricing page](https://aws.amazon.com/device-farm/pricing/) for more information.
+{{% /notebox %}}
+
+## Requirements
+
+* An IAM user with Device Farm permissions is required. Follow the instructions outlined in the [setup document](https://docs.aws.amazon.com/devicefarm/latest/developerguide/setting-up.html) to create an IAM user with access to Device Farm and make note of the **access key ID** and **secret access key**.
+* `sylph.yaml` file in the repository for AWS Device Farm configuration (optional). The `sylph.yaml` template is available on [GitHub](https://github.com/mmcc007/sylph/blob/master/example/sylph.yaml).
+
+{{% notebox %}}
+We strongly advise you to set up an IAM user with a policy to access Device Farm and no other AWS permissions. Don't use your AWS root account credentials to link Codemagic with Device Farm.
+{{% /notebox %}}
+
+## AWS Device Farm Setup on Codemagic
+
+1. Navigate to **App settings** > **Test**.
+2. At the top of the section, select **Enable Flutter Driver tests** to enable running integration tests for this workflow.
+3. Select to run Flutter Driver tests on **AWS Device Farm**. 
+4. Enter your **AWS access key ID** and **AWS secret access Key** to the respective fields.
+5. Click **Save** to finish the setup.
+
+During the build, Codemagic searches the repository for a `sylph.yaml` file to configure the AWS Device Farm test run and generates a default configuration file if no existing configuration is found. By default, we run the tests in your `project_root/test_driver` folder on Google Pixel 2 (OS 8.0.0) regardless of the build platforms you have selected. 
+
+## Test logs
+
+After the test run, you will see an overview of how many tests failed, passed or were skipped on the **Results** tab as well as a detailed test log containing information about used device minutes on the **Log** tab.
+
+{{< figure size="medium" src="/uploads/aws_log.png" caption="" >}}
+
+
+
+
+
+
+
diff --git a/content/testing/beta-testing-with-testmagic.md b/content/testing/beta-testing-with-testmagic.md
index 96d008e..435f688 100644
--- a/content/testing/beta-testing-with-testmagic.md
+++ b/content/testing/beta-testing-with-testmagic.md
@@ -1,7 +1,7 @@
 ---
 description: View, test and distribute your Codemagic builds with Testmagic
 title: Beta testing with Testmagic
-weight: 5
+weight: 6
 ---
 
 Codemagic is seamlessly integrated with [Testmagic](https://testmagic.io/), a simple mobile app for viewing, testing and distributing your Codemagic builds. You can download it from [Google Play](https://play.google.com/store/apps/details?id=io.nevercode.testmagic&hl=en) for Android and request the app download link for iOS via the #testmagic channel in our [Slack community](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc).
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index 81e81de..d4bf6e6 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -26,27 +26,19 @@ If your Flutter project is in a subdirectory of the repository, Codemagic cannot
 
 In App settings > Test, you will see the **Flutter test target** and **Flutter drive target** fields displayed if the respective tests are detected. You can specify an exact target to run a specific test.
 
-![](../uploads/2019/04/doc_test_target.PNG)
+### Running Flutter Driver tests
 
-### Selecting simulator or emulator
-
-By default, Codemagic runs your Flutter Driver tests on iOS simulator. You can also run Flutter Driver tests on Android emulator by selecting the respective option in the UI.
-
-![](../uploads/2019/04/doc_emulator_simulator.PNG)
+There are several options for running integration tests during the build. You can select one option per workflow:
+* iOS simulator (selected by default)
+* Android emulator
+* [AWS Device Farm](./aws) — enables to run tests on physical Android and iOS devices. Requires an AWS account and additional setup.
 
 {{% notebox %}}
 
-**Tip**: You can set up separate [workflows](https://4jqkxhrybmvg1a.preview.forestry.io/docs/getting-started/creating-workflows/ 'Creating workflows') to run tests both on iOS and Android.
+**Tip**: You can set up separate [workflows](../getting-started/creating-workflows/) to run tests both on iOS and Android.
 
 {{% /notebox %}}
 
-### Enabling or disabling tests
-
-You can enable or disable running tests by checking or unchecking the respective option in App settings > Test:
-
-- Enable Flutter test
-- Enable Flutter Driver
-
 ### Stop build if tests fail
 
-At the bottom of the Test section, you can select the **Stop build if tests fail** option to stop the build immediately when any of the tests fail. As the tests are run before building the iOS or Android app, you can get the result of the build faster. Builds stopped when tests fail will be shown as "failed".
+Selecting the **Stop build if tests fail** option will stop the build immediately when any of the tests fail. As the tests are run before building the app for selected platforms, you can get the result of the build faster. Such builds will have the status "failed".
diff --git a/content/testing/running-tests-only.md b/content/testing/running-tests-only.md
index f3f0e82..e346561 100644
--- a/content/testing/running-tests-only.md
+++ b/content/testing/running-tests-only.md
@@ -4,8 +4,6 @@ title: Running tests only
 weight: 4
 ---
 
-You can have a workflow to run tests without building the app. In App settings > Build > Build for platforms, select **Run tests only**. Codemagic will then build the workflow until the testing step and skip building for Android or iOS.
-
-![](../uploads/2019/05/doc_run_tests_only_new.PNG)
+You can have a workflow to run tests without building the app. In App settings > Build > Build for platforms, select **Run tests only**. Codemagic will then build the workflow until the testing step and skip building the app.
 
 If tests fail, the status of the build will be "failed" and you'll receive an email about failing tests. If you have publishing to Slack configured, you'll receive notifications on build status updates.
diff --git a/content/uploads/aws_log.png b/content/uploads/aws_log.png
new file mode 100644
index 0000000..2202718
Binary files /dev/null and b/content/uploads/aws_log.png differ

commit 6342cf2a331c340b59343930fd8cea5aae09a254
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Sep 18 09:56:45 2019 +0300

    Improved the note about desktop shells

diff --git a/content/building/building-for-desktop.md b/content/building/building-for-desktop.md
index 0665227..15e0015 100644
--- a/content/building/building-for-desktop.md
+++ b/content/building/building-for-desktop.md
@@ -4,7 +4,11 @@ title: Building for desktop
 weight: 6
 ---
 
-You can use Codemagic to build Flutter desktop apps for macOS and Linux. Building Windows apps is not yet supported. Read more about Flutter's desktop support in Flutter's wiki about [desktop shells](https://github.com/flutter/flutter/wiki/Desktop-shells).
+You can use Codemagic to build Flutter desktop apps for macOS and Linux. Building Windows apps is not yet supported. 
+
+{{% notebox %}}
+Read more about Flutter's desktop support and the required settings for enabling it in Flutter's wiki about [desktop shells](https://github.com/flutter/flutter/wiki/Desktop-shells).
+{{% /notebox %}}
 
 ## Project structure requirements
 

commit e7ce2ee95b4a4dbae6d003a4f098c325b2c4e755
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Sep 13 11:02:12 2019 +0300

    Web was migrated to main Flutter repo

diff --git a/content/building/building-for-desktop.md b/content/building/building-for-desktop.md
index 5256207..0665227 100644
--- a/content/building/building-for-desktop.md
+++ b/content/building/building-for-desktop.md
@@ -16,7 +16,7 @@ Codemagic can detect your Flutter desktop project if it meets the following cond
 ## Build configuration
 
 1. Navigate to **App settings > Build**.
-2. In **Flutter version** dropdown, select **channel Master** as recommended by Flutter. 
+2. Select which Flutter version to use in the **Flutter version** dropdown. Flutter for desktop is available in **channel Master**. 
 3. Under **Build for platforms**, select the platforms for which to build. You can select both **macOS** and **Linux** or only one of them.
 4. Select the build mode.
 5. Click **Save** to finish build configuration. You are now ready to run the build.
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index 6ed1a98..357f6bc 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -1,5 +1,5 @@
 ---
-description: See how to build a Flutter web app with Codemagic.
+description: Build a Flutter web app with Codemagic.
 title: Building for the web
 weight: 5
 ---
@@ -11,24 +11,16 @@ You can build, test and publish Flutter web apps with Codemagic.
 Codemagic can detect your Flutter web project if it meets the following conditions:
 
 - The project has a `web` folder
-- There’s a `flutter_web` dependency in `pubspec.yaml`
 
 ## Build configuration
 
-If your project has the proper structure and configuration of a web project, Codemagic will automatically build the web app when you click **Run your first build**. During the installing dependencies step, we run `flutter packages pub global activate webdev` which activates the `webdev` package necessary for building the release version of Flutter web app. If you want to use a different package, you can set it up in a custom pre-build script.
-
-You can review the build settings in **App settings > Build**.
-
-![](../uploads/2019/05/build_settings.PNG)
-
-The following is necessary to build the web app:
-
-1. Select a **Flutter version**. Flutter for web is supported starting from Flutter v1.5.4. If you're actively developing Flutter for web, you may prefer selecting one of the unstable channels.
-2. Select **Web** under Build for platforms. If your project is detected correctly as a web project, you'll already see it selected in the UI.
-3. Specify the command for building the app under **Build arguments**. By default, Codemagic is configured to run the `flutter packages pub global run webdev build` command, but you can enter a different command to be run.
-
-When you make any changes to the default settings, make sure to hit **Save** before you start the build for the changes to take effect.
+1. Navigate to **App settings > Build**.
+2. In the **Flutter version** dropdown, select which Flutter version to use. Flutter for web is supported starting from Flutter v1.5.4.
+3. Under **Build for platforms**, select **Web**.
+4. Select the build mode.
+5. Under **Build arguments**, you will see the default build command Codemagic runs to build the app, but you can enter a different command.
+6. Click **Save** to finish build configuration. You are now ready to run the build.
 
 ## Build artifacts
 
-At the end of a successful build, Codemagic generates a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](https://docs.codemagic.io/publishing/publishing-to-codemagic-static-pages/) or to third-party hosting sites using custom scripts.
+At the end of a successful build, Codemagic generates a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](https://docs.codemagic.io/publishing/publishing-to-codemagic-static-pages/). You can also use custom script to publish to third-party hosting sites.
\ No newline at end of file

commit b80598f2bb53890bfbcdcbadb018152b1081495d
Author: Helina Ariva <helina@nevercode.io>
Date:   Thu Sep 12 09:47:24 2019 +0300

    Fix errors in link

diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index b494164..3979fb8 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -8,7 +8,7 @@ weight: 1
 
 ### Support for macOS and Linux apps
 
-Building Flutter desktop apps for macOS and Linux is now supported on Codemagic, see instructions [here](../building/building-for-the-desktop). You can also watch a [demo](https://blog.codemagic.io/codemagic-ci-cd-releases-support-for-flutter-desktop/) of building a desktop app on Codemagic and installing and running it on macOS.
+Building Flutter desktop apps for macOS and Linux is now supported on Codemagic, see instructions [here](../building/building-for-desktop). You can also watch a [demo](https://blog.codemagic.io/codemagic-ci-cd-releases-support-for-flutter-desktop/) of building a desktop app on Codemagic and installing and running it on macOS.
 
 ## August 2019
 

commit 61e26d7613e3e98152a07f47db2a6a72f21fbab0
Author: Helina Ariva <helina@nevercode.io>
Date:   Thu Sep 12 09:36:05 2019 +0300

    Added information about desktop support

diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 7237adf..0227452 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,6 +1,6 @@
 ---
 title: Build versioning
-weight: 7
+weight: 8
 ---
 
 If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using **build arguments** and the `BUILD_NUMBER` environment variable.
diff --git a/content/building/building-for-desktop.md b/content/building/building-for-desktop.md
new file mode 100644
index 0000000..5256207
--- /dev/null
+++ b/content/building/building-for-desktop.md
@@ -0,0 +1,31 @@
+---
+description: Build a Flutter app for desktop with Codemagic.
+title: Building for desktop
+weight: 6
+---
+
+You can use Codemagic to build Flutter desktop apps for macOS and Linux. Building Windows apps is not yet supported. Read more about Flutter's desktop support in Flutter's wiki about [desktop shells](https://github.com/flutter/flutter/wiki/Desktop-shells).
+
+## Project structure requirements
+
+Codemagic can detect your Flutter desktop project if it meets the following conditions:
+
+- The project contains a `macos` folder for the macOS application
+- The project contains a `linux` folder for the Linux application
+
+## Build configuration
+
+1. Navigate to **App settings > Build**.
+2. In **Flutter version** dropdown, select **channel Master** as recommended by Flutter. 
+3. Under **Build for platforms**, select the platforms for which to build. You can select both **macOS** and **Linux** or only one of them.
+4. Select the build mode.
+5. Click **Save** to finish build configuration. You are now ready to run the build.
+
+{{% notebox %}}
+* Note that if your project has any tests, you can enable them in **App settings > Test**.
+* Code signing for desktop apps is not yet supported.
+{{% /notebox %}}
+
+## Build artifacts
+
+At the end of a successful build, Codemagic generates a downloadable `.zip` file for each desktop platform. The application can be installed on your machine, but since it is built without code signing, you may have to allow installating applications from unidentified developers.
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 4644979..b0e836c 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -1,7 +1,7 @@
 ---
 description: Store your dependencies on Codemagic for a faster build time.
 title: Dependency caching
-weight: 6
+weight: 7
 ---
 
 You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index ad55d03..b494164 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -4,6 +4,12 @@ title: Release notes
 weight: 1
 ---
 
+## September 2019
+
+### Support for macOS and Linux apps
+
+Building Flutter desktop apps for macOS and Linux is now supported on Codemagic, see instructions [here](../building/building-for-the-desktop). You can also watch a [demo](https://blog.codemagic.io/codemagic-ci-cd-releases-support-for-flutter-desktop/) of building a desktop app on Codemagic and installing and running it on macOS.
+
 ## August 2019
 
 ### Codemagic community documentation
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index d3ad391..81e81de 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -42,7 +42,7 @@ By default, Codemagic runs your Flutter Driver tests on iOS simulator. You can a
 
 ### Enabling or disabling tests
 
-By default, testing is enabled on Codemagic. You can enable or disable running tests by checking or unchecking the respective option in App settings > Test:
+You can enable or disable running tests by checking or unchecking the respective option in App settings > Test:
 
 - Enable Flutter test
 - Enable Flutter Driver
diff --git a/readme.md b/readme.md
index 446ed74..561cebe 100644
--- a/readme.md
+++ b/readme.md
@@ -4,7 +4,7 @@ Welcome to the [Codemagic](https://codemagic.io/start/) public documentation rep
 
 ## Getting started
 
-To contribute to Codemagic documentation, fork the repository, make your changes and start a pull request. All pull requests will be reviewed by the Codemagic team. 
+To contribute, fork the repository, make your changes and start a pull request. All pull requests will be reviewed by the Codemagic team. 
 
 ### Common issues page
 

commit 539509a4579c7868105e0f9243cd2adf9f32e875
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Sep 11 10:20:50 2019 +0300

    Fix formatting

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 9cc58ee..cd8439a 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -32,7 +32,7 @@ weight: 2
 
 `11.0    (/Applications/Xcode-11.app)`
 
-- CocoaPods (1.7.5)
+- CocoaPods `1.7.5`
 
 **Android tools**
 

commit 31645481c3125800f1b87b3c04890a96f46edeab
Author: madispp <madis@nevercode.io>
Date:   Tue Sep 10 17:31:32 2019 +0300

    update software versions (#3)

diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 20a76cf..9cc58ee 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -5,8 +5,8 @@ weight: 2
 ---
 **Dart and Flutter**
 
-- Dart `2.4.0`
-- Flutter `1.7.8+hotfix.4 ($HOME/programs/flutter)`
+- Dart `2.5.0`
+- Flutter `1.9.1+hotfix.2 ($HOME/programs/flutter)`
 
 **iOS tools**
 

commit 3fdc5fab009b4f13173bd68a3a83dfc8138273fe
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Aug 28 10:16:04 2019 +0300

    Updated Slack workspace link

diff --git a/content/_index.md b/content/_index.md
index d146cdc..c9ad722 100644
--- a/content/_index.md
+++ b/content/_index.md
@@ -19,7 +19,7 @@ To contribute, fork the repository, make your changes and start a pull request.
 
 ## Codemagic Slack workspace
 
-If you have problems with setting up Codemagic CI/CD or want to talk to fellow Flutter developers, you are more than welcome to join our [Slack workspace](http://bit.ly/cm-slack 'Slack community for CI/CD and Flutter'). 
+If you have problems with setting up Codemagic CI/CD or want to talk to fellow Flutter developers, you are more than welcome to join our [Slack workspace](https://join.slack.com/t/codemagicio/shared_invite/enQtNzQyODExMTQyMDcwLTQ2NTJjODE3NTA2Njg3Y2ViYmZiNGE1MWMyYWNjY2I0MzRmM2M2YmZhOTE1YTc5YjNkMmI0MzQzZWU0MzA4OGM 'Slack community for CI/CD and Flutter'). 
 
 ## Codemagic status page
 
diff --git a/content/troubleshooting/codemagic-status-page.md b/content/troubleshooting/codemagic-status-page.md
index 723c7d4..58b4e80 100644
--- a/content/troubleshooting/codemagic-status-page.md
+++ b/content/troubleshooting/codemagic-status-page.md
@@ -4,6 +4,6 @@ title: Codemagic status page
 weight: 3
 ---
 
-We post information about the service status, including maintenances and service disruptions, on Twitter [@CodemagicStatus](https://twitter.com/CodemagicStatus) as well as share information in our [Slack community](http://bit.ly/cm-slack).
+We post information about the service status, including maintenances and service disruptions, on Twitter [@CodemagicStatus](https://twitter.com/CodemagicStatus) as well as share information in our [Slack community](https://join.slack.com/t/codemagicio/shared_invite/enQtNzQyODExMTQyMDcwLTQ2NTJjODE3NTA2Njg3Y2ViYmZiNGE1MWMyYWNjY2I0MzRmM2M2YmZhOTE1YTc5YjNkMmI0MzQzZWU0MzA4OGM).
 
 Please use these channels to report issues with the availability of the service.

commit 1af62dd041ece46d6aec7c7218d1353fe8f71f86
Author: Mikhail Tokarev <mikhail-tokarev@users.noreply.github.com>
Date:   Tue Aug 27 15:52:06 2019 +0300

    added landing page link

diff --git a/readme.md b/readme.md
index 2a1f73a..446ed74 100644
--- a/readme.md
+++ b/readme.md
@@ -1,6 +1,6 @@
 # Codemagic community documentation
 
-Welcome to the Codemagic public documentation repository. As a Codemagic user, you can contribute to our documentation to improve it. 
+Welcome to the [Codemagic](https://codemagic.io/start/) public documentation repository. As a Codemagic user, you can contribute to our documentation to improve it. 
 
 ## Getting started
 

commit 77c6ac383c7faea19c4f510c07f8a7a6565f6498
Merge: 9fe20b6 ba1bbac
Author: Helina Ariva <helina@nevercode.io>
Date:   Mon Aug 26 23:37:44 2019 +0300

    Merge branch 'community_docs'

commit ba1bbac58104ab937d2751fb862fb0af334f76f1
Author: Helina Ariva <helina@nevercode.io>
Date:   Mon Aug 26 23:23:35 2019 +0300

    Content revision

diff --git a/content/_index.md b/content/_index.md
index 2b57fd1..d146cdc 100644
--- a/content/_index.md
+++ b/content/_index.md
@@ -15,7 +15,7 @@ There are also step-by-step guides on various topics available on our [blog](htt
 
 As a Codemagic user, you can contribute to our documentation to improve it. Our documentation is available in a public repository on [GitHub](https://github.com/codemagic-ci-cd/codemagic-docs).
 
-To make a contribution, fork the repository, make your changes and start a pull request. All pull requests will be reviewed by the Codemagic team. Read more from the repository's [readme](https://github.com/codemagic-ci-cd/codemagic-docs/blob/master/readme.md).
+To contribute, fork the repository, make your changes and start a pull request. All pull requests will be reviewed by the Codemagic team. Read more from the repository's [readme](https://github.com/codemagic-ci-cd/codemagic-docs/blob/master/readme.md).
 
 ## Codemagic Slack workspace
 
@@ -23,4 +23,4 @@ If you have problems with setting up Codemagic CI/CD or want to talk to fellow F
 
 ## Codemagic status page
 
-We post information about maintenances and known issues with the service on our [status page](https://twitter.com/CodemagicStatus).
\ No newline at end of file
+We post information about maintenances and issues with the service on our [status page](https://twitter.com/CodemagicStatus).
\ No newline at end of file
diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
index a52336a..ad55d03 100644
--- a/content/releases-and-versions/release-notes.md
+++ b/content/releases-and-versions/release-notes.md
@@ -8,12 +8,16 @@ weight: 1
 
 ### Codemagic community documentation
 
-We made Codemagic documentation public! Codemagic users are welcome to contribute on [GitHub](https://github.com/codemagic-ci-cd/codemagic-docs/).
+We made Codemagic documentation public! Codemagic users are now welcome to contribute on [GitHub](https://github.com/codemagic-ci-cd/codemagic-docs/).
 
 The improved documentation site includes:
 
-* [Release notes]() for an overview of latest Codemagic feature releases
+* [Release notes](./release-notes) for an overview of latest Codemagic feature releases
 
-* [Common issues]() together with solutions to overcome them
+* [Common issues](../troubleshooting/common-issues) together with solutions to overcome them
 
-* [Software and versions]() page containing a list of software that is available out-of-the-box
\ No newline at end of file
+* [Software and versions](./versions) page containing a list of software that is available out-of-the-box
+
+### Automatic builds on tag creation -- GitLab and Bitbucket
+
+In addition to GitHub apps, we now support automatic builds on tag creation also for GitLab and Bitbucket apps. Whenever you create a tag via UI or using command line, Codemagic will automatically pick up and build the tagged commit. Read more about it [here](../building/automatic-build-triggering/#build-triggers).
\ No newline at end of file
diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
index 1b934e7..20a76cf 100644
--- a/content/releases-and-versions/versions.md
+++ b/content/releases-and-versions/versions.md
@@ -6,7 +6,7 @@ weight: 2
 **Dart and Flutter**
 
 - Dart `2.4.0`
-- Flutter `$HOME/programs/flutter`, `1.7.8+hotfix.4`
+- Flutter `1.7.8+hotfix.4 ($HOME/programs/flutter)`
 
 **iOS tools**
 
@@ -38,16 +38,16 @@ weight: 2
 
 - Android tools `$HOME/programs/android-sdk-macosx`
 
-**Other applications**
-
-- Wget
-- Curl
-- SSH
-- Git
-- Homebrew
-- Python `2.7.16`, `3.7.4`
-- Node `v10.16.0`
-- Npm `6.10.2`
-- Yarn `1.17.3`
-- Gem `2.5.2.2`
-- Ruby `2.3.6p384`
\ No newline at end of file
+**Other tools**
+
+- wget
+- curl
+- ssh
+- git
+- homebrew
+- python `2.7.16`, `3.7.4`
+- node `v10.16.0`
+- npm `6.10.2`
+- yarn `1.17.3`
+- gem `2.5.2.2`
+- ruby `2.3.6p384`
\ No newline at end of file

commit 9fe20b636b07a389531443261f32dc7cac4b58d3
Merge: e1d1ec7 9188e67
Author: Helina Ariva <helina@nevercode.io>
Date:   Sat Aug 24 02:25:39 2019 +0300

    Merge branch 'master' of https://github.com/codemagic-ci-cd/codemagic-docs

commit e1d1ec73510e275bd4e4c82217f51c9418988eb1
Author: Helina Ariva <helina@nevercode.io>
Date:   Sat Aug 24 02:18:21 2019 +0300

    Page about GitHub organization accounts

diff --git a/content/getting-started/automatic-language-detection.md b/content/getting-started/automatic-language-detection.md
index 7c64fe2..9e0343e 100644
--- a/content/getting-started/automatic-language-detection.md
+++ b/content/getting-started/automatic-language-detection.md
@@ -1,6 +1,6 @@
 ---
 title: Automatic language detection
-weight: 6
+weight: 7
 ---
 
 Codemagic enables you to sort the list of apps detected in your repositories based on the repository language so you can display your Flutter apps only. This can be done if your apps have **Dart** set as the project language in GitHub/Bitbucket. While GitHub determines your project language automatically based on the files and directories in your repository, the project language for apps hosted on Bitbucket has to be set manually in the repository settings to benefit from this sorting option.
diff --git a/content/getting-started/build-artifacts.md b/content/getting-started/build-artifacts.md
deleted file mode 100644
index f27db05..0000000
--- a/content/getting-started/build-artifacts.md
+++ /dev/null
@@ -1,13 +0,0 @@
----
-description: What kind of artifacts are generated for Flutter apps on Codemagic CI/CD
-draft: true
-title: Build artifacts
-weight: 3
----
-
-With every build, Codemagic creates the relevant build artifacts that are available for download in the app and can be also published to **email**, **Slack** and **Google Play Store** / **App Store Connect (TestFlight)**. The list of artifacts may vary depending on several factors, such as the chosen platform(s) and build mode, whether code signing was enabled, if there were tests present, and so on.
-
-|                                           | <b>Android</b>               | <b>iOS</b>                                                          |
-| ----------------------------------------- | ---------------------------- | ------------------------------------------------------------------- |
-| <b>Without code signing (debug mode)</b>: | app.apk <br> app-debug.apk   | Runner.app                                                          |
-| <b>With code signing (release mode)</b>:  | app.apk <br> app-release.apk | app_name.ipa<br>Runner.app<br>Runner.app.dSYM.zip<br>xcodebuild.log |
diff --git a/content/getting-started/flutter-project-requirements.md b/content/getting-started/flutter-project-requirements.md
index 70f120a..74857db 100644
--- a/content/getting-started/flutter-project-requirements.md
+++ b/content/getting-started/flutter-project-requirements.md
@@ -1,12 +1,11 @@
 ---
 description:
-  Make sure your Flutter project is ready for continuous integration (CI)
-  and continuous delivery (CD)
+  Ensure your Flutter project is ready for continuous integration and continuous delivery
 title: Flutter project requirements
-weight: 7
+weight: 8
 ---
 
-To make sure that your app is ready for implementing continuous integration and continuous delivery and for automating the release process with Codemagic, please make sure your project meets the requirements outlined in Flutter documentation:
+To ensure that your app is ready for implementing continuous integration and continuous delivery and for automating the release process with Codemagic, please follow these guides in Flutter documentation:
 
-- [Preparing an Android app for release](https://flutter.io/docs/deployment/android)
-- [Preparing an iOS app for release](https://flutter.io/docs/deployment/ios)
+- [Preparing an Android app for release](https://flutter.dev/docs/deployment/android)
+- [Preparing an iOS app for release](https://flutter.dev/docs/deployment/ios)
diff --git a/content/getting-started/github-organization-accounts.md b/content/getting-started/github-organization-accounts.md
new file mode 100644
index 0000000..d318f40
--- /dev/null
+++ b/content/getting-started/github-organization-accounts.md
@@ -0,0 +1,14 @@
+---
+description: Grant your GitHub organization access to Codemagic CI/CD oAuth app
+title: GitHub organization accounts
+weight: 6
+---
+
+Organizations can restrict access to third-party OAuth applications. As a member, you can request that organization admins authorize the application for use in that organization.
+
+1. In your GItHub settings, navigate to **Organization settings** > **Third-party access**.
+2. If you don't see Codemagic listed there, go to **Personal settings** > **Applications** > **Authorized OAuth Apps**.
+3. Click on the Codemagic app.
+4. Under **Organization access**, click **Request access** > **Request approval from owners**.
+
+Read more about [GitHub organizations and OAuth app restrictions](https://help.github.com/en/articles/authorizing-oauth-apps#oauth-apps-and-organizations).

commit f7e18df8ab9e1c7572ed50a58354a16016783bc6
Author: Helina Ariva <helina@nevercode.io>
Date:   Sat Aug 24 00:44:39 2019 +0300

    First draft of community docs

diff --git a/config.yml b/config.yml
index 7f24bd7..16c9f8d 100644
--- a/config.yml
+++ b/config.yml
@@ -47,6 +47,9 @@ menu:
     - identifier: troubleshooting
       name: Troubleshooting
       weight: 7
+    - identifier: releases-and-versions
+      name: Releases and versions
+      weight: 8
 
 mediaTypes:
   video/mp4:
diff --git a/content/_index.md b/content/_index.md
index 61c9fe6..2b57fd1 100644
--- a/content/_index.md
+++ b/content/_index.md
@@ -5,10 +5,22 @@ description:
 title: Codemagic Documentation
 ---
 
-Welcome to the Codemagic documentation site!
+Welcome to the Codemagic community documentation!
 
-Here you'll find some essential information for setting up CI/CD for your Flutter app with [Codemagic](https://codemagic.io/). You'll also find step-by-step guides on various topics on our [blog](https://blog.codemagic.io/categories/tutorials/ 'Codemagic blog - Tutorials').
+Here you'll find some essential information for setting up continuous integration and continuous delivery for your Flutter app with [Codemagic](https://codemagic.io/). 
 
-The content of this site is constantly evolving. We're continuously updating it to provide more details and include new features.
+There are also step-by-step guides on various topics available on our [blog](https://blog.codemagic.io/categories/tutorials/ 'Codemagic blog - Tutorials').
 
-You are more than welcome to join our [Slack workspace](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc 'Slack community for CI/CD and Flutter') to reach out to us and meet fellow Flutter enthusiasts.
+## Powered by the community
+
+As a Codemagic user, you can contribute to our documentation to improve it. Our documentation is available in a public repository on [GitHub](https://github.com/codemagic-ci-cd/codemagic-docs).
+
+To make a contribution, fork the repository, make your changes and start a pull request. All pull requests will be reviewed by the Codemagic team. Read more from the repository's [readme](https://github.com/codemagic-ci-cd/codemagic-docs/blob/master/readme.md).
+
+## Codemagic Slack workspace
+
+If you have problems with setting up Codemagic CI/CD or want to talk to fellow Flutter developers, you are more than welcome to join our [Slack workspace](http://bit.ly/cm-slack 'Slack community for CI/CD and Flutter'). 
+
+## Codemagic status page
+
+We post information about maintenances and known issues with the service on our [status page](https://twitter.com/CodemagicStatus).
\ No newline at end of file
diff --git a/content/releases-and-versions/release-notes.md b/content/releases-and-versions/release-notes.md
new file mode 100644
index 0000000..a52336a
--- /dev/null
+++ b/content/releases-and-versions/release-notes.md
@@ -0,0 +1,19 @@
+---
+description: Information about Codemagic feature releases
+title: Release notes
+weight: 1
+---
+
+## August 2019
+
+### Codemagic community documentation
+
+We made Codemagic documentation public! Codemagic users are welcome to contribute on [GitHub](https://github.com/codemagic-ci-cd/codemagic-docs/).
+
+The improved documentation site includes:
+
+* [Release notes]() for an overview of latest Codemagic feature releases
+
+* [Common issues]() together with solutions to overcome them
+
+* [Software and versions]() page containing a list of software that is available out-of-the-box
\ No newline at end of file
diff --git a/content/releases-and-versions/versions.md b/content/releases-and-versions/versions.md
new file mode 100644
index 0000000..1b934e7
--- /dev/null
+++ b/content/releases-and-versions/versions.md
@@ -0,0 +1,53 @@
+---
+description: A list of software and versions available out-of-the-box on Codemagic.
+title: Software versions
+weight: 2
+---
+**Dart and Flutter**
+
+- Dart `2.4.0`
+- Flutter `$HOME/programs/flutter`, `1.7.8+hotfix.4`
+
+**iOS tools**
+
+- Xcode
+
+`9.0.1   (/Applications/Xcode-9.app)`
+
+`9.1     (/Applications/Xcode-9.1.app)`
+
+`9.2     (/Applications/Xcode-9.2.app)`
+
+`9.3.1   (/Applications/Xcode-9.3.app)`
+
+`9.4.1   (/Applications/Xcode-9.4.app)`
+
+`10.0    (/Applications/Xcode-10.app)`
+
+`10.1    (/Applications/Xcode-10.1.app)`
+
+`10.2.1  (/Applications/Xcode-10.2.app)`
+
+`10.3    (/Applications/Xcode-10.3.app)`
+
+`11.0    (/Applications/Xcode-11.app)`
+
+- CocoaPods (1.7.5)
+
+**Android tools**
+
+- Android tools `$HOME/programs/android-sdk-macosx`
+
+**Other applications**
+
+- Wget
+- Curl
+- SSH
+- Git
+- Homebrew
+- Python `2.7.16`, `3.7.4`
+- Node `v10.16.0`
+- Npm `6.10.2`
+- Yarn `1.17.3`
+- Gem `2.5.2.2`
+- Ruby `2.3.6p384`
\ No newline at end of file
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 3783c03..2e52539 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -3,7 +3,7 @@ description:
   'Establish SSH access to the builder virtual machine to inspect your
   build.  '
 title: Accessing virtual machine via SSH
-weight: 1
+weight: 2
 ---
 
 Establishing SSH access to the virtual machine running the build is a secure way for inspecting your build during runtime and for a short time after the build has finished. Building in SSH mode gives you the following advantages:
diff --git a/content/troubleshooting/codemagic-status-page.md b/content/troubleshooting/codemagic-status-page.md
index 50040b3..723c7d4 100644
--- a/content/troubleshooting/codemagic-status-page.md
+++ b/content/troubleshooting/codemagic-status-page.md
@@ -1,7 +1,7 @@
 ---
 description: Get latest information about the status of Codemagic CI/CD.
 title: Codemagic status page
-weight: 2
+weight: 3
 ---
 
 We post information about the service status, including maintenances and service disruptions, on Twitter [@CodemagicStatus](https://twitter.com/CodemagicStatus) as well as share information in our [Slack community](http://bit.ly/cm-slack).
diff --git a/content/troubleshooting/common-issues.md b/content/troubleshooting/common-issues.md
new file mode 100644
index 0000000..4178eab
--- /dev/null
+++ b/content/troubleshooting/common-issues.md
@@ -0,0 +1,31 @@
+---
+description: Find out how to overcome frequent issues with building your Flutter app on Codemagic. 
+title: Common issues
+weight: 1
+---
+
+## iOS build hangs at `Xcode build done`
+
+**Description**:
+When building for iOS, the build gets stuck after showing `Xcode build done` in the log but does not finish and eventually times out.
+
+**Log output**: 
+
+    == Building for iOS ==
+
+    == /usr/local/bin/flutter build ios --release --no-codesign ==
+    Warning: Building for device with codesigning disabled. You will have to manually codesign before deploying to device.
+    Building net.butterflyapp.trainer for device (ios-release)...
+    Running pod install...                                              3.7s
+    Running Xcode build...                                          
+    Xcode build done.                                           203.6s
+
+**Flutter**: 1.7.8+hotfix.3, 1.7.8+hotfix.4
+
+**Xcode**: N/A
+
+**Solution**: This is a known issue that occurs randomly and can be traced back to Flutter:
+https://github.com/flutter/flutter/issues/28415
+https://github.com/flutter/flutter/issues/35988
+
+Downgrading to earlier Flutter versions can help.
\ No newline at end of file
diff --git a/readme.md b/readme.md
index 2c58df6..2a1f73a 100644
--- a/readme.md
+++ b/readme.md
@@ -1,11 +1,25 @@
-# Codemagic public documentation
+# Codemagic community documentation
 
-Welcome to the Codemagic public documentation repository. As a Codemagic user, you can contribute to our documentation to improve it. All pull requests will be reviewed by the Codemagic team. 
+Welcome to the Codemagic public documentation repository. As a Codemagic user, you can contribute to our documentation to improve it. 
 
+## Getting started
 
-# Development
+To contribute to Codemagic documentation, fork the repository, make your changes and start a pull request. All pull requests will be reviewed by the Codemagic team. 
 
-requires [Hugo static site generator](https://gohugo.io) latest from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew
+### Common issues page
+
+We invite you to help out fellow Codemagic users by describing a frequent issue **and** providing a solution to it. Add your entry to the "Common issues" page under Troubleshooting. 
+
+Please follow the format of existing issues for consistency.
+
+1. Provide a clear **description** of the issue and the steps to reproduce it. Keep the description short and sweet.
+2. Provide a **log output**, if relevant.
+3. Specify the **Flutter** (and **Xcode**) version if you think these are relevant.
+4. Describe the **solution** to overcome this issue.
+
+## Development
+
+Development requires [Hugo static site generator](https://gohugo.io) latest from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew
 
 ```
 brew install hugo

commit 3beb91cb8df6a588801870b7cc00e3912e52638e
Author: Helina Ariva <helina@nevercode.io>
Date:   Fri Aug 23 23:40:55 2019 +0300

    Update automatic-build-triggering.md
    
    Removed the note that tag creation is supported for GitHub apps only.

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 566a92b..5ff6a81 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -34,7 +34,7 @@ Under Automatic build triggering, you can select when to trigger builds.
 
 **Trigger on pull request update** (not supported for apps from custom sources). When checked, Codemagic will run the tests for the opened or updated pull request (merge request in GitLab jargon) without building the Android or the iOS app and pass the result back to the repository.
 
-**Trigger on tag creation** (currently supported for GitHub apps only). When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
+**Trigger on tag creation**. When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
 
 If you don't check any of these triggering options, you will have to run builds manually for this workflow.
 

commit 9188e67d397da3a479d78ebfe3cc7de7454e54e9
Author: Madis Peebo <madis@nevercode.io>
Date:   Wed Aug 14 13:39:52 2019 +0300

    enable italics

diff --git a/assets/scss/_reset.scss b/assets/scss/_reset.scss
index c46af8a..1282072 100644
--- a/assets/scss/_reset.scss
+++ b/assets/scss/_reset.scss
@@ -35,4 +35,5 @@ h1, h2, h3, h4, h5, h6 { letter-spacing: -0.05em; font-family: $font-family-bold
 b, strong { font-family: $font-family-bold; }
 a { text-decoration: none; transition: color 300ms linear; }
 input { &:focus { outline: none; } }
-img { max-width: 100%; height: auto; vertical-align: middle; border-radius: 2px; }
\ No newline at end of file
+img { max-width: 100%; height: auto; vertical-align: middle; border-radius: 2px; }
+em { font-style: italic }
\ No newline at end of file

commit 216e7f5a499a1dbdd0e10fd651a13560125a5f5b
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Aug 14 12:51:21 2019 +0300

    Fixed the name of the script

diff --git a/content/custom-scripts/beta-deployment-with-fastlane.md b/content/custom-scripts/beta-deployment-with-fastlane.md
index e797971..534f458 100644
--- a/content/custom-scripts/beta-deployment-with-fastlane.md
+++ b/content/custom-scripts/beta-deployment-with-fastlane.md
@@ -4,10 +4,10 @@ title: Run fastlane for beta deployment
 weight: 4
 ---
 
-If your Flutter app has an existing *fastlane* setup for beta deployment, you can easily run *fastlane* scripts as part of the Codemagic build process and publish to Crashlytics, for example. Note that our builder machines have *fastlane* pre-installed. You can use the pre-build script example below to execute `fastlane beta` for successful Android builds.
+If your Flutter app has an existing *fastlane* setup for beta deployment, you can easily run *fastlane* scripts as part of the Codemagic build process and publish to Crashlytics, for example. Note that our builder machines have *fastlane* pre-installed. You can use the pre-publish script example below to execute `fastlane beta` for successful Android builds.
 
 1. Before running the script, navigate to **App settings > Environment variables** and add the API keys / secrets required for authorizing with the third-party service as secure [environment variables](../building/environment-variables). 
-2. Click on the + sign between **Build** and **Publish** and paste your script to the pre-build script field.
+2. Click on the + sign between **Build** and **Publish** and paste your script to the pre-publish script field.
 
 ```
 #!/usr/bin/env sh

commit 1120342040cc9fecb00f64d6fb9eb7365b1f50b1
Author: Helina Ariva <helina@nevercode.io>
Date:   Tue Aug 13 23:00:58 2019 +0300

    Added  a script for using fastlane

diff --git a/content/custom-scripts/beta-deployment-with-fastlane.md b/content/custom-scripts/beta-deployment-with-fastlane.md
new file mode 100644
index 0000000..e797971
--- /dev/null
+++ b/content/custom-scripts/beta-deployment-with-fastlane.md
@@ -0,0 +1,26 @@
+---
+description: Run fastlane scripts to deploy to beta distribution services 
+title: Run fastlane for beta deployment
+weight: 4
+---
+
+If your Flutter app has an existing *fastlane* setup for beta deployment, you can easily run *fastlane* scripts as part of the Codemagic build process and publish to Crashlytics, for example. Note that our builder machines have *fastlane* pre-installed. You can use the pre-build script example below to execute `fastlane beta` for successful Android builds.
+
+1. Before running the script, navigate to **App settings > Environment variables** and add the API keys / secrets required for authorizing with the third-party service as secure [environment variables](../building/environment-variables). 
+2. Click on the + sign between **Build** and **Publish** and paste your script to the pre-build script field.
+
+```
+#!/usr/bin/env sh
+
+set -e # exit on first failed command
+set -x # print all executed commands to the log
+
+if [ "$FCI_BUILD_STEP_STATUS" == "success" ]
+then
+        gem install bundler
+        cd android
+        bundle install
+        bundle exec fastlane beta
+fi
+```
+Now, whenever your workflow is built successfully, your app is published to the beta testing services specified in your *beta* lane.
\ No newline at end of file
diff --git a/content/custom-scripts/run-static-code-analysis.md b/content/custom-scripts/run-static-code-analysis.md
index 2cc3254..bbe9e5a 100644
--- a/content/custom-scripts/run-static-code-analysis.md
+++ b/content/custom-scripts/run-static-code-analysis.md
@@ -1,7 +1,7 @@
 ---
 draft: true
 title: Run static code analysis
-weight: ''
+weight: 7
 ---
 
 You can use this **pre-test** script to run static code analysis with `flutter analyze`.
diff --git a/content/custom-scripts/upload-custom-artifacts.md b/content/custom-scripts/upload-custom-artifacts.md
index f3829b1..ac09d6c 100644
--- a/content/custom-scripts/upload-custom-artifacts.md
+++ b/content/custom-scripts/upload-custom-artifacts.md
@@ -1,7 +1,7 @@
 ---
 description: Upload files to be included in your build artifacts ZIP file
 title: Upload custom artifacts
-weight: 4
+weight: 6
 ---
 
 You can use a custom script to upload custom artifacts, such as screenshots, to `$FCI_EXPORT_DIR` and include them in the build artifacts ZIP file generated by Codemagic.

commit 17401eec30bdd9d03ccb1390018235d22999f8c7
Author: Helina Ariva <helina@nevercode.io>
Date:   Tue Aug 6 14:32:02 2019 +0300

    Wording improvements

diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index f444691..706f4eb 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -4,10 +4,10 @@ title: Add a Git tag with app version
 weight: 2
 ---
 
-You can use this **pre-publish** script to create a Git tag referencing your app version. The script will check if the build was successful before updating the app version.
+You can use this **pre-publish** script to create a Git tag referencing your app version and push it to your repository. Before creating the tag, the script will check if the build was successful.
 
-1. Save your Git service username and email address as [environment variables](https://docs.codemagic.io/building/environment-variables/) (e.g. `GIT_USERNAME` and `GIT_EMAIL`).
-2. Add the following **pre-publish** script.
+1. In **App settings > Environment variables**, save your Git service username and email address as [environment variables](https://docs.codemagic.io/building/environment-variables/) (e.g. `GIT_USERNAME` and `GIT_EMAIL`).
+2. Click on the + sign between **Build** and **Publish** and add the following **pre-publish** script.
 
 ```
        #!/usr/bin/env sh

commit 25e6b2821dc44a910cbbc5b71fa9c812ba544e92
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Jul 31 17:30:36 2019 +0300

    Trigger on tag creation

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index fcd9b43..566a92b 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -28,12 +28,14 @@ To add a new branch pattern:
 
 Under Automatic build triggering, you can select when to trigger builds.
 
-![](../uploads/automatic build triggering.PNG)
+![](../uploads/trigger_on_tag_creation.png)
 
 **Trigger on every push**. When checked, a build will be started every time you commit code to any of the tracked branches.
 
 **Trigger on pull request update** (not supported for apps from custom sources). When checked, Codemagic will run the tests for the opened or updated pull request (merge request in GitLab jargon) without building the Android or the iOS app and pass the result back to the repository.
 
+**Trigger on tag creation** (currently supported for GitHub apps only). When checked, Codemagic will automatically build the tagged commit whenever you create a tag for this app. Note that the watched branch settings have no effect on tag builds.
+
 If you don't check any of these triggering options, you will have to run builds manually for this workflow.
 
 ## Webhooks
diff --git a/content/uploads/trigger_on_tag_creation.png b/content/uploads/trigger_on_tag_creation.png
new file mode 100644
index 0000000..4dc0c8a
Binary files /dev/null and b/content/uploads/trigger_on_tag_creation.png differ

commit 03aa125c98cb708fe25608174cd42717396234f5
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Jul 31 16:48:41 2019 +0300

    Added webhook information

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index d328f08..af3b01e 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -17,4 +17,4 @@ Then, fill in all the required fields.
 3. If the SSH key is password-protected, you’ll be also asked to enter the **SSH key password**.
 4. Click **Add app**.
 
-Your app will be then listed on the Applications page and you can immediately start running builds.
+Your app will be then listed on the Applications page and you can immediately start running builds. Note that in order to enable automatic builds, you will need to manually [set up webhooks](../building/automatic-build-triggering#webhooks).

commit cf574ffffaff192bbb1f74203a08af6a49ab2b97
Merge: 9e9db7c a03e1ef
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Jul 31 16:47:25 2019 +0300

    Merge branch 'master' of https://github.com/codemagic-ci-cd/codemagic-docs

commit a03e1ef6288472e70659696fa66cae7e79eb29c0
Author: Madis Peebo <madis@nevercode.io>
Date:   Wed Jul 31 16:42:10 2019 +0300

    improve relative markdown link handling

diff --git a/layouts/partials/content.html b/layouts/partials/content.html
index 15637fd..6a9c364 100644
--- a/layouts/partials/content.html
+++ b/layouts/partials/content.html
@@ -13,6 +13,14 @@
   {{ $in = "<img ([^>]*) ?src=\"./([^\"]+)\" ?([^/>]*) */?>" }}
   {{ $out = "<img $1 src=\"../$2\" $3 />" }}
   {{ $content = $content | replaceRE $in $out | safeHTML }}
+
+  {{ $in = "<a ([^>]*) ?href=\"../([^\"]+)\" ?([^/>]*) *>" }}
+  {{ $out = "<a $1 href=\"../../$2\" $3 />" }}
+  {{ $content = $content | replaceRE $in $out | safeHTML }}
+
+  {{ $in = "<a ([^>]*) ?href=\"./([^\"]+)\" ?([^/>]*) *>" }}
+  {{ $out = "<a $1 href=\"../$2\" $3 />" }}
+  {{ $content = $content | replaceRE $in $out | safeHTML }}
 {{ end }}
 
 <!-- replace all single images paragraph in content with figures, using alt for caption -->

commit 9e9db7c9f80861bea1ee45acae406cf3d546e74c
Author: Helina Ariva <helina@nevercode.io>
Date:   Wed Jul 31 16:26:17 2019 +0300

    Added note about repository permissions

diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
index 03d658e..faeaaf5 100644
--- a/content/getting-started/getting-started.md
+++ b/content/getting-started/getting-started.md
@@ -4,7 +4,13 @@ title: Running the first build
 weight: 2
 ---
 
-Upon login, Codemagic will automatically display the list of apps in your repository. Select a Flutter app and start the very first build with preconfigured defaults by clicking **Start your first build**.
+Upon login, Codemagic will automatically display the list of apps in your repository. 
+
+{{% notebox %}}
+If you can't see your app listed, it may be because you don't have sufficient permissions or Codemagic has no access to your team or organization. Codemagic requires read/write permission to build your app. Contact your repository admin to review the settings.
+{{% /notebox %}}
+
+Select a Flutter app and start the very first build with preconfigured defaults by clicking **Start your first build**.
 
 {{< figure size="" src="../uploads/2019/07/app_dashboard.PNG" caption="Codemagic Applications page" >}}
 

commit 5b0b872219f4db853c78f935ae56888441715a7b
Author: Madis Peebo <madis@nevercode.io>
Date:   Wed Jul 31 15:57:10 2019 +0300

    improve relative image content handling

diff --git a/layouts/_default/single.ace b/layouts/_default/single.ace
index 78a5ca2..287043c 100644
--- a/layouts/_default/single.ace
+++ b/layouts/_default/single.ace
@@ -1,6 +1,6 @@
 = content main
   h1 {{ .Title }}
-  {{ partial "content" .Content }}
+  {{ partial "content" . }}
   {{ with .TableOfContents }}
     aside#toc
       .heading Table of contents
diff --git a/layouts/partials/content.html b/layouts/partials/content.html
index 288fd3b..15637fd 100644
--- a/layouts/partials/content.html
+++ b/layouts/partials/content.html
@@ -1,13 +1,19 @@
 
 {{ $in := "" }}
 {{ $out := "" }}
-{{ $content := . }}
+{{ $content := .Content }}
 
-<!-- prefix all relative images to take into account url prettification
-  which adds one extra level of nesting in rendered site -->
-{{ $in = "<img ([^>]*) ?src=\"../([^\"]+)\" ?([^/>]*) */?>" }}
-{{ $out = "<img $1 src=\"../../$2\" $3 />" }}
-{{ $content = $content | replaceRE $in $out | safeHTML }}
+{{ if ne .File.LogicalName "index.md" }}
+  <!-- prefix all relative images to take into account url prettification
+    which adds one extra level of nesting in rendered site -->
+  {{ $in = "<img ([^>]*) ?src=\"../([^\"]+)\" ?([^/>]*) */?>" }}
+  {{ $out = "<img $1 src=\"../../$2\" $3 />" }}
+  {{ $content = $content | replaceRE $in $out | safeHTML }}
+
+  {{ $in = "<img ([^>]*) ?src=\"./([^\"]+)\" ?([^/>]*) */?>" }}
+  {{ $out = "<img $1 src=\"../$2\" $3 />" }}
+  {{ $content = $content | replaceRE $in $out | safeHTML }}
+{{ end }}
 
 <!-- replace all single images paragraph in content with figures, using alt for caption -->
 {{ $in = "<p><img ?([^>]*?) ?src=\"([^\"]+)\" ?([^>]*?) ?alt=\"([^\"]+)\" ?([^/>]*?) */?></p>" }}

commit 32b648d8e022844f17a1f26a7d6c2e1b029a5cb6
Author: Madis Peebo <madis@nevercode.io>
Date:   Wed Jul 31 15:15:36 2019 +0300

    add changes that got lost during migration

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 2aaeb94..fcd9b43 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -7,20 +7,22 @@ In order to fully automate your CI/CD pipeline, you can set up automatic build t
 
 Build triggers can be configured in **App settings > Build triggers**.
 
-## Targeting specific branches
+## Tracking specific branches
 
-The branches targeted for building are selected by entering branch patterns and including or excluding the matching branches. Note that you can either enter the exact name of the branch to select it or use the wildcard symbols listed in the table below to select more than one branch with one pattern.
+The branches tracked for building are selected by entering branch patterns and including or excluding the matching branches. Note that you can either enter the exact name of the branch to select it or use the wildcard symbols listed in the table below to select more than one branch with one pattern.
 
-![](../uploads/tracked branches.PNG)
+![](../uploads/2019/07/branch_patterns-1.png)
 
-The first (i.e. topmost) pattern in the list is applied first. Each following pattern will limit the set of branches further. You can check the targeted branches by clicking the eye icon next to **Watched branch patterns**.
+The first (i.e. topmost) pattern in the list is applied first. Each following pattern will limit the set of branches further. In the case of conflicting patterns, the latter one will prevail. You can check the targeted branches by clicking the eye icon next to **Watched branch patterns**.
 
 To add a new branch pattern:
 
-1. Navigate to the **Build triggers** section in App settings.
+1. Navigate to **App settings >** **Build triggers**.
 2. Enter a pattern matching the name of one or more branches in the project.
 3. Select **Include** or **Exclude** from the dropdown to limit the set of targeted branches by either including or excluding the matching branches.
-4. Click **Add pattern** to save and apply it. You can always edit or delete added patterns.
+4. For pull request builds, select whether the tracked branch is the **Source** or the **Target** branch of the pull request. This setting has no effect on other types of builds.
+5. Click **Add pattern** to save it. You can always edit or delete added patterns.
+6. Click **Save** at the end of the section for the changes to take effect.
 
 ## Build triggers
 
@@ -32,14 +34,20 @@ Under Automatic build triggering, you can select when to trigger builds.
 
 **Trigger on pull request update** (not supported for apps from custom sources). When checked, Codemagic will run the tests for the opened or updated pull request (merge request in GitLab jargon) without building the Android or the iOS app and pass the result back to the repository.
 
-{{% notebox %}}
+If you don't check any of these triggering options, you will have to run builds manually for this workflow.
+
+## Webhooks
 
-**Note on apps hosted in Bitbucket**  
-Webhooks for building pull request updates are automatically created for new apps but should be reviewed for apps added prior to releasing the **Trigger on pull request update** option. In Bitbucket, go to **Settings > Webhooks > Edit > Pull Requests** and make sure to check **Created** and **Updated**.
+For accounts with sufficient permissions, Codemagic creates the webhooks necessary for automatic build triggering during the initial build run. However, in some cases, such as when you add an app from a custom source, you may have to manually set up the webhook to enable automatic builds in response to events in the repository.
 
+To set up a webhook for automatic build triggering on Codemagic, you must register the Codemagic **payload URL** in your repository settings and select Repository push, Branch push and PR merge events.
+
+{{% notebox %}}
+The payload URL has the following format:  
+`https://api.codemagic.io/hooks/[yourappID]`
 {{% /notebox %}}
 
-If you don't check any of these triggering options, you will have to run builds manually for this workflow.
+You can find your app ID in the browser URL after `app/` when you open the app on Codemagic: `https://codemagic.io/app/[yourappID]`
 
 ## Skipping builds
 
diff --git a/content/uploads/2019/07/branch_patterns-1.png b/content/uploads/2019/07/branch_patterns-1.png
new file mode 100644
index 0000000..2e99bac
Binary files /dev/null and b/content/uploads/2019/07/branch_patterns-1.png differ
diff --git a/content/uploads/tracked branches.PNG b/content/uploads/tracked branches.PNG
deleted file mode 100644
index f11681e..0000000
Binary files a/content/uploads/tracked branches.PNG and /dev/null differ

commit ff7c79e733c0775f4f9f6026e1689f876d3850a1
Author: Andri Jasinski <andrjuwkoy@gmail.com>
Date:   Wed Jul 31 13:13:52 2019 +0300

    Important change (#2)

diff --git a/readme.md b/readme.md
index e31e186..2c58df6 100644
--- a/readme.md
+++ b/readme.md
@@ -24,5 +24,5 @@ Preview the site in http://localhost:1313/ by launching:
 ./serve.sh
 ```
 
-It will usually refresh automatically when anything is changed.
+It will usually refresh automatically when anything is changed
 

commit ce600a6e6d386bdcecfa78dd5ab62c19f55337d1
Author: madispp <madispp@gmail.com>
Date:   Wed Jul 31 12:03:36 2019 +0300

    Remove deployment info from readme (#1)
    
    Since the public repo is not related to deployment, and it can change any time, we should remove the info from readme

diff --git a/readme.md b/readme.md
index 0be7ef3..e31e186 100644
--- a/readme.md
+++ b/readme.md
@@ -26,47 +26,3 @@ Preview the site in http://localhost:1313/ by launching:
 
 It will usually refresh automatically when anything is changed.
 
-# Building
-
-```
-./build.sh
-```
-
-It builds the site to `./public/` folder - minified etc.
-That folder can be deployed.
-
-# Deploying
-
-## Manual
-
-Requires AWS credentials in environment variables (for updating S3).
-
-```
-export AWS_ACCESS_KEY_ID=ACTUALACCESSKEY
-export AWS_SECRET_ACCESS_KEY=ACTUALSECRETACCESSKEY
-```
-
-For CloudFront invalidation, add distribution id
-
-```
-export CF_DISTRIBUTION_ID=ACTUAL_DIST_ID
-```
-
-prod builds need environment variable
-
-```
-HUGO_ENVIRONMENT=production
-```
-
-Requires s3deploy (you can also download binary from [the releases page](https://github.com/bep/s3deploy/releases/))
-
-```
-brew install bep/tap/s3deploy
-```
-
-Run the scripts:
-
-```
-./build.sh
-./deploy.sh
-```

commit 48a00809ed0983d8e5cfe1d917e78b017562571c
Author: Helina Ariva <helina@nevercode.io>
Date:   Tue Jul 30 17:47:09 2019 +0300

    Amended some env var descriptions

diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 6e63027..08275d2 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -39,24 +39,24 @@ Codemagic exports several read-only environment variables during the build that
 
 Here you'll find some of the read-only environment variables explained.
 
-| Environment variable   | Value                                                                                                           |
-| ---------------------- | --------------------------------------------------------------------------------------------------------------- |
-| CI                     | true                                                                                                            |
-| CONTINUOUS_INTEGRATION | true                                                                                                            |
-| BUILD_NUMBER           | Number of the build for this project in Codemagic                                                               |
-| FCI_BRANCH             | The current branch being built, for pull requests it is the destination branch                                  |
-| FCI_COMMIT             | Commit hash that is currently being built by Codemagic, for pull request builds it is hash of the source commit |
-| FCI_CLONE_UNSHALLOW    | Performs a full clone of the repository instead of top 50 commits                                               |
-| FCI_PROJECT_ID         | UUID of the project that is being built                                                                         |
-| FCI_BUILD_ID           | UUID of the build                                                                                               |
-| FCI_TEST_STEP_STATUS   | Test step status, success or failure                                                                            |
-| FCI_BUILD_STEP_STATUS  | Build step status, success, failure or skipped                                                                  |
-| FCI_BUILD_DIR          | Absolute path to the cloned repository in Codemagic builders                                                    |
-| FCI_BUILD_OUTPUT_DIR   | Contains all the artifact files that will be included in the final artifacts zip file                           |
-| FCI_EXPORT_DIR         | All the files included in this directory will be added to the artifacts zip file                                |
-| FCI_FLUTTER_SCHEME     | Name of the iOS scheme to be used                                                                               |
-| FCI_SYMROOT            | Directory path of files generated during Xcode build                                                            |
-| FCI_KEYSTORE_PASSWORD  | Password of Android keystore as configured in the UI                                                            |
-| FCI_KEY_PASSWORD       | Password of Android key as configured in the UI                                                                 |
-| FCI_KEY_ALIAS          | Alias of the key as configured in the UI                                                                        |
-| FCI_KEYSTORE_PATH      | Path of the file in our VM                                                                                      |
+| **Environment variable** | **Value**                                                                                                       |
+|--------------------------|-----------------------------------------------------------------------------------------------------------------|
+| CI                       | true                                                                                                            |
+| CONTINUOUS_INTEGRATION   | true                                                                                                            |
+| BUILD_NUMBER             | Number of the build for this project in Codemagic                                                               |
+| FCI_BRANCH               | The current branch being built, for pull requests it is the destination branch                                  |
+| FCI_COMMIT               | Commit hash that is currently being built by Codemagic, for pull request builds it is the hash of the source commit |
+| FCI_CLONE_UNSHALLOW      | If set to `true`, performs a full clone of the repository instead of top 50 commits                              |
+| FCI_PROJECT_ID           | UUID of the project that is being built                                                                         |
+| FCI_BUILD_ID             | UUID of the build                                                                                               |
+| FCI_TEST_STEP_STATUS     | Test step status, success or failure                                                                            |
+| FCI_BUILD_STEP_STATUS    | Build step status, success, failure or skipped                                                                  |
+| FCI_BUILD_DIR            | Absolute path to the cloned repository in Codemagic builders                                                    |
+| FCI_BUILD_OUTPUT_DIR     | Contains the artifact files generated during the build                                                          |
+| FCI_EXPORT_DIR           | The files added to this directory will be added to a zip file and made available as build artifacts             |
+| FCI_FLUTTER_SCHEME       | Name of the iOS scheme to be used                                                                               |
+| FCI_SYMROOT              | Directory path of files generated during Xcode build                                                            |
+| FCI_KEYSTORE_PASSWORD    | Password of Android keystore as configured in the UI                                                            |
+| FCI_KEY_PASSWORD         | Password of Android key as configured in the UI                                                                 |
+| FCI_KEY_ALIAS            | Alias of the key as configured in the UI                                                                        |
+| FCI_KEYSTORE_PATH        | Path of the file in our VM                                                                                      |
diff --git a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
index c78e13d..9a50031 100644
--- a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
+++ b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
@@ -7,7 +7,7 @@ weight: 3
 You can use custom scripts to publish your app artifacts to external sources. Here's an example for publishing to [Amazon S3](https://aws.amazon.com/s3/).
 
 1.  You will first need to provide Codemagic access to your Amazon S3 account for publishing. In **App settings >** **Environment variables**, add your credentials as [environment variables](https://docs.codemagic.io/building/environment-variables/) named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` respectively. Make sure to check **Secure**.
-2.  Click on the **+** sign before the Build section to expand the step and add the following **pre-build script**. `<FOLDER OR FILE>` refers to a specific folder or file to be synced. Replace `<BUCKET_NAME>` with your actual bucket name.
+2.  Click on the **+** sign before the Build section to expand the step and add the following **pre-build script**. `<FOLDER OR FILE>` refers to a specific folder or file to be synced. Replace `<BUCKET_NAME>` with your actual bucket name. Note that all the artifact files that Codemagic generates during the build are located in `FCI_BUILD_OUTPUT_DIR`.
 
         #!/bin/sh
 

commit fbf472c6674b2e1bd39dba4d5578053b9d69b2d0
Author: Helina Ariva <helina@nevercode.io>
Date:   Tue Jul 30 16:35:40 2019 +0300

    Readme update

diff --git a/readme.md b/readme.md
index cc64383..0be7ef3 100644
--- a/readme.md
+++ b/readme.md
@@ -1,3 +1,8 @@
+# Codemagic public documentation
+
+Welcome to the Codemagic public documentation repository. As a Codemagic user, you can contribute to our documentation to improve it. All pull requests will be reviewed by the Codemagic team. 
+
+
 # Development
 
 requires [Hugo static site generator](https://gohugo.io) latest from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew

commit 020b926b9cd624b69d9d465fbeb3f5f97abce62e
Author: Madis Peebo <madis@nevercode.io>
Date:   Mon Jul 29 15:45:13 2019 +0300

    add windows tasks

diff --git a/.vscode/tasks.json b/.vscode/tasks.json
index d459332..9dcab44 100644
--- a/.vscode/tasks.json
+++ b/.vscode/tasks.json
@@ -7,6 +7,9 @@
       "label": "build",
       "type": "shell",
       "command": "./build.sh",
+      "windows": {
+        "command": ".\\build.cmd"
+      },
       "group": {
         "kind": "build",
         "isDefault": true
@@ -17,6 +20,9 @@
       "label": "serve",
       "type": "shell",
       "command": "./serve.sh",
+      "windows": {
+        "command": ".\\serve.cmd"
+      },
       "group": "build",
       "isBackground": true,
       "problemMatcher": {
diff --git a/build.cmd b/build.cmd
new file mode 100644
index 0000000..db845eb
--- /dev/null
+++ b/build.cmd
@@ -0,0 +1,3 @@
+del /f/s/q .\public\ > nul
+
+hugo --minify
\ No newline at end of file
diff --git a/serve.cmd b/serve.cmd
new file mode 100644
index 0000000..f7a48e8
--- /dev/null
+++ b/serve.cmd
@@ -0,0 +1,3 @@
+del /f/s/q .\public\ > nul
+
+hugo server --watch --disableFastRender

commit 2bdc3478fcb0e71eef15f797bcae3bc9ec8f0c35
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 19:13:27 2019 +0300

    remove last categories

diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 9b0444d..d328f08 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Getting started with Codemagic CI/CD
 description: Add your Flutter app wherever it is hosted
 title: Adding apps from custom sources
 weight: 4
diff --git a/content/getting-started/automatic-language-detection.md b/content/getting-started/automatic-language-detection.md
index 793e27d..7c64fe2 100644
--- a/content/getting-started/automatic-language-detection.md
+++ b/content/getting-started/automatic-language-detection.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Getting started with Codemagic CI/CD
 title: Automatic language detection
 weight: 6
 ---
diff --git a/content/getting-started/build-artifacts.md b/content/getting-started/build-artifacts.md
index 431ca14..f27db05 100644
--- a/content/getting-started/build-artifacts.md
+++ b/content/getting-started/build-artifacts.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Getting started with Codemagic CI/CD
 description: What kind of artifacts are generated for Flutter apps on Codemagic CI/CD
 draft: true
 title: Build artifacts
diff --git a/content/getting-started/creating-workflows.md b/content/getting-started/creating-workflows.md
index 045c1cc..1fd4810 100644
--- a/content/getting-started/creating-workflows.md
+++ b/content/getting-started/creating-workflows.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Getting started with Codemagic CI/CD
 description: Manage multiple workflows to fully customize your CI/CD pipeline
 title: Creating workflows
 weight: 3
diff --git a/content/getting-started/flutter-project-requirements.md b/content/getting-started/flutter-project-requirements.md
index 8104fbd..70f120a 100644
--- a/content/getting-started/flutter-project-requirements.md
+++ b/content/getting-started/flutter-project-requirements.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Getting started with Codemagic CI/CD
 description:
   Make sure your Flutter project is ready for continuous integration (CI)
   and continuous delivery (CD)
diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
index 2f64d73..03d658e 100644
--- a/content/getting-started/getting-started.md
+++ b/content/getting-started/getting-started.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Getting started with Codemagic CI/CD
 description: Running the first build on Codemagic without any configuration
 title: Running the first build
 weight: 2
diff --git a/content/getting-started/multiple-projects-in-one-repository.md b/content/getting-started/multiple-projects-in-one-repository.md
index c3dc132..65c9663 100644
--- a/content/getting-started/multiple-projects-in-one-repository.md
+++ b/content/getting-started/multiple-projects-in-one-repository.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Getting started with Codemagic CI/CD
 title: Multiple projects in one repository
 weight: 5
 ---
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index d29cb26..d9775c5 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Getting started with Codemagic CI/CD
 description: Sign up for Codemagic CI/CD
 title: Signup
 weight: 1
diff --git a/layouts/partials/header.ace b/layouts/partials/header.ace
index 0c6207f..4edf0a9 100644
--- a/layouts/partials/header.ace
+++ b/layouts/partials/header.ace
@@ -1,17 +1,6 @@
 
 header.site-header.grey-box
   nav.global-nav
-    ul.list-unstyled.list-vertical
-      {{ range .Sites }}
-        li
-          a href={{ .Home.Permalink }}
-            {{ if eq .Language site.Language }}
-              strong {{ .Params.Name }}
-            {{ else }}
-              {{ .Params.Name }}
-            {{ end }}
-      {{ end }}
-
   .search
     input#search type=text placeholder=search
     ul.list-unstyled#search-results
diff --git a/layouts/partials/opengraph.ace b/layouts/partials/opengraph.ace
index 88b4bfa..961c82d 100644
--- a/layouts/partials/opengraph.ace
+++ b/layouts/partials/opengraph.ace
@@ -61,8 +61,8 @@ meta property="og:url" content="{{ .Permalink }}"
     meta property="article:publisher" content="https://www.facebook.com/{{ . }}"
   {{ end }}
 
-  {{ with .Param "categories" }}
-    meta property="article:section" content={{ index . 0 }}
+  {{ with .Section }}
+    meta property="article:section" content={{ (index (where site.Menus.main ".Identifier" .) 0).Name }}
   {{ end }}
 
   {{ with .Params.tags }}

commit e1ba664804ca0efb00a4f8d6d8e6c2eda6ada4db
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 19:02:25 2019 +0300

    remove more unneeded front-matter

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index d1ae7af..2aaeb94 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Build configuration
-date: '2019-03-31T15:09:08+03:00'
 title: Automatic build triggering
 weight: 1
 ---
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 3bcf600..7237adf 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Build configuration
-date: '2019-04-27T20:24:35+03:00'
 title: Build versioning
 weight: 7
 ---
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 65231f0..813aeb5 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Build configuration
-date: '2019-03-31T15:59:20+03:00'
 title: Building Android app bundles
 weight: 3
 ---
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index 5e826a8..6ed1a98 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Build configuration
 description: See how to build a Flutter web app with Codemagic.
 title: Building for the web
 weight: 5
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 3f08dbe..4644979 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Build configuration
 description: Store your dependencies on Codemagic for a faster build time.
 title: Dependency caching
 weight: 6
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 9a668a5..6e63027 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Build configuration
-date: '2019-03-31T15:10:05+03:00'
 description:
   Environment variables are useful for storing information that you do
   not want to store in the repository. You can also use Codemagic read-only environment
diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
index 16a2265..4bdfaa6 100644
--- a/content/building/specifying-custom-ios-scheme.md
+++ b/content/building/specifying-custom-ios-scheme.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Build configuration
 title: Specifying custom iOS scheme
 weight: 4
 ---
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index d2ac1d3..ce3cfec 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Code signing
-date: '2019-03-10T22:52:07+02:00'
 description: Sign your Android app for publishing to Google Play Store
 title: Android code signing
 weight: 2
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 1abd3ec..cbbf84a 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Code signing
-date: '2019-03-10T21:29:39+02:00'
 description: Sign Flutter app for iOS
 title: iOS code signing
 weight: 1
diff --git a/content/custom-scripts/access-private-git-submodules.md b/content/custom-scripts/access-private-git-submodules.md
index 22b4942..b54e602 100644
--- a/content/custom-scripts/access-private-git-submodules.md
+++ b/content/custom-scripts/access-private-git-submodules.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Custom script examples
-date: '2019-04-09T17:40:12+03:00'
 description: Access private Git submodules in Codemagic
 title: Access private Git submodules
 weight: 1
diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index 0d6a305..f444691 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Custom script examples
-date: '2019-04-07T12:57:59+03:00'
 description: Create a Git tag referencing your app version
 title: Add a Git tag with app version
 weight: 2
diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index d8c41ff..4481695 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Custom script examples
-date: '2019-04-07T13:01:10+03:00'
 description: Load your Firebase configuration files to Codemagic
 title: Load Firebase configuration
 weight: 5
diff --git a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
index cb85b3f..c78e13d 100644
--- a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
+++ b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Custom script examples
 description: You can use custom scripts to publish app artifacts to external services.
 title: Publish build artifacts to Amazon S3
 weight: 3
diff --git a/content/custom-scripts/run-static-code-analysis.md b/content/custom-scripts/run-static-code-analysis.md
index 35aef47..2cc3254 100644
--- a/content/custom-scripts/run-static-code-analysis.md
+++ b/content/custom-scripts/run-static-code-analysis.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Custom script examples
-date: '2019-03-31T15:25:27+03:00'
 draft: true
 title: Run static code analysis
 weight: ''
diff --git a/content/custom-scripts/upload-custom-artifacts.md b/content/custom-scripts/upload-custom-artifacts.md
index 6a25ead..f3829b1 100644
--- a/content/custom-scripts/upload-custom-artifacts.md
+++ b/content/custom-scripts/upload-custom-artifacts.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Custom script examples
-date: '2019-04-07T12:53:30+03:00'
 description: Upload files to be included in your build artifacts ZIP file
 title: Upload custom artifacts
 weight: 4
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 323ef80..9b0444d 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -1,7 +1,6 @@
 ---
 categories:
   - Getting started with Codemagic CI/CD
-date: '2019-03-21T17:03:45+02:00'
 description: Add your Flutter app wherever it is hosted
 title: Adding apps from custom sources
 weight: 4
diff --git a/content/getting-started/automatic-language-detection.md b/content/getting-started/automatic-language-detection.md
index 0007582..793e27d 100644
--- a/content/getting-started/automatic-language-detection.md
+++ b/content/getting-started/automatic-language-detection.md
@@ -1,7 +1,6 @@
 ---
 categories:
   - Getting started with Codemagic CI/CD
-date: '2019-03-21T17:08:18+02:00'
 title: Automatic language detection
 weight: 6
 ---
diff --git a/content/getting-started/build-artifacts.md b/content/getting-started/build-artifacts.md
index 9cef9ee..431ca14 100644
--- a/content/getting-started/build-artifacts.md
+++ b/content/getting-started/build-artifacts.md
@@ -1,7 +1,6 @@
 ---
 categories:
   - Getting started with Codemagic CI/CD
-date: '2019-02-14T13:35:35+02:00'
 description: What kind of artifacts are generated for Flutter apps on Codemagic CI/CD
 draft: true
 title: Build artifacts
diff --git a/content/getting-started/creating-workflows.md b/content/getting-started/creating-workflows.md
index 01abff5..045c1cc 100644
--- a/content/getting-started/creating-workflows.md
+++ b/content/getting-started/creating-workflows.md
@@ -1,7 +1,6 @@
 ---
 categories:
   - Getting started with Codemagic CI/CD
-date: '2019-03-26T16:00:30+02:00'
 description: Manage multiple workflows to fully customize your CI/CD pipeline
 title: Creating workflows
 weight: 3
diff --git a/content/getting-started/flutter-project-requirements.md b/content/getting-started/flutter-project-requirements.md
index fabf0b5..8104fbd 100644
--- a/content/getting-started/flutter-project-requirements.md
+++ b/content/getting-started/flutter-project-requirements.md
@@ -1,7 +1,6 @@
 ---
 categories:
   - Getting started with Codemagic CI/CD
-date: '2019-03-10T22:47:33+02:00'
 description:
   Make sure your Flutter project is ready for continuous integration (CI)
   and continuous delivery (CD)
diff --git a/content/getting-started/multiple-projects-in-one-repository.md b/content/getting-started/multiple-projects-in-one-repository.md
index 7c93cb5..c3dc132 100644
--- a/content/getting-started/multiple-projects-in-one-repository.md
+++ b/content/getting-started/multiple-projects-in-one-repository.md
@@ -1,7 +1,6 @@
 ---
 categories:
   - Getting started with Codemagic CI/CD
-date: '2019-03-21T17:06:39+02:00'
 title: Multiple projects in one repository
 weight: 5
 ---
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index 58fa237..d29cb26 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -1,7 +1,6 @@
 ---
 categories:
   - Getting started with Codemagic CI/CD
-date: '2019-03-10T16:28:20+02:00'
 description: Sign up for Codemagic CI/CD
 title: Signup
 weight: 1
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index fd462d3..8c49291 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Publishing
-date: '2019-03-11T15:58:01+02:00'
 description: Deploy the Flutter app to App Store and TestFlight
 title: Publishing to App Store
 weight: 1
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index 5343aa6..d928b2a 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Publishing
 description: Publish each new version of your web app to a custom subdomain.
 title: Publishing to Codemagic Static Pages
 weight: 3
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index 07494be..b4e8948 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -1,7 +1,4 @@
 ---
-categories:
-  - Publishing
-date: '2019-03-14T11:29:36+02:00'
 description: Deploy the Flutter app to Google Play
 title: Publishing to Google Play
 weight: 2
diff --git a/content/testing/beta-testing-with-testmagic.md b/content/testing/beta-testing-with-testmagic.md
index 9e6f0a3..96d008e 100644
--- a/content/testing/beta-testing-with-testmagic.md
+++ b/content/testing/beta-testing-with-testmagic.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Testing
 description: View, test and distribute your Codemagic builds with Testmagic
 title: Beta testing with Testmagic
 weight: 5
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index 3f28e3d..d3ad391 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Testing
 description:
   Automatically run unit, widget and integration tests every time you build
   your Flutter app.
diff --git a/content/testing/running-tests-only.md b/content/testing/running-tests-only.md
index 30793f6..f3f0e82 100644
--- a/content/testing/running-tests-only.md
+++ b/content/testing/running-tests-only.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Testing
 description: Run tests only without building the app.
 title: Running tests only
 weight: 4
diff --git a/content/testing/static-code-analysis.md b/content/testing/static-code-analysis.md
index c3d1c7b..05e65e2 100644
--- a/content/testing/static-code-analysis.md
+++ b/content/testing/static-code-analysis.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Testing
 description: Test your code with flutter analyze.
 title: Static code analysis
 weight: 2
diff --git a/content/testing/testing-widgets.md b/content/testing/testing-widgets.md
index 2d22c73..f4baab9 100644
--- a/content/testing/testing-widgets.md
+++ b/content/testing/testing-widgets.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Testing
 description:
   Instead of building the entire app, you can run tests on your widgets
   only.
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 722e86b..3783c03 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Troubleshooting
 description:
   'Establish SSH access to the builder virtual machine to inspect your
   build.  '
diff --git a/content/troubleshooting/codemagic-status-page.md b/content/troubleshooting/codemagic-status-page.md
index e81ca37..50040b3 100644
--- a/content/troubleshooting/codemagic-status-page.md
+++ b/content/troubleshooting/codemagic-status-page.md
@@ -1,6 +1,4 @@
 ---
-categories:
-  - Troubleshooting
 description: Get latest information about the status of Codemagic CI/CD.
 title: Codemagic status page
 weight: 2

commit 78b70dbb4ea5ba8a02f0e9e1a7e2cf6f2119eb29
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 18:57:52 2019 +0300

    make images relative

diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 04171da..d1ae7af 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -14,7 +14,7 @@ Build triggers can be configured in **App settings > Build triggers**.
 
 The branches targeted for building are selected by entering branch patterns and including or excluding the matching branches. Note that you can either enter the exact name of the branch to select it or use the wildcard symbols listed in the table below to select more than one branch with one pattern.
 
-![](/uploads/tracked branches.PNG)
+![](../uploads/tracked branches.PNG)
 
 The first (i.e. topmost) pattern in the list is applied first. Each following pattern will limit the set of branches further. You can check the targeted branches by clicking the eye icon next to **Watched branch patterns**.
 
@@ -29,7 +29,7 @@ To add a new branch pattern:
 
 Under Automatic build triggering, you can select when to trigger builds.
 
-![](/uploads/automatic build triggering.PNG)
+![](../uploads/automatic build triggering.PNG)
 
 **Trigger on every push**. When checked, a build will be started every time you commit code to any of the tracked branches.
 
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 0e5298c..65231f0 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -20,7 +20,7 @@ Building an Android app bundle requires additional configuration as described in
 
 In the Build section of app settings, check **Build Android App Bundles** under Build for platforms.
 
-![](/uploads/androi_app_bundles.PNG)
+![](../uploads/androi_app_bundles.PNG)
 
 ## Prepare the app bundle for uploading to Google Play
 
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index c279280..5e826a8 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -21,7 +21,7 @@ If your project has the proper structure and configuration of a web project, Cod
 
 You can review the build settings in **App settings > Build**.
 
-![](/uploads/2019/05/build_settings.PNG)
+![](../uploads/2019/05/build_settings.PNG)
 
 The following is necessary to build the web app:
 
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 3f26668..3f08dbe 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -25,7 +25,7 @@ You can add other paths to be cached, for example:
 
 1. In your app settings, open the **Dependency caching** section.
 
-   ![](/uploads/2019/04/caching_enabled.PNG)
+   ![](../uploads/2019/04/caching_enabled.PNG)
 
 2. Check the **Enable dependency caching** option. By default, caching is disabled.
 3. Enter the path(s) to the dependencies to be cached and click **Add**. Note that you can delete added paths anytime.
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index e65a2f7..9a668a5 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -20,7 +20,7 @@ You can add environment variables in **App settings > Environment variables**.
 2. Check **Secure** if you wish to hide the value in the UI and build logs and disable editing of the variable. Such variables can be accessed only by the builder VMs during the build.
 3. Click **Add**.
 
-![](/uploads/env_vars.PNG)
+![](../uploads/env_vars.PNG)
 
 To access a variable, add the `$` symbol in front of its name. For example, access `API_TOKEN` by using `$API_TOKEN`. Note that it is required to use quotation marks with multi-line variables when you are referencing them in custom scripts, as shown in the example below:
 
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 6d08386..d2ac1d3 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -96,7 +96,7 @@ Alternatively, you can use [environment variables](https://docs.codemagic.io/bui
 
 You are required to upload your keystore file and provide details about your key in order to receive signed builds on Codemagic.
 
-{{< figure size="" src="/uploads/2019/03/code signing.PNG" caption="" >}}
+{{< figure size="" src="../uploads/2019/03/code signing.PNG" caption="" >}}
 
 1. Navigate to the Publish section in app settings.
 2. Click **Android code signing**.
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 5be083d..1abd3ec 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -25,7 +25,7 @@ A provisioning profile contains information about the app ID, the devices on whi
 
 For successful signing, the certificate and the provisioning profile must match in the following way:
 
-{{< figure size="medium" src="/uploads/2019/03/CM-codesigning.jpg" caption="Matching the signing certificate and the provisioning profile" >}}
+{{< figure size="medium" src="../uploads/2019/03/CM-codesigning.jpg" caption="Matching the signing certificate and the provisioning profile" >}}
 
 In short, the purpose of the different provisioning profiles is the following:
 
@@ -47,7 +47,7 @@ To set up automatic code signing:
 6. You can also enter your app’s **bundle identifier** (optional). By default, Codemagic detects it automatically from your `project.pbxproj`file.
 7. Click **Save** to finish the setup.
 
-{{< figure size="medium" src="/uploads/2019/03/automatic_code_signing2.PNG" caption="Automatic code signing setup" >}}
+{{< figure size="medium" src="../uploads/2019/03/automatic_code_signing2.PNG" caption="Automatic code signing setup" >}}
 
 {{% notebox %}}
 If your Apple developer account has **two-step verification** or **two-step authentication** enabled, you will be asked to enter your verification code in a popup and click **Save** again. Note that the length of the session depends on Apple and is limited to approximately a day. When the session expires, you will need to verify the login again. Simply click **Save** in the iOS code signing settings to display the verification popup.
@@ -55,7 +55,7 @@ If your Apple developer account has **two-step verification** or **two-step auth
 
 After you have successfully established connection to Apple developer portal, you will have the option to specify the **Developer portal team**. Make sure to click **Save** again to save the changes.
 
-{{< figure size="medium" src="/uploads/team_selection_edited.png" caption="Apple developer portal team selection" >}}
+{{< figure size="medium" src="../uploads/team_selection_edited.png" caption="Apple developer portal team selection" >}}
 
 As the next step, you can configure publishing to App Store Connect to distribute your signed app to testers or submit it for review.
 
@@ -69,7 +69,7 @@ With the manual code signing method, you are required to upload the signing cert
 4. Upload your signing certificate (in `.p12` format) and provisioning profile (`.mobileprovision`). Note that if your app contains app extensions, you are required to upload an additional provisioning profile for each extension.
 5. Click **Save** to finish the setup.
 
-{{< figure size="medium" src="/uploads/2019/03/manual_code_signing.PNG" caption="Manual code signing setup" >}}
+{{< figure size="medium" src="../uploads/2019/03/manual_code_signing.PNG" caption="Manual code signing setup" >}}
 
 Codemagic will now create a signed `.ipa` file with every build. Note that you must also set up publishing to App Store Connect to distribute the app to the App Store.
 
@@ -83,7 +83,7 @@ To export the signing certificate:
 2. Select **My Certificates** in the **Category** submenu on the left sidebar. The name of the certificate should start with **iPhone Developer** or **iPhone Distribution**.
 3. Select **File** > **Export Items** from the OSX menu bar.
 4. Save the certificate when prompted. Be sure to leave the file format filled as **Personal Information Exchange (.p12)** because saving the certificate with the **.cer** extension will not include your private key.
-   {{< figure size="medium" src="/uploads/2019/03/keychain_certificate.PNG" caption="" >}}
+   {{< figure size="medium" src="../uploads/2019/03/keychain_certificate.PNG" caption="" >}}
 5. Enter the certificate export password when prompted (optional).
 
 You can manage your distribution profiles in [Apple Developer portal](https://developer.apple.com/account/ios/profile/profileList.action).
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 8c44fcf..323ef80 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -9,11 +9,11 @@ weight: 4
 
 You can add apps from other public or private Git-based repositories. This includes repositories requiring **SSH key authentication**. Click **Add app from custom source** on the Applications page to get started.
 
-{{< figure size="medium" src="/uploads/2019/03/add_app_light-1.PNG" caption="" >}}
+{{< figure size="medium" src="../uploads/2019/03/add_app_light-1.PNG" caption="" >}}
 
 Then, fill in all the required fields.
 
-{{< figure size="medium" src="/uploads/2019/03/app_using_ssh_authentication.PNG" caption="" >}}
+{{< figure size="medium" src="../uploads/2019/03/app_using_ssh_authentication.PNG" caption="" >}}
 
 1. Enter the checkout URL of the repository.
 2. If a private key is required to access the repository or any private submodules in it, upload the **SSH private key** file.
diff --git a/content/getting-started/creating-workflows.md b/content/getting-started/creating-workflows.md
index 728312b..01abff5 100644
--- a/content/getting-started/creating-workflows.md
+++ b/content/getting-started/creating-workflows.md
@@ -15,13 +15,13 @@ You can create new workflows by duplicating existing ones. In app settings, clic
 
 This creates a new workflow with the exact same settings as you had configured for the original workflow. All your environment variables and scripts, build settings and signing files will be duplicated into the new workflow.
 
-![](/uploads/duplicate_created.PNG)
+![](../uploads/duplicate_created.PNG)
 
 You can then click on the name of the workflow to edit it and configure the workflow settings as you like. Now that you have more than one workflow, you can also delete workflows.
 
 To switch between workflows, click on the workflow name below the app name in app settings.
 
-![](/uploads/select_workflow_ed.png)
+![](../uploads/select_workflow_ed.png)
 
 {{% notebox %}}
 Note that while your workflows started out as duplicates, they become separate entities once created. Any changes made to one workflow won't affect any of the others.
diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
index 1de6542..2f64d73 100644
--- a/content/getting-started/getting-started.md
+++ b/content/getting-started/getting-started.md
@@ -8,14 +8,14 @@ weight: 2
 
 Upon login, Codemagic will automatically display the list of apps in your repository. Select a Flutter app and start the very first build with preconfigured defaults by clicking **Start your first build**.
 
-{{< figure size="" src="/uploads/2019/07/app_dashboard.PNG" caption="Codemagic Applications page" >}}
+{{< figure size="" src="../uploads/2019/07/app_dashboard.PNG" caption="Codemagic Applications page" >}}
 
 Codemagic will then fetch your app sources, create **webhooks** for automatic building and run a debug build of your master branch for both iOS and Android using the latest stable version of Flutter. If you have any **tests** in your project, these will be run too. All the while, you can monitor the build progress step by step right in your browser and expand each step for more details.
 
-{{< figure size="" src="/uploads/2019/07/build_log_publishing.png" caption="Overview of a successful build" >}}
+{{< figure size="" src="../uploads/2019/07/build_log_publishing.png" caption="Overview of a successful build" >}}
 
 After the build has finished successfully, you will immediately have **artifacts** available for download which you will also receive on the email that was configured for the app repository.
 
 You can then continue to customize how you want Codemagic to build, test and publish your app in **App settings**.
 
-{{< figure size="" src="/uploads/2019/07/app_settings.png" caption="App settings page" >}}
+{{< figure size="" src="../uploads/2019/07/app_settings.png" caption="App settings page" >}}
diff --git a/content/getting-started/multiple-projects-in-one-repository.md b/content/getting-started/multiple-projects-in-one-repository.md
index ca1d126..7c93cb5 100644
--- a/content/getting-started/multiple-projects-in-one-repository.md
+++ b/content/getting-started/multiple-projects-in-one-repository.md
@@ -10,4 +10,4 @@ Codemagic is able to detect multiple projects in a repository provided that each
 
 The first build is run for the project whose `pubspec.yaml` file was found first. After the first build, you can select the project for building from the **Project file path** dropdown in the Build section of app settings.
 
-{{< figure size="medium" src="/uploads/2019/03/multiple_projects_dark.png" caption="Select which project to build" >}}
+{{< figure size="medium" src="../uploads/2019/03/multiple_projects_dark.png" caption="Select which project to build" >}}
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index f1c111c..fd462d3 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -26,7 +26,7 @@ It is also worth pointing out the necessity for each uploaded binary to have a *
 3. Select your app and click **App Information**.
 4. You can then see your app’s identifier (confusingly named **Apple ID**) in the **General Information** section.
 
-![Finding your app's unique identifier](/uploads/2019/03/app store connect_app ID.png)
+![Finding your app's unique identifier](../uploads/2019/03/app store connect_app ID.png)
 
 ## Setting up publishing to App Store Connect on Codemagic
 
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index 2483d29..5343aa6 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -9,7 +9,7 @@ weight: 3
 You can publish your web app to a custom subdomain of `codemagic.app` for easy access.
 
 1. Go to **App settings > Publish > Codemagic Static Pages** to configure publishing to Codemagic Static Pages.  
-   ![](/uploads/2019/05/staticpages_conf.png)
+   ![](../uploads/2019/05/staticpages_conf.png)
 2. Choose a subdomain name and enter it in the **Web page subdomain** field. By default, we suggest your app name as the subdomain name.
 3. Check **Publish artifacts even if tests fail** to publish the build even when one or more tests fail. Leaving this option unchecked will publish only successful builds that pass the tests, if any.
 4. Click **Save** to finish the setup. On saving, we'll check the availability of the subdomain name and inform you if the name is already taken.
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index 825d3ea..07494be 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -23,7 +23,7 @@ Before releasing the app to Google Play, make sure that it meets the [Google Pla
 2. Click on the **Create Service Account** button and follow the link to Google API Console.
 3. In Google API Console, click on the **Create Service Account** button.
 4. Fill in **Service account name** and choose Service Accounts > Service Account User from the Role dropdown. Make sure to check **Furnish a new private key** and select **JSON** as key type.
-   ![](/uploads/2019/03/create service account 2018_marked.png)
+   ![](../uploads/2019/03/create service account 2018_marked.png)
 5. Click **Create** and download the created JSON credentials file. You will need this file to set up publishing to Google Play on Codemagic.
 6. Back in Google Play Console, click **Done** to close the dialog.
 7. Find the new service account and click **Grant Access**.
@@ -48,4 +48,4 @@ The very first version of the app must be added to Google Play manually. You can
 5. If you want to publish the APK even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
 6. Click **Save** to finish the setup.
 
-{{< figure size="medium" src="/uploads/2019/03/google play.png" caption="" >}}
+{{< figure size="medium" src="../uploads/2019/03/google play.png" caption="" >}}
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index f46c1fa..3f28e3d 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -28,13 +28,13 @@ If your Flutter project is in a subdirectory of the repository, Codemagic cannot
 
 In App settings > Test, you will see the **Flutter test target** and **Flutter drive target** fields displayed if the respective tests are detected. You can specify an exact target to run a specific test.
 
-![](/uploads/2019/04/doc_test_target.PNG)
+![](../uploads/2019/04/doc_test_target.PNG)
 
 ### Selecting simulator or emulator
 
 By default, Codemagic runs your Flutter Driver tests on iOS simulator. You can also run Flutter Driver tests on Android emulator by selecting the respective option in the UI.
 
-![](/uploads/2019/04/doc_emulator_simulator.PNG)
+![](../uploads/2019/04/doc_emulator_simulator.PNG)
 
 {{% notebox %}}
 
diff --git a/content/testing/running-tests-only.md b/content/testing/running-tests-only.md
index ca6d03f..30793f6 100644
--- a/content/testing/running-tests-only.md
+++ b/content/testing/running-tests-only.md
@@ -8,6 +8,6 @@ weight: 4
 
 You can have a workflow to run tests without building the app. In App settings > Build > Build for platforms, select **Run tests only**. Codemagic will then build the workflow until the testing step and skip building for Android or iOS.
 
-![](/uploads/2019/05/doc_run_tests_only_new.PNG)
+![](../uploads/2019/05/doc_run_tests_only_new.PNG)
 
 If tests fail, the status of the build will be "failed" and you'll receive an email about failing tests. If you have publishing to Slack configured, you'll receive notifications on build status updates.
diff --git a/content/testing/static-code-analysis.md b/content/testing/static-code-analysis.md
index a2f57e7..c3d1c7b 100644
--- a/content/testing/static-code-analysis.md
+++ b/content/testing/static-code-analysis.md
@@ -8,10 +8,10 @@ weight: 2
 
 Test your code with `flutter analyze` to find possible mistakes. You can read more about this feature in [Dart documentation](https://dart.dev/guides/language/analysis-options). By default, static code analysis is disabled and has to be enabled in **App settings > Test** by checking the **Enable Flutter analyzer** option.
 
-{{< figure size="medium" src="/uploads/2019/05/flutter_analyze.PNG" caption="" >}}
+{{< figure size="medium" src="../uploads/2019/05/flutter_analyze.PNG" caption="" >}}
 
 To run `flutter analyze`, Codemagic specifies the `analyze` command in the **Flutter analyze arguments** field. You can pass additional arguments to customize static code analysis. For example, adding `--write=analyzer-output.txt` prints the results of static code analysis into a text file. If you check **Stop build if tests fail**, the build will fail in the case any issues are detected during static code analysis.
 
 When enabled, `flutter analyze` will be run with each build. You can see the results and the logs of the analysis under the **Running tests** step in build overview.
 
-{{< figure size="medium" src="/uploads/2019/05/flutter_analyze_output.png" caption="" >}}
+{{< figure size="medium" src="../uploads/2019/05/flutter_analyze_output.png" caption="" >}}
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index dfd17e9..722e86b 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -24,9 +24,9 @@ Establishing an SSH connection to the virtual machine is possible only for manua
 
 1. In your app settings, click **Start new build**.
 2. In the **Specify build configuration** popup, check **Enable SSH access** and start the build.
-   {{< figure size="medium" src="/uploads/2019/07/enable_ssh_access.PNG" caption="" >}}
+   {{< figure size="medium" src="../uploads/2019/07/enable_ssh_access.PNG" caption="" >}}
 3. When the build has started, you will shortly see additional instructions for establishing SSH access. Run the automatically generated script in the terminal before the build finishes to establish an SSH connection to the machine running the build.
-   {{< figure size="medium" src="/uploads/2019/07/ssh_access_script.PNG" caption="" >}}
+   {{< figure size="medium" src="../uploads/2019/07/ssh_access_script.PNG" caption="" >}}
 
 If you don't run the script before the build finishes, the unique SSH key expires and can't be used anymore. A new script will be generated every time you run the build, so previous scripts cannot be reused.
 
diff --git a/layouts/partials/content.html b/layouts/partials/content.html
index 7868613..288fd3b 100644
--- a/layouts/partials/content.html
+++ b/layouts/partials/content.html
@@ -3,10 +3,10 @@
 {{ $out := "" }}
 {{ $content := . }}
 
-<!-- prefix all absolute (starting with slash) with language prefix (if applicable) -->
-{{ $urlPrefix := "/" | relLangURL }}
-{{ $in = "<img ([^>]*) ?src=\"/([^\"]+)\" ?([^/>]*) */?>" }}
-{{ $out = $urlPrefix | printf "<img $1 src=\"%s$2\" $3 />" }}
+<!-- prefix all relative images to take into account url prettification
+  which adds one extra level of nesting in rendered site -->
+{{ $in = "<img ([^>]*) ?src=\"../([^\"]+)\" ?([^/>]*) */?>" }}
+{{ $out = "<img $1 src=\"../../$2\" $3 />" }}
 {{ $content = $content | replaceRE $in $out | safeHTML }}
 
 <!-- replace all single images paragraph in content with figures, using alt for caption -->
diff --git a/layouts/shortcodes/video-gif.ace b/layouts/shortcodes/video-gif.ace
index d15570a..78e49cd 100644
--- a/layouts/shortcodes/video-gif.ace
+++ b/layouts/shortcodes/video-gif.ace
@@ -6,7 +6,8 @@
 {{ $caption := .Get "caption" }}
 {{ $align := .Get "align" }}
 
-{{ $path := strings.TrimPrefix "/uploads/" $src }}
+{{ $path := strings.TrimPrefix "../uploads/" $src }}
+{{ $path = strings.TrimPrefix "/uploads/" $src }}
 {{ $i := (site.GetPage "section" "uploads").Resources.GetMatch $path }}
 
 {{ if $i }}

commit 01847e7e572d07c440a36cda3844d73ce2d6a8a1
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 18:44:16 2019 +0300

    test

diff --git a/content/getting-started/creating-workflows.md b/content/getting-started/creating-workflows.md
index a308c82..728312b 100644
--- a/content/getting-started/creating-workflows.md
+++ b/content/getting-started/creating-workflows.md
@@ -11,7 +11,7 @@ Have full control over your CI/CD pipeline with workflows. A workflow is a set o
 
 You can create new workflows by duplicating existing ones. In app settings, click **Duplicate workflow** under Workflow settings.
 
-![](../../uploads/duplicate_ed.png)
+![](../uploads/duplicate_ed.png)
 
 This creates a new workflow with the exact same settings as you had configured for the original workflow. All your environment variables and scripts, build settings and signing files will be duplicated into the new workflow.
 

commit cfc66d3f02e062ed5fdebeba78d78ef4cd07bbf1
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 18:42:15 2019 +0300

    remove unneeded templates

diff --git a/config.yml b/config.yml
index 19d0e03..7f24bd7 100644
--- a/config.yml
+++ b/config.yml
@@ -54,8 +54,6 @@ mediaTypes:
       - mp4
 
 title: Codemagic Docs
-taxonomies:
-  category: categories
 disableKinds:
   - taxonomy
   - taxonomyTerm
diff --git a/content/getting-started/creating-workflows.md b/content/getting-started/creating-workflows.md
index efb8a18..a308c82 100644
--- a/content/getting-started/creating-workflows.md
+++ b/content/getting-started/creating-workflows.md
@@ -11,7 +11,7 @@ Have full control over your CI/CD pipeline with workflows. A workflow is a set o
 
 You can create new workflows by duplicating existing ones. In app settings, click **Duplicate workflow** under Workflow settings.
 
-![](/uploads/duplicate_ed.png)
+![](../../uploads/duplicate_ed.png)
 
 This creates a new workflow with the exact same settings as you had configured for the original workflow. All your environment variables and scripts, build settings and signing files will be duplicated into the new workflow.
 
diff --git a/layouts/taxonomy/taxonomy.ace b/layouts/taxonomy/taxonomy.ace
deleted file mode 100644
index a6e7d70..0000000
--- a/layouts/taxonomy/taxonomy.ace
+++ /dev/null
@@ -1,2 +0,0 @@
-= content main
-  p tax
diff --git a/layouts/taxonomy/terms.ace b/layouts/taxonomy/terms.ace
deleted file mode 100644
index 3ba0102..0000000
--- a/layouts/taxonomy/terms.ace
+++ /dev/null
@@ -1,12 +0,0 @@
-= content main
-  {{ .Content }}
-  ul
-    {{ $type := .Type }}
-    {{ range $name, $pages := .Data.Terms.ByCount }}
-      {{ $name := .Name }}
-      {{ $count := .Count }}
-      {{ with site.GetPage (printf "/%s/%s" $type ($name | urlize)) }}
-        li
-          a href={{ .RelPermalink }} {{ $name }} ({{ $count }})
-      {{ end }}
-    {{ end }}

commit 7dfd2f4e609929990b9dce1cc53954644501f1d9
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 18:34:04 2019 +0300

    simplify menu logic

diff --git a/config.yml b/config.yml
index 1a9d4af..19d0e03 100644
--- a/config.yml
+++ b/config.yml
@@ -23,6 +23,31 @@ buildDrafts: true
 defaultContentLanguage: en
 disable404: true
 
+sectionPagesMenu: main
+menu:
+  main:
+    - identifier: getting-started
+      name: Getting started with Codemagic CI/CD
+      weight: 1
+    - identifier: building
+      name: Build configuration
+      weight: 2
+    - identifier: testing
+      name: Testing
+      weight: 3
+    - identifier: code-signing
+      name: Code signing
+      weight: 4
+    - identifier: publishing
+      name: Publishing
+      weight: 5
+    - identifier: custom-scripts
+      name: Custom script examples
+      weight: 6
+    - identifier: troubleshooting
+      name: Troubleshooting
+      weight: 7
+
 mediaTypes:
   video/mp4:
     suffixes:
@@ -35,5 +60,3 @@ disableKinds:
   - taxonomy
   - taxonomyTerm
   - section
-
-  
\ No newline at end of file
diff --git a/content/_index.md b/content/_index.md
index 4966ae5..61c9fe6 100644
--- a/content/_index.md
+++ b/content/_index.md
@@ -1,14 +1,4 @@
 ---
-category_names:
-  - Getting started with Codemagic CI/CD
-  - Build configuration
-  - Testing
-  - Code signing
-  - Publishing
-  - Custom script examples
-  - Troubleshooting
-  - Working in teams
-  - User settings
 description:
   Browse the Codemagic documentation for a quick overview of how to configure
   Codemagic to get the most out of it.
diff --git a/layouts/partials/sidebar.ace b/layouts/partials/sidebar.ace
index d280f30..5b6b99f 100644
--- a/layouts/partials/sidebar.ace
+++ b/layouts/partials/sidebar.ace
@@ -1,19 +1,16 @@
 nav#docs-menu
   .search.search--sidebar
-    input.search__input type="text" placeholder="Search"
+    input.search__input type=text placeholder="Search"
     .search__icon.search__icon--search.fas.fa-search
     .search__icon.search__icon--clear.fas.fa-times
-  {{ range $name := site.Home.Param "category_names" }}
-    {{ $categoryArticles := where site.Pages ".Params.categories" "intersect" (slice $name) }}
 
-    {{ with $categoryArticles }}
-      {{ $isInCategory := in $.Params.categories $name }}
-      li class={{ if $isInCategory }}open{{end}}
-        .category-name {{ $name }}
+  ul
+    {{ $currentPage := . }}
+    {{ range .Site.Menus.main }}
+      li class={{ if $currentPage.HasMenuCurrent "main" . }}open{{ end }}
+        .category-name {{ .Name }}
         .category-posts
-          {{ range $categoryArticles }}
-            {{ $isActivePage := eq $.RelPermalink .RelPermalink }}
-            a class={{ if $isActivePage }}active{{ end }} href={{ .RelPermalink }} {{ .Title }}
+          {{ range where site.Pages "Section" .Identifier }}
+            a class={{ if eq $currentPage .}}active{{ end }} href={{ .RelPermalink }} {{ .Title }}
           {{ end }}
     {{ end }}
-  {{ end }}

commit 902e6b9cb4335ab8c1eb7dbd2b63881b94035a5d
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 18:00:21 2019 +0300

    remove useless front-matter

diff --git a/config.yml b/config.yml
index 4caf63f..1a9d4af 100644
--- a/config.yml
+++ b/config.yml
@@ -35,3 +35,5 @@ disableKinds:
   - taxonomy
   - taxonomyTerm
   - section
+
+  
\ No newline at end of file
diff --git a/content/_index.md b/content/_index.md
index 47225a5..4966ae5 100644
--- a/content/_index.md
+++ b/content/_index.md
@@ -9,14 +9,10 @@ category_names:
   - Troubleshooting
   - Working in teams
   - User settings
-category_values:
-  - name: ''
-    title: ''
 description:
   Browse the Codemagic documentation for a quick overview of how to configure
   Codemagic to get the most out of it.
 title: Codemagic Documentation
-weight: ''
 ---
 
 Welcome to the Codemagic documentation site!
diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 00776c6..04171da 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -2,9 +2,6 @@
 categories:
   - Build configuration
 date: '2019-03-31T15:09:08+03:00'
-menu:
-  docs_sidebar:
-    weight: 1
 title: Automatic build triggering
 weight: 1
 ---
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 7e901c0..3bcf600 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -2,9 +2,6 @@
 categories:
   - Build configuration
 date: '2019-04-27T20:24:35+03:00'
-menu:
-  docs_sidebar:
-    weight: 1
 title: Build versioning
 weight: 7
 ---
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 46692e3..0e5298c 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -2,9 +2,6 @@
 categories:
   - Build configuration
 date: '2019-03-31T15:59:20+03:00'
-menu:
-  docs_sidebar:
-    weight: 1
 title: Building Android app bundles
 weight: 3
 ---
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index 2685332..c279280 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -2,9 +2,6 @@
 categories:
   - Build configuration
 description: See how to build a Flutter web app with Codemagic.
-menu:
-  docs_sidebar:
-    weight: 1
 title: Building for the web
 weight: 5
 ---
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index 1c8471e..3f26668 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -2,9 +2,6 @@
 categories:
   - Build configuration
 description: Store your dependencies on Codemagic for a faster build time.
-menu:
-  docs_sidebar:
-    weight: 1
 title: Dependency caching
 weight: 6
 ---
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 34601bf..e65a2f7 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -6,9 +6,6 @@ description:
   Environment variables are useful for storing information that you do
   not want to store in the repository. You can also use Codemagic read-only environment
   variables to customize your builds.
-menu:
-  docs_sidebar:
-    weight: 1
 title: Environment variables
 weight: 2
 ---
diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
index 5d8e187..16a2265 100644
--- a/content/building/specifying-custom-ios-scheme.md
+++ b/content/building/specifying-custom-ios-scheme.md
@@ -1,10 +1,6 @@
 ---
 categories:
   - Build configuration
-description: 'Build '
-menu:
-  docs_sidebar:
-    weight: 1
 title: Specifying custom iOS scheme
 weight: 4
 ---
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 283aa1b..6d08386 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -3,9 +3,6 @@ categories:
   - Code signing
 date: '2019-03-10T22:52:07+02:00'
 description: Sign your Android app for publishing to Google Play Store
-menu:
-  docs_sidebar:
-    weight: ''
 title: Android code signing
 weight: 2
 ---
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index ec7ea6b..5be083d 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -3,9 +3,6 @@ categories:
   - Code signing
 date: '2019-03-10T21:29:39+02:00'
 description: Sign Flutter app for iOS
-menu:
-  docs_sidebar:
-    weight: ''
 title: iOS code signing
 weight: 1
 ---
diff --git a/content/custom-scripts/access-private-git-submodules.md b/content/custom-scripts/access-private-git-submodules.md
index 8d7c9de..22b4942 100644
--- a/content/custom-scripts/access-private-git-submodules.md
+++ b/content/custom-scripts/access-private-git-submodules.md
@@ -3,9 +3,6 @@ categories:
   - Custom script examples
 date: '2019-04-09T17:40:12+03:00'
 description: Access private Git submodules in Codemagic
-menu:
-  docs_sidebar:
-    weight: 1
 title: Access private Git submodules
 weight: 1
 ---
diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index b46073a..0d6a305 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -3,9 +3,6 @@ categories:
   - Custom script examples
 date: '2019-04-07T12:57:59+03:00'
 description: Create a Git tag referencing your app version
-menu:
-  docs_sidebar:
-    weight: 1
 title: Add a Git tag with app version
 weight: 2
 ---
diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index ea86457..d8c41ff 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -3,9 +3,6 @@ categories:
   - Custom script examples
 date: '2019-04-07T13:01:10+03:00'
 description: Load your Firebase configuration files to Codemagic
-menu:
-  docs_sidebar:
-    weight: 1
 title: Load Firebase configuration
 weight: 5
 ---
diff --git a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
index 0c0bad2..cb85b3f 100644
--- a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
+++ b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
@@ -2,9 +2,6 @@
 categories:
   - Custom script examples
 description: You can use custom scripts to publish app artifacts to external services.
-menu:
-  docs_sidebar:
-    weight: 1
 title: Publish build artifacts to Amazon S3
 weight: 3
 ---
diff --git a/content/custom-scripts/run-static-code-analysis.md b/content/custom-scripts/run-static-code-analysis.md
index 83ed6e6..35aef47 100644
--- a/content/custom-scripts/run-static-code-analysis.md
+++ b/content/custom-scripts/run-static-code-analysis.md
@@ -3,9 +3,6 @@ categories:
   - Custom script examples
 date: '2019-03-31T15:25:27+03:00'
 draft: true
-menu:
-  docs_sidebar:
-    weight: 1
 title: Run static code analysis
 weight: ''
 ---
diff --git a/content/custom-scripts/upload-custom-artifacts.md b/content/custom-scripts/upload-custom-artifacts.md
index 2374c85..6a25ead 100644
--- a/content/custom-scripts/upload-custom-artifacts.md
+++ b/content/custom-scripts/upload-custom-artifacts.md
@@ -3,9 +3,6 @@ categories:
   - Custom script examples
 date: '2019-04-07T12:53:30+03:00'
 description: Upload files to be included in your build artifacts ZIP file
-menu:
-  docs_sidebar:
-    weight: 1
 title: Upload custom artifacts
 weight: 4
 ---
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 396347b..8c44fcf 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -3,9 +3,6 @@ categories:
   - Getting started with Codemagic CI/CD
 date: '2019-03-21T17:03:45+02:00'
 description: Add your Flutter app wherever it is hosted
-menu:
-  docs_sidebar:
-    weight: 1
 title: Adding apps from custom sources
 weight: 4
 ---
diff --git a/content/getting-started/automatic-language-detection.md b/content/getting-started/automatic-language-detection.md
index 596aa7b..0007582 100644
--- a/content/getting-started/automatic-language-detection.md
+++ b/content/getting-started/automatic-language-detection.md
@@ -2,9 +2,6 @@
 categories:
   - Getting started with Codemagic CI/CD
 date: '2019-03-21T17:08:18+02:00'
-menu:
-  docs_sidebar:
-    weight: 1
 title: Automatic language detection
 weight: 6
 ---
diff --git a/content/getting-started/creating-workflows.md b/content/getting-started/creating-workflows.md
index 21c5477..efb8a18 100644
--- a/content/getting-started/creating-workflows.md
+++ b/content/getting-started/creating-workflows.md
@@ -3,9 +3,6 @@ categories:
   - Getting started with Codemagic CI/CD
 date: '2019-03-26T16:00:30+02:00'
 description: Manage multiple workflows to fully customize your CI/CD pipeline
-menu:
-  docs_sidebar:
-    weight: 1
 title: Creating workflows
 weight: 3
 ---
diff --git a/content/getting-started/flutter-project-requirements.md b/content/getting-started/flutter-project-requirements.md
index d04daf5..fabf0b5 100644
--- a/content/getting-started/flutter-project-requirements.md
+++ b/content/getting-started/flutter-project-requirements.md
@@ -5,9 +5,6 @@ date: '2019-03-10T22:47:33+02:00'
 description:
   Make sure your Flutter project is ready for continuous integration (CI)
   and continuous delivery (CD)
-menu:
-  docs_sidebar:
-    weight: 1
 title: Flutter project requirements
 weight: 7
 ---
diff --git a/content/getting-started/multiple-projects-in-one-repository.md b/content/getting-started/multiple-projects-in-one-repository.md
index 22a3500..ca1d126 100644
--- a/content/getting-started/multiple-projects-in-one-repository.md
+++ b/content/getting-started/multiple-projects-in-one-repository.md
@@ -2,9 +2,6 @@
 categories:
   - Getting started with Codemagic CI/CD
 date: '2019-03-21T17:06:39+02:00'
-menu:
-  docs_sidebar:
-    weight: 1
 title: Multiple projects in one repository
 weight: 5
 ---
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 601dbcf..f1c111c 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -3,9 +3,6 @@ categories:
   - Publishing
 date: '2019-03-11T15:58:01+02:00'
 description: Deploy the Flutter app to App Store and TestFlight
-menu:
-  docs_sidebar:
-    weight: 1
 title: Publishing to App Store
 weight: 1
 ---
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index 3f43f65..2483d29 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -2,9 +2,6 @@
 categories:
   - Publishing
 description: Publish each new version of your web app to a custom subdomain.
-menu:
-  docs_sidebar:
-    weight: 1
 title: Publishing to Codemagic Static Pages
 weight: 3
 ---
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index 9c48714..825d3ea 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -3,9 +3,6 @@ categories:
   - Publishing
 date: '2019-03-14T11:29:36+02:00'
 description: Deploy the Flutter app to Google Play
-menu:
-  docs_sidebar:
-    weight: 1
 title: Publishing to Google Play
 weight: 2
 ---
diff --git a/content/testing/beta-testing-with-testmagic.md b/content/testing/beta-testing-with-testmagic.md
index 8df6df8..9e6f0a3 100644
--- a/content/testing/beta-testing-with-testmagic.md
+++ b/content/testing/beta-testing-with-testmagic.md
@@ -2,9 +2,6 @@
 categories:
   - Testing
 description: View, test and distribute your Codemagic builds with Testmagic
-menu:
-  docs_sidebar:
-    weight: 1
 title: Beta testing with Testmagic
 weight: 5
 ---
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index 05ad160..f46c1fa 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -4,9 +4,6 @@ categories:
 description:
   Automatically run unit, widget and integration tests every time you build
   your Flutter app.
-menu:
-  docs_sidebar:
-    weight: 1
 title: Running automated tests
 weight: 1
 ---
diff --git a/content/testing/running-tests-only.md b/content/testing/running-tests-only.md
index 77f22bf..ca6d03f 100644
--- a/content/testing/running-tests-only.md
+++ b/content/testing/running-tests-only.md
@@ -2,9 +2,6 @@
 categories:
   - Testing
 description: Run tests only without building the app.
-menu:
-  docs_sidebar:
-    weight: 1
 title: Running tests only
 weight: 4
 ---
diff --git a/content/testing/static-code-analysis.md b/content/testing/static-code-analysis.md
index 38153eb..a2f57e7 100644
--- a/content/testing/static-code-analysis.md
+++ b/content/testing/static-code-analysis.md
@@ -2,9 +2,6 @@
 categories:
   - Testing
 description: Test your code with flutter analyze.
-menu:
-  docs_sidebar:
-    weight: 1
 title: Static code analysis
 weight: 2
 ---
diff --git a/content/testing/testing-widgets.md b/content/testing/testing-widgets.md
index f9d689e..2d22c73 100644
--- a/content/testing/testing-widgets.md
+++ b/content/testing/testing-widgets.md
@@ -4,9 +4,6 @@ categories:
 description:
   Instead of building the entire app, you can run tests on your widgets
   only.
-menu:
-  docs_sidebar:
-    weight: 1
 title: Testing widgets
 weight: 3
 ---
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 142e095..dfd17e9 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -4,9 +4,6 @@ categories:
 description:
   'Establish SSH access to the builder virtual machine to inspect your
   build.  '
-menu:
-  docs_sidebar:
-    weight: 1
 title: Accessing virtual machine via SSH
 weight: 1
 ---
diff --git a/content/troubleshooting/codemagic-status-page.md b/content/troubleshooting/codemagic-status-page.md
index 8c61a9d..e81ca37 100644
--- a/content/troubleshooting/codemagic-status-page.md
+++ b/content/troubleshooting/codemagic-status-page.md
@@ -2,9 +2,6 @@
 categories:
   - Troubleshooting
 description: Get latest information about the status of Codemagic CI/CD.
-menu:
-  docs_sidebar:
-    weight: 1
 title: Codemagic status page
 weight: 2
 ---
diff --git a/layouts/partials/sidebar.ace b/layouts/partials/sidebar.ace
index bd12752..d280f30 100644
--- a/layouts/partials/sidebar.ace
+++ b/layouts/partials/sidebar.ace
@@ -9,11 +9,7 @@ nav#docs-menu
     {{ with $categoryArticles }}
       {{ $isInCategory := in $.Params.categories $name }}
       li class={{ if $isInCategory }}open{{end}}
-        {{ $title := $name }}
-        {{ with $data := index (where (site.Home.Param "category_values") "name" $name) 0 }}
-          {{ $title := $data.title }}
-        {{ end }}
-        .category-name {{ $title }}
+        .category-name {{ $name }}
         .category-posts
           {{ range $categoryArticles }}
             {{ $isActivePage := eq $.RelPermalink .RelPermalink }}

commit 3671dbfd431be90bd3e62a208a3e9e228f21ac7c
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 17:50:21 2019 +0300

    remove unneeded front-matter

diff --git a/config.yml b/config.yml
index 00e21fc..4caf63f 100644
--- a/config.yml
+++ b/config.yml
@@ -7,46 +7,10 @@ params:
   twitterShareHandle: codemagicio
   facebookAuthorHandle: codemagicio
   appLoginLink: https://codemagic.io/
-  defaultFacebookImage: https://codemagic.io/img/facebook.png
-  defaultTwitterImage: https://codemagic.io/img/twitter.png
+  defaultFacebookImage: /uploads/2019/01/default-thumb.png
+  defaultTwitterImage: /uploads/2019/02/twitter.png
   headerLinkTitle: Documentation
   locale: en_GB
-  imageSizing:
-    front-featured:
-      generated-widths:
-        - 470
-        - 940
-        - 1200
-      sizes-attr:
-        "(max-width: 530px) calc(100vw - 60px), (max-width: 1024px) calc((100vw
-        - 100px) * 0.8), (max-width: 1300px) calc((100vw - 100px) * 0.6), calc((1200px
-        - 100px) * 0.6)\n"
-    post-hero:
-      generated-widths:
-        - 470
-        - 940
-        - 1200
-      sizes-attr:
-        "(max-width: 530px) calc(100vw - 60px), (max-width: 1024px) calc(100vw
-        - 100px), 800px\n"
-    post-related:
-      generated-widths:
-        - 470
-        - 940
-        - 1200
-      sizes-attr:
-        "(max-width: 530px) calc(100vw - 60px), (max-width: 1024px) calc((100vw
-        - 100px) * 0.4), (max-width: 1300px) calc((100vw - 100px) / 3 - 40px), calc(1200px
-        / 3 - 40px)\n"
-    category-list:
-      generated-widths:
-        - 470
-        - 940
-        - 1200
-      sizes-attr:
-        "(max-width: 530px) calc(100vw - 60px), (max-width: 1024px) calc((100vw
-        - 100px) * 0.4), (max-width: 1300px) calc(((100vw - 100px) * 0.3333333) -
-        20px), calc(((1200px - 100px) * 0.3333333) - 20px)\n"
 imaging:
   resampleFilter: linear
   quality: 90
diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index 31097b6..00776c6 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -2,18 +2,10 @@
 categories:
   - Build configuration
 date: '2019-03-31T15:09:08+03:00'
-description: ''
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Automatic build triggering
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 1
 ---
 
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 8eea4d9..7e901c0 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -2,18 +2,10 @@
 categories:
   - Build configuration
 date: '2019-04-27T20:24:35+03:00'
-description: ''
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Build versioning
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 7
 ---
 
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 94c52f5..46692e3 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -2,18 +2,10 @@
 categories:
   - Build configuration
 date: '2019-03-31T15:59:20+03:00'
-description: ''
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Building Android app bundles
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 3
 ---
 
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index f2dca3e..2685332 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -2,17 +2,10 @@
 categories:
   - Build configuration
 description: See how to build a Flutter web app with Codemagic.
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Building for the web
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 5
 ---
 
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index fc15d2a..1c8471e 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -2,17 +2,10 @@
 categories:
   - Build configuration
 description: Store your dependencies on Codemagic for a faster build time.
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Dependency caching
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 6
 ---
 
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index c7c8c7b..34601bf 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -6,17 +6,10 @@ description:
   Environment variables are useful for storing information that you do
   not want to store in the repository. You can also use Codemagic read-only environment
   variables to customize your builds.
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Environment variables
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 2
 ---
 
diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
index 9f965d6..5d8e187 100644
--- a/content/building/specifying-custom-ios-scheme.md
+++ b/content/building/specifying-custom-ios-scheme.md
@@ -2,17 +2,10 @@
 categories:
   - Build configuration
 description: 'Build '
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Specifying custom iOS scheme
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 4
 ---
 
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 2ca009d..283aa1b 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -3,17 +3,10 @@ categories:
   - Code signing
 date: '2019-03-10T22:52:07+02:00'
 description: Sign your Android app for publishing to Google Play Store
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: ''
-thumbnail: ''
 title: Android code signing
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 2
 ---
 
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 9f9993f..ec7ea6b 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -3,17 +3,10 @@ categories:
   - Code signing
 date: '2019-03-10T21:29:39+02:00'
 description: Sign Flutter app for iOS
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: ''
-thumbnail: ''
 title: iOS code signing
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 1
 ---
 
diff --git a/content/custom-scripts/access-private-git-submodules.md b/content/custom-scripts/access-private-git-submodules.md
index 127b724..8d7c9de 100644
--- a/content/custom-scripts/access-private-git-submodules.md
+++ b/content/custom-scripts/access-private-git-submodules.md
@@ -3,17 +3,10 @@ categories:
   - Custom script examples
 date: '2019-04-09T17:40:12+03:00'
 description: Access private Git submodules in Codemagic
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Access private Git submodules
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 1
 ---
 
diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index 8d1a3bf..b46073a 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -3,17 +3,10 @@ categories:
   - Custom script examples
 date: '2019-04-07T12:57:59+03:00'
 description: Create a Git tag referencing your app version
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Add a Git tag with app version
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 2
 ---
 
diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index 015e94d..ea86457 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -3,17 +3,10 @@ categories:
   - Custom script examples
 date: '2019-04-07T13:01:10+03:00'
 description: Load your Firebase configuration files to Codemagic
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Load Firebase configuration
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 5
 ---
 
diff --git a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
index 737223a..0c0bad2 100644
--- a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
+++ b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
@@ -2,17 +2,10 @@
 categories:
   - Custom script examples
 description: You can use custom scripts to publish app artifacts to external services.
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Publish build artifacts to Amazon S3
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 3
 ---
 
diff --git a/content/custom-scripts/run-static-code-analysis.md b/content/custom-scripts/run-static-code-analysis.md
index 919e1a8..83ed6e6 100644
--- a/content/custom-scripts/run-static-code-analysis.md
+++ b/content/custom-scripts/run-static-code-analysis.md
@@ -2,19 +2,11 @@
 categories:
   - Custom script examples
 date: '2019-03-31T15:25:27+03:00'
-description: ''
 draft: true
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Run static code analysis
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: ''
 ---
 
diff --git a/content/custom-scripts/upload-custom-artifacts.md b/content/custom-scripts/upload-custom-artifacts.md
index 1feb7a3..2374c85 100644
--- a/content/custom-scripts/upload-custom-artifacts.md
+++ b/content/custom-scripts/upload-custom-artifacts.md
@@ -3,17 +3,10 @@ categories:
   - Custom script examples
 date: '2019-04-07T12:53:30+03:00'
 description: Upload files to be included in your build artifacts ZIP file
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Upload custom artifacts
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 4
 ---
 
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index 4d22f13..396347b 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -3,17 +3,10 @@ categories:
   - Getting started with Codemagic CI/CD
 date: '2019-03-21T17:03:45+02:00'
 description: Add your Flutter app wherever it is hosted
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Adding apps from custom sources
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 4
 ---
 
diff --git a/content/getting-started/automatic-language-detection.md b/content/getting-started/automatic-language-detection.md
index 41ef53c..596aa7b 100644
--- a/content/getting-started/automatic-language-detection.md
+++ b/content/getting-started/automatic-language-detection.md
@@ -2,18 +2,10 @@
 categories:
   - Getting started with Codemagic CI/CD
 date: '2019-03-21T17:08:18+02:00'
-description: ''
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Automatic language detection
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 6
 ---
 
diff --git a/content/getting-started/build-artifacts.md b/content/getting-started/build-artifacts.md
index 911c518..9cef9ee 100644
--- a/content/getting-started/build-artifacts.md
+++ b/content/getting-started/build-artifacts.md
@@ -4,14 +4,7 @@ categories:
 date: '2019-02-14T13:35:35+02:00'
 description: What kind of artifacts are generated for Flutter apps on Codemagic CI/CD
 draft: true
-facebook_description: ''
-facebook_image: ''
-facebook_title: ''
-thumbnail: ''
 title: Build artifacts
-twitter_image: ''
-twitter_title: ''
-twitterDescription: ''
 weight: 3
 ---
 
diff --git a/content/getting-started/creating-workflows.md b/content/getting-started/creating-workflows.md
index 031ddb7..21c5477 100644
--- a/content/getting-started/creating-workflows.md
+++ b/content/getting-started/creating-workflows.md
@@ -3,17 +3,10 @@ categories:
   - Getting started with Codemagic CI/CD
 date: '2019-03-26T16:00:30+02:00'
 description: Manage multiple workflows to fully customize your CI/CD pipeline
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Creating workflows
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 3
 ---
 
diff --git a/content/getting-started/flutter-project-requirements.md b/content/getting-started/flutter-project-requirements.md
index cd3fe66..d04daf5 100644
--- a/content/getting-started/flutter-project-requirements.md
+++ b/content/getting-started/flutter-project-requirements.md
@@ -5,17 +5,10 @@ date: '2019-03-10T22:47:33+02:00'
 description:
   Make sure your Flutter project is ready for continuous integration (CI)
   and continuous delivery (CD)
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Flutter project requirements
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 7
 ---
 
diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
index 5b1e737..1de6542 100644
--- a/content/getting-started/getting-started.md
+++ b/content/getting-started/getting-started.md
@@ -2,14 +2,7 @@
 categories:
   - Getting started with Codemagic CI/CD
 description: Running the first build on Codemagic without any configuration
-facebook_description: ''
-facebook_image: ''
-facebook_title: ''
-thumbnail: ''
 title: Running the first build
-twitter_image: ''
-twitter_title: ''
-twitterDescription: ''
 weight: 2
 ---
 
diff --git a/content/getting-started/multiple-projects-in-one-repository.md b/content/getting-started/multiple-projects-in-one-repository.md
index 2456e9a..22a3500 100644
--- a/content/getting-started/multiple-projects-in-one-repository.md
+++ b/content/getting-started/multiple-projects-in-one-repository.md
@@ -2,18 +2,10 @@
 categories:
   - Getting started with Codemagic CI/CD
 date: '2019-03-21T17:06:39+02:00'
-description: ''
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Multiple projects in one repository
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 5
 ---
 
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index dac2c3a..58fa237 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -3,14 +3,7 @@ categories:
   - Getting started with Codemagic CI/CD
 date: '2019-03-10T16:28:20+02:00'
 description: Sign up for Codemagic CI/CD
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
-thumbnail: ''
 title: Signup
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 1
 ---
 
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index 3bb0719..601dbcf 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -3,17 +3,10 @@ categories:
   - Publishing
 date: '2019-03-11T15:58:01+02:00'
 description: Deploy the Flutter app to App Store and TestFlight
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Publishing to App Store
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 1
 ---
 
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index 4cf3541..3f43f65 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -2,17 +2,10 @@
 categories:
   - Publishing
 description: Publish each new version of your web app to a custom subdomain.
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Publishing to Codemagic Static Pages
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 3
 ---
 
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index a62cff4..9c48714 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -3,17 +3,10 @@ categories:
   - Publishing
 date: '2019-03-14T11:29:36+02:00'
 description: Deploy the Flutter app to Google Play
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Publishing to Google Play
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 2
 ---
 
diff --git a/content/testing/beta-testing-with-testmagic.md b/content/testing/beta-testing-with-testmagic.md
index 69ba0f7..8df6df8 100644
--- a/content/testing/beta-testing-with-testmagic.md
+++ b/content/testing/beta-testing-with-testmagic.md
@@ -2,17 +2,10 @@
 categories:
   - Testing
 description: View, test and distribute your Codemagic builds with Testmagic
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Beta testing with Testmagic
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 5
 ---
 
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index d7fc2aa..05ad160 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -4,17 +4,10 @@ categories:
 description:
   Automatically run unit, widget and integration tests every time you build
   your Flutter app.
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Running automated tests
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 1
 ---
 
diff --git a/content/testing/running-tests-only.md b/content/testing/running-tests-only.md
index ff2586f..77f22bf 100644
--- a/content/testing/running-tests-only.md
+++ b/content/testing/running-tests-only.md
@@ -2,17 +2,10 @@
 categories:
   - Testing
 description: Run tests only without building the app.
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Running tests only
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 4
 ---
 
diff --git a/content/testing/static-code-analysis.md b/content/testing/static-code-analysis.md
index c71e57b..38153eb 100644
--- a/content/testing/static-code-analysis.md
+++ b/content/testing/static-code-analysis.md
@@ -2,17 +2,10 @@
 categories:
   - Testing
 description: Test your code with flutter analyze.
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Static code analysis
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 2
 ---
 
diff --git a/content/testing/testing-widgets.md b/content/testing/testing-widgets.md
index 5aea99c..f9d689e 100644
--- a/content/testing/testing-widgets.md
+++ b/content/testing/testing-widgets.md
@@ -4,17 +4,10 @@ categories:
 description:
   Instead of building the entire app, you can run tests on your widgets
   only.
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Testing widgets
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 3
 ---
 
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 9ba40c5..142e095 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -4,17 +4,10 @@ categories:
 description:
   'Establish SSH access to the builder virtual machine to inspect your
   build.  '
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Accessing virtual machine via SSH
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 1
 ---
 
diff --git a/content/troubleshooting/codemagic-status-page.md b/content/troubleshooting/codemagic-status-page.md
index 648d59c..8c61a9d 100644
--- a/content/troubleshooting/codemagic-status-page.md
+++ b/content/troubleshooting/codemagic-status-page.md
@@ -2,17 +2,10 @@
 categories:
   - Troubleshooting
 description: Get latest information about the status of Codemagic CI/CD.
-facebook_description: ''
-facebook_image: /uploads/2019/01/default-thumb.png
-facebook_title: ''
 menu:
   docs_sidebar:
     weight: 1
-thumbnail: ''
 title: Codemagic status page
-twitter_image: /uploads/2019/02/twitter.png
-twitter_title: ''
-twitterDescription: ''
 weight: 2
 ---
 

commit b870b5263993d826d65287b816a8604d3c0bdf3c
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 16:09:16 2019 +0300

    test change

diff --git a/content/build-customization/.gitkeep b/content/build-customization/.gitkeep
deleted file mode 100644
index e69de29..0000000
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index ab6904d..f2dca3e 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -23,7 +23,7 @@ You can build, test and publish Flutter web apps with Codemagic.
 Codemagic can detect your Flutter web project if it meets the following conditions:
 
 - The project has a `web` folder
-- There’s `flutter_web` dependency in `pubspec.yaml`
+- There’s a `flutter_web` dependency in `pubspec.yaml`
 
 ## Build configuration
 

commit f5d9fc483f586cae1c914c718b237a4ccf82cc74
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 15:51:47 2019 +0300

    remove deploy script

diff --git a/ci-deploy.sh b/ci-deploy.sh
deleted file mode 100755
index a6e3cb7..0000000
--- a/ci-deploy.sh
+++ /dev/null
@@ -1,16 +0,0 @@
-#! /bin/sh
-
-set -ex
-
-dir="/usr/local/opt/bin/s3deploy"
-
-if [ ! -d "$dir" ]; then
-  mkdir -p "$dir"
-  wget -qO- https://github.com/bep/s3deploy/releases/download/v2.3.0/s3deploy_2.3.0_Linux-64bit.tar.gz \
-   | tar -C "$dir" -xvz s3deploy 
-fi
-
-PATH="$dir":$PATH
-
-./build.sh
-./deploy.sh

commit 1baac8576fb4e9b59ccf4d64ed08a56b0439cc5b
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 15:28:58 2019 +0300

    update readme

diff --git a/readme.md b/readme.md
index 8814136..cc64383 100644
--- a/readme.md
+++ b/readme.md
@@ -53,7 +53,7 @@ prod builds need environment variable
 HUGO_ENVIRONMENT=production
 ```
 
-Requires s3deploy (can also download binary from [releases page](https://github.com/bep/s3deploy/releases/))
+Requires s3deploy (you can also download binary from [the releases page](https://github.com/bep/s3deploy/releases/))
 
 ```
 brew install bep/tap/s3deploy

commit b7507df379a1a33413d5a55f761a0d016384232b
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 13:33:58 2019 +0300

    convert and format content front-matter

diff --git a/content/404.md b/content/404.md
index e5fe4d6..91baaae 100644
--- a/content/404.md
+++ b/content/404.md
@@ -1,7 +1,7 @@
 ---
+layout: 404
 title: Not found
 type: 404
-layout: 404
-
 ---
-Not found
\ No newline at end of file
+
+Not found
diff --git a/content/_index.md b/content/_index.md
index 6b85192..47225a5 100644
--- a/content/_index.md
+++ b/content/_index.md
@@ -1,27 +1,28 @@
 ---
-title: Codemagic Documentation
-weight: ''
-description: Browse the Codemagic documentation for a quick overview of how to configure
-  Codemagic to get the most out of it.
 category_names:
-- Getting started with Codemagic CI/CD
-- Build configuration
-- Testing
-- Code signing
-- Publishing
-- Custom script examples
-- Troubleshooting
-- Working in teams
-- User settings
+  - Getting started with Codemagic CI/CD
+  - Build configuration
+  - Testing
+  - Code signing
+  - Publishing
+  - Custom script examples
+  - Troubleshooting
+  - Working in teams
+  - User settings
 category_values:
-- name: ''
-  title: ''
-
+  - name: ''
+    title: ''
+description:
+  Browse the Codemagic documentation for a quick overview of how to configure
+  Codemagic to get the most out of it.
+title: Codemagic Documentation
+weight: ''
 ---
+
 Welcome to the Codemagic documentation site!
 
-Here you'll find some essential information for setting up CI/CD for your Flutter app with [Codemagic](https://codemagic.io/). You'll also find step-by-step guides on various topics on our [blog](https://blog.codemagic.io/categories/tutorials/ "Codemagic blog - Tutorials").
+Here you'll find some essential information for setting up CI/CD for your Flutter app with [Codemagic](https://codemagic.io/). You'll also find step-by-step guides on various topics on our [blog](https://blog.codemagic.io/categories/tutorials/ 'Codemagic blog - Tutorials').
 
-The content of this site is constantly evolving. We're continuously updating it to provide more details and include new features. 
+The content of this site is constantly evolving. We're continuously updating it to provide more details and include new features.
 
-You are more than welcome to join our [Slack workspace](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc "Slack community for CI/CD and Flutter") to reach out to us and meet fellow Flutter enthusiasts.
\ No newline at end of file
+You are more than welcome to join our [Slack workspace](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc 'Slack community for CI/CD and Flutter') to reach out to us and meet fellow Flutter enthusiasts.
diff --git a/content/building/.gitkeep b/content/building/.gitkeep
deleted file mode 100644
index e69de29..0000000
diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
index bcd7521..31097b6 100644
--- a/content/building/automatic-build-triggering.md
+++ b/content/building/automatic-build-triggering.md
@@ -1,20 +1,22 @@
-+++
-categories = ["Build configuration"]
-date = "2019-03-31T15:09:08+03:00"
-description = ""
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Automatic build triggering"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 1
-[menu.docs_sidebar]
-weight = 1
-
-+++
+---
+categories:
+  - Build configuration
+date: '2019-03-31T15:09:08+03:00'
+description: ''
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Automatic build triggering
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 1
+---
+
 In order to fully automate your CI/CD pipeline, you can set up automatic build triggering by configuring which branches to track and when to trigger builds.
 
 Build triggers can be configured in **App settings > Build triggers**.
@@ -55,4 +57,4 @@ If you don't check any of these triggering options, you will have to run builds
 
 ## Skipping builds
 
-If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.
\ No newline at end of file
+If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
index 467c3d3..8eea4d9 100644
--- a/content/building/build-versioning.md
+++ b/content/building/build-versioning.md
@@ -1,23 +1,25 @@
-+++
-categories = ["Build configuration"]
-date = "2019-04-27T20:24:35+03:00"
-description = ""
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Build versioning"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 7
-[menu.docs_sidebar]
-weight = 1
-
-+++
+---
+categories:
+  - Build configuration
+date: '2019-04-27T20:24:35+03:00'
+description: ''
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Build versioning
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 7
+---
+
 If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using **build arguments** and the `BUILD_NUMBER` environment variable.
 
-The `BUILD_NUMBER` read-only environment variable holds the total count of builds (including the ongoing build) for this project in Codemagic. In other words, if you have triggered 10 builds for some project in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`. 
+The `BUILD_NUMBER` read-only environment variable holds the total count of builds (including the ongoing build) for this project in Codemagic. In other words, if you have triggered 10 builds for some project in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`.
 
 {{% notebox %}} Please note that the number of builds in `BUILD_NUMBER` is counted separately for each workflow. {{% /notebox %}}
 
@@ -29,4 +31,4 @@ Here are some examples of the build arguments you can use to increment the app v
 
 `--build-name=1.0.0 --build-number=$BUILD_NUMBER`
 
-`--build-number=$(git rev-list HEAD --count)`
\ No newline at end of file
+`--build-number=$(git rev-list HEAD --count)`
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
index 1920c91..94c52f5 100644
--- a/content/building/building-android-app-bundles.md
+++ b/content/building/building-android-app-bundles.md
@@ -1,20 +1,22 @@
-+++
-categories = ["Build configuration"]
-date = "2019-03-31T15:59:20+03:00"
-description = ""
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Building Android app bundles"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 3
-[menu.docs_sidebar]
-weight = 1
-
-+++
+---
+categories:
+  - Build configuration
+date: '2019-03-31T15:59:20+03:00'
+description: ''
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Building Android app bundles
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 3
+---
+
 You can build your app in [Android app bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user’s device configuration when the app is installed from Google Play Store.
 
 {{% notebox %}}
@@ -40,4 +42,4 @@ In order to upload your Android app bundle to Google Play, you will need to:
 3. Set up [publishing to Google Play](https://docs.codemagic.io/publishing/publishing-to-google-play/) in Codemagic to upload your app bundle to one of Google Play tracks.
 4. [Enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423) to have Google sign the APKs that are generated from the app bundle during installation.
 
-When you enroll an app into app signing by Google Play, Google will manage your app’s signing key for you and use it to sign the APKs for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
\ No newline at end of file
+When you enroll an app into app signing by Google Play, Google will manage your app’s signing key for you and use it to sign the APKs for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
index 43a81ce..ab6904d 100644
--- a/content/building/building-for-the-web.md
+++ b/content/building/building-for-the-web.md
@@ -1,27 +1,29 @@
-+++
-categories = ["Build configuration"]
-description = "See how to build a Flutter web app with Codemagic."
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Building for the web"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 5
-[menu.docs_sidebar]
-weight = 1
-
-+++
+---
+categories:
+  - Build configuration
+description: See how to build a Flutter web app with Codemagic.
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Building for the web
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 5
+---
+
 You can build, test and publish Flutter web apps with Codemagic.
 
 ## Project structure requirements
 
 Codemagic can detect your Flutter web project if it meets the following conditions:
 
-* The project has a `web` folder
-* There’s `flutter_web` dependency in `pubspec.yaml`
+- The project has a `web` folder
+- There’s `flutter_web` dependency in `pubspec.yaml`
 
 ## Build configuration
 
@@ -41,4 +43,4 @@ When you make any changes to the default settings, make sure to hit **Save** bef
 
 ## Build artifacts
 
-At the end of a successful build, Codemagic generates a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](https://docs.codemagic.io/publishing/publishing-to-codemagic-static-pages/) or to third-party hosting sites using custom scripts.
\ No newline at end of file
+At the end of a successful build, Codemagic generates a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](https://docs.codemagic.io/publishing/publishing-to-codemagic-static-pages/) or to third-party hosting sites using custom scripts.
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
index f9dd7a9..fc15d2a 100644
--- a/content/building/dependency-caching.md
+++ b/content/building/dependency-caching.md
@@ -1,19 +1,21 @@
-+++
-categories = ["Build configuration"]
-description = "Store your dependencies on Codemagic for a faster build time."
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Dependency caching"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 6
-[menu.docs_sidebar]
-weight = 1
-
-+++
+---
+categories:
+  - Build configuration
+description: Store your dependencies on Codemagic for a faster build time.
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Dependency caching
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 6
+---
+
 You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
 
 By default, Codemagic offers to cache the following path:
@@ -22,19 +24,19 @@ By default, Codemagic offers to cache the following path:
 
 You can add other paths to be cached, for example:
 
-| **Path** | **Description** |
-| --- | --- |
-| `$FCI_BUILD_DIR/build` | Build cache |
-| `$HOME/.pub-cache` | Dart cache |
-| `$HOME/Library/Developer/Xcode/DerivedData` | Xcode cache |
-| `$HOME/.gradle/caches` | Gradle cache. Note: do not cache `$HOME/.gradle`|
+| **Path**                                    | **Description**                                  |
+| ------------------------------------------- | ------------------------------------------------ |
+| `$FCI_BUILD_DIR/build`                      | Build cache                                      |
+| `$HOME/.pub-cache`                          | Dart cache                                       |
+| `$HOME/Library/Developer/Xcode/DerivedData` | Xcode cache                                      |
+| `$HOME/.gradle/caches`                      | Gradle cache. Note: do not cache `$HOME/.gradle` |
 
 ## Enabling dependency caching
 
 1. In your app settings, open the **Dependency caching** section.
 
-	![](/uploads/2019/04/caching_enabled.PNG)
-        
+   ![](/uploads/2019/04/caching_enabled.PNG)
+
 2. Check the **Enable dependency caching** option. By default, caching is disabled.
 3. Enter the path(s) to the dependencies to be cached and click **Add**. Note that you can delete added paths anytime.
-4. Click **Save** to save the settings.
\ No newline at end of file
+4. Click **Save** to save the settings.
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
index 936d613..c7c8c7b 100644
--- a/content/building/environment-variables.md
+++ b/content/building/environment-variables.md
@@ -1,20 +1,25 @@
-+++
-categories = ["Build configuration"]
-date = "2019-03-31T15:10:05+03:00"
-description = "Environment variables are useful for storing information that you do not want to store in the repository. You can also use Codemagic read-only environment variables to customize your builds."
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Environment variables"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 2
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Build configuration
+date: '2019-03-31T15:10:05+03:00'
+description:
+  Environment variables are useful for storing information that you do
+  not want to store in the repository. You can also use Codemagic read-only environment
+  variables to customize your builds.
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Environment variables
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 2
+---
 
-+++
 Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
 
 ## Adding environment variables
@@ -47,24 +52,24 @@ Codemagic exports several read-only environment variables during the build that
 
 Here you'll find some of the read-only environment variables explained.
 
-| Environment variable | Value |
-| --- | --- |
-| CI | true |
-| CONTINUOUS_INTEGRATION | true |
-| BUILD_NUMBER | Number of the build for this project in Codemagic |
-| FCI_BRANCH | The current branch being built, for pull requests it is the destination branch |
-| FCI_COMMIT | Commit hash that is currently being built by Codemagic, for pull request builds it is hash of the source commit |
-| FCI_CLONE_UNSHALLOW | Performs a full clone of the repository instead of top 50 commits |
-| FCI_PROJECT_ID | UUID of the project that is being built |
-| FCI_BUILD_ID | UUID of the build |
-| FCI_TEST_STEP_STATUS | Test step status, success or failure |
-| FCI_BUILD_STEP_STATUS | Build step status, success, failure or skipped |
-| FCI_BUILD_DIR | Absolute path to the cloned repository in Codemagic builders |
-| FCI_BUILD_OUTPUT_DIR | Contains all the artifact files that will be included in the final artifacts zip file |
-| FCI_EXPORT_DIR | All the files included in this directory will be added to the artifacts zip file |
-| FCI_FLUTTER_SCHEME | Name of the iOS scheme to be used |
-| FCI_SYMROOT | Directory path of files generated during Xcode build |
-| FCI_KEYSTORE_PASSWORD | Password of Android keystore as configured in the UI |
-| FCI_KEY_PASSWORD | Password of Android key as configured in the UI |
-| FCI_KEY_ALIAS | Alias of the key as configured in the UI |
-| FCI_KEYSTORE_PATH | Path of the file in our VM |
\ No newline at end of file
+| Environment variable   | Value                                                                                                           |
+| ---------------------- | --------------------------------------------------------------------------------------------------------------- |
+| CI                     | true                                                                                                            |
+| CONTINUOUS_INTEGRATION | true                                                                                                            |
+| BUILD_NUMBER           | Number of the build for this project in Codemagic                                                               |
+| FCI_BRANCH             | The current branch being built, for pull requests it is the destination branch                                  |
+| FCI_COMMIT             | Commit hash that is currently being built by Codemagic, for pull request builds it is hash of the source commit |
+| FCI_CLONE_UNSHALLOW    | Performs a full clone of the repository instead of top 50 commits                                               |
+| FCI_PROJECT_ID         | UUID of the project that is being built                                                                         |
+| FCI_BUILD_ID           | UUID of the build                                                                                               |
+| FCI_TEST_STEP_STATUS   | Test step status, success or failure                                                                            |
+| FCI_BUILD_STEP_STATUS  | Build step status, success, failure or skipped                                                                  |
+| FCI_BUILD_DIR          | Absolute path to the cloned repository in Codemagic builders                                                    |
+| FCI_BUILD_OUTPUT_DIR   | Contains all the artifact files that will be included in the final artifacts zip file                           |
+| FCI_EXPORT_DIR         | All the files included in this directory will be added to the artifacts zip file                                |
+| FCI_FLUTTER_SCHEME     | Name of the iOS scheme to be used                                                                               |
+| FCI_SYMROOT            | Directory path of files generated during Xcode build                                                            |
+| FCI_KEYSTORE_PASSWORD  | Password of Android keystore as configured in the UI                                                            |
+| FCI_KEY_PASSWORD       | Password of Android key as configured in the UI                                                                 |
+| FCI_KEY_ALIAS          | Alias of the key as configured in the UI                                                                        |
+| FCI_KEYSTORE_PATH      | Path of the file in our VM                                                                                      |
diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
index 9f33424..9f965d6 100644
--- a/content/building/specifying-custom-ios-scheme.md
+++ b/content/building/specifying-custom-ios-scheme.md
@@ -1,19 +1,21 @@
-+++
-categories = ["Build configuration"]
-description = "Build "
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Specifying custom iOS scheme"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 4
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Build configuration
+description: 'Build '
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Specifying custom iOS scheme
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 4
+---
 
-+++
 By default, Codemagic builds the iOS app using the `Runner` scheme. You can specify a custom iOS scheme for the `xcodebuild` command with the `FCI_FLUTTER_SCHEME` environment variable. A different iOS scheme can be specified for each workflow.
 
-You can read more about environment variables and how to use them in the [Environment variables](https://docs.codemagic.io/building/environment-variables/) section.
\ No newline at end of file
+You can read more about environment variables and how to use them in the [Environment variables](https://docs.codemagic.io/building/environment-variables/) section.
diff --git a/content/code-signing/.gitkeep b/content/code-signing/.gitkeep
deleted file mode 100644
index e69de29..0000000
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
index 35e9395..2ca009d 100644
--- a/content/code-signing/android-code-signing.md
+++ b/content/code-signing/android-code-signing.md
@@ -1,21 +1,23 @@
-+++
-categories = ["Code signing"]
-date = "2019-03-10T22:52:07+02:00"
-description = "Sign your Android app for publishing to Google Play Store"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Android code signing"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 2
-[menu.docs_sidebar]
-weight = ""
-
-+++
-Code signing is required for distributing your Android app to Google Play store. It enables to identify who developed the app and ensure that all updates to the app come from you. 
+---
+categories:
+  - Code signing
+date: '2019-03-10T22:52:07+02:00'
+description: Sign your Android app for publishing to Google Play Store
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: ''
+thumbnail: ''
+title: Android code signing
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 2
+---
+
+Code signing is required for distributing your Android app to Google Play store. It enables to identify who developed the app and ensure that all updates to the app come from you.
 
 ## Requirements
 
@@ -51,26 +53,29 @@ You can follow the instructions in [Flutter’s documentation](https://flutter.i
 
 ### Configure signing using environment variables
 
-Alternatively, you can use [environment variables](https://docs.codemagic.io/building/environment-variables/ "Environment variables") to prepare your app for code signing.
+Alternatively, you can use [environment variables](https://docs.codemagic.io/building/environment-variables/ 'Environment variables') to prepare your app for code signing.
 
-1. Set the following environment variables in Codemagic (using the values from generating your keystore file):
+1.  Set the following environment variables in Codemagic (using the values from generating your keystore file):
 
-		FCI_KEYSTORE_PASSWORD=myKeystorePassword
-		FCI_KEY_ALIAS=MyReleaseKey
-		FCI_KEY_PASSWORD=myKeypassword
-2. Upload the contents of your base64-encoded keystore file to Codemagic as an environment variable with the name `FCI_KEYSTORE_FILE`.
-3. Add a custom script for decoding the keystore file stored in `FCI_KEYSTORE_FILE`. For example, click on the + icon before **Test** and paste the following script into the **Post-clone script** field:
+        FCI_KEYSTORE_PASSWORD=myKeystorePassword
+        FCI_KEY_ALIAS=MyReleaseKey
+        FCI_KEY_PASSWORD=myKeypassword
+
+2.  Upload the contents of your base64-encoded keystore file to Codemagic as an environment variable with the name `FCI_KEYSTORE_FILE`.
+3.  Add a custom script for decoding the keystore file stored in `FCI_KEYSTORE_FILE`. For example, click on the + icon before **Test** and paste the following script into the **Post-clone script** field:
+
+        #!/usr/bin/env sh
+        set -e # exit on first failed commandset
+        echo $FCI_KEYSTORE_FILE | base64 --decode > $FCI_BUILD_DIR/keystore.jks
+
+4.  Set your signing configuration in `build.gradle` as follows:
 
-		#!/usr/bin/env sh  
-		set -e # exit on first failed commandset  
-		echo $FCI_KEYSTORE_FILE | base64 --decode > $FCI_BUILD_DIR/keystore.jks
-4. Set your signing configuration in `build.gradle` as follows:
 ```
       ...
        android {
            ...
            defaultConfig { ... }
-       
+
            signingConfigs {
                release {
                    if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
@@ -86,7 +91,7 @@ Alternatively, you can use [environment variables](https://docs.codemagic.io/bui
                    }
                }
            }
-       
+
            buildTypes {
                release {
                    ...
@@ -96,6 +101,7 @@ Alternatively, you can use [environment variables](https://docs.codemagic.io/bui
        }
        ...
 ```
+
 ## Setting up Android code signing on Codemagic
 
 You are required to upload your keystore file and provide details about your key in order to receive signed builds on Codemagic.
@@ -108,4 +114,4 @@ You are required to upload your keystore file and provide details about your key
 4. Enter the **keystore password**, **key alias** and **key password**.
 5. Click **Save** to finish the setup.
 
-{{% notebox %}}Please note that every app must be signed using the same key throughout its lifespan. {{% /notebox %}}
\ No newline at end of file
+{{% notebox %}}Please note that every app must be signed using the same key throughout its lifespan. {{% /notebox %}}
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
index 181ba90..9f9993f 100644
--- a/content/code-signing/ios-code-signing.md
+++ b/content/code-signing/ios-code-signing.md
@@ -1,20 +1,22 @@
-+++
-categories = ["Code signing"]
-date = "2019-03-10T21:29:39+02:00"
-description = "Sign Flutter app for iOS"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "iOS code signing"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 1
-[menu.docs_sidebar]
-weight = ""
-
-+++
+---
+categories:
+  - Code signing
+date: '2019-03-10T21:29:39+02:00'
+description: Sign Flutter app for iOS
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: ''
+thumbnail: ''
+title: iOS code signing
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 1
+---
+
 Code signing is required for installing your iOS app on real devices and publishing it to App Store. It enables to identify who developed the app and ensure that all the changes to the app come from you or your team.
 
 To receive a signed `.ipa` file of your app on Codemagic, you need to set up code signing. When you build without code signing, you will receive only `Runner.app` that runs on simulators only.
@@ -37,9 +39,9 @@ For successful signing, the certificate and the provisioning profile must match
 
 In short, the purpose of the different provisioning profiles is the following:
 
-* **Development**: for testing the app on a real device while developing. The app must be built in **debug** mode.
-* **Ad Hoc:** for distributing the app to non-TestFlight testers (e.g. via [Testmagic](https://testmagic.io/)). The app must be built in **release** mode.
-* **App Store**: for distributing the app via TestFlight or the App Store. The app must be built in **release** mode.
+- **Development**: for testing the app on a real device while developing. The app must be built in **debug** mode.
+- **Ad Hoc:** for distributing the app to non-TestFlight testers (e.g. via [Testmagic](https://testmagic.io/)). The app must be built in **release** mode.
+- **App Store**: for distributing the app via TestFlight or the App Store. The app must be built in **release** mode.
 
 ### Setting up automatic code signing
 
@@ -98,4 +100,4 @@ You can manage your distribution profiles in [Apple Developer portal](https://de
 
 1. In the Provisioning Profiles section, select the appropriate provisioning profile type.
 2. Click on the provisioning profile you would like to export and click **Download**.
-3. Save it to have it ready.
\ No newline at end of file
+3. Save it to have it ready.
diff --git a/content/custom-scripts/.gitkeep b/content/custom-scripts/.gitkeep
deleted file mode 100644
index e69de29..0000000
diff --git a/content/custom-scripts/access-private-git-submodules.md b/content/custom-scripts/access-private-git-submodules.md
index 51fe1e5..127b724 100644
--- a/content/custom-scripts/access-private-git-submodules.md
+++ b/content/custom-scripts/access-private-git-submodules.md
@@ -1,32 +1,34 @@
-+++
-categories = ["Custom script examples"]
-date = "2019-04-09T17:40:12+03:00"
-description = "Access private Git submodules in Codemagic"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Access private Git submodules"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 1
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Custom script examples
+date: '2019-04-09T17:40:12+03:00'
+description: Access private Git submodules in Codemagic
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Access private Git submodules
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 1
+---
 
-+++
 You can access private Git submodules in Codemagic by saving the SSH key to your repository as an [environment variable](https://docs.codemagic.io/building/environment-variables/) and referencing it in a custom **post-clone** script.
 
-1. Save the SSH key (e.g. `SUBMODULE_SSH_KEY`) for accessing the repository as an environment variable. Make sure to check **Secure**.
+1.  Save the SSH key (e.g. `SUBMODULE_SSH_KEY`) for accessing the repository as an environment variable. Make sure to check **Secure**.
 
         SUBMODULE_SSH_KEY = -----BEGIN OPENSSH PRIVATE KEY-----
         ...
         -----END OPENSSH PRIVATE KEY-----
 
-1. Add the following **post-clone** script to enable fetching sources from private Git submodules.
+1.  Add the following **post-clone** script to enable fetching sources from private Git submodules.
 
            #!/usr/bin/env sh
-           
+
            echo "${SUBMODULE_SSH_KEY}" > /tmp/submodule.key
            chmod 600 /tmp/submodule.key
-           ssh-agent bash -c 'ssh-add "/tmp/submodule.key"; git submodule update --init --recursive'
\ No newline at end of file
+           ssh-agent bash -c 'ssh-add "/tmp/submodule.key"; git submodule update --init --recursive'
diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
index 0830105..8d1a3bf 100644
--- a/content/custom-scripts/add-a-git-tag-with-app-version.md
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -1,24 +1,27 @@
-+++
-categories = ["Custom script examples"]
-date = "2019-04-07T12:57:59+03:00"
-description = "Create a Git tag referencing your app version"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Add a Git tag with app version"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 2
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Custom script examples
+date: '2019-04-07T12:57:59+03:00'
+description: Create a Git tag referencing your app version
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Add a Git tag with app version
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 2
+---
 
-+++
 You can use this **pre-publish** script to create a Git tag referencing your app version. The script will check if the build was successful before updating the app version.
 
 1. Save your Git service username and email address as [environment variables](https://docs.codemagic.io/building/environment-variables/) (e.g. `GIT_USERNAME` and `GIT_EMAIL`).
 2. Add the following **pre-publish** script.
+
 ```
        #!/usr/bin/env sh
 
@@ -33,4 +36,4 @@ You can use this **pre-publish** script to create a Git tag referencing your app
          git tag $new_version
          git push --tags
        fi
-```
\ No newline at end of file
+```
diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
index d1b250d..015e94d 100644
--- a/content/custom-scripts/load-firebase-configuration.md
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -1,36 +1,38 @@
-+++
-categories = ["Custom script examples"]
-date = "2019-04-07T13:01:10+03:00"
-description = "Load your Firebase configuration files to Codemagic"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Load Firebase configuration"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 5
-[menu.docs_sidebar]
-weight = 1
-
-+++
+---
+categories:
+  - Custom script examples
+date: '2019-04-07T13:01:10+03:00'
+description: Load your Firebase configuration files to Codemagic
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Load Firebase configuration
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 5
+---
+
 Instead of committing the Firebase config files to your repository, you can upload them to Codemagic as [environment variables](https://docs.codemagic.io/building/environment-variables/) and reference them in a custom script. Note that the Firebase config file (`google-services.json` for Android or `GoogleService-Info.plist` for iOS) must be Base64-encoded.
 
-1. Save your Firebase config files as environment variables, e.g. `ANDROID_FIREBASE_SECRET` and `IOS_FIREBASE_SECRET`. Make sure to check **Secure**.
-2. Add the following **pre-build** script echoing your variables to load the Firebase configuration in Codemagic.
+1.  Save your Firebase config files as environment variables, e.g. `ANDROID_FIREBASE_SECRET` and `IOS_FIREBASE_SECRET`. Make sure to check **Secure**.
+2.  Add the following **pre-build** script echoing your variables to load the Firebase configuration in Codemagic.
+
+        #!/usr/bin/env sh
+
+        set -e # exit on first failed commandset
 
-		#!/usr/bin/env sh
-       
-		set -e # exit on first failed commandset
-       
-		echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
-		echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
+        echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
 
 {{% notebox %}}
 
-`post-clone script failed on base64 decode. The command could not be found` 
+`post-clone script failed on base64 decode. The command could not be found`
 If you received this error message when using the script above, it may be due to some invisible Unicode characters in the script after copy-pasting it. Try removing the space between the `base64` command and the `--decode` option and then adding it back.
 {{% /notebox %}}
 
-For more details about using base64 and loading the Firebase configuration in Codemagic, see the step-by-step guide [here](https://blog.codemagic.io/how-to-load-firebase-config-in-codemagic-with-environment-variables/).
\ No newline at end of file
+For more details about using base64 and loading the Firebase configuration in Codemagic, see the step-by-step guide [here](https://blog.codemagic.io/how-to-load-firebase-config-in-codemagic-with-environment-variables/).
diff --git a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
index 8fdcc2a..737223a 100644
--- a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
+++ b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
@@ -1,31 +1,33 @@
-+++
-categories = ["Custom script examples"]
-description = "You can use custom scripts to publish app artifacts to external services."
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Publish build artifacts to Amazon S3"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 3
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Custom script examples
+description: You can use custom scripts to publish app artifacts to external services.
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Publish build artifacts to Amazon S3
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 3
+---
 
-+++
 You can use custom scripts to publish your app artifacts to external sources. Here's an example for publishing to [Amazon S3](https://aws.amazon.com/s3/).
 
-1. You will first need to provide Codemagic access to your Amazon S3 account for publishing. In **App settings >** **Environment variables**, add your credentials as  [environment variables](https://docs.codemagic.io/building/environment-variables/) named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` respectively. Make sure to check **Secure**.
-2. Click on the **+** sign before the Build section to expand the step and add the following **pre-build script**.  `<FOLDER OR FILE>` refers to a specific folder or file to be synced. Replace `<BUCKET_NAME>` with your actual bucket name.
+1.  You will first need to provide Codemagic access to your Amazon S3 account for publishing. In **App settings >** **Environment variables**, add your credentials as [environment variables](https://docs.codemagic.io/building/environment-variables/) named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` respectively. Make sure to check **Secure**.
+2.  Click on the **+** sign before the Build section to expand the step and add the following **pre-build script**. `<FOLDER OR FILE>` refers to a specific folder or file to be synced. Replace `<BUCKET_NAME>` with your actual bucket name.
 
         #!/bin/sh
-        
+
         set -e
         set -x
-        
+
         cd $FCI_BUILD_DIR
         sudo pip3 install awscli --upgrade
         aws s3 sync <FOLDER OR FILE> s3://<BUCKET_NAME>
 
-Now, each time you build the app, the app artifact will be published to your Amazon S3 bucket.
\ No newline at end of file
+Now, each time you build the app, the app artifact will be published to your Amazon S3 bucket.
diff --git a/content/custom-scripts/run-static-code-analysis.md b/content/custom-scripts/run-static-code-analysis.md
index 574a6aa..919e1a8 100644
--- a/content/custom-scripts/run-static-code-analysis.md
+++ b/content/custom-scripts/run-static-code-analysis.md
@@ -1,26 +1,28 @@
-+++
-categories = ["Custom script examples"]
-date = "2019-03-31T15:25:27+03:00"
-description = ""
-draft = true
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Run static code analysis"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = ""
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Custom script examples
+date: '2019-03-31T15:25:27+03:00'
+description: ''
+draft: true
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Run static code analysis
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: ''
+---
 
-+++
 You can use this **pre-test** script to run static code analysis with `flutter analyze`.
 
     #!/usr/bin/env sh
-    
+
     set -e # exit on first failed command
     set -x # print all executed commands to the log
-    
-    flutter analyze
\ No newline at end of file
+
+    flutter analyze
diff --git a/content/custom-scripts/upload-custom-artifacts.md b/content/custom-scripts/upload-custom-artifacts.md
index 413e226..1feb7a3 100644
--- a/content/custom-scripts/upload-custom-artifacts.md
+++ b/content/custom-scripts/upload-custom-artifacts.md
@@ -1,24 +1,26 @@
-+++
-categories = ["Custom script examples"]
-date = "2019-04-07T12:53:30+03:00"
-description = "Upload files to be included in your build artifacts ZIP file"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Upload custom artifacts"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 4
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Custom script examples
+date: '2019-04-07T12:53:30+03:00'
+description: Upload files to be included in your build artifacts ZIP file
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Upload custom artifacts
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 4
+---
 
-+++
 You can use a custom script to upload custom artifacts, such as screenshots, to `$FCI_EXPORT_DIR` and include them in the build artifacts ZIP file generated by Codemagic.
 
 For example, add this **post-test** script to copy screenshots to `$FCI_EXPORT_DIR`.
 
     #!/usr/bin/env sh
-            
-    cp  -r build/screenshots $FCI_EXPORT_DIR/screenshots
\ No newline at end of file
+
+    cp  -r build/screenshots $FCI_EXPORT_DIR/screenshots
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
index bf311cd..4d22f13 100644
--- a/content/getting-started/adding-apps-from-custom-sources.md
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -1,20 +1,22 @@
-+++
-categories = ["Getting started with Codemagic CI/CD"]
-date = "2019-03-21T17:03:45+02:00"
-description = "Add your Flutter app wherever it is hosted"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Adding apps from custom sources"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 4
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Getting started with Codemagic CI/CD
+date: '2019-03-21T17:03:45+02:00'
+description: Add your Flutter app wherever it is hosted
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Adding apps from custom sources
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 4
+---
 
-+++
 You can add apps from other public or private Git-based repositories. This includes repositories requiring **SSH key authentication**. Click **Add app from custom source** on the Applications page to get started.
 
 {{< figure size="medium" src="/uploads/2019/03/add_app_light-1.PNG" caption="" >}}
@@ -28,4 +30,4 @@ Then, fill in all the required fields.
 3. If the SSH key is password-protected, you’ll be also asked to enter the **SSH key password**.
 4. Click **Add app**.
 
-Your app will be then listed on the Applications page and you can immediately start running builds.
\ No newline at end of file
+Your app will be then listed on the Applications page and you can immediately start running builds.
diff --git a/content/getting-started/automatic-language-detection.md b/content/getting-started/automatic-language-detection.md
index 417d65e..41ef53c 100644
--- a/content/getting-started/automatic-language-detection.md
+++ b/content/getting-started/automatic-language-detection.md
@@ -1,20 +1,22 @@
-+++
-categories = ["Getting started with Codemagic CI/CD"]
-date = "2019-03-21T17:08:18+02:00"
-description = ""
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Automatic language detection"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 6
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Getting started with Codemagic CI/CD
+date: '2019-03-21T17:08:18+02:00'
+description: ''
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Automatic language detection
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 6
+---
 
-+++
 Codemagic enables you to sort the list of apps detected in your repositories based on the repository language so you can display your Flutter apps only. This can be done if your apps have **Dart** set as the project language in GitHub/Bitbucket. While GitHub determines your project language automatically based on the files and directories in your repository, the project language for apps hosted on Bitbucket has to be set manually in the repository settings to benefit from this sorting option.
 
-GitLab projects cannot be sorted by language as information about the programming language of GitLab projects is not available to Codemagic.
\ No newline at end of file
+GitLab projects cannot be sorted by language as information about the programming language of GitLab projects is not available to Codemagic.
diff --git a/content/getting-started/build-artifacts.md b/content/getting-started/build-artifacts.md
index 7dd6562..911c518 100644
--- a/content/getting-started/build-artifacts.md
+++ b/content/getting-started/build-artifacts.md
@@ -1,22 +1,23 @@
-+++
-categories = ["Getting started with Codemagic CI/CD"]
-date = "2019-02-14T13:35:35+02:00"
-description = "What kind of artifacts are generated for Flutter apps on Codemagic CI/CD"
-draft = true
-facebook_description = ""
-facebook_image = ""
-facebook_title = ""
-thumbnail = ""
-title = "Build artifacts"
-twitterDescription = ""
-twitter_image = ""
-twitter_title = ""
-weight = 3
+---
+categories:
+  - Getting started with Codemagic CI/CD
+date: '2019-02-14T13:35:35+02:00'
+description: What kind of artifacts are generated for Flutter apps on Codemagic CI/CD
+draft: true
+facebook_description: ''
+facebook_image: ''
+facebook_title: ''
+thumbnail: ''
+title: Build artifacts
+twitter_image: ''
+twitter_title: ''
+twitterDescription: ''
+weight: 3
+---
 
-+++
 With every build, Codemagic creates the relevant build artifacts that are available for download in the app and can be also published to **email**, **Slack** and **Google Play Store** / **App Store Connect (TestFlight)**. The list of artifacts may vary depending on several factors, such as the chosen platform(s) and build mode, whether code signing was enabled, if there were tests present, and so on.
 
-|  | <b>Android</b> | <b>iOS</b> |
-| --- | --- | --- |
-| <b>Without code signing (debug mode)</b>: | app.apk <br> app-debug.apk | Runner.app |
-| <b>With code signing (release mode)</b>: | app.apk <br> app-release.apk | app_name.ipa<br>Runner.app<br>Runner.app.dSYM.zip<br>xcodebuild.log |
\ No newline at end of file
+|                                           | <b>Android</b>               | <b>iOS</b>                                                          |
+| ----------------------------------------- | ---------------------------- | ------------------------------------------------------------------- |
+| <b>Without code signing (debug mode)</b>: | app.apk <br> app-debug.apk   | Runner.app                                                          |
+| <b>With code signing (release mode)</b>:  | app.apk <br> app-release.apk | app_name.ipa<br>Runner.app<br>Runner.app.dSYM.zip<br>xcodebuild.log |
diff --git a/content/getting-started/creating-workflows.md b/content/getting-started/creating-workflows.md
index 5f1ab71..031ddb7 100644
--- a/content/getting-started/creating-workflows.md
+++ b/content/getting-started/creating-workflows.md
@@ -1,20 +1,22 @@
-+++
-categories = ["Getting started with Codemagic CI/CD"]
-date = "2019-03-26T16:00:30+02:00"
-description = "Manage multiple workflows to fully customize your CI/CD pipeline"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Creating workflows"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 3
-[menu.docs_sidebar]
-weight = 1
-
-+++
+---
+categories:
+  - Getting started with Codemagic CI/CD
+date: '2019-03-26T16:00:30+02:00'
+description: Manage multiple workflows to fully customize your CI/CD pipeline
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Creating workflows
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 3
+---
+
 Have full control over your CI/CD pipeline with workflows. A workflow is a set of settings that determines how your app is to be built, tested and published. You can create several workflows for building different configurations of your app. For example, you can use workflows to build different branches of the project, separate your debug and release builds, run builds for different projects or flavors in the repository, test your app with different software versions, and so on.
 
 You can create new workflows by duplicating existing ones. In app settings, click **Duplicate workflow** under Workflow settings.
@@ -33,4 +35,4 @@ To switch between workflows, click on the workflow name below the app name in ap
 
 {{% notebox %}}
 Note that while your workflows started out as duplicates, they become separate entities once created. Any changes made to one workflow won't affect any of the others.
-{{% /notebox %}}
\ No newline at end of file
+{{% /notebox %}}
diff --git a/content/getting-started/flutter-project-requirements.md b/content/getting-started/flutter-project-requirements.md
index 7c53dbf..cd3fe66 100644
--- a/content/getting-started/flutter-project-requirements.md
+++ b/content/getting-started/flutter-project-requirements.md
@@ -1,21 +1,25 @@
-+++
-categories = ["Getting started with Codemagic CI/CD"]
-date = "2019-03-10T22:47:33+02:00"
-description = "Make sure your Flutter project is ready for continuous integration (CI) and continuous delivery (CD)"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Flutter project requirements"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 7
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Getting started with Codemagic CI/CD
+date: '2019-03-10T22:47:33+02:00'
+description:
+  Make sure your Flutter project is ready for continuous integration (CI)
+  and continuous delivery (CD)
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Flutter project requirements
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 7
+---
 
-+++
 To make sure that your app is ready for implementing continuous integration and continuous delivery and for automating the release process with Codemagic, please make sure your project meets the requirements outlined in Flutter documentation:
 
-* [Preparing an Android app for release](https://flutter.io/docs/deployment/android)
-* [Preparing an iOS app for release](https://flutter.io/docs/deployment/ios)
\ No newline at end of file
+- [Preparing an Android app for release](https://flutter.io/docs/deployment/android)
+- [Preparing an iOS app for release](https://flutter.io/docs/deployment/ios)
diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
index 89f45c3..5b1e737 100644
--- a/content/getting-started/getting-started.md
+++ b/content/getting-started/getting-started.md
@@ -1,18 +1,18 @@
 ---
-title: Running the first build
 categories:
-- Getting started with Codemagic CI/CD
+  - Getting started with Codemagic CI/CD
 description: Running the first build on Codemagic without any configuration
+facebook_description: ''
+facebook_image: ''
+facebook_title: ''
 thumbnail: ''
+title: Running the first build
+twitter_image: ''
 twitter_title: ''
 twitterDescription: ''
-twitter_image: ''
-facebook_title: ''
-facebook_description: ''
-facebook_image: ''
 weight: 2
-
 ---
+
 Upon login, Codemagic will automatically display the list of apps in your repository. Select a Flutter app and start the very first build with preconfigured defaults by clicking **Start your first build**.
 
 {{< figure size="" src="/uploads/2019/07/app_dashboard.PNG" caption="Codemagic Applications page" >}}
@@ -25,4 +25,4 @@ After the build has finished successfully, you will immediately have **artifacts
 
 You can then continue to customize how you want Codemagic to build, test and publish your app in **App settings**.
 
-{{< figure size="" src="/uploads/2019/07/app_settings.png" caption="App settings page" >}}
\ No newline at end of file
+{{< figure size="" src="/uploads/2019/07/app_settings.png" caption="App settings page" >}}
diff --git a/content/getting-started/multiple-projects-in-one-repository.md b/content/getting-started/multiple-projects-in-one-repository.md
index 72f825f..2456e9a 100644
--- a/content/getting-started/multiple-projects-in-one-repository.md
+++ b/content/getting-started/multiple-projects-in-one-repository.md
@@ -1,22 +1,24 @@
-+++
-categories = ["Getting started with Codemagic CI/CD"]
-date = "2019-03-21T17:06:39+02:00"
-description = ""
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Multiple projects in one repository"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 5
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Getting started with Codemagic CI/CD
+date: '2019-03-21T17:06:39+02:00'
+description: ''
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Multiple projects in one repository
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 5
+---
 
-+++
 Codemagic is able to detect multiple projects in a repository provided that each project has its `pubspec.yaml` file.
 
 The first build is run for the project whose `pubspec.yaml` file was found first. After the first build, you can select the project for building from the **Project file path** dropdown in the Build section of app settings.
 
-{{< figure size="medium" src="/uploads/2019/03/multiple_projects_dark.png" caption="Select which project to build" >}}
\ No newline at end of file
+{{< figure size="medium" src="/uploads/2019/03/multiple_projects_dark.png" caption="Select which project to build" >}}
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
index e23bfcc..dac2c3a 100644
--- a/content/getting-started/signup.md
+++ b/content/getting-started/signup.md
@@ -1,18 +1,19 @@
-+++
-categories = ["Getting started with Codemagic CI/CD"]
-date = "2019-03-10T16:28:20+02:00"
-description = "Sign up for Codemagic CI/CD"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Signup"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 1
-
-+++
+---
+categories:
+  - Getting started with Codemagic CI/CD
+date: '2019-03-10T16:28:20+02:00'
+description: Sign up for Codemagic CI/CD
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+thumbnail: ''
+title: Signup
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 1
+---
+
 You can sign up with your [GitHub](https://github.com/), [GitLab](https://about.gitlab.com/) or [Bitbucket](https://bitbucket.org/) account.
 
 On signup, Codemagic asks for **read/write** permission to access your repository and create webhooks for automatic building. You will need to authorize Codemagic in order to connect your GitHub/GitLab/Bitbucket account to your Codemagic account.
@@ -31,4 +32,4 @@ You can connect several repository accounts (GitHub, GitLab, Bitbucket) with one
 2. Click on your account avatar at the bottom left and open **User settings**.
 3. In the **Integrations** section, click **Connect** next to the account you would like to connect to Codemagic.
 
-Once you have connected another account to your Codemagic account, you can log in to Codemagic with either of these accounts. Email notifications with build status reports will be sent to the email address that’s connected with the repository from which you build.
\ No newline at end of file
+Once you have connected another account to your Codemagic account, you can log in to Codemagic with either of these accounts. Email notifications with build status reports will be sent to the email address that’s connected with the repository from which you build.
diff --git a/content/publishing/.gitkeep b/content/publishing/.gitkeep
deleted file mode 100644
index e69de29..0000000
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
index ec050bd..3bb0719 100644
--- a/content/publishing/publishing-to-app-store.md
+++ b/content/publishing/publishing-to-app-store.md
@@ -1,20 +1,22 @@
-+++
-categories = ["Publishing"]
-date = "2019-03-11T15:58:01+02:00"
-description = "Deploy the Flutter app to App Store and TestFlight"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Publishing to App Store"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 1
-[menu.docs_sidebar]
-weight = 1
-
-+++
+---
+categories:
+  - Publishing
+date: '2019-03-11T15:58:01+02:00'
+description: Deploy the Flutter app to App Store and TestFlight
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Publishing to App Store
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 1
+---
+
 Codemagic enables you to automatically publish your app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store. To do so, you must first set up [iOS code signing](https://docs.codemagic.io/code-signing/ios-code-signing/) and then configure publishing to App Store Connect.
 
 ## Requirements
@@ -25,7 +27,7 @@ In addition, the application must be **App Store ready** for build distribution,
 
 It is also worth pointing out the necessity for each uploaded binary to have a **different version**, otherwise it will be refused by App Store Connect. See the [Build versioning](https://docs.codemagic.io/building/build-versioning/) article for instructions on incrementing app version with Codemagic.
 
-{{% notebox %}}Please note that you will need to create an **app record** in App Store Connect before you can automate publishing with Codemagic. It is recommended to upload the very first version of the app manually.  {{% /notebox %}}
+{{% notebox %}}Please note that you will need to create an **app record** in App Store Connect before you can automate publishing with Codemagic. It is recommended to upload the very first version of the app manually. {{% /notebox %}}
 
 ## Finding your app ID
 
@@ -52,4 +54,4 @@ To make your iOS app available to the public, it must be submitted for review in
 1. Log in to [App Store Connect](https://appstoreconnect.apple.com/).
 2. Navigate to **My Apps** and identify the app you would like to publish to App Store.
 3. To start the submission process, click **Prepare for Submission**.
-4. Check that you app metadata is up to date, and once everything is ready, click the **Submit for Review** button.
\ No newline at end of file
+4. Check that you app metadata is up to date, and once everything is ready, click the **Submit for Review** button.
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
index 0beaf07..4cf3541 100644
--- a/content/publishing/publishing-to-codemagic-static-pages.md
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -1,19 +1,21 @@
-+++
-categories = ["Publishing"]
-description = "Publish each new version of your web app to a custom subdomain."
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Publishing to Codemagic Static Pages"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 3
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Publishing
+description: Publish each new version of your web app to a custom subdomain.
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Publishing to Codemagic Static Pages
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 3
+---
 
-+++
 You can publish your web app to a custom subdomain of `codemagic.app` for easy access.
 
 1. Go to **App settings > Publish > Codemagic Static Pages** to configure publishing to Codemagic Static Pages.  
@@ -22,4 +24,4 @@ You can publish your web app to a custom subdomain of `codemagic.app` for easy a
 3. Check **Publish artifacts even if tests fail** to publish the build even when one or more tests fail. Leaving this option unchecked will publish only successful builds that pass the tests, if any.
 4. Click **Save** to finish the setup. On saving, we'll check the availability of the subdomain name and inform you if the name is already taken.
 
-Now each time you run a build of your web app on Codemagic, you’ll see the web app artifact being published to the web page in Codemagic logs and can immediately access the app at the specified URL.
\ No newline at end of file
+Now each time you run a build of your web app on Codemagic, you’ll see the web app artifact being published to the web page in Codemagic logs and can immediately access the app at the specified URL.
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
index d2657a4..a62cff4 100644
--- a/content/publishing/publishing-to-google-play.md
+++ b/content/publishing/publishing-to-google-play.md
@@ -1,21 +1,23 @@
-+++
-categories = ["Publishing"]
-date = "2019-03-14T11:29:36+02:00"
-description = "Deploy the Flutter app to Google Play"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Publishing to Google Play"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 2
-[menu.docs_sidebar]
-weight = 1
-
-+++
-Codemagic enables you to automatically publish your app to the **internal**, **alpha**, **beta** and **production** tracks on Google Play. To do so, you must first [set up Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/ "Android code signing") and then configure publishing to Google Play.
+---
+categories:
+  - Publishing
+date: '2019-03-14T11:29:36+02:00'
+description: Deploy the Flutter app to Google Play
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Publishing to Google Play
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 2
+---
+
+Codemagic enables you to automatically publish your app to the **internal**, **alpha**, **beta** and **production** tracks on Google Play. To do so, you must first [set up Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/ 'Android code signing') and then configure publishing to Google Play.
 
 ## Requirements
 
@@ -23,7 +25,7 @@ You will need a **service account in Google Play Console** to obtain the **JSON
 
 Before releasing the app to Google Play, make sure that it meets the [Google Play’s best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
 
-{{% notebox %}} Note that if you haven’t published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](https://docs.codemagic.io/building/build-versioning/ "Build versioning") on Codemagic. {{% /notebox %}}
+{{% notebox %}} Note that if you haven’t published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](https://docs.codemagic.io/building/build-versioning/ 'Build versioning') on Codemagic. {{% /notebox %}}
 
 ## Setting up a service account in Google Play Console
 
@@ -49,11 +51,11 @@ The very first version of the app must be added to Google Play manually. You can
 2. Click **Google Play** to expand the options.
 3. Upload your credentials JSON file.
 4. Select a **track** for publishing.
-   * Internal — publish for internal testing and QA
-   * Alpha — publish for testing with a small group of trusted users
-   * Beta — publish for testing to a wider set of users
-   * Production — release the app to production
+   - Internal — publish for internal testing and QA
+   - Alpha — publish for testing with a small group of trusted users
+   - Beta — publish for testing to a wider set of users
+   - Production — release the app to production
 5. If you want to publish the APK even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
 6. Click **Save** to finish the setup.
 
-{{< figure size="medium" src="/uploads/2019/03/google play.png" caption="" >}}
\ No newline at end of file
+{{< figure size="medium" src="/uploads/2019/03/google play.png" caption="" >}}
diff --git a/content/testing/.gitkeep b/content/testing/.gitkeep
deleted file mode 100644
index e69de29..0000000
diff --git a/content/testing/beta-testing-with-testmagic.md b/content/testing/beta-testing-with-testmagic.md
index 5d1b8b6..69ba0f7 100644
--- a/content/testing/beta-testing-with-testmagic.md
+++ b/content/testing/beta-testing-with-testmagic.md
@@ -1,27 +1,29 @@
-+++
-categories = ["Testing"]
-description = "View, test and distribute your Codemagic builds with Testmagic"
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Beta testing with Testmagic"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 5
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Testing
+description: View, test and distribute your Codemagic builds with Testmagic
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Beta testing with Testmagic
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 5
+---
 
-+++
-Codemagic is seamlessly integrated with [Testmagic](https://testmagic.io/), a simple mobile app for viewing, testing and distributing your Codemagic builds. You can download it from [Google Play](https://play.google.com/store/apps/details?id=io.nevercode.testmagic&hl=en) for Android and request the app download link for iOS via the #testmagic channel in our [Slack community](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc). 
+Codemagic is seamlessly integrated with [Testmagic](https://testmagic.io/), a simple mobile app for viewing, testing and distributing your Codemagic builds. You can download it from [Google Play](https://play.google.com/store/apps/details?id=io.nevercode.testmagic&hl=en) for Android and request the app download link for iOS via the #testmagic channel in our [Slack community](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc).
 
 With Testmagic, you can:
 
-* Instantly get notified when a build is finished on Codemagic
-* Download app binaries on your device
-* Report feedback and screenshots about the build back to Codemagic
-* View the reported feedback in the build overview on Codemagic
-* Distribute app binaries by sharing a download link
+- Instantly get notified when a build is finished on Codemagic
+- Download app binaries on your device
+- Report feedback and screenshots about the build back to Codemagic
+- View the reported feedback in the build overview on Codemagic
+- Distribute app binaries by sharing a download link
 
-To get started with Testmagic, see the step-by-step guide on our [blog](https://blog.codemagic.io/getting-started-with-testmagic/ "Getting started with Testmagic").
\ No newline at end of file
+To get started with Testmagic, see the step-by-step guide on our [blog](https://blog.codemagic.io/getting-started-with-testmagic/ 'Getting started with Testmagic').
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
index ac38f18..d7fc2aa 100644
--- a/content/testing/running-automated-tests.md
+++ b/content/testing/running-automated-tests.md
@@ -1,19 +1,23 @@
-+++
-categories = ["Testing"]
-description = "Automatically run unit, widget and integration tests every time you build your Flutter app."
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Running automated tests"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 1
-[menu.docs_sidebar]
-weight = 1
-
-+++
+---
+categories:
+  - Testing
+description:
+  Automatically run unit, widget and integration tests every time you build
+  your Flutter app.
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Running automated tests
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 1
+---
+
 Codemagic supports running **unit**, **integration** and **widget** tests. When testing is enabled, tests are run automatically every time your project is built. You can configure the test settings in **App settings > Test**.
 
 ### Detecting tests
@@ -44,7 +48,7 @@ By default, Codemagic runs your Flutter Driver tests on iOS simulator. You can a
 
 {{% notebox %}}
 
-**Tip**: You can set up separate [workflows](https://4jqkxhrybmvg1a.preview.forestry.io/docs/getting-started/creating-workflows/ "Creating workflows") to run tests both on iOS and Android.
+**Tip**: You can set up separate [workflows](https://4jqkxhrybmvg1a.preview.forestry.io/docs/getting-started/creating-workflows/ 'Creating workflows') to run tests both on iOS and Android.
 
 {{% /notebox %}}
 
@@ -52,9 +56,9 @@ By default, Codemagic runs your Flutter Driver tests on iOS simulator. You can a
 
 By default, testing is enabled on Codemagic. You can enable or disable running tests by checking or unchecking the respective option in App settings > Test:
 
-* Enable Flutter test
-* Enable Flutter Driver
+- Enable Flutter test
+- Enable Flutter Driver
 
 ### Stop build if tests fail
 
-At the bottom of the Test section, you can select the **Stop build if tests fail** option to stop the build immediately when any of the tests fail. As the tests are run before building the iOS or Android app, you can get the result of the build faster. Builds stopped when tests fail will be shown as "failed".
\ No newline at end of file
+At the bottom of the Test section, you can select the **Stop build if tests fail** option to stop the build immediately when any of the tests fail. As the tests are run before building the iOS or Android app, you can get the result of the build faster. Builds stopped when tests fail will be shown as "failed".
diff --git a/content/testing/running-tests-only.md b/content/testing/running-tests-only.md
index 84a943e..ff2586f 100644
--- a/content/testing/running-tests-only.md
+++ b/content/testing/running-tests-only.md
@@ -1,21 +1,23 @@
-+++
-categories = ["Testing"]
-description = "Run tests only without building the app."
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Running tests only"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 4
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Testing
+description: Run tests only without building the app.
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Running tests only
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 4
+---
 
-+++
 You can have a workflow to run tests without building the app. In App settings > Build > Build for platforms, select **Run tests only**. Codemagic will then build the workflow until the testing step and skip building for Android or iOS.
 
 ![](/uploads/2019/05/doc_run_tests_only_new.PNG)
 
-If tests fail, the status of the build will be "failed" and you'll receive an email about failing tests. If you have publishing to Slack configured, you'll receive notifications on build status updates.
\ No newline at end of file
+If tests fail, the status of the build will be "failed" and you'll receive an email about failing tests. If you have publishing to Slack configured, you'll receive notifications on build status updates.
diff --git a/content/testing/static-code-analysis.md b/content/testing/static-code-analysis.md
index 39846a3..c71e57b 100644
--- a/content/testing/static-code-analysis.md
+++ b/content/testing/static-code-analysis.md
@@ -1,25 +1,27 @@
-+++
-categories = ["Testing"]
-description = "Test your code with flutter analyze."
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Static code analysis"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 2
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Testing
+description: Test your code with flutter analyze.
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Static code analysis
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 2
+---
 
-+++
 Test your code with `flutter analyze` to find possible mistakes. You can read more about this feature in [Dart documentation](https://dart.dev/guides/language/analysis-options). By default, static code analysis is disabled and has to be enabled in **App settings > Test** by checking the **Enable Flutter analyzer** option.
 
 {{< figure size="medium" src="/uploads/2019/05/flutter_analyze.PNG" caption="" >}}
 
 To run `flutter analyze`, Codemagic specifies the `analyze` command in the **Flutter analyze arguments** field. You can pass additional arguments to customize static code analysis. For example, adding `--write=analyzer-output.txt` prints the results of static code analysis into a text file. If you check **Stop build if tests fail**, the build will fail in the case any issues are detected during static code analysis.
 
-When enabled, `flutter analyze` will be run with each build. You can see the results and the logs of the analysis under the **Running tests** step in build overview. 
+When enabled, `flutter analyze` will be run with each build. You can see the results and the logs of the analysis under the **Running tests** step in build overview.
 
-{{< figure size="medium" src="/uploads/2019/05/flutter_analyze_output.png" caption="" >}}
\ No newline at end of file
+{{< figure size="medium" src="/uploads/2019/05/flutter_analyze_output.png" caption="" >}}
diff --git a/content/testing/testing-widgets.md b/content/testing/testing-widgets.md
index ab1624c..5aea99c 100644
--- a/content/testing/testing-widgets.md
+++ b/content/testing/testing-widgets.md
@@ -1,26 +1,30 @@
-+++
-categories = ["Testing"]
-description = "Instead of building the entire app, you can run tests on your widgets only."
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Testing widgets"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 3
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Testing
+description:
+  Instead of building the entire app, you can run tests on your widgets
+  only.
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Testing widgets
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 3
+---
 
-+++
 Instead of building the entire app, you can separately run tests on your widgets.
 
 To test widgets, the following is required:
 
-* A Flutter project without `ios` and `android` folders.
-* A `test` folder containing at least one test.
+- A Flutter project without `ios` and `android` folders.
+- A `test` folder containing at least one test.
 
 Your widget repository is automatically detected just as any other repository, but there are differences in the build process. Technically, Codemagic will only fetch the sources, install the dependencies and run the tests. If there are failing tests, you will receive the test report on your email.
 
-After the first build, you can change the Flutter version (by default, it’s `channel Stable`) and configure email publishing and Slack for receiving status reports.
\ No newline at end of file
+After the first build, you can change the Flutter version (by default, it’s `channel Stable`) and configure email publishing and Slack for receiving status reports.
diff --git a/content/troubleshooting/.gitkeep b/content/troubleshooting/.gitkeep
deleted file mode 100644
index e69de29..0000000
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
index 11a9290..9ba40c5 100644
--- a/content/troubleshooting/accessing-builder-machine-via-ssh.md
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -1,24 +1,28 @@
-+++
-categories = ["Troubleshooting"]
-description = "Establish SSH access to the builder virtual machine to inspect your build.  "
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Accessing virtual machine via SSH"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 1
-[menu.docs_sidebar]
-weight = 1
-
-+++
+---
+categories:
+  - Troubleshooting
+description:
+  'Establish SSH access to the builder virtual machine to inspect your
+  build.  '
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Accessing virtual machine via SSH
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 1
+---
+
 Establishing SSH access to the virtual machine running the build is a secure way for inspecting your build during runtime and for a short time after the build has finished. Building in SSH mode gives you the following advantages:
 
-* See the processes running during the CI job
-* Reproduce all commands run during the build
-* Debug your custom scripts
+- See the processes running during the CI job
+- Reproduce all commands run during the build
+- Debug your custom scripts
 
 ## How SSH access works
 
@@ -32,7 +36,7 @@ Establishing an SSH connection to the virtual machine is possible only for manua
 2. In the **Specify build configuration** popup, check **Enable SSH access** and start the build.
    {{< figure size="medium" src="/uploads/2019/07/enable_ssh_access.PNG" caption="" >}}
 3. When the build has started, you will shortly see additional instructions for establishing SSH access. Run the automatically generated script in the terminal before the build finishes to establish an SSH connection to the machine running the build.
-	{{< figure size="medium" src="/uploads/2019/07/ssh_access_script.PNG" caption="" >}}
+   {{< figure size="medium" src="/uploads/2019/07/ssh_access_script.PNG" caption="" >}}
 
 If you don't run the script before the build finishes, the unique SSH key expires and can't be used anymore. A new script will be generated every time you run the build, so previous scripts cannot be reused.
 
@@ -54,4 +58,4 @@ You can use the SSH session to reproduce all commands run during the build, reru
 
 To access the clone of your project on the VM, run `cd $FCI_BUILD_DIR` in the terminal. The command `printenv` prints all the environment variables exported during the build. You can see some of Codemagic read-only environment variables explained [here](https://docs.codemagic.io/building/environment-variables/#codemagic-read-only-environment-variables).
 
-Note that the `sudo` command is available so you can execute all commands with root privileges.
\ No newline at end of file
+Note that the `sudo` command is available so you can execute all commands with root privileges.
diff --git a/content/troubleshooting/codemagic-status-page.md b/content/troubleshooting/codemagic-status-page.md
index f5d85e2..648d59c 100644
--- a/content/troubleshooting/codemagic-status-page.md
+++ b/content/troubleshooting/codemagic-status-page.md
@@ -1,19 +1,21 @@
-+++
-categories = ["Troubleshooting"]
-description = "Get latest information about the status of Codemagic CI/CD."
-facebook_description = ""
-facebook_image = "/uploads/2019/01/default-thumb.png"
-facebook_title = ""
-thumbnail = ""
-title = "Codemagic status page"
-twitterDescription = ""
-twitter_image = "/uploads/2019/02/twitter.png"
-twitter_title = ""
-weight = 2
-[menu.docs_sidebar]
-weight = 1
+---
+categories:
+  - Troubleshooting
+description: Get latest information about the status of Codemagic CI/CD.
+facebook_description: ''
+facebook_image: /uploads/2019/01/default-thumb.png
+facebook_title: ''
+menu:
+  docs_sidebar:
+    weight: 1
+thumbnail: ''
+title: Codemagic status page
+twitter_image: /uploads/2019/02/twitter.png
+twitter_title: ''
+twitterDescription: ''
+weight: 2
+---
 
-+++
 We post information about the service status, including maintenances and service disruptions, on Twitter [@CodemagicStatus](https://twitter.com/CodemagicStatus) as well as share information in our [Slack community](http://bit.ly/cm-slack).
 
-Please use these channels to report issues with the availability of the service.
\ No newline at end of file
+Please use these channels to report issues with the availability of the service.

commit bb1daa11a9faabb7d2b75dab2b52ed3c4a31e4b4
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 13:28:32 2019 +0300

    remove unneeded forestry and deployment info

diff --git a/.forestry/front_matter/templates/docs-base-article.yml b/.forestry/front_matter/templates/docs-base-article.yml
deleted file mode 100644
index f8e6959..0000000
--- a/.forestry/front_matter/templates/docs-base-article.yml
+++ /dev/null
@@ -1,51 +0,0 @@
----
-label: Base documentation article
-hide_body: false
-fields:
-- name: title
-  label: Title
-  type: text
-  hidden: false
-  default: ''
-  description: Title for SEO, page and title
-- name: description
-  label: Description
-  type: text
-  hidden: false
-  default: ''
-  description: Description for SEO
-- name: thumbnail
-  label: Thumbnail
-  type: file
-  hidden: false
-  default: ''
-  description: Thumbnail and post hero
-- type: include
-  template: twitter-data
-  label: Twitter metadata fields
-  name: twitterData
-- type: include
-  template: facebook-data
-  label: Facebook metadata fields
-  name: facebookData
-- type: list
-  name: categories
-  label: Category
-  description: Category
-  config:
-    use_select: true
-    source:
-      type: documents
-      file: content/_index.md
-      path: category_names
-      section: docs
-    min: '1'
-    max: '1'
-- type: number
-  name: weight
-  label: Weight
-  default: '0'
-  description: Importance in ordering (bigger number comes earlier)
-  config:
-    step: '1'
-    required: true
diff --git a/.forestry/front_matter/templates/documentation-article.yml b/.forestry/front_matter/templates/documentation-article.yml
deleted file mode 100644
index 812f2eb..0000000
--- a/.forestry/front_matter/templates/documentation-article.yml
+++ /dev/null
@@ -1,56 +0,0 @@
----
-label: Documentation article
-hide_body: false
-fields:
-- type: include
-  name: baseDocumentationArticle
-  label: Base documentation article
-  template: docs-base-article
-  description: Standard fields for all documentation articles
-- type: field_group
-  name: menu
-  label: Menu
-  hidden: true
-  fields:
-  - type: field_group
-    name: docs_sidebar
-    label: Docs sidebar
-    hidden: true
-    fields:
-    - type: number
-      name: weight
-      label: Weight
-      hidden: false
-      default: '1'
-      config:
-        step: '1'
-pages:
-- content/troubleshooting/codemagic-status-page.md
-- content/troubleshooting/accessing-builder-machine-via-ssh.md
-- content/building/build-versioning.md
-- content/building/dependency-caching.md
-- content/building/specifying-custom-ios-scheme.md
-- content/testing/running-automated-tests.md
-- content/building/building-android-app-bundles.md
-- content/publishing/publishing-to-codemagic-static-pages.md
-- content/custom-scripts/upload-custom-artifacts.md
-- content/custom-scripts/access-private-git-submodules.md
-- content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
-- content/custom-scripts/load-firebase-configuration.md
-- content/code-signing/android-code-signing.md
-- content/custom-scripts/add-a-git-tag-with-app-version.md
-- content/building/building-for-the-web.md
-- content/testing/beta-testing-with-testmagic.md
-- content/custom-scripts/run-static-code-analysis.md
-- content/testing/static-code-analysis.md
-- content/testing/running-tests-only.md
-- content/testing/testing-widgets.md
-- content/building/environment-variables.md
-- content/getting-started/creating-workflows.md
-- content/publishing/publishing-to-app-store.md
-- content/code-signing/ios-code-signing.md
-- content/publishing/publishing-to-google-play.md
-- content/getting-started/automatic-language-detection.md
-- content/getting-started/multiple-projects-in-one-repository.md
-- content/getting-started/adding-apps-from-custom-sources.md
-- content/building/automatic-build-triggering.md
diff --git a/.forestry/front_matter/templates/documentation-home-page.yml b/.forestry/front_matter/templates/documentation-home-page.yml
deleted file mode 100644
index 6d35480..0000000
--- a/.forestry/front_matter/templates/documentation-home-page.yml
+++ /dev/null
@@ -1,41 +0,0 @@
----
-label: Documentation home page
-hide_body: false
-fields:
-- type: text
-  name: title
-  label: Title
-- type: text
-  name: description
-  label: Description
-  description: Description for SEO
-- type: list
-  name: category_names
-  label: Category names
-  config:
-    use_select: false
-    source:
-      type: documents
-- type: field_group_list
-  name: category_values
-  label: Category values
-  description: Extra metadata for categories if needed
-  fields:
-  - type: select
-    name: name
-    config:
-      source:
-        type: documents
-        section: docs
-        file: content/_index.md
-        path: category_names
-    label: Name
-    description: Name matching the previous list
-  - type: text
-    name: title
-    label: Title
-    description: Title to override name when displaying
-  config:
-    labelField: name
-pages:
-- content/_index.md
diff --git a/.forestry/front_matter/templates/facebook-data.yml b/.forestry/front_matter/templates/facebook-data.yml
deleted file mode 100644
index aac7f08..0000000
--- a/.forestry/front_matter/templates/facebook-data.yml
+++ /dev/null
@@ -1,22 +0,0 @@
----
-label: Facebook metadata
-hide_body: false
-fields:
-- name: facebook_title
-  label: Facebook title
-  type: text
-  hidden: false
-  default: ''
-  description: Facebook title. If not set, post title is used
-- name: facebook_description
-  label: Facebook description
-  type: text
-  hidden: false
-  default: ''
-  description: Facebook description. If not set, post description is used
-- name: facebook_image
-  label: Facebook image
-  type: file
-  hidden: false
-  default: "/uploads/2019/01/default-thumb.png"
-  description: Facebook image. If not set, site-wide default Facebook image is used
diff --git a/.forestry/front_matter/templates/twitter-data.yml b/.forestry/front_matter/templates/twitter-data.yml
deleted file mode 100644
index 3fdd7c0..0000000
--- a/.forestry/front_matter/templates/twitter-data.yml
+++ /dev/null
@@ -1,22 +0,0 @@
----
-label: Twitter metadata
-hide_body: false
-fields:
-- name: twitter_title
-  label: Twitter title
-  type: text
-  hidden: false
-  default: ''
-  description: Twitter title. If not set, post title is used
-- name: twitterDescription
-  label: Twitter description
-  type: text
-  hidden: false
-  default: ''
-  description: Twitter description. If not set, post description is used
-- name: twitter_image
-  label: Twitter image
-  type: file
-  hidden: false
-  default: "/uploads/2019/02/twitter.png"
-  description: Twitter image. If not set, site-wide default Twitter image is used
diff --git a/.forestry/settings.yml b/.forestry/settings.yml
deleted file mode 100644
index 8135c69..0000000
--- a/.forestry/settings.yml
+++ /dev/null
@@ -1,37 +0,0 @@
----
-new_page_extension: md
-auto_deploy: false
-admin_path: "/enter"
-webhook_url: 
-sections:
-- type: directory
-  path: content
-  label: Docs
-  create: all
-  match: "**/*"
-  exclude: "/uploads/*"
-  templates:
-  - documentation-article
-upload_dir: content/uploads
-public_path: "/uploads"
-front_matter_path: ''
-use_front_matter_path: false
-file_template: ":year:/:month:/:filename:"
-build:
-  preview_command: "./build.sh"
-  publish_command: "./build.sh"
-  preview_env:
-  - HUGO_ENV=staging
-  - HUGO_ENVIRONMENT=staging
-  - HUGO_VERSION=0.55.3
-  publish_env:
-  - HUGO_ENV=production
-  - HUGO_ENVIRONMENT=production
-  - HUGO_VERSION=0.55.3
-  preview_output_directory: dist
-  output_directory: dist
-  instant_preview_command: hugo server -D -E -F --port 8080 -s site --bind 0.0.0.0
-    --renderToDisk --cleanDestinationDir --disableFastRender -d dist
-  preview_docker_image: forestryio/build:latest
-  mount_path: "/opt/buildhome/repo"
-version: 0.55.3
diff --git a/.forestry/snippets/code-inline.snippet b/.forestry/snippets/code-inline.snippet
deleted file mode 100644
index 525c697..0000000
--- a/.forestry/snippets/code-inline.snippet
+++ /dev/null
@@ -1 +0,0 @@
-`inline code`
diff --git a/.forestry/snippets/drive.snippet b/.forestry/snippets/drive.snippet
deleted file mode 100644
index 72192ae..0000000
--- a/.forestry/snippets/drive.snippet
+++ /dev/null
@@ -1 +0,0 @@
-{{< drive "1c7Jo0QRXV4mJd-4FenxH6OjrkLIydQo0" >}}
diff --git a/.forestry/snippets/excerpt.snippet b/.forestry/snippets/excerpt.snippet
deleted file mode 100644
index 61f3b59..0000000
--- a/.forestry/snippets/excerpt.snippet
+++ /dev/null
@@ -1 +0,0 @@
-<!--more-->
diff --git a/.forestry/snippets/figure.snippet b/.forestry/snippets/figure.snippet
deleted file mode 100644
index 76fe63c..0000000
--- a/.forestry/snippets/figure.snippet
+++ /dev/null
@@ -1 +0,0 @@
-{{< figure src="/uploads/Screenshot_20190402-160458.jpg" caption="optional caption goes here" title="optional alt title goes here" size="small" align="left" >}}
diff --git a/.forestry/snippets/gist.snippet b/.forestry/snippets/gist.snippet
deleted file mode 100644
index d099322..0000000
--- a/.forestry/snippets/gist.snippet
+++ /dev/null
@@ -1 +0,0 @@
-{{< gist spf13 7896402 >}}
diff --git a/.forestry/snippets/highlight.snippet b/.forestry/snippets/highlight.snippet
deleted file mode 100644
index 83e1af2..0000000
--- a/.forestry/snippets/highlight.snippet
+++ /dev/null
@@ -1,4 +0,0 @@
-{{< highlight html >}}
-<header>Hello world!</header>
-<main>Hello</main>
-{{< /highlight >}}
diff --git a/.forestry/snippets/instagram.snippet b/.forestry/snippets/instagram.snippet
deleted file mode 100644
index b32098c..0000000
--- a/.forestry/snippets/instagram.snippet
+++ /dev/null
@@ -1 +0,0 @@
-{{< instagram BWNjjyYFxVx >}}
diff --git a/.forestry/snippets/spotify.snippet b/.forestry/snippets/spotify.snippet
deleted file mode 100644
index 62e058d..0000000
--- a/.forestry/snippets/spotify.snippet
+++ /dev/null
@@ -1 +0,0 @@
-{{< spotify 3dIObdYq4t2ImbqquBakT6 >}}
diff --git a/.forestry/snippets/tweet.snippet b/.forestry/snippets/tweet.snippet
deleted file mode 100644
index ce44c06..0000000
--- a/.forestry/snippets/tweet.snippet
+++ /dev/null
@@ -1 +0,0 @@
-{{< tweet 877500564405444608 >}}
diff --git a/.forestry/snippets/video-gif.snippet b/.forestry/snippets/video-gif.snippet
deleted file mode 100644
index 0f98674..0000000
--- a/.forestry/snippets/video-gif.snippet
+++ /dev/null
@@ -1 +0,0 @@
-{{< video-gif src="/uploads/2019/02/DevJoke-11-2.mp4" >}}
diff --git a/.forestry/snippets/vimeo.snippet b/.forestry/snippets/vimeo.snippet
deleted file mode 100644
index 19da00f..0000000
--- a/.forestry/snippets/vimeo.snippet
+++ /dev/null
@@ -1 +0,0 @@
-{{< vimeo 36820781 >}}
diff --git a/.forestry/snippets/youtube.snippet b/.forestry/snippets/youtube.snippet
deleted file mode 100644
index 12409e2..0000000
--- a/.forestry/snippets/youtube.snippet
+++ /dev/null
@@ -1 +0,0 @@
-{{< youtube "rMnasxSxfl8?start=23" >}}
diff --git a/readme.md b/readme.md
index 74c0a84..8814136 100644
--- a/readme.md
+++ b/readme.md
@@ -32,14 +32,9 @@ That folder can be deployed.
 
 # Deploying
 
-## Bitbucket
-
-Run `deploy-to-production` pipeline on required branch. `./public/` folder will be deployed by bitbucket (by running `./ci-deploy.sh` script).
-
 ## Manual
 
 Requires AWS credentials in environment variables (for updating S3).
-We currently have an user `codemagic-hugo-deploy` with access to required buckets (directly attached policies).
 
 ```
 export AWS_ACCESS_KEY_ID=ACTUALACCESSKEY

commit 13612bf83c716dfc0784f550d740d24062cf7f5f
Author: Madis Peebo <madis@nevercode.io>
Date:   Fri Jul 26 13:25:41 2019 +0300

    initial commit

diff --git a/.forestry/front_matter/templates/docs-base-article.yml b/.forestry/front_matter/templates/docs-base-article.yml
new file mode 100644
index 0000000..f8e6959
--- /dev/null
+++ b/.forestry/front_matter/templates/docs-base-article.yml
@@ -0,0 +1,51 @@
+---
+label: Base documentation article
+hide_body: false
+fields:
+- name: title
+  label: Title
+  type: text
+  hidden: false
+  default: ''
+  description: Title for SEO, page and title
+- name: description
+  label: Description
+  type: text
+  hidden: false
+  default: ''
+  description: Description for SEO
+- name: thumbnail
+  label: Thumbnail
+  type: file
+  hidden: false
+  default: ''
+  description: Thumbnail and post hero
+- type: include
+  template: twitter-data
+  label: Twitter metadata fields
+  name: twitterData
+- type: include
+  template: facebook-data
+  label: Facebook metadata fields
+  name: facebookData
+- type: list
+  name: categories
+  label: Category
+  description: Category
+  config:
+    use_select: true
+    source:
+      type: documents
+      file: content/_index.md
+      path: category_names
+      section: docs
+    min: '1'
+    max: '1'
+- type: number
+  name: weight
+  label: Weight
+  default: '0'
+  description: Importance in ordering (bigger number comes earlier)
+  config:
+    step: '1'
+    required: true
diff --git a/.forestry/front_matter/templates/documentation-article.yml b/.forestry/front_matter/templates/documentation-article.yml
new file mode 100644
index 0000000..812f2eb
--- /dev/null
+++ b/.forestry/front_matter/templates/documentation-article.yml
@@ -0,0 +1,56 @@
+---
+label: Documentation article
+hide_body: false
+fields:
+- type: include
+  name: baseDocumentationArticle
+  label: Base documentation article
+  template: docs-base-article
+  description: Standard fields for all documentation articles
+- type: field_group
+  name: menu
+  label: Menu
+  hidden: true
+  fields:
+  - type: field_group
+    name: docs_sidebar
+    label: Docs sidebar
+    hidden: true
+    fields:
+    - type: number
+      name: weight
+      label: Weight
+      hidden: false
+      default: '1'
+      config:
+        step: '1'
+pages:
+- content/troubleshooting/codemagic-status-page.md
+- content/troubleshooting/accessing-builder-machine-via-ssh.md
+- content/building/build-versioning.md
+- content/building/dependency-caching.md
+- content/building/specifying-custom-ios-scheme.md
+- content/testing/running-automated-tests.md
+- content/building/building-android-app-bundles.md
+- content/publishing/publishing-to-codemagic-static-pages.md
+- content/custom-scripts/upload-custom-artifacts.md
+- content/custom-scripts/access-private-git-submodules.md
+- content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
+- content/custom-scripts/load-firebase-configuration.md
+- content/code-signing/android-code-signing.md
+- content/custom-scripts/add-a-git-tag-with-app-version.md
+- content/building/building-for-the-web.md
+- content/testing/beta-testing-with-testmagic.md
+- content/custom-scripts/run-static-code-analysis.md
+- content/testing/static-code-analysis.md
+- content/testing/running-tests-only.md
+- content/testing/testing-widgets.md
+- content/building/environment-variables.md
+- content/getting-started/creating-workflows.md
+- content/publishing/publishing-to-app-store.md
+- content/code-signing/ios-code-signing.md
+- content/publishing/publishing-to-google-play.md
+- content/getting-started/automatic-language-detection.md
+- content/getting-started/multiple-projects-in-one-repository.md
+- content/getting-started/adding-apps-from-custom-sources.md
+- content/building/automatic-build-triggering.md
diff --git a/.forestry/front_matter/templates/documentation-home-page.yml b/.forestry/front_matter/templates/documentation-home-page.yml
new file mode 100644
index 0000000..6d35480
--- /dev/null
+++ b/.forestry/front_matter/templates/documentation-home-page.yml
@@ -0,0 +1,41 @@
+---
+label: Documentation home page
+hide_body: false
+fields:
+- type: text
+  name: title
+  label: Title
+- type: text
+  name: description
+  label: Description
+  description: Description for SEO
+- type: list
+  name: category_names
+  label: Category names
+  config:
+    use_select: false
+    source:
+      type: documents
+- type: field_group_list
+  name: category_values
+  label: Category values
+  description: Extra metadata for categories if needed
+  fields:
+  - type: select
+    name: name
+    config:
+      source:
+        type: documents
+        section: docs
+        file: content/_index.md
+        path: category_names
+    label: Name
+    description: Name matching the previous list
+  - type: text
+    name: title
+    label: Title
+    description: Title to override name when displaying
+  config:
+    labelField: name
+pages:
+- content/_index.md
diff --git a/.forestry/front_matter/templates/facebook-data.yml b/.forestry/front_matter/templates/facebook-data.yml
new file mode 100644
index 0000000..aac7f08
--- /dev/null
+++ b/.forestry/front_matter/templates/facebook-data.yml
@@ -0,0 +1,22 @@
+---
+label: Facebook metadata
+hide_body: false
+fields:
+- name: facebook_title
+  label: Facebook title
+  type: text
+  hidden: false
+  default: ''
+  description: Facebook title. If not set, post title is used
+- name: facebook_description
+  label: Facebook description
+  type: text
+  hidden: false
+  default: ''
+  description: Facebook description. If not set, post description is used
+- name: facebook_image
+  label: Facebook image
+  type: file
+  hidden: false
+  default: "/uploads/2019/01/default-thumb.png"
+  description: Facebook image. If not set, site-wide default Facebook image is used
diff --git a/.forestry/front_matter/templates/twitter-data.yml b/.forestry/front_matter/templates/twitter-data.yml
new file mode 100644
index 0000000..3fdd7c0
--- /dev/null
+++ b/.forestry/front_matter/templates/twitter-data.yml
@@ -0,0 +1,22 @@
+---
+label: Twitter metadata
+hide_body: false
+fields:
+- name: twitter_title
+  label: Twitter title
+  type: text
+  hidden: false
+  default: ''
+  description: Twitter title. If not set, post title is used
+- name: twitterDescription
+  label: Twitter description
+  type: text
+  hidden: false
+  default: ''
+  description: Twitter description. If not set, post description is used
+- name: twitter_image
+  label: Twitter image
+  type: file
+  hidden: false
+  default: "/uploads/2019/02/twitter.png"
+  description: Twitter image. If not set, site-wide default Twitter image is used
diff --git a/.forestry/settings.yml b/.forestry/settings.yml
new file mode 100644
index 0000000..8135c69
--- /dev/null
+++ b/.forestry/settings.yml
@@ -0,0 +1,37 @@
+---
+new_page_extension: md
+auto_deploy: false
+admin_path: "/enter"
+webhook_url: 
+sections:
+- type: directory
+  path: content
+  label: Docs
+  create: all
+  match: "**/*"
+  exclude: "/uploads/*"
+  templates:
+  - documentation-article
+upload_dir: content/uploads
+public_path: "/uploads"
+front_matter_path: ''
+use_front_matter_path: false
+file_template: ":year:/:month:/:filename:"
+build:
+  preview_command: "./build.sh"
+  publish_command: "./build.sh"
+  preview_env:
+  - HUGO_ENV=staging
+  - HUGO_ENVIRONMENT=staging
+  - HUGO_VERSION=0.55.3
+  publish_env:
+  - HUGO_ENV=production
+  - HUGO_ENVIRONMENT=production
+  - HUGO_VERSION=0.55.3
+  preview_output_directory: dist
+  output_directory: dist
+  instant_preview_command: hugo server -D -E -F --port 8080 -s site --bind 0.0.0.0
+    --renderToDisk --cleanDestinationDir --disableFastRender -d dist
+  preview_docker_image: forestryio/build:latest
+  mount_path: "/opt/buildhome/repo"
+version: 0.55.3
diff --git a/.forestry/snippets/code-inline.snippet b/.forestry/snippets/code-inline.snippet
new file mode 100644
index 0000000..525c697
--- /dev/null
+++ b/.forestry/snippets/code-inline.snippet
@@ -0,0 +1 @@
+`inline code`
diff --git a/.forestry/snippets/drive.snippet b/.forestry/snippets/drive.snippet
new file mode 100644
index 0000000..72192ae
--- /dev/null
+++ b/.forestry/snippets/drive.snippet
@@ -0,0 +1 @@
+{{< drive "1c7Jo0QRXV4mJd-4FenxH6OjrkLIydQo0" >}}
diff --git a/.forestry/snippets/excerpt.snippet b/.forestry/snippets/excerpt.snippet
new file mode 100644
index 0000000..61f3b59
--- /dev/null
+++ b/.forestry/snippets/excerpt.snippet
@@ -0,0 +1 @@
+<!--more-->
diff --git a/.forestry/snippets/figure.snippet b/.forestry/snippets/figure.snippet
new file mode 100644
index 0000000..76fe63c
--- /dev/null
+++ b/.forestry/snippets/figure.snippet
@@ -0,0 +1 @@
+{{< figure src="/uploads/Screenshot_20190402-160458.jpg" caption="optional caption goes here" title="optional alt title goes here" size="small" align="left" >}}
diff --git a/.forestry/snippets/gist.snippet b/.forestry/snippets/gist.snippet
new file mode 100644
index 0000000..d099322
--- /dev/null
+++ b/.forestry/snippets/gist.snippet
@@ -0,0 +1 @@
+{{< gist spf13 7896402 >}}
diff --git a/.forestry/snippets/highlight.snippet b/.forestry/snippets/highlight.snippet
new file mode 100644
index 0000000..83e1af2
--- /dev/null
+++ b/.forestry/snippets/highlight.snippet
@@ -0,0 +1,4 @@
+{{< highlight html >}}
+<header>Hello world!</header>
+<main>Hello</main>
+{{< /highlight >}}
diff --git a/.forestry/snippets/instagram.snippet b/.forestry/snippets/instagram.snippet
new file mode 100644
index 0000000..b32098c
--- /dev/null
+++ b/.forestry/snippets/instagram.snippet
@@ -0,0 +1 @@
+{{< instagram BWNjjyYFxVx >}}
diff --git a/.forestry/snippets/spotify.snippet b/.forestry/snippets/spotify.snippet
new file mode 100644
index 0000000..62e058d
--- /dev/null
+++ b/.forestry/snippets/spotify.snippet
@@ -0,0 +1 @@
+{{< spotify 3dIObdYq4t2ImbqquBakT6 >}}
diff --git a/.forestry/snippets/tweet.snippet b/.forestry/snippets/tweet.snippet
new file mode 100644
index 0000000..ce44c06
--- /dev/null
+++ b/.forestry/snippets/tweet.snippet
@@ -0,0 +1 @@
+{{< tweet 877500564405444608 >}}
diff --git a/.forestry/snippets/video-gif.snippet b/.forestry/snippets/video-gif.snippet
new file mode 100644
index 0000000..0f98674
--- /dev/null
+++ b/.forestry/snippets/video-gif.snippet
@@ -0,0 +1 @@
+{{< video-gif src="/uploads/2019/02/DevJoke-11-2.mp4" >}}
diff --git a/.forestry/snippets/vimeo.snippet b/.forestry/snippets/vimeo.snippet
new file mode 100644
index 0000000..19da00f
--- /dev/null
+++ b/.forestry/snippets/vimeo.snippet
@@ -0,0 +1 @@
+{{< vimeo 36820781 >}}
diff --git a/.forestry/snippets/youtube.snippet b/.forestry/snippets/youtube.snippet
new file mode 100644
index 0000000..12409e2
--- /dev/null
+++ b/.forestry/snippets/youtube.snippet
@@ -0,0 +1 @@
+{{< youtube "rMnasxSxfl8?start=23" >}}
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..c6d7e4b
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,3 @@
+/public/
+/resources/
+.DS_Store
diff --git a/.s3deploy.yml b/.s3deploy.yml
new file mode 100644
index 0000000..c562bf8
--- /dev/null
+++ b/.s3deploy.yml
@@ -0,0 +1,29 @@
+routes:
+  - route: "^.+\\.(js|css|svg|ttf|woff|woff2)$"
+    #  cache static assets for 20 years since they are fingerprinted
+    headers:
+      Cache-Control: "max-age=630720000, no-transform, public"
+    gzip: true
+  - route: "^.+\\.(ico|pdf|jpg|JPG|jpeg|png|PNG|gif|GIF|mp4|mov|mkv)$"
+    #  images 1 week for now because content images are not fingerprinted
+    # but without gzip
+    headers:
+      Cache-Control: "max-age=604800, no-transform, public"
+    gzip: false
+  - route: "^.+\\.(html|xml|json)$"
+    # 5 minutes for main content and design like pages and search index
+    headers:
+      Cache-Control: "max-age=300, no-transform, public"
+    gzip: true
+  - route: "^sitemap\\.xml$"
+    # sitemap
+    headers:
+      Cache-Control: "max-age=300, no-transform, public"
+      Content-Type: "application/xml; charset=utf-8"
+    gzip: true
+  - route: "^.+\\.xml$"
+    # rss
+    headers:
+      Cache-Control: "max-age=300, no-transform, public"
+      Content-Type: "application/rss+xml; charset=utf-8"
+    gzip: true
diff --git a/.vscode/tasks.json b/.vscode/tasks.json
new file mode 100644
index 0000000..d459332
--- /dev/null
+++ b/.vscode/tasks.json
@@ -0,0 +1,41 @@
+{
+  // See https://go.microsoft.com/fwlink/?LinkId=733558
+  // for the documentation about the tasks.json format
+  "version": "2.0.0",
+  "tasks": [
+    {
+      "label": "build",
+      "type": "shell",
+      "command": "./build.sh",
+      "group": {
+        "kind": "build",
+        "isDefault": true
+      },
+      "problemMatcher": []
+    },
+    {
+      "label": "serve",
+      "type": "shell",
+      "command": "./serve.sh",
+      "group": "build",
+      "isBackground": true,
+      "problemMatcher": {
+        "severity": "error",
+        "fileLocation": "absolute",
+        "owner": "hugo",
+        "pattern": {
+          "regexp": "template: (.*):(\\d+): (.*)",
+          "file": 1,
+          "location": 2,
+          "message": 3,
+          "loop": true
+        },
+        "background": {
+          "activeOnStart": true,
+          "beginsPattern": "Change detected, rebuilding site",
+          "endsPattern": "Total in \\d+ ms"
+        }
+      }
+    }
+  ]
+}
diff --git a/assets/css/syntax-highlight.css b/assets/css/syntax-highlight.css
new file mode 100644
index 0000000..91b9449
--- /dev/null
+++ b/assets/css/syntax-highlight.css
@@ -0,0 +1,68 @@
+/* Background */ .chroma { background-color: #f0f0f0 }
+/* Error */ .chroma .err {  }
+/* LineTableTD */ .chroma .lntd { vertical-align: top; padding: 0; margin: 0; border: 0; }
+/* LineTable */ .chroma .lntable { border-spacing: 0; padding: 0; margin: 0; border: 0; width: auto; overflow: auto; display: block; }
+/* LineHighlight */ .chroma .hl { display: block; width: 100%;background-color: #ffffcc }
+/* LineNumbersTable */ .chroma .lnt { margin-right: 0.4em; padding: 0 0.4em 0 0.4em; }
+/* LineNumbers */ .chroma .ln { margin-right: 0.4em; padding: 0 0.4em 0 0.4em; }
+/* Keyword */ .chroma .k { color: #007020; font-weight: bold }
+/* KeywordConstant */ .chroma .kc { color: #007020; font-weight: bold }
+/* KeywordDeclaration */ .chroma .kd { color: #007020; font-weight: bold }
+/* KeywordNamespace */ .chroma .kn { color: #007020; font-weight: bold }
+/* KeywordPseudo */ .chroma .kp { color: #007020 }
+/* KeywordReserved */ .chroma .kr { color: #007020; font-weight: bold }
+/* KeywordType */ .chroma .kt { color: #902000 }
+/* NameAttribute */ .chroma .na { color: #4070a0 }
+/* NameBuiltin */ .chroma .nb { color: #007020 }
+/* NameClass */ .chroma .nc { color: #0e84b5; font-weight: bold }
+/* NameConstant */ .chroma .no { color: #60add5 }
+/* NameDecorator */ .chroma .nd { color: #555555; font-weight: bold }
+/* NameEntity */ .chroma .ni { color: #d55537; font-weight: bold }
+/* NameException */ .chroma .ne { color: #007020 }
+/* NameFunction */ .chroma .nf { color: #06287e }
+/* NameLabel */ .chroma .nl { color: #002070; font-weight: bold }
+/* NameNamespace */ .chroma .nn { color: #0e84b5; font-weight: bold }
+/* NameTag */ .chroma .nt { color: #062873; font-weight: bold }
+/* NameVariable */ .chroma .nv { color: #bb60d5 }
+/* LiteralString */ .chroma .s { color: #4070a0 }
+/* LiteralStringAffix */ .chroma .sa { color: #4070a0 }
+/* LiteralStringBacktick */ .chroma .sb { color: #4070a0 }
+/* LiteralStringChar */ .chroma .sc { color: #4070a0 }
+/* LiteralStringDelimiter */ .chroma .dl { color: #4070a0 }
+/* LiteralStringDoc */ .chroma .sd { color: #4070a0; font-style: italic }
+/* LiteralStringDouble */ .chroma .s2 { color: #4070a0 }
+/* LiteralStringEscape */ .chroma .se { color: #4070a0; font-weight: bold }
+/* LiteralStringHeredoc */ .chroma .sh { color: #4070a0 }
+/* LiteralStringInterpol */ .chroma .si { color: #70a0d0; font-style: italic }
+/* LiteralStringOther */ .chroma .sx { color: #c65d09 }
+/* LiteralStringRegex */ .chroma .sr { color: #235388 }
+/* LiteralStringSingle */ .chroma .s1 { color: #4070a0 }
+/* LiteralStringSymbol */ .chroma .ss { color: #517918 }
+/* LiteralNumber */ .chroma .m { color: #40a070 }
+/* LiteralNumberBin */ .chroma .mb { color: #40a070 }
+/* LiteralNumberFloat */ .chroma .mf { color: #40a070 }
+/* LiteralNumberHex */ .chroma .mh { color: #40a070 }
+/* LiteralNumberInteger */ .chroma .mi { color: #40a070 }
+/* LiteralNumberIntegerLong */ .chroma .il { color: #40a070 }
+/* LiteralNumberOct */ .chroma .mo { color: #40a070 }
+/* Operator */ .chroma .o { color: #666666 }
+/* OperatorWord */ .chroma .ow { color: #007020; font-weight: bold }
+/* Comment */ .chroma .c { color: #60a0b0; font-style: italic }
+/* CommentHashbang */ .chroma .ch { color: #60a0b0; font-style: italic }
+/* CommentMultiline */ .chroma .cm { color: #60a0b0; font-style: italic }
+/* CommentSingle */ .chroma .c1 { color: #60a0b0; font-style: italic }
+/* CommentSpecial */ .chroma .cs { color: #60a0b0; background-color: #fff0f0 }
+/* CommentPreproc */ .chroma .cp { color: #007020 }
+/* CommentPreprocFile */ .chroma .cpf { color: #007020 }
+/* GenericDeleted */ .chroma .gd { color: #a00000 }
+/* GenericEmph */ .chroma .ge { font-style: italic }
+/* GenericError */ .chroma .gr { color: #ff0000 }
+/* GenericHeading */ .chroma .gh { color: #000080; font-weight: bold }
+/* GenericInserted */ .chroma .gi { color: #00a000 }
+/* GenericOutput */ .chroma .go { color: #888888 }
+/* GenericPrompt */ .chroma .gp { color: #c65d09; font-weight: bold }
+/* GenericStrong */ .chroma .gs { font-weight: bold }
+/* GenericSubheading */ .chroma .gu { color: #800080; font-weight: bold }
+/* GenericTraceback */ .chroma .gt { color: #0044dd }
+/* GenericUnderline */ .chroma .gl { text-decoration: underline }
+/* TextWhitespace */ .chroma .w { color: #bbbbbb }
diff --git a/assets/fonts/proximanova/proximanova-regular-webfont.ttf b/assets/fonts/proximanova/proximanova-regular-webfont.ttf
new file mode 100644
index 0000000..5869c47
Binary files /dev/null and b/assets/fonts/proximanova/proximanova-regular-webfont.ttf differ
diff --git a/assets/fonts/proximanova/proximanova-semibold-webfont.ttf b/assets/fonts/proximanova/proximanova-semibold-webfont.ttf
new file mode 100644
index 0000000..ae8a9f9
Binary files /dev/null and b/assets/fonts/proximanova/proximanova-semibold-webfont.ttf differ
diff --git a/assets/fonts/proximanova/proximanova.scss b/assets/fonts/proximanova/proximanova.scss
new file mode 100644
index 0000000..62f4564
--- /dev/null
+++ b/assets/fonts/proximanova/proximanova.scss
@@ -0,0 +1,87 @@
+@function getAssetUrl($url) {
+  @return '{{(resources.Get "#{$url}" | fingerprint).RelPermalink }}';
+}
+
+/**
+ * @license
+ * MyFonts Webfont Build ID 3347679, 2017-02-21T09:05:32-0500
+ *
+ * The fonts listed in this notice are subject to the End User License
+ * Agreement(s) entered into by the website owner. All other parties are
+ * explicitly restricted from using the Licensed Webfonts(s).
+ *
+ * You may obtain a valid license at the URLs below.
+ *
+ * Webfont: ProximaNovaA-Medium by Mark Simonson
+ * URL: http://www.myfonts.com/fonts/marksimonson/proxima-nova/a-medium/
+ *
+ * Webfont: ProximaNovaS-Medium by Mark Simonson
+ * URL: http://www.myfonts.com/fonts/marksimonson/proxima-nova/s-medium/
+ *
+ * Webfont: ProximaNova-Medium by Mark Simonson
+ * URL: http://www.myfonts.com/fonts/marksimonson/proxima-nova/medium/
+ *
+ * Webfont: ProximaNovaA-Semibold by Mark Simonson
+ * URL: http://www.myfonts.com/fonts/marksimonson/proxima-nova/a-semibold/
+ *
+ * Webfont: ProximaNovaS-Semibold by Mark Simonson
+ * URL: http://www.myfonts.com/fonts/marksimonson/proxima-nova/s-semibold/
+ *
+ * Webfont: ProximaNova-Semibold by Mark Simonson
+ * URL: http://www.myfonts.com/fonts/marksimonson/proxima-nova/semibold/
+ *
+ * Webfont: ProximaNovaA-Regular by Mark Simonson
+ * URL: http://www.myfonts.com/fonts/marksimonson/proxima-nova/a-regular/
+ *
+ * Webfont: ProximaNovaS-Regular by Mark Simonson
+ * URL: http://www.myfonts.com/fonts/marksimonson/proxima-nova/s-regular/
+ *
+ * Webfont: ProximaNova-Regular by Mark Simonson
+ * URL: http://www.myfonts.com/fonts/marksimonson/proxima-nova/regular/
+ *
+ *
+ * License: http://www.myfonts.com/viewlicense?type=web&buildid=3347679
+ * Licensed pageviews: 1,000,000
+ * Webfonts copyright: Copyright (c) Mark Simonson, 2005. All rights reserved.
+ *
+ * © 2017 MyFonts Inc
+*/
+
+@import url('//hello.myfonts.net/count/3314df');
+
+// FONTS
+@font-face {
+  font-family: 'ProximaNova-Regular';
+  src: url(getAssetUrl(
+    'fonts/proximanova/proximanova-regular-webfont.ttf'
+  ));
+  font-display: swap;
+}
+
+@font-face {
+  font-family: 'ProximaNova';
+  src: url(getAssetUrl(
+    'fonts/proximanova/proximanova-regular-webfont.ttf'
+  ));
+  font-weight: normal;
+  font-style: normal;
+  font-display: swap;
+}
+
+@font-face {
+  font-family: 'ProximaNova-Semibold';
+  src: url(getAssetUrl(
+    'fonts/proximanova/proximanova-semibold-webfont.ttf'
+  ));
+  font-display: swap;
+}
+
+@font-face {
+  font-family: 'ProximaNova';
+  src: url(getAssetUrl(
+    'fonts/proximanova/proximanova-semibold-webfont.ttf'
+  ));
+  font-weight: normal;
+  font-style: bold;
+  font-display: swap;
+}
diff --git a/assets/js/jquery-ui.min.js b/assets/js/jquery-ui.min.js
new file mode 100644
index 0000000..05597cf
--- /dev/null
+++ b/assets/js/jquery-ui.min.js
@@ -0,0 +1,6 @@
+/*! jQuery UI - v1.12.1 - 2019-02-13
+* http://jqueryui.com
+* Includes: effect.js, effects/effect-slide.js
+* Copyright jQuery Foundation and other contributors; Licensed MIT */
+
+(function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)})(function(t){t.ui=t.ui||{},t.ui.version="1.12.1";var e="ui-effects-",i="ui-effects-style",s="ui-effects-animated",n=t;t.effects={effect:{}},function(t,e){function i(t,e,i){var s=u[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:0>t?0:t>s.max?s.max:t)}function s(i){var s=l(),n=s._rgba=[];return i=i.toLowerCase(),f(h,function(t,o){var a,r=o.re.exec(i),h=r&&o.parse(r),l=o.space||"rgba";return h?(a=s[l](h),s[c[l].cache]=a[c[l].cache],n=s._rgba=a._rgba,!1):e}),n.length?("0,0,0,0"===n.join()&&t.extend(n,o.transparent),s):o[i]}function n(t,e,i){return i=(i+1)%1,1>6*i?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t}var o,a="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",r=/^([\-+])=\s*(\d+\.?\d*)/,h=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],l=t.Color=function(e,i,s,n){return new t.Color.fn.parse(e,i,s,n)},c={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},u={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=l.support={},p=t("<p>")[0],f=t.each;p.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=p.style.backgroundColor.indexOf("rgba")>-1,f(c,function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}}),l.fn=t.extend(l.prototype,{parse:function(n,a,r,h){if(n===e)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=t(n).css(a),a=e);var u=this,d=t.type(n),p=this._rgba=[];return a!==e&&(n=[n,a,r,h],d="array"),"string"===d?this.parse(s(n)||o._default):"array"===d?(f(c.rgba.props,function(t,e){p[e.idx]=i(n[e.idx],e)}),this):"object"===d?(n instanceof l?f(c,function(t,e){n[e.cache]&&(u[e.cache]=n[e.cache].slice())}):f(c,function(e,s){var o=s.cache;f(s.props,function(t,e){if(!u[o]&&s.to){if("alpha"===t||null==n[t])return;u[o]=s.to(u._rgba)}u[o][e.idx]=i(n[t],e,!0)}),u[o]&&0>t.inArray(null,u[o].slice(0,3))&&(u[o][3]=1,s.from&&(u._rgba=s.from(u[o])))}),this):e},is:function(t){var i=l(t),s=!0,n=this;return f(c,function(t,o){var a,r=i[o.cache];return r&&(a=n[o.cache]||o.to&&o.to(n._rgba)||[],f(o.props,function(t,i){return null!=r[i.idx]?s=r[i.idx]===a[i.idx]:e})),s}),s},_space:function(){var t=[],e=this;return f(c,function(i,s){e[s.cache]&&t.push(i)}),t.pop()},transition:function(t,e){var s=l(t),n=s._space(),o=c[n],a=0===this.alpha()?l("transparent"):this,r=a[o.cache]||o.to(a._rgba),h=r.slice();return s=s[o.cache],f(o.props,function(t,n){var o=n.idx,a=r[o],l=s[o],c=u[n.type]||{};null!==l&&(null===a?h[o]=l:(c.mod&&(l-a>c.mod/2?a+=c.mod:a-l>c.mod/2&&(a-=c.mod)),h[o]=i((l-a)*e+a,n)))}),this[n](h)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),s=i.pop(),n=l(e)._rgba;return l(t.map(i,function(t,e){return(1-s)*n[e]+s*t}))},toRgbaString:function(){var e="rgba(",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t});return 1===i[3]&&(i.pop(),e="rgb("),e+i.join()+")"},toHslaString:function(){var e="hsla(",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+"%"),t});return 1===i[3]&&(i.pop(),e="hsl("),e+i.join()+")"},toHexString:function(e){var i=this._rgba.slice(),s=i.pop();return e&&i.push(~~(255*s)),"#"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?"0"+t:t}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),l.fn.parse.prototype=l.fn,c.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,s=t[0]/255,n=t[1]/255,o=t[2]/255,a=t[3],r=Math.max(s,n,o),h=Math.min(s,n,o),l=r-h,c=r+h,u=.5*c;return e=h===r?0:s===r?60*(n-o)/l+360:n===r?60*(o-s)/l+120:60*(s-n)/l+240,i=0===l?0:.5>=u?l/c:l/(2-c),[Math.round(e)%360,i,u,null==a?1:a]},c.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2],o=t[3],a=.5>=s?s*(1+i):s+i-s*i,r=2*s-a;return[Math.round(255*n(r,a,e+1/3)),Math.round(255*n(r,a,e)),Math.round(255*n(r,a,e-1/3)),o]},f(c,function(s,n){var o=n.props,a=n.cache,h=n.to,c=n.from;l.fn[s]=function(s){if(h&&!this[a]&&(this[a]=h(this._rgba)),s===e)return this[a].slice();var n,r=t.type(s),u="array"===r||"object"===r?s:arguments,d=this[a].slice();return f(o,function(t,e){var s=u["object"===r?t:e.idx];null==s&&(s=d[e.idx]),d[e.idx]=i(s,e)}),c?(n=l(c(d)),n[a]=d,n):l(d)},f(o,function(e,i){l.fn[e]||(l.fn[e]=function(n){var o,a=t.type(n),h="alpha"===e?this._hsla?"hsla":"rgba":s,l=this[h](),c=l[i.idx];return"undefined"===a?c:("function"===a&&(n=n.call(this,c),a=t.type(n)),null==n&&i.empty?this:("string"===a&&(o=r.exec(n),o&&(n=c+parseFloat(o[2])*("+"===o[1]?1:-1))),l[i.idx]=n,this[h](l)))})})}),l.hook=function(e){var i=e.split(" ");f(i,function(e,i){t.cssHooks[i]={set:function(e,n){var o,a,r="";if("transparent"!==n&&("string"!==t.type(n)||(o=s(n)))){if(n=l(o||n),!d.rgba&&1!==n._rgba[3]){for(a="backgroundColor"===i?e.parentNode:e;(""===r||"transparent"===r)&&a&&a.style;)try{r=t.css(a,"backgroundColor"),a=a.parentNode}catch(h){}n=n.blend(r&&"transparent"!==r?r:"_default")}n=n.toRgbaString()}try{e.style[i]=n}catch(h){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=l(e.elem,i),e.end=l(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},l.hook(a),t.cssHooks.borderColor={expand:function(t){var e={};return f(["Top","Right","Bottom","Left"],function(i,s){e["border"+s+"Color"]=t}),e}},o=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(n),function(){function e(e){var i,s,n=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,o={};if(n&&n.length&&n[0]&&n[n[0]])for(s=n.length;s--;)i=n[s],"string"==typeof n[i]&&(o[t.camelCase(i)]=n[i]);else for(i in n)"string"==typeof n[i]&&(o[i]=n[i]);return o}function i(e,i){var s,n,a={};for(s in i)n=i[s],e[s]!==n&&(o[s]||(t.fx.step[s]||!isNaN(parseFloat(n)))&&(a[s]=n));return a}var s=["add","remove","toggle"],o={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,i){t.fx.step[i]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(n.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(n,o,a,r){var h=t.speed(o,a,r);return this.queue(function(){var o,a=t(this),r=a.attr("class")||"",l=h.children?a.find("*").addBack():a;l=l.map(function(){var i=t(this);return{el:i,start:e(this)}}),o=function(){t.each(s,function(t,e){n[e]&&a[e+"Class"](n[e])})},o(),l=l.map(function(){return this.end=e(this.el[0]),this.diff=i(this.start,this.end),this}),a.attr("class",r),l=l.map(function(){var e=this,i=t.Deferred(),s=t.extend({},h,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,s),i.promise()}),t.when.apply(t,l.get()).done(function(){o(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,"")})}),h.complete.call(a[0])})})},t.fn.extend({addClass:function(e){return function(i,s,n,o){return s?t.effects.animateClass.call(this,{add:i},s,n,o):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,s,n,o){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},s,n,o):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(e){return function(i,s,n,o,a){return"boolean"==typeof s||void 0===s?n?t.effects.animateClass.call(this,s?{add:i}:{remove:i},n,o,a):e.apply(this,arguments):t.effects.animateClass.call(this,{toggle:i},s,n,o)}}(t.fn.toggleClass),switchClass:function(e,i,s,n,o){return t.effects.animateClass.call(this,{add:i,remove:e},s,n,o)}})}(),function(){function n(e,i,s,n){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(n=i,s=null,i={}),("number"==typeof i||t.fx.speeds[i])&&(n=s,s=i,i={}),t.isFunction(s)&&(n=s,s=null),i&&t.extend(e,i),s=s||i.duration,e.duration=t.fx.off?0:"number"==typeof s?s:s in t.fx.speeds?t.fx.speeds[s]:t.fx.speeds._default,e.complete=n||i.complete,e}function o(e){return!e||"number"==typeof e||t.fx.speeds[e]?!0:"string"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:"object"!=typeof e||e.effect?!1:!0:!0}function a(t,e){var i=e.outerWidth(),s=e.outerHeight(),n=/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/,o=n.exec(t)||["",0,i,s,0];return{top:parseFloat(o[1])||0,right:"auto"===o[2]?i:parseFloat(o[2]),bottom:"auto"===o[3]?s:parseFloat(o[3]),left:parseFloat(o[4])||0}}t.expr&&t.expr.filters&&t.expr.filters.animated&&(t.expr.filters.animated=function(e){return function(i){return!!t(i).data(s)||e(i)}}(t.expr.filters.animated)),t.uiBackCompat!==!1&&t.extend(t.effects,{save:function(t,i){for(var s=0,n=i.length;n>s;s++)null!==i[s]&&t.data(e+i[s],t[0].style[i[s]])},restore:function(t,i){for(var s,n=0,o=i.length;o>n;n++)null!==i[n]&&(s=t.data(e+i[n]),t.css(i[n],s))},setMode:function(t,e){return"toggle"===e&&(e=t.is(":hidden")?"show":"hide"),e},createWrapper:function(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),"float":e.css("float")},s=t("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),n={width:e.width(),height:e.height()},o=document.activeElement;try{o.id}catch(a){o=document.body}return e.wrap(s),(e[0]===o||t.contains(e[0],o))&&t(o).trigger("focus"),s=e.parent(),"static"===e.css("position")?(s.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],function(t,s){i[s]=e.css(s),isNaN(parseInt(i[s],10))&&(i[s]="auto")}),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(n),s.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).trigger("focus")),e}}),t.extend(t.effects,{version:"1.12.1",define:function(e,i,s){return s||(s=i,i="effect"),t.effects.effect[e]=s,t.effects.effect[e].mode=i,s},scaledDimensions:function(t,e,i){if(0===e)return{height:0,width:0,outerHeight:0,outerWidth:0};var s="horizontal"!==i?(e||100)/100:1,n="vertical"!==i?(e||100)/100:1;return{height:t.height()*n,width:t.width()*s,outerHeight:t.outerHeight()*n,outerWidth:t.outerWidth()*s}},clipToBox:function(t){return{width:t.clip.right-t.clip.left,height:t.clip.bottom-t.clip.top,left:t.clip.left,top:t.clip.top}},unshift:function(t,e,i){var s=t.queue();e>1&&s.splice.apply(s,[1,0].concat(s.splice(e,i))),t.dequeue()},saveStyle:function(t){t.data(i,t[0].style.cssText)},restoreStyle:function(t){t[0].style.cssText=t.data(i)||"",t.removeData(i)},mode:function(t,e){var i=t.is(":hidden");return"toggle"===e&&(e=i?"show":"hide"),(i?"hide"===e:"show"===e)&&(e="none"),e},getBaseline:function(t,e){var i,s;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":s=0;break;case"center":s=.5;break;case"right":s=1;break;default:s=t[1]/e.width}return{x:s,y:i}},createPlaceholder:function(i){var s,n=i.css("position"),o=i.position();return i.css({marginTop:i.css("marginTop"),marginBottom:i.css("marginBottom"),marginLeft:i.css("marginLeft"),marginRight:i.css("marginRight")}).outerWidth(i.outerWidth()).outerHeight(i.outerHeight()),/^(static|relative)/.test(n)&&(n="absolute",s=t("<"+i[0].nodeName+">").insertAfter(i).css({display:/^(inline|ruby)/.test(i.css("display"))?"inline-block":"block",visibility:"hidden",marginTop:i.css("marginTop"),marginBottom:i.css("marginBottom"),marginLeft:i.css("marginLeft"),marginRight:i.css("marginRight"),"float":i.css("float")}).outerWidth(i.outerWidth()).outerHeight(i.outerHeight()).addClass("ui-effects-placeholder"),i.data(e+"placeholder",s)),i.css({position:n,left:o.left,top:o.top}),s},removePlaceholder:function(t){var i=e+"placeholder",s=t.data(i);s&&(s.remove(),t.removeData(i))},cleanUp:function(e){t.effects.restoreStyle(e),t.effects.removePlaceholder(e)},setTransition:function(e,i,s,n){return n=n||{},t.each(i,function(t,i){var o=e.cssUnit(i);o[0]>0&&(n[i]=o[0]*s+o[1])}),n}}),t.fn.extend({effect:function(){function e(e){function n(){h.removeData(s),t.effects.cleanUp(h),"hide"===i.mode&&h.hide(),r()}function r(){t.isFunction(l)&&l.call(h[0]),t.isFunction(e)&&e()}var h=t(this);i.mode=u.shift(),t.uiBackCompat===!1||a?"none"===i.mode?(h[c](),r()):o.call(h[0],i,n):(h.is(":hidden")?"hide"===c:"show"===c)?(h[c](),r()):o.call(h[0],i,r)}var i=n.apply(this,arguments),o=t.effects.effect[i.effect],a=o.mode,r=i.queue,h=r||"fx",l=i.complete,c=i.mode,u=[],d=function(e){var i=t(this),n=t.effects.mode(i,c)||a;i.data(s,!0),u.push(n),a&&("show"===n||n===a&&"hide"===n)&&i.show(),a&&"none"===n||t.effects.saveStyle(i),t.isFunction(e)&&e()};return t.fx.off||!o?c?this[c](i.duration,l):this.each(function(){l&&l.call(this)}):r===!1?this.each(d).each(e):this.queue(h,d).queue(h,e)},show:function(t){return function(e){if(o(e))return t.apply(this,arguments);var i=n.apply(this,arguments);return i.mode="show",this.effect.call(this,i)}}(t.fn.show),hide:function(t){return function(e){if(o(e))return t.apply(this,arguments);var i=n.apply(this,arguments);return i.mode="hide",this.effect.call(this,i)}}(t.fn.hide),toggle:function(t){return function(e){if(o(e)||"boolean"==typeof e)return t.apply(this,arguments);var i=n.apply(this,arguments);return i.mode="toggle",this.effect.call(this,i)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),s=[];return t.each(["em","px","%","pt"],function(t,e){i.indexOf(e)>0&&(s=[parseFloat(i),e])}),s},cssClip:function(t){return t?this.css("clip","rect("+t.top+"px "+t.right+"px "+t.bottom+"px "+t.left+"px)"):a(this.css("clip"),this)},transfer:function(e,i){var s=t(this),n=t(e.to),o="fixed"===n.css("position"),a=t("body"),r=o?a.scrollTop():0,h=o?a.scrollLeft():0,l=n.offset(),c={top:l.top-r,left:l.left-h,height:n.innerHeight(),width:n.innerWidth()},u=s.offset(),d=t("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(e.className).css({top:u.top-r,left:u.left-h,height:s.innerHeight(),width:s.innerWidth(),position:o?"fixed":"absolute"}).animate(c,e.duration,e.easing,function(){d.remove(),t.isFunction(i)&&i()})}}),t.fx.step.clip=function(e){e.clipInit||(e.start=t(e.elem).cssClip(),"string"==typeof e.end&&(e.end=a(e.end,e.elem)),e.clipInit=!0),t(e.elem).cssClip({top:e.pos*(e.end.top-e.start.top)+e.start.top,right:e.pos*(e.end.right-e.start.right)+e.start.right,bottom:e.pos*(e.end.bottom-e.start.bottom)+e.start.bottom,left:e.pos*(e.end.left-e.start.left)+e.start.left})}}(),function(){var e={};t.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t)},t.easing["easeInOut"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}})}(),t.effects,t.effects.define("slide","show",function(e,i){var s,n,o=t(this),a={up:["bottom","top"],down:["top","bottom"],left:["right","left"],right:["left","right"]},r=e.mode,h=e.direction||"left",l="up"===h||"down"===h?"top":"left",c="up"===h||"left"===h,u=e.distance||o["top"===l?"outerHeight":"outerWidth"](!0),d={};t.effects.createPlaceholder(o),s=o.cssClip(),n=o.position()[l],d[l]=(c?-1:1)*u+n,d.clip=o.cssClip(),d.clip[a[h][1]]=d.clip[a[h][0]],"show"===r&&(o.cssClip(d.clip),o.css(l,d[l]),d.clip=s,d[l]=n),o.animate(d,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})});
\ No newline at end of file
diff --git a/assets/js/jquery.mark.min.js b/assets/js/jquery.mark.min.js
new file mode 100644
index 0000000..197e312
--- /dev/null
+++ b/assets/js/jquery.mark.min.js
@@ -0,0 +1,7 @@
+/*!***************************************************
+* mark.js v8.11.1
+* https://markjs.io/
+* Copyright (c) 2014–2018, Julian Kühnel
+* Released under the MIT license https://git.io/vwTVl
+*****************************************************/
+!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],t):e.Mark=t(e.jQuery)}(this,function(e){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e;var t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(t){var r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5e3;n(this,e),this.ctx=t,this.iframes=r,this.exclude=i,this.iframesTimeout=o}return r(e,[{key:"getContexts",value:function(){var e=[];return(void 0!==this.ctx&&this.ctx?NodeList.prototype.isPrototypeOf(this.ctx)?Array.prototype.slice.call(this.ctx):Array.isArray(this.ctx)?this.ctx:"string"==typeof this.ctx?Array.prototype.slice.call(document.querySelectorAll(this.ctx)):[this.ctx]:[]).forEach(function(t){var n=e.filter(function(e){return e.contains(t)}).length>0;-1!==e.indexOf(t)||n||e.push(t)}),e}},{key:"getIframeContents",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){},r=void 0;try{var i=e.contentWindow;if(r=i.document,!i||!r)throw new Error("iframe inaccessible")}catch(e){n()}r&&t(r)}},{key:"isIframeBlank",value:function(e){var t=e.getAttribute("src").trim();return"about:blank"===e.contentWindow.location.href&&"about:blank"!==t&&t}},{key:"observeIframeLoad",value:function(e,t,n){var r=this,i=!1,o=null,a=function a(){if(!i){i=!0,clearTimeout(o);try{r.isIframeBlank(e)||(e.removeEventListener("load",a),r.getIframeContents(e,t,n))}catch(e){n()}}};e.addEventListener("load",a),o=setTimeout(a,this.iframesTimeout)}},{key:"onIframeReady",value:function(e,t,n){try{"complete"===e.contentWindow.document.readyState?this.isIframeBlank(e)?this.observeIframeLoad(e,t,n):this.getIframeContents(e,t,n):this.observeIframeLoad(e,t,n)}catch(e){n()}}},{key:"waitForIframes",value:function(e,t){var n=this,r=0;this.forEachIframe(e,function(){return!0},function(e){r++,n.waitForIframes(e.querySelector("html"),function(){--r||t()})},function(e){e||t()})}},{key:"forEachIframe",value:function(t,n,r){var i=this,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){},a=t.querySelectorAll("iframe"),s=a.length,c=0;a=Array.prototype.slice.call(a);var u=function(){--s<=0&&o(c)};s||u(),a.forEach(function(t){e.matches(t,i.exclude)?u():i.onIframeReady(t,function(e){n(t)&&(c++,r(e)),u()},u)})}},{key:"createIterator",value:function(e,t,n){return document.createNodeIterator(e,t,n,!1)}},{key:"createInstanceOnIframe",value:function(t){return new e(t.querySelector("html"),this.iframes)}},{key:"compareNodeIframe",value:function(e,t,n){if(e.compareDocumentPosition(n)&Node.DOCUMENT_POSITION_PRECEDING){if(null===t)return!0;if(t.compareDocumentPosition(n)&Node.DOCUMENT_POSITION_FOLLOWING)return!0}return!1}},{key:"getIteratorNode",value:function(e){var t=e.previousNode();return{prevNode:t,node:null===t?e.nextNode():e.nextNode()&&e.nextNode()}}},{key:"checkIframeFilter",value:function(e,t,n,r){var i=!1,o=!1;return r.forEach(function(e,t){e.val===n&&(i=t,o=e.handled)}),this.compareNodeIframe(e,t,n)?(!1!==i||o?!1===i||o||(r[i].handled=!0):r.push({val:n,handled:!0}),!0):(!1===i&&r.push({val:n,handled:!1}),!1)}},{key:"handleOpenIframes",value:function(e,t,n,r){var i=this;e.forEach(function(e){e.handled||i.getIframeContents(e.val,function(e){i.createInstanceOnIframe(e).forEachNode(t,n,r)})})}},{key:"iterateThroughNodes",value:function(e,t,n,r,i){for(var o,a=this,s=this.createIterator(t,e,r),c=[],u=[],l=void 0,h=void 0;void 0,o=a.getIteratorNode(s),h=o.prevNode,l=o.node;)this.iframes&&this.forEachIframe(t,function(e){return a.checkIframeFilter(l,h,e,c)},function(t){a.createInstanceOnIframe(t).forEachNode(e,function(e){return u.push(e)},r)}),u.push(l);u.forEach(function(e){n(e)}),this.iframes&&this.handleOpenIframes(c,e,n,r),i()}},{key:"forEachNode",value:function(e,t,n){var r=this,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){},o=this.getContexts(),a=o.length;a||i(),o.forEach(function(o){var s=function(){r.iterateThroughNodes(e,o,t,n,function(){--a<=0&&i()})};r.iframes?r.waitForIframes(o,s):s()})}}],[{key:"matches",value:function(e,t){var n="string"==typeof t?[t]:t,r=e.matches||e.matchesSelector||e.msMatchesSelector||e.mozMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector;if(r){var i=!1;return n.every(function(t){return!r.call(e,t)||(i=!0,!1)}),i}return!1}}]),e}(),a=function(){function e(t){n(this,e),this.ctx=t,this.ie=!1;var r=window.navigator.userAgent;(r.indexOf("MSIE")>-1||r.indexOf("Trident")>-1)&&(this.ie=!0)}return r(e,[{key:"log",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"debug",r=this.opt.log;this.opt.debug&&"object"===(void 0===r?"undefined":t(r))&&"function"==typeof r[n]&&r[n]("mark.js: "+e)}},{key:"escapeStr",value:function(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}},{key:"createRegExp",value:function(e){return"disabled"!==this.opt.wildcards&&(e=this.setupWildcardsRegExp(e)),e=this.escapeStr(e),Object.keys(this.opt.synonyms).length&&(e=this.createSynonymsRegExp(e)),(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(e=this.setupIgnoreJoinersRegExp(e)),this.opt.diacritics&&(e=this.createDiacriticsRegExp(e)),e=this.createMergedBlanksRegExp(e),(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(e=this.createJoinersRegExp(e)),"disabled"!==this.opt.wildcards&&(e=this.createWildcardsRegExp(e)),e=this.createAccuracyRegExp(e)}},{key:"createSynonymsRegExp",value:function(e){var t=this.opt.synonyms,n=this.opt.caseSensitive?"":"i",r=this.opt.ignoreJoiners||this.opt.ignorePunctuation.length?"\0":"";for(var i in t)if(t.hasOwnProperty(i)){var o=t[i],a="disabled"!==this.opt.wildcards?this.setupWildcardsRegExp(i):this.escapeStr(i),s="disabled"!==this.opt.wildcards?this.setupWildcardsRegExp(o):this.escapeStr(o);""!==a&&""!==s&&(e=e.replace(new RegExp("("+this.escapeStr(a)+"|"+this.escapeStr(s)+")","gm"+n),r+"("+this.processSynomyms(a)+"|"+this.processSynomyms(s)+")"+r))}return e}},{key:"processSynomyms",value:function(e){return(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(e=this.setupIgnoreJoinersRegExp(e)),e}},{key:"setupWildcardsRegExp",value:function(e){return(e=e.replace(/(?:\\)*\?/g,function(e){return"\\"===e.charAt(0)?"?":""})).replace(/(?:\\)*\*/g,function(e){return"\\"===e.charAt(0)?"*":""})}},{key:"createWildcardsRegExp",value:function(e){var t="withSpaces"===this.opt.wildcards;return e.replace(/\u0001/g,t?"[\\S\\s]?":"\\S?").replace(/\u0002/g,t?"[\\S\\s]*?":"\\S*")}},{key:"setupIgnoreJoinersRegExp",value:function(e){return e.replace(/[^(|)\\]/g,function(e,t,n){var r=n.charAt(t+1);return/[(|)\\]/.test(r)||""===r?e:e+"\0"})}},{key:"createJoinersRegExp",value:function(e){var t=[],n=this.opt.ignorePunctuation;return Array.isArray(n)&&n.length&&t.push(this.escapeStr(n.join(""))),this.opt.ignoreJoiners&&t.push("\\u00ad\\u200b\\u200c\\u200d"),t.length?e.split(/\u0000+/).join("["+t.join("")+"]*"):e}},{key:"createDiacriticsRegExp",value:function(e){var t=this.opt.caseSensitive?"":"i",n=this.opt.caseSensitive?["aàáảãạăằắẳẵặâầấẩẫậäåāą","AÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ","cçćč","CÇĆČ","dđď","DĐĎ","eèéẻẽẹêềếểễệëěēę","EÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ","iìíỉĩịîïī","IÌÍỈĨỊÎÏĪ","lł","LŁ","nñňń","NÑŇŃ","oòóỏõọôồốổỗộơởỡớờợöøō","OÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ","rř","RŘ","sšśșş","SŠŚȘŞ","tťțţ","TŤȚŢ","uùúủũụưừứửữựûüůū","UÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ","yýỳỷỹỵÿ","YÝỲỶỸỴŸ","zžżź","ZŽŻŹ"]:["aàáảãạăằắẳẵặâầấẩẫậäåāąAÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ","cçćčCÇĆČ","dđďDĐĎ","eèéẻẽẹêềếểễệëěēęEÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ","iìíỉĩịîïīIÌÍỈĨỊÎÏĪ","lłLŁ","nñňńNÑŇŃ","oòóỏõọôồốổỗộơởỡớờợöøōOÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ","rřRŘ","sšśșşSŠŚȘŞ","tťțţTŤȚŢ","uùúủũụưừứửữựûüůūUÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ","yýỳỷỹỵÿYÝỲỶỸỴŸ","zžżźZŽŻŹ"],r=[];return e.split("").forEach(function(i){n.every(function(n){if(-1!==n.indexOf(i)){if(r.indexOf(n)>-1)return!1;e=e.replace(new RegExp("["+n+"]","gm"+t),"["+n+"]"),r.push(n)}return!0})}),e}},{key:"createMergedBlanksRegExp",value:function(e){return e.replace(/[\s]+/gim,"[\\s]+")}},{key:"createAccuracyRegExp",value:function(e){var t=this,n=this.opt.accuracy,r="string"==typeof n?n:n.value,i="";switch(("string"==typeof n?[]:n.limiters).forEach(function(e){i+="|"+t.escapeStr(e)}),r){case"partially":default:return"()("+e+")";case"complementary":return"()([^"+(i="\\s"+(i||this.escapeStr("!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~¡¿")))+"]*"+e+"[^"+i+"]*)";case"exactly":return"(^|\\s"+i+")("+e+")(?=$|\\s"+i+")"}}},{key:"getSeparatedKeywords",value:function(e){var t=this,n=[];return e.forEach(function(e){t.opt.separateWordSearch?e.split(" ").forEach(function(e){e.trim()&&-1===n.indexOf(e)&&n.push(e)}):e.trim()&&-1===n.indexOf(e)&&n.push(e)}),{keywords:n.sort(function(e,t){return t.length-e.length}),length:n.length}}},{key:"isNumeric",value:function(e){return Number(parseFloat(e))==e}},{key:"checkRanges",value:function(e){var t=this;if(!Array.isArray(e)||"[object Object]"!==Object.prototype.toString.call(e[0]))return this.log("markRanges() will only accept an array of objects"),this.opt.noMatch(e),[];var n=[],r=0;return e.sort(function(e,t){return e.start-t.start}).forEach(function(e){var i=t.callNoMatchOnInvalidRanges(e,r),o=i.start,a=i.end;i.valid&&(e.start=o,e.length=a-o,n.push(e),r=a)}),n}},{key:"callNoMatchOnInvalidRanges",value:function(e,t){var n=void 0,r=void 0,i=!1;return e&&void 0!==e.start?(r=(n=parseInt(e.start,10))+parseInt(e.length,10),this.isNumeric(e.start)&&this.isNumeric(e.length)&&r-t>0&&r-n>0?i=!0:(this.log("Ignoring invalid or overlapping range: "+JSON.stringify(e)),this.opt.noMatch(e))):(this.log("Ignoring invalid range: "+JSON.stringify(e)),this.opt.noMatch(e)),{start:n,end:r,valid:i}}},{key:"checkWhitespaceRanges",value:function(e,t,n){var r=void 0,i=!0,o=n.length,a=t-o,s=parseInt(e.start,10)-a;return(r=(s=s>o?o:s)+parseInt(e.length,10))>o&&(r=o,this.log("End range automatically set to the max value of "+o)),s<0||r-s<0||s>o||r>o?(i=!1,this.log("Invalid range: "+JSON.stringify(e)),this.opt.noMatch(e)):""===n.substring(s,r).replace(/\s+/g,"")&&(i=!1,this.log("Skipping whitespace only range: "+JSON.stringify(e)),this.opt.noMatch(e)),{start:s,end:r,valid:i}}},{key:"getTextNodes",value:function(e){var t=this,n="",r=[];this.iterator.forEachNode(NodeFilter.SHOW_TEXT,function(e){r.push({start:n.length,end:(n+=e.textContent).length,node:e})},function(e){return t.matchesExclude(e.parentNode)?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT},function(){e({value:n,nodes:r})})}},{key:"matchesExclude",value:function(e){return o.matches(e,this.opt.exclude.concat(["script","style","title","head","html"]))}},{key:"wrapRangeInTextNode",value:function(e,t,n){var r=this.opt.element?this.opt.element:"mark",i=e.splitText(t),o=i.splitText(n-t),a=document.createElement(r);return a.setAttribute("data-markjs","true"),this.opt.className&&a.setAttribute("class",this.opt.className),a.textContent=i.textContent,i.parentNode.replaceChild(a,i),o}},{key:"wrapRangeInMappedTextNode",value:function(e,t,n,r,i){var o=this;e.nodes.every(function(a,s){var c=e.nodes[s+1];if(void 0===c||c.start>t){if(!r(a.node))return!1;var u=t-a.start,l=(n>a.end?a.end:n)-a.start,h=e.value.substr(0,a.start),f=e.value.substr(l+a.start);if(a.node=o.wrapRangeInTextNode(a.node,u,l),e.value=h+f,e.nodes.forEach(function(t,n){n>=s&&(e.nodes[n].start>0&&n!==s&&(e.nodes[n].start-=l),e.nodes[n].end-=l)}),n-=l,i(a.node.previousSibling,a.start),!(n>a.end))return!1;t=a.end}return!0})}},{key:"wrapMatches",value:function(e,t,n,r,i){var o=this,a=0===t?0:t+1;this.getTextNodes(function(t){t.nodes.forEach(function(t){t=t.node;for(var i=void 0;null!==(i=e.exec(t.textContent))&&""!==i[a];)if(n(i[a],t)){var s=i.index;if(0!==a)for(var c=1;c<a;c++)s+=i[c].length;t=o.wrapRangeInTextNode(t,s,s+i[a].length),r(t.previousSibling),e.lastIndex=0}}),i()})}},{key:"wrapMatchesAcrossElements",value:function(e,t,n,r,i){var o=this,a=0===t?0:t+1;this.getTextNodes(function(t){for(var s=void 0;null!==(s=e.exec(t.value))&&""!==s[a];){var c=s.index;if(0!==a)for(var u=1;u<a;u++)c+=s[u].length;var l=c+s[a].length;o.wrapRangeInMappedTextNode(t,c,l,function(e){return n(s[a],e)},function(t,n){e.lastIndex=n,r(t)})}i()})}},{key:"wrapRangeFromIndex",value:function(e,t,n,r){var i=this;this.getTextNodes(function(o){var a=o.value.length;e.forEach(function(e,r){var s=i.checkWhitespaceRanges(e,a,o.value),c=s.start,u=s.end;s.valid&&i.wrapRangeInMappedTextNode(o,c,u,function(n){return t(n,e,o.value.substring(c,u),r)},function(t){n(t,e)})}),r()})}},{key:"unwrapMatches",value:function(e){for(var t=e.parentNode,n=document.createDocumentFragment();e.firstChild;)n.appendChild(e.removeChild(e.firstChild));t.replaceChild(n,e),this.ie?this.normalizeTextNode(t):t.normalize()}},{key:"normalizeTextNode",value:function(e){if(e){if(3===e.nodeType)for(;e.nextSibling&&3===e.nextSibling.nodeType;)e.nodeValue+=e.nextSibling.nodeValue,e.parentNode.removeChild(e.nextSibling);else this.normalizeTextNode(e.firstChild);this.normalizeTextNode(e.nextSibling)}}},{key:"markRegExp",value:function(e,t){var n=this;this.opt=t,this.log('Searching with expression "'+e+'"');var r=0,i="wrapMatches";this.opt.acrossElements&&(i="wrapMatchesAcrossElements"),this[i](e,this.opt.ignoreGroups,function(e,t){return n.opt.filter(t,e,r)},function(e){r++,n.opt.each(e)},function(){0===r&&n.opt.noMatch(e),n.opt.done(r)})}},{key:"mark",value:function(e,t){var n=this;this.opt=t;var r=0,i="wrapMatches",o=this.getSeparatedKeywords("string"==typeof e?[e]:e),a=o.keywords,s=o.length,c=this.opt.caseSensitive?"":"i";this.opt.acrossElements&&(i="wrapMatchesAcrossElements"),0===s?this.opt.done(r):function e(t){var o=new RegExp(n.createRegExp(t),"gm"+c),u=0;n.log('Searching with expression "'+o+'"'),n[i](o,1,function(e,i){return n.opt.filter(i,t,r,u)},function(e){u++,r++,n.opt.each(e)},function(){0===u&&n.opt.noMatch(t),a[s-1]===t?n.opt.done(r):e(a[a.indexOf(t)+1])})}(a[0])}},{key:"markRanges",value:function(e,t){var n=this;this.opt=t;var r=0,i=this.checkRanges(e);i&&i.length?(this.log("Starting to mark with the following ranges: "+JSON.stringify(i)),this.wrapRangeFromIndex(i,function(e,t,r,i){return n.opt.filter(e,t,r,i)},function(e,t){r++,n.opt.each(e,t)},function(){n.opt.done(r)})):this.opt.done(r)}},{key:"unmark",value:function(e){var t=this;this.opt=e;var n=this.opt.element?this.opt.element:"*";n+="[data-markjs]",this.opt.className&&(n+="."+this.opt.className),this.log('Removal selector "'+n+'"'),this.iterator.forEachNode(NodeFilter.SHOW_ELEMENT,function(e){t.unwrapMatches(e)},function(e){var r=o.matches(e,n),i=t.matchesExclude(e);return!r||i?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT},this.opt.done)}},{key:"opt",set:function(e){this._opt=i({},{element:"",className:"",exclude:[],iframes:!1,iframesTimeout:5e3,separateWordSearch:!0,diacritics:!0,synonyms:{},accuracy:"partially",acrossElements:!1,caseSensitive:!1,ignoreJoiners:!1,ignoreGroups:0,ignorePunctuation:[],wildcards:"disabled",each:function(){},noMatch:function(){},filter:function(){return!0},done:function(){},debug:!1,log:window.console},e)},get:function(){return this._opt}},{key:"iterator",get:function(){return new o(this.ctx,this.opt.iframes,this.opt.exclude,this.opt.iframesTimeout)}}]),e}();return e.fn.mark=function(e,t){return new a(this.get()).mark(e,t),this},e.fn.markRegExp=function(e,t){return new a(this.get()).markRegExp(e,t),this},e.fn.markRanges=function(e,t){return new a(this.get()).markRanges(e,t),this},e.fn.unmark=function(e){return new a(this.get()).unmark(e),this},e});
diff --git a/assets/js/lunr.js b/assets/js/lunr.js
new file mode 100644
index 0000000..afbeb56
--- /dev/null
+++ b/assets/js/lunr.js
@@ -0,0 +1,3485 @@
+/**
+ * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.5
+ * Copyright (C) 2018 Oliver Nightingale
+ * @license MIT
+ */
+
+;(function(){
+
+  /**
+   * A convenience function for configuring and constructing
+   * a new lunr Index.
+   *
+   * A lunr.Builder instance is created and the pipeline setup
+   * with a trimmer, stop word filter and stemmer.
+   *
+   * This builder object is yielded to the configuration function
+   * that is passed as a parameter, allowing the list of fields
+   * and other builder parameters to be customised.
+   *
+   * All documents _must_ be added within the passed config function.
+   *
+   * @example
+   * var idx = lunr(function () {
+   *   this.field('title')
+   *   this.field('body')
+   *   this.ref('id')
+   *
+   *   documents.forEach(function (doc) {
+   *     this.add(doc)
+   *   }, this)
+   * })
+   *
+   * @see {@link lunr.Builder}
+   * @see {@link lunr.Pipeline}
+   * @see {@link lunr.trimmer}
+   * @see {@link lunr.stopWordFilter}
+   * @see {@link lunr.stemmer}
+   * @namespace {function} lunr
+   */
+  var lunr = function (config) {
+    var builder = new lunr.Builder
+  
+    builder.pipeline.add(
+      lunr.trimmer,
+      lunr.stopWordFilter,
+      lunr.stemmer
+    )
+  
+    builder.searchPipeline.add(
+      lunr.stemmer
+    )
+  
+    config.call(builder, builder)
+    return builder.build()
+  }
+  
+  lunr.version = "2.3.5"
+  /*!
+   * lunr.utils
+   * Copyright (C) 2018 Oliver Nightingale
+   */
+  
+  /**
+   * A namespace containing utils for the rest of the lunr library
+   * @namespace lunr.utils
+   */
+  lunr.utils = {}
+  
+  /**
+   * Print a warning message to the console.
+   *
+   * @param {String} message The message to be printed.
+   * @memberOf lunr.utils
+   * @function
+   */
+  lunr.utils.warn = (function (global) {
+    /* eslint-disable no-console */
+    return function (message) {
+      if (global.console && console.warn) {
+        console.warn(message)
+      }
+    }
+    /* eslint-enable no-console */
+  })(this)
+  
+  /**
+   * Convert an object to a string.
+   *
+   * In the case of `null` and `undefined` the function returns
+   * the empty string, in all other cases the result of calling
+   * `toString` on the passed object is returned.
+   *
+   * @param {Any} obj The object to convert to a string.
+   * @return {String} string representation of the passed object.
+   * @memberOf lunr.utils
+   */
+  lunr.utils.asString = function (obj) {
+    if (obj === void 0 || obj === null) {
+      return ""
+    } else {
+      return obj.toString()
+    }
+  }
+  
+  /**
+   * Clones an object.
+   *
+   * Will create a copy of an existing object such that any mutations
+   * on the copy cannot affect the original.
+   *
+   * Only shallow objects are supported, passing a nested object to this
+   * function will cause a TypeError.
+   *
+   * Objects with primitives, and arrays of primitives are supported.
+   *
+   * @param {Object} obj The object to clone.
+   * @return {Object} a clone of the passed object.
+   * @throws {TypeError} when a nested object is passed.
+   * @memberOf Utils
+   */
+  lunr.utils.clone = function (obj) {
+    if (obj === null || obj === undefined) {
+      return obj
+    }
+  
+    var clone = Object.create(null),
+        keys = Object.keys(obj)
+  
+    for (var i = 0; i < keys.length; i++) {
+      var key = keys[i],
+          val = obj[key]
+  
+      if (Array.isArray(val)) {
+        clone[key] = val.slice()
+        continue
+      }
+  
+      if (typeof val === 'string' ||
+          typeof val === 'number' ||
+          typeof val === 'boolean') {
+        clone[key] = val
+        continue
+      }
+  
+      throw new TypeError("clone is not deep and does not support nested objects")
+    }
+  
+    return clone
+  }
+  lunr.FieldRef = function (docRef, fieldName, stringValue) {
+    this.docRef = docRef
+    this.fieldName = fieldName
+    this._stringValue = stringValue
+  }
+  
+  lunr.FieldRef.joiner = "/"
+  
+  lunr.FieldRef.fromString = function (s) {
+    var n = s.indexOf(lunr.FieldRef.joiner)
+  
+    if (n === -1) {
+      throw "malformed field ref string"
+    }
+  
+    var fieldRef = s.slice(0, n),
+        docRef = s.slice(n + 1)
+  
+    return new lunr.FieldRef (docRef, fieldRef, s)
+  }
+  
+  lunr.FieldRef.prototype.toString = function () {
+    if (this._stringValue == undefined) {
+      this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef
+    }
+  
+    return this._stringValue
+  }
+  /*!
+   * lunr.Set
+   * Copyright (C) 2018 Oliver Nightingale
+   */
+  
+  /**
+   * A lunr set.
+   *
+   * @constructor
+   */
+  lunr.Set = function (elements) {
+    this.elements = Object.create(null)
+  
+    if (elements) {
+      this.length = elements.length
+  
+      for (var i = 0; i < this.length; i++) {
+        this.elements[elements[i]] = true
+      }
+    } else {
+      this.length = 0
+    }
+  }
+  
+  /**
+   * A complete set that contains all elements.
+   *
+   * @static
+   * @readonly
+   * @type {lunr.Set}
+   */
+  lunr.Set.complete = {
+    intersect: function (other) {
+      return other
+    },
+  
+    union: function (other) {
+      return other
+    },
+  
+    contains: function () {
+      return true
+    }
+  }
+  
+  /**
+   * An empty set that contains no elements.
+   *
+   * @static
+   * @readonly
+   * @type {lunr.Set}
+   */
+  lunr.Set.empty = {
+    intersect: function () {
+      return this
+    },
+  
+    union: function (other) {
+      return other
+    },
+  
+    contains: function () {
+      return false
+    }
+  }
+  
+  /**
+   * Returns true if this set contains the specified object.
+   *
+   * @param {object} object - Object whose presence in this set is to be tested.
+   * @returns {boolean} - True if this set contains the specified object.
+   */
+  lunr.Set.prototype.contains = function (object) {
+    return !!this.elements[object]
+  }
+  
+  /**
+   * Returns a new set containing only the elements that are present in both
+   * this set and the specified set.
+   *
+   * @param {lunr.Set} other - set to intersect with this set.
+   * @returns {lunr.Set} a new set that is the intersection of this and the specified set.
+   */
+  
+  lunr.Set.prototype.intersect = function (other) {
+    var a, b, elements, intersection = []
+  
+    if (other === lunr.Set.complete) {
+      return this
+    }
+  
+    if (other === lunr.Set.empty) {
+      return other
+    }
+  
+    if (this.length < other.length) {
+      a = this
+      b = other
+    } else {
+      a = other
+      b = this
+    }
+  
+    elements = Object.keys(a.elements)
+  
+    for (var i = 0; i < elements.length; i++) {
+      var element = elements[i]
+      if (element in b.elements) {
+        intersection.push(element)
+      }
+    }
+  
+    return new lunr.Set (intersection)
+  }
+  
+  /**
+   * Returns a new set combining the elements of this and the specified set.
+   *
+   * @param {lunr.Set} other - set to union with this set.
+   * @return {lunr.Set} a new set that is the union of this and the specified set.
+   */
+  
+  lunr.Set.prototype.union = function (other) {
+    if (other === lunr.Set.complete) {
+      return lunr.Set.complete
+    }
+  
+    if (other === lunr.Set.empty) {
+      return this
+    }
+  
+    return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))
+  }
+  /**
+   * A function to calculate the inverse document frequency for
+   * a posting. This is shared between the builder and the index
+   *
+   * @private
+   * @param {object} posting - The posting for a given term
+   * @param {number} documentCount - The total number of documents.
+   */
+  lunr.idf = function (posting, documentCount) {
+    var documentsWithTerm = 0
+  
+    for (var fieldName in posting) {
+      if (fieldName == '_index') continue // Ignore the term index, its not a field
+      documentsWithTerm += Object.keys(posting[fieldName]).length
+    }
+  
+    var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)
+  
+    return Math.log(1 + Math.abs(x))
+  }
+  
+  /**
+   * A token wraps a string representation of a token
+   * as it is passed through the text processing pipeline.
+   *
+   * @constructor
+   * @param {string} [str=''] - The string token being wrapped.
+   * @param {object} [metadata={}] - Metadata associated with this token.
+   */
+  lunr.Token = function (str, metadata) {
+    this.str = str || ""
+    this.metadata = metadata || {}
+  }
+  
+  /**
+   * Returns the token string that is being wrapped by this object.
+   *
+   * @returns {string}
+   */
+  lunr.Token.prototype.toString = function () {
+    return this.str
+  }
+  
+  /**
+   * A token update function is used when updating or optionally
+   * when cloning a token.
+   *
+   * @callback lunr.Token~updateFunction
+   * @param {string} str - The string representation of the token.
+   * @param {Object} metadata - All metadata associated with this token.
+   */
+  
+  /**
+   * Applies the given function to the wrapped string token.
+   *
+   * @example
+   * token.update(function (str, metadata) {
+   *   return str.toUpperCase()
+   * })
+   *
+   * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.
+   * @returns {lunr.Token}
+   */
+  lunr.Token.prototype.update = function (fn) {
+    this.str = fn(this.str, this.metadata)
+    return this
+  }
+  
+  /**
+   * Creates a clone of this token. Optionally a function can be
+   * applied to the cloned token.
+   *
+   * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.
+   * @returns {lunr.Token}
+   */
+  lunr.Token.prototype.clone = function (fn) {
+    fn = fn || function (s) { return s }
+    return new lunr.Token (fn(this.str, this.metadata), this.metadata)
+  }
+  /*!
+   * lunr.tokenizer
+   * Copyright (C) 2018 Oliver Nightingale
+   */
+  
+  /**
+   * A function for splitting a string into tokens ready to be inserted into
+   * the search index. Uses `lunr.tokenizer.separator` to split strings, change
+   * the value of this property to change how strings are split into tokens.
+   *
+   * This tokenizer will convert its parameter to a string by calling `toString` and
+   * then will split this string on the character in `lunr.tokenizer.separator`.
+   * Arrays will have their elements converted to strings and wrapped in a lunr.Token.
+   *
+   * Optional metadata can be passed to the tokenizer, this metadata will be cloned and
+   * added as metadata to every token that is created from the object to be tokenized.
+   *
+   * @static
+   * @param {?(string|object|object[])} obj - The object to convert into tokens
+   * @param {?object} metadata - Optional metadata to associate with every token
+   * @returns {lunr.Token[]}
+   * @see {@link lunr.Pipeline}
+   */
+  lunr.tokenizer = function (obj, metadata) {
+    if (obj == null || obj == undefined) {
+      return []
+    }
+  
+    if (Array.isArray(obj)) {
+      return obj.map(function (t) {
+        return new lunr.Token(
+          lunr.utils.asString(t).toLowerCase(),
+          lunr.utils.clone(metadata)
+        )
+      })
+    }
+  
+    var str = obj.toString().trim().toLowerCase(),
+        len = str.length,
+        tokens = []
+  
+    for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {
+      var char = str.charAt(sliceEnd),
+          sliceLength = sliceEnd - sliceStart
+  
+      if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {
+  
+        if (sliceLength > 0) {
+          var tokenMetadata = lunr.utils.clone(metadata) || {}
+          tokenMetadata["position"] = [sliceStart, sliceLength]
+          tokenMetadata["index"] = tokens.length
+  
+          tokens.push(
+            new lunr.Token (
+              str.slice(sliceStart, sliceEnd),
+              tokenMetadata
+            )
+          )
+        }
+  
+        sliceStart = sliceEnd + 1
+      }
+  
+    }
+  
+    return tokens
+  }
+  
+  /**
+   * The separator used to split a string into tokens. Override this property to change the behaviour of
+   * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.
+   *
+   * @static
+   * @see lunr.tokenizer
+   */
+  lunr.tokenizer.separator = /[\s\-]+/
+  /*!
+   * lunr.Pipeline
+   * Copyright (C) 2018 Oliver Nightingale
+   */
+  
+  /**
+   * lunr.Pipelines maintain an ordered list of functions to be applied to all
+   * tokens in documents entering the search index and queries being ran against
+   * the index.
+   *
+   * An instance of lunr.Index created with the lunr shortcut will contain a
+   * pipeline with a stop word filter and an English language stemmer. Extra
+   * functions can be added before or after either of these functions or these
+   * default functions can be removed.
+   *
+   * When run the pipeline will call each function in turn, passing a token, the
+   * index of that token in the original list of all tokens and finally a list of
+   * all the original tokens.
+   *
+   * The output of functions in the pipeline will be passed to the next function
+   * in the pipeline. To exclude a token from entering the index the function
+   * should return undefined, the rest of the pipeline will not be called with
+   * this token.
+   *
+   * For serialisation of pipelines to work, all functions used in an instance of
+   * a pipeline should be registered with lunr.Pipeline. Registered functions can
+   * then be loaded. If trying to load a serialised pipeline that uses functions
+   * that are not registered an error will be thrown.
+   *
+   * If not planning on serialising the pipeline then registering pipeline functions
+   * is not necessary.
+   *
+   * @constructor
+   */
+  lunr.Pipeline = function () {
+    this._stack = []
+  }
+  
+  lunr.Pipeline.registeredFunctions = Object.create(null)
+  
+  /**
+   * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token
+   * string as well as all known metadata. A pipeline function can mutate the token string
+   * or mutate (or add) metadata for a given token.
+   *
+   * A pipeline function can indicate that the passed token should be discarded by returning
+   * null. This token will not be passed to any downstream pipeline functions and will not be
+   * added to the index.
+   *
+   * Multiple tokens can be returned by returning an array of tokens. Each token will be passed
+   * to any downstream pipeline functions and all will returned tokens will be added to the index.
+   *
+   * Any number of pipeline functions may be chained together using a lunr.Pipeline.
+   *
+   * @interface lunr.PipelineFunction
+   * @param {lunr.Token} token - A token from the document being processed.
+   * @param {number} i - The index of this token in the complete list of tokens for this document/field.
+   * @param {lunr.Token[]} tokens - All tokens for this document/field.
+   * @returns {(?lunr.Token|lunr.Token[])}
+   */
+  
+  /**
+   * Register a function with the pipeline.
+   *
+   * Functions that are used in the pipeline should be registered if the pipeline
+   * needs to be serialised, or a serialised pipeline needs to be loaded.
+   *
+   * Registering a function does not add it to a pipeline, functions must still be
+   * added to instances of the pipeline for them to be used when running a pipeline.
+   *
+   * @param {lunr.PipelineFunction} fn - The function to check for.
+   * @param {String} label - The label to register this function with
+   */
+  lunr.Pipeline.registerFunction = function (fn, label) {
+    if (label in this.registeredFunctions) {
+      lunr.utils.warn('Overwriting existing registered function: ' + label)
+    }
+  
+    fn.label = label
+    lunr.Pipeline.registeredFunctions[fn.label] = fn
+  }
+  
+  /**
+   * Warns if the function is not registered as a Pipeline function.
+   *
+   * @param {lunr.PipelineFunction} fn - The function to check for.
+   * @private
+   */
+  lunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {
+    var isRegistered = fn.label && (fn.label in this.registeredFunctions)
+  
+    if (!isRegistered) {
+      lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\n', fn)
+    }
+  }
+  
+  /**
+   * Loads a previously serialised pipeline.
+   *
+   * All functions to be loaded must already be registered with lunr.Pipeline.
+   * If any function from the serialised data has not been registered then an
+   * error will be thrown.
+   *
+   * @param {Object} serialised - The serialised pipeline to load.
+   * @returns {lunr.Pipeline}
+   */
+  lunr.Pipeline.load = function (serialised) {
+    var pipeline = new lunr.Pipeline
+  
+    serialised.forEach(function (fnName) {
+      var fn = lunr.Pipeline.registeredFunctions[fnName]
+  
+      if (fn) {
+        pipeline.add(fn)
+      } else {
+        throw new Error('Cannot load unregistered function: ' + fnName)
+      }
+    })
+  
+    return pipeline
+  }
+  
+  /**
+   * Adds new functions to the end of the pipeline.
+   *
+   * Logs a warning if the function has not been registered.
+   *
+   * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.
+   */
+  lunr.Pipeline.prototype.add = function () {
+    var fns = Array.prototype.slice.call(arguments)
+  
+    fns.forEach(function (fn) {
+      lunr.Pipeline.warnIfFunctionNotRegistered(fn)
+      this._stack.push(fn)
+    }, this)
+  }
+  
+  /**
+   * Adds a single function after a function that already exists in the
+   * pipeline.
+   *
+   * Logs a warning if the function has not been registered.
+   *
+   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.
+   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.
+   */
+  lunr.Pipeline.prototype.after = function (existingFn, newFn) {
+    lunr.Pipeline.warnIfFunctionNotRegistered(newFn)
+  
+    var pos = this._stack.indexOf(existingFn)
+    if (pos == -1) {
+      throw new Error('Cannot find existingFn')
+    }
+  
+    pos = pos + 1
+    this._stack.splice(pos, 0, newFn)
+  }
+  
+  /**
+   * Adds a single function before a function that already exists in the
+   * pipeline.
+   *
+   * Logs a warning if the function has not been registered.
+   *
+   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.
+   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.
+   */
+  lunr.Pipeline.prototype.before = function (existingFn, newFn) {
+    lunr.Pipeline.warnIfFunctionNotRegistered(newFn)
+  
+    var pos = this._stack.indexOf(existingFn)
+    if (pos == -1) {
+      throw new Error('Cannot find existingFn')
+    }
+  
+    this._stack.splice(pos, 0, newFn)
+  }
+  
+  /**
+   * Removes a function from the pipeline.
+   *
+   * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.
+   */
+  lunr.Pipeline.prototype.remove = function (fn) {
+    var pos = this._stack.indexOf(fn)
+    if (pos == -1) {
+      return
+    }
+  
+    this._stack.splice(pos, 1)
+  }
+  
+  /**
+   * Runs the current list of functions that make up the pipeline against the
+   * passed tokens.
+   *
+   * @param {Array} tokens The tokens to run through the pipeline.
+   * @returns {Array}
+   */
+  lunr.Pipeline.prototype.run = function (tokens) {
+    var stackLength = this._stack.length
+  
+    for (var i = 0; i < stackLength; i++) {
+      var fn = this._stack[i]
+      var memo = []
+  
+      for (var j = 0; j < tokens.length; j++) {
+        var result = fn(tokens[j], j, tokens)
+  
+        if (result === void 0 || result === '') continue
+  
+        if (Array.isArray(result)) {
+          for (var k = 0; k < result.length; k++) {
+            memo.push(result[k])
+          }
+        } else {
+          memo.push(result)
+        }
+      }
+  
+      tokens = memo
+    }
+  
+    return tokens
+  }
+  
+  /**
+   * Convenience method for passing a string through a pipeline and getting
+   * strings out. This method takes care of wrapping the passed string in a
+   * token and mapping the resulting tokens back to strings.
+   *
+   * @param {string} str - The string to pass through the pipeline.
+   * @param {?object} metadata - Optional metadata to associate with the token
+   * passed to the pipeline.
+   * @returns {string[]}
+   */
+  lunr.Pipeline.prototype.runString = function (str, metadata) {
+    var token = new lunr.Token (str, metadata)
+  
+    return this.run([token]).map(function (t) {
+      return t.toString()
+    })
+  }
+  
+  /**
+   * Resets the pipeline by removing any existing processors.
+   *
+   */
+  lunr.Pipeline.prototype.reset = function () {
+    this._stack = []
+  }
+  
+  /**
+   * Returns a representation of the pipeline ready for serialisation.
+   *
+   * Logs a warning if the function has not been registered.
+   *
+   * @returns {Array}
+   */
+  lunr.Pipeline.prototype.toJSON = function () {
+    return this._stack.map(function (fn) {
+      lunr.Pipeline.warnIfFunctionNotRegistered(fn)
+  
+      return fn.label
+    })
+  }
+  /*!
+   * lunr.Vector
+   * Copyright (C) 2018 Oliver Nightingale
+   */
+  
+  /**
+   * A vector is used to construct the vector space of documents and queries. These
+   * vectors support operations to determine the similarity between two documents or
+   * a document and a query.
+   *
+   * Normally no parameters are required for initializing a vector, but in the case of
+   * loading a previously dumped vector the raw elements can be provided to the constructor.
+   *
+   * For performance reasons vectors are implemented with a flat array, where an elements
+   * index is immediately followed by its value. E.g. [index, value, index, value]. This
+   * allows the underlying array to be as sparse as possible and still offer decent
+   * performance when being used for vector calculations.
+   *
+   * @constructor
+   * @param {Number[]} [elements] - The flat list of element index and element value pairs.
+   */
+  lunr.Vector = function (elements) {
+    this._magnitude = 0
+    this.elements = elements || []
+  }
+  
+  
+  /**
+   * Calculates the position within the vector to insert a given index.
+   *
+   * This is used internally by insert and upsert. If there are duplicate indexes then
+   * the position is returned as if the value for that index were to be updated, but it
+   * is the callers responsibility to check whether there is a duplicate at that index
+   *
+   * @param {Number} insertIdx - The index at which the element should be inserted.
+   * @returns {Number}
+   */
+  lunr.Vector.prototype.positionForIndex = function (index) {
+    // For an empty vector the tuple can be inserted at the beginning
+    if (this.elements.length == 0) {
+      return 0
+    }
+  
+    var start = 0,
+        end = this.elements.length / 2,
+        sliceLength = end - start,
+        pivotPoint = Math.floor(sliceLength / 2),
+        pivotIndex = this.elements[pivotPoint * 2]
+  
+    while (sliceLength > 1) {
+      if (pivotIndex < index) {
+        start = pivotPoint
+      }
+  
+      if (pivotIndex > index) {
+        end = pivotPoint
+      }
+  
+      if (pivotIndex == index) {
+        break
+      }
+  
+      sliceLength = end - start
+      pivotPoint = start + Math.floor(sliceLength / 2)
+      pivotIndex = this.elements[pivotPoint * 2]
+    }
+  
+    if (pivotIndex == index) {
+      return pivotPoint * 2
+    }
+  
+    if (pivotIndex > index) {
+      return pivotPoint * 2
+    }
+  
+    if (pivotIndex < index) {
+      return (pivotPoint + 1) * 2
+    }
+  }
+  
+  /**
+   * Inserts an element at an index within the vector.
+   *
+   * Does not allow duplicates, will throw an error if there is already an entry
+   * for this index.
+   *
+   * @param {Number} insertIdx - The index at which the element should be inserted.
+   * @param {Number} val - The value to be inserted into the vector.
+   */
+  lunr.Vector.prototype.insert = function (insertIdx, val) {
+    this.upsert(insertIdx, val, function () {
+      throw "duplicate index"
+    })
+  }
+  
+  /**
+   * Inserts or updates an existing index within the vector.
+   *
+   * @param {Number} insertIdx - The index at which the element should be inserted.
+   * @param {Number} val - The value to be inserted into the vector.
+   * @param {function} fn - A function that is called for updates, the existing value and the
+   * requested value are passed as arguments
+   */
+  lunr.Vector.prototype.upsert = function (insertIdx, val, fn) {
+    this._magnitude = 0
+    var position = this.positionForIndex(insertIdx)
+  
+    if (this.elements[position] == insertIdx) {
+      this.elements[position + 1] = fn(this.elements[position + 1], val)
+    } else {
+      this.elements.splice(position, 0, insertIdx, val)
+    }
+  }
+  
+  /**
+   * Calculates the magnitude of this vector.
+   *
+   * @returns {Number}
+   */
+  lunr.Vector.prototype.magnitude = function () {
+    if (this._magnitude) return this._magnitude
+  
+    var sumOfSquares = 0,
+        elementsLength = this.elements.length
+  
+    for (var i = 1; i < elementsLength; i += 2) {
+      var val = this.elements[i]
+      sumOfSquares += val * val
+    }
+  
+    return this._magnitude = Math.sqrt(sumOfSquares)
+  }
+  
+  /**
+   * Calculates the dot product of this vector and another vector.
+   *
+   * @param {lunr.Vector} otherVector - The vector to compute the dot product with.
+   * @returns {Number}
+   */
+  lunr.Vector.prototype.dot = function (otherVector) {
+    var dotProduct = 0,
+        a = this.elements, b = otherVector.elements,
+        aLen = a.length, bLen = b.length,
+        aVal = 0, bVal = 0,
+        i = 0, j = 0
+  
+    while (i < aLen && j < bLen) {
+      aVal = a[i], bVal = b[j]
+      if (aVal < bVal) {
+        i += 2
+      } else if (aVal > bVal) {
+        j += 2
+      } else if (aVal == bVal) {
+        dotProduct += a[i + 1] * b[j + 1]
+        i += 2
+        j += 2
+      }
+    }
+  
+    return dotProduct
+  }
+  
+  /**
+   * Calculates the similarity between this vector and another vector.
+   *
+   * @param {lunr.Vector} otherVector - The other vector to calculate the
+   * similarity with.
+   * @returns {Number}
+   */
+  lunr.Vector.prototype.similarity = function (otherVector) {
+    return this.dot(otherVector) / this.magnitude() || 0
+  }
+  
+  /**
+   * Converts the vector to an array of the elements within the vector.
+   *
+   * @returns {Number[]}
+   */
+  lunr.Vector.prototype.toArray = function () {
+    var output = new Array (this.elements.length / 2)
+  
+    for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {
+      output[j] = this.elements[i]
+    }
+  
+    return output
+  }
+  
+  /**
+   * A JSON serializable representation of the vector.
+   *
+   * @returns {Number[]}
+   */
+  lunr.Vector.prototype.toJSON = function () {
+    return this.elements
+  }
+  /* eslint-disable */
+  /*!
+   * lunr.stemmer
+   * Copyright (C) 2018 Oliver Nightingale
+   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt
+   */
+  
+  /**
+   * lunr.stemmer is an english language stemmer, this is a JavaScript
+   * implementation of the PorterStemmer taken from http://tartarus.org/~martin
+   *
+   * @static
+   * @implements {lunr.PipelineFunction}
+   * @param {lunr.Token} token - The string to stem
+   * @returns {lunr.Token}
+   * @see {@link lunr.Pipeline}
+   * @function
+   */
+  lunr.stemmer = (function(){
+    var step2list = {
+        "ational" : "ate",
+        "tional" : "tion",
+        "enci" : "ence",
+        "anci" : "ance",
+        "izer" : "ize",
+        "bli" : "ble",
+        "alli" : "al",
+        "entli" : "ent",
+        "eli" : "e",
+        "ousli" : "ous",
+        "ization" : "ize",
+        "ation" : "ate",
+        "ator" : "ate",
+        "alism" : "al",
+        "iveness" : "ive",
+        "fulness" : "ful",
+        "ousness" : "ous",
+        "aliti" : "al",
+        "iviti" : "ive",
+        "biliti" : "ble",
+        "logi" : "log"
+      },
+  
+      step3list = {
+        "icate" : "ic",
+        "ative" : "",
+        "alize" : "al",
+        "iciti" : "ic",
+        "ical" : "ic",
+        "ful" : "",
+        "ness" : ""
+      },
+  
+      c = "[^aeiou]",          // consonant
+      v = "[aeiouy]",          // vowel
+      C = c + "[^aeiouy]*",    // consonant sequence
+      V = v + "[aeiou]*",      // vowel sequence
+  
+      mgr0 = "^(" + C + ")?" + V + C,               // [C]VC... is m>0
+      meq1 = "^(" + C + ")?" + V + C + "(" + V + ")?$",  // [C]VC[V] is m=1
+      mgr1 = "^(" + C + ")?" + V + C + V + C,       // [C]VCVC... is m>1
+      s_v = "^(" + C + ")?" + v;                   // vowel in stem
+  
+    var re_mgr0 = new RegExp(mgr0);
+    var re_mgr1 = new RegExp(mgr1);
+    var re_meq1 = new RegExp(meq1);
+    var re_s_v = new RegExp(s_v);
+  
+    var re_1a = /^(.+?)(ss|i)es$/;
+    var re2_1a = /^(.+?)([^s])s$/;
+    var re_1b = /^(.+?)eed$/;
+    var re2_1b = /^(.+?)(ed|ing)$/;
+    var re_1b_2 = /.$/;
+    var re2_1b_2 = /(at|bl|iz)$/;
+    var re3_1b_2 = new RegExp("([^aeiouylsz])\\1$");
+    var re4_1b_2 = new RegExp("^" + C + v + "[^aeiouwxy]$");
+  
+    var re_1c = /^(.+?[^aeiou])y$/;
+    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;
+  
+    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;
+  
+    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;
+    var re2_4 = /^(.+?)(s|t)(ion)$/;
+  
+    var re_5 = /^(.+?)e$/;
+    var re_5_1 = /ll$/;
+    var re3_5 = new RegExp("^" + C + v + "[^aeiouwxy]$");
+  
+    var porterStemmer = function porterStemmer(w) {
+      var stem,
+        suffix,
+        firstch,
+        re,
+        re2,
+        re3,
+        re4;
+  
+      if (w.length < 3) { return w; }
+  
+      firstch = w.substr(0,1);
+      if (firstch == "y") {
+        w = firstch.toUpperCase() + w.substr(1);
+      }
+  
+      // Step 1a
+      re = re_1a
+      re2 = re2_1a;
+  
+      if (re.test(w)) { w = w.replace(re,"$1$2"); }
+      else if (re2.test(w)) { w = w.replace(re2,"$1$2"); }
+  
+      // Step 1b
+      re = re_1b;
+      re2 = re2_1b;
+      if (re.test(w)) {
+        var fp = re.exec(w);
+        re = re_mgr0;
+        if (re.test(fp[1])) {
+          re = re_1b_2;
+          w = w.replace(re,"");
+        }
+      } else if (re2.test(w)) {
+        var fp = re2.exec(w);
+        stem = fp[1];
+        re2 = re_s_v;
+        if (re2.test(stem)) {
+          w = stem;
+          re2 = re2_1b_2;
+          re3 = re3_1b_2;
+          re4 = re4_1b_2;
+          if (re2.test(w)) { w = w + "e"; }
+          else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,""); }
+          else if (re4.test(w)) { w = w + "e"; }
+        }
+      }
+  
+      // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)
+      re = re_1c;
+      if (re.test(w)) {
+        var fp = re.exec(w);
+        stem = fp[1];
+        w = stem + "i";
+      }
+  
+      // Step 2
+      re = re_2;
+      if (re.test(w)) {
+        var fp = re.exec(w);
+        stem = fp[1];
+        suffix = fp[2];
+        re = re_mgr0;
+        if (re.test(stem)) {
+          w = stem + step2list[suffix];
+        }
+      }
+  
+      // Step 3
+      re = re_3;
+      if (re.test(w)) {
+        var fp = re.exec(w);
+        stem = fp[1];
+        suffix = fp[2];
+        re = re_mgr0;
+        if (re.test(stem)) {
+          w = stem + step3list[suffix];
+        }
+      }
+  
+      // Step 4
+      re = re_4;
+      re2 = re2_4;
+      if (re.test(w)) {
+        var fp = re.exec(w);
+        stem = fp[1];
+        re = re_mgr1;
+        if (re.test(stem)) {
+          w = stem;
+        }
+      } else if (re2.test(w)) {
+        var fp = re2.exec(w);
+        stem = fp[1] + fp[2];
+        re2 = re_mgr1;
+        if (re2.test(stem)) {
+          w = stem;
+        }
+      }
+  
+      // Step 5
+      re = re_5;
+      if (re.test(w)) {
+        var fp = re.exec(w);
+        stem = fp[1];
+        re = re_mgr1;
+        re2 = re_meq1;
+        re3 = re3_5;
+        if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {
+          w = stem;
+        }
+      }
+  
+      re = re_5_1;
+      re2 = re_mgr1;
+      if (re.test(w) && re2.test(w)) {
+        re = re_1b_2;
+        w = w.replace(re,"");
+      }
+  
+      // and turn initial Y back to y
+  
+      if (firstch == "y") {
+        w = firstch.toLowerCase() + w.substr(1);
+      }
+  
+      return w;
+    };
+  
+    return function (token) {
+      return token.update(porterStemmer);
+    }
+  })();
+  
+  lunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')
+  /*!
+   * lunr.stopWordFilter
+   * Copyright (C) 2018 Oliver Nightingale
+   */
+  
+  /**
+   * lunr.generateStopWordFilter builds a stopWordFilter function from the provided
+   * list of stop words.
+   *
+   * The built in lunr.stopWordFilter is built using this generator and can be used
+   * to generate custom stopWordFilters for applications or non English languages.
+   *
+   * @function
+   * @param {Array} token The token to pass through the filter
+   * @returns {lunr.PipelineFunction}
+   * @see lunr.Pipeline
+   * @see lunr.stopWordFilter
+   */
+  lunr.generateStopWordFilter = function (stopWords) {
+    var words = stopWords.reduce(function (memo, stopWord) {
+      memo[stopWord] = stopWord
+      return memo
+    }, {})
+  
+    return function (token) {
+      if (token && words[token.toString()] !== token.toString()) return token
+    }
+  }
+  
+  /**
+   * lunr.stopWordFilter is an English language stop word list filter, any words
+   * contained in the list will not be passed through the filter.
+   *
+   * This is intended to be used in the Pipeline. If the token does not pass the
+   * filter then undefined will be returned.
+   *
+   * @function
+   * @implements {lunr.PipelineFunction}
+   * @params {lunr.Token} token - A token to check for being a stop word.
+   * @returns {lunr.Token}
+   * @see {@link lunr.Pipeline}
+   */
+  lunr.stopWordFilter = lunr.generateStopWordFilter([
+    'a',
+    'able',
+    'about',
+    'across',
+    'after',
+    'all',
+    'almost',
+    'also',
+    'am',
+    'among',
+    'an',
+    'and',
+    'any',
+    'are',
+    'as',
+    'at',
+    'be',
+    'because',
+    'been',
+    'but',
+    'by',
+    'can',
+    'cannot',
+    'could',
+    'dear',
+    'did',
+    'do',
+    'does',
+    'either',
+    'else',
+    'ever',
+    'every',
+    'for',
+    'from',
+    'get',
+    'got',
+    'had',
+    'has',
+    'have',
+    'he',
+    'her',
+    'hers',
+    'him',
+    'his',
+    'how',
+    'however',
+    'i',
+    'if',
+    'in',
+    'into',
+    'is',
+    'it',
+    'its',
+    'just',
+    'least',
+    'let',
+    'like',
+    'likely',
+    'may',
+    'me',
+    'might',
+    'most',
+    'must',
+    'my',
+    'neither',
+    'no',
+    'nor',
+    'not',
+    'of',
+    'off',
+    'often',
+    'on',
+    'only',
+    'or',
+    'other',
+    'our',
+    'own',
+    'rather',
+    'said',
+    'say',
+    'says',
+    'she',
+    'should',
+    'since',
+    'so',
+    'some',
+    'than',
+    'that',
+    'the',
+    'their',
+    'them',
+    'then',
+    'there',
+    'these',
+    'they',
+    'this',
+    'tis',
+    'to',
+    'too',
+    'twas',
+    'us',
+    'wants',
+    'was',
+    'we',
+    'were',
+    'what',
+    'when',
+    'where',
+    'which',
+    'while',
+    'who',
+    'whom',
+    'why',
+    'will',
+    'with',
+    'would',
+    'yet',
+    'you',
+    'your'
+  ])
+  
+  lunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')
+  /*!
+   * lunr.trimmer
+   * Copyright (C) 2018 Oliver Nightingale
+   */
+  
+  /**
+   * lunr.trimmer is a pipeline function for trimming non word
+   * characters from the beginning and end of tokens before they
+   * enter the index.
+   *
+   * This implementation may not work correctly for non latin
+   * characters and should either be removed or adapted for use
+   * with languages with non-latin characters.
+   *
+   * @static
+   * @implements {lunr.PipelineFunction}
+   * @param {lunr.Token} token The token to pass through the filter
+   * @returns {lunr.Token}
+   * @see lunr.Pipeline
+   */
+  lunr.trimmer = function (token) {
+    return token.update(function (s) {
+      return s.replace(/^\W+/, '').replace(/\W+$/, '')
+    })
+  }
+  
+  lunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')
+  /*!
+   * lunr.TokenSet
+   * Copyright (C) 2018 Oliver Nightingale
+   */
+  
+  /**
+   * A token set is used to store the unique list of all tokens
+   * within an index. Token sets are also used to represent an
+   * incoming query to the index, this query token set and index
+   * token set are then intersected to find which tokens to look
+   * up in the inverted index.
+   *
+   * A token set can hold multiple tokens, as in the case of the
+   * index token set, or it can hold a single token as in the
+   * case of a simple query token set.
+   *
+   * Additionally token sets are used to perform wildcard matching.
+   * Leading, contained and trailing wildcards are supported, and
+   * from this edit distance matching can also be provided.
+   *
+   * Token sets are implemented as a minimal finite state automata,
+   * where both common prefixes and suffixes are shared between tokens.
+   * This helps to reduce the space used for storing the token set.
+   *
+   * @constructor
+   */
+  lunr.TokenSet = function () {
+    this.final = false
+    this.edges = {}
+    this.id = lunr.TokenSet._nextId
+    lunr.TokenSet._nextId += 1
+  }
+  
+  /**
+   * Keeps track of the next, auto increment, identifier to assign
+   * to a new tokenSet.
+   *
+   * TokenSets require a unique identifier to be correctly minimised.
+   *
+   * @private
+   */
+  lunr.TokenSet._nextId = 1
+  
+  /**
+   * Creates a TokenSet instance from the given sorted array of words.
+   *
+   * @param {String[]} arr - A sorted array of strings to create the set from.
+   * @returns {lunr.TokenSet}
+   * @throws Will throw an error if the input array is not sorted.
+   */
+  lunr.TokenSet.fromArray = function (arr) {
+    var builder = new lunr.TokenSet.Builder
+  
+    for (var i = 0, len = arr.length; i < len; i++) {
+      builder.insert(arr[i])
+    }
+  
+    builder.finish()
+    return builder.root
+  }
+  
+  /**
+   * Creates a token set from a query clause.
+   *
+   * @private
+   * @param {Object} clause - A single clause from lunr.Query.
+   * @param {string} clause.term - The query clause term.
+   * @param {number} [clause.editDistance] - The optional edit distance for the term.
+   * @returns {lunr.TokenSet}
+   */
+  lunr.TokenSet.fromClause = function (clause) {
+    if ('editDistance' in clause) {
+      return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)
+    } else {
+      return lunr.TokenSet.fromString(clause.term)
+    }
+  }
+  
+  /**
+   * Creates a token set representing a single string with a specified
+   * edit distance.
+   *
+   * Insertions, deletions, substitutions and transpositions are each
+   * treated as an edit distance of 1.
+   *
+   * Increasing the allowed edit distance will have a dramatic impact
+   * on the performance of both creating and intersecting these TokenSets.
+   * It is advised to keep the edit distance less than 3.
+   *
+   * @param {string} str - The string to create the token set from.
+   * @param {number} editDistance - The allowed edit distance to match.
+   * @returns {lunr.Vector}
+   */
+  lunr.TokenSet.fromFuzzyString = function (str, editDistance) {
+    var root = new lunr.TokenSet
+  
+    var stack = [{
+      node: root,
+      editsRemaining: editDistance,
+      str: str
+    }]
+  
+    while (stack.length) {
+      var frame = stack.pop()
+  
+      // no edit
+      if (frame.str.length > 0) {
+        var char = frame.str.charAt(0),
+            noEditNode
+  
+        if (char in frame.node.edges) {
+          noEditNode = frame.node.edges[char]
+        } else {
+          noEditNode = new lunr.TokenSet
+          frame.node.edges[char] = noEditNode
+        }
+  
+        if (frame.str.length == 1) {
+          noEditNode.final = true
+        }
+  
+        stack.push({
+          node: noEditNode,
+          editsRemaining: frame.editsRemaining,
+          str: frame.str.slice(1)
+        })
+      }
+  
+      // deletion
+      // can only do a deletion if we have enough edits remaining
+      // and if there are characters left to delete in the string
+      if (frame.editsRemaining > 0 && frame.str.length > 1) {
+        var char = frame.str.charAt(1),
+            deletionNode
+  
+        if (char in frame.node.edges) {
+          deletionNode = frame.node.edges[char]
+        } else {
+          deletionNode = new lunr.TokenSet
+          frame.node.edges[char] = deletionNode
+        }
+  
+        if (frame.str.length <= 2) {
+          deletionNode.final = true
+        } else {
+          stack.push({
+            node: deletionNode,
+            editsRemaining: frame.editsRemaining - 1,
+            str: frame.str.slice(2)
+          })
+        }
+      }
+  
+      // deletion
+      // just removing the last character from the str
+      if (frame.editsRemaining > 0 && frame.str.length == 1) {
+        frame.node.final = true
+      }
+  
+      // substitution
+      // can only do a substitution if we have enough edits remaining
+      // and if there are characters left to substitute
+      if (frame.editsRemaining > 0 && frame.str.length >= 1) {
+        if ("*" in frame.node.edges) {
+          var substitutionNode = frame.node.edges["*"]
+        } else {
+          var substitutionNode = new lunr.TokenSet
+          frame.node.edges["*"] = substitutionNode
+        }
+  
+        if (frame.str.length == 1) {
+          substitutionNode.final = true
+        } else {
+          stack.push({
+            node: substitutionNode,
+            editsRemaining: frame.editsRemaining - 1,
+            str: frame.str.slice(1)
+          })
+        }
+      }
+  
+      // insertion
+      // can only do insertion if there are edits remaining
+      if (frame.editsRemaining > 0) {
+        if ("*" in frame.node.edges) {
+          var insertionNode = frame.node.edges["*"]
+        } else {
+          var insertionNode = new lunr.TokenSet
+          frame.node.edges["*"] = insertionNode
+        }
+  
+        if (frame.str.length == 0) {
+          insertionNode.final = true
+        } else {
+          stack.push({
+            node: insertionNode,
+            editsRemaining: frame.editsRemaining - 1,
+            str: frame.str
+          })
+        }
+      }
+  
+      // transposition
+      // can only do a transposition if there are edits remaining
+      // and there are enough characters to transpose
+      if (frame.editsRemaining > 0 && frame.str.length > 1) {
+        var charA = frame.str.charAt(0),
+            charB = frame.str.charAt(1),
+            transposeNode
+  
+        if (charB in frame.node.edges) {
+          transposeNode = frame.node.edges[charB]
+        } else {
+          transposeNode = new lunr.TokenSet
+          frame.node.edges[charB] = transposeNode
+        }
+  
+        if (frame.str.length == 1) {
+          transposeNode.final = true
+        } else {
+          stack.push({
+            node: transposeNode,
+            editsRemaining: frame.editsRemaining - 1,
+            str: charA + frame.str.slice(2)
+          })
+        }
+      }
+    }
+  
+    return root
+  }
+  
+  /**
+   * Creates a TokenSet from a string.
+   *
+   * The string may contain one or more wildcard characters (*)
+   * that will allow wildcard matching when intersecting with
+   * another TokenSet.
+   *
+   * @param {string} str - The string to create a TokenSet from.
+   * @returns {lunr.TokenSet}
+   */
+  lunr.TokenSet.fromString = function (str) {
+    var node = new lunr.TokenSet,
+        root = node
+  
+    /*
+     * Iterates through all characters within the passed string
+     * appending a node for each character.
+     *
+     * When a wildcard character is found then a self
+     * referencing edge is introduced to continually match
+     * any number of any characters.
+     */
+    for (var i = 0, len = str.length; i < len; i++) {
+      var char = str[i],
+          final = (i == len - 1)
+  
+      if (char == "*") {
+        node.edges[char] = node
+        node.final = final
+  
+      } else {
+        var next = new lunr.TokenSet
+        next.final = final
+  
+        node.edges[char] = next
+        node = next
+      }
+    }
+  
+    return root
+  }
+  
+  /**
+   * Converts this TokenSet into an array of strings
+   * contained within the TokenSet.
+   *
+   * @returns {string[]}
+   */
+  lunr.TokenSet.prototype.toArray = function () {
+    var words = []
+  
+    var stack = [{
+      prefix: "",
+      node: this
+    }]
+  
+    while (stack.length) {
+      var frame = stack.pop(),
+          edges = Object.keys(frame.node.edges),
+          len = edges.length
+  
+      if (frame.node.final) {
+        /* In Safari, at this point the prefix is sometimes corrupted, see:
+         * https://github.com/olivernn/lunr.js/issues/279 Calling any
+         * String.prototype method forces Safari to "cast" this string to what
+         * it's supposed to be, fixing the bug. */
+        frame.prefix.charAt(0)
+        words.push(frame.prefix)
+      }
+  
+      for (var i = 0; i < len; i++) {
+        var edge = edges[i]
+  
+        stack.push({
+          prefix: frame.prefix.concat(edge),
+          node: frame.node.edges[edge]
+        })
+      }
+    }
+  
+    return words
+  }
+  
+  /**
+   * Generates a string representation of a TokenSet.
+   *
+   * This is intended to allow TokenSets to be used as keys
+   * in objects, largely to aid the construction and minimisation
+   * of a TokenSet. As such it is not designed to be a human
+   * friendly representation of the TokenSet.
+   *
+   * @returns {string}
+   */
+  lunr.TokenSet.prototype.toString = function () {
+    // NOTE: Using Object.keys here as this.edges is very likely
+    // to enter 'hash-mode' with many keys being added
+    //
+    // avoiding a for-in loop here as it leads to the function
+    // being de-optimised (at least in V8). From some simple
+    // benchmarks the performance is comparable, but allowing
+    // V8 to optimize may mean easy performance wins in the future.
+  
+    if (this._str) {
+      return this._str
+    }
+  
+    var str = this.final ? '1' : '0',
+        labels = Object.keys(this.edges).sort(),
+        len = labels.length
+  
+    for (var i = 0; i < len; i++) {
+      var label = labels[i],
+          node = this.edges[label]
+  
+      str = str + label + node.id
+    }
+  
+    return str
+  }
+  
+  /**
+   * Returns a new TokenSet that is the intersection of
+   * this TokenSet and the passed TokenSet.
+   *
+   * This intersection will take into account any wildcards
+   * contained within the TokenSet.
+   *
+   * @param {lunr.TokenSet} b - An other TokenSet to intersect with.
+   * @returns {lunr.TokenSet}
+   */
+  lunr.TokenSet.prototype.intersect = function (b) {
+    var output = new lunr.TokenSet,
+        frame = undefined
+  
+    var stack = [{
+      qNode: b,
+      output: output,
+      node: this
+    }]
+  
+    while (stack.length) {
+      frame = stack.pop()
+  
+      // NOTE: As with the #toString method, we are using
+      // Object.keys and a for loop instead of a for-in loop
+      // as both of these objects enter 'hash' mode, causing
+      // the function to be de-optimised in V8
+      var qEdges = Object.keys(frame.qNode.edges),
+          qLen = qEdges.length,
+          nEdges = Object.keys(frame.node.edges),
+          nLen = nEdges.length
+  
+      for (var q = 0; q < qLen; q++) {
+        var qEdge = qEdges[q]
+  
+        for (var n = 0; n < nLen; n++) {
+          var nEdge = nEdges[n]
+  
+          if (nEdge == qEdge || qEdge == '*') {
+            var node = frame.node.edges[nEdge],
+                qNode = frame.qNode.edges[qEdge],
+                final = node.final && qNode.final,
+                next = undefined
+  
+            if (nEdge in frame.output.edges) {
+              // an edge already exists for this character
+              // no need to create a new node, just set the finality
+              // bit unless this node is already final
+              next = frame.output.edges[nEdge]
+              next.final = next.final || final
+  
+            } else {
+              // no edge exists yet, must create one
+              // set the finality bit and insert it
+              // into the output
+              next = new lunr.TokenSet
+              next.final = final
+              frame.output.edges[nEdge] = next
+            }
+  
+            stack.push({
+              qNode: qNode,
+              output: next,
+              node: node
+            })
+          }
+        }
+      }
+    }
+  
+    return output
+  }
+  lunr.TokenSet.Builder = function () {
+    this.previousWord = ""
+    this.root = new lunr.TokenSet
+    this.uncheckedNodes = []
+    this.minimizedNodes = {}
+  }
+  
+  lunr.TokenSet.Builder.prototype.insert = function (word) {
+    var node,
+        commonPrefix = 0
+  
+    if (word < this.previousWord) {
+      throw new Error ("Out of order word insertion")
+    }
+  
+    for (var i = 0; i < word.length && i < this.previousWord.length; i++) {
+      if (word[i] != this.previousWord[i]) break
+      commonPrefix++
+    }
+  
+    this.minimize(commonPrefix)
+  
+    if (this.uncheckedNodes.length == 0) {
+      node = this.root
+    } else {
+      node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child
+    }
+  
+    for (var i = commonPrefix; i < word.length; i++) {
+      var nextNode = new lunr.TokenSet,
+          char = word[i]
+  
+      node.edges[char] = nextNode
+  
+      this.uncheckedNodes.push({
+        parent: node,
+        char: char,
+        child: nextNode
+      })
+  
+      node = nextNode
+    }
+  
+    node.final = true
+    this.previousWord = word
+  }
+  
+  lunr.TokenSet.Builder.prototype.finish = function () {
+    this.minimize(0)
+  }
+  
+  lunr.TokenSet.Builder.prototype.minimize = function (downTo) {
+    for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {
+      var node = this.uncheckedNodes[i],
+          childKey = node.child.toString()
+  
+      if (childKey in this.minimizedNodes) {
+        node.parent.edges[node.char] = this.minimizedNodes[childKey]
+      } else {
+        // Cache the key for this node since
+        // we know it can't change anymore
+        node.child._str = childKey
+  
+        this.minimizedNodes[childKey] = node.child
+      }
+  
+      this.uncheckedNodes.pop()
+    }
+  }
+  /*!
+   * lunr.Index
+   * Copyright (C) 2018 Oliver Nightingale
+   */
+  
+  /**
+   * An index contains the built index of all documents and provides a query interface
+   * to the index.
+   *
+   * Usually instances of lunr.Index will not be created using this constructor, instead
+   * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be
+   * used to load previously built and serialized indexes.
+   *
+   * @constructor
+   * @param {Object} attrs - The attributes of the built search index.
+   * @param {Object} attrs.invertedIndex - An index of term/field to document reference.
+   * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors
+   * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.
+   * @param {string[]} attrs.fields - The names of indexed document fields.
+   * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.
+   */
+  lunr.Index = function (attrs) {
+    this.invertedIndex = attrs.invertedIndex
+    this.fieldVectors = attrs.fieldVectors
+    this.tokenSet = attrs.tokenSet
+    this.fields = attrs.fields
+    this.pipeline = attrs.pipeline
+  }
+  
+  /**
+   * A result contains details of a document matching a search query.
+   * @typedef {Object} lunr.Index~Result
+   * @property {string} ref - The reference of the document this result represents.
+   * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.
+   * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.
+   */
+  
+  /**
+   * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple
+   * query language which itself is parsed into an instance of lunr.Query.
+   *
+   * For programmatically building queries it is advised to directly use lunr.Query, the query language
+   * is best used for human entered text rather than program generated text.
+   *
+   * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported
+   * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'
+   * or 'world', though those that contain both will rank higher in the results.
+   *
+   * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can
+   * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding
+   * wildcards will increase the number of documents that will be found but can also have a negative
+   * impact on query performance, especially with wildcards at the beginning of a term.
+   *
+   * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term
+   * hello in the title field will match this query. Using a field not present in the index will lead
+   * to an error being thrown.
+   *
+   * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term
+   * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported
+   * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.
+   * Avoid large values for edit distance to improve query performance.
+   *
+   * Each term also supports a presence modifier. By default a term's presence in document is optional, however
+   * this can be changed to either required or prohibited. For a term's presence to be required in a document the
+   * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and
+   * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not
+   * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.
+   *
+   * To escape special characters the backslash character '\' can be used, this allows searches to include
+   * characters that would normally be considered modifiers, e.g. `foo\~2` will search for a term "foo~2" instead
+   * of attempting to apply a boost of 2 to the search term "foo".
+   *
+   * @typedef {string} lunr.Index~QueryString
+   * @example <caption>Simple single term query</caption>
+   * hello
+   * @example <caption>Multiple term query</caption>
+   * hello world
+   * @example <caption>term scoped to a field</caption>
+   * title:hello
+   * @example <caption>term with a boost of 10</caption>
+   * hello^10
+   * @example <caption>term with an edit distance of 2</caption>
+   * hello~2
+   * @example <caption>terms with presence modifiers</caption>
+   * -foo +bar baz
+   */
+  
+  /**
+   * Performs a search against the index using lunr query syntax.
+   *
+   * Results will be returned sorted by their score, the most relevant results
+   * will be returned first.  For details on how the score is calculated, please see
+   * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.
+   *
+   * For more programmatic querying use lunr.Index#query.
+   *
+   * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.
+   * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.
+   * @returns {lunr.Index~Result[]}
+   */
+  lunr.Index.prototype.search = function (queryString) {
+    return this.query(function (query) {
+      var parser = new lunr.QueryParser(queryString, query)
+      parser.parse()
+    })
+  }
+  
+  /**
+   * A query builder callback provides a query object to be used to express
+   * the query to perform on the index.
+   *
+   * @callback lunr.Index~queryBuilder
+   * @param {lunr.Query} query - The query object to build up.
+   * @this lunr.Query
+   */
+  
+  /**
+   * Performs a query against the index using the yielded lunr.Query object.
+   *
+   * If performing programmatic queries against the index, this method is preferred
+   * over lunr.Index#search so as to avoid the additional query parsing overhead.
+   *
+   * A query object is yielded to the supplied function which should be used to
+   * express the query to be run against the index.
+   *
+   * Note that although this function takes a callback parameter it is _not_ an
+   * asynchronous operation, the callback is just yielded a query object to be
+   * customized.
+   *
+   * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.
+   * @returns {lunr.Index~Result[]}
+   */
+  lunr.Index.prototype.query = function (fn) {
+    // for each query clause
+    // * process terms
+    // * expand terms from token set
+    // * find matching documents and metadata
+    // * get document vectors
+    // * score documents
+  
+    var query = new lunr.Query(this.fields),
+        matchingFields = Object.create(null),
+        queryVectors = Object.create(null),
+        termFieldCache = Object.create(null),
+        requiredMatches = Object.create(null),
+        prohibitedMatches = Object.create(null)
+  
+    /*
+     * To support field level boosts a query vector is created per
+     * field. An empty vector is eagerly created to support negated
+     * queries.
+     */
+    for (var i = 0; i < this.fields.length; i++) {
+      queryVectors[this.fields[i]] = new lunr.Vector
+    }
+  
+    fn.call(query, query)
+  
+    for (var i = 0; i < query.clauses.length; i++) {
+      /*
+       * Unless the pipeline has been disabled for this term, which is
+       * the case for terms with wildcards, we need to pass the clause
+       * term through the search pipeline. A pipeline returns an array
+       * of processed terms. Pipeline functions may expand the passed
+       * term, which means we may end up performing multiple index lookups
+       * for a single query term.
+       */
+      var clause = query.clauses[i],
+          terms = null,
+          clauseMatches = lunr.Set.complete
+  
+      if (clause.usePipeline) {
+        terms = this.pipeline.runString(clause.term, {
+          fields: clause.fields
+        })
+      } else {
+        terms = [clause.term]
+      }
+  
+      for (var m = 0; m < terms.length; m++) {
+        var term = terms[m]
+  
+        /*
+         * Each term returned from the pipeline needs to use the same query
+         * clause object, e.g. the same boost and or edit distance. The
+         * simplest way to do this is to re-use the clause object but mutate
+         * its term property.
+         */
+        clause.term = term
+  
+        /*
+         * From the term in the clause we create a token set which will then
+         * be used to intersect the indexes token set to get a list of terms
+         * to lookup in the inverted index
+         */
+        var termTokenSet = lunr.TokenSet.fromClause(clause),
+            expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()
+  
+        /*
+         * If a term marked as required does not exist in the tokenSet it is
+         * impossible for the search to return any matches. We set all the field
+         * scoped required matches set to empty and stop examining any further
+         * clauses.
+         */
+        if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {
+          for (var k = 0; k < clause.fields.length; k++) {
+            var field = clause.fields[k]
+            requiredMatches[field] = lunr.Set.empty
+          }
+  
+          break
+        }
+  
+        for (var j = 0; j < expandedTerms.length; j++) {
+          /*
+           * For each term get the posting and termIndex, this is required for
+           * building the query vector.
+           */
+          var expandedTerm = expandedTerms[j],
+              posting = this.invertedIndex[expandedTerm],
+              termIndex = posting._index
+  
+          for (var k = 0; k < clause.fields.length; k++) {
+            /*
+             * For each field that this query term is scoped by (by default
+             * all fields are in scope) we need to get all the document refs
+             * that have this term in that field.
+             *
+             * The posting is the entry in the invertedIndex for the matching
+             * term from above.
+             */
+            var field = clause.fields[k],
+                fieldPosting = posting[field],
+                matchingDocumentRefs = Object.keys(fieldPosting),
+                termField = expandedTerm + "/" + field,
+                matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)
+  
+            /*
+             * if the presence of this term is required ensure that the matching
+             * documents are added to the set of required matches for this clause.
+             *
+             */
+            if (clause.presence == lunr.Query.presence.REQUIRED) {
+              clauseMatches = clauseMatches.union(matchingDocumentsSet)
+  
+              if (requiredMatches[field] === undefined) {
+                requiredMatches[field] = lunr.Set.complete
+              }
+            }
+  
+            /*
+             * if the presence of this term is prohibited ensure that the matching
+             * documents are added to the set of prohibited matches for this field,
+             * creating that set if it does not yet exist.
+             */
+            if (clause.presence == lunr.Query.presence.PROHIBITED) {
+              if (prohibitedMatches[field] === undefined) {
+                prohibitedMatches[field] = lunr.Set.empty
+              }
+  
+              prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)
+  
+              /*
+               * Prohibited matches should not be part of the query vector used for
+               * similarity scoring and no metadata should be extracted so we continue
+               * to the next field
+               */
+              continue
+            }
+  
+            /*
+             * The query field vector is populated using the termIndex found for
+             * the term and a unit value with the appropriate boost applied.
+             * Using upsert because there could already be an entry in the vector
+             * for the term we are working with. In that case we just add the scores
+             * together.
+             */
+            queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })
+  
+            /**
+             * If we've already seen this term, field combo then we've already collected
+             * the matching documents and metadata, no need to go through all that again
+             */
+            if (termFieldCache[termField]) {
+              continue
+            }
+  
+            for (var l = 0; l < matchingDocumentRefs.length; l++) {
+              /*
+               * All metadata for this term/field/document triple
+               * are then extracted and collected into an instance
+               * of lunr.MatchData ready to be returned in the query
+               * results
+               */
+              var matchingDocumentRef = matchingDocumentRefs[l],
+                  matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),
+                  metadata = fieldPosting[matchingDocumentRef],
+                  fieldMatch
+  
+              if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {
+                matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)
+              } else {
+                fieldMatch.add(expandedTerm, field, metadata)
+              }
+  
+            }
+  
+            termFieldCache[termField] = true
+          }
+        }
+      }
+  
+      /**
+       * If the presence was required we need to update the requiredMatches field sets.
+       * We do this after all fields for the term have collected their matches because
+       * the clause terms presence is required in _any_ of the fields not _all_ of the
+       * fields.
+       */
+      if (clause.presence === lunr.Query.presence.REQUIRED) {
+        for (var k = 0; k < clause.fields.length; k++) {
+          var field = clause.fields[k]
+          requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)
+        }
+      }
+    }
+  
+    /**
+     * Need to combine the field scoped required and prohibited
+     * matching documents into a global set of required and prohibited
+     * matches
+     */
+    var allRequiredMatches = lunr.Set.complete,
+        allProhibitedMatches = lunr.Set.empty
+  
+    for (var i = 0; i < this.fields.length; i++) {
+      var field = this.fields[i]
+  
+      if (requiredMatches[field]) {
+        allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])
+      }
+  
+      if (prohibitedMatches[field]) {
+        allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])
+      }
+    }
+  
+    var matchingFieldRefs = Object.keys(matchingFields),
+        results = [],
+        matches = Object.create(null)
+  
+    /*
+     * If the query is negated (contains only prohibited terms)
+     * we need to get _all_ fieldRefs currently existing in the
+     * index. This is only done when we know that the query is
+     * entirely prohibited terms to avoid any cost of getting all
+     * fieldRefs unnecessarily.
+     *
+     * Additionally, blank MatchData must be created to correctly
+     * populate the results.
+     */
+    if (query.isNegated()) {
+      matchingFieldRefs = Object.keys(this.fieldVectors)
+  
+      for (var i = 0; i < matchingFieldRefs.length; i++) {
+        var matchingFieldRef = matchingFieldRefs[i]
+        var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)
+        matchingFields[matchingFieldRef] = new lunr.MatchData
+      }
+    }
+  
+    for (var i = 0; i < matchingFieldRefs.length; i++) {
+      /*
+       * Currently we have document fields that match the query, but we
+       * need to return documents. The matchData and scores are combined
+       * from multiple fields belonging to the same document.
+       *
+       * Scores are calculated by field, using the query vectors created
+       * above, and combined into a final document score using addition.
+       */
+      var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),
+          docRef = fieldRef.docRef
+  
+      if (!allRequiredMatches.contains(docRef)) {
+        continue
+      }
+  
+      if (allProhibitedMatches.contains(docRef)) {
+        continue
+      }
+  
+      var fieldVector = this.fieldVectors[fieldRef],
+          score = queryVectors[fieldRef.fieldName].similarity(fieldVector),
+          docMatch
+  
+      if ((docMatch = matches[docRef]) !== undefined) {
+        docMatch.score += score
+        docMatch.matchData.combine(matchingFields[fieldRef])
+      } else {
+        var match = {
+          ref: docRef,
+          score: score,
+          matchData: matchingFields[fieldRef]
+        }
+        matches[docRef] = match
+        results.push(match)
+      }
+    }
+  
+    /*
+     * Sort the results objects by score, highest first.
+     */
+    return results.sort(function (a, b) {
+      return b.score - a.score
+    })
+  }
+  
+  /**
+   * Prepares the index for JSON serialization.
+   *
+   * The schema for this JSON blob will be described in a
+   * separate JSON schema file.
+   *
+   * @returns {Object}
+   */
+  lunr.Index.prototype.toJSON = function () {
+    var invertedIndex = Object.keys(this.invertedIndex)
+      .sort()
+      .map(function (term) {
+        return [term, this.invertedIndex[term]]
+      }, this)
+  
+    var fieldVectors = Object.keys(this.fieldVectors)
+      .map(function (ref) {
+        return [ref, this.fieldVectors[ref].toJSON()]
+      }, this)
+  
+    return {
+      version: lunr.version,
+      fields: this.fields,
+      fieldVectors: fieldVectors,
+      invertedIndex: invertedIndex,
+      pipeline: this.pipeline.toJSON()
+    }
+  }
+  
+  /**
+   * Loads a previously serialized lunr.Index
+   *
+   * @param {Object} serializedIndex - A previously serialized lunr.Index
+   * @returns {lunr.Index}
+   */
+  lunr.Index.load = function (serializedIndex) {
+    var attrs = {},
+        fieldVectors = {},
+        serializedVectors = serializedIndex.fieldVectors,
+        invertedIndex = Object.create(null),
+        serializedInvertedIndex = serializedIndex.invertedIndex,
+        tokenSetBuilder = new lunr.TokenSet.Builder,
+        pipeline = lunr.Pipeline.load(serializedIndex.pipeline)
+  
+    if (serializedIndex.version != lunr.version) {
+      lunr.utils.warn("Version mismatch when loading serialised index. Current version of lunr '" + lunr.version + "' does not match serialized index '" + serializedIndex.version + "'")
+    }
+  
+    for (var i = 0; i < serializedVectors.length; i++) {
+      var tuple = serializedVectors[i],
+          ref = tuple[0],
+          elements = tuple[1]
+  
+      fieldVectors[ref] = new lunr.Vector(elements)
+    }
+  
+    for (var i = 0; i < serializedInvertedIndex.length; i++) {
+      var tuple = serializedInvertedIndex[i],
+          term = tuple[0],
+          posting = tuple[1]
+  
+      tokenSetBuilder.insert(term)
+      invertedIndex[term] = posting
+    }
+  
+    tokenSetBuilder.finish()
+  
+    attrs.fields = serializedIndex.fields
+  
+    attrs.fieldVectors = fieldVectors
+    attrs.invertedIndex = invertedIndex
+    attrs.tokenSet = tokenSetBuilder.root
+    attrs.pipeline = pipeline
+  
+    return new lunr.Index(attrs)
+  }
+  /*!
+   * lunr.Builder
+   * Copyright (C) 2018 Oliver Nightingale
+   */
+  
+  /**
+   * lunr.Builder performs indexing on a set of documents and
+   * returns instances of lunr.Index ready for querying.
+   *
+   * All configuration of the index is done via the builder, the
+   * fields to index, the document reference, the text processing
+   * pipeline and document scoring parameters are all set on the
+   * builder before indexing.
+   *
+   * @constructor
+   * @property {string} _ref - Internal reference to the document reference field.
+   * @property {string[]} _fields - Internal reference to the document fields to index.
+   * @property {object} invertedIndex - The inverted index maps terms to document fields.
+   * @property {object} documentTermFrequencies - Keeps track of document term frequencies.
+   * @property {object} documentLengths - Keeps track of the length of documents added to the index.
+   * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.
+   * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.
+   * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.
+   * @property {number} documentCount - Keeps track of the total number of documents indexed.
+   * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.
+   * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.
+   * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.
+   * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.
+   */
+  lunr.Builder = function () {
+    this._ref = "id"
+    this._fields = Object.create(null)
+    this._documents = Object.create(null)
+    this.invertedIndex = Object.create(null)
+    this.fieldTermFrequencies = {}
+    this.fieldLengths = {}
+    this.tokenizer = lunr.tokenizer
+    this.pipeline = new lunr.Pipeline
+    this.searchPipeline = new lunr.Pipeline
+    this.documentCount = 0
+    this._b = 0.75
+    this._k1 = 1.2
+    this.termIndex = 0
+    this.metadataWhitelist = []
+  }
+  
+  /**
+   * Sets the document field used as the document reference. Every document must have this field.
+   * The type of this field in the document should be a string, if it is not a string it will be
+   * coerced into a string by calling toString.
+   *
+   * The default ref is 'id'.
+   *
+   * The ref should _not_ be changed during indexing, it should be set before any documents are
+   * added to the index. Changing it during indexing can lead to inconsistent results.
+   *
+   * @param {string} ref - The name of the reference field in the document.
+   */
+  lunr.Builder.prototype.ref = function (ref) {
+    this._ref = ref
+  }
+  
+  /**
+   * A function that is used to extract a field from a document.
+   *
+   * Lunr expects a field to be at the top level of a document, if however the field
+   * is deeply nested within a document an extractor function can be used to extract
+   * the right field for indexing.
+   *
+   * @callback fieldExtractor
+   * @param {object} doc - The document being added to the index.
+   * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.
+   * @example <caption>Extracting a nested field</caption>
+   * function (doc) { return doc.nested.field }
+   */
+  
+  /**
+   * Adds a field to the list of document fields that will be indexed. Every document being
+   * indexed should have this field. Null values for this field in indexed documents will
+   * not cause errors but will limit the chance of that document being retrieved by searches.
+   *
+   * All fields should be added before adding documents to the index. Adding fields after
+   * a document has been indexed will have no effect on already indexed documents.
+   *
+   * Fields can be boosted at build time. This allows terms within that field to have more
+   * importance when ranking search results. Use a field boost to specify that matches within
+   * one field are more important than other fields.
+   *
+   * @param {string} fieldName - The name of a field to index in all documents.
+   * @param {object} attributes - Optional attributes associated with this field.
+   * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.
+   * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.
+   * @throws {RangeError} fieldName cannot contain unsupported characters '/'
+   */
+  lunr.Builder.prototype.field = function (fieldName, attributes) {
+    if (/\//.test(fieldName)) {
+      throw new RangeError ("Field '" + fieldName + "' contains illegal character '/'")
+    }
+  
+    this._fields[fieldName] = attributes || {}
+  }
+  
+  /**
+   * A parameter to tune the amount of field length normalisation that is applied when
+   * calculating relevance scores. A value of 0 will completely disable any normalisation
+   * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b
+   * will be clamped to the range 0 - 1.
+   *
+   * @param {number} number - The value to set for this tuning parameter.
+   */
+  lunr.Builder.prototype.b = function (number) {
+    if (number < 0) {
+      this._b = 0
+    } else if (number > 1) {
+      this._b = 1
+    } else {
+      this._b = number
+    }
+  }
+  
+  /**
+   * A parameter that controls the speed at which a rise in term frequency results in term
+   * frequency saturation. The default value is 1.2. Setting this to a higher value will give
+   * slower saturation levels, a lower value will result in quicker saturation.
+   *
+   * @param {number} number - The value to set for this tuning parameter.
+   */
+  lunr.Builder.prototype.k1 = function (number) {
+    this._k1 = number
+  }
+  
+  /**
+   * Adds a document to the index.
+   *
+   * Before adding fields to the index the index should have been fully setup, with the document
+   * ref and all fields to index already having been specified.
+   *
+   * The document must have a field name as specified by the ref (by default this is 'id') and
+   * it should have all fields defined for indexing, though null or undefined values will not
+   * cause errors.
+   *
+   * Entire documents can be boosted at build time. Applying a boost to a document indicates that
+   * this document should rank higher in search results than other documents.
+   *
+   * @param {object} doc - The document to add to the index.
+   * @param {object} attributes - Optional attributes associated with this document.
+   * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.
+   */
+  lunr.Builder.prototype.add = function (doc, attributes) {
+    var docRef = doc[this._ref],
+        fields = Object.keys(this._fields)
+  
+    this._documents[docRef] = attributes || {}
+    this.documentCount += 1
+  
+    for (var i = 0; i < fields.length; i++) {
+      var fieldName = fields[i],
+          extractor = this._fields[fieldName].extractor,
+          field = extractor ? extractor(doc) : doc[fieldName],
+          tokens = this.tokenizer(field, {
+            fields: [fieldName]
+          }),
+          terms = this.pipeline.run(tokens),
+          fieldRef = new lunr.FieldRef (docRef, fieldName),
+          fieldTerms = Object.create(null)
+  
+      this.fieldTermFrequencies[fieldRef] = fieldTerms
+      this.fieldLengths[fieldRef] = 0
+  
+      // store the length of this field for this document
+      this.fieldLengths[fieldRef] += terms.length
+  
+      // calculate term frequencies for this field
+      for (var j = 0; j < terms.length; j++) {
+        var term = terms[j]
+  
+        if (fieldTerms[term] == undefined) {
+          fieldTerms[term] = 0
+        }
+  
+        fieldTerms[term] += 1
+  
+        // add to inverted index
+        // create an initial posting if one doesn't exist
+        if (this.invertedIndex[term] == undefined) {
+          var posting = Object.create(null)
+          posting["_index"] = this.termIndex
+          this.termIndex += 1
+  
+          for (var k = 0; k < fields.length; k++) {
+            posting[fields[k]] = Object.create(null)
+          }
+  
+          this.invertedIndex[term] = posting
+        }
+  
+        // add an entry for this term/fieldName/docRef to the invertedIndex
+        if (this.invertedIndex[term][fieldName][docRef] == undefined) {
+          this.invertedIndex[term][fieldName][docRef] = Object.create(null)
+        }
+  
+        // store all whitelisted metadata about this token in the
+        // inverted index
+        for (var l = 0; l < this.metadataWhitelist.length; l++) {
+          var metadataKey = this.metadataWhitelist[l],
+              metadata = term.metadata[metadataKey]
+  
+          if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {
+            this.invertedIndex[term][fieldName][docRef][metadataKey] = []
+          }
+  
+          this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)
+        }
+      }
+  
+    }
+  }
+  
+  /**
+   * Calculates the average document length for this index
+   *
+   * @private
+   */
+  lunr.Builder.prototype.calculateAverageFieldLengths = function () {
+  
+    var fieldRefs = Object.keys(this.fieldLengths),
+        numberOfFields = fieldRefs.length,
+        accumulator = {},
+        documentsWithField = {}
+  
+    for (var i = 0; i < numberOfFields; i++) {
+      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),
+          field = fieldRef.fieldName
+  
+      documentsWithField[field] || (documentsWithField[field] = 0)
+      documentsWithField[field] += 1
+  
+      accumulator[field] || (accumulator[field] = 0)
+      accumulator[field] += this.fieldLengths[fieldRef]
+    }
+  
+    var fields = Object.keys(this._fields)
+  
+    for (var i = 0; i < fields.length; i++) {
+      var fieldName = fields[i]
+      accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]
+    }
+  
+    this.averageFieldLength = accumulator
+  }
+  
+  /**
+   * Builds a vector space model of every document using lunr.Vector
+   *
+   * @private
+   */
+  lunr.Builder.prototype.createFieldVectors = function () {
+    var fieldVectors = {},
+        fieldRefs = Object.keys(this.fieldTermFrequencies),
+        fieldRefsLength = fieldRefs.length,
+        termIdfCache = Object.create(null)
+  
+    for (var i = 0; i < fieldRefsLength; i++) {
+      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),
+          fieldName = fieldRef.fieldName,
+          fieldLength = this.fieldLengths[fieldRef],
+          fieldVector = new lunr.Vector,
+          termFrequencies = this.fieldTermFrequencies[fieldRef],
+          terms = Object.keys(termFrequencies),
+          termsLength = terms.length
+  
+  
+      var fieldBoost = this._fields[fieldName].boost || 1,
+          docBoost = this._documents[fieldRef.docRef].boost || 1
+  
+      for (var j = 0; j < termsLength; j++) {
+        var term = terms[j],
+            tf = termFrequencies[term],
+            termIndex = this.invertedIndex[term]._index,
+            idf, score, scoreWithPrecision
+  
+        if (termIdfCache[term] === undefined) {
+          idf = lunr.idf(this.invertedIndex[term], this.documentCount)
+          termIdfCache[term] = idf
+        } else {
+          idf = termIdfCache[term]
+        }
+  
+        score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)
+        score *= fieldBoost
+        score *= docBoost
+        scoreWithPrecision = Math.round(score * 1000) / 1000
+        // Converts 1.23456789 to 1.234.
+        // Reducing the precision so that the vectors take up less
+        // space when serialised. Doing it now so that they behave
+        // the same before and after serialisation. Also, this is
+        // the fastest approach to reducing a number's precision in
+        // JavaScript.
+  
+        fieldVector.insert(termIndex, scoreWithPrecision)
+      }
+  
+      fieldVectors[fieldRef] = fieldVector
+    }
+  
+    this.fieldVectors = fieldVectors
+  }
+  
+  /**
+   * Creates a token set of all tokens in the index using lunr.TokenSet
+   *
+   * @private
+   */
+  lunr.Builder.prototype.createTokenSet = function () {
+    this.tokenSet = lunr.TokenSet.fromArray(
+      Object.keys(this.invertedIndex).sort()
+    )
+  }
+  
+  /**
+   * Builds the index, creating an instance of lunr.Index.
+   *
+   * This completes the indexing process and should only be called
+   * once all documents have been added to the index.
+   *
+   * @returns {lunr.Index}
+   */
+  lunr.Builder.prototype.build = function () {
+    this.calculateAverageFieldLengths()
+    this.createFieldVectors()
+    this.createTokenSet()
+  
+    return new lunr.Index({
+      invertedIndex: this.invertedIndex,
+      fieldVectors: this.fieldVectors,
+      tokenSet: this.tokenSet,
+      fields: Object.keys(this._fields),
+      pipeline: this.searchPipeline
+    })
+  }
+  
+  /**
+   * Applies a plugin to the index builder.
+   *
+   * A plugin is a function that is called with the index builder as its context.
+   * Plugins can be used to customise or extend the behaviour of the index
+   * in some way. A plugin is just a function, that encapsulated the custom
+   * behaviour that should be applied when building the index.
+   *
+   * The plugin function will be called with the index builder as its argument, additional
+   * arguments can also be passed when calling use. The function will be called
+   * with the index builder as its context.
+   *
+   * @param {Function} plugin The plugin to apply.
+   */
+  lunr.Builder.prototype.use = function (fn) {
+    var args = Array.prototype.slice.call(arguments, 1)
+    args.unshift(this)
+    fn.apply(this, args)
+  }
+  /**
+   * Contains and collects metadata about a matching document.
+   * A single instance of lunr.MatchData is returned as part of every
+   * lunr.Index~Result.
+   *
+   * @constructor
+   * @param {string} term - The term this match data is associated with
+   * @param {string} field - The field in which the term was found
+   * @param {object} metadata - The metadata recorded about this term in this field
+   * @property {object} metadata - A cloned collection of metadata associated with this document.
+   * @see {@link lunr.Index~Result}
+   */
+  lunr.MatchData = function (term, field, metadata) {
+    var clonedMetadata = Object.create(null),
+        metadataKeys = Object.keys(metadata || {})
+  
+    // Cloning the metadata to prevent the original
+    // being mutated during match data combination.
+    // Metadata is kept in an array within the inverted
+    // index so cloning the data can be done with
+    // Array#slice
+    for (var i = 0; i < metadataKeys.length; i++) {
+      var key = metadataKeys[i]
+      clonedMetadata[key] = metadata[key].slice()
+    }
+  
+    this.metadata = Object.create(null)
+  
+    if (term !== undefined) {
+      this.metadata[term] = Object.create(null)
+      this.metadata[term][field] = clonedMetadata
+    }
+  }
+  
+  /**
+   * An instance of lunr.MatchData will be created for every term that matches a
+   * document. However only one instance is required in a lunr.Index~Result. This
+   * method combines metadata from another instance of lunr.MatchData with this
+   * objects metadata.
+   *
+   * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.
+   * @see {@link lunr.Index~Result}
+   */
+  lunr.MatchData.prototype.combine = function (otherMatchData) {
+    var terms = Object.keys(otherMatchData.metadata)
+  
+    for (var i = 0; i < terms.length; i++) {
+      var term = terms[i],
+          fields = Object.keys(otherMatchData.metadata[term])
+  
+      if (this.metadata[term] == undefined) {
+        this.metadata[term] = Object.create(null)
+      }
+  
+      for (var j = 0; j < fields.length; j++) {
+        var field = fields[j],
+            keys = Object.keys(otherMatchData.metadata[term][field])
+  
+        if (this.metadata[term][field] == undefined) {
+          this.metadata[term][field] = Object.create(null)
+        }
+  
+        for (var k = 0; k < keys.length; k++) {
+          var key = keys[k]
+  
+          if (this.metadata[term][field][key] == undefined) {
+            this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]
+          } else {
+            this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])
+          }
+  
+        }
+      }
+    }
+  }
+  
+  /**
+   * Add metadata for a term/field pair to this instance of match data.
+   *
+   * @param {string} term - The term this match data is associated with
+   * @param {string} field - The field in which the term was found
+   * @param {object} metadata - The metadata recorded about this term in this field
+   */
+  lunr.MatchData.prototype.add = function (term, field, metadata) {
+    if (!(term in this.metadata)) {
+      this.metadata[term] = Object.create(null)
+      this.metadata[term][field] = metadata
+      return
+    }
+  
+    if (!(field in this.metadata[term])) {
+      this.metadata[term][field] = metadata
+      return
+    }
+  
+    var metadataKeys = Object.keys(metadata)
+  
+    for (var i = 0; i < metadataKeys.length; i++) {
+      var key = metadataKeys[i]
+  
+      if (key in this.metadata[term][field]) {
+        this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])
+      } else {
+        this.metadata[term][field][key] = metadata[key]
+      }
+    }
+  }
+  /**
+   * A lunr.Query provides a programmatic way of defining queries to be performed
+   * against a {@link lunr.Index}.
+   *
+   * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method
+   * so the query object is pre-initialized with the right index fields.
+   *
+   * @constructor
+   * @property {lunr.Query~Clause[]} clauses - An array of query clauses.
+   * @property {string[]} allFields - An array of all available fields in a lunr.Index.
+   */
+  lunr.Query = function (allFields) {
+    this.clauses = []
+    this.allFields = allFields
+  }
+  
+  /**
+   * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.
+   *
+   * This allows wildcards to be added to the beginning and end of a term without having to manually do any string
+   * concatenation.
+   *
+   * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.
+   *
+   * @constant
+   * @default
+   * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour
+   * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists
+   * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists
+   * @see lunr.Query~Clause
+   * @see lunr.Query#clause
+   * @see lunr.Query#term
+   * @example <caption>query term with trailing wildcard</caption>
+   * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })
+   * @example <caption>query term with leading and trailing wildcard</caption>
+   * query.term('foo', {
+   *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING
+   * })
+   */
+  
+  lunr.Query.wildcard = new String ("*")
+  lunr.Query.wildcard.NONE = 0
+  lunr.Query.wildcard.LEADING = 1
+  lunr.Query.wildcard.TRAILING = 2
+  
+  /**
+   * Constants for indicating what kind of presence a term must have in matching documents.
+   *
+   * @constant
+   * @enum {number}
+   * @see lunr.Query~Clause
+   * @see lunr.Query#clause
+   * @see lunr.Query#term
+   * @example <caption>query term with required presence</caption>
+   * query.term('foo', { presence: lunr.Query.presence.REQUIRED })
+   */
+  lunr.Query.presence = {
+    /**
+     * Term's presence in a document is optional, this is the default value.
+     */
+    OPTIONAL: 1,
+  
+    /**
+     * Term's presence in a document is required, documents that do not contain
+     * this term will not be returned.
+     */
+    REQUIRED: 2,
+  
+    /**
+     * Term's presence in a document is prohibited, documents that do contain
+     * this term will not be returned.
+     */
+    PROHIBITED: 3
+  }
+  
+  /**
+   * A single clause in a {@link lunr.Query} contains a term and details on how to
+   * match that term against a {@link lunr.Index}.
+   *
+   * @typedef {Object} lunr.Query~Clause
+   * @property {string[]} fields - The fields in an index this clause should be matched against.
+   * @property {number} [boost=1] - Any boost that should be applied when matching this clause.
+   * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.
+   * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.
+   * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.
+   * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.
+   */
+  
+  /**
+   * Adds a {@link lunr.Query~Clause} to this query.
+   *
+   * Unless the clause contains the fields to be matched all fields will be matched. In addition
+   * a default boost of 1 is applied to the clause.
+   *
+   * @param {lunr.Query~Clause} clause - The clause to add to this query.
+   * @see lunr.Query~Clause
+   * @returns {lunr.Query}
+   */
+  lunr.Query.prototype.clause = function (clause) {
+    if (!('fields' in clause)) {
+      clause.fields = this.allFields
+    }
+  
+    if (!('boost' in clause)) {
+      clause.boost = 1
+    }
+  
+    if (!('usePipeline' in clause)) {
+      clause.usePipeline = true
+    }
+  
+    if (!('wildcard' in clause)) {
+      clause.wildcard = lunr.Query.wildcard.NONE
+    }
+  
+    if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {
+      clause.term = "*" + clause.term
+    }
+  
+    if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {
+      clause.term = "" + clause.term + "*"
+    }
+  
+    if (!('presence' in clause)) {
+      clause.presence = lunr.Query.presence.OPTIONAL
+    }
+  
+    this.clauses.push(clause)
+  
+    return this
+  }
+  
+  /**
+   * A negated query is one in which every clause has a presence of
+   * prohibited. These queries require some special processing to return
+   * the expected results.
+   *
+   * @returns boolean
+   */
+  lunr.Query.prototype.isNegated = function () {
+    for (var i = 0; i < this.clauses.length; i++) {
+      if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {
+        return false
+      }
+    }
+  
+    return true
+  }
+  
+  /**
+   * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}
+   * to the list of clauses that make up this query.
+   *
+   * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion
+   * to a token or token-like string should be done before calling this method.
+   *
+   * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an
+   * array, each term in the array will share the same options.
+   *
+   * @param {object|object[]} term - The term(s) to add to the query.
+   * @param {object} [options] - Any additional properties to add to the query clause.
+   * @returns {lunr.Query}
+   * @see lunr.Query#clause
+   * @see lunr.Query~Clause
+   * @example <caption>adding a single term to a query</caption>
+   * query.term("foo")
+   * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>
+   * query.term("foo", {
+   *   fields: ["title"],
+   *   boost: 10,
+   *   wildcard: lunr.Query.wildcard.TRAILING
+   * })
+   * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>
+   * query.term(lunr.tokenizer("foo bar"))
+   */
+  lunr.Query.prototype.term = function (term, options) {
+    if (Array.isArray(term)) {
+      term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)
+      return this
+    }
+  
+    var clause = options || {}
+    clause.term = term.toString()
+  
+    this.clause(clause)
+  
+    return this
+  }
+  lunr.QueryParseError = function (message, start, end) {
+    this.name = "QueryParseError"
+    this.message = message
+    this.start = start
+    this.end = end
+  }
+  
+  lunr.QueryParseError.prototype = new Error
+  lunr.QueryLexer = function (str) {
+    this.lexemes = []
+    this.str = str
+    this.length = str.length
+    this.pos = 0
+    this.start = 0
+    this.escapeCharPositions = []
+  }
+  
+  lunr.QueryLexer.prototype.run = function () {
+    var state = lunr.QueryLexer.lexText
+  
+    while (state) {
+      state = state(this)
+    }
+  }
+  
+  lunr.QueryLexer.prototype.sliceString = function () {
+    var subSlices = [],
+        sliceStart = this.start,
+        sliceEnd = this.pos
+  
+    for (var i = 0; i < this.escapeCharPositions.length; i++) {
+      sliceEnd = this.escapeCharPositions[i]
+      subSlices.push(this.str.slice(sliceStart, sliceEnd))
+      sliceStart = sliceEnd + 1
+    }
+  
+    subSlices.push(this.str.slice(sliceStart, this.pos))
+    this.escapeCharPositions.length = 0
+  
+    return subSlices.join('')
+  }
+  
+  lunr.QueryLexer.prototype.emit = function (type) {
+    this.lexemes.push({
+      type: type,
+      str: this.sliceString(),
+      start: this.start,
+      end: this.pos
+    })
+  
+    this.start = this.pos
+  }
+  
+  lunr.QueryLexer.prototype.escapeCharacter = function () {
+    this.escapeCharPositions.push(this.pos - 1)
+    this.pos += 1
+  }
+  
+  lunr.QueryLexer.prototype.next = function () {
+    if (this.pos >= this.length) {
+      return lunr.QueryLexer.EOS
+    }
+  
+    var char = this.str.charAt(this.pos)
+    this.pos += 1
+    return char
+  }
+  
+  lunr.QueryLexer.prototype.width = function () {
+    return this.pos - this.start
+  }
+  
+  lunr.QueryLexer.prototype.ignore = function () {
+    if (this.start == this.pos) {
+      this.pos += 1
+    }
+  
+    this.start = this.pos
+  }
+  
+  lunr.QueryLexer.prototype.backup = function () {
+    this.pos -= 1
+  }
+  
+  lunr.QueryLexer.prototype.acceptDigitRun = function () {
+    var char, charCode
+  
+    do {
+      char = this.next()
+      charCode = char.charCodeAt(0)
+    } while (charCode > 47 && charCode < 58)
+  
+    if (char != lunr.QueryLexer.EOS) {
+      this.backup()
+    }
+  }
+  
+  lunr.QueryLexer.prototype.more = function () {
+    return this.pos < this.length
+  }
+  
+  lunr.QueryLexer.EOS = 'EOS'
+  lunr.QueryLexer.FIELD = 'FIELD'
+  lunr.QueryLexer.TERM = 'TERM'
+  lunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'
+  lunr.QueryLexer.BOOST = 'BOOST'
+  lunr.QueryLexer.PRESENCE = 'PRESENCE'
+  
+  lunr.QueryLexer.lexField = function (lexer) {
+    lexer.backup()
+    lexer.emit(lunr.QueryLexer.FIELD)
+    lexer.ignore()
+    return lunr.QueryLexer.lexText
+  }
+  
+  lunr.QueryLexer.lexTerm = function (lexer) {
+    if (lexer.width() > 1) {
+      lexer.backup()
+      lexer.emit(lunr.QueryLexer.TERM)
+    }
+  
+    lexer.ignore()
+  
+    if (lexer.more()) {
+      return lunr.QueryLexer.lexText
+    }
+  }
+  
+  lunr.QueryLexer.lexEditDistance = function (lexer) {
+    lexer.ignore()
+    lexer.acceptDigitRun()
+    lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)
+    return lunr.QueryLexer.lexText
+  }
+  
+  lunr.QueryLexer.lexBoost = function (lexer) {
+    lexer.ignore()
+    lexer.acceptDigitRun()
+    lexer.emit(lunr.QueryLexer.BOOST)
+    return lunr.QueryLexer.lexText
+  }
+  
+  lunr.QueryLexer.lexEOS = function (lexer) {
+    if (lexer.width() > 0) {
+      lexer.emit(lunr.QueryLexer.TERM)
+    }
+  }
+  
+  // This matches the separator used when tokenising fields
+  // within a document. These should match otherwise it is
+  // not possible to search for some tokens within a document.
+  //
+  // It is possible for the user to change the separator on the
+  // tokenizer so it _might_ clash with any other of the special
+  // characters already used within the search string, e.g. :.
+  //
+  // This means that it is possible to change the separator in
+  // such a way that makes some words unsearchable using a search
+  // string.
+  lunr.QueryLexer.termSeparator = lunr.tokenizer.separator
+  
+  lunr.QueryLexer.lexText = function (lexer) {
+    while (true) {
+      var char = lexer.next()
+  
+      if (char == lunr.QueryLexer.EOS) {
+        return lunr.QueryLexer.lexEOS
+      }
+  
+      // Escape character is '\'
+      if (char.charCodeAt(0) == 92) {
+        lexer.escapeCharacter()
+        continue
+      }
+  
+      if (char == ":") {
+        return lunr.QueryLexer.lexField
+      }
+  
+      if (char == "~") {
+        lexer.backup()
+        if (lexer.width() > 0) {
+          lexer.emit(lunr.QueryLexer.TERM)
+        }
+        return lunr.QueryLexer.lexEditDistance
+      }
+  
+      if (char == "^") {
+        lexer.backup()
+        if (lexer.width() > 0) {
+          lexer.emit(lunr.QueryLexer.TERM)
+        }
+        return lunr.QueryLexer.lexBoost
+      }
+  
+      // "+" indicates term presence is required
+      // checking for length to ensure that only
+      // leading "+" are considered
+      if (char == "+" && lexer.width() === 1) {
+        lexer.emit(lunr.QueryLexer.PRESENCE)
+        return lunr.QueryLexer.lexText
+      }
+  
+      // "-" indicates term presence is prohibited
+      // checking for length to ensure that only
+      // leading "-" are considered
+      if (char == "-" && lexer.width() === 1) {
+        lexer.emit(lunr.QueryLexer.PRESENCE)
+        return lunr.QueryLexer.lexText
+      }
+  
+      if (char.match(lunr.QueryLexer.termSeparator)) {
+        return lunr.QueryLexer.lexTerm
+      }
+    }
+  }
+  
+  lunr.QueryParser = function (str, query) {
+    this.lexer = new lunr.QueryLexer (str)
+    this.query = query
+    this.currentClause = {}
+    this.lexemeIdx = 0
+  }
+  
+  lunr.QueryParser.prototype.parse = function () {
+    this.lexer.run()
+    this.lexemes = this.lexer.lexemes
+  
+    var state = lunr.QueryParser.parseClause
+  
+    while (state) {
+      state = state(this)
+    }
+  
+    return this.query
+  }
+  
+  lunr.QueryParser.prototype.peekLexeme = function () {
+    return this.lexemes[this.lexemeIdx]
+  }
+  
+  lunr.QueryParser.prototype.consumeLexeme = function () {
+    var lexeme = this.peekLexeme()
+    this.lexemeIdx += 1
+    return lexeme
+  }
+  
+  lunr.QueryParser.prototype.nextClause = function () {
+    var completedClause = this.currentClause
+    this.query.clause(completedClause)
+    this.currentClause = {}
+  }
+  
+  lunr.QueryParser.parseClause = function (parser) {
+    var lexeme = parser.peekLexeme()
+  
+    if (lexeme == undefined) {
+      return
+    }
+  
+    switch (lexeme.type) {
+      case lunr.QueryLexer.PRESENCE:
+        return lunr.QueryParser.parsePresence
+      case lunr.QueryLexer.FIELD:
+        return lunr.QueryParser.parseField
+      case lunr.QueryLexer.TERM:
+        return lunr.QueryParser.parseTerm
+      default:
+        var errorMessage = "expected either a field or a term, found " + lexeme.type
+  
+        if (lexeme.str.length >= 1) {
+          errorMessage += " with value '" + lexeme.str + "'"
+        }
+  
+        throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
+    }
+  }
+  
+  lunr.QueryParser.parsePresence = function (parser) {
+    var lexeme = parser.consumeLexeme()
+  
+    if (lexeme == undefined) {
+      return
+    }
+  
+    switch (lexeme.str) {
+      case "-":
+        parser.currentClause.presence = lunr.Query.presence.PROHIBITED
+        break
+      case "+":
+        parser.currentClause.presence = lunr.Query.presence.REQUIRED
+        break
+      default:
+        var errorMessage = "unrecognised presence operator'" + lexeme.str + "'"
+        throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
+    }
+  
+    var nextLexeme = parser.peekLexeme()
+  
+    if (nextLexeme == undefined) {
+      var errorMessage = "expecting term or field, found nothing"
+      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
+    }
+  
+    switch (nextLexeme.type) {
+      case lunr.QueryLexer.FIELD:
+        return lunr.QueryParser.parseField
+      case lunr.QueryLexer.TERM:
+        return lunr.QueryParser.parseTerm
+      default:
+        var errorMessage = "expecting term or field, found '" + nextLexeme.type + "'"
+        throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)
+    }
+  }
+  
+  lunr.QueryParser.parseField = function (parser) {
+    var lexeme = parser.consumeLexeme()
+  
+    if (lexeme == undefined) {
+      return
+    }
+  
+    if (parser.query.allFields.indexOf(lexeme.str) == -1) {
+      var possibleFields = parser.query.allFields.map(function (f) { return "'" + f + "'" }).join(', '),
+          errorMessage = "unrecognised field '" + lexeme.str + "', possible fields: " + possibleFields
+  
+      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
+    }
+  
+    parser.currentClause.fields = [lexeme.str]
+  
+    var nextLexeme = parser.peekLexeme()
+  
+    if (nextLexeme == undefined) {
+      var errorMessage = "expecting term, found nothing"
+      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
+    }
+  
+    switch (nextLexeme.type) {
+      case lunr.QueryLexer.TERM:
+        return lunr.QueryParser.parseTerm
+      default:
+        var errorMessage = "expecting term, found '" + nextLexeme.type + "'"
+        throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)
+    }
+  }
+  
+  lunr.QueryParser.parseTerm = function (parser) {
+    var lexeme = parser.consumeLexeme()
+  
+    if (lexeme == undefined) {
+      return
+    }
+  
+    parser.currentClause.term = lexeme.str.toLowerCase()
+  
+    if (lexeme.str.indexOf("*") != -1) {
+      parser.currentClause.usePipeline = false
+    }
+  
+    var nextLexeme = parser.peekLexeme()
+  
+    if (nextLexeme == undefined) {
+      parser.nextClause()
+      return
+    }
+  
+    switch (nextLexeme.type) {
+      case lunr.QueryLexer.TERM:
+        parser.nextClause()
+        return lunr.QueryParser.parseTerm
+      case lunr.QueryLexer.FIELD:
+        parser.nextClause()
+        return lunr.QueryParser.parseField
+      case lunr.QueryLexer.EDIT_DISTANCE:
+        return lunr.QueryParser.parseEditDistance
+      case lunr.QueryLexer.BOOST:
+        return lunr.QueryParser.parseBoost
+      case lunr.QueryLexer.PRESENCE:
+        parser.nextClause()
+        return lunr.QueryParser.parsePresence
+      default:
+        var errorMessage = "Unexpected lexeme type '" + nextLexeme.type + "'"
+        throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)
+    }
+  }
+  
+  lunr.QueryParser.parseEditDistance = function (parser) {
+    var lexeme = parser.consumeLexeme()
+  
+    if (lexeme == undefined) {
+      return
+    }
+  
+    var editDistance = parseInt(lexeme.str, 10)
+  
+    if (isNaN(editDistance)) {
+      var errorMessage = "edit distance must be numeric"
+      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
+    }
+  
+    parser.currentClause.editDistance = editDistance
+  
+    var nextLexeme = parser.peekLexeme()
+  
+    if (nextLexeme == undefined) {
+      parser.nextClause()
+      return
+    }
+  
+    switch (nextLexeme.type) {
+      case lunr.QueryLexer.TERM:
+        parser.nextClause()
+        return lunr.QueryParser.parseTerm
+      case lunr.QueryLexer.FIELD:
+        parser.nextClause()
+        return lunr.QueryParser.parseField
+      case lunr.QueryLexer.EDIT_DISTANCE:
+        return lunr.QueryParser.parseEditDistance
+      case lunr.QueryLexer.BOOST:
+        return lunr.QueryParser.parseBoost
+      case lunr.QueryLexer.PRESENCE:
+        parser.nextClause()
+        return lunr.QueryParser.parsePresence
+      default:
+        var errorMessage = "Unexpected lexeme type '" + nextLexeme.type + "'"
+        throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)
+    }
+  }
+  
+  lunr.QueryParser.parseBoost = function (parser) {
+    var lexeme = parser.consumeLexeme()
+  
+    if (lexeme == undefined) {
+      return
+    }
+  
+    var boost = parseInt(lexeme.str, 10)
+  
+    if (isNaN(boost)) {
+      var errorMessage = "boost must be numeric"
+      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)
+    }
+  
+    parser.currentClause.boost = boost
+  
+    var nextLexeme = parser.peekLexeme()
+  
+    if (nextLexeme == undefined) {
+      parser.nextClause()
+      return
+    }
+  
+    switch (nextLexeme.type) {
+      case lunr.QueryLexer.TERM:
+        parser.nextClause()
+        return lunr.QueryParser.parseTerm
+      case lunr.QueryLexer.FIELD:
+        parser.nextClause()
+        return lunr.QueryParser.parseField
+      case lunr.QueryLexer.EDIT_DISTANCE:
+        return lunr.QueryParser.parseEditDistance
+      case lunr.QueryLexer.BOOST:
+        return lunr.QueryParser.parseBoost
+      case lunr.QueryLexer.PRESENCE:
+        parser.nextClause()
+        return lunr.QueryParser.parsePresence
+      default:
+        var errorMessage = "Unexpected lexeme type '" + nextLexeme.type + "'"
+        throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)
+    }
+  }
+  
+    /**
+     * export the module via AMD, CommonJS or as a browser global
+     * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js
+     */
+    ;(function (root, factory) {
+      if (typeof define === 'function' && define.amd) {
+        // AMD. Register as an anonymous module.
+        define(factory)
+      } else if (typeof exports === 'object') {
+        /**
+         * Node. Does not work with strict CommonJS, but
+         * only CommonJS-like enviroments that support module.exports,
+         * like Node.
+         */
+        module.exports = factory()
+      } else {
+        // Browser globals (root is window)
+        root.lunr = factory()
+      }
+    }(this, function () {
+      /**
+       * Just return a value to define the module export.
+       * This example returns an object, but the module
+       * can return a function as the exported value.
+       */
+      return lunr
+    }))
+  })();
+
diff --git a/assets/js/main.js b/assets/js/main.js
new file mode 100644
index 0000000..f3e1612
--- /dev/null
+++ b/assets/js/main.js
@@ -0,0 +1,74 @@
+// Category toggle open
+var navCategory = $('#docs-menu li')
+navCategory.each(function() {
+  $('.category-name', this).on('click', function() {
+    var $parent = $(this).parent()
+
+    $parent.find('.category-posts').slideToggle(150, function complete() {
+      $parent.toggleClass('open')
+    })
+  })
+})
+// Menu toggle
+var menuToggle = $('#menu-toggle')
+menuToggle.on('click', function(e) {
+  $(this).toggleClass('open')
+  $('#docs-menu').toggleClass('open')
+})
+
+// Create permalinks
+function createTableOfContents() {
+  var tocLinks = $('#TableOfContents a')
+  tocLinks.each(function() {
+    var $link = $(this)
+    var hrefAttr = $link.attr('href')
+    var $heading = $(hrefAttr)
+    var href = $link.prop('href')
+    $heading.append(
+      '<i class="ctc fas fa-link" data-target-link="' +
+        href +
+        '" title="Copy link to section to clipboard"></i>'
+    )
+  })
+  hashScroll()
+}
+// Scroll to heading from url
+function hashScroll() {
+  var target = window.location.hash
+  var hashElement = $('' + target + '')
+  if (hashElement.offset()) {
+    var scrollTarget = hashElement.offset().top - 40
+    $('html, body').animate({ scrollTop: scrollTarget }, 300)
+    history.pushState(
+      '',
+      document.title,
+      window.location.pathname + window.location.search
+    )
+  }
+}
+// Scroll to selected heading on click
+$(document).on('click', 'a[href^="#"]', function(event) {
+  event.preventDefault()
+  var scrollTarget = $($.attr(this, 'href')).offset().top - 40
+  $('html, body').animate({ scrollTop: scrollTarget }, 300)
+})
+
+// Copy section link to clipboard
+$('h1, h2, h3, h4, h5, h6').on('click', 'i.ctc', function() {
+  var link = $(this).attr('data-target-link')
+  var $temp = $('<input>')
+  $('body').append($temp)
+  $temp.val(link).select()
+  document.execCommand('copy')
+  $temp.remove()
+  alert('Copied to clipboard')
+})
+
+$(document).ready(function() {
+  createTableOfContents()
+  // Wrap tables for responsiveness
+  var contentTable = $('#main-content main table')
+  contentTable.each(function() {
+    $(this).wrap('<div class="table-wrap"></div>')
+  })
+})
diff --git a/assets/js/search.js b/assets/js/search.js
new file mode 100644
index 0000000..7fcaaae
--- /dev/null
+++ b/assets/js/search.js
@@ -0,0 +1,304 @@
+function initSearch(indexURL) {
+  $.getJSON(indexURL)
+    .then(getSearchIndex)
+    .then(initSearchEvents)
+}
+
+function initSearchEvents(index) {
+  $('.search__icon--search').on('click', function() {
+    $(this)
+      .closest('.search')
+      .find('.search__input')
+      .trigger('focus')
+  })
+  $('.search__icon--clear').on('mousedown', function() {
+    // mousedown is before blur, 'click' wouldn't work because after blur the icon disappears
+    updateFromInput(index, null)
+  })
+
+  $('.search__input')
+    .bind('focus focusin', function() {
+      $('.search').addClass('search--active')
+    })
+    .bind('blur focusout', function(event) {
+      if (event.target.value) {
+        return
+      }
+      $('.search').removeClass('search--active')
+    })
+    .on('keyup', function(event) {
+      if (event.keyCode === 27) {
+        // ESC
+        updateFromInput(index, null)
+        event.stopImmediatePropagation()
+      }
+    })
+    .on(
+      'keyup',
+      debounce(function(event) {
+        updateFromInput(index, event.target.value)
+      }, 250)
+    )
+
+  updateFromUrl(index)
+
+  window.addEventListener('popstate', function() {
+    updateFromUrl(index)
+  })
+}
+
+function updateFromInput(index, query) {
+  updateUrl(query)
+  updateInputs(query)
+  window.setTimeout(function() {
+    updateResults(index, query)
+  })
+}
+
+function updateFromUrl(index) {
+  var query =
+    decodeURIComponent((window.location.search || '').slice(3)) || null
+  updateInputs(query)
+  window.setTimeout(function() {
+    updateResults(index, query)
+  })
+}
+
+function updateUrl(query) {
+  window.history.pushState(
+    '',
+    document.title,
+    window.location
+      .toString()
+      .substring(0, window.location.toString().indexOf('?')) +
+      (query ? '?q=' + encodeURIComponent(query) : '')
+  )
+}
+
+function updateResults(index, query) {
+  var result
+  try {
+    result = getResults(index, query)
+  } catch (error) {
+    result = error
+  }
+
+  $('#search-results').html(getResultHtml(result, query))
+}
+
+function updateInputs(query) {
+  var $inputs = $('.search__input')
+
+  $inputs.val(query)
+  if (query === null) {
+    $inputs.trigger('blur')
+  } else {
+    if (query) {
+      $('.search').addClass('search--active')
+    }
+  }
+}
+
+function matchPositionObject(builder) {
+  var pipelineFunction = function(token) {
+    var p = token.metadata.position
+    token.metadata.positionObject = { start: p[0], length: p[1] }
+    return token
+  }
+  lunr.Pipeline.registerFunction(pipelineFunction, 'positionObjMetadata')
+  builder.pipeline.before(lunr.stemmer, pipelineFunction)
+  builder.metadataWhitelist.push('positionObject')
+}
+
+function getSearchIndex(pages) {
+  var lunrIndex = lunr(function() {
+    this.use(matchPositionObject)
+    this.ref('uri')
+    this.field('title', { boost: 15 })
+    this.field('content', { boost: 5 })
+    pages.forEach(this.add, this)
+  })
+  var pageIndex = pages.reduce(function(all, page) {
+    all[page.uri] = page
+    return all
+  }, {})
+  return { pageIndex: pageIndex, lunrIndex: lunrIndex }
+}
+
+function getResultHtml(resultList, query) {
+  if (!resultList) {
+    return null
+  }
+
+  if (resultList instanceof Error) {
+    return $('<div>', {
+      class: 'no-results-message',
+      text: 'Invalid search query: ' + resultList.message
+    })
+  }
+
+  if (!resultList.length) {
+    return $('<div>', {
+      class: 'no-results-message',
+      text: 'No results matching "' + query + '"'
+    })
+  }
+
+  function orderByStartPosition(a, b) {
+    return a.start - b.start
+  }
+
+  function collectSnippetPositions(contentLength, all, p) {
+    var charsBefore = 30
+    var charsAfter = 30
+    var maxSnippetLength = 200
+
+    var start = Math.max(p.start - charsBefore, 0)
+    var end = Math.min(p.start + p.length + charsAfter, contentLength)
+
+    var prev = all[all.length - 1]
+    var isOverlappingWithPrevious = prev && prev.start + prev.length > start
+    if (isOverlappingWithPrevious) {
+      var newLength = end - prev.start
+      if (newLength > maxSnippetLength) {
+        return all
+      }
+      prev.length = newLength
+      prev.keywords.push({ start: p.start - prev.start, length: p.length })
+    } else {
+      all.push({
+        start: start,
+        length: end - start,
+        keywords: [{ start: p.start - start, length: p.length }]
+      })
+    }
+
+    return all
+  }
+
+  function getSnippet(content, s) {
+    var c = content.substr(s.start, s.length + 1)
+    var m = c.match(new RegExp(lunr.tokenizer.separator, 'g'))
+
+    var isStartOfContent = s.start === 0
+    var firstKw = s.keywords[0]
+    var start = isStartOfContent
+      ? 0
+      : Math.min(firstKw.start, m ? c.indexOf(m[0]) + m[0].length : 0)
+    var lastKw = s.keywords[s.keywords.length - 1]
+
+    var isEndOfContent = s.start + s.length === content.length
+    var end = isEndOfContent
+      ? c.length + 1
+      : Math.max(
+          lastKw.start + lastKw.length,
+          m ? c.lastIndexOf(m[m.length - 1]) : c.length + 1
+        )
+
+    c = c.substring(start, end)
+
+    return Object.assign({}, s, {
+      content: c,
+      isStart: isStartOfContent,
+      isEnd: isEndOfContent,
+      keywords: s.keywords.map(function(k) {
+        return { start: k.start - start, length: k.length }
+      })
+    })
+  }
+
+  function getContentSnippets(contentPositions, content) {
+    var content = (content || '').trim()
+
+    if (contentPositions) {
+      return contentPositions
+        .sort(orderByStartPosition)
+        .reduce(collectSnippetPositions.bind(null, content.length), [])
+        .map(getSnippet.bind(null, content))
+        .slice(0, 3)
+    } else {
+      return [
+        {
+          isFirst: true,
+          isLast: false,
+          content: content.substring(0, 100),
+          keywords: contentPositions
+        }
+      ]
+    }
+  }
+
+  return $('<ul>', {
+    html: resultList.map(function(result) {
+      var snippets = getContentSnippets(
+        result.positions.content,
+        result.content
+      )
+
+      return $('<li>', {
+        html: [
+          $('<a>', { text: result.title, href: result.uri }).markRanges(
+            result.positions.title
+          ),
+          snippets
+            ? $('<p>', {
+                html: snippets.map(function(s) {
+                  return $('<span>', {
+                    class: [
+                      s.isStart ? 'start' : '',
+                      s.isEnd ? 'end' : ''
+                    ].join(' '),
+                    text: s.content
+                  }).markRanges(s.keywords)
+                })
+              })
+            : null
+        ]
+      })
+    })
+  })
+}
+
+function getResults(index, query) {
+  if (!query) {
+    return null
+  }
+
+  return index.lunrIndex
+    .search(query)
+    .slice(0, 16)
+    .map(function(result) {
+      var positions = { title: [], content: [] }
+      $.each(result.matchData.metadata, function(_, termMetaData) {
+        $.each(termMetaData, function(field, data) {
+          positions[field].push.apply(positions[field], data.positionObject)
+        })
+      })
+      return Object.assign({}, index.pageIndex[result.ref], {
+        positions: positions
+      })
+    })
+}
+
+function debounce(func, wait, immediate) {
+  var timeout
+
+  return function() {
+    var context = this
+    var args = arguments
+
+    var callNow = immediate && !timeout
+
+    clearTimeout(timeout)
+
+    timeout = setTimeout(function() {
+      timeout = null
+
+      if (!immediate) {
+        func.apply(context, args)
+      }
+    }, wait)
+
+    if (callNow) func.apply(context, args)
+  }
+}
diff --git a/assets/media/favicon.ico b/assets/media/favicon.ico
new file mode 100644
index 0000000..1594900
Binary files /dev/null and b/assets/media/favicon.ico differ
diff --git a/assets/media/logo.svg b/assets/media/logo.svg
new file mode 100644
index 0000000..89eb263
--- /dev/null
+++ b/assets/media/logo.svg
@@ -0,0 +1,9 @@
+<svg class="cls-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 564 116">
+  <linearGradient id="a" x1="60" x2="125" gradientUnits="userSpaceOnUse">
+    <stop offset="0" stop-color="#ec0c43"/>
+    <stop offset="1" stop-color="#fbb03b"/>
+  </linearGradient>
+  <path d="M20.8 35a20.1 20.1 0 0 1 9.9-2.5 18.9 18.9 0 0 1 8.6 2 16.4 16.4 0 0 1 4.3 3.1 5.3 5.3 0 0 0 9-3.1A5.4 5.4 0 0 0 51 30a23.1 23.1 0 0 0-6.2-4.5 30.6 30.6 0 0 0-14.1-3.2 32.8 32.8 0 0 0-15.9 3.8A28 28 0 0 0 4 36.8 30 30 0 0 0 0 52a30 30 0 0 0 4 15.3 28.3 28.3 0 0 0 11 10.7 32.4 32.4 0 0 0 15.9 3.8A30.1 30.1 0 0 0 45 78.7a23.7 23.7 0 0 0 6.2-4.6 5.3 5.3 0 0 0 1.4-4.3 5.3 5.3 0 0 0-9-3.1 16.2 16.2 0 0 1-4.2 3.1 18.7 18.7 0 0 1-8.6 2 20 20 0 0 1-10-2.4 17.3 17.3 0 0 1-6.8-6.9 21.4 21.4 0 0 1-2.5-10.4A21 21 0 0 1 14 41.8a17.3 17.3 0 0 1 6.8-6.9zM184.1 0a5.7 5.7 0 0 0-5.7 5.7v25a21.8 21.8 0 0 0-7.8-6 26 26 0 0 0-11.1-2.3 29.9 29.9 0 0 0-15 3.8 26.6 26.6 0 0 0-10.3 10.4 31.2 31.2 0 0 0-4.3 15.5 31.5 31.5 0 0 0 4.3 15.6 26.4 26.4 0 0 0 10.4 10.5 29.9 29.9 0 0 0 14.9 3.7 25.7 25.7 0 0 0 11.4-2.5 22.2 22.2 0 0 0 8-6.2v2.6a5.5 5.5 0 0 0 11 0V5.7A5.7 5.7 0 0 0 184 0zm-14.6 69.4a17.3 17.3 0 0 1-9.1 2.4 18 18 0 0 1-9.4-2.4 17.4 17.4 0 0 1-6.6-7A21 21 0 0 1 142 52a21 21 0 0 1 2.5-10.4A17 17 0 0 1 151 35a18.3 18.3 0 0 1 9.4-2.4 17.6 17.6 0 0 1 9.2 2.4 16.6 16.6 0 0 1 6.5 6.9 21.4 21.4 0 0 1 2.5 10.3 21.4 21.4 0 0 1-2.5 10.3 17 17 0 0 1-6.5 7zm71.2-43.2a29.3 29.3 0 0 0-14.9-3.8 29.9 29.9 0 0 0-15 3.8 27.4 27.4 0 0 0-10.4 10.6 31 31 0 0 0-3.8 15.3 30.6 30.6 0 0 0 3.9 15.4 27.2 27.2 0 0 0 11 10.6 37 37 0 0 0 29.5 1.4 26.4 26.4 0 0 0 6.5-3.8 5 5 0 0 0 .6-7.1 5 5 0 0 0-6.7-.8 21.6 21.6 0 0 1-13.2 4 21.3 21.3 0 0 1-13.8-4.4 17.5 17.5 0 0 1-6.4-11.2l.1-.1h43a3.6 3.6 0 0 0 3.5-3.7 32.4 32.4 0 0 0-3.6-15.6 26.9 26.9 0 0 0-10.3-10.6zm3.4 21.2l-.6.2h-35.4v-.1a17.8 17.8 0 0 1 5.6-11 18.9 18.9 0 0 1 24.3 0 18 18 0 0 1 5.6 11l.5-.2zm89.5-25a30 30 0 0 0-13.3 2.9 22.8 22.8 0 0 0-8.8 7.2 19.3 19.3 0 0 0-7.8-7.3 26 26 0 0 0-12-2.8 28 28 0 0 0-11.9 2.4 20.7 20.7 0 0 0-7.5 5.7v-2a5.5 5.5 0 0 0-11 0v47.3a5.5 5.5 0 0 0 5.5 5.5h.4a5.5 5.5 0 0 0 5.5-5.5V51.2c0-6 1.5-10.6 4.5-13.7s7.1-4.8 12.2-4.8c4.6 0 8.2 1.4 10.6 4s3.7 6.8 3.7 12.2v26.9a5.5 5.5 0 0 0 5.5 5.5h.4a5.5 5.5 0 0 0 5.5-5.5V51.2c0-6 1.5-10.6 4.5-13.7s7.1-4.8 12.2-4.8c4.6 0 8.2 1.4 10.6 4s3.7 6.8 3.7 12.2v26.9a5.5 5.5 0 0 0 5.5 5.5h.4a5.5 5.5 0 0 0 5.5-5.5v-28c0-8.3-2.2-14.7-6.5-19s-10.1-6.4-17.4-6.4zm56.2 0a45 45 0 0 0-13.2 2 34.5 34.5 0 0 0-7 3 5 5 0 0 0 4.8 8.6 29.3 29.3 0 0 1 4.5-2 30.1 30.1 0 0 1 9.7-1.6c5 0 8.7 1.1 11.2 3.4s3.7 5.6 3.7 9.9v1.4a.1.1 0 0 1-.1.2h-15.8c-8.1 0-14.1 1.5-17.9 4.7a15.6 15.6 0 0 0-5.7 12.5 15.5 15.5 0 0 0 6 12.7c4 3.1 9.2 4.7 15.7 4.7a28.9 28.9 0 0 0 11.7-2.1 17.3 17.3 0 0 0 6.7-5v1a5.4 5.4 0 1 0 10.8 0V46.3c0-7.9-2.2-13.9-6.5-17.8s-10.5-6-18.6-6zm13.7 33.5v7.3a14.8 14.8 0 0 1-6 7.1 18.9 18.9 0 0 1-10 2.6c-3.8 0-6.9-.8-9-2.4a7.5 7.5 0 0 1-3.1-6.4c0-5.6 4.1-8.4 12.7-8.4h15.3a.1.1 0 0 1 .1.2zm72.7-33a5.4 5.4 0 0 0-5.4 5.5v2.5a21.9 21.9 0 0 0-8.3-6 28.2 28.2 0 0 0-11.7-2.5 30 30 0 0 0-14.6 3.5 25.8 25.8 0 0 0-10.4 10 28.2 28.2 0 0 0-3.8 14.7 28.2 28.2 0 0 0 3.9 14.7 26 26 0 0 0 10.4 10 29.7 29.7 0 0 0 14.5 3.6 27.8 27.8 0 0 0 11.3-2.3 22 22 0 0 0 8.1-5.8V74c0 6.4-1.6 11.1-4.6 14.2s-8 4.6-14.6 4.6a36.2 36.2 0 0 1-12-2 37.2 37.2 0 0 1-5-2.1 5.3 5.3 0 0 0-7 1.7 5.2 5.2 0 0 0-.7 4 5 5 0 0 0 2.3 3.2 30.4 30.4 0 0 0 7.1 3 51.8 51.8 0 0 0 15.7 2.2c10 0 17.5-2.5 22.6-7.3s7.6-12.5 7.6-22.6V28.4a5.4 5.4 0 0 0-5.4-5.5zm-5.8 27.7A18.2 18.2 0 0 1 468 60a16.4 16.4 0 0 1-6.6 6.5 18.7 18.7 0 0 1-9.4 2.3 18.9 18.9 0 0 1-9.4-2.3 16.4 16.4 0 0 1-6.7-6.5 18.2 18.2 0 0 1-2.4-9.4c0-5.6 1.6-10 5.1-13.1 3.7-3.5 7.8-5 13.4-5a17.6 17.6 0 0 1 13 5 17.1 17.1 0 0 1 5.4 13zm27.1-27.7a5.7 5.7 0 0 0-5.7 5.7v47a5.7 5.7 0 0 0 11.4 0v-47a5.7 5.7 0 0 0-5.7-5.7zM561.9 66a5.2 5.2 0 0 0-6.5.7A16.2 16.2 0 0 1 551 70a18.7 18.7 0 0 1-8.7 2 20.1 20.1 0 0 1-9.8-2.4 17.4 17.4 0 0 1-6.9-7 21.2 21.2 0 0 1-2.5-10.4 21 21 0 0 1 2.5-10.3 17.3 17.3 0 0 1 6.9-6.8 20.1 20.1 0 0 1 9.8-2.5 18.8 18.8 0 0 1 8.7 2 16.4 16.4 0 0 1 4.2 3.2 5.3 5.3 0 0 0 9-3.2 5.4 5.4 0 0 0-1.5-4.4 23.1 23.1 0 0 0-6.1-4.5 30.6 30.6 0 0 0-14.1-3.2 32.9 32.9 0 0 0-16 3.8 28 28 0 0 0-10.9 10.6 30 30 0 0 0-4 15.4 30 30 0 0 0 4 15.3 28.3 28.3 0 0 0 11 10.6 32.4 32.4 0 0 0 15.9 3.9 30.1 30.1 0 0 0 14-3.3 23.5 23.5 0 0 0 6.2-4.6 5.3 5.3 0 0 0 1.5-4.3 5.2 5.2 0 0 0-2.4-3.8z"/>
+  <path d="M121.7 46.8l-16.6-8.1a1 1 0 0 1-.4-.5l-8.2-16.6a5.9 5.9 0 0 0-10.6 0l-8.1 16.6a1 1 0 0 1-.5.5l-16.6 8.1a5.9 5.9 0 0 0 0 10.6l16.6 8.2a1 1 0 0 1 .5.4L86 82.6a6 6 0 0 0 10.6 0l8.1-16.6a1 1 0 0 1 .5-.5l16.5-8.1a5.9 5.9 0 0 0 0-10.6zM109.4 48l-7.7 6.7a9.3 9.3 0 0 0-3 5.2l-2 10a.8.8 0 0 1-1.3.4l-6.8-7.7a9.4 9.4 0 0 0-5.1-3l-10-2a.8.8 0 0 1-.4-1.4l7.7-6.7a9.4 9.4 0 0 0 3-5.2l2-10A.8.8 0 0 1 87 34l6.7 7.7a9.4 9.4 0 0 0 5.2 3l10 2a.8.8 0 0 1 .4 1.3z" fill="url(#a)"/>
+  <path d="M10.5 95.2H13v6.1a4.7 4.7 0 0 1 3.8-2c3 0 5.2 2.5 5.2 6.3s-2.2 6.2-5.2 6.2A4.8 4.8 0 0 1 13 110v1.7h-2.6zm5.6 14.4c2 0 3.4-1.7 3.4-4s-1.3-4-3.4-4a3.8 3.8 0 0 0-3 1.6v4.8a3.8 3.8 0 0 0 3 1.6zm9.5 4.5a1.6 1.6 0 0 0 1.7-1l.6-1.4-4.9-12h2.8l3.5 9 3.4-9h2.8l-5.7 14a4 4 0 0 1-4.1 2.7 8 8 0 0 1-1.5-.2l.4-2.3a2.6 2.6 0 0 0 1 .2zm20.8-14.5v12h-2.9V95.2h3l8.4 11.6V95.2h2.8v16.4H55zm20-.2c3.6 0 5.9 2.7 5.9 6.4v.7H63a3.6 3.6 0 0 0 3.8 3.2 5 5 0 0 0 3.4-1.3l1.2 1.7a7 7 0 0 1-4.9 1.7 6.2 6.2 0 0 1-.2-12.4zm-3.3 5.2h6.7a3.2 3.2 0 0 0-3.4-3.1 3.3 3.3 0 0 0-3.3 3.1zm10-5H76l3.4 9 3.5-9h2.8l-4.8 12H78zm19.4-.2c3.6 0 5.9 2.7 5.9 6.4v.7h-9.2a3.6 3.6 0 0 0 3.8 3.2 5 5 0 0 0 3.4-1.3l1.1 1.7a7 7 0 0 1-4.8 1.7 6.2 6.2 0 0 1-.2-12.4zm-3.3 5.2h6.7a3.2 3.2 0 0 0-3.4-3.1 3.3 3.3 0 0 0-3.3 3.1zm11.7-5h2.6v1.8a5 5 0 0 1 3.9-2v2.6a3.8 3.8 0 0 0-.9 0 4 4 0 0 0-3 1.5v8H101zm14-.2a5.3 5.3 0 0 1 4.5 2.1l-1.7 1.6a3.2 3.2 0 0 0-2.7-1.4c-2.2 0-3.6 1.6-3.6 3.9s1.4 4 3.6 4a3.2 3.2 0 0 0 2.7-1.4l1.7 1.6a5.3 5.3 0 0 1-4.5 2 6.2 6.2 0 0 1 0-12.4zm6 6.2a6.1 6.1 0 1 1 6.1 6.2 6 6 0 0 1-6-6.2zm9.6 0c0-2-1.3-4-3.5-4s-3.4 2-3.4 4 1.2 4 3.4 4 3.5-1.9 3.5-4zm13.6 4.3a4.8 4.8 0 0 1-3.8 2c-3 0-5.3-2.4-5.3-6.3s2.2-6.2 5.3-6.2a4.8 4.8 0 0 1 3.8 2v-6.2h2.6v16.4H144zm0-6.6a3.9 3.9 0 0 0-3-1.6c-2 0-3.4 1.6-3.4 4s1.3 4 3.3 4a3.9 3.9 0 0 0 3.1-1.7zm11.2-4c3.6 0 5.9 2.8 5.9 6.5v.7H152a3.6 3.6 0 0 0 3.8 3.2 5 5 0 0 0 3.3-1.3l1.2 1.7a7 7 0 0 1-4.8 1.7 6.2 6.2 0 0 1-.2-12.4zm-3.3 5.3h6.7a3.2 3.2 0 0 0-3.3-3.1 3.3 3.3 0 0 0-3.4 3.1z" opacity=".8"/>
+</svg>
\ No newline at end of file
diff --git a/assets/scss/_reset.scss b/assets/scss/_reset.scss
new file mode 100644
index 0000000..c46af8a
--- /dev/null
+++ b/assets/scss/_reset.scss
@@ -0,0 +1,38 @@
+/* http://meyerweb.com/eric/tools/css/reset/ v2.0 | 20110126 License: none (public domain) */
+
+html, body, div, span, applet, object, iframe,
+h1, h2, h3, h4, h5, h6, p, blockquote, pre,
+a, abbr, acronym, address, big, cite, code,
+del, dfn, em, img, ins, kbd, q, s, samp,
+small, strike, strong, sub, sup, tt, var,
+b, u, i, center,
+dl, dt, dd, ol, ul, li,
+fieldset, form, label, legend,
+table, caption, tbody, tfoot, thead, tr, th, td,
+article, aside, canvas, details, embed,
+figure, figcaption, footer, header, hgroup,
+menu, nav, output, ruby, section, summary,
+time, mark, audio, video {
+	margin: 0;
+	padding: 0;
+	border: 0;
+	font-size: 100%;
+	font: inherit;
+	vertical-align: baseline;
+}
+/* HTML5 display-role reset for older browsers */
+article, aside, details, figcaption, figure,
+footer, header, hgroup, menu, nav, section { display: block; }
+body { line-height: 1; }
+ol, ul { list-style: none; }
+blockquote, q { quotes: none; }
+blockquote:before, blockquote:after,
+q:before, q:after { content: ''; content: none; }
+table { border-collapse: collapse; border-spacing: 0; }
+
+// Custom
+h1, h2, h3, h4, h5, h6 { letter-spacing: -0.05em; font-family: $font-family-bold; }
+b, strong { font-family: $font-family-bold; }
+a { text-decoration: none; transition: color 300ms linear; }
+input { &:focus { outline: none; } }
+img { max-width: 100%; height: auto; vertical-align: middle; border-radius: 2px; }
\ No newline at end of file
diff --git a/assets/scss/_variables.scss b/assets/scss/_variables.scss
new file mode 100644
index 0000000..1bade8d
--- /dev/null
+++ b/assets/scss/_variables.scss
@@ -0,0 +1,37 @@
+// Brand colors
+$blue: #0957FF;
+$blue-hover: #0944C1;
+$red: #EC0C43;
+$yellow: #FBB03B;
+$magenta: #E944FF;
+$cyan: #33CCFF;
+$black: #151515;
+$blue-gradient: linear-gradient(20deg, $blue-hover 0%, $blue 100%);
+$magenta-gradient: linear-gradient(20deg, $magenta 0%, $yellow 100%);
+$cyan-gradient: linear-gradient(20deg, $magenta 0%, $cyan 100%);
+
+// Supporting colors
+$grey-text-primary: #666666;
+$grey-text-light: #999999;
+$color-twitter-blue: #1DA1F2;
+$color-twitter-blue-hover: #1A8CD2;
+$color-facebook-blue: #3B5998;
+$grey-bg-light: #f6f6f6;
+$grey-bg: #eaeaea;
+
+// Fonts
+$font-family-default: 'ProximaNova-Regular';
+$font-family-bold: 'ProximaNova-Semibold';
+$font-family-serif: 'Noto Serif TC', serif;
+
+
+// Mixins
+@mixin fontAwesome($icon) {
+    font-family: 'Font Awesome 5 Free';
+    font-weight: 900;
+    content: $icon;
+}
+@mixin fontAwesomeBrand($icon) {
+    font-family: 'Font Awesome 5 Brands';
+    content: $icon;
+}
\ No newline at end of file
diff --git a/assets/scss/main.scss b/assets/scss/main.scss
new file mode 100644
index 0000000..c610900
--- /dev/null
+++ b/assets/scss/main.scss
@@ -0,0 +1,436 @@
+/*!
+Theme Name: Codemagic documentation
+Author: Nevercode Ltd
+Description: Codemagic documentation template for WordPress
+Version: 0.0.1
+*/
+
+@import './variables';
+@import './reset';
+@import './search.scss';
+
+body {
+    margin: 0;
+    padding: 0;
+    font-family: $font-family-default;
+    color: $black;
+    font-size: 16px;
+    letter-spacing: -.4px;
+}
+
+.article-page {
+    font-family: inherit;
+} 
+#content-wrap {
+    position: relative;
+
+    #sidebar {
+        width: 360px;
+        position: fixed;
+        left: 0;
+        top: 0;
+        bottom: 0;
+        overflow: visible;
+        box-shadow: 0 0 30px transparentize(black, .9);
+        background: white;
+        z-index: 10;
+
+        #menu-toggle {
+            display: none;
+            height: 50px;
+            width: 50px;
+            cursor: pointer;
+            z-index: 1;
+
+            .bar {
+                height: 3px;
+                width: 30px;
+                background: $black;
+                position: relative;
+                margin: auto;
+                transition: all 300ms ease-in-out;
+
+                &.top { top: 15px; }
+                &.middle { top: 20px; }
+                &.bottom { top: 25px; }
+            }
+            &:hover { .bar { background: $blue; } }
+        }
+        #logo {
+            z-index: 1;
+            a {
+                display: flex;
+                align-items: center;
+                padding: 40px;
+                border-bottom: 1px solid $grey-bg;
+                margin-bottom: 20px;
+                box-sizing: border-box;
+                
+
+                svg { flex: 1; fill: $blue; width: 60px;}
+                #logo-label {
+                    width: 120px;
+                    color: white;
+                    background-color: $blue;
+                    font-size: 12px;
+                    padding: 6px 20px;
+                    margin-left: 10px;
+                    border-radius: 100px;
+                    box-sizing: border-box;
+                    text-align: center;
+
+                    @media (max-width: 300px) {
+                      display: none;
+                    }
+                }
+            }
+        }
+        #docs-menu {
+            background: white;
+            overflow: auto;
+            position: absolute;
+            top: 112px;
+            bottom: 0;
+            right: 0;
+            padding: 10px 0;
+
+            li {
+                list-style: none;
+
+                .category-name {
+                    font-family: $font-family-bold;
+                    padding: 10px 60px 10px 40px;
+                    position: relative;
+                    cursor: pointer;
+                    line-height: 1.2;
+
+                    &::after {
+                        @include fontAwesome('\f0d7');
+                        position: absolute;
+                        top: 10px;
+                        right: 40px;
+                    }
+                }
+                .category-posts {
+                    display: none;
+                    
+                    a {
+                        display: block;
+                        color: $black;
+                        padding: 5px 5px 5px 50px;
+                        position: relative;
+                        font-size: 14px;
+                        opacity: 0;
+                        transition: all 300ms ease-in-out;
+    
+                        &:hover, &.active { color: $blue; }
+                    }
+                }
+                &.open {
+                    .category-name { &::after { transform: rotate(180deg); } }
+                    .category-posts {
+                        display: block;
+                        a { opacity: 1; }
+                    }
+                }
+            }
+        }
+        @media (min-width: 1001px) {
+            #docs-menu { display: block; }
+        }
+        @media (max-width: 1000px) {
+            left: 0;
+            right: 0;
+            top: 0;
+            bottom: auto;
+            align-items: center;
+            padding: 0 10px;
+            width: auto;
+            display: flex;
+            flex-wrap: nowrap;
+            height: 70px;
+            padding-right: 50px;
+
+            #menu-toggle { display: block; }
+            #logo {
+                flex: 1;
+                border-left: 1px solid $grey-bg;
+                margin-left: 10px;
+                padding-left: 10px;
+
+                a {
+                    max-width: 270px;
+                    padding: 15px 10px;
+                    margin: 0;
+                    border: none;
+                }
+            }
+            #docs-menu {
+                position: fixed;
+                bottom: 0;
+                top: 70px;
+                left: 0;
+                width: 360px;
+                transform: translateX(-400px);
+                padding: 30px 0;
+                box-shadow: 0 0 30px transparentize(black, .9);
+                overflow: auto;
+                transition: transform 300ms ease-in-out;
+
+                &.open {
+                    transform: translateX(0);
+                }
+            }
+        }
+        @media (max-width: 400px) {
+            #docs-menu { width: 100%; }
+        }
+    }
+    #main-content {
+        position: relative;
+        margin-left: 390px;
+
+        main {
+            width: calc(100% - 260px);
+            max-width: 1000px;
+            padding: 32px 40px 50px;
+            box-sizing: border-box;
+            font-size: 18px;
+
+            h1, h2, h3, h4, h5, h6 {
+              margin: 40px 0;
+              .ctc {
+                  display: inline;
+                  font-size: .75em;
+                  margin-left: .5em;
+                  vertical-align: middle;
+                  opacity: 0;
+                  cursor: pointer;
+                  transition: all 300ms ease-in-out;
+              }
+              &:hover {
+                  .ctc { opacity: 1; }
+              }
+          }
+
+            h1 {
+                font-size: 50px;
+                position: relative;
+                padding-bottom: 40px;
+                margin-top: 0;
+                margin-bottom: 40px;
+
+                &::after {
+                    content: "";
+                    width: 150px;
+                    height: 10px;
+                    background: $grey-bg;
+                    position: absolute;
+                    bottom: 0;
+                    left: 0;
+                }
+            }
+            h2 { font-size: 33px; }
+            h3 { font-size: 29px; }
+            h4 { font-size: 26px; }
+            h5 { font-size: 23px; }
+            h6 { font-size: 20px; }
+
+
+            p, li { line-height: 28px; }
+            p, ul, ol, pre, hr, figure { margin: 20px auto; }
+            img {
+                border-radius: 2px;
+                box-shadow: 0 0 30px transparentize(black, .9);
+                max-width: 100%;
+            }
+            a { color: #158fdc; }
+            figure {
+                text-align: center;
+
+                img {
+                  display: inline-block;
+                }
+
+                &.align-left {
+                  text-align: left;
+                }
+
+                &.align-right {
+                  text-align: right;
+                }
+
+                &.size-medium img, &.size-medium video {
+                  max-width: 80%;
+                }
+
+                &.size-small img, &.size-small video {
+                  max-width: 50%;
+                }
+
+                figcaption {
+                    font-size: .8em;
+                    margin: 15px auto;
+                }
+            }
+            code {
+              font-family: monospace;
+              background: $grey-bg-light;
+              font-size: 0.9em;
+              padding: 5px 10px;
+              word-break: break-word;
+              border-radius: 2px;
+            }
+            pre {
+                background: $grey-bg;
+                padding: 40px;
+                font-family: monospace;
+                font-size: 14px;
+                line-height: 24px;
+                overflow: auto;
+
+                code {
+                  background: transparent;
+                  padding: 0;
+                }
+            }
+            .notebox {
+              background: $grey-bg-light;
+              border-left: 10px solid $blue;
+              padding: 30px 40px;
+              text-align: left;
+              border-radius: 2px;
+              line-height: 28px;
+
+              p {
+                  font-size: .9em;
+                  margin: 10px auto;
+                  line-height: 22px;
+
+                  &:first-of-type { margin-top: 0; }
+                  &:last-of-type { margin-bottom: 0; }
+              }
+
+              code {
+                background: $grey-bg
+              }
+            }
+
+            .table-wrap {
+                overflow-x: auto;
+            }
+            table {
+                font-size: 14px;
+                line-height: 1.2;
+                tbody, thead {
+                    tr {
+                        td, th {
+                            min-width: 150px;
+                            padding: 15px;
+                            border: 2px solid $grey-bg;
+                            text-align: left;
+                        }
+                    }
+                }
+
+                code {
+                  padding: 2px 5px;
+                }
+            }
+
+            ol {
+              list-style-type: decimal;
+            }
+  
+            ul {
+              list-style-type: disc;
+            }
+  
+            ul, ol {
+              padding-left: 35px;
+              li {
+                margin: 10px 0;
+                line-height: 25px;
+                padding-left: 5px;
+              }
+            }
+        }
+        #toc {
+            width: 260px;
+            position: fixed;
+            right: 0;
+            top: 30px;
+            overflow: auto;
+
+            .heading {
+                color: #aaaaaa;
+                text-transform: uppercase;
+                padding-bottom: 10px;
+                margin-bottom: 10px;
+                border-bottom: 1px solid $grey-bg;
+                font-size: 12px;
+            }
+            a {
+                display: block;
+                color: $black;
+                padding: 5px 15px;
+                font-size: 14px;
+
+                &.item-H2 {  }
+                &.item-H3 { margin-left: 5px; }
+                &.item-H4 { margin-left: 10px; }
+                &.item-H5 { margin-left: 15px; }
+                &.item-H6 { margin-left: 20px; }
+            }
+
+            ul, ol {
+              list-style-type: none;
+              padding-left: 0;
+              li {
+                margin: 0;
+              }
+            }
+        }
+        @media (max-width: 1200px) {
+            main { width: 100%; padding: 32px 70px 50px 40px; }
+            #toc { display: none; }
+        }
+        @media (max-width: 1000px) {
+            margin: 100px 50px 0;
+        }
+        @media (max-width: 760px) {
+            margin: 80px 0 0;
+            main {
+                h1 { font-size: 40px; }
+                h2 { font-size: 33px; }
+                h3 { font-size: 29px; }
+                h4 { font-size: 26px; }
+                h5 { font-size: 23px; }
+                h6 { font-size: 20px; }
+            }
+        }
+        @media (max-width: 480px) {
+            main {
+                font-size: 14px;
+                padding: 32px 40px 50px 40px;
+                h1 { font-size: 30px; }
+                h2 { font-size: 26px; }
+                h3 { font-size: 24px; }
+                h4 { font-size: 22px; }
+                h5 { font-size: 20px; }
+                h6 { font-size: 18px; }
+                p, li { line-height: 22px; }
+                p, ul, ol, pre, hr, figure { margin: 20px auto; }
+                figure {
+                  &.align-left, &.align-right, &.size-medium, &.size-small {
+                    text-align: center;
+                    img, video {
+                      max-width: 100%
+                    }
+                  }
+                }
+            }
+        }
+    }
+}
+#footer { font-family: inherit; }
diff --git a/assets/scss/search.scss b/assets/scss/search.scss
new file mode 100644
index 0000000..ef5459f
--- /dev/null
+++ b/assets/scss/search.scss
@@ -0,0 +1,157 @@
+.search {
+  .search__input {
+    font-size: 14px;
+    border-radius: 3px;
+    border: 1px solid $grey-bg;
+    box-sizing: border-box;
+    padding: 10px;
+    padding-right: 35px;
+    width: 100%;
+  }
+
+  &.search--sidebar {
+    position: relative;
+    width: 100%;
+    @media (max-width: 1000px) {
+      display: none;
+    }
+    margin: 10px 40px 10px 40px;
+    width: calc(100% - 40px - 40px);
+  }
+
+  &.search--header {
+    position: absolute;
+    right: 10px;
+    width: 150px;
+    transition: width 150ms ease-in-out;
+    z-index: 1;
+
+    @media (min-width: 1001px) {
+      display: none;
+    }
+
+    &.search--active {
+      width: 300px;
+
+      @media (max-width: 670px) {
+        width: calc(100% - 360px);
+      }
+    }
+
+    @media (max-width: 500px) {
+      width: 40px;
+
+      &.search--active {
+        width: calc(100% - 100px);
+      }
+
+      .search__input {
+        padding-right: 28px;
+      }
+    }
+  }
+
+  .search__icon {
+    position: absolute;
+    right: 0;
+    padding: 12px;
+
+    &--search {
+      color: $grey-text-light;
+    }
+  }
+
+  .search--sidebar .search__icon {
+    right: 10px;
+  }
+
+  &.search--active .search__icon--search,
+  &:not(.search--active) .search__icon--clear {
+    display: none;
+  }
+}
+
+#search-results {
+  position: fixed;
+  top: 0;
+  left: 0;
+  right: 0;
+  bottom: 0;
+  z-index: 1;
+  background: rgb(248, 248, 248);
+  overflow: auto;
+  margin-top: 70px;
+
+  &:not(:empty) ~ #main-content {
+    position: fixed;
+    overflow: hidden;
+    height: 100%;
+  }
+
+  @media (min-width: 1001px) {
+    margin-left: 360px;
+    margin-top: 0;
+  }
+
+  &:empty {
+    display: none;
+  }
+
+  ul {
+    padding: 30px;
+  }
+
+  li {
+    padding: 12px 0;
+  }
+
+  a {
+    font-size: 18px;
+    color: $blue;
+    &:hover {
+      color: $blue-hover;
+    }
+  }
+
+  p {
+    font-size: 14px;
+    line-height: 16px;
+    margin-top: 10px;
+    color: #666;
+  }
+
+  span {
+    &:not(.start):before,
+    &:last-child:not(.end):after {
+      content: '\00A0...\00A0';
+    }
+  }
+
+  a mark {
+    color: $blue;
+  }
+
+  p mark {
+    color: black;
+  }
+
+  mark {
+    background: transparent;
+    font-family: $font-family-bold;
+  }
+
+  .no-results-message {
+    font-size: 28px;
+    text-align: center;
+    display: flex;
+    top: 0;
+    right: 0;
+    bottom: 0;
+    left: 0;
+    position: absolute;
+    align-items: center;
+    justify-content: center;
+    padding: 30px;
+    box-sizing: border-box;
+  }
+}
diff --git a/build.sh b/build.sh
new file mode 100755
index 0000000..690cc31
--- /dev/null
+++ b/build.sh
@@ -0,0 +1,9 @@
+#! /bin/sh
+
+set -ex
+
+cd "${0%/*}"
+
+rm -rf public/
+
+hugo --minify
diff --git a/ci-deploy.sh b/ci-deploy.sh
new file mode 100755
index 0000000..a6e3cb7
--- /dev/null
+++ b/ci-deploy.sh
@@ -0,0 +1,16 @@
+#! /bin/sh
+
+set -ex
+
+dir="/usr/local/opt/bin/s3deploy"
+
+if [ ! -d "$dir" ]; then
+  mkdir -p "$dir"
+  wget -qO- https://github.com/bep/s3deploy/releases/download/v2.3.0/s3deploy_2.3.0_Linux-64bit.tar.gz \
+   | tar -C "$dir" -xvz s3deploy 
+fi
+
+PATH="$dir":$PATH
+
+./build.sh
+./deploy.sh
diff --git a/config.yml b/config.yml
new file mode 100644
index 0000000..00e21fc
--- /dev/null
+++ b/config.yml
@@ -0,0 +1,73 @@
+---
+copyright:
+  '©Nevercode Ltd | All Rights Reserved | Codemagic is pending trademark
+  of Nevercode Ltd.'
+pygmentsUseClasses: true
+params:
+  twitterShareHandle: codemagicio
+  facebookAuthorHandle: codemagicio
+  appLoginLink: https://codemagic.io/
+  defaultFacebookImage: https://codemagic.io/img/facebook.png
+  defaultTwitterImage: https://codemagic.io/img/twitter.png
+  headerLinkTitle: Documentation
+  locale: en_GB
+  imageSizing:
+    front-featured:
+      generated-widths:
+        - 470
+        - 940
+        - 1200
+      sizes-attr:
+        "(max-width: 530px) calc(100vw - 60px), (max-width: 1024px) calc((100vw
+        - 100px) * 0.8), (max-width: 1300px) calc((100vw - 100px) * 0.6), calc((1200px
+        - 100px) * 0.6)\n"
+    post-hero:
+      generated-widths:
+        - 470
+        - 940
+        - 1200
+      sizes-attr:
+        "(max-width: 530px) calc(100vw - 60px), (max-width: 1024px) calc(100vw
+        - 100px), 800px\n"
+    post-related:
+      generated-widths:
+        - 470
+        - 940
+        - 1200
+      sizes-attr:
+        "(max-width: 530px) calc(100vw - 60px), (max-width: 1024px) calc((100vw
+        - 100px) * 0.4), (max-width: 1300px) calc((100vw - 100px) / 3 - 40px), calc(1200px
+        / 3 - 40px)\n"
+    category-list:
+      generated-widths:
+        - 470
+        - 940
+        - 1200
+      sizes-attr:
+        "(max-width: 530px) calc(100vw - 60px), (max-width: 1024px) calc((100vw
+        - 100px) * 0.4), (max-width: 1300px) calc(((100vw - 100px) * 0.3333333) -
+        20px), calc(((1200px - 100px) * 0.3333333) - 20px)\n"
+imaging:
+  resampleFilter: linear
+  quality: 90
+outputs:
+  home:
+    - HTML
+    - RSS
+    - JSON
+buildDrafts: true
+defaultContentLanguage: en
+disable404: true
+
+mediaTypes:
+  video/mp4:
+    suffixes:
+      - mp4
+
+title: Codemagic Docs
+taxonomies:
+  category: categories
+disableKinds:
+  - taxonomy
+  - taxonomyTerm
+  - section
diff --git a/config/production/config.yml b/config/production/config.yml
new file mode 100644
index 0000000..557bb8f
--- /dev/null
+++ b/config/production/config.yml
@@ -0,0 +1,2 @@
+buildDrafts: false
+baseURL: https://docs.codemagic.io
diff --git a/content/404.md b/content/404.md
new file mode 100644
index 0000000..e5fe4d6
--- /dev/null
+++ b/content/404.md
@@ -0,0 +1,7 @@
+---
+title: Not found
+type: 404
+layout: 404
+
+---
+Not found
\ No newline at end of file
diff --git a/content/_index.md b/content/_index.md
new file mode 100644
index 0000000..6b85192
--- /dev/null
+++ b/content/_index.md
@@ -0,0 +1,27 @@
+---
+title: Codemagic Documentation
+weight: ''
+description: Browse the Codemagic documentation for a quick overview of how to configure
+  Codemagic to get the most out of it.
+category_names:
+- Getting started with Codemagic CI/CD
+- Build configuration
+- Testing
+- Code signing
+- Publishing
+- Custom script examples
+- Troubleshooting
+- Working in teams
+- User settings
+category_values:
+- name: ''
+  title: ''
+
+---
+Welcome to the Codemagic documentation site!
+
+Here you'll find some essential information for setting up CI/CD for your Flutter app with [Codemagic](https://codemagic.io/). You'll also find step-by-step guides on various topics on our [blog](https://blog.codemagic.io/categories/tutorials/ "Codemagic blog - Tutorials").
+
+The content of this site is constantly evolving. We're continuously updating it to provide more details and include new features. 
+
+You are more than welcome to join our [Slack workspace](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc "Slack community for CI/CD and Flutter") to reach out to us and meet fellow Flutter enthusiasts.
\ No newline at end of file
diff --git a/content/build-customization/.gitkeep b/content/build-customization/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/content/building/.gitkeep b/content/building/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/content/building/automatic-build-triggering.md b/content/building/automatic-build-triggering.md
new file mode 100644
index 0000000..bcd7521
--- /dev/null
+++ b/content/building/automatic-build-triggering.md
@@ -0,0 +1,58 @@
++++
+categories = ["Build configuration"]
+date = "2019-03-31T15:09:08+03:00"
+description = ""
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Automatic build triggering"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 1
+[menu.docs_sidebar]
+weight = 1
+
++++
+In order to fully automate your CI/CD pipeline, you can set up automatic build triggering by configuring which branches to track and when to trigger builds.
+
+Build triggers can be configured in **App settings > Build triggers**.
+
+## Targeting specific branches
+
+The branches targeted for building are selected by entering branch patterns and including or excluding the matching branches. Note that you can either enter the exact name of the branch to select it or use the wildcard symbols listed in the table below to select more than one branch with one pattern.
+
+![](/uploads/tracked branches.PNG)
+
+The first (i.e. topmost) pattern in the list is applied first. Each following pattern will limit the set of branches further. You can check the targeted branches by clicking the eye icon next to **Watched branch patterns**.
+
+To add a new branch pattern:
+
+1. Navigate to the **Build triggers** section in App settings.
+2. Enter a pattern matching the name of one or more branches in the project.
+3. Select **Include** or **Exclude** from the dropdown to limit the set of targeted branches by either including or excluding the matching branches.
+4. Click **Add pattern** to save and apply it. You can always edit or delete added patterns.
+
+## Build triggers
+
+Under Automatic build triggering, you can select when to trigger builds.
+
+![](/uploads/automatic build triggering.PNG)
+
+**Trigger on every push**. When checked, a build will be started every time you commit code to any of the tracked branches.
+
+**Trigger on pull request update** (not supported for apps from custom sources). When checked, Codemagic will run the tests for the opened or updated pull request (merge request in GitLab jargon) without building the Android or the iOS app and pass the result back to the repository.
+
+{{% notebox %}}
+
+**Note on apps hosted in Bitbucket**  
+Webhooks for building pull request updates are automatically created for new apps but should be reviewed for apps added prior to releasing the **Trigger on pull request update** option. In Bitbucket, go to **Settings > Webhooks > Edit > Pull Requests** and make sure to check **Created** and **Updated**.
+
+{{% /notebox %}}
+
+If you don't check any of these triggering options, you will have to run builds manually for this workflow.
+
+## Skipping builds
+
+If you do not wish Codemagic to build a particular commit, include `[skip ci]` or `[ci skip]` in your commit message.
\ No newline at end of file
diff --git a/content/building/build-versioning.md b/content/building/build-versioning.md
new file mode 100644
index 0000000..467c3d3
--- /dev/null
+++ b/content/building/build-versioning.md
@@ -0,0 +1,32 @@
++++
+categories = ["Build configuration"]
+date = "2019-04-27T20:24:35+03:00"
+description = ""
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Build versioning"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 7
+[menu.docs_sidebar]
+weight = 1
+
++++
+If you are going to publish your app to App Store Connect or Google Play, each uploaded binary must have a new version. There are several approaches you can use for build versioning on Codemagic. One of the easiest ways to increment app version with every build is by using **build arguments** and the `BUILD_NUMBER` environment variable.
+
+The `BUILD_NUMBER` read-only environment variable holds the total count of builds (including the ongoing build) for this project in Codemagic. In other words, if you have triggered 10 builds for some project in Codemagic, the next time you build it, `BUILD_NUMBER` will be exported as `11`. 
+
+{{% notebox %}} Please note that the number of builds in `BUILD_NUMBER` is counted separately for each workflow. {{% /notebox %}}
+
+## Incrementing app version
+
+Here are some examples of the build arguments you can use to increment the app version. You can enter the build arguments in **App settings > Build > Build arguments**.
+
+`--build-name=2.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER + 100))`
+
+`--build-name=1.0.0 --build-number=$BUILD_NUMBER`
+
+`--build-number=$(git rev-list HEAD --count)`
\ No newline at end of file
diff --git a/content/building/building-android-app-bundles.md b/content/building/building-android-app-bundles.md
new file mode 100644
index 0000000..1920c91
--- /dev/null
+++ b/content/building/building-android-app-bundles.md
@@ -0,0 +1,43 @@
++++
+categories = ["Build configuration"]
+date = "2019-03-31T15:59:20+03:00"
+description = ""
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Building Android app bundles"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 3
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can build your app in [Android app bundle](https://developer.android.com/guide/app-bundle) (`.aab`) format for publishing to Google Play. When you upload your app in `.aab` format, app APKs will be dynamically created and optimized for user’s device configuration when the app is installed from Google Play Store.
+
+{{% notebox %}}
+
+Android app bundles are supported starting from Flutter v1.1.5.
+
+{{% /notebox %}}
+
+Building an Android app bundle requires additional configuration as described in the sections below.
+
+## Enable building app bundles in Codemagic
+
+In the Build section of app settings, check **Build Android App Bundles** under Build for platforms.
+
+![](/uploads/androi_app_bundles.PNG)
+
+## Prepare the app bundle for uploading to Google Play
+
+In order to upload your Android app bundle to Google Play, you will need to:
+
+1. Build the app in **Release** mode.
+2. Set up [Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/) in Codemagic to sign the app bundle.
+3. Set up [publishing to Google Play](https://docs.codemagic.io/publishing/publishing-to-google-play/) in Codemagic to upload your app bundle to one of Google Play tracks.
+4. [Enroll your app into app signing by Google Play](https://support.google.com/googleplay/android-developer/answer/7384423) to have Google sign the APKs that are generated from the app bundle during installation.
+
+When you enroll an app into app signing by Google Play, Google will manage your app’s signing key for you and use it to sign the APKs for distribution. Note that the app must be signed with the same key throughout its lifecycle, so if the app has already been uploaded to Google Play, make sure to export and upload your original key to Google Play for app signing. It is then recommended to create a new key ("upload key") for signing your app updates and uploading them to Google Play.
\ No newline at end of file
diff --git a/content/building/building-for-the-web.md b/content/building/building-for-the-web.md
new file mode 100644
index 0000000..43a81ce
--- /dev/null
+++ b/content/building/building-for-the-web.md
@@ -0,0 +1,44 @@
++++
+categories = ["Build configuration"]
+description = "See how to build a Flutter web app with Codemagic."
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Building for the web"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 5
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can build, test and publish Flutter web apps with Codemagic.
+
+## Project structure requirements
+
+Codemagic can detect your Flutter web project if it meets the following conditions:
+
+* The project has a `web` folder
+* There’s `flutter_web` dependency in `pubspec.yaml`
+
+## Build configuration
+
+If your project has the proper structure and configuration of a web project, Codemagic will automatically build the web app when you click **Run your first build**. During the installing dependencies step, we run `flutter packages pub global activate webdev` which activates the `webdev` package necessary for building the release version of Flutter web app. If you want to use a different package, you can set it up in a custom pre-build script.
+
+You can review the build settings in **App settings > Build**.
+
+![](/uploads/2019/05/build_settings.PNG)
+
+The following is necessary to build the web app:
+
+1. Select a **Flutter version**. Flutter for web is supported starting from Flutter v1.5.4. If you're actively developing Flutter for web, you may prefer selecting one of the unstable channels.
+2. Select **Web** under Build for platforms. If your project is detected correctly as a web project, you'll already see it selected in the UI.
+3. Specify the command for building the app under **Build arguments**. By default, Codemagic is configured to run the `flutter packages pub global run webdev build` command, but you can enter a different command to be run.
+
+When you make any changes to the default settings, make sure to hit **Save** before you start the build for the changes to take effect.
+
+## Build artifacts
+
+At the end of a successful build, Codemagic generates a `.zip` file of the contents of `$FCI_BUILD_DIR/build` and exports this as an artifact. You can either download it or set up publishing to [Codemagic Static Pages](https://docs.codemagic.io/publishing/publishing-to-codemagic-static-pages/) or to third-party hosting sites using custom scripts.
\ No newline at end of file
diff --git a/content/building/dependency-caching.md b/content/building/dependency-caching.md
new file mode 100644
index 0000000..f9dd7a9
--- /dev/null
+++ b/content/building/dependency-caching.md
@@ -0,0 +1,40 @@
++++
+categories = ["Build configuration"]
+description = "Store your dependencies on Codemagic for a faster build time."
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Dependency caching"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 6
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can speed up your builds by storing dependencies on Codemagic. To use caching, you must **enable dependency caching** in app settings. Note that caching is workflow-specific.
+
+By default, Codemagic offers to cache the following path:
+
+`$FCI_BUILD_DIR/build`
+
+You can add other paths to be cached, for example:
+
+| **Path** | **Description** |
+| --- | --- |
+| `$FCI_BUILD_DIR/build` | Build cache |
+| `$HOME/.pub-cache` | Dart cache |
+| `$HOME/Library/Developer/Xcode/DerivedData` | Xcode cache |
+| `$HOME/.gradle/caches` | Gradle cache. Note: do not cache `$HOME/.gradle`|
+
+## Enabling dependency caching
+
+1. In your app settings, open the **Dependency caching** section.
+
+	![](/uploads/2019/04/caching_enabled.PNG)
+        
+2. Check the **Enable dependency caching** option. By default, caching is disabled.
+3. Enter the path(s) to the dependencies to be cached and click **Add**. Note that you can delete added paths anytime.
+4. Click **Save** to save the settings.
\ No newline at end of file
diff --git a/content/building/environment-variables.md b/content/building/environment-variables.md
new file mode 100644
index 0000000..936d613
--- /dev/null
+++ b/content/building/environment-variables.md
@@ -0,0 +1,70 @@
++++
+categories = ["Build configuration"]
+date = "2019-03-31T15:10:05+03:00"
+description = "Environment variables are useful for storing information that you do not want to store in the repository. You can also use Codemagic read-only environment variables to customize your builds."
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Environment variables"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 2
+[menu.docs_sidebar]
+weight = 1
+
++++
+Environment variables are useful for storing information that you do not want to store in the repository, such as your credentials or workflow-specific data. In addition, you can make use of a number of read-only environment variables that Codemagic exports to customize your builds.
+
+## Adding environment variables
+
+You can add environment variables in **App settings > Environment variables**.
+
+1. Enter the name and the value of the variable.
+2. Check **Secure** if you wish to hide the value in the UI and build logs and disable editing of the variable. Such variables can be accessed only by the builder VMs during the build.
+3. Click **Add**.
+
+![](/uploads/env_vars.PNG)
+
+To access a variable, add the `$` symbol in front of its name. For example, access `API_TOKEN` by using `$API_TOKEN`. Note that it is required to use quotation marks with multi-line variables when you are referencing them in custom scripts, as shown in the example below:
+
+    > MY_VAR="var
+    > value"
+    > echo $MY_VAR
+    < var value
+    > echo "$MY_VAR"
+    < var
+    < value
+
+## Codemagic read-only environment variables
+
+Codemagic exports several read-only environment variables during the build that you can use in scripts to customize the build process. Environment variables added by user will override Codemagic defaults. You can check which environment variables are exported by inserting the following script before or after any of the default build steps:
+
+    #!/bin/sh
+    set -ex
+    printenv
+
+Here you'll find some of the read-only environment variables explained.
+
+| Environment variable | Value |
+| --- | --- |
+| CI | true |
+| CONTINUOUS_INTEGRATION | true |
+| BUILD_NUMBER | Number of the build for this project in Codemagic |
+| FCI_BRANCH | The current branch being built, for pull requests it is the destination branch |
+| FCI_COMMIT | Commit hash that is currently being built by Codemagic, for pull request builds it is hash of the source commit |
+| FCI_CLONE_UNSHALLOW | Performs a full clone of the repository instead of top 50 commits |
+| FCI_PROJECT_ID | UUID of the project that is being built |
+| FCI_BUILD_ID | UUID of the build |
+| FCI_TEST_STEP_STATUS | Test step status, success or failure |
+| FCI_BUILD_STEP_STATUS | Build step status, success, failure or skipped |
+| FCI_BUILD_DIR | Absolute path to the cloned repository in Codemagic builders |
+| FCI_BUILD_OUTPUT_DIR | Contains all the artifact files that will be included in the final artifacts zip file |
+| FCI_EXPORT_DIR | All the files included in this directory will be added to the artifacts zip file |
+| FCI_FLUTTER_SCHEME | Name of the iOS scheme to be used |
+| FCI_SYMROOT | Directory path of files generated during Xcode build |
+| FCI_KEYSTORE_PASSWORD | Password of Android keystore as configured in the UI |
+| FCI_KEY_PASSWORD | Password of Android key as configured in the UI |
+| FCI_KEY_ALIAS | Alias of the key as configured in the UI |
+| FCI_KEYSTORE_PATH | Path of the file in our VM |
\ No newline at end of file
diff --git a/content/building/specifying-custom-ios-scheme.md b/content/building/specifying-custom-ios-scheme.md
new file mode 100644
index 0000000..9f33424
--- /dev/null
+++ b/content/building/specifying-custom-ios-scheme.md
@@ -0,0 +1,19 @@
++++
+categories = ["Build configuration"]
+description = "Build "
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Specifying custom iOS scheme"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 4
+[menu.docs_sidebar]
+weight = 1
+
++++
+By default, Codemagic builds the iOS app using the `Runner` scheme. You can specify a custom iOS scheme for the `xcodebuild` command with the `FCI_FLUTTER_SCHEME` environment variable. A different iOS scheme can be specified for each workflow.
+
+You can read more about environment variables and how to use them in the [Environment variables](https://docs.codemagic.io/building/environment-variables/) section.
\ No newline at end of file
diff --git a/content/code-signing/.gitkeep b/content/code-signing/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/content/code-signing/android-code-signing.md b/content/code-signing/android-code-signing.md
new file mode 100644
index 0000000..35e9395
--- /dev/null
+++ b/content/code-signing/android-code-signing.md
@@ -0,0 +1,111 @@
++++
+categories = ["Code signing"]
+date = "2019-03-10T22:52:07+02:00"
+description = "Sign your Android app for publishing to Google Play Store"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Android code signing"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 2
+[menu.docs_sidebar]
+weight = ""
+
++++
+Code signing is required for distributing your Android app to Google Play store. It enables to identify who developed the app and ensure that all updates to the app come from you. 
+
+## Requirements
+
+To receive a signed release APK of your app on Codemagic, you will have to 1) [prepare your Flutter project for code signing](https://docs.codemagic.io/code-signing/android-code-signing/#preparing-your-flutter-project-for-code-signing), and 2) [set up Android code signing in Codemagic UI](https://docs.codemagic.io/code-signing/android-code-signing/#setting-up-android-code-signing-on-codemagic).
+
+For code signing, you need to upload the **keystore** containing your **certificate** and **key**. See the instructions for generating the keystore [here](#generating-a-keystore).
+
+As a keystore can hold multiple keys, each key in it must have an **alias**. Both the keystore file and the key alias are protected by **passwords**.
+
+{{% notebox %}}
+
+Please note that every app must be signed using the same key throughout its lifespan.
+
+{{% /notebox %}}
+
+## Generating a keystore
+
+You can create a keystore for signing your release builds with the Java Keytool utility by running the following command:
+
+    keytool -genkey -v -keystore keystore_name.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000
+
+Keytool then prompts you to enter your personal details for creating the certificate, provide an alias for the key as well as provide passwords for the keystore and the key. It then generates the keystore as a file called **keystore_name.keystore** in the directory you're in. The key is valid for 10,000 days.
+
+You need to upload the keystore and provide the keystore password, key alias and key password to have Codemagic sign your Android app on your behalf.
+
+## Preparing your Flutter project for code signing
+
+There are several approaches you can use to prepare your Flutter project for code signing, we have described two of these in this section. Note that whichever approach you use, you still need to [set up Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/#setting-up-android-code-signing-on-codemagic) in the Codemagic UI.
+
+### Configure signing in build.gradle
+
+You can follow the instructions in [Flutter’s documentation](https://flutter.io/docs/deployment/android#signing-the-app) to configure code signing in Gradle. It's vital that you use the variable names suggested in Flutter documentation as Codemagic will reference them during the build. However, make sure to not commit your `key.properties` file to the repository, Codemagic will generate and populate the `key.properties` file during the build based on the input you provide in the UI.
+
+### Configure signing using environment variables
+
+Alternatively, you can use [environment variables](https://docs.codemagic.io/building/environment-variables/ "Environment variables") to prepare your app for code signing.
+
+1. Set the following environment variables in Codemagic (using the values from generating your keystore file):
+
+		FCI_KEYSTORE_PASSWORD=myKeystorePassword
+		FCI_KEY_ALIAS=MyReleaseKey
+		FCI_KEY_PASSWORD=myKeypassword
+2. Upload the contents of your base64-encoded keystore file to Codemagic as an environment variable with the name `FCI_KEYSTORE_FILE`.
+3. Add a custom script for decoding the keystore file stored in `FCI_KEYSTORE_FILE`. For example, click on the + icon before **Test** and paste the following script into the **Post-clone script** field:
+
+		#!/usr/bin/env sh  
+		set -e # exit on first failed commandset  
+		echo $FCI_KEYSTORE_FILE | base64 --decode > $FCI_BUILD_DIR/keystore.jks
+4. Set your signing configuration in `build.gradle` as follows:
+```
+      ...
+       android {
+           ...
+           defaultConfig { ... }
+       
+           signingConfigs {
+               release {
+                   if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
+                       storeFile file(System.getenv()["FCI_BUILD_DIR"] + "/keystore.jks")
+                       storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
+                       keyAlias System.getenv()["FCI_KEY_ALIAS"]
+                       keyPassword System.getenv()["FCI_KEY_PASSWORD"]
+                   } else {
+                       storeFile file("/path/to/local/myreleasekey.keystore")
+                       storePassword "password"
+                       keyAlias "MyReleaseKey"
+                       keyPassword "password"
+                   }
+               }
+           }
+       
+           buildTypes {
+               release {
+                   ...
+                   signingConfig signingConfigs.release
+               }
+           }
+       }
+       ...
+```
+## Setting up Android code signing on Codemagic
+
+You are required to upload your keystore file and provide details about your key in order to receive signed builds on Codemagic.
+
+{{< figure size="" src="/uploads/2019/03/code signing.PNG" caption="" >}}
+
+1. Navigate to the Publish section in app settings.
+2. Click **Android code signing**.
+3. Upload your release keystore file.
+4. Enter the **keystore password**, **key alias** and **key password**.
+5. Click **Save** to finish the setup.
+
+{{% notebox %}}Please note that every app must be signed using the same key throughout its lifespan. {{% /notebox %}}
\ No newline at end of file
diff --git a/content/code-signing/ios-code-signing.md b/content/code-signing/ios-code-signing.md
new file mode 100644
index 0000000..181ba90
--- /dev/null
+++ b/content/code-signing/ios-code-signing.md
@@ -0,0 +1,101 @@
++++
+categories = ["Code signing"]
+date = "2019-03-10T21:29:39+02:00"
+description = "Sign Flutter app for iOS"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "iOS code signing"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 1
+[menu.docs_sidebar]
+weight = ""
+
++++
+Code signing is required for installing your iOS app on real devices and publishing it to App Store. It enables to identify who developed the app and ensure that all the changes to the app come from you or your team.
+
+To receive a signed `.ipa` file of your app on Codemagic, you need to set up code signing. When you build without code signing, you will receive only `Runner.app` that runs on simulators only.
+
+### Requirements
+
+Before you can start signing or distributing your app, you need to [enroll as an iOS developer](https://developer.apple.com/programs/enroll/) and [register an app ID](https://developer.apple.com/account/ios/identifier/bundle/create) in Apple Developer portal. Then, you need a **signing certificate** and a **provisioning profile** to sign the build.
+
+{{% notebox %}}  
+With our **automatic code signing** feature, Codemagic will create both the certificate and the provisioning profile for you on your behalf. When using our **manual code signing** method, you will need to first export the certificate and the provisioning profile in order to upload them, see [how to export the certificate and the provisioning profile](#exporting-signing-certificate-and-provisioning-profile).  
+{{% /notebox %}}
+
+The certificate is issued by Apple and enables to identify who developed the code. Codemagic expects your certificate to be in **Personal Information Exchange (.p12)** format.
+
+A provisioning profile contains information about the app ID, the devices on which the app can be installed and the certificates that can be used for signing the app. There are separate certificates and provisioning profiles for development and distribution. Note that if your app contains app extensions, you need an additional provisioning profile for each app extension. The provisioning profile must have the **.mobileprovision** extension.
+
+For successful signing, the certificate and the provisioning profile must match in the following way:
+
+{{< figure size="medium" src="/uploads/2019/03/CM-codesigning.jpg" caption="Matching the signing certificate and the provisioning profile" >}}
+
+In short, the purpose of the different provisioning profiles is the following:
+
+* **Development**: for testing the app on a real device while developing. The app must be built in **debug** mode.
+* **Ad Hoc:** for distributing the app to non-TestFlight testers (e.g. via [Testmagic](https://testmagic.io/)). The app must be built in **release** mode.
+* **App Store**: for distributing the app via TestFlight or the App Store. The app must be built in **release** mode.
+
+### Setting up automatic code signing
+
+With the automatic code signing feature, Codemagic will generate a signing certificate and a matching provisioning profile for you in-app and use them for code signing during the build. Depending on the selected provisioning profile type, Codemagic will create a development or a distribution certificate and a development, Ad hoc or App store provisioning profile. The provisioning profile (except for Distribution) will include all the devices you have registered on your Apple Developer account.
+
+To set up automatic code signing:
+
+1. In your App settings, navigate to the Publish section.
+2. Click on **iOS code signing** to expand this step.
+3. Select **Automatic** as the code signing method.
+4. Enter your **Apple ID** (Apple Developer portal username) and **Apple Developer portal password**.
+5. Select the provisioning profile type. Note that **Development** requires building your app in **debug** mode, while **Ad hoc** and **App store** require selecting **release** mode in the Build section.
+6. You can also enter your app’s **bundle identifier** (optional). By default, Codemagic detects it automatically from your `project.pbxproj`file.
+7. Click **Save** to finish the setup.
+
+{{< figure size="medium" src="/uploads/2019/03/automatic_code_signing2.PNG" caption="Automatic code signing setup" >}}
+
+{{% notebox %}}
+If your Apple developer account has **two-step verification** or **two-step authentication** enabled, you will be asked to enter your verification code in a popup and click **Save** again. Note that the length of the session depends on Apple and is limited to approximately a day. When the session expires, you will need to verify the login again. Simply click **Save** in the iOS code signing settings to display the verification popup.
+{{% /notebox %}}
+
+After you have successfully established connection to Apple developer portal, you will have the option to specify the **Developer portal team**. Make sure to click **Save** again to save the changes.
+
+{{< figure size="medium" src="/uploads/team_selection_edited.png" caption="Apple developer portal team selection" >}}
+
+As the next step, you can configure publishing to App Store Connect to distribute your signed app to testers or submit it for review.
+
+### Setting up manual code signing
+
+With the manual code signing method, you are required to upload the signing certificate and the matching provisioning profile to Codemagic in order to receive signed builds for the workflow at hand.
+
+1. In your App settings, navigate to the Publish section.
+2. Click on **iOS code signing** to expand this step.
+3. Select **Manual** as the code signing method.
+4. Upload your signing certificate (in `.p12` format) and provisioning profile (`.mobileprovision`). Note that if your app contains app extensions, you are required to upload an additional provisioning profile for each extension.
+5. Click **Save** to finish the setup.
+
+{{< figure size="medium" src="/uploads/2019/03/manual_code_signing.PNG" caption="Manual code signing setup" >}}
+
+Codemagic will now create a signed `.ipa` file with every build. Note that you must also set up publishing to App Store Connect to distribute the app to the App Store.
+
+### Exporting signing certificate and provisioning profile
+
+You will need a Mac to generate the signing certificate.
+
+To export the signing certificate:
+
+1. Open **Keychain Access** by searching for it in Spotlight.
+2. Select **My Certificates** in the **Category** submenu on the left sidebar. The name of the certificate should start with **iPhone Developer** or **iPhone Distribution**.
+3. Select **File** > **Export Items** from the OSX menu bar.
+4. Save the certificate when prompted. Be sure to leave the file format filled as **Personal Information Exchange (.p12)** because saving the certificate with the **.cer** extension will not include your private key.
+   {{< figure size="medium" src="/uploads/2019/03/keychain_certificate.PNG" caption="" >}}
+5. Enter the certificate export password when prompted (optional).
+
+You can manage your distribution profiles in [Apple Developer portal](https://developer.apple.com/account/ios/profile/profileList.action).
+
+1. In the Provisioning Profiles section, select the appropriate provisioning profile type.
+2. Click on the provisioning profile you would like to export and click **Download**.
+3. Save it to have it ready.
\ No newline at end of file
diff --git a/content/custom-scripts/.gitkeep b/content/custom-scripts/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/content/custom-scripts/access-private-git-submodules.md b/content/custom-scripts/access-private-git-submodules.md
new file mode 100644
index 0000000..51fe1e5
--- /dev/null
+++ b/content/custom-scripts/access-private-git-submodules.md
@@ -0,0 +1,32 @@
++++
+categories = ["Custom script examples"]
+date = "2019-04-09T17:40:12+03:00"
+description = "Access private Git submodules in Codemagic"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Access private Git submodules"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 1
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can access private Git submodules in Codemagic by saving the SSH key to your repository as an [environment variable](https://docs.codemagic.io/building/environment-variables/) and referencing it in a custom **post-clone** script.
+
+1. Save the SSH key (e.g. `SUBMODULE_SSH_KEY`) for accessing the repository as an environment variable. Make sure to check **Secure**.
+
+        SUBMODULE_SSH_KEY = -----BEGIN OPENSSH PRIVATE KEY-----
+        ...
+        -----END OPENSSH PRIVATE KEY-----
+
+1. Add the following **post-clone** script to enable fetching sources from private Git submodules.
+
+           #!/usr/bin/env sh
+           
+           echo "${SUBMODULE_SSH_KEY}" > /tmp/submodule.key
+           chmod 600 /tmp/submodule.key
+           ssh-agent bash -c 'ssh-add "/tmp/submodule.key"; git submodule update --init --recursive'
\ No newline at end of file
diff --git a/content/custom-scripts/add-a-git-tag-with-app-version.md b/content/custom-scripts/add-a-git-tag-with-app-version.md
new file mode 100644
index 0000000..0830105
--- /dev/null
+++ b/content/custom-scripts/add-a-git-tag-with-app-version.md
@@ -0,0 +1,36 @@
++++
+categories = ["Custom script examples"]
+date = "2019-04-07T12:57:59+03:00"
+description = "Create a Git tag referencing your app version"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Add a Git tag with app version"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 2
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can use this **pre-publish** script to create a Git tag referencing your app version. The script will check if the build was successful before updating the app version.
+
+1. Save your Git service username and email address as [environment variables](https://docs.codemagic.io/building/environment-variables/) (e.g. `GIT_USERNAME` and `GIT_EMAIL`).
+2. Add the following **pre-publish** script.
+```
+       #!/usr/bin/env sh
+
+       set -e # exit on first failed commandset
+       set -x # print all executed commands to the log
+
+       if [ "$FCI_BUILD_STEP_STATUS" == "success" ]
+       then
+         new_version=v1.0.$BUILD_NUMBER
+         git config --global user.name $GIT_USERNAME
+         git config --global user.email $GIT_EMAIL
+         git tag $new_version
+         git push --tags
+       fi
+```
\ No newline at end of file
diff --git a/content/custom-scripts/load-firebase-configuration.md b/content/custom-scripts/load-firebase-configuration.md
new file mode 100644
index 0000000..d1b250d
--- /dev/null
+++ b/content/custom-scripts/load-firebase-configuration.md
@@ -0,0 +1,36 @@
++++
+categories = ["Custom script examples"]
+date = "2019-04-07T13:01:10+03:00"
+description = "Load your Firebase configuration files to Codemagic"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Load Firebase configuration"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 5
+[menu.docs_sidebar]
+weight = 1
+
++++
+Instead of committing the Firebase config files to your repository, you can upload them to Codemagic as [environment variables](https://docs.codemagic.io/building/environment-variables/) and reference them in a custom script. Note that the Firebase config file (`google-services.json` for Android or `GoogleService-Info.plist` for iOS) must be Base64-encoded.
+
+1. Save your Firebase config files as environment variables, e.g. `ANDROID_FIREBASE_SECRET` and `IOS_FIREBASE_SECRET`. Make sure to check **Secure**.
+2. Add the following **pre-build** script echoing your variables to load the Firebase configuration in Codemagic.
+
+		#!/usr/bin/env sh
+       
+		set -e # exit on first failed commandset
+       
+		echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
+		echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
+
+{{% notebox %}}
+
+`post-clone script failed on base64 decode. The command could not be found` 
+If you received this error message when using the script above, it may be due to some invisible Unicode characters in the script after copy-pasting it. Try removing the space between the `base64` command and the `--decode` option and then adding it back.
+{{% /notebox %}}
+
+For more details about using base64 and loading the Firebase configuration in Codemagic, see the step-by-step guide [here](https://blog.codemagic.io/how-to-load-firebase-config-in-codemagic-with-environment-variables/).
\ No newline at end of file
diff --git a/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
new file mode 100644
index 0000000..8fdcc2a
--- /dev/null
+++ b/content/custom-scripts/publish-build-artifacts-to-amazon-s3.md
@@ -0,0 +1,31 @@
++++
+categories = ["Custom script examples"]
+description = "You can use custom scripts to publish app artifacts to external services."
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Publish build artifacts to Amazon S3"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 3
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can use custom scripts to publish your app artifacts to external sources. Here's an example for publishing to [Amazon S3](https://aws.amazon.com/s3/).
+
+1. You will first need to provide Codemagic access to your Amazon S3 account for publishing. In **App settings >** **Environment variables**, add your credentials as  [environment variables](https://docs.codemagic.io/building/environment-variables/) named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` respectively. Make sure to check **Secure**.
+2. Click on the **+** sign before the Build section to expand the step and add the following **pre-build script**.  `<FOLDER OR FILE>` refers to a specific folder or file to be synced. Replace `<BUCKET_NAME>` with your actual bucket name.
+
+        #!/bin/sh
+        
+        set -e
+        set -x
+        
+        cd $FCI_BUILD_DIR
+        sudo pip3 install awscli --upgrade
+        aws s3 sync <FOLDER OR FILE> s3://<BUCKET_NAME>
+
+Now, each time you build the app, the app artifact will be published to your Amazon S3 bucket.
\ No newline at end of file
diff --git a/content/custom-scripts/run-static-code-analysis.md b/content/custom-scripts/run-static-code-analysis.md
new file mode 100644
index 0000000..574a6aa
--- /dev/null
+++ b/content/custom-scripts/run-static-code-analysis.md
@@ -0,0 +1,26 @@
++++
+categories = ["Custom script examples"]
+date = "2019-03-31T15:25:27+03:00"
+description = ""
+draft = true
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Run static code analysis"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = ""
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can use this **pre-test** script to run static code analysis with `flutter analyze`.
+
+    #!/usr/bin/env sh
+    
+    set -e # exit on first failed command
+    set -x # print all executed commands to the log
+    
+    flutter analyze
\ No newline at end of file
diff --git a/content/custom-scripts/upload-custom-artifacts.md b/content/custom-scripts/upload-custom-artifacts.md
new file mode 100644
index 0000000..413e226
--- /dev/null
+++ b/content/custom-scripts/upload-custom-artifacts.md
@@ -0,0 +1,24 @@
++++
+categories = ["Custom script examples"]
+date = "2019-04-07T12:53:30+03:00"
+description = "Upload files to be included in your build artifacts ZIP file"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Upload custom artifacts"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 4
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can use a custom script to upload custom artifacts, such as screenshots, to `$FCI_EXPORT_DIR` and include them in the build artifacts ZIP file generated by Codemagic.
+
+For example, add this **post-test** script to copy screenshots to `$FCI_EXPORT_DIR`.
+
+    #!/usr/bin/env sh
+            
+    cp  -r build/screenshots $FCI_EXPORT_DIR/screenshots
\ No newline at end of file
diff --git a/content/getting-started/adding-apps-from-custom-sources.md b/content/getting-started/adding-apps-from-custom-sources.md
new file mode 100644
index 0000000..bf311cd
--- /dev/null
+++ b/content/getting-started/adding-apps-from-custom-sources.md
@@ -0,0 +1,31 @@
++++
+categories = ["Getting started with Codemagic CI/CD"]
+date = "2019-03-21T17:03:45+02:00"
+description = "Add your Flutter app wherever it is hosted"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Adding apps from custom sources"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 4
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can add apps from other public or private Git-based repositories. This includes repositories requiring **SSH key authentication**. Click **Add app from custom source** on the Applications page to get started.
+
+{{< figure size="medium" src="/uploads/2019/03/add_app_light-1.PNG" caption="" >}}
+
+Then, fill in all the required fields.
+
+{{< figure size="medium" src="/uploads/2019/03/app_using_ssh_authentication.PNG" caption="" >}}
+
+1. Enter the checkout URL of the repository.
+2. If a private key is required to access the repository or any private submodules in it, upload the **SSH private key** file.
+3. If the SSH key is password-protected, you’ll be also asked to enter the **SSH key password**.
+4. Click **Add app**.
+
+Your app will be then listed on the Applications page and you can immediately start running builds.
\ No newline at end of file
diff --git a/content/getting-started/automatic-language-detection.md b/content/getting-started/automatic-language-detection.md
new file mode 100644
index 0000000..417d65e
--- /dev/null
+++ b/content/getting-started/automatic-language-detection.md
@@ -0,0 +1,20 @@
++++
+categories = ["Getting started with Codemagic CI/CD"]
+date = "2019-03-21T17:08:18+02:00"
+description = ""
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Automatic language detection"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 6
+[menu.docs_sidebar]
+weight = 1
+
++++
+Codemagic enables you to sort the list of apps detected in your repositories based on the repository language so you can display your Flutter apps only. This can be done if your apps have **Dart** set as the project language in GitHub/Bitbucket. While GitHub determines your project language automatically based on the files and directories in your repository, the project language for apps hosted on Bitbucket has to be set manually in the repository settings to benefit from this sorting option.
+
+GitLab projects cannot be sorted by language as information about the programming language of GitLab projects is not available to Codemagic.
\ No newline at end of file
diff --git a/content/getting-started/build-artifacts.md b/content/getting-started/build-artifacts.md
new file mode 100644
index 0000000..7dd6562
--- /dev/null
+++ b/content/getting-started/build-artifacts.md
@@ -0,0 +1,22 @@
++++
+categories = ["Getting started with Codemagic CI/CD"]
+date = "2019-02-14T13:35:35+02:00"
+description = "What kind of artifacts are generated for Flutter apps on Codemagic CI/CD"
+draft = true
+facebook_description = ""
+facebook_image = ""
+facebook_title = ""
+thumbnail = ""
+title = "Build artifacts"
+twitterDescription = ""
+twitter_image = ""
+twitter_title = ""
+weight = 3
+
++++
+With every build, Codemagic creates the relevant build artifacts that are available for download in the app and can be also published to **email**, **Slack** and **Google Play Store** / **App Store Connect (TestFlight)**. The list of artifacts may vary depending on several factors, such as the chosen platform(s) and build mode, whether code signing was enabled, if there were tests present, and so on.
+
+|  | <b>Android</b> | <b>iOS</b> |
+| --- | --- | --- |
+| <b>Without code signing (debug mode)</b>: | app.apk <br> app-debug.apk | Runner.app |
+| <b>With code signing (release mode)</b>: | app.apk <br> app-release.apk | app_name.ipa<br>Runner.app<br>Runner.app.dSYM.zip<br>xcodebuild.log |
\ No newline at end of file
diff --git a/content/getting-started/creating-workflows.md b/content/getting-started/creating-workflows.md
new file mode 100644
index 0000000..5f1ab71
--- /dev/null
+++ b/content/getting-started/creating-workflows.md
@@ -0,0 +1,36 @@
++++
+categories = ["Getting started with Codemagic CI/CD"]
+date = "2019-03-26T16:00:30+02:00"
+description = "Manage multiple workflows to fully customize your CI/CD pipeline"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Creating workflows"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 3
+[menu.docs_sidebar]
+weight = 1
+
++++
+Have full control over your CI/CD pipeline with workflows. A workflow is a set of settings that determines how your app is to be built, tested and published. You can create several workflows for building different configurations of your app. For example, you can use workflows to build different branches of the project, separate your debug and release builds, run builds for different projects or flavors in the repository, test your app with different software versions, and so on.
+
+You can create new workflows by duplicating existing ones. In app settings, click **Duplicate workflow** under Workflow settings.
+
+![](/uploads/duplicate_ed.png)
+
+This creates a new workflow with the exact same settings as you had configured for the original workflow. All your environment variables and scripts, build settings and signing files will be duplicated into the new workflow.
+
+![](/uploads/duplicate_created.PNG)
+
+You can then click on the name of the workflow to edit it and configure the workflow settings as you like. Now that you have more than one workflow, you can also delete workflows.
+
+To switch between workflows, click on the workflow name below the app name in app settings.
+
+![](/uploads/select_workflow_ed.png)
+
+{{% notebox %}}
+Note that while your workflows started out as duplicates, they become separate entities once created. Any changes made to one workflow won't affect any of the others.
+{{% /notebox %}}
\ No newline at end of file
diff --git a/content/getting-started/flutter-project-requirements.md b/content/getting-started/flutter-project-requirements.md
new file mode 100644
index 0000000..7c53dbf
--- /dev/null
+++ b/content/getting-started/flutter-project-requirements.md
@@ -0,0 +1,21 @@
++++
+categories = ["Getting started with Codemagic CI/CD"]
+date = "2019-03-10T22:47:33+02:00"
+description = "Make sure your Flutter project is ready for continuous integration (CI) and continuous delivery (CD)"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Flutter project requirements"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 7
+[menu.docs_sidebar]
+weight = 1
+
++++
+To make sure that your app is ready for implementing continuous integration and continuous delivery and for automating the release process with Codemagic, please make sure your project meets the requirements outlined in Flutter documentation:
+
+* [Preparing an Android app for release](https://flutter.io/docs/deployment/android)
+* [Preparing an iOS app for release](https://flutter.io/docs/deployment/ios)
\ No newline at end of file
diff --git a/content/getting-started/getting-started.md b/content/getting-started/getting-started.md
new file mode 100644
index 0000000..89f45c3
--- /dev/null
+++ b/content/getting-started/getting-started.md
@@ -0,0 +1,28 @@
+---
+title: Running the first build
+categories:
+- Getting started with Codemagic CI/CD
+description: Running the first build on Codemagic without any configuration
+thumbnail: ''
+twitter_title: ''
+twitterDescription: ''
+twitter_image: ''
+facebook_title: ''
+facebook_description: ''
+facebook_image: ''
+weight: 2
+
+---
+Upon login, Codemagic will automatically display the list of apps in your repository. Select a Flutter app and start the very first build with preconfigured defaults by clicking **Start your first build**.
+
+{{< figure size="" src="/uploads/2019/07/app_dashboard.PNG" caption="Codemagic Applications page" >}}
+
+Codemagic will then fetch your app sources, create **webhooks** for automatic building and run a debug build of your master branch for both iOS and Android using the latest stable version of Flutter. If you have any **tests** in your project, these will be run too. All the while, you can monitor the build progress step by step right in your browser and expand each step for more details.
+
+{{< figure size="" src="/uploads/2019/07/build_log_publishing.png" caption="Overview of a successful build" >}}
+
+After the build has finished successfully, you will immediately have **artifacts** available for download which you will also receive on the email that was configured for the app repository.
+
+You can then continue to customize how you want Codemagic to build, test and publish your app in **App settings**.
+
+{{< figure size="" src="/uploads/2019/07/app_settings.png" caption="App settings page" >}}
\ No newline at end of file
diff --git a/content/getting-started/multiple-projects-in-one-repository.md b/content/getting-started/multiple-projects-in-one-repository.md
new file mode 100644
index 0000000..72f825f
--- /dev/null
+++ b/content/getting-started/multiple-projects-in-one-repository.md
@@ -0,0 +1,22 @@
++++
+categories = ["Getting started with Codemagic CI/CD"]
+date = "2019-03-21T17:06:39+02:00"
+description = ""
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Multiple projects in one repository"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 5
+[menu.docs_sidebar]
+weight = 1
+
++++
+Codemagic is able to detect multiple projects in a repository provided that each project has its `pubspec.yaml` file.
+
+The first build is run for the project whose `pubspec.yaml` file was found first. After the first build, you can select the project for building from the **Project file path** dropdown in the Build section of app settings.
+
+{{< figure size="medium" src="/uploads/2019/03/multiple_projects_dark.png" caption="Select which project to build" >}}
\ No newline at end of file
diff --git a/content/getting-started/signup.md b/content/getting-started/signup.md
new file mode 100644
index 0000000..e23bfcc
--- /dev/null
+++ b/content/getting-started/signup.md
@@ -0,0 +1,34 @@
++++
+categories = ["Getting started with Codemagic CI/CD"]
+date = "2019-03-10T16:28:20+02:00"
+description = "Sign up for Codemagic CI/CD"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Signup"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 1
+
++++
+You can sign up with your [GitHub](https://github.com/), [GitLab](https://about.gitlab.com/) or [Bitbucket](https://bitbucket.org/) account.
+
+On signup, Codemagic asks for **read/write** permission to access your repository and create webhooks for automatic building. You will need to authorize Codemagic in order to connect your GitHub/GitLab/Bitbucket account to your Codemagic account.
+
+{{% notebox %}}
+
+Please be assured that Codemagic will not store any of your source code or use your data for any other purpose than providing continuous integration and delivery service to you.
+
+{{% /notebox %}}
+
+## Connecting several repository accounts
+
+You can connect several repository accounts (GitHub, GitLab, Bitbucket) with one Codemagic account.
+
+1. Log in to Codemagic with the account you signed up.
+2. Click on your account avatar at the bottom left and open **User settings**.
+3. In the **Integrations** section, click **Connect** next to the account you would like to connect to Codemagic.
+
+Once you have connected another account to your Codemagic account, you can log in to Codemagic with either of these accounts. Email notifications with build status reports will be sent to the email address that’s connected with the repository from which you build.
\ No newline at end of file
diff --git a/content/publishing/.gitkeep b/content/publishing/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/content/publishing/publishing-to-app-store.md b/content/publishing/publishing-to-app-store.md
new file mode 100644
index 0000000..ec050bd
--- /dev/null
+++ b/content/publishing/publishing-to-app-store.md
@@ -0,0 +1,55 @@
++++
+categories = ["Publishing"]
+date = "2019-03-11T15:58:01+02:00"
+description = "Deploy the Flutter app to App Store and TestFlight"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Publishing to App Store"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 1
+[menu.docs_sidebar]
+weight = 1
+
++++
+Codemagic enables you to automatically publish your app to App Store Connect for beta testing with TestFlight or distributing the app to users via App Store. To do so, you must first set up [iOS code signing](https://docs.codemagic.io/code-signing/ios-code-signing/) and then configure publishing to App Store Connect.
+
+## Requirements
+
+Codemagic needs your **Apple ID** and [**app-specific password**](https://support.apple.com/en-us/HT204397) as well as your **app’s unique identifier (app ID)** to perform publishing to App Store Connect on your behalf. Publishing to App Store Connect requires that the app be signed with App Store **distribution certificate**.
+
+In addition, the application must be **App Store ready** for build distribution, meaning that it must have all the correct icons and icon sizes, otherwise App Store Connect will tag the binary as invalid, and you will not be able to distribute it at all.
+
+It is also worth pointing out the necessity for each uploaded binary to have a **different version**, otherwise it will be refused by App Store Connect. See the [Build versioning](https://docs.codemagic.io/building/build-versioning/) article for instructions on incrementing app version with Codemagic.
+
+{{% notebox %}}Please note that you will need to create an **app record** in App Store Connect before you can automate publishing with Codemagic. It is recommended to upload the very first version of the app manually.  {{% /notebox %}}
+
+## Finding your app ID
+
+1. Log in to [App Store Connect](https://appstoreconnect.apple.com/login).
+2. Navigate to **My Apps**.
+3. Select your app and click **App Information**.
+4. You can then see your app’s identifier (confusingly named **Apple ID**) in the **General Information** section.
+
+![Finding your app's unique identifier](/uploads/2019/03/app store connect_app ID.png)
+
+## Setting up publishing to App Store Connect on Codemagic
+
+1. Navigate to the Publish section in app settings.
+2. Click **App Store Connect**.
+3. Enter your **Apple ID** (for login), your **app-specific password** and **App ID** (your app’s unique identifier in App Store Connect).
+4. Click **Save** to finish the setup.
+
+Once you have successfully set up publishing to App Store Connect, Codemagic will automatically distribute the app to App Store Connect every time you build the workflow. Note that you must manually submit the app to App Store in App Store Connect.
+
+## Submitting an app to App Store
+
+To make your iOS app available to the public, it must be submitted for review in App Store Connect.
+
+1. Log in to [App Store Connect](https://appstoreconnect.apple.com/).
+2. Navigate to **My Apps** and identify the app you would like to publish to App Store.
+3. To start the submission process, click **Prepare for Submission**.
+4. Check that you app metadata is up to date, and once everything is ready, click the **Submit for Review** button.
\ No newline at end of file
diff --git a/content/publishing/publishing-to-codemagic-static-pages.md b/content/publishing/publishing-to-codemagic-static-pages.md
new file mode 100644
index 0000000..0beaf07
--- /dev/null
+++ b/content/publishing/publishing-to-codemagic-static-pages.md
@@ -0,0 +1,25 @@
++++
+categories = ["Publishing"]
+description = "Publish each new version of your web app to a custom subdomain."
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Publishing to Codemagic Static Pages"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 3
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can publish your web app to a custom subdomain of `codemagic.app` for easy access.
+
+1. Go to **App settings > Publish > Codemagic Static Pages** to configure publishing to Codemagic Static Pages.  
+   ![](/uploads/2019/05/staticpages_conf.png)
+2. Choose a subdomain name and enter it in the **Web page subdomain** field. By default, we suggest your app name as the subdomain name.
+3. Check **Publish artifacts even if tests fail** to publish the build even when one or more tests fail. Leaving this option unchecked will publish only successful builds that pass the tests, if any.
+4. Click **Save** to finish the setup. On saving, we'll check the availability of the subdomain name and inform you if the name is already taken.
+
+Now each time you run a build of your web app on Codemagic, you’ll see the web app artifact being published to the web page in Codemagic logs and can immediately access the app at the specified URL.
\ No newline at end of file
diff --git a/content/publishing/publishing-to-google-play.md b/content/publishing/publishing-to-google-play.md
new file mode 100644
index 0000000..d2657a4
--- /dev/null
+++ b/content/publishing/publishing-to-google-play.md
@@ -0,0 +1,59 @@
++++
+categories = ["Publishing"]
+date = "2019-03-14T11:29:36+02:00"
+description = "Deploy the Flutter app to Google Play"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Publishing to Google Play"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 2
+[menu.docs_sidebar]
+weight = 1
+
++++
+Codemagic enables you to automatically publish your app to the **internal**, **alpha**, **beta** and **production** tracks on Google Play. To do so, you must first [set up Android code signing](https://docs.codemagic.io/code-signing/android-code-signing/ "Android code signing") and then configure publishing to Google Play.
+
+## Requirements
+
+You will need a **service account in Google Play Console** to obtain the **JSON credentials file**. See how to do that [here.](#setting-up-a-service-account-in-google-play-console) In addition, you must build the app in **release mode** and set up **Android code signing**.
+
+Before releasing the app to Google Play, make sure that it meets the [Google Play’s best practices guidelines](https://developer.android.com/distribute/best-practices/launch/).
+
+{{% notebox %}} Note that if you haven’t published your app to Google Play yet, you must create an entry for your app in Google Play Console and manually upload the very first version of the app before you can automate publishing using Codemagic. In addition, each uploaded binary must have a different version, see how to automatically [increment build version](https://docs.codemagic.io/building/build-versioning/ "Build versioning") on Codemagic. {{% /notebox %}}
+
+## Setting up a service account in Google Play Console
+
+1. In Google Play Console, navigate to Settings > API access.
+2. Click on the **Create Service Account** button and follow the link to Google API Console.
+3. In Google API Console, click on the **Create Service Account** button.
+4. Fill in **Service account name** and choose Service Accounts > Service Account User from the Role dropdown. Make sure to check **Furnish a new private key** and select **JSON** as key type.
+   ![](/uploads/2019/03/create service account 2018_marked.png)
+5. Click **Create** and download the created JSON credentials file. You will need this file to set up publishing to Google Play on Codemagic.
+6. Back in Google Play Console, click **Done** to close the dialog.
+7. Find the new service account and click **Grant Access**.
+8. Select **Release manager** from the Role dropdown and click **Add user**.
+
+## Setting up publishing to Google Play on Codemagic
+
+Once you configure publishing to Google Play, Codemagic will automatically distribute the app to Google Play every time you build the workflow.
+
+{{% notebox %}}
+The very first version of the app must be added to Google Play manually. You can download the **app_release.apk** from the build artifacts.
+{{% /notebox %}}
+
+1. Navigate to the Publish section in app settings.
+2. Click **Google Play** to expand the options.
+3. Upload your credentials JSON file.
+4. Select a **track** for publishing.
+   * Internal — publish for internal testing and QA
+   * Alpha — publish for testing with a small group of trusted users
+   * Beta — publish for testing to a wider set of users
+   * Production — release the app to production
+5. If you want to publish the APK even when one or more tests fail, mark the **Publish even if tests fail** checkbox.
+6. Click **Save** to finish the setup.
+
+{{< figure size="medium" src="/uploads/2019/03/google play.png" caption="" >}}
\ No newline at end of file
diff --git a/content/testing/.gitkeep b/content/testing/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/content/testing/beta-testing-with-testmagic.md b/content/testing/beta-testing-with-testmagic.md
new file mode 100644
index 0000000..5d1b8b6
--- /dev/null
+++ b/content/testing/beta-testing-with-testmagic.md
@@ -0,0 +1,27 @@
++++
+categories = ["Testing"]
+description = "View, test and distribute your Codemagic builds with Testmagic"
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Beta testing with Testmagic"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 5
+[menu.docs_sidebar]
+weight = 1
+
++++
+Codemagic is seamlessly integrated with [Testmagic](https://testmagic.io/), a simple mobile app for viewing, testing and distributing your Codemagic builds. You can download it from [Google Play](https://play.google.com/store/apps/details?id=io.nevercode.testmagic&hl=en) for Android and request the app download link for iOS via the #testmagic channel in our [Slack community](https://join.slack.com/t/flutterci/shared_invite/enQtNDcwODIzMjM4MzI2LWJhNWRkMjZlMjk1YzgzNGUwZjQ5NmUxYTI3YjQzODdlMGU1Nzg5OWQ3NGM3NDdhNGIyNjY1YTUzZTgyNTJkMTc). 
+
+With Testmagic, you can:
+
+* Instantly get notified when a build is finished on Codemagic
+* Download app binaries on your device
+* Report feedback and screenshots about the build back to Codemagic
+* View the reported feedback in the build overview on Codemagic
+* Distribute app binaries by sharing a download link
+
+To get started with Testmagic, see the step-by-step guide on our [blog](https://blog.codemagic.io/getting-started-with-testmagic/ "Getting started with Testmagic").
\ No newline at end of file
diff --git a/content/testing/running-automated-tests.md b/content/testing/running-automated-tests.md
new file mode 100644
index 0000000..ac38f18
--- /dev/null
+++ b/content/testing/running-automated-tests.md
@@ -0,0 +1,60 @@
++++
+categories = ["Testing"]
+description = "Automatically run unit, widget and integration tests every time you build your Flutter app."
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Running automated tests"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 1
+[menu.docs_sidebar]
+weight = 1
+
++++
+Codemagic supports running **unit**, **integration** and **widget** tests. When testing is enabled, tests are run automatically every time your project is built. You can configure the test settings in **App settings > Test**.
+
+### Detecting tests
+
+During the first build of your app, Codemagic will scan the content of the repository and automatically detect the tests according to the project structure. The expected locations of the tests are as follows:
+
+Unit and widget tests: `project_root/test`
+
+Integration tests (Flutter Driver tests): `project_root/test_driver`
+
+{{% notebox %}}
+
+If your Flutter project is in a subdirectory of the repository, Codemagic cannot detect your tests automatically unless you add at least one test file in the `project_root/test` or `project_root/test_driver` folder.
+
+{{% /notebox %}}
+
+### Specifying the test target
+
+In App settings > Test, you will see the **Flutter test target** and **Flutter drive target** fields displayed if the respective tests are detected. You can specify an exact target to run a specific test.
+
+![](/uploads/2019/04/doc_test_target.PNG)
+
+### Selecting simulator or emulator
+
+By default, Codemagic runs your Flutter Driver tests on iOS simulator. You can also run Flutter Driver tests on Android emulator by selecting the respective option in the UI.
+
+![](/uploads/2019/04/doc_emulator_simulator.PNG)
+
+{{% notebox %}}
+
+**Tip**: You can set up separate [workflows](https://4jqkxhrybmvg1a.preview.forestry.io/docs/getting-started/creating-workflows/ "Creating workflows") to run tests both on iOS and Android.
+
+{{% /notebox %}}
+
+### Enabling or disabling tests
+
+By default, testing is enabled on Codemagic. You can enable or disable running tests by checking or unchecking the respective option in App settings > Test:
+
+* Enable Flutter test
+* Enable Flutter Driver
+
+### Stop build if tests fail
+
+At the bottom of the Test section, you can select the **Stop build if tests fail** option to stop the build immediately when any of the tests fail. As the tests are run before building the iOS or Android app, you can get the result of the build faster. Builds stopped when tests fail will be shown as "failed".
\ No newline at end of file
diff --git a/content/testing/running-tests-only.md b/content/testing/running-tests-only.md
new file mode 100644
index 0000000..84a943e
--- /dev/null
+++ b/content/testing/running-tests-only.md
@@ -0,0 +1,21 @@
++++
+categories = ["Testing"]
+description = "Run tests only without building the app."
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Running tests only"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 4
+[menu.docs_sidebar]
+weight = 1
+
++++
+You can have a workflow to run tests without building the app. In App settings > Build > Build for platforms, select **Run tests only**. Codemagic will then build the workflow until the testing step and skip building for Android or iOS.
+
+![](/uploads/2019/05/doc_run_tests_only_new.PNG)
+
+If tests fail, the status of the build will be "failed" and you'll receive an email about failing tests. If you have publishing to Slack configured, you'll receive notifications on build status updates.
\ No newline at end of file
diff --git a/content/testing/static-code-analysis.md b/content/testing/static-code-analysis.md
new file mode 100644
index 0000000..39846a3
--- /dev/null
+++ b/content/testing/static-code-analysis.md
@@ -0,0 +1,25 @@
++++
+categories = ["Testing"]
+description = "Test your code with flutter analyze."
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Static code analysis"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 2
+[menu.docs_sidebar]
+weight = 1
+
++++
+Test your code with `flutter analyze` to find possible mistakes. You can read more about this feature in [Dart documentation](https://dart.dev/guides/language/analysis-options). By default, static code analysis is disabled and has to be enabled in **App settings > Test** by checking the **Enable Flutter analyzer** option.
+
+{{< figure size="medium" src="/uploads/2019/05/flutter_analyze.PNG" caption="" >}}
+
+To run `flutter analyze`, Codemagic specifies the `analyze` command in the **Flutter analyze arguments** field. You can pass additional arguments to customize static code analysis. For example, adding `--write=analyzer-output.txt` prints the results of static code analysis into a text file. If you check **Stop build if tests fail**, the build will fail in the case any issues are detected during static code analysis.
+
+When enabled, `flutter analyze` will be run with each build. You can see the results and the logs of the analysis under the **Running tests** step in build overview. 
+
+{{< figure size="medium" src="/uploads/2019/05/flutter_analyze_output.png" caption="" >}}
\ No newline at end of file
diff --git a/content/testing/testing-widgets.md b/content/testing/testing-widgets.md
new file mode 100644
index 0000000..ab1624c
--- /dev/null
+++ b/content/testing/testing-widgets.md
@@ -0,0 +1,26 @@
++++
+categories = ["Testing"]
+description = "Instead of building the entire app, you can run tests on your widgets only."
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Testing widgets"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 3
+[menu.docs_sidebar]
+weight = 1
+
++++
+Instead of building the entire app, you can separately run tests on your widgets.
+
+To test widgets, the following is required:
+
+* A Flutter project without `ios` and `android` folders.
+* A `test` folder containing at least one test.
+
+Your widget repository is automatically detected just as any other repository, but there are differences in the build process. Technically, Codemagic will only fetch the sources, install the dependencies and run the tests. If there are failing tests, you will receive the test report on your email.
+
+After the first build, you can change the Flutter version (by default, it’s `channel Stable`) and configure email publishing and Slack for receiving status reports.
\ No newline at end of file
diff --git a/content/troubleshooting/.gitkeep b/content/troubleshooting/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/content/troubleshooting/accessing-builder-machine-via-ssh.md b/content/troubleshooting/accessing-builder-machine-via-ssh.md
new file mode 100644
index 0000000..11a9290
--- /dev/null
+++ b/content/troubleshooting/accessing-builder-machine-via-ssh.md
@@ -0,0 +1,57 @@
++++
+categories = ["Troubleshooting"]
+description = "Establish SSH access to the builder virtual machine to inspect your build.  "
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Accessing virtual machine via SSH"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 1
+[menu.docs_sidebar]
+weight = 1
+
++++
+Establishing SSH access to the virtual machine running the build is a secure way for inspecting your build during runtime and for a short time after the build has finished. Building in SSH mode gives you the following advantages:
+
+* See the processes running during the CI job
+* Reproduce all commands run during the build
+* Debug your custom scripts
+
+## How SSH access works
+
+All virtual machines are located within the private network. In order to allow users to connect to the virtual machine, Codemagic creates a temporary SSH tunnel through the public gateway. A unique SSH key is generated before each build which is valid for the duration of the build. The SSH tunnel and the unique key are revoked after the build is finished and cannot be reused.
+
+## Setting up SSH connection to the virtual machine
+
+Establishing an SSH connection to the virtual machine is possible only for manually triggered builds. Setting it up requires both enabling the SSH mode in UI and running an automatically generated script in your terminal.
+
+1. In your app settings, click **Start new build**.
+2. In the **Specify build configuration** popup, check **Enable SSH access** and start the build.
+   {{< figure size="medium" src="/uploads/2019/07/enable_ssh_access.PNG" caption="" >}}
+3. When the build has started, you will shortly see additional instructions for establishing SSH access. Run the automatically generated script in the terminal before the build finishes to establish an SSH connection to the machine running the build.
+	{{< figure size="medium" src="/uploads/2019/07/ssh_access_script.PNG" caption="" >}}
+
+If you don't run the script before the build finishes, the unique SSH key expires and can't be used anymore. A new script will be generated every time you run the build, so previous scripts cannot be reused.
+
+{{% notebox %}}
+Note that the script for establishing SSH connection works natively on Linux and MacOS, but requires additional software like Git-bash on Windows.
+{{% /notebox %}}
+
+## SSH session time limit
+
+The SSH session remains active for a maximum of 20 minutes after all build steps are completed or until the maximum build duration limit is reached, whichever comes first. If you log out from the virtual machine during an active SSH session, the build is finished automatically and you cannot access the builder via SSH for this session. You would have to run a new build to establish a new SSH connection.
+
+{{% notebox %}}
+If you have finished debugging the build, don't forget to end the session to avoid losing build time.
+{{% /notebox %}}
+
+## Debugging via SSH
+
+You can use the SSH session to reproduce all commands run during the build, rerun the build with a different configuration or even set up platform-specific files, e.g. CocoaPods.
+
+To access the clone of your project on the VM, run `cd $FCI_BUILD_DIR` in the terminal. The command `printenv` prints all the environment variables exported during the build. You can see some of Codemagic read-only environment variables explained [here](https://docs.codemagic.io/building/environment-variables/#codemagic-read-only-environment-variables).
+
+Note that the `sudo` command is available so you can execute all commands with root privileges.
\ No newline at end of file
diff --git a/content/troubleshooting/codemagic-status-page.md b/content/troubleshooting/codemagic-status-page.md
new file mode 100644
index 0000000..f5d85e2
--- /dev/null
+++ b/content/troubleshooting/codemagic-status-page.md
@@ -0,0 +1,19 @@
++++
+categories = ["Troubleshooting"]
+description = "Get latest information about the status of Codemagic CI/CD."
+facebook_description = ""
+facebook_image = "/uploads/2019/01/default-thumb.png"
+facebook_title = ""
+thumbnail = ""
+title = "Codemagic status page"
+twitterDescription = ""
+twitter_image = "/uploads/2019/02/twitter.png"
+twitter_title = ""
+weight = 2
+[menu.docs_sidebar]
+weight = 1
+
++++
+We post information about the service status, including maintenances and service disruptions, on Twitter [@CodemagicStatus](https://twitter.com/CodemagicStatus) as well as share information in our [Slack community](http://bit.ly/cm-slack).
+
+Please use these channels to report issues with the availability of the service.
\ No newline at end of file
diff --git a/content/uploads/2019/01/default-thumb.png b/content/uploads/2019/01/default-thumb.png
new file mode 100644
index 0000000..4e78019
Binary files /dev/null and b/content/uploads/2019/01/default-thumb.png differ
diff --git a/content/uploads/2019/02/twitter.png b/content/uploads/2019/02/twitter.png
new file mode 100644
index 0000000..03795e3
Binary files /dev/null and b/content/uploads/2019/02/twitter.png differ
diff --git a/content/uploads/2019/03/CM-codesigning.jpg b/content/uploads/2019/03/CM-codesigning.jpg
new file mode 100644
index 0000000..2f971d2
Binary files /dev/null and b/content/uploads/2019/03/CM-codesigning.jpg differ
diff --git a/content/uploads/2019/03/add_app_light-1.PNG b/content/uploads/2019/03/add_app_light-1.PNG
new file mode 100644
index 0000000..3c33efb
Binary files /dev/null and b/content/uploads/2019/03/add_app_light-1.PNG differ
diff --git a/content/uploads/2019/03/app store connect_app ID.png b/content/uploads/2019/03/app store connect_app ID.png
new file mode 100644
index 0000000..b84c9c3
Binary files /dev/null and b/content/uploads/2019/03/app store connect_app ID.png differ
diff --git a/content/uploads/2019/03/app_using_ssh_authentication.PNG b/content/uploads/2019/03/app_using_ssh_authentication.PNG
new file mode 100644
index 0000000..23238a6
Binary files /dev/null and b/content/uploads/2019/03/app_using_ssh_authentication.PNG differ
diff --git a/content/uploads/2019/03/automatic_code_signing2.PNG b/content/uploads/2019/03/automatic_code_signing2.PNG
new file mode 100644
index 0000000..6b0ae22
Binary files /dev/null and b/content/uploads/2019/03/automatic_code_signing2.PNG differ
diff --git a/content/uploads/2019/03/code signing.PNG b/content/uploads/2019/03/code signing.PNG
new file mode 100644
index 0000000..0ca96bb
Binary files /dev/null and b/content/uploads/2019/03/code signing.PNG differ
diff --git a/content/uploads/2019/03/google play.png b/content/uploads/2019/03/google play.png
new file mode 100644
index 0000000..7b85fa8
Binary files /dev/null and b/content/uploads/2019/03/google play.png differ
diff --git a/content/uploads/2019/03/keychain_certificate.PNG b/content/uploads/2019/03/keychain_certificate.PNG
new file mode 100644
index 0000000..d1a7a5c
Binary files /dev/null and b/content/uploads/2019/03/keychain_certificate.PNG differ
diff --git a/content/uploads/2019/03/manual_code_signing.PNG b/content/uploads/2019/03/manual_code_signing.PNG
new file mode 100644
index 0000000..b543544
Binary files /dev/null and b/content/uploads/2019/03/manual_code_signing.PNG differ
diff --git a/content/uploads/2019/03/multiple_projects_dark.png b/content/uploads/2019/03/multiple_projects_dark.png
new file mode 100644
index 0000000..2626df0
Binary files /dev/null and b/content/uploads/2019/03/multiple_projects_dark.png differ
diff --git a/content/uploads/2019/04/caching_enabled.PNG b/content/uploads/2019/04/caching_enabled.PNG
new file mode 100644
index 0000000..4b4a90f
Binary files /dev/null and b/content/uploads/2019/04/caching_enabled.PNG differ
diff --git a/content/uploads/2019/04/doc_emulator_simulator.PNG b/content/uploads/2019/04/doc_emulator_simulator.PNG
new file mode 100644
index 0000000..c45c705
Binary files /dev/null and b/content/uploads/2019/04/doc_emulator_simulator.PNG differ
diff --git a/content/uploads/2019/04/doc_test_target.PNG b/content/uploads/2019/04/doc_test_target.PNG
new file mode 100644
index 0000000..7f75859
Binary files /dev/null and b/content/uploads/2019/04/doc_test_target.PNG differ
diff --git a/content/uploads/2019/05/build_settings.PNG b/content/uploads/2019/05/build_settings.PNG
new file mode 100644
index 0000000..a930bbb
Binary files /dev/null and b/content/uploads/2019/05/build_settings.PNG differ
diff --git a/content/uploads/2019/05/doc_run_tests_only_new.PNG b/content/uploads/2019/05/doc_run_tests_only_new.PNG
new file mode 100644
index 0000000..9f6488f
Binary files /dev/null and b/content/uploads/2019/05/doc_run_tests_only_new.PNG differ
diff --git a/content/uploads/2019/05/flutter_analyze.PNG b/content/uploads/2019/05/flutter_analyze.PNG
new file mode 100644
index 0000000..5319b30
Binary files /dev/null and b/content/uploads/2019/05/flutter_analyze.PNG differ
diff --git a/content/uploads/2019/05/flutter_analyze_output.png b/content/uploads/2019/05/flutter_analyze_output.png
new file mode 100644
index 0000000..801b3a2
Binary files /dev/null and b/content/uploads/2019/05/flutter_analyze_output.png differ
diff --git a/content/uploads/2019/05/staticpages_conf.png b/content/uploads/2019/05/staticpages_conf.png
new file mode 100644
index 0000000..59754a0
Binary files /dev/null and b/content/uploads/2019/05/staticpages_conf.png differ
diff --git a/content/uploads/2019/07/app_dashboard.PNG b/content/uploads/2019/07/app_dashboard.PNG
new file mode 100644
index 0000000..dcb2a38
Binary files /dev/null and b/content/uploads/2019/07/app_dashboard.PNG differ
diff --git a/content/uploads/2019/07/app_settings.png b/content/uploads/2019/07/app_settings.png
new file mode 100644
index 0000000..87789ec
Binary files /dev/null and b/content/uploads/2019/07/app_settings.png differ
diff --git a/content/uploads/2019/07/build_log_publishing.png b/content/uploads/2019/07/build_log_publishing.png
new file mode 100644
index 0000000..3747317
Binary files /dev/null and b/content/uploads/2019/07/build_log_publishing.png differ
diff --git a/content/uploads/2019/07/enable_ssh_access.PNG b/content/uploads/2019/07/enable_ssh_access.PNG
new file mode 100644
index 0000000..12ffb67
Binary files /dev/null and b/content/uploads/2019/07/enable_ssh_access.PNG differ
diff --git a/content/uploads/2019/07/ssh_access_script.PNG b/content/uploads/2019/07/ssh_access_script.PNG
new file mode 100644
index 0000000..d559dd4
Binary files /dev/null and b/content/uploads/2019/07/ssh_access_script.PNG differ
diff --git a/content/uploads/androi_app_bundles.PNG b/content/uploads/androi_app_bundles.PNG
new file mode 100644
index 0000000..84cf23f
Binary files /dev/null and b/content/uploads/androi_app_bundles.PNG differ
diff --git a/content/uploads/automatic build triggering.PNG b/content/uploads/automatic build triggering.PNG
new file mode 100644
index 0000000..9c1cacb
Binary files /dev/null and b/content/uploads/automatic build triggering.PNG differ
diff --git a/content/uploads/duplicate_created.PNG b/content/uploads/duplicate_created.PNG
new file mode 100644
index 0000000..b17911a
Binary files /dev/null and b/content/uploads/duplicate_created.PNG differ
diff --git a/content/uploads/duplicate_ed.png b/content/uploads/duplicate_ed.png
new file mode 100644
index 0000000..20ebfd9
Binary files /dev/null and b/content/uploads/duplicate_ed.png differ
diff --git a/content/uploads/env_vars.PNG b/content/uploads/env_vars.PNG
new file mode 100644
index 0000000..e4599ca
Binary files /dev/null and b/content/uploads/env_vars.PNG differ
diff --git a/content/uploads/select_workflow_ed.png b/content/uploads/select_workflow_ed.png
new file mode 100644
index 0000000..79edbfc
Binary files /dev/null and b/content/uploads/select_workflow_ed.png differ
diff --git a/content/uploads/team_selection_edited.png b/content/uploads/team_selection_edited.png
new file mode 100644
index 0000000..8590c43
Binary files /dev/null and b/content/uploads/team_selection_edited.png differ
diff --git a/content/uploads/tracked branches.PNG b/content/uploads/tracked branches.PNG
new file mode 100644
index 0000000..f11681e
Binary files /dev/null and b/content/uploads/tracked branches.PNG differ
diff --git a/deploy.sh b/deploy.sh
new file mode 100755
index 0000000..b1753b9
--- /dev/null
+++ b/deploy.sh
@@ -0,0 +1,14 @@
+#! /bin/sh
+
+set -ex
+
+cd "${0%/*}"
+
+# requires env variables AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, CF_DISTRIBUTION_ID
+
+s3deploy \
+  -bucket docs.codemagic.io \
+  -public-access \
+  -region us-east-1 \
+  -source public \
+  -distribution-id "$CF_DISTRIBUTION_ID"
diff --git a/layouts/_default/404.ace b/layouts/_default/404.ace
new file mode 100644
index 0000000..46c631e
--- /dev/null
+++ b/layouts/_default/404.ace
@@ -0,0 +1,2 @@
+h1 404
+{{ .Content }}
\ No newline at end of file
diff --git a/layouts/_default/baseof.ace b/layouts/_default/baseof.ace
new file mode 100644
index 0000000..fe96461
--- /dev/null
+++ b/layouts/_default/baseof.ace
@@ -0,0 +1,28 @@
+= doctype html
+html
+  head
+    {{ .Render "head" }}
+    body#article-page.page
+      #content-wrap
+        #search-results
+        aside#sidebar
+          #menu-toggle
+            .bar.top
+            .bar.middle
+            .bar.bottom
+          #logo
+            a href={{ site.Home.RelPermalink }}
+              {{ $logo := resources.Get "media/logo.svg" | minify }}
+              {{ $logo.Content | safeHTML }}
+              span#logo-label {{ site.Param "headerLinkTitle" }}
+
+          div.search.search--header
+            input.search__input type="text" placeholder="Search"
+            .search__icon.search__icon--search.fas.fa-search
+            .search__icon.search__icon--clear.fas.fa-times
+          {{ partial "sidebar" . }}
+        #main-content
+          main
+            = yield main
+      footer#footer
+    {{ partial "footer" . }}
diff --git a/layouts/_default/head.ace b/layouts/_default/head.ace
new file mode 100644
index 0000000..b9ff113
--- /dev/null
+++ b/layouts/_default/head.ace
@@ -0,0 +1,11 @@
+{{ partial "common-head" . }}
+
+{{ $scssOptions := (dict "outputStyle" "compressed" "enableSourceMap" true) }}
+{{ $mainStyles := resources.Get "scss/main.scss" | toCSS $scssOptions | resources.ExecuteAsTemplate "" . | fingerprint }}
+link rel="stylesheet" href={{ $mainStyles.RelPermalink }} integrity={{ $mainStyles.Data.Integrity }}
+{{ $fontStyles := resources.Get "fonts/proximanova/proximanova.scss" | toCSS $scssOptions | resources.ExecuteAsTemplate "" . | fingerprint }}
+link rel="stylesheet" href={{ $fontStyles.RelPermalink }} integrity={{ $fontStyles.Data.Integrity }}
+
+link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous"
+
+script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"
diff --git a/layouts/_default/index.ace b/layouts/_default/index.ace
new file mode 100644
index 0000000..8695444
--- /dev/null
+++ b/layouts/_default/index.ace
@@ -0,0 +1,3 @@
+= content main
+  h1 {{ .Title }}
+  {{ .Content }}
diff --git a/layouts/_default/index.json b/layouts/_default/index.json
new file mode 100644
index 0000000..64d5b2c
--- /dev/null
+++ b/layouts/_default/index.json
@@ -0,0 +1,12 @@
+[{{ range $pageIndex, $ := where .Site.Pages "Kind" "page" }}
+  {{- if $pageIndex }}, {{ end -}}
+  {
+    {{- with .Title }}
+    "title": "{{ htmlEscape . }}",
+    {{- end }}
+    {{- with .Plain }}
+    "content": {{ jsonify . }},
+    {{- end }}
+    "uri": "{{ .RelPermalink }}"
+  }
+  {{- end }}]
diff --git a/layouts/_default/list.ace b/layouts/_default/list.ace
new file mode 100644
index 0000000..ced1401
--- /dev/null
+++ b/layouts/_default/list.ace
@@ -0,0 +1,11 @@
+= content main
+  .container
+    {{ .Content }}
+  
+  {{ $descendants := slice }}
+  {{ range site.RegularPages }}
+    {{ if .IsDescendant $ }}
+      {{ $descendants = $descendants | append . }}
+    {{ end }}
+  {{ end }}
+
diff --git a/layouts/_default/single.ace b/layouts/_default/single.ace
new file mode 100644
index 0000000..78a5ca2
--- /dev/null
+++ b/layouts/_default/single.ace
@@ -0,0 +1,8 @@
+= content main
+  h1 {{ .Title }}
+  {{ partial "content" .Content }}
+  {{ with .TableOfContents }}
+    aside#toc
+      .heading Table of contents
+      {{ . }}
+  {{ end }}
diff --git a/layouts/partials/common-head.ace b/layouts/partials/common-head.ace
new file mode 100644
index 0000000..b6685dc
--- /dev/null
+++ b/layouts/partials/common-head.ace
@@ -0,0 +1,46 @@
+meta charset=utf-8
+
+meta name=viewport content="width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes"
+meta http-equiv="X-UA-Compatible" content="IE=edge"
+
+{{ $icon := resources.Get "media/favicon.ico" | fingerprint }}
+link rel=icon type="image/x-icon" href={{ $icon.RelPermalink }}
+
+{{ with .Description }}
+  meta name=description content={{ . }}
+{{ end }}
+title {{ with .Title }}{{ . }}{{ end }}{{ if and .Title site.Title (not .IsHome) }} - {{ site.Title }}{{ end }}
+{{ with .Param "canonical" | default .Permalink }}
+  link rel=canonical href={{ . }}
+{{ end }}
+
+{{ range .AlternativeOutputFormats -}}
+  {{ printf `<link rel="%s" type="%s" href="%s" title="%s" />` .Rel .MediaType.Type .RelPermalink site.Title | safeHTML }}
+{{ end -}}
+
+{{ partial "opengraph" . }}
+{{ partial "twitter_cards" . }}
+
+
+= javascript
+  !(function(f, b, e, v, n, t, s) {
+    if (f.fbq) return
+    n = f.fbq = function() {
+        n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
+    }
+    if (!f._fbq) f._fbq = n
+    n.push = n
+    n.loaded = !0
+    n.version = '2.0'
+    n.queue = []
+    t = b.createElement(e)
+    t.async = !0
+    t.src = v
+    s = b.getElementsByTagName(e)[0]
+    s.parentNode.insertBefore(t, s)
+  })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js')
+  fbq('init', '2000132876774057')
+  fbq('track', 'PageView')
+    
+noscript
+  img height="1" width="1" src="https://www.facebook.com/tr?id=2000132876774057&ev=PageView&noscript=1"
\ No newline at end of file
diff --git a/layouts/partials/content.html b/layouts/partials/content.html
new file mode 100644
index 0000000..7868613
--- /dev/null
+++ b/layouts/partials/content.html
@@ -0,0 +1,22 @@
+
+{{ $in := "" }}
+{{ $out := "" }}
+{{ $content := . }}
+
+<!-- prefix all absolute (starting with slash) with language prefix (if applicable) -->
+{{ $urlPrefix := "/" | relLangURL }}
+{{ $in = "<img ([^>]*) ?src=\"/([^\"]+)\" ?([^/>]*) */?>" }}
+{{ $out = $urlPrefix | printf "<img $1 src=\"%s$2\" $3 />" }}
+{{ $content = $content | replaceRE $in $out | safeHTML }}
+
+<!-- replace all single images paragraph in content with figures, using alt for caption -->
+{{ $in = "<p><img ?([^>]*?) ?src=\"([^\"]+)\" ?([^>]*?) ?alt=\"([^\"]+)\" ?([^/>]*?) */?></p>" }}
+{{ $out = "<figure><img $1 src=\"$2\" $3 alt=\"$4\" $5 /><figcaption>$4</figcaption></figure>" }}
+{{ $content = $content | replaceRE $in $out | safeHTML }}
+
+<!-- replace all single paragraph images in content with figures-->
+{{ $in = "<p><img ?([^>]*?) ?src=\"([^\"]+)\" ?([^/>]*) */?></p>" }}
+{{ $out = "<figure><img $1 src=\"$2\" $3 /></figure>" }}
+{{ $content = $content | replaceRE $in $out | safeHTML }}
+
+{{ $content }}
diff --git a/layouts/partials/footer.ace b/layouts/partials/footer.ace
new file mode 100644
index 0000000..1dc4158
--- /dev/null
+++ b/layouts/partials/footer.ace
@@ -0,0 +1,4 @@
+{{ $script := resources.Get "js/main.js" | fingerprint }}
+script src={{ $script.RelPermalink }} integrity={{ $script.Data.Integrity }}
+
+{{ partial "search" . }}
diff --git a/layouts/partials/header.ace b/layouts/partials/header.ace
new file mode 100644
index 0000000..0c6207f
--- /dev/null
+++ b/layouts/partials/header.ace
@@ -0,0 +1,22 @@
+
+header.site-header.grey-box
+  nav.global-nav
+    ul.list-unstyled.list-vertical
+      {{ range .Sites }}
+        li
+          a href={{ .Home.Permalink }}
+            {{ if eq .Language site.Language }}
+              strong {{ .Params.Name }}
+            {{ else }}
+              {{ .Params.Name }}
+            {{ end }}
+      {{ end }}
+
+  .search
+    input#search type=text placeholder=search
+    ul.list-unstyled#search-results
+
+  {{ with site.Title }}
+    a.site-header--title href={{ site.Home.RelPermalink }}
+      h1 {{ . }}
+  {{ end }}
diff --git a/layouts/partials/opengraph.ace b/layouts/partials/opengraph.ace
new file mode 100644
index 0000000..88b4bfa
--- /dev/null
+++ b/layouts/partials/opengraph.ace
@@ -0,0 +1,79 @@
+{{ with .Param "facebook_title" | default .Title }}
+  meta property=og:title content={{ . }}
+{{ end }}
+
+{{ with .Param "facebook_description" | default .Description | default (site.Param "description") }}
+  meta property=og:description content={{ . }}
+{{ end }}
+
+meta property="og:type" content="{{ if .IsPage }}article{{ else }}website{{ end }}"
+meta property="og:url" content="{{ .Permalink }}"
+{{ with .Param "facebook_image" | default (site.Param "defaultFacebookImage") }}
+  meta property="og:image" content="{{ . | absURL }}"
+{{ end }}
+
+{{ if .IsPage }}
+  {{ if not .PublishDate.IsZero }}
+    meta property=article:published_time content={{ .PublishDate.Format "2006-01-02T15:04:05-07:00" | safeHTML }}
+  {{ else if not .Date.IsZero }}
+    meta property=article:published_time content={{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}
+  {{ end }}
+  
+  {{ if not .Lastmod.IsZero }}
+    meta property=article:modified_time content={{ .Lastmod.Format "2006-01-02T15:04:05-07:00" | safeHTML }}
+  {{ end }}
+{{ else if not .Date.IsZero }}
+  meta property=og:updated_time content={{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}
+{{ end }}
+
+{{ with .Params.audio }}
+  meta property=og:audio content={{ . | absURL }}
+{{ end }}
+{{ with site.Param "locale" }}
+  meta property=og:locale content={{ . }}
+{{ end }}
+{{ with site.Param "title" }}
+  meta property=og:site_name content={{ . }}
+{{ end }}
+{{ with .Params.videos }}
+  {{ range . }}
+    meta property="og:video" content="{{ . | absURL }}"
+  {{ end }}
+{{ end }}
+
+/ If it is part of a series, link to related articles
+{{ $permalink := .Permalink }}
+{{ $siteSeries := site.Taxonomies.series }}
+{{ with .Params.series }}
+  {{ range $name := . }}
+    {{ $series := index $siteSeries $name }}
+    {{ range $page := first 6 $series.Pages }}
+      {{ if ne $page.Permalink $permalink }}
+        meta property="og:see_also" content="{{ $page.Permalink }}"
+      {{ end }}
+    {{ end }}
+  {{ end }}
+{{ end }}
+
+{{ if .IsPage }}
+
+  {{ with site.Param "facebookAuthorHandle" }}
+    meta property="article:publisher" content="https://www.facebook.com/{{ . }}"
+  {{ end }}
+
+  {{ with .Param "categories" }}
+    meta property="article:section" content={{ index . 0 }}
+  {{ end }}
+
+  {{ with .Params.tags }}
+    {{ range first 6 . }}
+      meta property="article:tag" content="{{ . }}"
+    {{ end }}
+  {{ end }}
+
+{{ end }}
+
+/ Facebook Page Admin ID for Domain Insights
+{{ with site.Social.facebook_admin }}
+  meta property="fb:admins" content="{{ . }}"
+{{ end }}
\ No newline at end of file
diff --git a/layouts/partials/search.ace b/layouts/partials/search.ace
new file mode 100644
index 0000000..2ae4d6d
--- /dev/null
+++ b/layouts/partials/search.ace
@@ -0,0 +1,9 @@
+script src="https://cdnjs.cloudflare.com/ajax/libs/lunr.js/2.3.6/lunr.min.js" integrity="sha384-YdPYeaxM24+H15hfctQFgRYpwaquoibf+6a8fpgW6ZW6urvEZaYICEzGPAql4qQm" crossorigin="anonymous"
+script src="https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.min.js" integrity="sha384-iqnguDoMujGknA4B5Jk7pbSn7sb7M8Tc0zVsTNQXm629Xx00jGEpD9TsZXbfNjKO" crossorigin="anonymous"
+
+{{ $script := resources.Get "js/search.js" | minify | fingerprint }}
+script src={{ $script.RelPermalink }} integrity={{ $script.Data.Integrity }}
+
+{{ $index := (site.Home.OutputFormats.Get "json").RelPermalink }}
+= javascript
+  window.initSearch('{{ $index }}')
diff --git a/layouts/partials/section-header.ace b/layouts/partials/section-header.ace
new file mode 100644
index 0000000..bee7890
--- /dev/null
+++ b/layouts/partials/section-header.ace
@@ -0,0 +1,4 @@
+header.grey-box
+  {{ with .Title }}
+    h2 {{ . }}
+  {{ end }}
\ No newline at end of file
diff --git a/layouts/partials/sidebar.ace b/layouts/partials/sidebar.ace
new file mode 100644
index 0000000..bd12752
--- /dev/null
+++ b/layouts/partials/sidebar.ace
@@ -0,0 +1,23 @@
+nav#docs-menu
+  .search.search--sidebar
+    input.search__input type="text" placeholder="Search"
+    .search__icon.search__icon--search.fas.fa-search
+    .search__icon.search__icon--clear.fas.fa-times
+  {{ range $name := site.Home.Param "category_names" }}
+    {{ $categoryArticles := where site.Pages ".Params.categories" "intersect" (slice $name) }}
+
+    {{ with $categoryArticles }}
+      {{ $isInCategory := in $.Params.categories $name }}
+      li class={{ if $isInCategory }}open{{end}}
+        {{ $title := $name }}
+        {{ with $data := index (where (site.Home.Param "category_values") "name" $name) 0 }}
+          {{ $title := $data.title }}
+        {{ end }}
+        .category-name {{ $title }}
+        .category-posts
+          {{ range $categoryArticles }}
+            {{ $isActivePage := eq $.RelPermalink .RelPermalink }}
+            a class={{ if $isActivePage }}active{{ end }} href={{ .RelPermalink }} {{ .Title }}
+          {{ end }}
+    {{ end }}
+  {{ end }}
diff --git a/layouts/partials/twitter_cards.ace b/layouts/partials/twitter_cards.ace
new file mode 100644
index 0000000..bf7be72
--- /dev/null
+++ b/layouts/partials/twitter_cards.ace
@@ -0,0 +1,20 @@
+{{ with .Param "twitter_title" | default .Title }}
+  meta name=twitter:title content={{ . }}
+{{ end }}
+
+{{ with .Param "twitterDescription" | default .Description | default (site.Param "description") }}
+  meta name=twitter:description content={{ . }}
+{{ end }}
+
+{{ with .Param "twitter_image" | default (site.Param "defaultTwitterImage") }}
+  meta name=twitter:card content=summary
+  / summary_large_image is not suitable
+  meta property=twitter:image content={{ . | absURL }}
+{{ end }}
+
+{{ with .Site.Social.twitter }}
+  meta name=twitter:site content=@{{ . }}
+{{ end }}
+
+meta name=twitter:site content=@{{ site.Param "twitterShareHandle" }}
+meta name=twitter:creator content=@{{ site.Param "twitterShareHandle" }}
diff --git a/layouts/shortcodes/carousel.ace b/layouts/shortcodes/carousel.ace
new file mode 100644
index 0000000..1e229eb
--- /dev/null
+++ b/layouts/shortcodes/carousel.ace
@@ -0,0 +1,2 @@
+.img-carousel
+  {{ .Inner | markdownify }}
\ No newline at end of file
diff --git a/layouts/shortcodes/drive.ace b/layouts/shortcodes/drive.ace
new file mode 100644
index 0000000..a763728
--- /dev/null
+++ b/layouts/shortcodes/drive.ace
@@ -0,0 +1,12 @@
+
+{{ $id := .Get 0 }}
+{{ $ratio := .Get "ratio" | default 1.6 }}
+{{ $height := div 100 $ratio | lang.NumFmt 2 | safeHTMLAttr }}
+
+{{ if $id }}
+  figure style="position: relative; padding-bottom: {{ $height }}%; height: 0; overflow: hidden;"
+    iframe style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" src="https://drive.google.com/file/d/{{ $id }}/preview" allowtransparency="true"
+{{ else }}
+  {{ errorf "missing id \"%s\" in drive shortcode for page \"%s\"" $id .Page.File.Path }}
+{{ end }}
+
diff --git a/layouts/shortcodes/figure.ace b/layouts/shortcodes/figure.ace
new file mode 100644
index 0000000..3673b3a
--- /dev/null
+++ b/layouts/shortcodes/figure.ace
@@ -0,0 +1,11 @@
+{{ $src := .Get "src" }}
+{{ $size := .Get "size" }}
+{{ $title := .Get "title" }}
+{{ $caption := .Get "caption" }}
+{{ $align := .Get "align" }}
+
+figure class="size-{{ $size }}" class="align-{{ $align }}"
+  img src={{ $src }} alt={{ $caption }} title={{ $title }}
+  {{ with $caption }}
+    figcaption {{ . }}
+  {{ end }} 
diff --git a/layouts/shortcodes/link.ace b/layouts/shortcodes/link.ace
new file mode 100644
index 0000000..713f8fd
--- /dev/null
+++ b/layouts/shortcodes/link.ace
@@ -0,0 +1,2 @@
+a href={{ .Get 0 | ref . }}
+  {{ .Inner | default (.Get 0 | ref . | absURL) }}
\ No newline at end of file
diff --git a/layouts/shortcodes/notebox.ace b/layouts/shortcodes/notebox.ace
new file mode 100644
index 0000000..fe68e83
--- /dev/null
+++ b/layouts/shortcodes/notebox.ace
@@ -0,0 +1,2 @@
+.notebox
+  {{ .Inner | markdownify }}
\ No newline at end of file
diff --git a/layouts/shortcodes/spotify.ace b/layouts/shortcodes/spotify.ace
new file mode 100644
index 0000000..122a28d
--- /dev/null
+++ b/layouts/shortcodes/spotify.ace
@@ -0,0 +1,4 @@
+{{ $id := .Get 0 }}
+
+.spotify-embed-container
+  iframe src="https://open.spotify.com/embed/episode/{{ $id }}" height="232" frameborder="0" allowtransparency="true" allow="encrypted-media"
diff --git a/layouts/shortcodes/video-gif.ace b/layouts/shortcodes/video-gif.ace
new file mode 100644
index 0000000..d15570a
--- /dev/null
+++ b/layouts/shortcodes/video-gif.ace
@@ -0,0 +1,24 @@
+/ ffmpeg -f gif -i DevJoke-1-2.gif -pix_fmt yuv420p -c:v libx264 -movflags +faststart -filter:v crop='floor(in_w/2)*2:floor(in_h/2)*2' DevJoke-1-2.mp4
+
+{{ $src := .Get "src" }}
+{{ $size := .Get "size" }}
+{{ $title := .Get "title" }}
+{{ $caption := .Get "caption" }}
+{{ $align := .Get "align" }}
+
+{{ $path := strings.TrimPrefix "/uploads/" $src }}
+{{ $i := (site.GetPage "section" "uploads").Resources.GetMatch $path }}
+
+{{ if $i }}
+  figure class="size-{{ $size }}" class="align-{{ $align }}"
+    video src={{ $i.RelPermalink }} loop= muted= autoplay= playsinline=
+    {{ with $caption }}
+      figcaption {{ . }}
+    {{ end }} 
+
+{{ else }}
+  {{ errorf "missing file for path \"%s\" in video-gif shortcode for page \"%s\"" $src .Page.File.Path }}
+{{ end }}
+
+
+
diff --git a/layouts/taxonomy/taxonomy.ace b/layouts/taxonomy/taxonomy.ace
new file mode 100644
index 0000000..a6e7d70
--- /dev/null
+++ b/layouts/taxonomy/taxonomy.ace
@@ -0,0 +1,2 @@
+= content main
+  p tax
diff --git a/layouts/taxonomy/terms.ace b/layouts/taxonomy/terms.ace
new file mode 100644
index 0000000..3ba0102
--- /dev/null
+++ b/layouts/taxonomy/terms.ace
@@ -0,0 +1,12 @@
+= content main
+  {{ .Content }}
+  ul
+    {{ $type := .Type }}
+    {{ range $name, $pages := .Data.Terms.ByCount }}
+      {{ $name := .Name }}
+      {{ $count := .Count }}
+      {{ with site.GetPage (printf "/%s/%s" $type ($name | urlize)) }}
+        li
+          a href={{ .RelPermalink }} {{ $name }} ({{ $count }})
+      {{ end }}
+    {{ end }}
diff --git a/readme.md b/readme.md
new file mode 100644
index 0000000..74c0a84
--- /dev/null
+++ b/readme.md
@@ -0,0 +1,72 @@
+# Development
+
+requires [Hugo static site generator](https://gohugo.io) latest from [releases page](https://github.com/gohugoio/hugo/releases) or with Homebrew
+
+```
+brew install hugo
+```
+
+For general info see [Hugo documentation](https://gohugo.io/documentation/).
+
+Content is in `content` in blackfriday markdown format ([basic markdown example](https://github.com/markdownlint/markdownlint/blob/master/example/markdown_spec.md));
+
+Layout templates are in `layouts` in ACE format instead of HTML ([documentation](https://github.com/yosssi/ace/blob/master/documentation/syntax.md)) and with go template syntax for "actions" ([Hugo documentation](https://gohugo.io/templates/introduction/)).
+
+## Preview
+
+Preview the site in http://localhost:1313/ by launching:
+```
+./serve.sh
+```
+
+It will usually refresh automatically when anything is changed.
+
+# Building
+
+```
+./build.sh
+```
+
+It builds the site to `./public/` folder - minified etc.
+That folder can be deployed.
+
+# Deploying
+
+## Bitbucket
+
+Run `deploy-to-production` pipeline on required branch. `./public/` folder will be deployed by bitbucket (by running `./ci-deploy.sh` script).
+
+## Manual
+
+Requires AWS credentials in environment variables (for updating S3).
+We currently have an user `codemagic-hugo-deploy` with access to required buckets (directly attached policies).
+
+```
+export AWS_ACCESS_KEY_ID=ACTUALACCESSKEY
+export AWS_SECRET_ACCESS_KEY=ACTUALSECRETACCESSKEY
+```
+
+For CloudFront invalidation, add distribution id
+
+```
+export CF_DISTRIBUTION_ID=ACTUAL_DIST_ID
+```
+
+prod builds need environment variable
+
+```
+HUGO_ENVIRONMENT=production
+```
+
+Requires s3deploy (can also download binary from [releases page](https://github.com/bep/s3deploy/releases/))
+
+```
+brew install bep/tap/s3deploy
+```
+
+Run the scripts:
+
+```
+./build.sh
+./deploy.sh
+```
diff --git a/serve.sh b/serve.sh
new file mode 100755
index 0000000..62b7dc9
--- /dev/null
+++ b/serve.sh
@@ -0,0 +1,15 @@
+#! /bin/sh
+
+set -ex
+
+cd "${0%/*}"
+
+rm -rf dist/
+
+hugo server \
+  --watch \
+  --bind 0.0.0.0 \
+  --disableFastRender \
+
+# omit --bind=0.0.0.0 or replace with --bind=localhost to hide on local network
+# it is enabled so you can preview the site in your mobile through wifi
diff --git a/static/robots.txt b/static/robots.txt
new file mode 100644
index 0000000..aa7f3e6
--- /dev/null
+++ b/static/robots.txt
@@ -0,0 +1,5 @@
+User-agent: *
+Allow: /
+
+User-agent: Twitterbot
+Allow: /
